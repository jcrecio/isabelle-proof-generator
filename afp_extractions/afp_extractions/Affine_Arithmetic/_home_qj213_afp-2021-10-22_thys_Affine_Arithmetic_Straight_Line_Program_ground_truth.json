{"file_name": "/home/qj213/afp-2021-10-22/thys/Affine_Arithmetic/Straight_Line_Program.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Affine_Arithmetic", "problem_names": ["lemma interpret_slp_snoc[simp]:\n  \"interpret_slp (slp @ [fa]) xs = interpret_floatarith fa (interpret_slp slp xs)#interpret_slp slp xs\"", "lemma\n  binop_slp_of_fa_induction_step:\n  assumes\n    Binop_IH1:\n    \"\\<And>M slp M' slp'. slp_of_fa fa1 M slp = (M', slp') \\<Longrightarrow>\n    (\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> subterms f \\<subseteq> Mapping.keys M) \\<Longrightarrow>\n    (\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> the (Mapping.lookup M f) < length slp) \\<Longrightarrow>\n    (\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> interpret_slp slp xs ! slp_index_lookup slp M f = interpret_floatarith f xs) \\<Longrightarrow>\n    subterms fa1 \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'. subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f = interpret_floatarith f xs)\"\n    and\n    Binop_IH2:\n    \"\\<And>M slp M' slp'. slp_of_fa fa2 M slp = (M', slp') \\<Longrightarrow>\n    (\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> subterms f \\<subseteq> Mapping.keys M) \\<Longrightarrow>\n    (\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> the (Mapping.lookup M f) < length slp) \\<Longrightarrow>\n    (\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> interpret_slp slp xs ! slp_index_lookup slp M f = interpret_floatarith f xs) \\<Longrightarrow>\n    subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'. subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f = interpret_floatarith f xs)\"\n    and Binop_prems:\n    \"(case slp_of_fa fa1 M slp of\n      (M1, slp1) \\<Rightarrow>\n       case slp_of_fa fa2 M1 slp1 of (x, xa) \\<Rightarrow> slp_of_fa_bin Binop fa1 fa2 M slp x xa) = (M', slp')\"\n    \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> subterms f \\<subseteq> Mapping.keys M\"\n    \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> the (Mapping.lookup M f) < length slp\"\n    \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> interpret_slp slp xs ! slp_index_lookup slp M f = interpret_floatarith f xs\"\n  assumes subterms_Binop[simp]:\n    \"\\<And>a b. subterms (Binop a b) = insert (Binop a b) (subterms a \\<union> subterms b)\"\n  assumes interpret_Binop[simp]:\n    \"\\<And>a b xs. interpret_floatarith (Binop a b) xs = binop (interpret_floatarith a xs) (interpret_floatarith b xs)\"\nshows \"insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'. subterms f \\<subseteq> Mapping.keys M' \\<and>\n       the (Mapping.lookup M' f) < length slp' \\<and>\n       interpret_slp slp' xs ! slp_index_lookup slp' M' f  = interpret_floatarith f xs)\"", "lemma\n  unop_slp_of_fa_induction_step:\n  assumes\n    Unop_IH1:\n    \"\\<And>M slp M' slp'. slp_of_fa fa1 M slp = (M', slp') \\<Longrightarrow>\n    (\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> subterms f \\<subseteq> Mapping.keys M) \\<Longrightarrow>\n    (\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> the (Mapping.lookup M f) < length slp) \\<Longrightarrow>\n    (\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> interpret_slp slp xs ! slp_index_lookup slp M f = interpret_floatarith f xs) \\<Longrightarrow>\n    subterms fa1 \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'. subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f = interpret_floatarith f xs)\"\n    and Unop_prems:\n    \"(case slp_of_fa fa1 M slp of (M1, slp1) \\<Rightarrow> slp_of_fa_un Unop fa1 M slp M1 slp1) = (M', slp')\"\n    \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> subterms f \\<subseteq> Mapping.keys M\"\n    \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> the (Mapping.lookup M f) < length slp\"\n    \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> interpret_slp slp xs ! slp_index_lookup slp M f = interpret_floatarith f xs\"\n  assumes subterms_Unop[simp]:\n    \"\\<And>a b. subterms (Unop a) = insert (Unop a) (subterms a)\"\n  assumes interpret_Unop[simp]:\n    \"\\<And>a b xs. interpret_floatarith (Unop a) xs = unop (interpret_floatarith a xs)\"\nshows \"insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'. subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp'  \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f = interpret_floatarith f xs)\"", "lemma\n  cnst_slp_of_fa_induction_step:\n  assumes *:\n    \"slp_of_fa_cnst Unop Unop' M slp = (M', slp')\"\n    \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> subterms f \\<subseteq> Mapping.keys M\"\n    \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> the (Mapping.lookup M f) < length slp\"\n    \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> interpret_slp slp xs ! slp_index_lookup slp M f = interpret_floatarith f xs\"\n  assumes subterms_Unop[simp]:\n    \"\\<And>a b. subterms (Unop) = {Unop}\"\n  assumes interpret_Unop[simp]:\n    \"interpret_floatarith Unop xs = unop xs\"\n    \"interpret_floatarith Unop' (interpret_slp slp xs) = unop xs\"\n  assumes ui: \"unop (interpret_slp slp xs) = unop xs\"\n  shows \"{Unop} \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'. subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f = interpret_floatarith f xs)\"", "lemma interpret_slp_nth:\n  \"n \\<ge> length slp \\<Longrightarrow> interpret_slp slp xs ! n = xs ! (n - length slp)\"", "theorem\n  interpret_slp_of_fa:\n  assumes \"slp_of_fa fa M slp = (M', slp')\"\n  assumes \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> subterms f \\<subseteq> Mapping.keys M\"\n  assumes \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> (the (Mapping.lookup M f)) < length slp\"\n  assumes \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> interpret_slp slp xs ! slp_index_lookup slp M f = interpret_floatarith f xs\"\n  shows \"subterms fa \\<subseteq> Mapping.keys M' \\<and> Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f \\<in> Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      (interpret_slp slp' xs ! slp_index_lookup slp' M' f = interpret_floatarith f xs))\"", "theorem\n  interpret_slp_of_fas':\n  assumes \"slp_of_fas' fas M slp = (M', slp')\"\n  assumes \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> subterms f \\<subseteq> Mapping.keys M\"\n  assumes \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> the (Mapping.lookup M f) < length slp\"\n  assumes \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> interpret_slp slp xs ! slp_index_lookup slp M f = interpret_floatarith f xs\"\n  shows \"\\<Union>(subterms ` set fas) \\<subseteq> Mapping.keys M' \\<and> Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f \\<in> Mapping.keys M'. subterms f \\<subseteq> Mapping.keys M' \\<and>\n      (the (Mapping.lookup M' f) < length slp') \\<and>\n      (interpret_slp slp' xs ! slp_index_lookup slp' M' f = interpret_floatarith f xs))\"", "lemma length_interpret_slp[simp]:\n  \"length (interpret_slp slp xs) = length slp + length xs\"", "lemma length_interpret_floatariths[simp]:\n  \"length (interpret_floatariths slp xs) = length slp\"", "lemma interpret_slp_append[simp]:\n  \"interpret_slp (slp1 @ slp2) xs =\n    interpret_slp slp2 (interpret_slp slp1 xs)\"", "lemma \"interpret_slp (map Var [a + 0, b + 1, c + 2, d + 3]) xs =\n  (rev (map (\\<lambda>(i, e). xs ! (e - i)) (zip [0..<4] [a + 0, b + 1, c + 2, d + 3])))@xs\"", "lemma aC_eq_aa: \"xs @ y # zs = (xs @ [y]) @ zs\"", "lemma\n  interpret_slp_map_Var:\n  assumes \"\\<And>i. i < length is \\<Longrightarrow> is ! i \\<ge> i\"\n  assumes \"\\<And>i. i < length is \\<Longrightarrow> (is ! i - i) < length xs\"\n  shows \"interpret_slp (map Var is) xs =\n    (rev (map (\\<lambda>(i, e). xs ! (e - i)) (zip [0..<length is] is)))\n    @\n    xs\"", "theorem slp_of_fas:\n  \"take (length fas) (interpret_slp (slp_of_fas fas) xs) = interpret_floatariths fas xs\"", "lemma slp_indexl_length[simp]: \"slp_indexl (length xs) i = slp_index xs i\"", "lemma slp_indexl_lookup_length[simp]: \"slp_indexl_lookup (length xs) i = slp_index_lookup xs i\"", "lemma slp_index_rev[simp]: \"slp_index (rev xs) i = slp_index xs i\"", "lemma slp_index_lookup_rev[simp]: \"slp_index_lookup (rev xs) i = slp_index_lookup xs i\"", "lemma slp_of_fa_bin_slp_of_fa_rev_bin:\n  \"slp_of_fa_rev_bin Binop a b M slp (length slp) M2 slp2 (length slp2) =\n   (let (M, slp') = slp_of_fa_bin Binop a b M (rev slp) M2 (rev slp2) in (M, rev slp', length slp'))\"", "lemma slp_of_fa_un_slp_of_fa_rev_un:\n  \"slp_of_fa_rev_un Binop a M slp (length slp) M2 slp2 (length slp2) =\n   (let (M, slp') = slp_of_fa_un Binop a M (rev slp) M2 (rev slp2) in (M, rev slp', length slp'))\"", "lemma slp_of_fa_cnst_slp_of_fa_rev_cnst:\n  \"slp_of_fa_rev_cnst Cnst Cnst' M slp (length slp) =\n   (let (M, slp') = slp_of_fa_cnst Cnst Cnst' M (rev slp) in (M, rev slp', length slp'))\"", "lemma slp_of_fa_rev:\n  \"slp_of_fa_rev fa M slp (length slp) = (let (M, slp') = slp_of_fa fa M (rev slp) in (M, rev slp', length slp'))\"", "lemma slp_of_fa_code[code]:\n  \"slp_of_fa fa M slp = (let (M, slp', _) = slp_of_fa_rev fa M (rev slp) (length slp) in (M, rev slp'))\""], "translations": [["", "lemma interpret_slp_snoc[simp]:\n  \"interpret_slp (slp @ [fa]) xs = interpret_floatarith fa (interpret_slp slp xs)#interpret_slp slp xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_slp (slp @ [fa]) xs =\n    interpret_floatarith fa (interpret_slp slp xs) # interpret_slp slp xs", "by (induction slp arbitrary: fa xs) auto"], ["", "lemma\n  binop_slp_of_fa_induction_step:\n  assumes\n    Binop_IH1:\n    \"\\<And>M slp M' slp'. slp_of_fa fa1 M slp = (M', slp') \\<Longrightarrow>\n    (\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> subterms f \\<subseteq> Mapping.keys M) \\<Longrightarrow>\n    (\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> the (Mapping.lookup M f) < length slp) \\<Longrightarrow>\n    (\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> interpret_slp slp xs ! slp_index_lookup slp M f = interpret_floatarith f xs) \\<Longrightarrow>\n    subterms fa1 \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'. subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f = interpret_floatarith f xs)\"\n    and\n    Binop_IH2:\n    \"\\<And>M slp M' slp'. slp_of_fa fa2 M slp = (M', slp') \\<Longrightarrow>\n    (\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> subterms f \\<subseteq> Mapping.keys M) \\<Longrightarrow>\n    (\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> the (Mapping.lookup M f) < length slp) \\<Longrightarrow>\n    (\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> interpret_slp slp xs ! slp_index_lookup slp M f = interpret_floatarith f xs) \\<Longrightarrow>\n    subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'. subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f = interpret_floatarith f xs)\"\n    and Binop_prems:\n    \"(case slp_of_fa fa1 M slp of\n      (M1, slp1) \\<Rightarrow>\n       case slp_of_fa fa2 M1 slp1 of (x, xa) \\<Rightarrow> slp_of_fa_bin Binop fa1 fa2 M slp x xa) = (M', slp')\"\n    \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> subterms f \\<subseteq> Mapping.keys M\"\n    \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> the (Mapping.lookup M f) < length slp\"\n    \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> interpret_slp slp xs ! slp_index_lookup slp M f = interpret_floatarith f xs\"\n  assumes subterms_Binop[simp]:\n    \"\\<And>a b. subterms (Binop a b) = insert (Binop a b) (subterms a \\<union> subterms b)\"\n  assumes interpret_Binop[simp]:\n    \"\\<And>a b xs. interpret_floatarith (Binop a b) xs = binop (interpret_floatarith a xs) (interpret_floatarith b xs)\"\nshows \"insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'. subterms f \\<subseteq> Mapping.keys M' \\<and>\n       the (Mapping.lookup M' f) < length slp' \\<and>\n       interpret_slp slp' xs ! slp_index_lookup slp' M' f  = interpret_floatarith f xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n    \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n    \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "from Binop_prems"], ["proof (chain)\npicking this:\n  (case slp_of_fa fa1 M slp of\n   (M1, slp1) \\<Rightarrow>\n     case slp_of_fa fa2 M1 slp1 of\n     (x, xa) \\<Rightarrow> slp_of_fa_bin Binop fa1 fa2 M slp x xa) =\n  (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs", "obtain M1 slp1 M2 slp2 where *:\n    \"slp_of_fa fa1 M slp = (M1, slp1)\"\n    \"slp_of_fa fa2 M1 slp1 = (M2, slp2)\"\n    \"slp_of_fa_bin Binop fa1 fa2 M slp M2 slp2 = (M', slp')\""], ["proof (prove)\nusing this:\n  (case slp_of_fa fa1 M slp of\n   (M1, slp1) \\<Rightarrow>\n     case slp_of_fa fa2 M1 slp1 of\n     (x, xa) \\<Rightarrow> slp_of_fa_bin Binop fa1 fa2 M slp x xa) =\n  (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. (\\<And>M1 slp1 M2 slp2.\n        \\<lbrakk>slp_of_fa fa1 M slp = (M1, slp1);\n         slp_of_fa fa2 M1 slp1 = (M2, slp2);\n         slp_of_fa_bin Binop fa1 fa2 M slp M2 slp2 = (M', slp')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto split: prod.splits)"], ["proof (state)\nthis:\n  slp_of_fa fa1 M slp = (M1, slp1)\n  slp_of_fa fa2 M1 slp1 = (M2, slp2)\n  slp_of_fa_bin Binop fa1 fa2 M slp M2 slp2 = (M', slp')\n\ngoal (1 subgoal):\n 1. insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n    \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "from Binop_IH1[OF *(1) Binop_prems(2) Binop_prems(3) Binop_prems(4), simplified]"], ["proof (chain)\npicking this:\n  subterms fa1 \\<subseteq> Mapping.keys M1 \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M1 \\<and>\n  (\\<forall>f\\<in>Mapping.keys M1.\n      subterms f \\<subseteq> Mapping.keys M1 \\<and>\n      the (Mapping.lookup M1 f) < length slp1 \\<and>\n      interpret_slp slp1 xs ! slp_index_lookup slp1 M1 f =\n      interpret_floatarith f xs)", "have IH1:\n    \"f \\<in> subterms fa1 \\<Longrightarrow> f \\<in> Mapping.keys M1\"\n    \"f \\<in> Mapping.keys M \\<Longrightarrow> f \\<in> Mapping.keys M1\"\n    \"f \\<in> Mapping.keys M1 \\<Longrightarrow> subterms f \\<subseteq> Mapping.keys M1\"\n    \"f \\<in> Mapping.keys M1 \\<Longrightarrow> the (Mapping.lookup M1 f) < length slp1\"\n    \"f \\<in> Mapping.keys M1 \\<Longrightarrow> interpret_slp slp1 xs ! slp_index_lookup slp1 M1 f  = interpret_floatarith f xs\"\n    for f"], ["proof (prove)\nusing this:\n  subterms fa1 \\<subseteq> Mapping.keys M1 \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M1 \\<and>\n  (\\<forall>f\\<in>Mapping.keys M1.\n      subterms f \\<subseteq> Mapping.keys M1 \\<and>\n      the (Mapping.lookup M1 f) < length slp1 \\<and>\n      interpret_slp slp1 xs ! slp_index_lookup slp1 M1 f =\n      interpret_floatarith f xs)\n\ngoal (1 subgoal):\n 1. ((f \\<in> subterms fa1 \\<Longrightarrow> f \\<in> Mapping.keys M1) &&&\n     (f \\<in> Mapping.keys M \\<Longrightarrow> f \\<in> Mapping.keys M1)) &&&\n    (f \\<in> Mapping.keys M1 \\<Longrightarrow>\n     subterms f \\<subseteq> Mapping.keys M1) &&&\n    (f \\<in> Mapping.keys M1 \\<Longrightarrow>\n     the (Mapping.lookup M1 f) < length slp1) &&&\n    (f \\<in> Mapping.keys M1 \\<Longrightarrow>\n     interpret_slp slp1 xs ! slp_index_lookup slp1 M1 f =\n     interpret_floatarith f xs)", "by (auto simp: subset_iff)"], ["proof (state)\nthis:\n  ?f \\<in> subterms fa1 \\<Longrightarrow> ?f \\<in> Mapping.keys M1\n  ?f \\<in> Mapping.keys M \\<Longrightarrow> ?f \\<in> Mapping.keys M1\n  ?f \\<in> Mapping.keys M1 \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M1\n  ?f \\<in> Mapping.keys M1 \\<Longrightarrow>\n  the (Mapping.lookup M1 ?f) < length slp1\n  ?f \\<in> Mapping.keys M1 \\<Longrightarrow>\n  interpret_slp slp1 xs ! slp_index_lookup slp1 M1 ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n    \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "from Binop_IH2[OF *(2) IH1(3) IH1(4) IH1(5)]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>f.\n              f \\<in> Mapping.keys M1 \\<Longrightarrow>\n              f \\<in> Mapping.keys M1;\n   \\<And>f.\n      f \\<in> Mapping.keys M1 \\<Longrightarrow> f \\<in> Mapping.keys M1;\n   \\<And>f.\n      f \\<in> Mapping.keys M1 \\<Longrightarrow>\n      f \\<in> Mapping.keys M1\\<rbrakk>\n  \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M2 \\<and>\n                    Mapping.keys M1 \\<subseteq> Mapping.keys M2 \\<and>\n                    (\\<forall>f\\<in>Mapping.keys M2.\n                        subterms f \\<subseteq> Mapping.keys M2 \\<and>\n                        the (Mapping.lookup M2 f) < length slp2 \\<and>\n                        interpret_slp slp2 xs ! slp_index_lookup slp2 M2 f =\n                        interpret_floatarith f xs)", "have IH2:\n    \"f \\<in> subterms fa2 \\<Longrightarrow> f \\<in> Mapping.keys M2\"\n    \"f \\<in> Mapping.keys M1 \\<Longrightarrow> f \\<in> Mapping.keys M2\"\n    \"f \\<in> Mapping.keys M2 \\<Longrightarrow> subterms f \\<subseteq> Mapping.keys M2\"\n    \"f \\<in> Mapping.keys M2 \\<Longrightarrow> the (Mapping.lookup M2 f) < length slp2\"\n    \"f \\<in> Mapping.keys M2 \\<Longrightarrow> interpret_slp slp2 xs ! slp_index_lookup slp2 M2 f = interpret_floatarith f xs\"\n    for f"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>f.\n              f \\<in> Mapping.keys M1 \\<Longrightarrow>\n              f \\<in> Mapping.keys M1;\n   \\<And>f.\n      f \\<in> Mapping.keys M1 \\<Longrightarrow> f \\<in> Mapping.keys M1;\n   \\<And>f.\n      f \\<in> Mapping.keys M1 \\<Longrightarrow>\n      f \\<in> Mapping.keys M1\\<rbrakk>\n  \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M2 \\<and>\n                    Mapping.keys M1 \\<subseteq> Mapping.keys M2 \\<and>\n                    (\\<forall>f\\<in>Mapping.keys M2.\n                        subterms f \\<subseteq> Mapping.keys M2 \\<and>\n                        the (Mapping.lookup M2 f) < length slp2 \\<and>\n                        interpret_slp slp2 xs ! slp_index_lookup slp2 M2 f =\n                        interpret_floatarith f xs)\n\ngoal (1 subgoal):\n 1. ((f \\<in> subterms fa2 \\<Longrightarrow> f \\<in> Mapping.keys M2) &&&\n     (f \\<in> Mapping.keys M1 \\<Longrightarrow>\n      f \\<in> Mapping.keys M2)) &&&\n    (f \\<in> Mapping.keys M2 \\<Longrightarrow>\n     subterms f \\<subseteq> Mapping.keys M2) &&&\n    (f \\<in> Mapping.keys M2 \\<Longrightarrow>\n     the (Mapping.lookup M2 f) < length slp2) &&&\n    (f \\<in> Mapping.keys M2 \\<Longrightarrow>\n     interpret_slp slp2 xs ! slp_index_lookup slp2 M2 f =\n     interpret_floatarith f xs)", "by (auto simp: subset_iff)"], ["proof (state)\nthis:\n  ?f \\<in> subterms fa2 \\<Longrightarrow> ?f \\<in> Mapping.keys M2\n  ?f \\<in> Mapping.keys M1 \\<Longrightarrow> ?f \\<in> Mapping.keys M2\n  ?f \\<in> Mapping.keys M2 \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M2\n  ?f \\<in> Mapping.keys M2 \\<Longrightarrow>\n  the (Mapping.lookup M2 ?f) < length slp2\n  ?f \\<in> Mapping.keys M2 \\<Longrightarrow>\n  interpret_slp slp2 xs ! slp_index_lookup slp2 M2 ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n    \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n    \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "proof (cases \"Mapping.lookup M (Binop fa1 fa2)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Mapping.lookup M (Binop fa1 fa2) = None \\<Longrightarrow>\n    insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n    \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)\n 2. \\<And>a.\n       Mapping.lookup M (Binop fa1 fa2) = Some a \\<Longrightarrow>\n       insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n       \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "case None"], ["proof (state)\nthis:\n  Mapping.lookup M (Binop fa1 fa2) = None\n\ngoal (2 subgoals):\n 1. Mapping.lookup M (Binop fa1 fa2) = None \\<Longrightarrow>\n    insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n    \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)\n 2. \\<And>a.\n       Mapping.lookup M (Binop fa1 fa2) = Some a \\<Longrightarrow>\n       insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n       \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "then"], ["proof (chain)\npicking this:\n  Mapping.lookup M (Binop fa1 fa2) = None", "have M': \"M' = Mapping.update (Binop fa1 fa2) (length slp2) M2\"\n      and slp': \"slp' = slp2 @ [Binop (Var (slp_index_lookup slp2 M2 fa1)) (Var (slp_index_lookup slp2 M2 fa2))]\""], ["proof (prove)\nusing this:\n  Mapping.lookup M (Binop fa1 fa2) = None\n\ngoal (1 subgoal):\n 1. M' = Mapping.update (Binop fa1 fa2) (length slp2) M2 &&&\n    slp' =\n    slp2 @\n    [Binop (Var (slp_index_lookup slp2 M2 fa1))\n      (Var (slp_index_lookup slp2 M2 fa2))]", "using *"], ["proof (prove)\nusing this:\n  Mapping.lookup M (Binop fa1 fa2) = None\n  slp_of_fa fa1 M slp = (M1, slp1)\n  slp_of_fa fa2 M1 slp1 = (M2, slp2)\n  slp_of_fa_bin Binop fa1 fa2 M slp M2 slp2 = (M', slp')\n\ngoal (1 subgoal):\n 1. M' = Mapping.update (Binop fa1 fa2) (length slp2) M2 &&&\n    slp' =\n    slp2 @\n    [Binop (Var (slp_index_lookup slp2 M2 fa1))\n      (Var (slp_index_lookup slp2 M2 fa2))]", "by (auto simp: slp_of_fa_bin_def)"], ["proof (state)\nthis:\n  M' = Mapping.update (Binop fa1 fa2) (length slp2) M2\n  slp' =\n  slp2 @\n  [Binop (Var (slp_index_lookup slp2 M2 fa1))\n    (Var (slp_index_lookup slp2 M2 fa2))]\n\ngoal (2 subgoals):\n 1. Mapping.lookup M (Binop fa1 fa2) = None \\<Longrightarrow>\n    insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n    \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)\n 2. \\<And>a.\n       Mapping.lookup M (Binop fa1 fa2) = Some a \\<Longrightarrow>\n       insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n       \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have \"Mapping.keys M \\<subseteq> Mapping.keys M'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mapping.keys M \\<subseteq> Mapping.keys M'", "using IH1 IH2"], ["proof (prove)\nusing this:\n  ?f \\<in> subterms fa1 \\<Longrightarrow> ?f \\<in> Mapping.keys M1\n  ?f \\<in> Mapping.keys M \\<Longrightarrow> ?f \\<in> Mapping.keys M1\n  ?f \\<in> Mapping.keys M1 \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M1\n  ?f \\<in> Mapping.keys M1 \\<Longrightarrow>\n  the (Mapping.lookup M1 ?f) < length slp1\n  ?f \\<in> Mapping.keys M1 \\<Longrightarrow>\n  interpret_slp slp1 xs ! slp_index_lookup slp1 M1 ?f =\n  interpret_floatarith ?f xs\n  ?f \\<in> subterms fa2 \\<Longrightarrow> ?f \\<in> Mapping.keys M2\n  ?f \\<in> Mapping.keys M1 \\<Longrightarrow> ?f \\<in> Mapping.keys M2\n  ?f \\<in> Mapping.keys M2 \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M2\n  ?f \\<in> Mapping.keys M2 \\<Longrightarrow>\n  the (Mapping.lookup M2 ?f) < length slp2\n  ?f \\<in> Mapping.keys M2 \\<Longrightarrow>\n  interpret_slp slp2 xs ! slp_index_lookup slp2 M2 ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. Mapping.keys M \\<subseteq> Mapping.keys M'", "by (auto simp: M')"], ["proof (state)\nthis:\n  Mapping.keys M \\<subseteq> Mapping.keys M'\n\ngoal (2 subgoals):\n 1. Mapping.lookup M (Binop fa1 fa2) = None \\<Longrightarrow>\n    insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n    \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)\n 2. \\<And>a.\n       Mapping.lookup M (Binop fa1 fa2) = Some a \\<Longrightarrow>\n       insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n       \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have \"Binop fa1 fa2 \\<in> Mapping.keys M'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Binop fa1 fa2 \\<in> Mapping.keys M'", "using M'"], ["proof (prove)\nusing this:\n  M' = Mapping.update (Binop fa1 fa2) (length slp2) M2\n\ngoal (1 subgoal):\n 1. Binop fa1 fa2 \\<in> Mapping.keys M'", "by auto"], ["proof (state)\nthis:\n  Binop fa1 fa2 \\<in> Mapping.keys M'\n\ngoal (2 subgoals):\n 1. Mapping.lookup M (Binop fa1 fa2) = None \\<Longrightarrow>\n    insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n    \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)\n 2. \\<And>a.\n       Mapping.lookup M (Binop fa1 fa2) = Some a \\<Longrightarrow>\n       insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n       \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have M'_0: \"Mapping.lookup M' (Binop fa1 fa2) = Some (length slp2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mapping.lookup M' (Binop fa1 fa2) = Some (length slp2)", "by (auto simp: M' lookup_update)"], ["proof (state)\nthis:\n  Mapping.lookup M' (Binop fa1 fa2) = Some (length slp2)\n\ngoal (2 subgoals):\n 1. Mapping.lookup M (Binop fa1 fa2) = None \\<Longrightarrow>\n    insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n    \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)\n 2. \\<And>a.\n       Mapping.lookup M (Binop fa1 fa2) = Some a \\<Longrightarrow>\n       insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n       \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have fa1: \"fa1 \\<in> Mapping.keys M2\" and fa2: \"fa2 \\<in> Mapping.keys M2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fa1 \\<in> Mapping.keys M2 &&& fa2 \\<in> Mapping.keys M2", "by (force intro: IH2 IH1)+"], ["proof (state)\nthis:\n  fa1 \\<in> Mapping.keys M2\n  fa2 \\<in> Mapping.keys M2\n\ngoal (2 subgoals):\n 1. Mapping.lookup M (Binop fa1 fa2) = None \\<Longrightarrow>\n    insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n    \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)\n 2. \\<And>a.\n       Mapping.lookup M (Binop fa1 fa2) = Some a \\<Longrightarrow>\n       insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n       \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have rew: \"binop (interpret_slp slp2 xs ! slp_index_lookup slp2 M2 fa1) (interpret_slp slp2 xs ! slp_index_lookup slp2 M2 fa2) =\n      binop (interpret_floatarith fa1 xs) (interpret_floatarith fa2 xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. binop (interpret_slp slp2 xs ! slp_index_lookup slp2 M2 fa1)\n     (interpret_slp slp2 xs ! slp_index_lookup slp2 M2 fa2) =\n    binop (interpret_floatarith fa1 xs) (interpret_floatarith fa2 xs)", "by (auto simp: IH2 fa1)"], ["proof (state)\nthis:\n  binop (interpret_slp slp2 xs ! slp_index_lookup slp2 M2 fa1)\n   (interpret_slp slp2 xs ! slp_index_lookup slp2 M2 fa2) =\n  binop (interpret_floatarith fa1 xs) (interpret_floatarith fa2 xs)\n\ngoal (2 subgoals):\n 1. Mapping.lookup M (Binop fa1 fa2) = None \\<Longrightarrow>\n    insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n    \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)\n 2. \\<And>a.\n       Mapping.lookup M (Binop fa1 fa2) = Some a \\<Longrightarrow>\n       insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n       \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n    \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "apply (auto )"], ["proof (prove)\ngoal (7 subgoals):\n 1. Binop fa1 fa2 \\<in> Mapping.keys M'\n 2. \\<And>x. x \\<in> subterms fa1 \\<Longrightarrow> x \\<in> Mapping.keys M'\n 3. \\<And>x. x \\<in> subterms fa2 \\<Longrightarrow> x \\<in> Mapping.keys M'\n 4. \\<And>x.\n       x \\<in> Mapping.keys M \\<Longrightarrow> x \\<in> Mapping.keys M'\n 5. \\<And>f x.\n       \\<lbrakk>f \\<in> Mapping.keys M'; x \\<in> subterms f\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Mapping.keys M'\n 6. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       the (Mapping.lookup M' f) < length slp'\n 7. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n       interpret_floatarith f xs", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. Binop fa1 fa2 \\<in> Mapping.keys M'", "by fact"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x. x \\<in> subterms fa1 \\<Longrightarrow> x \\<in> Mapping.keys M'\n 2. \\<And>x. x \\<in> subterms fa2 \\<Longrightarrow> x \\<in> Mapping.keys M'\n 3. \\<And>x.\n       x \\<in> Mapping.keys M \\<Longrightarrow> x \\<in> Mapping.keys M'\n 4. \\<And>f x.\n       \\<lbrakk>f \\<in> Mapping.keys M'; x \\<in> subterms f\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Mapping.keys M'\n 5. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       the (Mapping.lookup M' f) < length slp'\n 6. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n       interpret_floatarith f xs", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> subterms fa1 \\<Longrightarrow> x_ \\<in> Mapping.keys M'", "unfolding M'"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> subterms fa1 \\<Longrightarrow>\n    x_ \\<in> Mapping.keys (Mapping.update (Binop fa1 fa2) (length slp2) M2)", "apply (simp add: )"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> subterms fa1 \\<Longrightarrow>\n    x_ = Binop fa1 fa2 \\<or> x_ \\<in> Mapping.keys M2", "apply (rule disjI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> subterms fa1 \\<Longrightarrow> x_ \\<in> Mapping.keys M2", "apply (rule IH2(2))"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> subterms fa1 \\<Longrightarrow> x_ \\<in> Mapping.keys M1", "apply (rule IH1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> subterms fa1 \\<Longrightarrow> x_ \\<in> subterms fa1", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x. x \\<in> subterms fa2 \\<Longrightarrow> x \\<in> Mapping.keys M'\n 2. \\<And>x.\n       x \\<in> Mapping.keys M \\<Longrightarrow> x \\<in> Mapping.keys M'\n 3. \\<And>f x.\n       \\<lbrakk>f \\<in> Mapping.keys M'; x \\<in> subterms f\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Mapping.keys M'\n 4. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       the (Mapping.lookup M' f) < length slp'\n 5. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n       interpret_floatarith f xs", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> subterms fa2 \\<Longrightarrow> x_ \\<in> Mapping.keys M'", "unfolding M'"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> subterms fa2 \\<Longrightarrow>\n    x_ \\<in> Mapping.keys (Mapping.update (Binop fa1 fa2) (length slp2) M2)", "apply (simp add: )"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> subterms fa2 \\<Longrightarrow>\n    x_ = Binop fa1 fa2 \\<or> x_ \\<in> Mapping.keys M2", "apply (rule disjI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> subterms fa2 \\<Longrightarrow> x_ \\<in> Mapping.keys M2", "apply (rule IH2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> subterms fa2 \\<Longrightarrow> x_ \\<in> subterms fa2", "by simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> Mapping.keys M \\<Longrightarrow> x \\<in> Mapping.keys M'\n 2. \\<And>f x.\n       \\<lbrakk>f \\<in> Mapping.keys M'; x \\<in> subterms f\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Mapping.keys M'\n 3. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       the (Mapping.lookup M' f) < length slp'\n 4. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n       interpret_floatarith f xs", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> Mapping.keys M \\<Longrightarrow> x_ \\<in> Mapping.keys M'", "unfolding M'"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> Mapping.keys M \\<Longrightarrow>\n    x_ \\<in> Mapping.keys (Mapping.update (Binop fa1 fa2) (length slp2) M2)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> Mapping.keys M \\<Longrightarrow>\n    x_ = Binop fa1 fa2 \\<or> x_ \\<in> Mapping.keys M2", "apply (rule disjI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> Mapping.keys M \\<Longrightarrow> x_ \\<in> Mapping.keys M2", "apply (rule IH2(2))"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> Mapping.keys M \\<Longrightarrow> x_ \\<in> Mapping.keys M1", "apply (rule IH1(2))"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> Mapping.keys M \\<Longrightarrow> x_ \\<in> Mapping.keys M", "by simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>f x.\n       \\<lbrakk>f \\<in> Mapping.keys M'; x \\<in> subterms f\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Mapping.keys M'\n 2. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       the (Mapping.lookup M' f) < length slp'\n 3. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n       interpret_floatarith f xs", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f_ \\<in> Mapping.keys M'; x_ \\<in> subterms f_\\<rbrakk>\n    \\<Longrightarrow> x_ \\<in> Mapping.keys M'", "unfolding M'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f_ \\<in> Mapping.keys\n                       (Mapping.update (Binop fa1 fa2) (length slp2) M2);\n     x_ \\<in> subterms f_\\<rbrakk>\n    \\<Longrightarrow> x_ \\<in> Mapping.keys\n                                (Mapping.update (Binop fa1 fa2)\n                                  (length slp2) M2)", "apply auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>x_ \\<notin> Mapping.keys M2; f_ = Binop fa1 fa2;\n     x_ \\<in> subterms fa1\\<rbrakk>\n    \\<Longrightarrow> x_ = Binop fa1 fa2\n 2. \\<lbrakk>x_ \\<notin> Mapping.keys M2; f_ = Binop fa1 fa2;\n     x_ \\<in> subterms fa2\\<rbrakk>\n    \\<Longrightarrow> x_ = Binop fa1 fa2\n 3. \\<lbrakk>x_ \\<in> subterms f_; x_ \\<notin> Mapping.keys M2;\n     f_ \\<in> Mapping.keys M2\\<rbrakk>\n    \\<Longrightarrow> x_ = Binop fa1 fa2", "apply (simp add: IH1(1) IH2(2))"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x_ \\<notin> Mapping.keys M2; f_ = Binop fa1 fa2;\n     x_ \\<in> subterms fa2\\<rbrakk>\n    \\<Longrightarrow> x_ = Binop fa1 fa2\n 2. \\<lbrakk>x_ \\<in> subterms f_; x_ \\<notin> Mapping.keys M2;\n     f_ \\<in> Mapping.keys M2\\<rbrakk>\n    \\<Longrightarrow> x_ = Binop fa1 fa2", "apply (simp add: IH1(2) IH2(1))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<in> subterms f_; x_ \\<notin> Mapping.keys M2;\n     f_ \\<in> Mapping.keys M2\\<rbrakk>\n    \\<Longrightarrow> x_ = Binop fa1 fa2", "using IH2(3)"], ["proof (prove)\nusing this:\n  ?f \\<in> Mapping.keys M2 \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<in> subterms f_; x_ \\<notin> Mapping.keys M2;\n     f_ \\<in> Mapping.keys M2\\<rbrakk>\n    \\<Longrightarrow> x_ = Binop fa1 fa2", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       the (Mapping.lookup M' f) < length slp'\n 2. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n       interpret_floatarith f xs", "subgoal for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys M' \\<Longrightarrow>\n    the (Mapping.lookup M' f) < length slp'", "unfolding M' slp'"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys\n             (Mapping.update (Binop fa1 fa2) (length slp2)\n               M2) \\<Longrightarrow>\n    the (Mapping.lookup (Mapping.update (Binop fa1 fa2) (length slp2) M2) f)\n    < length\n       (slp2 @\n        [Binop (Var (slp_index_lookup slp2 M2 fa1))\n          (Var (slp_index_lookup slp2 M2 fa2))])", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. f = Binop fa1 fa2 \\<or> f \\<in> Mapping.keys M2 \\<Longrightarrow>\n    the (Mapping.lookup (Mapping.update (Binop fa1 fa2) (length slp2) M2) f)\n    < Suc (length slp2)", "apply (auto simp add: lookup_update' rew lookup_map_values slp_index_lookup_def slp_index_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Binop fa1 fa2 \\<noteq> f; f \\<in> Mapping.keys M2\\<rbrakk>\n    \\<Longrightarrow> the (Mapping.lookup M2 f) < Suc (length slp2)", "by (simp add: IH2(4) less_Suc_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n       interpret_floatarith f xs", "subgoal for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys M' \\<Longrightarrow>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs", "unfolding M' slp'"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys\n             (Mapping.update (Binop fa1 fa2) (length slp2)\n               M2) \\<Longrightarrow>\n    interpret_slp\n     (slp2 @\n      [Binop (Var (slp_index_lookup slp2 M2 fa1))\n        (Var (slp_index_lookup slp2 M2 fa2))])\n     xs !\n    slp_index_lookup\n     (slp2 @\n      [Binop (Var (slp_index_lookup slp2 M2 fa1))\n        (Var (slp_index_lookup slp2 M2 fa2))])\n     (Mapping.update (Binop fa1 fa2) (length slp2) M2) f =\n    interpret_floatarith f xs", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. f = Binop fa1 fa2 \\<or> f \\<in> Mapping.keys M2 \\<Longrightarrow>\n    (binop (interpret_slp slp2 xs ! slp_index_lookup slp2 M2 fa1)\n      (interpret_slp slp2 xs ! slp_index_lookup slp2 M2 fa2) #\n     interpret_slp slp2 xs) !\n    slp_index_lookup\n     (slp2 @\n      [Binop (Var (slp_index_lookup slp2 M2 fa1))\n        (Var (slp_index_lookup slp2 M2 fa2))])\n     (Mapping.update (Binop fa1 fa2) (length slp2) M2) f =\n    interpret_floatarith f xs", "apply (subst rew)"], ["proof (prove)\ngoal (1 subgoal):\n 1. f = Binop fa1 fa2 \\<or> f \\<in> Mapping.keys M2 \\<Longrightarrow>\n    (binop (interpret_floatarith fa1 xs) (interpret_floatarith fa2 xs) #\n     interpret_slp slp2 xs) !\n    slp_index_lookup\n     (slp2 @\n      [Binop (Var (slp_index_lookup slp2 M2 fa1))\n        (Var (slp_index_lookup slp2 M2 fa2))])\n     (Mapping.update (Binop fa1 fa2) (length slp2) M2) f =\n    interpret_floatarith f xs", "apply (auto simp add: fa1 lookup_update' rew lookup_map_values slp_index_lookup_def slp_index_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> Mapping.keys M2; Binop fa1 fa2 \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> (binop (interpret_floatarith fa1 xs)\n                        (interpret_floatarith fa2 xs) #\n                       interpret_slp slp2 xs) !\n                      (length slp2 - the (Mapping.lookup M2 f)) =\n                      interpret_floatarith f xs", "apply (auto simp add: nth_Cons fa1 lookup_update' rew lookup_map_values slp_index_lookup_def slp_index_def\n            split: nat.splits)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>f \\<in> Mapping.keys M2; Binop fa1 fa2 \\<noteq> f;\n     length slp2 \\<le> the (Mapping.lookup M2 f)\\<rbrakk>\n    \\<Longrightarrow> binop (interpret_floatarith fa1 xs)\n                       (interpret_floatarith fa2 xs) =\n                      interpret_floatarith f xs\n 2. \\<And>x2.\n       \\<lbrakk>f \\<in> Mapping.keys M2; Binop fa1 fa2 \\<noteq> f;\n        length slp2 - the (Mapping.lookup M2 f) = Suc x2\\<rbrakk>\n       \\<Longrightarrow> interpret_slp slp2 xs ! x2 =\n                         interpret_floatarith f xs", "using IH2(4)"], ["proof (prove)\nusing this:\n  ?f \\<in> Mapping.keys M2 \\<Longrightarrow>\n  the (Mapping.lookup M2 ?f) < length slp2\n\ngoal (2 subgoals):\n 1. \\<lbrakk>f \\<in> Mapping.keys M2; Binop fa1 fa2 \\<noteq> f;\n     length slp2 \\<le> the (Mapping.lookup M2 f)\\<rbrakk>\n    \\<Longrightarrow> binop (interpret_floatarith fa1 xs)\n                       (interpret_floatarith fa2 xs) =\n                      interpret_floatarith f xs\n 2. \\<And>x2.\n       \\<lbrakk>f \\<in> Mapping.keys M2; Binop fa1 fa2 \\<noteq> f;\n        length slp2 - the (Mapping.lookup M2 f) = Suc x2\\<rbrakk>\n       \\<Longrightarrow> interpret_slp slp2 xs ! x2 =\n                         interpret_floatarith f xs", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>f \\<in> Mapping.keys M2; Binop fa1 fa2 \\<noteq> f;\n        length slp2 - the (Mapping.lookup M2 f) = Suc x2\\<rbrakk>\n       \\<Longrightarrow> interpret_slp slp2 xs ! x2 =\n                         interpret_floatarith f xs", "by (metis IH2(4) IH2(5) Suc_diff_Suc Suc_inject slp_index_def slp_index_lookup_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n  \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Binop fa1 fa2) = Some a \\<Longrightarrow>\n       insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n       \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Binop fa1 fa2) = Some a \\<Longrightarrow>\n       insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n       \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "case (Some C)"], ["proof (state)\nthis:\n  Mapping.lookup M (Binop fa1 fa2) = Some C\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Binop fa1 fa2) = Some a \\<Longrightarrow>\n       insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n       \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "then"], ["proof (chain)\npicking this:\n  Mapping.lookup M (Binop fa1 fa2) = Some C", "have M': \"M' = Mapping.update (Binop fa1 fa2) (length slp) M\"\n      and slp': \"slp' = slp @ [Var (slp_index slp C)]\"\n      and Binop_keys: \"(Binop fa1 fa2) \\<in> Mapping.keys M\""], ["proof (prove)\nusing this:\n  Mapping.lookup M (Binop fa1 fa2) = Some C\n\ngoal (1 subgoal):\n 1. M' = Mapping.update (Binop fa1 fa2) (length slp) M &&&\n    slp' = slp @ [Var (slp_index slp C)] &&&\n    Binop fa1 fa2 \\<in> Mapping.keys M", "using *"], ["proof (prove)\nusing this:\n  Mapping.lookup M (Binop fa1 fa2) = Some C\n  slp_of_fa fa1 M slp = (M1, slp1)\n  slp_of_fa fa2 M1 slp1 = (M2, slp2)\n  slp_of_fa_bin Binop fa1 fa2 M slp M2 slp2 = (M', slp')\n\ngoal (1 subgoal):\n 1. M' = Mapping.update (Binop fa1 fa2) (length slp) M &&&\n    slp' = slp @ [Var (slp_index slp C)] &&&\n    Binop fa1 fa2 \\<in> Mapping.keys M", "by (auto simp: slp_of_fa_bin_def keys_dom_lookup)"], ["proof (state)\nthis:\n  M' = Mapping.update (Binop fa1 fa2) (length slp) M\n  slp' = slp @ [Var (slp_index slp C)]\n  Binop fa1 fa2 \\<in> Mapping.keys M\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Binop fa1 fa2) = Some a \\<Longrightarrow>\n       insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n       \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have \"subterms (Binop fa1 fa2) \\<subseteq> Mapping.keys M'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms (Binop fa1 fa2) \\<subseteq> Mapping.keys M'", "using Binop_keys assms(4)"], ["proof (prove)\nusing this:\n  Binop fa1 fa2 \\<in> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n\ngoal (1 subgoal):\n 1. subterms (Binop fa1 fa2) \\<subseteq> Mapping.keys M'", "by (force simp: M')"], ["proof (state)\nthis:\n  subterms (Binop fa1 fa2) \\<subseteq> Mapping.keys M'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Binop fa1 fa2) = Some a \\<Longrightarrow>\n       insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n       \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "moreover"], ["proof (state)\nthis:\n  subterms (Binop fa1 fa2) \\<subseteq> Mapping.keys M'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Binop fa1 fa2) = Some a \\<Longrightarrow>\n       insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n       \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have \"Mapping.keys M \\<subseteq> Mapping.keys M'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mapping.keys M \\<subseteq> Mapping.keys M'", "using Binop_keys"], ["proof (prove)\nusing this:\n  Binop fa1 fa2 \\<in> Mapping.keys M\n\ngoal (1 subgoal):\n 1. Mapping.keys M \\<subseteq> Mapping.keys M'", "by (auto simp add: M')"], ["proof (state)\nthis:\n  Mapping.keys M \\<subseteq> Mapping.keys M'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Binop fa1 fa2) = Some a \\<Longrightarrow>\n       insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n       \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "moreover"], ["proof (state)\nthis:\n  Mapping.keys M \\<subseteq> Mapping.keys M'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Binop fa1 fa2) = Some a \\<Longrightarrow>\n       insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n       \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have \"f\\<in>Mapping.keys M' \\<Longrightarrow> interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys M' \\<Longrightarrow>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs", "apply (auto simp add: M' lookup_map_values lookup_update' slp' Binop_prems slp_index_def\n          slp_index_lookup_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. f = Binop fa1 fa2 \\<Longrightarrow>\n    interpret_slp slp xs ! (length slp - Suc C) =\n    binop (interpret_floatarith fa1 xs) (interpret_floatarith fa2 xs)\n 2. \\<lbrakk>Binop fa1 fa2 \\<in> Mapping.keys M; f = Binop fa1 fa2\\<rbrakk>\n    \\<Longrightarrow> interpret_slp slp xs ! (length slp - Suc C) =\n                      binop (interpret_floatarith fa1 xs)\n                       (interpret_floatarith fa2 xs)\n 3. \\<lbrakk>f \\<in> Mapping.keys M; Binop fa1 fa2 \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> interpret_slp slp xs !\n                      (length slp - Suc (the (Mapping.lookup M f))) =\n                      interpret_floatarith f xs", "apply (metis Binop_keys Some assms(6) interpret_Binop option.sel slp_index_def slp_index_lookup_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Binop fa1 fa2 \\<in> Mapping.keys M; f = Binop fa1 fa2\\<rbrakk>\n    \\<Longrightarrow> interpret_slp slp xs ! (length slp - Suc C) =\n                      binop (interpret_floatarith fa1 xs)\n                       (interpret_floatarith fa2 xs)\n 2. \\<lbrakk>f \\<in> Mapping.keys M; Binop fa1 fa2 \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> interpret_slp slp xs !\n                      (length slp - Suc (the (Mapping.lookup M f))) =\n                      interpret_floatarith f xs", "apply (metis Binop_keys Some assms(6) interpret_Binop option.sel slp_index_def slp_index_lookup_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> Mapping.keys M; Binop fa1 fa2 \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> interpret_slp slp xs !\n                      (length slp - Suc (the (Mapping.lookup M f))) =\n                      interpret_floatarith f xs", "apply (metis assms(6) slp_index_def slp_index_lookup_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  interpret_slp slp' xs ! slp_index_lookup slp' M' ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Binop fa1 fa2) = Some a \\<Longrightarrow>\n       insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n       \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "moreover"], ["proof (state)\nthis:\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  interpret_slp slp' xs ! slp_index_lookup slp' M' ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Binop fa1 fa2) = Some a \\<Longrightarrow>\n       insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n       \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have \"f\\<in>Mapping.keys M' \\<Longrightarrow> subterms f \\<subseteq> Mapping.keys M'\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys M' \\<Longrightarrow>\n    subterms f \\<subseteq> Mapping.keys M'", "using Binop_keys Some assms(4,6)"], ["proof (prove)\nusing this:\n  Binop fa1 fa2 \\<in> Mapping.keys M\n  Mapping.lookup M (Binop fa1 fa2) = Some C\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys M' \\<Longrightarrow>\n    subterms f \\<subseteq> Mapping.keys M'", "by (auto simp add: M' lookup_map_values)"], ["proof (state)\nthis:\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Binop fa1 fa2) = Some a \\<Longrightarrow>\n       insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n       \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "moreover"], ["proof (state)\nthis:\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Binop fa1 fa2) = Some a \\<Longrightarrow>\n       insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n       \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have \"f\\<in>Mapping.keys M' \\<Longrightarrow> the (Mapping.lookup M' f) < length slp'\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys M' \\<Longrightarrow>\n    the (Mapping.lookup M' f) < length slp'", "using Binop_keys Some assms(5,7) IH1 IH2"], ["proof (prove)\nusing this:\n  Binop fa1 fa2 \\<in> Mapping.keys M\n  Mapping.lookup M (Binop fa1 fa2) = Some C\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  subterms (Binop ?a ?b) =\n  insert (Binop ?a ?b) (subterms ?a \\<union> subterms ?b)\n  ?f \\<in> subterms fa1 \\<Longrightarrow> ?f \\<in> Mapping.keys M1\n  ?f \\<in> Mapping.keys M \\<Longrightarrow> ?f \\<in> Mapping.keys M1\n  ?f \\<in> Mapping.keys M1 \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M1\n  ?f \\<in> Mapping.keys M1 \\<Longrightarrow>\n  the (Mapping.lookup M1 ?f) < length slp1\n  ?f \\<in> Mapping.keys M1 \\<Longrightarrow>\n  interpret_slp slp1 xs ! slp_index_lookup slp1 M1 ?f =\n  interpret_floatarith ?f xs\n  ?f \\<in> subterms fa2 \\<Longrightarrow> ?f \\<in> Mapping.keys M2\n  ?f \\<in> Mapping.keys M1 \\<Longrightarrow> ?f \\<in> Mapping.keys M2\n  ?f \\<in> Mapping.keys M2 \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M2\n  ?f \\<in> Mapping.keys M2 \\<Longrightarrow>\n  the (Mapping.lookup M2 ?f) < length slp2\n  ?f \\<in> Mapping.keys M2 \\<Longrightarrow>\n  interpret_slp slp2 xs ! slp_index_lookup slp2 M2 ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys M' \\<Longrightarrow>\n    the (Mapping.lookup M' f) < length slp'", "by (auto simp add: M' lookup_map_values lookup_update' Binop_prems slp' less_SucI)"], ["proof (state)\nthis:\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  the (Mapping.lookup M' ?f) < length slp'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Binop fa1 fa2) = Some a \\<Longrightarrow>\n       insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n       \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "ultimately"], ["proof (chain)\npicking this:\n  subterms (Binop fa1 fa2) \\<subseteq> Mapping.keys M'\n  Mapping.keys M \\<subseteq> Mapping.keys M'\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  interpret_slp slp' xs ! slp_index_lookup slp' M' ?f =\n  interpret_floatarith ?f xs\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M'\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  the (Mapping.lookup M' ?f) < length slp'", "show ?thesis"], ["proof (prove)\nusing this:\n  subterms (Binop fa1 fa2) \\<subseteq> Mapping.keys M'\n  Mapping.keys M \\<subseteq> Mapping.keys M'\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  interpret_slp slp' xs ! slp_index_lookup slp' M' ?f =\n  interpret_floatarith ?f xs\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M'\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  the (Mapping.lookup M' ?f) < length slp'\n\ngoal (1 subgoal):\n 1. insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n    \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by auto"], ["proof (state)\nthis:\n  insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n  \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insert (Binop fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n  \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  unop_slp_of_fa_induction_step:\n  assumes\n    Unop_IH1:\n    \"\\<And>M slp M' slp'. slp_of_fa fa1 M slp = (M', slp') \\<Longrightarrow>\n    (\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> subterms f \\<subseteq> Mapping.keys M) \\<Longrightarrow>\n    (\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> the (Mapping.lookup M f) < length slp) \\<Longrightarrow>\n    (\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> interpret_slp slp xs ! slp_index_lookup slp M f = interpret_floatarith f xs) \\<Longrightarrow>\n    subterms fa1 \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'. subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f = interpret_floatarith f xs)\"\n    and Unop_prems:\n    \"(case slp_of_fa fa1 M slp of (M1, slp1) \\<Rightarrow> slp_of_fa_un Unop fa1 M slp M1 slp1) = (M', slp')\"\n    \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> subterms f \\<subseteq> Mapping.keys M\"\n    \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> the (Mapping.lookup M f) < length slp\"\n    \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> interpret_slp slp xs ! slp_index_lookup slp M f = interpret_floatarith f xs\"\n  assumes subterms_Unop[simp]:\n    \"\\<And>a b. subterms (Unop a) = insert (Unop a) (subterms a)\"\n  assumes interpret_Unop[simp]:\n    \"\\<And>a b xs. interpret_floatarith (Unop a) xs = unop (interpret_floatarith a xs)\"\nshows \"insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'. subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp'  \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f = interpret_floatarith f xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "from Unop_prems"], ["proof (chain)\npicking this:\n  (case slp_of_fa fa1 M slp of\n   (M1, slp1) \\<Rightarrow> slp_of_fa_un Unop fa1 M slp M1 slp1) =\n  (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs", "obtain M1 slp1 where *:\n    \"slp_of_fa fa1 M slp = (M1, slp1)\"\n    \"slp_of_fa_un Unop fa1 M slp M1 slp1 = (M', slp')\""], ["proof (prove)\nusing this:\n  (case slp_of_fa fa1 M slp of\n   (M1, slp1) \\<Rightarrow> slp_of_fa_un Unop fa1 M slp M1 slp1) =\n  (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. (\\<And>M1 slp1.\n        \\<lbrakk>slp_of_fa fa1 M slp = (M1, slp1);\n         slp_of_fa_un Unop fa1 M slp M1 slp1 = (M', slp')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto split: prod.splits)"], ["proof (state)\nthis:\n  slp_of_fa fa1 M slp = (M1, slp1)\n  slp_of_fa_un Unop fa1 M slp M1 slp1 = (M', slp')\n\ngoal (1 subgoal):\n 1. insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "from Unop_IH1[OF *(1) Unop_prems(2) Unop_prems(3) Unop_prems(4), simplified]"], ["proof (chain)\npicking this:\n  subterms fa1 \\<subseteq> Mapping.keys M1 \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M1 \\<and>\n  (\\<forall>f\\<in>Mapping.keys M1.\n      subterms f \\<subseteq> Mapping.keys M1 \\<and>\n      the (Mapping.lookup M1 f) < length slp1 \\<and>\n      interpret_slp slp1 xs ! slp_index_lookup slp1 M1 f =\n      interpret_floatarith f xs)", "have IH1:\n    \"f \\<in> subterms fa1 \\<Longrightarrow> f \\<in> Mapping.keys M1\"\n    \"f \\<in> Mapping.keys M \\<Longrightarrow> f \\<in> Mapping.keys M1\"\n    \"f \\<in> Mapping.keys M1 \\<Longrightarrow> subterms f \\<subseteq> Mapping.keys M1\"\n    \"f \\<in> Mapping.keys M1 \\<Longrightarrow> the (Mapping.lookup M1 f) < length slp1\"\n    \"f \\<in> Mapping.keys M1 \\<Longrightarrow> interpret_slp slp1 xs ! slp_index_lookup slp1 M1 f = interpret_floatarith f xs\"\n    for f"], ["proof (prove)\nusing this:\n  subterms fa1 \\<subseteq> Mapping.keys M1 \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M1 \\<and>\n  (\\<forall>f\\<in>Mapping.keys M1.\n      subterms f \\<subseteq> Mapping.keys M1 \\<and>\n      the (Mapping.lookup M1 f) < length slp1 \\<and>\n      interpret_slp slp1 xs ! slp_index_lookup slp1 M1 f =\n      interpret_floatarith f xs)\n\ngoal (1 subgoal):\n 1. ((f \\<in> subterms fa1 \\<Longrightarrow> f \\<in> Mapping.keys M1) &&&\n     (f \\<in> Mapping.keys M \\<Longrightarrow> f \\<in> Mapping.keys M1)) &&&\n    (f \\<in> Mapping.keys M1 \\<Longrightarrow>\n     subterms f \\<subseteq> Mapping.keys M1) &&&\n    (f \\<in> Mapping.keys M1 \\<Longrightarrow>\n     the (Mapping.lookup M1 f) < length slp1) &&&\n    (f \\<in> Mapping.keys M1 \\<Longrightarrow>\n     interpret_slp slp1 xs ! slp_index_lookup slp1 M1 f =\n     interpret_floatarith f xs)", "by (auto simp: subset_iff)"], ["proof (state)\nthis:\n  ?f \\<in> subterms fa1 \\<Longrightarrow> ?f \\<in> Mapping.keys M1\n  ?f \\<in> Mapping.keys M \\<Longrightarrow> ?f \\<in> Mapping.keys M1\n  ?f \\<in> Mapping.keys M1 \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M1\n  ?f \\<in> Mapping.keys M1 \\<Longrightarrow>\n  the (Mapping.lookup M1 ?f) < length slp1\n  ?f \\<in> Mapping.keys M1 \\<Longrightarrow>\n  interpret_slp slp1 xs ! slp_index_lookup slp1 M1 ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "proof (cases \"Mapping.lookup M (Unop fa1)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Mapping.lookup M (Unop fa1) = None \\<Longrightarrow>\n    insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)\n 2. \\<And>a.\n       Mapping.lookup M (Unop fa1) = Some a \\<Longrightarrow>\n       insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "case None"], ["proof (state)\nthis:\n  Mapping.lookup M (Unop fa1) = None\n\ngoal (2 subgoals):\n 1. Mapping.lookup M (Unop fa1) = None \\<Longrightarrow>\n    insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)\n 2. \\<And>a.\n       Mapping.lookup M (Unop fa1) = Some a \\<Longrightarrow>\n       insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "then"], ["proof (chain)\npicking this:\n  Mapping.lookup M (Unop fa1) = None", "have M': \"M' = Mapping.update (Unop fa1) (length slp1) M1 \"\n      and slp': \"slp' = slp1 @ [Unop (Var (slp_index_lookup slp1 M1 fa1))]\""], ["proof (prove)\nusing this:\n  Mapping.lookup M (Unop fa1) = None\n\ngoal (1 subgoal):\n 1. M' = Mapping.update (Unop fa1) (length slp1) M1 &&&\n    slp' = slp1 @ [Unop (Var (slp_index_lookup slp1 M1 fa1))]", "using *"], ["proof (prove)\nusing this:\n  Mapping.lookup M (Unop fa1) = None\n  slp_of_fa fa1 M slp = (M1, slp1)\n  slp_of_fa_un Unop fa1 M slp M1 slp1 = (M', slp')\n\ngoal (1 subgoal):\n 1. M' = Mapping.update (Unop fa1) (length slp1) M1 &&&\n    slp' = slp1 @ [Unop (Var (slp_index_lookup slp1 M1 fa1))]", "by (auto simp: slp_of_fa_un_def)"], ["proof (state)\nthis:\n  M' = Mapping.update (Unop fa1) (length slp1) M1\n  slp' = slp1 @ [Unop (Var (slp_index_lookup slp1 M1 fa1))]\n\ngoal (2 subgoals):\n 1. Mapping.lookup M (Unop fa1) = None \\<Longrightarrow>\n    insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)\n 2. \\<And>a.\n       Mapping.lookup M (Unop fa1) = Some a \\<Longrightarrow>\n       insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have \"Mapping.keys M \\<subseteq> Mapping.keys M'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mapping.keys M \\<subseteq> Mapping.keys M'", "using IH1"], ["proof (prove)\nusing this:\n  ?f \\<in> subterms fa1 \\<Longrightarrow> ?f \\<in> Mapping.keys M1\n  ?f \\<in> Mapping.keys M \\<Longrightarrow> ?f \\<in> Mapping.keys M1\n  ?f \\<in> Mapping.keys M1 \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M1\n  ?f \\<in> Mapping.keys M1 \\<Longrightarrow>\n  the (Mapping.lookup M1 ?f) < length slp1\n  ?f \\<in> Mapping.keys M1 \\<Longrightarrow>\n  interpret_slp slp1 xs ! slp_index_lookup slp1 M1 ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. Mapping.keys M \\<subseteq> Mapping.keys M'", "by (auto simp: M')"], ["proof (state)\nthis:\n  Mapping.keys M \\<subseteq> Mapping.keys M'\n\ngoal (2 subgoals):\n 1. Mapping.lookup M (Unop fa1) = None \\<Longrightarrow>\n    insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)\n 2. \\<And>a.\n       Mapping.lookup M (Unop fa1) = Some a \\<Longrightarrow>\n       insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have \"Unop fa1 \\<in> Mapping.keys M'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Unop fa1 \\<in> Mapping.keys M'", "using M'"], ["proof (prove)\nusing this:\n  M' = Mapping.update (Unop fa1) (length slp1) M1\n\ngoal (1 subgoal):\n 1. Unop fa1 \\<in> Mapping.keys M'", "by auto"], ["proof (state)\nthis:\n  Unop fa1 \\<in> Mapping.keys M'\n\ngoal (2 subgoals):\n 1. Mapping.lookup M (Unop fa1) = None \\<Longrightarrow>\n    insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)\n 2. \\<And>a.\n       Mapping.lookup M (Unop fa1) = Some a \\<Longrightarrow>\n       insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have fa1: \"fa1 \\<in> Mapping.keys M1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fa1 \\<in> Mapping.keys M1", "by (force intro: IH1)+"], ["proof (state)\nthis:\n  fa1 \\<in> Mapping.keys M1\n\ngoal (2 subgoals):\n 1. Mapping.lookup M (Unop fa1) = None \\<Longrightarrow>\n    insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)\n 2. \\<And>a.\n       Mapping.lookup M (Unop fa1) = Some a \\<Longrightarrow>\n       insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have rew: \"interpret_slp slp1 xs ! slp_index_lookup slp1 M1 fa1  = interpret_floatarith fa1 xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_slp slp1 xs ! slp_index_lookup slp1 M1 fa1 =\n    interpret_floatarith fa1 xs", "by (auto simp: IH1 fa1)"], ["proof (state)\nthis:\n  interpret_slp slp1 xs ! slp_index_lookup slp1 M1 fa1 =\n  interpret_floatarith fa1 xs\n\ngoal (2 subgoals):\n 1. Mapping.lookup M (Unop fa1) = None \\<Longrightarrow>\n    insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)\n 2. \\<And>a.\n       Mapping.lookup M (Unop fa1) = Some a \\<Longrightarrow>\n       insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "apply (auto )"], ["proof (prove)\ngoal (6 subgoals):\n 1. Unop fa1 \\<in> Mapping.keys M'\n 2. \\<And>x. x \\<in> subterms fa1 \\<Longrightarrow> x \\<in> Mapping.keys M'\n 3. \\<And>x.\n       x \\<in> Mapping.keys M \\<Longrightarrow> x \\<in> Mapping.keys M'\n 4. \\<And>f x.\n       \\<lbrakk>f \\<in> Mapping.keys M'; x \\<in> subterms f\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Mapping.keys M'\n 5. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       the (Mapping.lookup M' f) < length slp'\n 6. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n       interpret_floatarith f xs", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. Unop fa1 \\<in> Mapping.keys M'", "by fact"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x. x \\<in> subterms fa1 \\<Longrightarrow> x \\<in> Mapping.keys M'\n 2. \\<And>x.\n       x \\<in> Mapping.keys M \\<Longrightarrow> x \\<in> Mapping.keys M'\n 3. \\<And>f x.\n       \\<lbrakk>f \\<in> Mapping.keys M'; x \\<in> subterms f\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Mapping.keys M'\n 4. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       the (Mapping.lookup M' f) < length slp'\n 5. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n       interpret_floatarith f xs", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> subterms fa1 \\<Longrightarrow> x_ \\<in> Mapping.keys M'", "unfolding M'"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> subterms fa1 \\<Longrightarrow>\n    x_ \\<in> Mapping.keys (Mapping.update (Unop fa1) (length slp1) M1)", "apply (simp add: )"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> subterms fa1 \\<Longrightarrow>\n    x_ = Unop fa1 \\<or> x_ \\<in> Mapping.keys M1", "apply (rule disjI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> subterms fa1 \\<Longrightarrow> x_ \\<in> Mapping.keys M1", "apply (rule IH1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> subterms fa1 \\<Longrightarrow> x_ \\<in> subterms fa1", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> Mapping.keys M \\<Longrightarrow> x \\<in> Mapping.keys M'\n 2. \\<And>f x.\n       \\<lbrakk>f \\<in> Mapping.keys M'; x \\<in> subterms f\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Mapping.keys M'\n 3. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       the (Mapping.lookup M' f) < length slp'\n 4. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n       interpret_floatarith f xs", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> Mapping.keys M \\<Longrightarrow> x_ \\<in> Mapping.keys M'", "unfolding M'"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> Mapping.keys M \\<Longrightarrow>\n    x_ \\<in> Mapping.keys (Mapping.update (Unop fa1) (length slp1) M1)", "apply (simp add: )"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> Mapping.keys M \\<Longrightarrow>\n    x_ = Unop fa1 \\<or> x_ \\<in> Mapping.keys M1", "apply (rule disjI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> Mapping.keys M \\<Longrightarrow> x_ \\<in> Mapping.keys M1", "by (rule IH1) simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>f x.\n       \\<lbrakk>f \\<in> Mapping.keys M'; x \\<in> subterms f\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Mapping.keys M'\n 2. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       the (Mapping.lookup M' f) < length slp'\n 3. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n       interpret_floatarith f xs", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f_ \\<in> Mapping.keys M'; x_ \\<in> subterms f_\\<rbrakk>\n    \\<Longrightarrow> x_ \\<in> Mapping.keys M'", "using IH1(3) M' \\<open>\\<And>x. x \\<in> subterms fa1 \\<Longrightarrow> x \\<in> Mapping.keys M'\\<close>"], ["proof (prove)\nusing this:\n  ?f \\<in> Mapping.keys M1 \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M1\n  M' = Mapping.update (Unop fa1) (length slp1) M1\n  ?x \\<in> subterms fa1 \\<Longrightarrow> ?x \\<in> Mapping.keys M'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f_ \\<in> Mapping.keys M'; x_ \\<in> subterms f_\\<rbrakk>\n    \\<Longrightarrow> x_ \\<in> Mapping.keys M'", "by fastforce"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       the (Mapping.lookup M' f) < length slp'\n 2. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n       interpret_floatarith f xs", "subgoal for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys M' \\<Longrightarrow>\n    the (Mapping.lookup M' f) < length slp'", "unfolding M' slp'"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys\n             (Mapping.update (Unop fa1) (length slp1) M1) \\<Longrightarrow>\n    the (Mapping.lookup (Mapping.update (Unop fa1) (length slp1) M1) f)\n    < length (slp1 @ [Unop (Var (slp_index_lookup slp1 M1 fa1))])", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. f = Unop fa1 \\<or> f \\<in> Mapping.keys M1 \\<Longrightarrow>\n    the (Mapping.lookup (Mapping.update (Unop fa1) (length slp1) M1) f)\n    < Suc (length slp1)", "apply (auto simp add: lookup_update' rew lookup_map_values)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Unop fa1 \\<noteq> f; f \\<in> Mapping.keys M1\\<rbrakk>\n    \\<Longrightarrow> the (Mapping.lookup M1 f) < Suc (length slp1)", "by (simp add: IH1(4) less_SucI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n       interpret_floatarith f xs", "subgoal for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys M' \\<Longrightarrow>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs", "unfolding M' slp'"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys\n             (Mapping.update (Unop fa1) (length slp1) M1) \\<Longrightarrow>\n    interpret_slp (slp1 @ [Unop (Var (slp_index_lookup slp1 M1 fa1))]) xs !\n    slp_index_lookup (slp1 @ [Unop (Var (slp_index_lookup slp1 M1 fa1))])\n     (Mapping.update (Unop fa1) (length slp1) M1) f =\n    interpret_floatarith f xs", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. f = Unop fa1 \\<or> f \\<in> Mapping.keys M1 \\<Longrightarrow>\n    (unop (interpret_slp slp1 xs ! slp_index_lookup slp1 M1 fa1) #\n     interpret_slp slp1 xs) !\n    slp_index_lookup (slp1 @ [Unop (Var (slp_index_lookup slp1 M1 fa1))])\n     (Mapping.update (Unop fa1) (length slp1) M1) f =\n    interpret_floatarith f xs", "apply (subst rew)"], ["proof (prove)\ngoal (1 subgoal):\n 1. f = Unop fa1 \\<or> f \\<in> Mapping.keys M1 \\<Longrightarrow>\n    (unop (interpret_floatarith fa1 xs) # interpret_slp slp1 xs) !\n    slp_index_lookup (slp1 @ [Unop (Var (slp_index_lookup slp1 M1 fa1))])\n     (Mapping.update (Unop fa1) (length slp1) M1) f =\n    interpret_floatarith f xs", "apply (auto simp add: fa1 lookup_update' rew lookup_map_values slp_index_lookup_def slp_index_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> Mapping.keys M1; Unop fa1 \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> (unop (interpret_floatarith fa1 xs) #\n                       interpret_slp slp1 xs) !\n                      (length slp1 - the (Mapping.lookup M1 f)) =\n                      interpret_floatarith f xs", "apply (auto simp add: nth_Cons fa1 lookup_update' rew lookup_map_values slp_index_lookup_def slp_index_def\n            split: nat.splits)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>f \\<in> Mapping.keys M1; Unop fa1 \\<noteq> f;\n     length slp1 \\<le> the (Mapping.lookup M1 f)\\<rbrakk>\n    \\<Longrightarrow> unop (interpret_floatarith fa1 xs) =\n                      interpret_floatarith f xs\n 2. \\<And>x2.\n       \\<lbrakk>f \\<in> Mapping.keys M1; Unop fa1 \\<noteq> f;\n        length slp1 - the (Mapping.lookup M1 f) = Suc x2\\<rbrakk>\n       \\<Longrightarrow> interpret_slp slp1 xs ! x2 =\n                         interpret_floatarith f xs", "using IH1(4)"], ["proof (prove)\nusing this:\n  ?f \\<in> Mapping.keys M1 \\<Longrightarrow>\n  the (Mapping.lookup M1 ?f) < length slp1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>f \\<in> Mapping.keys M1; Unop fa1 \\<noteq> f;\n     length slp1 \\<le> the (Mapping.lookup M1 f)\\<rbrakk>\n    \\<Longrightarrow> unop (interpret_floatarith fa1 xs) =\n                      interpret_floatarith f xs\n 2. \\<And>x2.\n       \\<lbrakk>f \\<in> Mapping.keys M1; Unop fa1 \\<noteq> f;\n        length slp1 - the (Mapping.lookup M1 f) = Suc x2\\<rbrakk>\n       \\<Longrightarrow> interpret_slp slp1 xs ! x2 =\n                         interpret_floatarith f xs", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>f \\<in> Mapping.keys M1; Unop fa1 \\<noteq> f;\n        length slp1 - the (Mapping.lookup M1 f) = Suc x2\\<rbrakk>\n       \\<Longrightarrow> interpret_slp slp1 xs ! x2 =\n                         interpret_floatarith f xs", "by (metis IH1(4) IH1(5) Suc_diff_Suc Suc_inject slp_index_def slp_index_lookup_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Unop fa1) = Some a \\<Longrightarrow>\n       insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Unop fa1) = Some a \\<Longrightarrow>\n       insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "case (Some C)"], ["proof (state)\nthis:\n  Mapping.lookup M (Unop fa1) = Some C\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Unop fa1) = Some a \\<Longrightarrow>\n       insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "then"], ["proof (chain)\npicking this:\n  Mapping.lookup M (Unop fa1) = Some C", "have M': \"M' = Mapping.update (Unop fa1) (length slp) M\"\n      and slp': \"slp' = slp @ [Var (slp_index slp C)]\"\n      and Unop_keys: \"(Unop fa1) \\<in> Mapping.keys M\""], ["proof (prove)\nusing this:\n  Mapping.lookup M (Unop fa1) = Some C\n\ngoal (1 subgoal):\n 1. M' = Mapping.update (Unop fa1) (length slp) M &&&\n    slp' = slp @ [Var (slp_index slp C)] &&& Unop fa1 \\<in> Mapping.keys M", "using *"], ["proof (prove)\nusing this:\n  Mapping.lookup M (Unop fa1) = Some C\n  slp_of_fa fa1 M slp = (M1, slp1)\n  slp_of_fa_un Unop fa1 M slp M1 slp1 = (M', slp')\n\ngoal (1 subgoal):\n 1. M' = Mapping.update (Unop fa1) (length slp) M &&&\n    slp' = slp @ [Var (slp_index slp C)] &&& Unop fa1 \\<in> Mapping.keys M", "by (auto simp: slp_of_fa_un_def keys_dom_lookup)"], ["proof (state)\nthis:\n  M' = Mapping.update (Unop fa1) (length slp) M\n  slp' = slp @ [Var (slp_index slp C)]\n  Unop fa1 \\<in> Mapping.keys M\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Unop fa1) = Some a \\<Longrightarrow>\n       insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have \"subterms (Unop fa1) \\<subseteq> Mapping.keys M'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms (Unop fa1) \\<subseteq> Mapping.keys M'", "using Unop_keys assms(3)"], ["proof (prove)\nusing this:\n  Unop fa1 \\<in> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n\ngoal (1 subgoal):\n 1. subterms (Unop fa1) \\<subseteq> Mapping.keys M'", "by (force simp: M')"], ["proof (state)\nthis:\n  subterms (Unop fa1) \\<subseteq> Mapping.keys M'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Unop fa1) = Some a \\<Longrightarrow>\n       insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "moreover"], ["proof (state)\nthis:\n  subterms (Unop fa1) \\<subseteq> Mapping.keys M'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Unop fa1) = Some a \\<Longrightarrow>\n       insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have \"Mapping.keys M \\<subseteq> Mapping.keys M'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mapping.keys M \\<subseteq> Mapping.keys M'", "using Unop_keys assms(5)"], ["proof (prove)\nusing this:\n  Unop fa1 \\<in> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. Mapping.keys M \\<subseteq> Mapping.keys M'", "by (force simp: M' IH1)"], ["proof (state)\nthis:\n  Mapping.keys M \\<subseteq> Mapping.keys M'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Unop fa1) = Some a \\<Longrightarrow>\n       insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "moreover"], ["proof (state)\nthis:\n  Mapping.keys M \\<subseteq> Mapping.keys M'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Unop fa1) = Some a \\<Longrightarrow>\n       insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have \"f\\<in>Mapping.keys M' \\<Longrightarrow> interpret_slp slp' xs ! slp_index_lookup slp' M' f  =\n        interpret_floatarith f xs\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys M' \\<Longrightarrow>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs", "apply (auto simp add: M' lookup_map_values lookup_update' slp' Unop_prems slp_index_def slp_index_lookup_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. f = Unop fa1 \\<Longrightarrow>\n    interpret_slp slp xs ! (length slp - Suc C) =\n    unop (interpret_floatarith fa1 xs)\n 2. \\<lbrakk>Unop fa1 \\<in> Mapping.keys M; f = Unop fa1\\<rbrakk>\n    \\<Longrightarrow> interpret_slp slp xs ! (length slp - Suc C) =\n                      unop (interpret_floatarith fa1 xs)\n 3. \\<lbrakk>f \\<in> Mapping.keys M; Unop fa1 \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> interpret_slp slp xs !\n                      (length slp - Suc (the (Mapping.lookup M f))) =\n                      interpret_floatarith f xs", "apply (metis Unop_keys Some assms(5) interpret_Unop option.sel slp_index_def slp_index_lookup_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Unop fa1 \\<in> Mapping.keys M; f = Unop fa1\\<rbrakk>\n    \\<Longrightarrow> interpret_slp slp xs ! (length slp - Suc C) =\n                      unop (interpret_floatarith fa1 xs)\n 2. \\<lbrakk>f \\<in> Mapping.keys M; Unop fa1 \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> interpret_slp slp xs !\n                      (length slp - Suc (the (Mapping.lookup M f))) =\n                      interpret_floatarith f xs", "apply (metis Unop_keys Some assms(5) interpret_Unop option.sel slp_index_def slp_index_lookup_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> Mapping.keys M; Unop fa1 \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> interpret_slp slp xs !\n                      (length slp - Suc (the (Mapping.lookup M f))) =\n                      interpret_floatarith f xs", "apply (metis assms(5) slp_index_def slp_index_lookup_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  interpret_slp slp' xs ! slp_index_lookup slp' M' ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Unop fa1) = Some a \\<Longrightarrow>\n       insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "moreover"], ["proof (state)\nthis:\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  interpret_slp slp' xs ! slp_index_lookup slp' M' ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Unop fa1) = Some a \\<Longrightarrow>\n       insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have \"f\\<in>Mapping.keys M' \\<Longrightarrow> subterms f \\<subseteq> Mapping.keys M'\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys M' \\<Longrightarrow>\n    subterms f \\<subseteq> Mapping.keys M'", "using Unop_keys Some assms(3,5)"], ["proof (prove)\nusing this:\n  Unop fa1 \\<in> Mapping.keys M\n  Mapping.lookup M (Unop fa1) = Some C\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys M' \\<Longrightarrow>\n    subterms f \\<subseteq> Mapping.keys M'", "by (auto simp add: M' lookup_map_values)"], ["proof (state)\nthis:\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Unop fa1) = Some a \\<Longrightarrow>\n       insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "moreover"], ["proof (state)\nthis:\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Unop fa1) = Some a \\<Longrightarrow>\n       insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have \"f\\<in>Mapping.keys M' \\<Longrightarrow> the (Mapping.lookup M' f) < length slp'\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys M' \\<Longrightarrow>\n    the (Mapping.lookup M' f) < length slp'", "by (auto simp add: M' lookup_map_values lookup_update' slp' Unop_prems IH1 less_SucI)"], ["proof (state)\nthis:\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  the (Mapping.lookup M' ?f) < length slp'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M (Unop fa1) = Some a \\<Longrightarrow>\n       insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "ultimately"], ["proof (chain)\npicking this:\n  subterms (Unop fa1) \\<subseteq> Mapping.keys M'\n  Mapping.keys M \\<subseteq> Mapping.keys M'\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  interpret_slp slp' xs ! slp_index_lookup slp' M' ?f =\n  interpret_floatarith ?f xs\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M'\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  the (Mapping.lookup M' ?f) < length slp'", "show ?thesis"], ["proof (prove)\nusing this:\n  subterms (Unop fa1) \\<subseteq> Mapping.keys M'\n  Mapping.keys M \\<subseteq> Mapping.keys M'\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  interpret_slp slp' xs ! slp_index_lookup slp' M' ?f =\n  interpret_floatarith ?f xs\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M'\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  the (Mapping.lookup M' ?f) < length slp'\n\ngoal (1 subgoal):\n 1. insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by auto"], ["proof (state)\nthis:\n  insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insert (Unop fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  cnst_slp_of_fa_induction_step:\n  assumes *:\n    \"slp_of_fa_cnst Unop Unop' M slp = (M', slp')\"\n    \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> subterms f \\<subseteq> Mapping.keys M\"\n    \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> the (Mapping.lookup M f) < length slp\"\n    \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> interpret_slp slp xs ! slp_index_lookup slp M f = interpret_floatarith f xs\"\n  assumes subterms_Unop[simp]:\n    \"\\<And>a b. subterms (Unop) = {Unop}\"\n  assumes interpret_Unop[simp]:\n    \"interpret_floatarith Unop xs = unop xs\"\n    \"interpret_floatarith Unop' (interpret_slp slp xs) = unop xs\"\n  assumes ui: \"unop (interpret_slp slp xs) = unop xs\"\n  shows \"{Unop} \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'. subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f = interpret_floatarith f xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {Unop} \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {Unop} \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. {Unop} \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "proof (cases \"Mapping.lookup M Unop\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Mapping.lookup M Unop = None \\<Longrightarrow>\n    {Unop} \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)\n 2. \\<And>a.\n       Mapping.lookup M Unop = Some a \\<Longrightarrow>\n       {Unop} \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "case None"], ["proof (state)\nthis:\n  Mapping.lookup M Unop = None\n\ngoal (2 subgoals):\n 1. Mapping.lookup M Unop = None \\<Longrightarrow>\n    {Unop} \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)\n 2. \\<And>a.\n       Mapping.lookup M Unop = Some a \\<Longrightarrow>\n       {Unop} \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "then"], ["proof (chain)\npicking this:\n  Mapping.lookup M Unop = None", "have M': \"M' = Mapping.update Unop (length slp) M\"\n      and slp': \"slp' = slp @ [Unop']\""], ["proof (prove)\nusing this:\n  Mapping.lookup M Unop = None\n\ngoal (1 subgoal):\n 1. M' = Mapping.update Unop (length slp) M &&& slp' = slp @ [Unop']", "using *"], ["proof (prove)\nusing this:\n  Mapping.lookup M Unop = None\n  slp_of_fa_cnst Unop Unop' M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. M' = Mapping.update Unop (length slp) M &&& slp' = slp @ [Unop']", "by (auto simp: slp_of_fa_cnst_def)"], ["proof (state)\nthis:\n  M' = Mapping.update Unop (length slp) M\n  slp' = slp @ [Unop']\n\ngoal (2 subgoals):\n 1. Mapping.lookup M Unop = None \\<Longrightarrow>\n    {Unop} \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)\n 2. \\<And>a.\n       Mapping.lookup M Unop = Some a \\<Longrightarrow>\n       {Unop} \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have \"Mapping.keys M \\<subseteq> Mapping.keys M'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mapping.keys M \\<subseteq> Mapping.keys M'", "by (auto simp: M')"], ["proof (state)\nthis:\n  Mapping.keys M \\<subseteq> Mapping.keys M'\n\ngoal (2 subgoals):\n 1. Mapping.lookup M Unop = None \\<Longrightarrow>\n    {Unop} \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)\n 2. \\<And>a.\n       Mapping.lookup M Unop = Some a \\<Longrightarrow>\n       {Unop} \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have \"Unop \\<in> Mapping.keys M'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Unop \\<in> Mapping.keys M'", "using M'"], ["proof (prove)\nusing this:\n  M' = Mapping.update Unop (length slp) M\n\ngoal (1 subgoal):\n 1. Unop \\<in> Mapping.keys M'", "by auto"], ["proof (state)\nthis:\n  Unop \\<in> Mapping.keys M'\n\ngoal (2 subgoals):\n 1. Mapping.lookup M Unop = None \\<Longrightarrow>\n    {Unop} \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)\n 2. \\<And>a.\n       Mapping.lookup M Unop = Some a \\<Longrightarrow>\n       {Unop} \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. {Unop} \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "apply (auto )"], ["proof (prove)\ngoal (5 subgoals):\n 1. Unop \\<in> Mapping.keys M'\n 2. \\<And>x.\n       x \\<in> Mapping.keys M \\<Longrightarrow> x \\<in> Mapping.keys M'\n 3. \\<And>f x.\n       \\<lbrakk>f \\<in> Mapping.keys M'; x \\<in> subterms f\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Mapping.keys M'\n 4. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       the (Mapping.lookup M' f) < length slp'\n 5. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n       interpret_floatarith f xs", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. Unop \\<in> Mapping.keys M'", "by fact"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> Mapping.keys M \\<Longrightarrow> x \\<in> Mapping.keys M'\n 2. \\<And>f x.\n       \\<lbrakk>f \\<in> Mapping.keys M'; x \\<in> subterms f\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Mapping.keys M'\n 3. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       the (Mapping.lookup M' f) < length slp'\n 4. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n       interpret_floatarith f xs", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> Mapping.keys M \\<Longrightarrow> x_ \\<in> Mapping.keys M'", "unfolding M'"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> Mapping.keys M \\<Longrightarrow>\n    x_ \\<in> Mapping.keys (Mapping.update Unop (length slp) M)", "apply (simp add: )"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>f x.\n       \\<lbrakk>f \\<in> Mapping.keys M'; x \\<in> subterms f\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Mapping.keys M'\n 2. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       the (Mapping.lookup M' f) < length slp'\n 3. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n       interpret_floatarith f xs", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f_ \\<in> Mapping.keys M'; x_ \\<in> subterms f_\\<rbrakk>\n    \\<Longrightarrow> x_ \\<in> Mapping.keys M'", "unfolding M'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f_ \\<in> Mapping.keys (Mapping.update Unop (length slp) M);\n     x_ \\<in> subterms f_\\<rbrakk>\n    \\<Longrightarrow> x_ \\<in> Mapping.keys\n                                (Mapping.update Unop (length slp) M)", "apply (simp add: )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f_ = Unop \\<or> f_ \\<in> Mapping.keys M;\n     x_ \\<in> subterms f_\\<rbrakk>\n    \\<Longrightarrow> x_ = Unop \\<or> x_ \\<in> Mapping.keys M", "using assms"], ["proof (prove)\nusing this:\n  slp_of_fa_cnst Unop Unop' M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n  subterms Unop = {Unop}\n  interpret_floatarith Unop xs = unop xs\n  interpret_floatarith Unop' (interpret_slp slp xs) = unop xs\n  unop (interpret_slp slp xs) = unop xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f_ = Unop \\<or> f_ \\<in> Mapping.keys M;\n     x_ \\<in> subterms f_\\<rbrakk>\n    \\<Longrightarrow> x_ = Unop \\<or> x_ \\<in> Mapping.keys M", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       the (Mapping.lookup M' f) < length slp'\n 2. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n       interpret_floatarith f xs", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. f_ \\<in> Mapping.keys M' \\<Longrightarrow>\n    the (Mapping.lookup M' f_) < length slp'", "unfolding M' slp'"], ["proof (prove)\ngoal (1 subgoal):\n 1. f_ \\<in> Mapping.keys\n              (Mapping.update Unop (length slp) M) \\<Longrightarrow>\n    the (Mapping.lookup (Mapping.update Unop (length slp) M) f_)\n    < length (slp @ [Unop'])", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. f_ = Unop \\<or> f_ \\<in> Mapping.keys M \\<Longrightarrow>\n    the (Mapping.lookup (Mapping.update Unop (length slp) M) f_)\n    < Suc (length slp)", "apply (auto simp add: lookup_update' ui lookup_map_values)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Unop \\<noteq> f_; f_ \\<in> Mapping.keys M\\<rbrakk>\n    \\<Longrightarrow> the (Mapping.lookup M f_) < Suc (length slp)", "using interpret_Unop"], ["proof (prove)\nusing this:\n  interpret_floatarith Unop xs = unop xs\n  interpret_floatarith Unop' (interpret_slp slp xs) = unop xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Unop \\<noteq> f_; f_ \\<in> Mapping.keys M\\<rbrakk>\n    \\<Longrightarrow> the (Mapping.lookup M f_) < Suc (length slp)", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Unop \\<noteq> f_; f_ \\<in> Mapping.keys M\\<rbrakk>\n    \\<Longrightarrow> the (Mapping.lookup M f_) < Suc (length slp)", "by (simp add: assms(3) less_Suc_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> Mapping.keys M' \\<Longrightarrow>\n       interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n       interpret_floatarith f xs", "subgoal for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys M' \\<Longrightarrow>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs", "unfolding M' slp'"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys\n             (Mapping.update Unop (length slp) M) \\<Longrightarrow>\n    interpret_slp (slp @ [Unop']) xs !\n    slp_index_lookup (slp @ [Unop']) (Mapping.update Unop (length slp) M)\n     f =\n    interpret_floatarith f xs", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. f = Unop \\<or> f \\<in> Mapping.keys M \\<Longrightarrow>\n    (unop xs # interpret_slp slp xs) !\n    slp_index_lookup (slp @ [Unop']) (Mapping.update Unop (length slp) M)\n     f =\n    interpret_floatarith f xs", "apply (auto simp add: lookup_update' ui lookup_map_values slp_index_lookup_def slp_index_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>f \\<in> Mapping.keys M; Unop = f\\<rbrakk>\n    \\<Longrightarrow> unop xs = interpret_floatarith f xs\n 2. \\<lbrakk>f \\<in> Mapping.keys M; Unop \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> (unop xs # interpret_slp slp xs) !\n                      (length slp - the (Mapping.lookup M f)) =\n                      interpret_floatarith f xs", "using interpret_Unop"], ["proof (prove)\nusing this:\n  interpret_floatarith Unop xs = unop xs\n  interpret_floatarith Unop' (interpret_slp slp xs) = unop xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>f \\<in> Mapping.keys M; Unop = f\\<rbrakk>\n    \\<Longrightarrow> unop xs = interpret_floatarith f xs\n 2. \\<lbrakk>f \\<in> Mapping.keys M; Unop \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> (unop xs # interpret_slp slp xs) !\n                      (length slp - the (Mapping.lookup M f)) =\n                      interpret_floatarith f xs", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> Mapping.keys M; Unop \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> (unop xs # interpret_slp slp xs) !\n                      (length slp - the (Mapping.lookup M f)) =\n                      interpret_floatarith f xs", "apply (auto simp: nth_Cons split: nat.splits)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>f \\<in> Mapping.keys M; Unop \\<noteq> f;\n     length slp \\<le> the (Mapping.lookup M f)\\<rbrakk>\n    \\<Longrightarrow> unop xs = interpret_floatarith f xs\n 2. \\<And>x2.\n       \\<lbrakk>f \\<in> Mapping.keys M; Unop \\<noteq> f;\n        length slp - the (Mapping.lookup M f) = Suc x2\\<rbrakk>\n       \\<Longrightarrow> interpret_slp slp xs ! x2 =\n                         interpret_floatarith f xs", "using assms(3) leD"], ["proof (prove)\nusing this:\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?y \\<le> ?x \\<Longrightarrow> \\<not> ?x < ?y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>f \\<in> Mapping.keys M; Unop \\<noteq> f;\n     length slp \\<le> the (Mapping.lookup M f)\\<rbrakk>\n    \\<Longrightarrow> unop xs = interpret_floatarith f xs\n 2. \\<And>x2.\n       \\<lbrakk>f \\<in> Mapping.keys M; Unop \\<noteq> f;\n        length slp - the (Mapping.lookup M f) = Suc x2\\<rbrakk>\n       \\<Longrightarrow> interpret_slp slp xs ! x2 =\n                         interpret_floatarith f xs", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>f \\<in> Mapping.keys M; Unop \\<noteq> f;\n        length slp - the (Mapping.lookup M f) = Suc x2\\<rbrakk>\n       \\<Longrightarrow> interpret_slp slp xs ! x2 =\n                         interpret_floatarith f xs", "by (metis Suc_diff_Suc Suc_inject assms(3) assms(4) slp_index_def slp_index_lookup_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  {Unop} \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M Unop = Some a \\<Longrightarrow>\n       {Unop} \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M Unop = Some a \\<Longrightarrow>\n       {Unop} \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "case (Some C)"], ["proof (state)\nthis:\n  Mapping.lookup M Unop = Some C\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M Unop = Some a \\<Longrightarrow>\n       {Unop} \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "then"], ["proof (chain)\npicking this:\n  Mapping.lookup M Unop = Some C", "have M': \"M' = Mapping.update Unop (length slp) M\"\n      and slp': \"slp' = slp @ [Var (slp_index slp C)]\"\n      and Unop_keys: \"(Unop) \\<in> Mapping.keys M\""], ["proof (prove)\nusing this:\n  Mapping.lookup M Unop = Some C\n\ngoal (1 subgoal):\n 1. M' = Mapping.update Unop (length slp) M &&&\n    slp' = slp @ [Var (slp_index slp C)] &&& Unop \\<in> Mapping.keys M", "using *"], ["proof (prove)\nusing this:\n  Mapping.lookup M Unop = Some C\n  slp_of_fa_cnst Unop Unop' M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. M' = Mapping.update Unop (length slp) M &&&\n    slp' = slp @ [Var (slp_index slp C)] &&& Unop \\<in> Mapping.keys M", "by (auto simp: slp_of_fa_cnst_def keys_dom_lookup)"], ["proof (state)\nthis:\n  M' = Mapping.update Unop (length slp) M\n  slp' = slp @ [Var (slp_index slp C)]\n  Unop \\<in> Mapping.keys M\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M Unop = Some a \\<Longrightarrow>\n       {Unop} \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have \"subterms (Unop) \\<subseteq> Mapping.keys M'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms Unop \\<subseteq> Mapping.keys M'", "using Unop_keys"], ["proof (prove)\nusing this:\n  Unop \\<in> Mapping.keys M\n\ngoal (1 subgoal):\n 1. subterms Unop \\<subseteq> Mapping.keys M'", "by (fastforce simp: M')"], ["proof (state)\nthis:\n  subterms Unop \\<subseteq> Mapping.keys M'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M Unop = Some a \\<Longrightarrow>\n       {Unop} \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "moreover"], ["proof (state)\nthis:\n  subterms Unop \\<subseteq> Mapping.keys M'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M Unop = Some a \\<Longrightarrow>\n       {Unop} \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have \"Mapping.keys M \\<subseteq> Mapping.keys M'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mapping.keys M \\<subseteq> Mapping.keys M'", "using Unop_keys assms(5)"], ["proof (prove)\nusing this:\n  Unop \\<in> Mapping.keys M\n  subterms Unop = {Unop}\n\ngoal (1 subgoal):\n 1. Mapping.keys M \\<subseteq> Mapping.keys M'", "by (force simp: M')"], ["proof (state)\nthis:\n  Mapping.keys M \\<subseteq> Mapping.keys M'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M Unop = Some a \\<Longrightarrow>\n       {Unop} \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "moreover"], ["proof (state)\nthis:\n  Mapping.keys M \\<subseteq> Mapping.keys M'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M Unop = Some a \\<Longrightarrow>\n       {Unop} \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have \"f\\<in>Mapping.keys M' \\<Longrightarrow> interpret_slp slp' xs ! slp_index_lookup slp' M' f  = interpret_floatarith f xs\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys M' \\<Longrightarrow>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs", "apply (auto simp add: M' lookup_map_values lookup_update' slp' slp_index_lookup_def slp_index_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. f = Unop \\<Longrightarrow>\n    interpret_slp slp xs ! (length slp - Suc C) = unop xs\n 2. \\<lbrakk>f \\<in> Mapping.keys M; Unop = f\\<rbrakk>\n    \\<Longrightarrow> interpret_slp slp xs ! (length slp - Suc C) =\n                      interpret_floatarith f xs\n 3. \\<lbrakk>f \\<in> Mapping.keys M; Unop \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> (interpret_slp slp xs ! (length slp - Suc C) #\n                       interpret_slp slp xs) !\n                      (length slp - the (Mapping.lookup M f)) =\n                      interpret_floatarith f xs", "apply (metis Some Unop_keys assms(4) interpret_Unop option.sel slp_index_def slp_index_lookup_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>f \\<in> Mapping.keys M; Unop = f\\<rbrakk>\n    \\<Longrightarrow> interpret_slp slp xs ! (length slp - Suc C) =\n                      interpret_floatarith f xs\n 2. \\<lbrakk>f \\<in> Mapping.keys M; Unop \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> (interpret_slp slp xs ! (length slp - Suc C) #\n                       interpret_slp slp xs) !\n                      (length slp - the (Mapping.lookup M f)) =\n                      interpret_floatarith f xs", "apply (metis Some Unop_keys assms(4) interpret_Unop option.sel slp_index_def slp_index_lookup_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> Mapping.keys M; Unop \\<noteq> f\\<rbrakk>\n    \\<Longrightarrow> (interpret_slp slp xs ! (length slp - Suc C) #\n                       interpret_slp slp xs) !\n                      (length slp - the (Mapping.lookup M f)) =\n                      interpret_floatarith f xs", "by (metis Suc_diff_Suc assms(3) assms(4) nth_Cons_Suc slp_index_def slp_index_lookup_def)"], ["proof (state)\nthis:\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  interpret_slp slp' xs ! slp_index_lookup slp' M' ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M Unop = Some a \\<Longrightarrow>\n       {Unop} \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "moreover"], ["proof (state)\nthis:\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  interpret_slp slp' xs ! slp_index_lookup slp' M' ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M Unop = Some a \\<Longrightarrow>\n       {Unop} \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have \"f\\<in>Mapping.keys M' \\<Longrightarrow> subterms f \\<subseteq> Mapping.keys M'\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys M' \\<Longrightarrow>\n    subterms f \\<subseteq> Mapping.keys M'", "using assms"], ["proof (prove)\nusing this:\n  slp_of_fa_cnst Unop Unop' M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n  subterms Unop = {Unop}\n  interpret_floatarith Unop xs = unop xs\n  interpret_floatarith Unop' (interpret_slp slp xs) = unop xs\n  unop (interpret_slp slp xs) = unop xs\n\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys M' \\<Longrightarrow>\n    subterms f \\<subseteq> Mapping.keys M'", "by (auto simp add: M' lookup_map_values lookup_update' slp')"], ["proof (state)\nthis:\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M Unop = Some a \\<Longrightarrow>\n       {Unop} \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "moreover"], ["proof (state)\nthis:\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M Unop = Some a \\<Longrightarrow>\n       {Unop} \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "have \"f\\<in>Mapping.keys M' \\<Longrightarrow> the (Mapping.lookup M' f) < length slp'\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys M' \\<Longrightarrow>\n    the (Mapping.lookup M' f) < length slp'", "using assms"], ["proof (prove)\nusing this:\n  slp_of_fa_cnst Unop Unop' M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n  subterms Unop = {Unop}\n  interpret_floatarith Unop xs = unop xs\n  interpret_floatarith Unop' (interpret_slp slp xs) = unop xs\n  unop (interpret_slp slp xs) = unop xs\n\ngoal (1 subgoal):\n 1. f \\<in> Mapping.keys M' \\<Longrightarrow>\n    the (Mapping.lookup M' f) < length slp'", "by (auto simp add: M' lookup_map_values lookup_update' slp' less_SucI)"], ["proof (state)\nthis:\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  the (Mapping.lookup M' ?f) < length slp'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       Mapping.lookup M Unop = Some a \\<Longrightarrow>\n       {Unop} \\<subseteq> Mapping.keys M' \\<and>\n       Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n       (\\<forall>f\\<in>Mapping.keys M'.\n           subterms f \\<subseteq> Mapping.keys M' \\<and>\n           the (Mapping.lookup M' f) < length slp' \\<and>\n           interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n           interpret_floatarith f xs)", "ultimately"], ["proof (chain)\npicking this:\n  subterms Unop \\<subseteq> Mapping.keys M'\n  Mapping.keys M \\<subseteq> Mapping.keys M'\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  interpret_slp slp' xs ! slp_index_lookup slp' M' ?f =\n  interpret_floatarith ?f xs\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M'\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  the (Mapping.lookup M' ?f) < length slp'", "show ?thesis"], ["proof (prove)\nusing this:\n  subterms Unop \\<subseteq> Mapping.keys M'\n  Mapping.keys M \\<subseteq> Mapping.keys M'\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  interpret_slp slp' xs ! slp_index_lookup slp' M' ?f =\n  interpret_floatarith ?f xs\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M'\n  ?f \\<in> Mapping.keys M' \\<Longrightarrow>\n  the (Mapping.lookup M' ?f) < length slp'\n\ngoal (1 subgoal):\n 1. {Unop} \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by auto"], ["proof (state)\nthis:\n  {Unop} \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {Unop} \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma interpret_slp_nth:\n  \"n \\<ge> length slp \\<Longrightarrow> interpret_slp slp xs ! n = xs ! (n - length slp)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length slp \\<le> n \\<Longrightarrow>\n    interpret_slp slp xs ! n = xs ! (n - length slp)", "by (induction slp arbitrary: xs n) auto"], ["", "theorem\n  interpret_slp_of_fa:\n  assumes \"slp_of_fa fa M slp = (M', slp')\"\n  assumes \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> subterms f \\<subseteq> Mapping.keys M\"\n  assumes \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> (the (Mapping.lookup M f)) < length slp\"\n  assumes \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> interpret_slp slp xs ! slp_index_lookup slp M f = interpret_floatarith f xs\"\n  shows \"subterms fa \\<subseteq> Mapping.keys M' \\<and> Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f \\<in> Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      (interpret_slp slp' xs ! slp_index_lookup slp' M' f = interpret_floatarith f xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms fa \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "using assms"], ["proof (prove)\nusing this:\n  slp_of_fa fa M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. subterms fa \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "proof (induction fa arbitrary: M' slp' M slp)"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Add fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Add fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Minus fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Minus fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Mult fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Mult fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Inverse fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Inverse fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Arctan fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Arctan fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Max fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Max fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Min fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Min fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>M' slp' M slp.\n        \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)\nA total of 18 subgoals...", "case *: (Add fa1 fa2)"], ["proof (state)\nthis:\n  \\<lbrakk>slp_of_fa fa1 ?M ?slp = (?M', ?slp');\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      subterms f \\<subseteq> Mapping.keys ?M;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      the (Mapping.lookup ?M f) < length ?slp;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      interpret_slp ?slp xs ! slp_index_lookup ?slp ?M f =\n      interpret_floatarith f xs\\<rbrakk>\n  \\<Longrightarrow> subterms fa1 \\<subseteq> Mapping.keys ?M' \\<and>\n                    Mapping.keys ?M \\<subseteq> Mapping.keys ?M' \\<and>\n                    (\\<forall>f\\<in>Mapping.keys ?M'.\n                        subterms f \\<subseteq> Mapping.keys ?M' \\<and>\n                        the (Mapping.lookup ?M' f) < length ?slp' \\<and>\n                        interpret_slp ?slp' xs !\n                        slp_index_lookup ?slp' ?M' f =\n                        interpret_floatarith f xs)\n  \\<lbrakk>slp_of_fa fa2 ?M ?slp = (?M', ?slp');\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      subterms f \\<subseteq> Mapping.keys ?M;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      the (Mapping.lookup ?M f) < length ?slp;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      interpret_slp ?slp xs ! slp_index_lookup ?slp ?M f =\n      interpret_floatarith f xs\\<rbrakk>\n  \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys ?M' \\<and>\n                    Mapping.keys ?M \\<subseteq> Mapping.keys ?M' \\<and>\n                    (\\<forall>f\\<in>Mapping.keys ?M'.\n                        subterms f \\<subseteq> Mapping.keys ?M' \\<and>\n                        the (Mapping.lookup ?M' f) < length ?slp' \\<and>\n                        interpret_slp ?slp' xs !\n                        slp_index_lookup ?slp' ?M' f =\n                        interpret_floatarith f xs)\n  slp_of_fa (Add fa1 fa2) M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (18 subgoals):\n 1. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Add fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Add fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Minus fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Minus fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Mult fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Mult fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Inverse fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Inverse fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Arctan fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Arctan fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Max fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Max fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Min fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Min fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>M' slp' M slp.\n        \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)\nA total of 18 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms (Add fa1 fa2) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "unfolding subterms.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Add fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n    \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by (rule binop_slp_of_fa_induction_step[OF\n          *[unfolded subterms.simps slp_of_fa.simps Let_def]]) auto"], ["proof (state)\nthis:\n  subterms (Add fa1 fa2) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal (17 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Minus fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Minus fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Mult fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Mult fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Inverse fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Inverse fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Arctan fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Arctan fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Max fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Max fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Min fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Min fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>fa M' slp' M slp.\n        \\<lbrakk>\\<And>M' slp' M slp.\n                    \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        subterms f \\<subseteq> Mapping.keys M;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        the (Mapping.lookup M f) < length slp;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        interpret_slp slp xs ! slp_index_lookup slp M f =\n                        interpret_floatarith f xs\\<rbrakk>\n                    \\<Longrightarrow> subterms fa\n\\<subseteq> Mapping.keys M' \\<and>\nMapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n(\\<forall>f\\<in>Mapping.keys M'.\n    subterms f \\<subseteq> Mapping.keys M' \\<and>\n    the (Mapping.lookup M' f) < length slp' \\<and>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs);\n         slp_of_fa (Sqrt fa) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Sqrt fa)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Minus fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Minus fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Mult fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Mult fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Inverse fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Inverse fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Arctan fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Arctan fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Max fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Max fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Min fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Min fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>fa M' slp' M slp.\n        \\<lbrakk>\\<And>M' slp' M slp.\n                    \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        subterms f \\<subseteq> Mapping.keys M;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        the (Mapping.lookup M f) < length slp;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        interpret_slp slp xs ! slp_index_lookup slp M f =\n                        interpret_floatarith f xs\\<rbrakk>\n                    \\<Longrightarrow> subterms fa\n\\<subseteq> Mapping.keys M' \\<and>\nMapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n(\\<forall>f\\<in>Mapping.keys M'.\n    subterms f \\<subseteq> Mapping.keys M' \\<and>\n    the (Mapping.lookup M' f) < length slp' \\<and>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs);\n         slp_of_fa (Sqrt fa) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Sqrt fa)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)\nA total of 17 subgoals...", "case *: (Mult fa1 fa2)"], ["proof (state)\nthis:\n  \\<lbrakk>slp_of_fa fa1 ?M ?slp = (?M', ?slp');\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      subterms f \\<subseteq> Mapping.keys ?M;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      the (Mapping.lookup ?M f) < length ?slp;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      interpret_slp ?slp xs ! slp_index_lookup ?slp ?M f =\n      interpret_floatarith f xs\\<rbrakk>\n  \\<Longrightarrow> subterms fa1 \\<subseteq> Mapping.keys ?M' \\<and>\n                    Mapping.keys ?M \\<subseteq> Mapping.keys ?M' \\<and>\n                    (\\<forall>f\\<in>Mapping.keys ?M'.\n                        subterms f \\<subseteq> Mapping.keys ?M' \\<and>\n                        the (Mapping.lookup ?M' f) < length ?slp' \\<and>\n                        interpret_slp ?slp' xs !\n                        slp_index_lookup ?slp' ?M' f =\n                        interpret_floatarith f xs)\n  \\<lbrakk>slp_of_fa fa2 ?M ?slp = (?M', ?slp');\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      subterms f \\<subseteq> Mapping.keys ?M;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      the (Mapping.lookup ?M f) < length ?slp;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      interpret_slp ?slp xs ! slp_index_lookup ?slp ?M f =\n      interpret_floatarith f xs\\<rbrakk>\n  \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys ?M' \\<and>\n                    Mapping.keys ?M \\<subseteq> Mapping.keys ?M' \\<and>\n                    (\\<forall>f\\<in>Mapping.keys ?M'.\n                        subterms f \\<subseteq> Mapping.keys ?M' \\<and>\n                        the (Mapping.lookup ?M' f) < length ?slp' \\<and>\n                        interpret_slp ?slp' xs !\n                        slp_index_lookup ?slp' ?M' f =\n                        interpret_floatarith f xs)\n  slp_of_fa (Mult fa1 fa2) M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (17 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Minus fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Minus fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Mult fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Mult fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Inverse fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Inverse fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Arctan fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Arctan fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Max fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Max fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Min fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Min fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>fa M' slp' M slp.\n        \\<lbrakk>\\<And>M' slp' M slp.\n                    \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        subterms f \\<subseteq> Mapping.keys M;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        the (Mapping.lookup M f) < length slp;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        interpret_slp slp xs ! slp_index_lookup slp M f =\n                        interpret_floatarith f xs\\<rbrakk>\n                    \\<Longrightarrow> subterms fa\n\\<subseteq> Mapping.keys M' \\<and>\nMapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n(\\<forall>f\\<in>Mapping.keys M'.\n    subterms f \\<subseteq> Mapping.keys M' \\<and>\n    the (Mapping.lookup M' f) < length slp' \\<and>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs);\n         slp_of_fa (Sqrt fa) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Sqrt fa)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)\nA total of 17 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms (Mult fa1 fa2) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "unfolding subterms.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Mult fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n    \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by (rule binop_slp_of_fa_induction_step[OF\n          *[unfolded subterms.simps slp_of_fa.simps Let_def]]) auto"], ["proof (state)\nthis:\n  subterms (Mult fa1 fa2) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal (16 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Minus fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Minus fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Inverse fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Inverse fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Arctan fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Arctan fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Max fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Max fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Min fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Min fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>fa M' slp' M slp.\n        \\<lbrakk>\\<And>M' slp' M slp.\n                    \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        subterms f \\<subseteq> Mapping.keys M;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        the (Mapping.lookup M f) < length slp;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        interpret_slp slp xs ! slp_index_lookup slp M f =\n                        interpret_floatarith f xs\\<rbrakk>\n                    \\<Longrightarrow> subterms fa\n\\<subseteq> Mapping.keys M' \\<and>\nMapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n(\\<forall>f\\<in>Mapping.keys M'.\n    subterms f \\<subseteq> Mapping.keys M' \\<and>\n    the (Mapping.lookup M' f) < length slp' \\<and>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs);\n         slp_of_fa (Exp fa) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Exp fa)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)\nA total of 16 subgoals...", "next"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Minus fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Minus fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Inverse fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Inverse fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Arctan fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Arctan fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Max fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Max fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Min fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Min fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>fa M' slp' M slp.\n        \\<lbrakk>\\<And>M' slp' M slp.\n                    \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        subterms f \\<subseteq> Mapping.keys M;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        the (Mapping.lookup M f) < length slp;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        interpret_slp slp xs ! slp_index_lookup slp M f =\n                        interpret_floatarith f xs\\<rbrakk>\n                    \\<Longrightarrow> subterms fa\n\\<subseteq> Mapping.keys M' \\<and>\nMapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n(\\<forall>f\\<in>Mapping.keys M'.\n    subterms f \\<subseteq> Mapping.keys M' \\<and>\n    the (Mapping.lookup M' f) < length slp' \\<and>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs);\n         slp_of_fa (Exp fa) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Exp fa)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)\nA total of 16 subgoals...", "case *: (Min fa1 fa2)"], ["proof (state)\nthis:\n  \\<lbrakk>slp_of_fa fa1 ?M ?slp = (?M', ?slp');\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      subterms f \\<subseteq> Mapping.keys ?M;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      the (Mapping.lookup ?M f) < length ?slp;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      interpret_slp ?slp xs ! slp_index_lookup ?slp ?M f =\n      interpret_floatarith f xs\\<rbrakk>\n  \\<Longrightarrow> subterms fa1 \\<subseteq> Mapping.keys ?M' \\<and>\n                    Mapping.keys ?M \\<subseteq> Mapping.keys ?M' \\<and>\n                    (\\<forall>f\\<in>Mapping.keys ?M'.\n                        subterms f \\<subseteq> Mapping.keys ?M' \\<and>\n                        the (Mapping.lookup ?M' f) < length ?slp' \\<and>\n                        interpret_slp ?slp' xs !\n                        slp_index_lookup ?slp' ?M' f =\n                        interpret_floatarith f xs)\n  \\<lbrakk>slp_of_fa fa2 ?M ?slp = (?M', ?slp');\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      subterms f \\<subseteq> Mapping.keys ?M;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      the (Mapping.lookup ?M f) < length ?slp;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      interpret_slp ?slp xs ! slp_index_lookup ?slp ?M f =\n      interpret_floatarith f xs\\<rbrakk>\n  \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys ?M' \\<and>\n                    Mapping.keys ?M \\<subseteq> Mapping.keys ?M' \\<and>\n                    (\\<forall>f\\<in>Mapping.keys ?M'.\n                        subterms f \\<subseteq> Mapping.keys ?M' \\<and>\n                        the (Mapping.lookup ?M' f) < length ?slp' \\<and>\n                        interpret_slp ?slp' xs !\n                        slp_index_lookup ?slp' ?M' f =\n                        interpret_floatarith f xs)\n  slp_of_fa (Min fa1 fa2) M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (16 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Minus fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Minus fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Inverse fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Inverse fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Arctan fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Arctan fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Max fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Max fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Min fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Min fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>fa M' slp' M slp.\n        \\<lbrakk>\\<And>M' slp' M slp.\n                    \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        subterms f \\<subseteq> Mapping.keys M;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        the (Mapping.lookup M f) < length slp;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        interpret_slp slp xs ! slp_index_lookup slp M f =\n                        interpret_floatarith f xs\\<rbrakk>\n                    \\<Longrightarrow> subterms fa\n\\<subseteq> Mapping.keys M' \\<and>\nMapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n(\\<forall>f\\<in>Mapping.keys M'.\n    subterms f \\<subseteq> Mapping.keys M' \\<and>\n    the (Mapping.lookup M' f) < length slp' \\<and>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs);\n         slp_of_fa (Exp fa) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Exp fa)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)\nA total of 16 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms (Min fa1 fa2) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "unfolding subterms.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Min fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n    \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by (rule binop_slp_of_fa_induction_step[OF\n          *[unfolded subterms.simps slp_of_fa.simps Let_def]]) auto"], ["proof (state)\nthis:\n  subterms (Min fa1 fa2) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal (15 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Minus fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Minus fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Inverse fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Inverse fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Arctan fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Arctan fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Max fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Max fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>fa1 fa2 M' slp' M slp.\n        \\<lbrakk>\\<And>M' slp' M slp.\n                    \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        subterms f \\<subseteq> Mapping.keys M;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        the (Mapping.lookup M f) < length slp;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        interpret_slp slp xs ! slp_index_lookup slp M f =\n                        interpret_floatarith f xs\\<rbrakk>\n                    \\<Longrightarrow> subterms fa1\n\\<subseteq> Mapping.keys M' \\<and>\nMapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n(\\<forall>f\\<in>Mapping.keys M'.\n    subterms f \\<subseteq> Mapping.keys M' \\<and>\n    the (Mapping.lookup M' f) < length slp' \\<and>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs);\n         \\<And>M' slp' M slp.\n            \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n             \\<And>f.\n                f \\<in> Mapping.keys M \\<Longrightarrow>\n                subterms f \\<subseteq> Mapping.keys M;\n             \\<And>f.\n                f \\<in> Mapping.keys M \\<Longrightarrow>\n                the (Mapping.lookup M f) < length slp;\n             \\<And>f.\n                f \\<in> Mapping.keys M \\<Longrightarrow>\n                interpret_slp slp xs ! slp_index_lookup slp M f =\n                interpret_floatarith f xs\\<rbrakk>\n            \\<Longrightarrow> subterms fa2\n                              \\<subseteq> Mapping.keys M' \\<and>\n                              Mapping.keys M\n                              \\<subseteq> Mapping.keys M' \\<and>\n                              (\\<forall>f\\<in>Mapping.keys M'.\n                                  subterms f\n                                  \\<subseteq> Mapping.keys M' \\<and>\n                                  the (Mapping.lookup M' f)\n                                  < length slp' \\<and>\n                                  interpret_slp slp' xs !\n                                  slp_index_lookup slp' M' f =\n                                  interpret_floatarith f xs);\n         slp_of_fa (Powr fa1 fa2) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Powr fa1 fa2)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Minus fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Minus fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Inverse fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Inverse fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Arctan fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Arctan fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Max fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Max fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>fa1 fa2 M' slp' M slp.\n        \\<lbrakk>\\<And>M' slp' M slp.\n                    \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        subterms f \\<subseteq> Mapping.keys M;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        the (Mapping.lookup M f) < length slp;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        interpret_slp slp xs ! slp_index_lookup slp M f =\n                        interpret_floatarith f xs\\<rbrakk>\n                    \\<Longrightarrow> subterms fa1\n\\<subseteq> Mapping.keys M' \\<and>\nMapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n(\\<forall>f\\<in>Mapping.keys M'.\n    subterms f \\<subseteq> Mapping.keys M' \\<and>\n    the (Mapping.lookup M' f) < length slp' \\<and>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs);\n         \\<And>M' slp' M slp.\n            \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n             \\<And>f.\n                f \\<in> Mapping.keys M \\<Longrightarrow>\n                subterms f \\<subseteq> Mapping.keys M;\n             \\<And>f.\n                f \\<in> Mapping.keys M \\<Longrightarrow>\n                the (Mapping.lookup M f) < length slp;\n             \\<And>f.\n                f \\<in> Mapping.keys M \\<Longrightarrow>\n                interpret_slp slp xs ! slp_index_lookup slp M f =\n                interpret_floatarith f xs\\<rbrakk>\n            \\<Longrightarrow> subterms fa2\n                              \\<subseteq> Mapping.keys M' \\<and>\n                              Mapping.keys M\n                              \\<subseteq> Mapping.keys M' \\<and>\n                              (\\<forall>f\\<in>Mapping.keys M'.\n                                  subterms f\n                                  \\<subseteq> Mapping.keys M' \\<and>\n                                  the (Mapping.lookup M' f)\n                                  < length slp' \\<and>\n                                  interpret_slp slp' xs !\n                                  slp_index_lookup slp' M' f =\n                                  interpret_floatarith f xs);\n         slp_of_fa (Powr fa1 fa2) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Powr fa1 fa2)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)\nA total of 15 subgoals...", "case *: (Max fa1 fa2)"], ["proof (state)\nthis:\n  \\<lbrakk>slp_of_fa fa1 ?M ?slp = (?M', ?slp');\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      subterms f \\<subseteq> Mapping.keys ?M;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      the (Mapping.lookup ?M f) < length ?slp;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      interpret_slp ?slp xs ! slp_index_lookup ?slp ?M f =\n      interpret_floatarith f xs\\<rbrakk>\n  \\<Longrightarrow> subterms fa1 \\<subseteq> Mapping.keys ?M' \\<and>\n                    Mapping.keys ?M \\<subseteq> Mapping.keys ?M' \\<and>\n                    (\\<forall>f\\<in>Mapping.keys ?M'.\n                        subterms f \\<subseteq> Mapping.keys ?M' \\<and>\n                        the (Mapping.lookup ?M' f) < length ?slp' \\<and>\n                        interpret_slp ?slp' xs !\n                        slp_index_lookup ?slp' ?M' f =\n                        interpret_floatarith f xs)\n  \\<lbrakk>slp_of_fa fa2 ?M ?slp = (?M', ?slp');\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      subterms f \\<subseteq> Mapping.keys ?M;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      the (Mapping.lookup ?M f) < length ?slp;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      interpret_slp ?slp xs ! slp_index_lookup ?slp ?M f =\n      interpret_floatarith f xs\\<rbrakk>\n  \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys ?M' \\<and>\n                    Mapping.keys ?M \\<subseteq> Mapping.keys ?M' \\<and>\n                    (\\<forall>f\\<in>Mapping.keys ?M'.\n                        subterms f \\<subseteq> Mapping.keys ?M' \\<and>\n                        the (Mapping.lookup ?M' f) < length ?slp' \\<and>\n                        interpret_slp ?slp' xs !\n                        slp_index_lookup ?slp' ?M' f =\n                        interpret_floatarith f xs)\n  slp_of_fa (Max fa1 fa2) M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (15 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Minus fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Minus fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Inverse fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Inverse fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Arctan fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Arctan fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Max fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Max fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>fa1 fa2 M' slp' M slp.\n        \\<lbrakk>\\<And>M' slp' M slp.\n                    \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        subterms f \\<subseteq> Mapping.keys M;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        the (Mapping.lookup M f) < length slp;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        interpret_slp slp xs ! slp_index_lookup slp M f =\n                        interpret_floatarith f xs\\<rbrakk>\n                    \\<Longrightarrow> subterms fa1\n\\<subseteq> Mapping.keys M' \\<and>\nMapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n(\\<forall>f\\<in>Mapping.keys M'.\n    subterms f \\<subseteq> Mapping.keys M' \\<and>\n    the (Mapping.lookup M' f) < length slp' \\<and>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs);\n         \\<And>M' slp' M slp.\n            \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n             \\<And>f.\n                f \\<in> Mapping.keys M \\<Longrightarrow>\n                subterms f \\<subseteq> Mapping.keys M;\n             \\<And>f.\n                f \\<in> Mapping.keys M \\<Longrightarrow>\n                the (Mapping.lookup M f) < length slp;\n             \\<And>f.\n                f \\<in> Mapping.keys M \\<Longrightarrow>\n                interpret_slp slp xs ! slp_index_lookup slp M f =\n                interpret_floatarith f xs\\<rbrakk>\n            \\<Longrightarrow> subterms fa2\n                              \\<subseteq> Mapping.keys M' \\<and>\n                              Mapping.keys M\n                              \\<subseteq> Mapping.keys M' \\<and>\n                              (\\<forall>f\\<in>Mapping.keys M'.\n                                  subterms f\n                                  \\<subseteq> Mapping.keys M' \\<and>\n                                  the (Mapping.lookup M' f)\n                                  < length slp' \\<and>\n                                  interpret_slp slp' xs !\n                                  slp_index_lookup slp' M' f =\n                                  interpret_floatarith f xs);\n         slp_of_fa (Powr fa1 fa2) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Powr fa1 fa2)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)\nA total of 15 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms (Max fa1 fa2) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "unfolding subterms.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Max fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n    \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by (rule binop_slp_of_fa_induction_step[OF\n          *[unfolded subterms.simps slp_of_fa.simps Let_def]]) auto"], ["proof (state)\nthis:\n  subterms (Max fa1 fa2) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal (14 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Minus fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Minus fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Inverse fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Inverse fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Arctan fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Arctan fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Powr fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Powr fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>fa M' slp' M slp.\n        \\<lbrakk>\\<And>M' slp' M slp.\n                    \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        subterms f \\<subseteq> Mapping.keys M;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        the (Mapping.lookup M f) < length slp;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        interpret_slp slp xs ! slp_index_lookup slp M f =\n                        interpret_floatarith f xs\\<rbrakk>\n                    \\<Longrightarrow> subterms fa\n\\<subseteq> Mapping.keys M' \\<and>\nMapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n(\\<forall>f\\<in>Mapping.keys M'.\n    subterms f \\<subseteq> Mapping.keys M' \\<and>\n    the (Mapping.lookup M' f) < length slp' \\<and>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs);\n         slp_of_fa (Ln fa) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Ln fa)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)\nA total of 14 subgoals...", "next"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Minus fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Minus fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Inverse fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Inverse fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Arctan fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Arctan fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Powr fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Powr fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>fa M' slp' M slp.\n        \\<lbrakk>\\<And>M' slp' M slp.\n                    \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        subterms f \\<subseteq> Mapping.keys M;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        the (Mapping.lookup M f) < length slp;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        interpret_slp slp xs ! slp_index_lookup slp M f =\n                        interpret_floatarith f xs\\<rbrakk>\n                    \\<Longrightarrow> subterms fa\n\\<subseteq> Mapping.keys M' \\<and>\nMapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n(\\<forall>f\\<in>Mapping.keys M'.\n    subterms f \\<subseteq> Mapping.keys M' \\<and>\n    the (Mapping.lookup M' f) < length slp' \\<and>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs);\n         slp_of_fa (Ln fa) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Ln fa)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)\nA total of 14 subgoals...", "case *: (Powr fa1 fa2)"], ["proof (state)\nthis:\n  \\<lbrakk>slp_of_fa fa1 ?M ?slp = (?M', ?slp');\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      subterms f \\<subseteq> Mapping.keys ?M;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      the (Mapping.lookup ?M f) < length ?slp;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      interpret_slp ?slp xs ! slp_index_lookup ?slp ?M f =\n      interpret_floatarith f xs\\<rbrakk>\n  \\<Longrightarrow> subterms fa1 \\<subseteq> Mapping.keys ?M' \\<and>\n                    Mapping.keys ?M \\<subseteq> Mapping.keys ?M' \\<and>\n                    (\\<forall>f\\<in>Mapping.keys ?M'.\n                        subterms f \\<subseteq> Mapping.keys ?M' \\<and>\n                        the (Mapping.lookup ?M' f) < length ?slp' \\<and>\n                        interpret_slp ?slp' xs !\n                        slp_index_lookup ?slp' ?M' f =\n                        interpret_floatarith f xs)\n  \\<lbrakk>slp_of_fa fa2 ?M ?slp = (?M', ?slp');\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      subterms f \\<subseteq> Mapping.keys ?M;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      the (Mapping.lookup ?M f) < length ?slp;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      interpret_slp ?slp xs ! slp_index_lookup ?slp ?M f =\n      interpret_floatarith f xs\\<rbrakk>\n  \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys ?M' \\<and>\n                    Mapping.keys ?M \\<subseteq> Mapping.keys ?M' \\<and>\n                    (\\<forall>f\\<in>Mapping.keys ?M'.\n                        subterms f \\<subseteq> Mapping.keys ?M' \\<and>\n                        the (Mapping.lookup ?M' f) < length ?slp' \\<and>\n                        interpret_slp ?slp' xs !\n                        slp_index_lookup ?slp' ?M' f =\n                        interpret_floatarith f xs)\n  slp_of_fa (Powr fa1 fa2) M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (14 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Minus fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Minus fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Inverse fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Inverse fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Arctan fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Arctan fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>fa1 fa2 M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa1 M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa1\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        \\<And>M' slp' M slp.\n           \\<lbrakk>slp_of_fa fa2 M slp = (M', slp');\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               subterms f \\<subseteq> Mapping.keys M;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               the (Mapping.lookup M f) < length slp;\n            \\<And>f.\n               f \\<in> Mapping.keys M \\<Longrightarrow>\n               interpret_slp slp xs ! slp_index_lookup slp M f =\n               interpret_floatarith f xs\\<rbrakk>\n           \\<Longrightarrow> subterms fa2 \\<subseteq> Mapping.keys M' \\<and>\n                             Mapping.keys M\n                             \\<subseteq> Mapping.keys M' \\<and>\n                             (\\<forall>f\\<in>Mapping.keys M'.\n                                 subterms f\n                                 \\<subseteq> Mapping.keys M' \\<and>\n                                 the (Mapping.lookup M' f)\n                                 < length slp' \\<and>\n                                 interpret_slp slp' xs !\n                                 slp_index_lookup slp' M' f =\n                                 interpret_floatarith f xs);\n        slp_of_fa (Powr fa1 fa2) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Powr fa1 fa2)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>fa M' slp' M slp.\n        \\<lbrakk>\\<And>M' slp' M slp.\n                    \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        subterms f \\<subseteq> Mapping.keys M;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        the (Mapping.lookup M f) < length slp;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        interpret_slp slp xs ! slp_index_lookup slp M f =\n                        interpret_floatarith f xs\\<rbrakk>\n                    \\<Longrightarrow> subterms fa\n\\<subseteq> Mapping.keys M' \\<and>\nMapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n(\\<forall>f\\<in>Mapping.keys M'.\n    subterms f \\<subseteq> Mapping.keys M' \\<and>\n    the (Mapping.lookup M' f) < length slp' \\<and>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs);\n         slp_of_fa (Ln fa) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Ln fa)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)\nA total of 14 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms (Powr fa1 fa2) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "unfolding subterms.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Powr fa1 fa2) (subterms fa1 \\<union> subterms fa2)\n    \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by (rule binop_slp_of_fa_induction_step[OF\n          *[unfolded subterms.simps slp_of_fa.simps Let_def]]) auto"], ["proof (state)\nthis:\n  subterms (Powr fa1 fa2) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal (13 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Minus fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Minus fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Inverse fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Inverse fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Arctan fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Arctan fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Ln fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Ln fa) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>fa x2a M' slp' M slp.\n        \\<lbrakk>\\<And>M' slp' M slp.\n                    \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        subterms f \\<subseteq> Mapping.keys M;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        the (Mapping.lookup M f) < length slp;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        interpret_slp slp xs ! slp_index_lookup slp M f =\n                        interpret_floatarith f xs\\<rbrakk>\n                    \\<Longrightarrow> subterms fa\n\\<subseteq> Mapping.keys M' \\<and>\nMapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n(\\<forall>f\\<in>Mapping.keys M'.\n    subterms f \\<subseteq> Mapping.keys M' \\<and>\n    the (Mapping.lookup M' f) < length slp' \\<and>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs);\n         slp_of_fa (Power fa x2a) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Power fa x2a)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)\nA total of 13 subgoals...", "next"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Minus fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Minus fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Inverse fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Inverse fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Arctan fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Arctan fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Ln fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Ln fa) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>fa x2a M' slp' M slp.\n        \\<lbrakk>\\<And>M' slp' M slp.\n                    \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        subterms f \\<subseteq> Mapping.keys M;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        the (Mapping.lookup M f) < length slp;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        interpret_slp slp xs ! slp_index_lookup slp M f =\n                        interpret_floatarith f xs\\<rbrakk>\n                    \\<Longrightarrow> subterms fa\n\\<subseteq> Mapping.keys M' \\<and>\nMapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n(\\<forall>f\\<in>Mapping.keys M'.\n    subterms f \\<subseteq> Mapping.keys M' \\<and>\n    the (Mapping.lookup M' f) < length slp' \\<and>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs);\n         slp_of_fa (Power fa x2a) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Power fa x2a)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)\nA total of 13 subgoals...", "case *: (Minus fa1)"], ["proof (state)\nthis:\n  \\<lbrakk>slp_of_fa fa1 ?M ?slp = (?M', ?slp');\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      subterms f \\<subseteq> Mapping.keys ?M;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      the (Mapping.lookup ?M f) < length ?slp;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      interpret_slp ?slp xs ! slp_index_lookup ?slp ?M f =\n      interpret_floatarith f xs\\<rbrakk>\n  \\<Longrightarrow> subterms fa1 \\<subseteq> Mapping.keys ?M' \\<and>\n                    Mapping.keys ?M \\<subseteq> Mapping.keys ?M' \\<and>\n                    (\\<forall>f\\<in>Mapping.keys ?M'.\n                        subterms f \\<subseteq> Mapping.keys ?M' \\<and>\n                        the (Mapping.lookup ?M' f) < length ?slp' \\<and>\n                        interpret_slp ?slp' xs !\n                        slp_index_lookup ?slp' ?M' f =\n                        interpret_floatarith f xs)\n  slp_of_fa (Minus fa1) M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (13 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Minus fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Minus fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Inverse fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Inverse fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Arctan fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Arctan fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Ln fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Ln fa) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>fa x2a M' slp' M slp.\n        \\<lbrakk>\\<And>M' slp' M slp.\n                    \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        subterms f \\<subseteq> Mapping.keys M;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        the (Mapping.lookup M f) < length slp;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        interpret_slp slp xs ! slp_index_lookup slp M f =\n                        interpret_floatarith f xs\\<rbrakk>\n                    \\<Longrightarrow> subterms fa\n\\<subseteq> Mapping.keys M' \\<and>\nMapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n(\\<forall>f\\<in>Mapping.keys M'.\n    subterms f \\<subseteq> Mapping.keys M' \\<and>\n    the (Mapping.lookup M' f) < length slp' \\<and>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs);\n         slp_of_fa (Power fa x2a) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Power fa x2a)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)\nA total of 13 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms (Minus fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "unfolding subterms.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Minus fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by (rule unop_slp_of_fa_induction_step[OF\n          *[unfolded subterms.simps slp_of_fa.simps Let_def]]) auto"], ["proof (state)\nthis:\n  subterms (Minus fa1) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal (12 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Inverse fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Inverse fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Arctan fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Arctan fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Ln fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Ln fa) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>fa x2a M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Power fa x2a) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Power fa x2a)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>fa M' slp' M slp.\n        \\<lbrakk>\\<And>M' slp' M slp.\n                    \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        subterms f \\<subseteq> Mapping.keys M;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        the (Mapping.lookup M f) < length slp;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        interpret_slp slp xs ! slp_index_lookup slp M f =\n                        interpret_floatarith f xs\\<rbrakk>\n                    \\<Longrightarrow> subterms fa\n\\<subseteq> Mapping.keys M' \\<and>\nMapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n(\\<forall>f\\<in>Mapping.keys M'.\n    subterms f \\<subseteq> Mapping.keys M' \\<and>\n    the (Mapping.lookup M' f) < length slp' \\<and>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs);\n         slp_of_fa (Floor fa) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Floor fa)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)\nA total of 12 subgoals...", "next"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Inverse fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Inverse fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Arctan fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Arctan fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Ln fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Ln fa) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>fa x2a M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Power fa x2a) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Power fa x2a)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>fa M' slp' M slp.\n        \\<lbrakk>\\<And>M' slp' M slp.\n                    \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        subterms f \\<subseteq> Mapping.keys M;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        the (Mapping.lookup M f) < length slp;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        interpret_slp slp xs ! slp_index_lookup slp M f =\n                        interpret_floatarith f xs\\<rbrakk>\n                    \\<Longrightarrow> subterms fa\n\\<subseteq> Mapping.keys M' \\<and>\nMapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n(\\<forall>f\\<in>Mapping.keys M'.\n    subterms f \\<subseteq> Mapping.keys M' \\<and>\n    the (Mapping.lookup M' f) < length slp' \\<and>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs);\n         slp_of_fa (Floor fa) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Floor fa)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)\nA total of 12 subgoals...", "case *: (Inverse fa1)"], ["proof (state)\nthis:\n  \\<lbrakk>slp_of_fa fa1 ?M ?slp = (?M', ?slp');\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      subterms f \\<subseteq> Mapping.keys ?M;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      the (Mapping.lookup ?M f) < length ?slp;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      interpret_slp ?slp xs ! slp_index_lookup ?slp ?M f =\n      interpret_floatarith f xs\\<rbrakk>\n  \\<Longrightarrow> subterms fa1 \\<subseteq> Mapping.keys ?M' \\<and>\n                    Mapping.keys ?M \\<subseteq> Mapping.keys ?M' \\<and>\n                    (\\<forall>f\\<in>Mapping.keys ?M'.\n                        subterms f \\<subseteq> Mapping.keys ?M' \\<and>\n                        the (Mapping.lookup ?M' f) < length ?slp' \\<and>\n                        interpret_slp ?slp' xs !\n                        slp_index_lookup ?slp' ?M' f =\n                        interpret_floatarith f xs)\n  slp_of_fa (Inverse fa1) M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (12 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Inverse fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Inverse fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Arctan fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Arctan fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Ln fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Ln fa) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>fa x2a M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Power fa x2a) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Power fa x2a)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>fa M' slp' M slp.\n        \\<lbrakk>\\<And>M' slp' M slp.\n                    \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        subterms f \\<subseteq> Mapping.keys M;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        the (Mapping.lookup M f) < length slp;\n                     \\<And>f.\n                        f \\<in> Mapping.keys M \\<Longrightarrow>\n                        interpret_slp slp xs ! slp_index_lookup slp M f =\n                        interpret_floatarith f xs\\<rbrakk>\n                    \\<Longrightarrow> subterms fa\n\\<subseteq> Mapping.keys M' \\<and>\nMapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n(\\<forall>f\\<in>Mapping.keys M'.\n    subterms f \\<subseteq> Mapping.keys M' \\<and>\n    the (Mapping.lookup M' f) < length slp' \\<and>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n    interpret_floatarith f xs);\n         slp_of_fa (Floor fa) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Floor fa)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)\nA total of 12 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms (Inverse fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "unfolding subterms.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Inverse fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by (rule unop_slp_of_fa_induction_step[OF\n          *[unfolded subterms.simps slp_of_fa.simps Let_def]]) auto"], ["proof (state)\nthis:\n  subterms (Inverse fa1) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal (11 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Arctan fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Arctan fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Ln fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Ln fa) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>fa x2a M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Power fa x2a) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Power fa x2a)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Floor fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Floor fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>x M' slp' M slp.\n        \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Var x)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Arctan fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Arctan fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Ln fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Ln fa) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>fa x2a M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Power fa x2a) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Power fa x2a)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Floor fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Floor fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>x M' slp' M slp.\n        \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Var x)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)\nA total of 11 subgoals...", "case *: (Arctan fa1)"], ["proof (state)\nthis:\n  \\<lbrakk>slp_of_fa fa1 ?M ?slp = (?M', ?slp');\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      subterms f \\<subseteq> Mapping.keys ?M;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      the (Mapping.lookup ?M f) < length ?slp;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      interpret_slp ?slp xs ! slp_index_lookup ?slp ?M f =\n      interpret_floatarith f xs\\<rbrakk>\n  \\<Longrightarrow> subterms fa1 \\<subseteq> Mapping.keys ?M' \\<and>\n                    Mapping.keys ?M \\<subseteq> Mapping.keys ?M' \\<and>\n                    (\\<forall>f\\<in>Mapping.keys ?M'.\n                        subterms f \\<subseteq> Mapping.keys ?M' \\<and>\n                        the (Mapping.lookup ?M' f) < length ?slp' \\<and>\n                        interpret_slp ?slp' xs !\n                        slp_index_lookup ?slp' ?M' f =\n                        interpret_floatarith f xs)\n  slp_of_fa (Arctan fa1) M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (11 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Arctan fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Arctan fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Ln fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Ln fa) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>fa x2a M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Power fa x2a) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Power fa x2a)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Floor fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Floor fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>x M' slp' M slp.\n        \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Var x)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)\nA total of 11 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms (Arctan fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "unfolding subterms.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Arctan fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by (rule unop_slp_of_fa_induction_step[OF\n          *[unfolded subterms.simps slp_of_fa.simps Let_def]]) auto"], ["proof (state)\nthis:\n  subterms (Arctan fa1) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal (10 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Ln fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Ln fa) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa x2a M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Power fa x2a) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Power fa x2a)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Floor fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Floor fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>x M' slp' M slp.\n        \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Num x)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Ln fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Ln fa) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa x2a M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Power fa x2a) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Power fa x2a)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Floor fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Floor fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>x M' slp' M slp.\n        \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Num x)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)", "case *: (Floor fa1)"], ["proof (state)\nthis:\n  \\<lbrakk>slp_of_fa fa1 ?M ?slp = (?M', ?slp');\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      subterms f \\<subseteq> Mapping.keys ?M;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      the (Mapping.lookup ?M f) < length ?slp;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      interpret_slp ?slp xs ! slp_index_lookup ?slp ?M f =\n      interpret_floatarith f xs\\<rbrakk>\n  \\<Longrightarrow> subterms fa1 \\<subseteq> Mapping.keys ?M' \\<and>\n                    Mapping.keys ?M \\<subseteq> Mapping.keys ?M' \\<and>\n                    (\\<forall>f\\<in>Mapping.keys ?M'.\n                        subterms f \\<subseteq> Mapping.keys ?M' \\<and>\n                        the (Mapping.lookup ?M' f) < length ?slp' \\<and>\n                        interpret_slp ?slp' xs !\n                        slp_index_lookup ?slp' ?M' f =\n                        interpret_floatarith f xs)\n  slp_of_fa (Floor fa1) M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (10 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Ln fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Ln fa) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa x2a M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Power fa x2a) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Power fa x2a)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Floor fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Floor fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 10. \\<And>x M' slp' M slp.\n        \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            subterms f \\<subseteq> Mapping.keys M;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            the (Mapping.lookup M f) < length slp;\n         \\<And>f.\n            f \\<in> Mapping.keys M \\<Longrightarrow>\n            interpret_slp slp xs ! slp_index_lookup slp M f =\n            interpret_floatarith f xs\\<rbrakk>\n        \\<Longrightarrow> subterms (Num x)\n                          \\<subseteq> Mapping.keys M' \\<and>\n                          Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                          (\\<forall>f\\<in>Mapping.keys M'.\n                              subterms f \\<subseteq> Mapping.keys M' \\<and>\n                              the (Mapping.lookup M' f) < length slp' \\<and>\n                              interpret_slp slp' xs !\n                              slp_index_lookup slp' M' f =\n                              interpret_floatarith f xs)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms (Floor fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "unfolding subterms.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Floor fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by (rule unop_slp_of_fa_induction_step[OF\n          *[unfolded subterms.simps slp_of_fa.simps Let_def]]) auto"], ["proof (state)\nthis:\n  subterms (Floor fa1) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal (9 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Ln fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Ln fa) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa x2a M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Power fa x2a) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Power fa x2a)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Ln fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Ln fa) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa x2a M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Power fa x2a) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Power fa x2a)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "case *: (Cos fa1)"], ["proof (state)\nthis:\n  \\<lbrakk>slp_of_fa fa1 ?M ?slp = (?M', ?slp');\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      subterms f \\<subseteq> Mapping.keys ?M;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      the (Mapping.lookup ?M f) < length ?slp;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      interpret_slp ?slp xs ! slp_index_lookup ?slp ?M f =\n      interpret_floatarith f xs\\<rbrakk>\n  \\<Longrightarrow> subterms fa1 \\<subseteq> Mapping.keys ?M' \\<and>\n                    Mapping.keys ?M \\<subseteq> Mapping.keys ?M' \\<and>\n                    (\\<forall>f\\<in>Mapping.keys ?M'.\n                        subterms f \\<subseteq> Mapping.keys ?M' \\<and>\n                        the (Mapping.lookup ?M' f) < length ?slp' \\<and>\n                        interpret_slp ?slp' xs !\n                        slp_index_lookup ?slp' ?M' f =\n                        interpret_floatarith f xs)\n  slp_of_fa (Cos fa1) M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (9 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Cos fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Cos fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Ln fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Ln fa) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>fa x2a M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Power fa x2a) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Power fa x2a)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 9. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms (Cos fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "unfolding subterms.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Cos fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by (rule unop_slp_of_fa_induction_step[OF\n          *[unfolded subterms.simps slp_of_fa.simps Let_def]]) auto"], ["proof (state)\nthis:\n  subterms (Cos fa1) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal (8 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Ln fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Ln fa) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa x2a M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Power fa x2a) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Power fa x2a)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Ln fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Ln fa) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa x2a M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Power fa x2a) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Power fa x2a)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "case *: (Ln fa1)"], ["proof (state)\nthis:\n  \\<lbrakk>slp_of_fa fa1 ?M ?slp = (?M', ?slp');\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      subterms f \\<subseteq> Mapping.keys ?M;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      the (Mapping.lookup ?M f) < length ?slp;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      interpret_slp ?slp xs ! slp_index_lookup ?slp ?M f =\n      interpret_floatarith f xs\\<rbrakk>\n  \\<Longrightarrow> subterms fa1 \\<subseteq> Mapping.keys ?M' \\<and>\n                    Mapping.keys ?M \\<subseteq> Mapping.keys ?M' \\<and>\n                    (\\<forall>f\\<in>Mapping.keys ?M'.\n                        subterms f \\<subseteq> Mapping.keys ?M' \\<and>\n                        the (Mapping.lookup ?M' f) < length ?slp' \\<and>\n                        interpret_slp ?slp' xs !\n                        slp_index_lookup ?slp' ?M' f =\n                        interpret_floatarith f xs)\n  slp_of_fa (Ln fa1) M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (8 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Ln fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Ln fa) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>fa x2a M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Power fa x2a) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Power fa x2a)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 8. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms (Ln fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "unfolding subterms.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Ln fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by (rule unop_slp_of_fa_induction_step[OF\n          *[unfolded subterms.simps slp_of_fa.simps Let_def]]) auto"], ["proof (state)\nthis:\n  subterms (Ln fa1) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal (7 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa x2a M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Power fa x2a) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Power fa x2a)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa x2a M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Power fa x2a) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Power fa x2a)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "case *: (Power fa1)"], ["proof (state)\nthis:\n  \\<lbrakk>slp_of_fa fa1 ?M ?slp = (?M', ?slp');\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      subterms f \\<subseteq> Mapping.keys ?M;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      the (Mapping.lookup ?M f) < length ?slp;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      interpret_slp ?slp xs ! slp_index_lookup ?slp ?M f =\n      interpret_floatarith f xs\\<rbrakk>\n  \\<Longrightarrow> subterms fa1 \\<subseteq> Mapping.keys ?M' \\<and>\n                    Mapping.keys ?M \\<subseteq> Mapping.keys ?M' \\<and>\n                    (\\<forall>f\\<in>Mapping.keys ?M'.\n                        subterms f \\<subseteq> Mapping.keys ?M' \\<and>\n                        the (Mapping.lookup ?M' f) < length ?slp' \\<and>\n                        interpret_slp ?slp' xs !\n                        slp_index_lookup ?slp' ?M' f =\n                        interpret_floatarith f xs)\n  slp_of_fa (Power fa1 x2a_) M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (7 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>fa x2a M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Power fa x2a) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Power fa x2a)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 7. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms (Power fa1 x2a_) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "unfolding subterms.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Power fa1 x2a_) (subterms fa1)\n    \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by (rule unop_slp_of_fa_induction_step[OF\n          *[unfolded subterms.simps slp_of_fa.simps Let_def]]) auto"], ["proof (state)\nthis:\n  subterms (Power fa1 x2a_) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal (6 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "case *: (Abs fa1)"], ["proof (state)\nthis:\n  \\<lbrakk>slp_of_fa fa1 ?M ?slp = (?M', ?slp');\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      subterms f \\<subseteq> Mapping.keys ?M;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      the (Mapping.lookup ?M f) < length ?slp;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      interpret_slp ?slp xs ! slp_index_lookup ?slp ?M f =\n      interpret_floatarith f xs\\<rbrakk>\n  \\<Longrightarrow> subterms fa1 \\<subseteq> Mapping.keys ?M' \\<and>\n                    Mapping.keys ?M \\<subseteq> Mapping.keys ?M' \\<and>\n                    (\\<forall>f\\<in>Mapping.keys ?M'.\n                        subterms f \\<subseteq> Mapping.keys ?M' \\<and>\n                        the (Mapping.lookup ?M' f) < length ?slp' \\<and>\n                        interpret_slp ?slp' xs !\n                        slp_index_lookup ?slp' ?M' f =\n                        interpret_floatarith f xs)\n  slp_of_fa (Abs fa1) M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (6 subgoals):\n 1. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Abs fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Abs fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 6. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms (Abs fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "unfolding subterms.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Abs fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by (rule unop_slp_of_fa_induction_step[OF\n          *[unfolded subterms.simps slp_of_fa.simps Let_def]]) auto"], ["proof (state)\nthis:\n  subterms (Abs fa1) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal (5 subgoals):\n 1. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "case *: (Sqrt fa1)"], ["proof (state)\nthis:\n  \\<lbrakk>slp_of_fa fa1 ?M ?slp = (?M', ?slp');\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      subterms f \\<subseteq> Mapping.keys ?M;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      the (Mapping.lookup ?M f) < length ?slp;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      interpret_slp ?slp xs ! slp_index_lookup ?slp ?M f =\n      interpret_floatarith f xs\\<rbrakk>\n  \\<Longrightarrow> subterms fa1 \\<subseteq> Mapping.keys ?M' \\<and>\n                    Mapping.keys ?M \\<subseteq> Mapping.keys ?M' \\<and>\n                    (\\<forall>f\\<in>Mapping.keys ?M'.\n                        subterms f \\<subseteq> Mapping.keys ?M' \\<and>\n                        the (Mapping.lookup ?M' f) < length ?slp' \\<and>\n                        interpret_slp ?slp' xs !\n                        slp_index_lookup ?slp' ?M' f =\n                        interpret_floatarith f xs)\n  slp_of_fa (Sqrt fa1) M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (5 subgoals):\n 1. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Sqrt fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Sqrt fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 5. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms (Sqrt fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "unfolding subterms.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Sqrt fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by (rule unop_slp_of_fa_induction_step[OF\n          *[unfolded subterms.simps slp_of_fa.simps Let_def]]) auto"], ["proof (state)\nthis:\n  subterms (Sqrt fa1) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal (4 subgoals):\n 1. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "case *: (Exp fa1)"], ["proof (state)\nthis:\n  \\<lbrakk>slp_of_fa fa1 ?M ?slp = (?M', ?slp');\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      subterms f \\<subseteq> Mapping.keys ?M;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      the (Mapping.lookup ?M f) < length ?slp;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      interpret_slp ?slp xs ! slp_index_lookup ?slp ?M f =\n      interpret_floatarith f xs\\<rbrakk>\n  \\<Longrightarrow> subterms fa1 \\<subseteq> Mapping.keys ?M' \\<and>\n                    Mapping.keys ?M \\<subseteq> Mapping.keys ?M' \\<and>\n                    (\\<forall>f\\<in>Mapping.keys ?M'.\n                        subterms f \\<subseteq> Mapping.keys ?M' \\<and>\n                        the (Mapping.lookup ?M' f) < length ?slp' \\<and>\n                        interpret_slp ?slp' xs !\n                        slp_index_lookup ?slp' ?M' f =\n                        interpret_floatarith f xs)\n  slp_of_fa (Exp fa1) M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (4 subgoals):\n 1. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>fa M' slp' M slp.\n       \\<lbrakk>\\<And>M' slp' M slp.\n                   \\<lbrakk>slp_of_fa fa M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> subterms fa\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fa (Exp fa) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Exp fa)\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 4. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms (Exp fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "unfolding subterms.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Exp fa1) (subterms fa1) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by (rule unop_slp_of_fa_induction_step[OF\n          *[unfolded subterms.simps slp_of_fa.simps Let_def]]) auto"], ["proof (state)\nthis:\n  subterms (Exp fa1) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal (3 subgoals):\n 1. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "case *: Pi"], ["proof (state)\nthis:\n  slp_of_fa Pi M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (3 subgoals):\n 1. \\<And>M' slp' M slp.\n       \\<lbrakk>slp_of_fa Pi M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 3. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "unfolding subterms.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. {Pi} \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by (rule cnst_slp_of_fa_induction_step[OF\n          *[unfolded subterms.simps slp_of_fa.simps Let_def]]) auto"], ["proof (state)\nthis:\n  subterms Pi \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal (2 subgoals):\n 1. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "case *: Num"], ["proof (state)\nthis:\n  slp_of_fa (Num x_) M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (2 subgoals):\n 1. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Num x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Num x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms (Num x_) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "unfolding subterms.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. {Num x_} \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by (rule cnst_slp_of_fa_induction_step[OF\n          *[unfolded subterms.simps slp_of_fa.simps Let_def]]) auto"], ["proof (state)\nthis:\n  subterms (Num x_) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal (1 subgoal):\n 1. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "case *: (Var n)"], ["proof (state)\nthis:\n  slp_of_fa (Var n) M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. \\<And>x M' slp' M slp.\n       \\<lbrakk>slp_of_fa (Var x) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> subterms (Var x) \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms (Var n) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "unfolding subterms.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. {Var n} \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by (rule cnst_slp_of_fa_induction_step[OF\n          *[unfolded subterms.simps slp_of_fa.simps Let_def]])\n       (auto simp: interpret_slp_nth)"], ["proof (state)\nthis:\n  subterms (Var n) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "primrec slp_of_fas' where\n  \"slp_of_fas' [] M slp = (M, slp)\"\n| \"slp_of_fas' (fa#fas) M slp = (let (M, slp) = slp_of_fa fa M slp in slp_of_fas' fas M slp)\""], ["", "theorem\n  interpret_slp_of_fas':\n  assumes \"slp_of_fas' fas M slp = (M', slp')\"\n  assumes \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> subterms f \\<subseteq> Mapping.keys M\"\n  assumes \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> the (Mapping.lookup M f) < length slp\"\n  assumes \"\\<And>f. f \\<in> Mapping.keys M \\<Longrightarrow> interpret_slp slp xs ! slp_index_lookup slp M f = interpret_floatarith f xs\"\n  shows \"\\<Union>(subterms ` set fas) \\<subseteq> Mapping.keys M' \\<and> Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f \\<in> Mapping.keys M'. subterms f \\<subseteq> Mapping.keys M' \\<and>\n      (the (Mapping.lookup M' f) < length slp') \\<and>\n      (interpret_slp slp' xs ! slp_index_lookup slp' M' f = interpret_floatarith f xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (subterms ` set fas) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "using assms"], ["proof (prove)\nusing this:\n  slp_of_fas' fas M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. \\<Union> (subterms ` set fas) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "proof (induction fas arbitrary: M slp)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>M slp.\n       \\<lbrakk>slp_of_fas' [] M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (subterms ` set [])\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>a fas M slp.\n       \\<lbrakk>\\<And>M slp.\n                   \\<lbrakk>slp_of_fas' fas M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> \\<Union> (subterms ` set fas)\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fas' (a # fas) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (subterms ` set (a # fas))\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "case Nil"], ["proof (state)\nthis:\n  slp_of_fas' [] M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (2 subgoals):\n 1. \\<And>M slp.\n       \\<lbrakk>slp_of_fas' [] M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (subterms ` set [])\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)\n 2. \\<And>a fas M slp.\n       \\<lbrakk>\\<And>M slp.\n                   \\<lbrakk>slp_of_fas' fas M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> \\<Union> (subterms ` set fas)\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fas' (a # fas) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (subterms ` set (a # fas))\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "then"], ["proof (chain)\npicking this:\n  slp_of_fas' [] M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs", "show ?case"], ["proof (prove)\nusing this:\n  slp_of_fas' [] M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. \\<Union> (subterms ` set []) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by auto"], ["proof (state)\nthis:\n  \\<Union> (subterms ` set []) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal (1 subgoal):\n 1. \\<And>a fas M slp.\n       \\<lbrakk>\\<And>M slp.\n                   \\<lbrakk>slp_of_fas' fas M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> \\<Union> (subterms ` set fas)\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fas' (a # fas) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (subterms ` set (a # fas))\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a fas M slp.\n       \\<lbrakk>\\<And>M slp.\n                   \\<lbrakk>slp_of_fas' fas M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> \\<Union> (subterms ` set fas)\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fas' (a # fas) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (subterms ` set (a # fas))\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "case (Cons fa fas)"], ["proof (state)\nthis:\n  \\<lbrakk>slp_of_fas' fas ?M ?slp = (M', slp');\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      subterms f \\<subseteq> Mapping.keys ?M;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      the (Mapping.lookup ?M f) < length ?slp;\n   \\<And>f.\n      f \\<in> Mapping.keys ?M \\<Longrightarrow>\n      interpret_slp ?slp xs ! slp_index_lookup ?slp ?M f =\n      interpret_floatarith f xs\\<rbrakk>\n  \\<Longrightarrow> \\<Union> (subterms ` set fas)\n                    \\<subseteq> Mapping.keys M' \\<and>\n                    Mapping.keys ?M \\<subseteq> Mapping.keys M' \\<and>\n                    (\\<forall>f\\<in>Mapping.keys M'.\n                        subterms f \\<subseteq> Mapping.keys M' \\<and>\n                        the (Mapping.lookup M' f) < length slp' \\<and>\n                        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n                        interpret_floatarith f xs)\n  slp_of_fas' (fa # fas) M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. \\<And>a fas M slp.\n       \\<lbrakk>\\<And>M slp.\n                   \\<lbrakk>slp_of_fas' fas M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> \\<Union> (subterms ` set fas)\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fas' (a # fas) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (subterms ` set (a # fas))\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "from \\<open>slp_of_fas' (fa # fas) M slp = (M', slp')\\<close>"], ["proof (chain)\npicking this:\n  slp_of_fas' (fa # fas) M slp = (M', slp')", "obtain M1 slp1 where\n    fa: \"slp_of_fa fa M slp = (M1, slp1)\"\n    and fas: \"slp_of_fas' fas M1 slp1 = (M', slp')\""], ["proof (prove)\nusing this:\n  slp_of_fas' (fa # fas) M slp = (M', slp')\n\ngoal (1 subgoal):\n 1. (\\<And>M1 slp1.\n        \\<lbrakk>slp_of_fa fa M slp = (M1, slp1);\n         slp_of_fas' fas M1 slp1 = (M', slp')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto split: prod.splits)"], ["proof (state)\nthis:\n  slp_of_fa fa M slp = (M1, slp1)\n  slp_of_fas' fas M1 slp1 = (M', slp')\n\ngoal (1 subgoal):\n 1. \\<And>a fas M slp.\n       \\<lbrakk>\\<And>M slp.\n                   \\<lbrakk>slp_of_fas' fas M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> \\<Union> (subterms ` set fas)\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fas' (a # fas) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (subterms ` set (a # fas))\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "have \"subterms fa \\<subseteq> Mapping.keys M1 \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M1 \\<and>\n    (\\<forall>f\\<in>Mapping.keys M1. subterms f \\<subseteq> Mapping.keys M1 \\<and>\n    the (Mapping.lookup M1 f) < length slp1 \\<and>\n    interpret_slp slp1 xs ! slp_index_lookup slp1 M1 f= interpret_floatarith f xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subterms fa \\<subseteq> Mapping.keys M1 \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M1 \\<and>\n    (\\<forall>f\\<in>Mapping.keys M1.\n        subterms f \\<subseteq> Mapping.keys M1 \\<and>\n        the (Mapping.lookup M1 f) < length slp1 \\<and>\n        interpret_slp slp1 xs ! slp_index_lookup slp1 M1 f =\n        interpret_floatarith f xs)", "apply (rule interpret_slp_of_fa[OF fa, of xs])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>f.\n       f \\<in> Mapping.keys M \\<Longrightarrow>\n       subterms f \\<subseteq> Mapping.keys M\n 2. \\<And>f.\n       f \\<in> Mapping.keys M \\<Longrightarrow>\n       the (Mapping.lookup M f) < length slp\n 3. \\<And>f.\n       f \\<in> Mapping.keys M \\<Longrightarrow>\n       interpret_slp slp xs ! slp_index_lookup slp M f =\n       interpret_floatarith f xs", "using Cons.prems"], ["proof (prove)\nusing this:\n  slp_of_fas' (fa # fas) M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (3 subgoals):\n 1. \\<And>f.\n       f \\<in> Mapping.keys M \\<Longrightarrow>\n       subterms f \\<subseteq> Mapping.keys M\n 2. \\<And>f.\n       f \\<in> Mapping.keys M \\<Longrightarrow>\n       the (Mapping.lookup M f) < length slp\n 3. \\<And>f.\n       f \\<in> Mapping.keys M \\<Longrightarrow>\n       interpret_slp slp xs ! slp_index_lookup slp M f =\n       interpret_floatarith f xs", "by (auto split: prod.splits simp: trans_less_add2)"], ["proof (state)\nthis:\n  subterms fa \\<subseteq> Mapping.keys M1 \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M1 \\<and>\n  (\\<forall>f\\<in>Mapping.keys M1.\n      subterms f \\<subseteq> Mapping.keys M1 \\<and>\n      the (Mapping.lookup M1 f) < length slp1 \\<and>\n      interpret_slp slp1 xs ! slp_index_lookup slp1 M1 f =\n      interpret_floatarith f xs)\n\ngoal (1 subgoal):\n 1. \\<And>a fas M slp.\n       \\<lbrakk>\\<And>M slp.\n                   \\<lbrakk>slp_of_fas' fas M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> \\<Union> (subterms ` set fas)\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fas' (a # fas) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (subterms ` set (a # fas))\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "moreover"], ["proof (state)\nthis:\n  subterms fa \\<subseteq> Mapping.keys M1 \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M1 \\<and>\n  (\\<forall>f\\<in>Mapping.keys M1.\n      subterms f \\<subseteq> Mapping.keys M1 \\<and>\n      the (Mapping.lookup M1 f) < length slp1 \\<and>\n      interpret_slp slp1 xs ! slp_index_lookup slp1 M1 f =\n      interpret_floatarith f xs)\n\ngoal (1 subgoal):\n 1. \\<And>a fas M slp.\n       \\<lbrakk>\\<And>M slp.\n                   \\<lbrakk>slp_of_fas' fas M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> \\<Union> (subterms ` set fas)\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fas' (a # fas) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (subterms ` set (a # fas))\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "then"], ["proof (chain)\npicking this:\n  subterms fa \\<subseteq> Mapping.keys M1 \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M1 \\<and>\n  (\\<forall>f\\<in>Mapping.keys M1.\n      subterms f \\<subseteq> Mapping.keys M1 \\<and>\n      the (Mapping.lookup M1 f) < length slp1 \\<and>\n      interpret_slp slp1 xs ! slp_index_lookup slp1 M1 f =\n      interpret_floatarith f xs)", "have \"(\\<Union>a\\<in>set fas. subterms a) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M1 \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'. subterms f \\<subseteq> Mapping.keys M' \\<and>\n    the (Mapping.lookup M' f) < length slp' \\<and>\n    interpret_slp slp' xs ! slp_index_lookup slp' M' f = interpret_floatarith f xs)\""], ["proof (prove)\nusing this:\n  subterms fa \\<subseteq> Mapping.keys M1 \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M1 \\<and>\n  (\\<forall>f\\<in>Mapping.keys M1.\n      subterms f \\<subseteq> Mapping.keys M1 \\<and>\n      the (Mapping.lookup M1 f) < length slp1 \\<and>\n      interpret_slp slp1 xs ! slp_index_lookup slp1 M1 f =\n      interpret_floatarith f xs)\n\ngoal (1 subgoal):\n 1. \\<Union> (subterms ` set fas) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M1 \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "using Cons.prems"], ["proof (prove)\nusing this:\n  subterms fa \\<subseteq> Mapping.keys M1 \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M1 \\<and>\n  (\\<forall>f\\<in>Mapping.keys M1.\n      subterms f \\<subseteq> Mapping.keys M1 \\<and>\n      the (Mapping.lookup M1 f) < length slp1 \\<and>\n      interpret_slp slp1 xs ! slp_index_lookup slp1 M1 f =\n      interpret_floatarith f xs)\n  slp_of_fas' (fa # fas) M slp = (M', slp')\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  subterms ?f \\<subseteq> Mapping.keys M\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  the (Mapping.lookup M ?f) < length slp\n  ?f \\<in> Mapping.keys M \\<Longrightarrow>\n  interpret_slp slp xs ! slp_index_lookup slp M ?f =\n  interpret_floatarith ?f xs\n\ngoal (1 subgoal):\n 1. \\<Union> (subterms ` set fas) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M1 \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by (intro Cons.IH[OF fas])\n       (auto split: prod.splits simp: trans_less_add2)"], ["proof (state)\nthis:\n  \\<Union> (subterms ` set fas) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M1 \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal (1 subgoal):\n 1. \\<And>a fas M slp.\n       \\<lbrakk>\\<And>M slp.\n                   \\<lbrakk>slp_of_fas' fas M slp = (M', slp');\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       subterms f \\<subseteq> Mapping.keys M;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       the (Mapping.lookup M f) < length slp;\n                    \\<And>f.\n                       f \\<in> Mapping.keys M \\<Longrightarrow>\n                       interpret_slp slp xs ! slp_index_lookup slp M f =\n                       interpret_floatarith f xs\\<rbrakk>\n                   \\<Longrightarrow> \\<Union> (subterms ` set fas)\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     Mapping.keys M\n                                     \\<subseteq> Mapping.keys M' \\<and>\n                                     (\\<forall>f\\<in>Mapping.keys M'.\n   subterms f \\<subseteq> Mapping.keys M' \\<and>\n   the (Mapping.lookup M' f) < length slp' \\<and>\n   interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n   interpret_floatarith f xs);\n        slp_of_fas' (a # fas) M slp = (M', slp');\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           subterms f \\<subseteq> Mapping.keys M;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           the (Mapping.lookup M f) < length slp;\n        \\<And>f.\n           f \\<in> Mapping.keys M \\<Longrightarrow>\n           interpret_slp slp xs ! slp_index_lookup slp M f =\n           interpret_floatarith f xs\\<rbrakk>\n       \\<Longrightarrow> \\<Union> (subterms ` set (a # fas))\n                         \\<subseteq> Mapping.keys M' \\<and>\n                         Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n                         (\\<forall>f\\<in>Mapping.keys M'.\n                             subterms f \\<subseteq> Mapping.keys M' \\<and>\n                             the (Mapping.lookup M' f) < length slp' \\<and>\n                             interpret_slp slp' xs !\n                             slp_index_lookup slp' M' f =\n                             interpret_floatarith f xs)", "ultimately"], ["proof (chain)\npicking this:\n  subterms fa \\<subseteq> Mapping.keys M1 \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M1 \\<and>\n  (\\<forall>f\\<in>Mapping.keys M1.\n      subterms f \\<subseteq> Mapping.keys M1 \\<and>\n      the (Mapping.lookup M1 f) < length slp1 \\<and>\n      interpret_slp slp1 xs ! slp_index_lookup slp1 M1 f =\n      interpret_floatarith f xs)\n  \\<Union> (subterms ` set fas) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M1 \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)", "show ?case"], ["proof (prove)\nusing this:\n  subterms fa \\<subseteq> Mapping.keys M1 \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M1 \\<and>\n  (\\<forall>f\\<in>Mapping.keys M1.\n      subterms f \\<subseteq> Mapping.keys M1 \\<and>\n      the (Mapping.lookup M1 f) < length slp1 \\<and>\n      interpret_slp slp1 xs ! slp_index_lookup slp1 M1 f =\n      interpret_floatarith f xs)\n  \\<Union> (subterms ` set fas) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M1 \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal (1 subgoal):\n 1. \\<Union> (subterms ` set (fa # fas)) \\<subseteq> Mapping.keys M' \\<and>\n    Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n    (\\<forall>f\\<in>Mapping.keys M'.\n        subterms f \\<subseteq> Mapping.keys M' \\<and>\n        the (Mapping.lookup M' f) < length slp' \\<and>\n        interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n        interpret_floatarith f xs)", "by auto"], ["proof (state)\nthis:\n  \\<Union> (subterms ` set (fa # fas)) \\<subseteq> Mapping.keys M' \\<and>\n  Mapping.keys M \\<subseteq> Mapping.keys M' \\<and>\n  (\\<forall>f\\<in>Mapping.keys M'.\n      subterms f \\<subseteq> Mapping.keys M' \\<and>\n      the (Mapping.lookup M' f) < length slp' \\<and>\n      interpret_slp slp' xs ! slp_index_lookup slp' M' f =\n      interpret_floatarith f xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \"slp_of_fas fas =\n  (let\n    (M, slp) = slp_of_fas' fas Mapping.empty [];\n    fasi = map (the o Mapping.lookup M) fas;\n    fasi' = map (\\<lambda>(a, b). Var (length slp + a - Suc b)) (zip [0..<length fasi] (rev fasi))\n  in slp @ fasi')\""], ["", "lemma length_interpret_slp[simp]:\n  \"length (interpret_slp slp xs) = length slp + length xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (interpret_slp slp xs) = length slp + length xs", "by (induct slp arbitrary: xs) auto"], ["", "lemma length_interpret_floatariths[simp]:\n  \"length (interpret_floatariths slp xs) = length slp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (interpret_floatariths slp xs) = length slp", "by (induct slp arbitrary: xs) auto"], ["", "lemma interpret_slp_append[simp]:\n  \"interpret_slp (slp1 @ slp2) xs =\n    interpret_slp slp2 (interpret_slp slp1 xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_slp (slp1 @ slp2) xs =\n    interpret_slp slp2 (interpret_slp slp1 xs)", "by (induction slp1 arbitrary: slp2 xs) auto"], ["", "lemma \"interpret_slp (map Var [a + 0, b + 1, c + 2, d + 3]) xs =\n  (rev (map (\\<lambda>(i, e). xs ! (e - i)) (zip [0..<4] [a + 0, b + 1, c + 2, d + 3])))@xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_slp (map Var [a + 0, b + 1, c + 2, d + 3]) xs =\n    rev (map2 (\\<lambda>i e. xs ! (e - i)) [0..<4]\n          [a + 0, b + 1, c + 2, d + 3]) @\n    xs", "by (auto simp: numeral_eq_Suc)"], ["", "lemma aC_eq_aa: \"xs @ y # zs = (xs @ [y]) @ zs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs @ y # zs = (xs @ [y]) @ zs", "by simp"], ["", "lemma\n  interpret_slp_map_Var:\n  assumes \"\\<And>i. i < length is \\<Longrightarrow> is ! i \\<ge> i\"\n  assumes \"\\<And>i. i < length is \\<Longrightarrow> (is ! i - i) < length xs\"\n  shows \"interpret_slp (map Var is) xs =\n    (rev (map (\\<lambda>(i, e). xs ! (e - i)) (zip [0..<length is] is)))\n    @\n    xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_slp (map Var is) xs =\n    rev (map2 (\\<lambda>i e. xs ! (e - i)) [0..<length is] is) @ xs", "using assms"], ["proof (prove)\nusing this:\n  ?i < length is \\<Longrightarrow> ?i \\<le> is ! ?i\n  ?i < length is \\<Longrightarrow> is ! ?i - ?i < length xs\n\ngoal (1 subgoal):\n 1. interpret_slp (map Var is) xs =\n    rev (map2 (\\<lambda>i e. xs ! (e - i)) [0..<length is] is) @ xs", "proof (induction \"is\" arbitrary: xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xs.\n       \\<lbrakk>\\<And>i. i < length [] \\<Longrightarrow> i \\<le> [] ! i;\n        \\<And>i.\n           i < length [] \\<Longrightarrow> [] ! i - i < length xs\\<rbrakk>\n       \\<Longrightarrow> interpret_slp (map Var []) xs =\n                         rev (map2 (\\<lambda>i e. xs ! (e - i))\n                               [0..<length []] []) @\n                         xs\n 2. \\<And>a is xs.\n       \\<lbrakk>\\<And>xs.\n                   \\<lbrakk>\\<And>i.\n                               i < length is \\<Longrightarrow>\n                               i \\<le> is ! i;\n                    \\<And>i.\n                       i < length is \\<Longrightarrow>\n                       is ! i - i < length xs\\<rbrakk>\n                   \\<Longrightarrow> interpret_slp (map Var is) xs =\n                                     rev\n(map2 (\\<lambda>i e. xs ! (e - i)) [0..<length is] is) @\n                                     xs;\n        \\<And>i. i < length (a # is) \\<Longrightarrow> i \\<le> (a # is) ! i;\n        \\<And>i.\n           i < length (a # is) \\<Longrightarrow>\n           (a # is) ! i - i < length xs\\<rbrakk>\n       \\<Longrightarrow> interpret_slp (map Var (a # is)) xs =\n                         rev (map2 (\\<lambda>i e. xs ! (e - i))\n                               [0..<length (a # is)] (a # is)) @\n                         xs", "case Nil"], ["proof (state)\nthis:\n  ?i < length [] \\<Longrightarrow> ?i \\<le> [] ! ?i\n  ?i < length [] \\<Longrightarrow> [] ! ?i - ?i < length xs\n\ngoal (2 subgoals):\n 1. \\<And>xs.\n       \\<lbrakk>\\<And>i. i < length [] \\<Longrightarrow> i \\<le> [] ! i;\n        \\<And>i.\n           i < length [] \\<Longrightarrow> [] ! i - i < length xs\\<rbrakk>\n       \\<Longrightarrow> interpret_slp (map Var []) xs =\n                         rev (map2 (\\<lambda>i e. xs ! (e - i))\n                               [0..<length []] []) @\n                         xs\n 2. \\<And>a is xs.\n       \\<lbrakk>\\<And>xs.\n                   \\<lbrakk>\\<And>i.\n                               i < length is \\<Longrightarrow>\n                               i \\<le> is ! i;\n                    \\<And>i.\n                       i < length is \\<Longrightarrow>\n                       is ! i - i < length xs\\<rbrakk>\n                   \\<Longrightarrow> interpret_slp (map Var is) xs =\n                                     rev\n(map2 (\\<lambda>i e. xs ! (e - i)) [0..<length is] is) @\n                                     xs;\n        \\<And>i. i < length (a # is) \\<Longrightarrow> i \\<le> (a # is) ! i;\n        \\<And>i.\n           i < length (a # is) \\<Longrightarrow>\n           (a # is) ! i - i < length xs\\<rbrakk>\n       \\<Longrightarrow> interpret_slp (map Var (a # is)) xs =\n                         rev (map2 (\\<lambda>i e. xs ! (e - i))\n                               [0..<length (a # is)] (a # is)) @\n                         xs", "then"], ["proof (chain)\npicking this:\n  ?i < length [] \\<Longrightarrow> ?i \\<le> [] ! ?i\n  ?i < length [] \\<Longrightarrow> [] ! ?i - ?i < length xs", "show ?case"], ["proof (prove)\nusing this:\n  ?i < length [] \\<Longrightarrow> ?i \\<le> [] ! ?i\n  ?i < length [] \\<Longrightarrow> [] ! ?i - ?i < length xs\n\ngoal (1 subgoal):\n 1. interpret_slp (map Var []) xs =\n    rev (map2 (\\<lambda>i e. xs ! (e - i)) [0..<length []] []) @ xs", "by simp"], ["proof (state)\nthis:\n  interpret_slp (map Var []) xs =\n  rev (map2 (\\<lambda>i e. xs ! (e - i)) [0..<length []] []) @ xs\n\ngoal (1 subgoal):\n 1. \\<And>a is xs.\n       \\<lbrakk>\\<And>xs.\n                   \\<lbrakk>\\<And>i.\n                               i < length is \\<Longrightarrow>\n                               i \\<le> is ! i;\n                    \\<And>i.\n                       i < length is \\<Longrightarrow>\n                       is ! i - i < length xs\\<rbrakk>\n                   \\<Longrightarrow> interpret_slp (map Var is) xs =\n                                     rev\n(map2 (\\<lambda>i e. xs ! (e - i)) [0..<length is] is) @\n                                     xs;\n        \\<And>i. i < length (a # is) \\<Longrightarrow> i \\<le> (a # is) ! i;\n        \\<And>i.\n           i < length (a # is) \\<Longrightarrow>\n           (a # is) ! i - i < length xs\\<rbrakk>\n       \\<Longrightarrow> interpret_slp (map Var (a # is)) xs =\n                         rev (map2 (\\<lambda>i e. xs ! (e - i))\n                               [0..<length (a # is)] (a # is)) @\n                         xs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a is xs.\n       \\<lbrakk>\\<And>xs.\n                   \\<lbrakk>\\<And>i.\n                               i < length is \\<Longrightarrow>\n                               i \\<le> is ! i;\n                    \\<And>i.\n                       i < length is \\<Longrightarrow>\n                       is ! i - i < length xs\\<rbrakk>\n                   \\<Longrightarrow> interpret_slp (map Var is) xs =\n                                     rev\n(map2 (\\<lambda>i e. xs ! (e - i)) [0..<length is] is) @\n                                     xs;\n        \\<And>i. i < length (a # is) \\<Longrightarrow> i \\<le> (a # is) ! i;\n        \\<And>i.\n           i < length (a # is) \\<Longrightarrow>\n           (a # is) ! i - i < length xs\\<rbrakk>\n       \\<Longrightarrow> interpret_slp (map Var (a # is)) xs =\n                         rev (map2 (\\<lambda>i e. xs ! (e - i))\n                               [0..<length (a # is)] (a # is)) @\n                         xs", "case (Cons a \"is\")"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>i. i < length is \\<Longrightarrow> i \\<le> is ! i;\n   \\<And>i. i < length is \\<Longrightarrow> is ! i - i < length ?xs\\<rbrakk>\n  \\<Longrightarrow> interpret_slp (map Var is) ?xs =\n                    rev (map2 (\\<lambda>i e. ?xs ! (e - i)) [0..<length is]\n                          is) @\n                    ?xs\n  ?i < length (a # is) \\<Longrightarrow> ?i \\<le> (a # is) ! ?i\n  ?i < length (a # is) \\<Longrightarrow> (a # is) ! ?i - ?i < length xs\n\ngoal (1 subgoal):\n 1. \\<And>a is xs.\n       \\<lbrakk>\\<And>xs.\n                   \\<lbrakk>\\<And>i.\n                               i < length is \\<Longrightarrow>\n                               i \\<le> is ! i;\n                    \\<And>i.\n                       i < length is \\<Longrightarrow>\n                       is ! i - i < length xs\\<rbrakk>\n                   \\<Longrightarrow> interpret_slp (map Var is) xs =\n                                     rev\n(map2 (\\<lambda>i e. xs ! (e - i)) [0..<length is] is) @\n                                     xs;\n        \\<And>i. i < length (a # is) \\<Longrightarrow> i \\<le> (a # is) ! i;\n        \\<And>i.\n           i < length (a # is) \\<Longrightarrow>\n           (a # is) ! i - i < length xs\\<rbrakk>\n       \\<Longrightarrow> interpret_slp (map Var (a # is)) xs =\n                         rev (map2 (\\<lambda>i e. xs ! (e - i))\n                               [0..<length (a # is)] (a # is)) @\n                         xs", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_slp (map Var (a # is)) xs =\n    rev (map2 (\\<lambda>i e. xs ! (e - i)) [0..<length (a # is)] (a # is)) @\n    xs", "unfolding interpret_slp.simps list.map"], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_slp (map Var is) (interpret_floatarith (Var a) xs # xs) =\n    rev (map2 (\\<lambda>i e. xs ! (e - i)) [0..<length (a # is)] (a # is)) @\n    xs", "apply (subst Cons.IH)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>i. i < length is \\<Longrightarrow> i \\<le> is ! i\n 2. \\<And>i.\n       i < length is \\<Longrightarrow>\n       is ! i - i < length (interpret_floatarith (Var a) xs # xs)\n 3. rev (map2\n          (\\<lambda>i e. (interpret_floatarith (Var a) xs # xs) ! (e - i))\n          [0..<length is] is) @\n    interpret_floatarith (Var a) xs # xs =\n    rev (map2 (\\<lambda>i e. xs ! (e - i)) [0..<length (a # is)] (a # is)) @\n    xs", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. i_ < length is \\<Longrightarrow> i_ \\<le> is ! i_", "using Cons.prems"], ["proof (prove)\nusing this:\n  ?i < length (a # is) \\<Longrightarrow> ?i \\<le> (a # is) ! ?i\n  ?i < length (a # is) \\<Longrightarrow> (a # is) ! ?i - ?i < length xs\n\ngoal (1 subgoal):\n 1. i_ < length is \\<Longrightarrow> i_ \\<le> is ! i_", "by force"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < length is \\<Longrightarrow>\n       is ! i - i < length (interpret_floatarith (Var a) xs # xs)\n 2. rev (map2\n          (\\<lambda>i e. (interpret_floatarith (Var a) xs # xs) ! (e - i))\n          [0..<length is] is) @\n    interpret_floatarith (Var a) xs # xs =\n    rev (map2 (\\<lambda>i e. xs ! (e - i)) [0..<length (a # is)] (a # is)) @\n    xs", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. i_ < length is \\<Longrightarrow>\n    is ! i_ - i_ < length (interpret_floatarith (Var a) xs # xs)", "using Cons.prems"], ["proof (prove)\nusing this:\n  ?i < length (a # is) \\<Longrightarrow> ?i \\<le> (a # is) ! ?i\n  ?i < length (a # is) \\<Longrightarrow> (a # is) ! ?i - ?i < length xs\n\ngoal (1 subgoal):\n 1. i_ < length is \\<Longrightarrow>\n    is ! i_ - i_ < length (interpret_floatarith (Var a) xs # xs)", "by force"], ["proof (prove)\ngoal (1 subgoal):\n 1. rev (map2\n          (\\<lambda>i e. (interpret_floatarith (Var a) xs # xs) ! (e - i))\n          [0..<length is] is) @\n    interpret_floatarith (Var a) xs # xs =\n    rev (map2 (\\<lambda>i e. xs ! (e - i)) [0..<length (a # is)] (a # is)) @\n    xs", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. rev (map2\n          (\\<lambda>i e. (interpret_floatarith (Var a) xs # xs) ! (e - i))\n          [0..<length is] is) @\n    interpret_floatarith (Var a) xs # xs =\n    rev (map2 (\\<lambda>i e. xs ! (e - i)) [0..<length (a # is)] (a # is)) @\n    xs", "apply (subst aC_eq_aa)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (rev (map2\n           (\\<lambda>i e. (interpret_floatarith (Var a) xs # xs) ! (e - i))\n           [0..<length is] is) @\n     [interpret_floatarith (Var a) xs]) @\n    xs =\n    rev (map2 (\\<lambda>i e. xs ! (e - i)) [0..<length (a # is)] (a # is)) @\n    xs", "apply (subst rev.simps(2)[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. rev (interpret_floatarith (Var a) xs #\n         map2\n          (\\<lambda>i e. (interpret_floatarith (Var a) xs # xs) ! (e - i))\n          [0..<length is] is) @\n    xs =\n    rev (map2 (\\<lambda>i e. xs ! (e - i)) [0..<length (a # is)] (a # is)) @\n    xs", "apply (rule arg_cong[where f=\"\\<lambda>a. a @ xs\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. rev (interpret_floatarith (Var a) xs #\n         map2\n          (\\<lambda>i e. (interpret_floatarith (Var a) xs # xs) ! (e - i))\n          [0..<length is] is) =\n    rev (map2 (\\<lambda>i e. xs ! (e - i)) [0..<length (a # is)] (a # is))", "apply (rule arg_cong[where f=\"rev\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith (Var a) xs #\n    map2 (\\<lambda>i e. (interpret_floatarith (Var a) xs # xs) ! (e - i))\n     [0..<length is] is =\n    map2 (\\<lambda>i e. xs ! (e - i)) [0..<length (a # is)] (a # is)", "unfolding interpret_floatarith.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. xs ! a #\n    map2 (\\<lambda>i e. (xs ! a # xs) ! (e - i)) [0..<length is] is =\n    map2 (\\<lambda>i e. xs ! (e - i)) [0..<length (a # is)] (a # is)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. xs ! a #\n    map2 (\\<lambda>i e. (xs ! a # xs) ! (e - i)) [0..<length is] is =\n    map2 (\\<lambda>i e. xs ! (e - i)) ([0..<length is] @ [length is])\n     (a # is)", "apply (rule nth_equalityI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. length\n     (xs ! a #\n      map2 (\\<lambda>i e. (xs ! a # xs) ! (e - i)) [0..<length is] is) =\n    length\n     (map2 (\\<lambda>i e. xs ! (e - i)) ([0..<length is] @ [length is])\n       (a # is))\n 2. \\<And>i.\n       i < length\n            (xs ! a #\n             map2 (\\<lambda>i e. (xs ! a # xs) ! (e - i)) [0..<length is]\n              is) \\<Longrightarrow>\n       (xs ! a #\n        map2 (\\<lambda>i e. (xs ! a # xs) ! (e - i)) [0..<length is] is) !\n       i =\n       map2 (\\<lambda>i e. xs ! (e - i)) ([0..<length is] @ [length is])\n        (a # is) !\n       i", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < length\n            (xs ! a #\n             map2 (\\<lambda>i e. (xs ! a # xs) ! (e - i)) [0..<length is]\n              is) \\<Longrightarrow>\n       (xs ! a #\n        map2 (\\<lambda>i e. (xs ! a # xs) ! (e - i)) [0..<length is] is) !\n       i =\n       map2 (\\<lambda>i e. xs ! (e - i)) ([0..<length is] @ [length is])\n        (a # is) !\n       i", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < Suc (length is) \\<Longrightarrow>\n       (xs ! a #\n        map2 (\\<lambda>i e. (xs ! a # xs) ! (e - i)) [0..<length is] is) !\n       i =\n       xs ! ((a # is) ! i - ([0..<length is] @ [length is]) ! i)", "using Cons.prems"], ["proof (prove)\nusing this:\n  ?i < length (a # is) \\<Longrightarrow> ?i \\<le> (a # is) ! ?i\n  ?i < length (a # is) \\<Longrightarrow> (a # is) ! ?i - ?i < length xs\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < Suc (length is) \\<Longrightarrow>\n       (xs ! a #\n        map2 (\\<lambda>i e. (xs ! a # xs) ! (e - i)) [0..<length is] is) !\n       i =\n       xs ! ((a # is) ! i - ([0..<length is] @ [length is]) ! i)", "apply (auto simp: nth_append nth_Cons split: nat.splits)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>\\<And>i.\n                   i < Suc (length is) \\<Longrightarrow>\n                   i \\<le> (case i of 0 \\<Rightarrow> a\n                            | Suc x \\<Rightarrow> is ! x);\n        \\<And>i.\n           i < Suc (length is) \\<Longrightarrow>\n           (case i of 0 \\<Rightarrow> a | Suc x \\<Rightarrow> is ! x) - i\n           < length xs;\n        is ! x2 \\<le> x2; x2 < length is\\<rbrakk>\n       \\<Longrightarrow> xs ! a = xs ! 0\n 2. \\<And>x2 x2a.\n       \\<lbrakk>\\<And>i.\n                   i < Suc (length is) \\<Longrightarrow>\n                   i \\<le> (case i of 0 \\<Rightarrow> a\n                            | Suc x \\<Rightarrow> is ! x);\n        \\<And>i.\n           i < Suc (length is) \\<Longrightarrow>\n           (case i of 0 \\<Rightarrow> a | Suc x \\<Rightarrow> is ! x) - i\n           < length xs;\n        is ! x2 - x2 = Suc x2a; Suc x2 < length is\\<rbrakk>\n       \\<Longrightarrow> xs ! x2a = xs ! (is ! x2 - Suc x2)\n 3. \\<And>x2 x2a.\n       \\<lbrakk>\\<And>i.\n                   i < Suc (length is) \\<Longrightarrow>\n                   i \\<le> (case i of 0 \\<Rightarrow> a\n                            | Suc x \\<Rightarrow> is ! x);\n        \\<And>i.\n           i < Suc (length is) \\<Longrightarrow>\n           (case i of 0 \\<Rightarrow> a | Suc x \\<Rightarrow> is ! x) - i\n           < length xs;\n        is ! x2 - x2 = Suc x2a; x2 < length is;\n        \\<not> Suc x2 < length is\\<rbrakk>\n       \\<Longrightarrow> xs ! x2a = xs ! (is ! x2 - length is)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>i.\n                i < Suc (length is) \\<Longrightarrow>\n                i \\<le> (case i of 0 \\<Rightarrow> a\n                         | Suc x \\<Rightarrow> is ! x);\n     \\<And>i.\n        i < Suc (length is) \\<Longrightarrow>\n        (case i of 0 \\<Rightarrow> a | Suc x \\<Rightarrow> is ! x) - i\n        < length xs;\n     is ! x2_ \\<le> x2_; x2_ < length is\\<rbrakk>\n    \\<Longrightarrow> xs ! a = xs ! 0", "by (metis Suc_leI le_imp_less_Suc not_le old.nat.simps(5))"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x2 x2a.\n       \\<lbrakk>\\<And>i.\n                   i < Suc (length is) \\<Longrightarrow>\n                   i \\<le> (case i of 0 \\<Rightarrow> a\n                            | Suc x \\<Rightarrow> is ! x);\n        \\<And>i.\n           i < Suc (length is) \\<Longrightarrow>\n           (case i of 0 \\<Rightarrow> a | Suc x \\<Rightarrow> is ! x) - i\n           < length xs;\n        is ! x2 - x2 = Suc x2a; Suc x2 < length is\\<rbrakk>\n       \\<Longrightarrow> xs ! x2a = xs ! (is ! x2 - Suc x2)\n 2. \\<And>x2 x2a.\n       \\<lbrakk>\\<And>i.\n                   i < Suc (length is) \\<Longrightarrow>\n                   i \\<le> (case i of 0 \\<Rightarrow> a\n                            | Suc x \\<Rightarrow> is ! x);\n        \\<And>i.\n           i < Suc (length is) \\<Longrightarrow>\n           (case i of 0 \\<Rightarrow> a | Suc x \\<Rightarrow> is ! x) - i\n           < length xs;\n        is ! x2 - x2 = Suc x2a; x2 < length is;\n        \\<not> Suc x2 < length is\\<rbrakk>\n       \\<Longrightarrow> xs ! x2a = xs ! (is ! x2 - length is)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>i.\n                i < Suc (length is) \\<Longrightarrow>\n                i \\<le> (case i of 0 \\<Rightarrow> a\n                         | Suc x \\<Rightarrow> is ! x);\n     \\<And>i.\n        i < Suc (length is) \\<Longrightarrow>\n        (case i of 0 \\<Rightarrow> a | Suc x \\<Rightarrow> is ! x) - i\n        < length xs;\n     is ! x2_ - x2_ = Suc x2a_; Suc x2_ < length is\\<rbrakk>\n    \\<Longrightarrow> xs ! x2a_ = xs ! (is ! x2_ - Suc x2_)", "by (simp add: minus_nat.simps(2))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x2 x2a.\n       \\<lbrakk>\\<And>i.\n                   i < Suc (length is) \\<Longrightarrow>\n                   i \\<le> (case i of 0 \\<Rightarrow> a\n                            | Suc x \\<Rightarrow> is ! x);\n        \\<And>i.\n           i < Suc (length is) \\<Longrightarrow>\n           (case i of 0 \\<Rightarrow> a | Suc x \\<Rightarrow> is ! x) - i\n           < length xs;\n        is ! x2 - x2 = Suc x2a; x2 < length is;\n        \\<not> Suc x2 < length is\\<rbrakk>\n       \\<Longrightarrow> xs ! x2a = xs ! (is ! x2 - length is)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>i.\n                i < Suc (length is) \\<Longrightarrow>\n                i \\<le> (case i of 0 \\<Rightarrow> a\n                         | Suc x \\<Rightarrow> is ! x);\n     \\<And>i.\n        i < Suc (length is) \\<Longrightarrow>\n        (case i of 0 \\<Rightarrow> a | Suc x \\<Rightarrow> is ! x) - i\n        < length xs;\n     is ! x2_ - x2_ = Suc x2a_; x2_ < length is;\n     \\<not> Suc x2_ < length is\\<rbrakk>\n    \\<Longrightarrow> xs ! x2a_ = xs ! (is ! x2_ - length is)", "by (metis Suc_lessI minus_nat.simps(2) old.nat.simps(5))"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  interpret_slp (map Var (a # is)) xs =\n  rev (map2 (\\<lambda>i e. xs ! (e - i)) [0..<length (a # is)] (a # is)) @\n  xs\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem slp_of_fas:\n  \"take (length fas) (interpret_slp (slp_of_fas fas) xs) = interpret_floatariths fas xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take (length fas) (interpret_slp (slp_of_fas fas) xs) =\n    interpret_floatariths fas xs", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. take (length fas) (interpret_slp (slp_of_fas fas) xs) =\n    interpret_floatariths fas xs", "obtain M slp where Mslp:\n    \"slp_of_fas' fas Mapping.empty [] = (M, slp)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>M slp.\n        slp_of_fas' fas Mapping.empty [] = (M, slp) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using old.prod.exhaust"], ["proof (prove)\nusing this:\n  (\\<And>a b. ?y = (a, b) \\<Longrightarrow> ?P) \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>M slp.\n        slp_of_fas' fas Mapping.empty [] = (M, slp) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  slp_of_fas' fas Mapping.empty [] = (M, slp)\n\ngoal (1 subgoal):\n 1. take (length fas) (interpret_slp (slp_of_fas fas) xs) =\n    interpret_floatariths fas xs", "have M: \"\\<Union>(subterms ` (set fas)) \\<subseteq> Mapping.keys M \\<and>\n    Mapping.keys (Mapping.empty::(floatarith, nat) mapping) \\<subseteq> Mapping.keys M \\<and>\n    (\\<forall>f\\<in>Mapping.keys M.\n        subterms f \\<subseteq> Mapping.keys M \\<and>\n        the (Mapping.lookup M f) < length slp \\<and>\n        interpret_slp slp xs ! slp_index_lookup slp M f =\n        interpret_floatarith f xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (subterms ` set fas) \\<subseteq> Mapping.keys M \\<and>\n    Mapping.keys Mapping.empty \\<subseteq> Mapping.keys M \\<and>\n    (\\<forall>f\\<in>Mapping.keys M.\n        subterms f \\<subseteq> Mapping.keys M \\<and>\n        the (Mapping.lookup M f) < length slp \\<and>\n        interpret_slp slp xs ! slp_index_lookup slp M f =\n        interpret_floatarith f xs)", "by (rule interpret_slp_of_fas'[OF Mslp]) auto"], ["proof (state)\nthis:\n  \\<Union> (subterms ` set fas) \\<subseteq> Mapping.keys M \\<and>\n  Mapping.keys Mapping.empty \\<subseteq> Mapping.keys M \\<and>\n  (\\<forall>f\\<in>Mapping.keys M.\n      subterms f \\<subseteq> Mapping.keys M \\<and>\n      the (Mapping.lookup M f) < length slp \\<and>\n      interpret_slp slp xs ! slp_index_lookup slp M f =\n      interpret_floatarith f xs)\n\ngoal (1 subgoal):\n 1. take (length fas) (interpret_slp (slp_of_fas fas) xs) =\n    interpret_floatariths fas xs", "have map_eq:\n    \"map (\\<lambda>(a, b). Var (length slp + a - Suc b)) (zip [0..<length fas] (rev (map ((\\<lambda>x. the o (Mapping.lookup x)) M) fas)))\n    = map Var (map (\\<lambda>(a, b). (length slp + a - Suc b)) (zip [0..<length fas] (rev (map (the \\<circ> Mapping.lookup M) fas))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map2 (\\<lambda>a b. Var (length slp + a - Suc b)) [0..<length fas]\n     (rev (map (the \\<circ> Mapping.lookup M) fas)) =\n    map Var\n     (map2 (\\<lambda>a b. length slp + a - Suc b) [0..<length fas]\n       (rev (map (the \\<circ> Mapping.lookup M) fas)))", "unfolding split_beta'"], ["proof (prove)\ngoal (1 subgoal):\n 1. map (\\<lambda>x. Var (length slp + fst x - Suc (snd x)))\n     (zip [0..<length fas] (rev (map (the \\<circ> Mapping.lookup M) fas))) =\n    map Var\n     (map (\\<lambda>x. length slp + fst x - Suc (snd x))\n       (zip [0..<length fas]\n         (rev (map (the \\<circ> Mapping.lookup M) fas))))", "by (simp add: split_beta')"], ["proof (state)\nthis:\n  map2 (\\<lambda>a b. Var (length slp + a - Suc b)) [0..<length fas]\n   (rev (map (the \\<circ> Mapping.lookup M) fas)) =\n  map Var\n   (map2 (\\<lambda>a b. length slp + a - Suc b) [0..<length fas]\n     (rev (map (the \\<circ> Mapping.lookup M) fas)))\n\ngoal (1 subgoal):\n 1. take (length fas) (interpret_slp (slp_of_fas fas) xs) =\n    interpret_floatariths fas xs", "have \"take (length fas)\n     (interpret_slp\n       (slp @\n        map (\\<lambda>(a, b). Var (length slp + a - Suc b)) (zip [0..<length fas] (rev (map (((\\<lambda>x. the o (Mapping.lookup x))) M) fas))))\n       xs) =\n    interpret_floatariths fas xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take (length fas)\n     (interpret_slp\n       (slp @\n        map2 (\\<lambda>a b. Var (length slp + a - Suc b)) [0..<length fas]\n         (rev (map (the \\<circ> Mapping.lookup M) fas)))\n       xs) =\n    interpret_floatariths fas xs", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. take (length fas)\n     (interpret_slp\n       (map2 (\\<lambda>a b. Var (length slp + a - Suc b)) [0..<length fas]\n         (rev (map (the \\<circ> Mapping.lookup M) fas)))\n       (interpret_slp slp xs)) =\n    interpret_floatariths fas xs", "unfolding map_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. take (length fas)\n     (interpret_slp\n       (map Var\n         (map2 (\\<lambda>a b. length slp + a - Suc b) [0..<length fas]\n           (rev (map (the \\<circ> Mapping.lookup M) fas))))\n       (interpret_slp slp xs)) =\n    interpret_floatariths fas xs", "apply (subst interpret_slp_map_Var)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>i.\n       i < length\n            (map2 (\\<lambda>a b. length slp + a - Suc b) [0..<length fas]\n              (rev (map (the \\<circ> Mapping.lookup M)\n                     fas))) \\<Longrightarrow>\n       i \\<le> map2 (\\<lambda>a b. length slp + a - Suc b) [0..<length fas]\n                (rev (map (the \\<circ> Mapping.lookup M) fas)) !\n               i\n 2. \\<And>i.\n       i < length\n            (map2 (\\<lambda>a b. length slp + a - Suc b) [0..<length fas]\n              (rev (map (the \\<circ> Mapping.lookup M)\n                     fas))) \\<Longrightarrow>\n       map2 (\\<lambda>a b. length slp + a - Suc b) [0..<length fas]\n        (rev (map (the \\<circ> Mapping.lookup M) fas)) !\n       i -\n       i\n       < length (interpret_slp slp xs)\n 3. take (length fas)\n     (rev (map2 (\\<lambda>i e. interpret_slp slp xs ! (e - i))\n            [0..<\n             length\n              (map2 (\\<lambda>a b. length slp + a - Suc b) [0..<length fas]\n                (rev (map (the \\<circ> Mapping.lookup M) fas)))]\n            (map2 (\\<lambda>a b. length slp + a - Suc b) [0..<length fas]\n              (rev (map (the \\<circ> Mapping.lookup M) fas)))) @\n      interpret_slp slp xs) =\n    interpret_floatariths fas xs", "apply (auto simp: rev_nth)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>i.\n       i < length fas \\<Longrightarrow>\n       i \\<le> length slp + i -\n               Suc (the (Mapping.lookup M (fas ! (length fas - Suc i))))\n 2. \\<And>i.\n       i < length fas \\<Longrightarrow>\n       length slp -\n       Suc (the (Mapping.lookup M (fas ! (length fas - Suc i))))\n       < length slp + length xs\n 3. rev (map2 (\\<lambda>i e. interpret_slp slp xs ! (e - i))\n          [0..<length fas]\n          (map2 (\\<lambda>a b. length slp + a - Suc b) [0..<length fas]\n            (rev (map (the \\<circ> Mapping.lookup M) fas)))) =\n    interpret_floatariths fas xs", "subgoal premises prems for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<le> length slp + i -\n            Suc (the (Mapping.lookup M (fas ! (length fas - Suc i))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<le> length slp + i -\n            Suc (the (Mapping.lookup M (fas ! (length fas - Suc i))))", "from prems"], ["proof (chain)\npicking this:\n  i < length fas", "have \" (length fas - Suc i) < length fas\""], ["proof (prove)\nusing this:\n  i < length fas\n\ngoal (1 subgoal):\n 1. length fas - Suc i < length fas", "using prems"], ["proof (prove)\nusing this:\n  i < length fas\n  i < length fas\n\ngoal (1 subgoal):\n 1. length fas - Suc i < length fas", "by auto"], ["proof (state)\nthis:\n  length fas - Suc i < length fas\n\ngoal (1 subgoal):\n 1. i \\<le> length slp + i -\n            Suc (the (Mapping.lookup M (fas ! (length fas - Suc i))))", "then"], ["proof (chain)\npicking this:\n  length fas - Suc i < length fas", "have \"fas ! (length fas - Suc i) \\<in> set fas\""], ["proof (prove)\nusing this:\n  length fas - Suc i < length fas\n\ngoal (1 subgoal):\n 1. fas ! (length fas - Suc i) \\<in> set fas", "by simp"], ["proof (state)\nthis:\n  fas ! (length fas - Suc i) \\<in> set fas\n\ngoal (1 subgoal):\n 1. i \\<le> length slp + i -\n            Suc (the (Mapping.lookup M (fas ! (length fas - Suc i))))", "also"], ["proof (state)\nthis:\n  fas ! (length fas - Suc i) \\<in> set fas\n\ngoal (1 subgoal):\n 1. i \\<le> length slp + i -\n            Suc (the (Mapping.lookup M (fas ! (length fas - Suc i))))", "have \"\\<dots> \\<subseteq> Mapping.keys M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set fas \\<subseteq> Mapping.keys M", "using M"], ["proof (prove)\nusing this:\n  \\<Union> (subterms ` set fas) \\<subseteq> Mapping.keys M \\<and>\n  Mapping.keys Mapping.empty \\<subseteq> Mapping.keys M \\<and>\n  (\\<forall>f\\<in>Mapping.keys M.\n      subterms f \\<subseteq> Mapping.keys M \\<and>\n      the (Mapping.lookup M f) < length slp \\<and>\n      interpret_slp slp xs ! slp_index_lookup slp M f =\n      interpret_floatarith f xs)\n\ngoal (1 subgoal):\n 1. set fas \\<subseteq> Mapping.keys M", "by force"], ["proof (state)\nthis:\n  set fas \\<subseteq> Mapping.keys M\n\ngoal (1 subgoal):\n 1. i \\<le> length slp + i -\n            Suc (the (Mapping.lookup M (fas ! (length fas - Suc i))))", "finally"], ["proof (chain)\npicking this:\n  fas ! (length fas - Suc i) \\<in> Mapping.keys M", "have \"fas ! (length fas - Suc i) \\<in> Mapping.keys M\""], ["proof (prove)\nusing this:\n  fas ! (length fas - Suc i) \\<in> Mapping.keys M\n\ngoal (1 subgoal):\n 1. fas ! (length fas - Suc i) \\<in> Mapping.keys M", "."], ["proof (state)\nthis:\n  fas ! (length fas - Suc i) \\<in> Mapping.keys M\n\ngoal (1 subgoal):\n 1. i \\<le> length slp + i -\n            Suc (the (Mapping.lookup M (fas ! (length fas - Suc i))))", "with M"], ["proof (chain)\npicking this:\n  \\<Union> (subterms ` set fas) \\<subseteq> Mapping.keys M \\<and>\n  Mapping.keys Mapping.empty \\<subseteq> Mapping.keys M \\<and>\n  (\\<forall>f\\<in>Mapping.keys M.\n      subterms f \\<subseteq> Mapping.keys M \\<and>\n      the (Mapping.lookup M f) < length slp \\<and>\n      interpret_slp slp xs ! slp_index_lookup slp M f =\n      interpret_floatarith f xs)\n  fas ! (length fas - Suc i) \\<in> Mapping.keys M", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Union> (subterms ` set fas) \\<subseteq> Mapping.keys M \\<and>\n  Mapping.keys Mapping.empty \\<subseteq> Mapping.keys M \\<and>\n  (\\<forall>f\\<in>Mapping.keys M.\n      subterms f \\<subseteq> Mapping.keys M \\<and>\n      the (Mapping.lookup M f) < length slp \\<and>\n      interpret_slp slp xs ! slp_index_lookup slp M f =\n      interpret_floatarith f xs)\n  fas ! (length fas - Suc i) \\<in> Mapping.keys M\n\ngoal (1 subgoal):\n 1. i \\<le> length slp + i -\n            Suc (the (Mapping.lookup M (fas ! (length fas - Suc i))))", "by auto"], ["proof (state)\nthis:\n  i \\<le> length slp + i -\n          Suc (the (Mapping.lookup M (fas ! (length fas - Suc i))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < length fas \\<Longrightarrow>\n       length slp -\n       Suc (the (Mapping.lookup M (fas ! (length fas - Suc i))))\n       < length slp + length xs\n 2. rev (map2 (\\<lambda>i e. interpret_slp slp xs ! (e - i))\n          [0..<length fas]\n          (map2 (\\<lambda>a b. length slp + a - Suc b) [0..<length fas]\n            (rev (map (the \\<circ> Mapping.lookup M) fas)))) =\n    interpret_floatariths fas xs", "subgoal premises prems for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. length slp - Suc (the (Mapping.lookup M (fas ! (length fas - Suc i))))\n    < length slp + length xs", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. length slp - Suc (the (Mapping.lookup M (fas ! (length fas - Suc i))))\n    < length slp + length xs", "from prems"], ["proof (chain)\npicking this:\n  i < length fas", "have \" (length fas - Suc i) < length fas\""], ["proof (prove)\nusing this:\n  i < length fas\n\ngoal (1 subgoal):\n 1. length fas - Suc i < length fas", "using prems"], ["proof (prove)\nusing this:\n  i < length fas\n  i < length fas\n\ngoal (1 subgoal):\n 1. length fas - Suc i < length fas", "by auto"], ["proof (state)\nthis:\n  length fas - Suc i < length fas\n\ngoal (1 subgoal):\n 1. length slp - Suc (the (Mapping.lookup M (fas ! (length fas - Suc i))))\n    < length slp + length xs", "then"], ["proof (chain)\npicking this:\n  length fas - Suc i < length fas", "have \"fas ! (length fas - Suc i) \\<in> set fas\""], ["proof (prove)\nusing this:\n  length fas - Suc i < length fas\n\ngoal (1 subgoal):\n 1. fas ! (length fas - Suc i) \\<in> set fas", "by simp"], ["proof (state)\nthis:\n  fas ! (length fas - Suc i) \\<in> set fas\n\ngoal (1 subgoal):\n 1. length slp - Suc (the (Mapping.lookup M (fas ! (length fas - Suc i))))\n    < length slp + length xs", "also"], ["proof (state)\nthis:\n  fas ! (length fas - Suc i) \\<in> set fas\n\ngoal (1 subgoal):\n 1. length slp - Suc (the (Mapping.lookup M (fas ! (length fas - Suc i))))\n    < length slp + length xs", "have \"\\<dots> \\<subseteq> Mapping.keys M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set fas \\<subseteq> Mapping.keys M", "using M"], ["proof (prove)\nusing this:\n  \\<Union> (subterms ` set fas) \\<subseteq> Mapping.keys M \\<and>\n  Mapping.keys Mapping.empty \\<subseteq> Mapping.keys M \\<and>\n  (\\<forall>f\\<in>Mapping.keys M.\n      subterms f \\<subseteq> Mapping.keys M \\<and>\n      the (Mapping.lookup M f) < length slp \\<and>\n      interpret_slp slp xs ! slp_index_lookup slp M f =\n      interpret_floatarith f xs)\n\ngoal (1 subgoal):\n 1. set fas \\<subseteq> Mapping.keys M", "by force"], ["proof (state)\nthis:\n  set fas \\<subseteq> Mapping.keys M\n\ngoal (1 subgoal):\n 1. length slp - Suc (the (Mapping.lookup M (fas ! (length fas - Suc i))))\n    < length slp + length xs", "finally"], ["proof (chain)\npicking this:\n  fas ! (length fas - Suc i) \\<in> Mapping.keys M", "have \"fas ! (length fas - Suc i) \\<in> Mapping.keys M\""], ["proof (prove)\nusing this:\n  fas ! (length fas - Suc i) \\<in> Mapping.keys M\n\ngoal (1 subgoal):\n 1. fas ! (length fas - Suc i) \\<in> Mapping.keys M", "."], ["proof (state)\nthis:\n  fas ! (length fas - Suc i) \\<in> Mapping.keys M\n\ngoal (1 subgoal):\n 1. length slp - Suc (the (Mapping.lookup M (fas ! (length fas - Suc i))))\n    < length slp + length xs", "with M"], ["proof (chain)\npicking this:\n  \\<Union> (subterms ` set fas) \\<subseteq> Mapping.keys M \\<and>\n  Mapping.keys Mapping.empty \\<subseteq> Mapping.keys M \\<and>\n  (\\<forall>f\\<in>Mapping.keys M.\n      subterms f \\<subseteq> Mapping.keys M \\<and>\n      the (Mapping.lookup M f) < length slp \\<and>\n      interpret_slp slp xs ! slp_index_lookup slp M f =\n      interpret_floatarith f xs)\n  fas ! (length fas - Suc i) \\<in> Mapping.keys M", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Union> (subterms ` set fas) \\<subseteq> Mapping.keys M \\<and>\n  Mapping.keys Mapping.empty \\<subseteq> Mapping.keys M \\<and>\n  (\\<forall>f\\<in>Mapping.keys M.\n      subterms f \\<subseteq> Mapping.keys M \\<and>\n      the (Mapping.lookup M f) < length slp \\<and>\n      interpret_slp slp xs ! slp_index_lookup slp M f =\n      interpret_floatarith f xs)\n  fas ! (length fas - Suc i) \\<in> Mapping.keys M\n\ngoal (1 subgoal):\n 1. length slp - Suc (the (Mapping.lookup M (fas ! (length fas - Suc i))))\n    < length slp + length xs", "by auto"], ["proof (state)\nthis:\n  length slp - Suc (the (Mapping.lookup M (fas ! (length fas - Suc i))))\n  < length slp + length xs\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal (1 subgoal):\n 1. rev (map2 (\\<lambda>i e. interpret_slp slp xs ! (e - i))\n          [0..<length fas]\n          (map2 (\\<lambda>a b. length slp + a - Suc b) [0..<length fas]\n            (rev (map (the \\<circ> Mapping.lookup M) fas)))) =\n    interpret_floatariths fas xs", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. rev (map2 (\\<lambda>i e. interpret_slp slp xs ! (e - i))\n          [0..<length fas]\n          (map2 (\\<lambda>a b. length slp + a - Suc b) [0..<length fas]\n            (rev (map (the \\<circ> Mapping.lookup M) fas)))) =\n    interpret_floatariths fas xs", "apply (rule nth_equalityI, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < length fas \\<Longrightarrow>\n       rev (map2 (\\<lambda>i e. interpret_slp slp xs ! (e - i))\n             [0..<length fas]\n             (map2 (\\<lambda>a b. length slp + a - Suc b) [0..<length fas]\n               (rev (map (the \\<circ> Mapping.lookup M) fas)))) !\n       i =\n       interpret_floatarith (fas ! i) xs", "subgoal premises prems for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. rev (map2 (\\<lambda>i e. interpret_slp slp xs ! (e - i))\n          [0..<length fas]\n          (map2 (\\<lambda>a b. length slp + a - Suc b) [0..<length fas]\n            (rev (map (the \\<circ> Mapping.lookup M) fas)))) !\n    i =\n    interpret_floatarith (fas ! i) xs", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rev (map2 (\\<lambda>i e. interpret_slp slp xs ! (e - i))\n          [0..<length fas]\n          (map2 (\\<lambda>a b. length slp + a - Suc b) [0..<length fas]\n            (rev (map (the \\<circ> Mapping.lookup M) fas)))) !\n    i =\n    interpret_floatarith (fas ! i) xs", "from prems"], ["proof (chain)\npicking this:\n  i < length fas", "have \"fas ! i \\<in> set fas\""], ["proof (prove)\nusing this:\n  i < length fas\n\ngoal (1 subgoal):\n 1. fas ! i \\<in> set fas", "by simp"], ["proof (state)\nthis:\n  fas ! i \\<in> set fas\n\ngoal (1 subgoal):\n 1. rev (map2 (\\<lambda>i e. interpret_slp slp xs ! (e - i))\n          [0..<length fas]\n          (map2 (\\<lambda>a b. length slp + a - Suc b) [0..<length fas]\n            (rev (map (the \\<circ> Mapping.lookup M) fas)))) !\n    i =\n    interpret_floatarith (fas ! i) xs", "also"], ["proof (state)\nthis:\n  fas ! i \\<in> set fas\n\ngoal (1 subgoal):\n 1. rev (map2 (\\<lambda>i e. interpret_slp slp xs ! (e - i))\n          [0..<length fas]\n          (map2 (\\<lambda>a b. length slp + a - Suc b) [0..<length fas]\n            (rev (map (the \\<circ> Mapping.lookup M) fas)))) !\n    i =\n    interpret_floatarith (fas ! i) xs", "have \"\\<dots> \\<subseteq> Mapping.keys M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set fas \\<subseteq> Mapping.keys M", "using M"], ["proof (prove)\nusing this:\n  \\<Union> (subterms ` set fas) \\<subseteq> Mapping.keys M \\<and>\n  Mapping.keys Mapping.empty \\<subseteq> Mapping.keys M \\<and>\n  (\\<forall>f\\<in>Mapping.keys M.\n      subterms f \\<subseteq> Mapping.keys M \\<and>\n      the (Mapping.lookup M f) < length slp \\<and>\n      interpret_slp slp xs ! slp_index_lookup slp M f =\n      interpret_floatarith f xs)\n\ngoal (1 subgoal):\n 1. set fas \\<subseteq> Mapping.keys M", "by force"], ["proof (state)\nthis:\n  set fas \\<subseteq> Mapping.keys M\n\ngoal (1 subgoal):\n 1. rev (map2 (\\<lambda>i e. interpret_slp slp xs ! (e - i))\n          [0..<length fas]\n          (map2 (\\<lambda>a b. length slp + a - Suc b) [0..<length fas]\n            (rev (map (the \\<circ> Mapping.lookup M) fas)))) !\n    i =\n    interpret_floatarith (fas ! i) xs", "finally"], ["proof (chain)\npicking this:\n  fas ! i \\<in> Mapping.keys M", "have \"fas ! i \\<in> Mapping.keys M\""], ["proof (prove)\nusing this:\n  fas ! i \\<in> Mapping.keys M\n\ngoal (1 subgoal):\n 1. fas ! i \\<in> Mapping.keys M", "."], ["proof (state)\nthis:\n  fas ! i \\<in> Mapping.keys M\n\ngoal (1 subgoal):\n 1. rev (map2 (\\<lambda>i e. interpret_slp slp xs ! (e - i))\n          [0..<length fas]\n          (map2 (\\<lambda>a b. length slp + a - Suc b) [0..<length fas]\n            (rev (map (the \\<circ> Mapping.lookup M) fas)))) !\n    i =\n    interpret_floatarith (fas ! i) xs", "from M[THEN conjunct2, THEN conjunct2, rule_format, OF this]"], ["proof (chain)\npicking this:\n  subterms (fas ! i) \\<subseteq> Mapping.keys M \\<and>\n  the (Mapping.lookup M (fas ! i)) < length slp \\<and>\n  interpret_slp slp xs ! slp_index_lookup slp M (fas ! i) =\n  interpret_floatarith (fas ! i) xs", "show ?thesis"], ["proof (prove)\nusing this:\n  subterms (fas ! i) \\<subseteq> Mapping.keys M \\<and>\n  the (Mapping.lookup M (fas ! i)) < length slp \\<and>\n  interpret_slp slp xs ! slp_index_lookup slp M (fas ! i) =\n  interpret_floatarith (fas ! i) xs\n\ngoal (1 subgoal):\n 1. rev (map2 (\\<lambda>i e. interpret_slp slp xs ! (e - i))\n          [0..<length fas]\n          (map2 (\\<lambda>a b. length slp + a - Suc b) [0..<length fas]\n            (rev (map (the \\<circ> Mapping.lookup M) fas)))) !\n    i =\n    interpret_floatarith (fas ! i) xs", "using prems"], ["proof (prove)\nusing this:\n  subterms (fas ! i) \\<subseteq> Mapping.keys M \\<and>\n  the (Mapping.lookup M (fas ! i)) < length slp \\<and>\n  interpret_slp slp xs ! slp_index_lookup slp M (fas ! i) =\n  interpret_floatarith (fas ! i) xs\n  i < length fas\n\ngoal (1 subgoal):\n 1. rev (map2 (\\<lambda>i e. interpret_slp slp xs ! (e - i))\n          [0..<length fas]\n          (map2 (\\<lambda>a b. length slp + a - Suc b) [0..<length fas]\n            (rev (map (the \\<circ> Mapping.lookup M) fas)))) !\n    i =\n    interpret_floatarith (fas ! i) xs", "by (auto simp: rev_nth interpret_floatariths_nth slp_index_lookup_def slp_index_def)"], ["proof (state)\nthis:\n  rev (map2 (\\<lambda>i e. interpret_slp slp xs ! (e - i)) [0..<length fas]\n        (map2 (\\<lambda>a b. length slp + a - Suc b) [0..<length fas]\n          (rev (map (the \\<circ> Mapping.lookup M) fas)))) !\n  i =\n  interpret_floatarith (fas ! i) xs\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  take (length fas)\n   (interpret_slp\n     (slp @\n      map2 (\\<lambda>a b. Var (length slp + a - Suc b)) [0..<length fas]\n       (rev (map (the \\<circ> Mapping.lookup M) fas)))\n     xs) =\n  interpret_floatariths fas xs\n\ngoal (1 subgoal):\n 1. take (length fas) (interpret_slp (slp_of_fas fas) xs) =\n    interpret_floatariths fas xs", "then"], ["proof (chain)\npicking this:\n  take (length fas)\n   (interpret_slp\n     (slp @\n      map2 (\\<lambda>a b. Var (length slp + a - Suc b)) [0..<length fas]\n       (rev (map (the \\<circ> Mapping.lookup M) fas)))\n     xs) =\n  interpret_floatariths fas xs", "show ?thesis"], ["proof (prove)\nusing this:\n  take (length fas)\n   (interpret_slp\n     (slp @\n      map2 (\\<lambda>a b. Var (length slp + a - Suc b)) [0..<length fas]\n       (rev (map (the \\<circ> Mapping.lookup M) fas)))\n     xs) =\n  interpret_floatariths fas xs\n\ngoal (1 subgoal):\n 1. take (length fas) (interpret_slp (slp_of_fas fas) xs) =\n    interpret_floatariths fas xs", "by (auto simp: slp_of_fas_def Let_def Mslp)"], ["proof (state)\nthis:\n  take (length fas) (interpret_slp (slp_of_fas fas) xs) =\n  interpret_floatariths fas xs\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>better code equations for construction of large programs\\<close>"], ["", "definition \"slp_indexl slpl i = slpl - Suc i\""], ["", "definition \"slp_indexl_lookup vsl M a = slp_indexl vsl (the (Mapping.lookup M a))\""], ["", "definition\n  \"slp_of_fa_rev_bin Binop a b M slp slpl M2 slp2 slpl2 =\n    (case Mapping.lookup M (Binop a b) of\n        Some i \\<Rightarrow> (Mapping.update (Binop a b) (slpl) M, Var (slp_indexl slpl i)#slp, Suc slpl)\n      | None \\<Rightarrow> (Mapping.update (Binop a b) (slpl2) M2,\n                Binop (Var (slp_indexl_lookup slpl2 M2 a)) (Var (slp_indexl_lookup slpl2 M2 b))#slp2,\n                  Suc slpl2))\""], ["", "definition\n  \"slp_of_fa_rev_un Unop a M slp slpl M1 slp1 slpl1 =\n    (case Mapping.lookup M (Unop a) of\n        Some i \\<Rightarrow> (Mapping.update (Unop a) (slpl) M, Var (slp_indexl slpl i)#slp, Suc slpl)\n      | None \\<Rightarrow> (Mapping.update (Unop a) (slpl1) M1,\n                  Unop (Var (slp_indexl_lookup slpl1 M1 a))#slp1, Suc slpl1))\""], ["", "definition\n  \"slp_of_fa_rev_cnst Const Const' M vs vsl =\n    (Mapping.update Const vsl M,\n      (case Mapping.lookup M Const of Some i \\<Rightarrow> Var (slp_indexl vsl i) | None \\<Rightarrow> Const')#vs, Suc vsl)\""], ["", "fun slp_of_fa_rev :: \"floatarith \\<Rightarrow> (floatarith, nat) mapping \\<Rightarrow> floatarith list \\<Rightarrow> nat \\<Rightarrow>\n  ((floatarith, nat) mapping \\<times> floatarith list \\<times> nat)\" where\n\"slp_of_fa_rev (Add a b) M slp slpl =\n    (let (M1, slp1, slpl1) = slp_of_fa_rev a M slp slpl; (M2, slp2, slpl2) = slp_of_fa_rev b M1 slp1 slpl1 in\n      slp_of_fa_rev_bin Add a b M slp slpl M2 slp2 slpl2)\"\n| \"slp_of_fa_rev (Mult a b) M slp slpl =\n    (let (M1, slp1, slpl1) = slp_of_fa_rev a M slp slpl; (M2, slp2, slpl2) = slp_of_fa_rev b M1 slp1 slpl1 in\n      slp_of_fa_rev_bin Mult a b M slp slpl M2 slp2 slpl2)\"\n| \"slp_of_fa_rev (Min a b) M slp slpl =\n    (let (M1, slp1, slpl1) = slp_of_fa_rev a M slp slpl; (M2, slp2, slpl2) = slp_of_fa_rev b M1 slp1 slpl1 in\n      slp_of_fa_rev_bin Min a b M slp slpl M2 slp2 slpl2)\"\n| \"slp_of_fa_rev (Max a b) M slp slpl =\n    (let (M1, slp1, slpl1) = slp_of_fa_rev a M slp slpl; (M2, slp2, slpl2) = slp_of_fa_rev b M1 slp1 slpl1 in\n      slp_of_fa_rev_bin Max a b M slp slpl M2 slp2 slpl2)\"\n| \"slp_of_fa_rev (Powr a b) M slp slpl =\n    (let (M1, slp1, slpl1) = slp_of_fa_rev a M slp slpl; (M2, slp2, slpl2) = slp_of_fa_rev b M1 slp1 slpl1 in\n      slp_of_fa_rev_bin Powr a b M slp slpl M2 slp2 slpl2)\"\n| \"slp_of_fa_rev (Inverse a) M slp slpl =\n   (let (M1, slp1, slpl1) = slp_of_fa_rev a M slp slpl in slp_of_fa_rev_un Inverse a M slp slpl M1 slp1 slpl1)\"\n| \"slp_of_fa_rev (Cos a) M slp slpl =\n   (let (M1, slp1, slpl1) = slp_of_fa_rev a M slp slpl in slp_of_fa_rev_un Cos a M slp slpl M1 slp1 slpl1)\"\n| \"slp_of_fa_rev (Arctan a) M slp slpl =\n   (let (M1, slp1, slpl1) = slp_of_fa_rev a M slp slpl in slp_of_fa_rev_un Arctan a M slp slpl M1 slp1 slpl1)\"\n| \"slp_of_fa_rev (Abs a) M slp slpl =\n   (let (M1, slp1, slpl1) = slp_of_fa_rev a M slp slpl in slp_of_fa_rev_un Abs a M slp slpl M1 slp1 slpl1)\"\n| \"slp_of_fa_rev (Sqrt a) M slp slpl =\n   (let (M1, slp1, slpl1) = slp_of_fa_rev a M slp slpl in slp_of_fa_rev_un Sqrt a M slp slpl M1 slp1 slpl1)\"\n| \"slp_of_fa_rev (Exp a) M slp slpl =\n   (let (M1, slp1, slpl1) = slp_of_fa_rev a M slp slpl in slp_of_fa_rev_un Exp a M slp slpl M1 slp1 slpl1)\"\n| \"slp_of_fa_rev (Ln a) M slp slpl =\n   (let (M1, slp1, slpl1) = slp_of_fa_rev a M slp slpl in slp_of_fa_rev_un Ln a M slp slpl M1 slp1 slpl1)\"\n| \"slp_of_fa_rev (Minus a) M slp slpl =\n   (let (M1, slp1, slpl1) = slp_of_fa_rev a M slp slpl in slp_of_fa_rev_un Minus a M slp slpl M1 slp1 slpl1)\"\n| \"slp_of_fa_rev (Floor a) M slp slpl =\n   (let (M1, slp1, slpl1) = slp_of_fa_rev a M slp slpl in slp_of_fa_rev_un Floor a M slp slpl M1 slp1 slpl1)\"\n| \"slp_of_fa_rev (Power a n) M slp slpl =\n   (let (M1, slp1, slpl1) = slp_of_fa_rev a M slp slpl in slp_of_fa_rev_un (\\<lambda>a. Power a n) a M slp slpl M1 slp1 slpl1)\"\n| \"slp_of_fa_rev Pi M slp slpl = slp_of_fa_rev_cnst Pi Pi M slp slpl\"\n| \"slp_of_fa_rev (Var v) M slp slpl = slp_of_fa_rev_cnst (Var v) (Var (v + slpl)) M slp slpl\"\n| \"slp_of_fa_rev (Num n) M slp slpl = slp_of_fa_rev_cnst (Num n) (Num n) M slp slpl\""], ["", "lemma slp_indexl_length[simp]: \"slp_indexl (length xs) i = slp_index xs i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. slp_indexl (length xs) i = slp_index xs i", "by (auto simp: slp_index_def slp_indexl_def)"], ["", "lemma slp_indexl_lookup_length[simp]: \"slp_indexl_lookup (length xs) i = slp_index_lookup xs i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. slp_indexl_lookup (length xs) i = slp_index_lookup xs i", "by (auto simp: slp_index_lookup_def slp_indexl_lookup_def)"], ["", "lemma slp_index_rev[simp]: \"slp_index (rev xs) i = slp_index xs i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. slp_index (rev xs) i = slp_index xs i", "by (auto simp: slp_index_def slp_indexl_def)"], ["", "lemma slp_index_lookup_rev[simp]: \"slp_index_lookup (rev xs) i = slp_index_lookup xs i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. slp_index_lookup (rev xs) i = slp_index_lookup xs i", "by (auto simp: slp_index_lookup_def slp_indexl_lookup_def)"], ["", "lemma slp_of_fa_bin_slp_of_fa_rev_bin:\n  \"slp_of_fa_rev_bin Binop a b M slp (length slp) M2 slp2 (length slp2) =\n   (let (M, slp') = slp_of_fa_bin Binop a b M (rev slp) M2 (rev slp2) in (M, rev slp', length slp'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. slp_of_fa_rev_bin Binop a b M slp (length slp) M2 slp2 (length slp2) =\n    (let (M, slp') = slp_of_fa_bin Binop a b M (rev slp) M2 (rev slp2)\n     in (M, rev slp', length slp'))", "by (auto simp: slp_of_fa_rev_bin_def slp_of_fa_bin_def\n      split: prod.splits option.splits)"], ["", "lemma slp_of_fa_un_slp_of_fa_rev_un:\n  \"slp_of_fa_rev_un Binop a M slp (length slp) M2 slp2 (length slp2) =\n   (let (M, slp') = slp_of_fa_un Binop a M (rev slp) M2 (rev slp2) in (M, rev slp', length slp'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. slp_of_fa_rev_un Binop a M slp (length slp) M2 slp2 (length slp2) =\n    (let (M, slp') = slp_of_fa_un Binop a M (rev slp) M2 (rev slp2)\n     in (M, rev slp', length slp'))", "by (auto simp: slp_of_fa_rev_un_def slp_of_fa_un_def split: prod.splits option.splits)"], ["", "lemma slp_of_fa_cnst_slp_of_fa_rev_cnst:\n  \"slp_of_fa_rev_cnst Cnst Cnst' M slp (length slp) =\n   (let (M, slp') = slp_of_fa_cnst Cnst Cnst' M (rev slp) in (M, rev slp', length slp'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. slp_of_fa_rev_cnst Cnst Cnst' M slp (length slp) =\n    (let (M, slp') = slp_of_fa_cnst Cnst Cnst' M (rev slp)\n     in (M, rev slp', length slp'))", "by (auto simp: slp_of_fa_rev_cnst_def slp_of_fa_cnst_def\n      split: prod.splits option.splits)"], ["", "lemma slp_of_fa_rev:\n  \"slp_of_fa_rev fa M slp (length slp) = (let (M, slp') = slp_of_fa fa M (rev slp) in (M, rev slp', length slp'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. slp_of_fa_rev fa M slp (length slp) =\n    (let (M, slp') = slp_of_fa fa M (rev slp) in (M, rev slp', length slp'))", "proof (induction fa arbitrary: M slp)"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Add fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Add fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Minus fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Minus fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Mult fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Mult fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 4. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Inverse fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Inverse fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Cos fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Cos fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Arctan fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Arctan fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Abs fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Abs fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 8. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Max fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 9. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 10. \\<And>M slp.\n        slp_of_fa_rev Pi M slp (length slp) =\n        (let (M, slp') = slp_of_fa Pi M (rev slp)\n         in (M, rev slp', length slp'))\nA total of 18 subgoals...", "case (Add fa1 fa2)"], ["proof (state)\nthis:\n  slp_of_fa_rev fa1 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa1 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n  slp_of_fa_rev fa2 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa2 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (18 subgoals):\n 1. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Add fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Add fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Minus fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Minus fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Mult fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Mult fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 4. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Inverse fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Inverse fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Cos fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Cos fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Arctan fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Arctan fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Abs fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Abs fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 8. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Max fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 9. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 10. \\<And>M slp.\n        slp_of_fa_rev Pi M slp (length slp) =\n        (let (M, slp') = slp_of_fa Pi M (rev slp)\n         in (M, rev slp', length slp'))\nA total of 18 subgoals...", "then"], ["proof (chain)\npicking this:\n  slp_of_fa_rev fa1 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa1 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n  slp_of_fa_rev fa2 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa2 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "show ?case"], ["proof (prove)\nusing this:\n  slp_of_fa_rev fa1 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa1 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n  slp_of_fa_rev fa2 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa2 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (1 subgoal):\n 1. slp_of_fa_rev (Add fa1 fa2) M slp (length slp) =\n    (let a = slp_of_fa (Add fa1 fa2) M (rev slp)\n     in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "by (auto split: prod.splits simp: Let_def\n      slp_of_fa_cnst_slp_of_fa_rev_cnst slp_of_fa_bin_slp_of_fa_rev_bin slp_of_fa_un_slp_of_fa_rev_un)\n      (metis (no_types, lifting) Pair_inject length_rev prod.simps(2) rev_rev_ident slp_of_fa_bin_slp_of_fa_rev_bin)"], ["proof (state)\nthis:\n  slp_of_fa_rev (Add fa1 fa2) M slp (length slp) =\n  (let a = slp_of_fa (Add fa1 fa2) M (rev slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (17 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Minus fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Minus fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Mult fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Mult fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Inverse fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Inverse fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Cos fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Cos fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Arctan fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Arctan fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Abs fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Abs fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Max fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 8. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 9. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 10. \\<And>fa M slp.\n        (\\<And>M slp.\n            slp_of_fa_rev fa M slp (length slp) =\n            (let (M, slp') = slp_of_fa fa M (rev slp)\n             in (M, rev slp', length slp'))) \\<Longrightarrow>\n        slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n        (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n         in (M, rev slp', length slp'))\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Minus fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Minus fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Mult fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Mult fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Inverse fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Inverse fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Cos fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Cos fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Arctan fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Arctan fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Abs fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Abs fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Max fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 8. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 9. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 10. \\<And>fa M slp.\n        (\\<And>M slp.\n            slp_of_fa_rev fa M slp (length slp) =\n            (let (M, slp') = slp_of_fa fa M (rev slp)\n             in (M, rev slp', length slp'))) \\<Longrightarrow>\n        slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n        (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n         in (M, rev slp', length slp'))\nA total of 17 subgoals...", "case (Minus fa)"], ["proof (state)\nthis:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (17 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Minus fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Minus fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Mult fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Mult fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Inverse fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Inverse fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Cos fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Cos fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Arctan fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Arctan fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Abs fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Abs fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Max fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 8. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 9. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 10. \\<And>fa M slp.\n        (\\<And>M slp.\n            slp_of_fa_rev fa M slp (length slp) =\n            (let (M, slp') = slp_of_fa fa M (rev slp)\n             in (M, rev slp', length slp'))) \\<Longrightarrow>\n        slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n        (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n         in (M, rev slp', length slp'))\nA total of 17 subgoals...", "then"], ["proof (chain)\npicking this:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "show ?case"], ["proof (prove)\nusing this:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (1 subgoal):\n 1. slp_of_fa_rev (Minus fa) M slp (length slp) =\n    (let a = slp_of_fa (Minus fa) M (rev slp)\n     in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "by (auto split: prod.splits simp: Let_def\n      slp_of_fa_cnst_slp_of_fa_rev_cnst slp_of_fa_bin_slp_of_fa_rev_bin slp_of_fa_un_slp_of_fa_rev_un)\n    (metis (mono_tags, lifting) length_rev prod.simps(2) rev_swap slp_of_fa_un_slp_of_fa_rev_un)"], ["proof (state)\nthis:\n  slp_of_fa_rev (Minus fa) M slp (length slp) =\n  (let a = slp_of_fa (Minus fa) M (rev slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (16 subgoals):\n 1. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Mult fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Mult fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Inverse fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Inverse fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Cos fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Cos fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Arctan fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Arctan fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Abs fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Abs fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Max fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 7. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 8. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 9. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 10. \\<And>fa M slp.\n        (\\<And>M slp.\n            slp_of_fa_rev fa M slp (length slp) =\n            (let (M, slp') = slp_of_fa fa M (rev slp)\n             in (M, rev slp', length slp'))) \\<Longrightarrow>\n        slp_of_fa_rev (Exp fa) M slp (length slp) =\n        (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n         in (M, rev slp', length slp'))\nA total of 16 subgoals...", "next"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Mult fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Mult fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Inverse fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Inverse fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Cos fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Cos fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Arctan fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Arctan fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Abs fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Abs fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Max fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 7. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 8. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 9. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 10. \\<And>fa M slp.\n        (\\<And>M slp.\n            slp_of_fa_rev fa M slp (length slp) =\n            (let (M, slp') = slp_of_fa fa M (rev slp)\n             in (M, rev slp', length slp'))) \\<Longrightarrow>\n        slp_of_fa_rev (Exp fa) M slp (length slp) =\n        (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n         in (M, rev slp', length slp'))\nA total of 16 subgoals...", "case (Mult fa1 fa2)"], ["proof (state)\nthis:\n  slp_of_fa_rev fa1 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa1 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n  slp_of_fa_rev fa2 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa2 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (16 subgoals):\n 1. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Mult fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Mult fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Inverse fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Inverse fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Cos fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Cos fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Arctan fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Arctan fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Abs fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Abs fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Max fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 7. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 8. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 9. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 10. \\<And>fa M slp.\n        (\\<And>M slp.\n            slp_of_fa_rev fa M slp (length slp) =\n            (let (M, slp') = slp_of_fa fa M (rev slp)\n             in (M, rev slp', length slp'))) \\<Longrightarrow>\n        slp_of_fa_rev (Exp fa) M slp (length slp) =\n        (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n         in (M, rev slp', length slp'))\nA total of 16 subgoals...", "then"], ["proof (chain)\npicking this:\n  slp_of_fa_rev fa1 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa1 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n  slp_of_fa_rev fa2 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa2 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "show ?case"], ["proof (prove)\nusing this:\n  slp_of_fa_rev fa1 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa1 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n  slp_of_fa_rev fa2 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa2 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (1 subgoal):\n 1. slp_of_fa_rev (Mult fa1 fa2) M slp (length slp) =\n    (let a = slp_of_fa (Mult fa1 fa2) M (rev slp)\n     in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "by (auto split: prod.splits simp: Let_def\n      slp_of_fa_cnst_slp_of_fa_rev_cnst slp_of_fa_bin_slp_of_fa_rev_bin slp_of_fa_un_slp_of_fa_rev_un)\n      (metis (no_types, lifting) Pair_inject length_rev prod.simps(2) rev_rev_ident slp_of_fa_bin_slp_of_fa_rev_bin)"], ["proof (state)\nthis:\n  slp_of_fa_rev (Mult fa1 fa2) M slp (length slp) =\n  (let a = slp_of_fa (Mult fa1 fa2) M (rev slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (15 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Inverse fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Inverse fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Cos fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Cos fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Arctan fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Arctan fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Abs fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Abs fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Max fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 6. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 7. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 8. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 9. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 10. \\<And>fa1 fa2 M slp.\n        \\<lbrakk>\\<And>M slp.\n                    slp_of_fa_rev fa1 M slp (length slp) =\n                    (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                     in (M, rev slp', length slp'));\n         \\<And>M slp.\n            slp_of_fa_rev fa2 M slp (length slp) =\n            (let (M, slp') = slp_of_fa fa2 M (rev slp)\n             in (M, rev slp', length slp'))\\<rbrakk>\n        \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                          (let (M, slp') =\n                                 slp_of_fa (Powr fa1 fa2) M (rev slp)\n                           in (M, rev slp', length slp'))\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Inverse fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Inverse fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Cos fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Cos fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Arctan fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Arctan fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Abs fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Abs fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Max fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 6. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 7. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 8. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 9. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 10. \\<And>fa1 fa2 M slp.\n        \\<lbrakk>\\<And>M slp.\n                    slp_of_fa_rev fa1 M slp (length slp) =\n                    (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                     in (M, rev slp', length slp'));\n         \\<And>M slp.\n            slp_of_fa_rev fa2 M slp (length slp) =\n            (let (M, slp') = slp_of_fa fa2 M (rev slp)\n             in (M, rev slp', length slp'))\\<rbrakk>\n        \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                          (let (M, slp') =\n                                 slp_of_fa (Powr fa1 fa2) M (rev slp)\n                           in (M, rev slp', length slp'))\nA total of 15 subgoals...", "case (Inverse fa)"], ["proof (state)\nthis:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (15 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Inverse fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Inverse fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Cos fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Cos fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Arctan fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Arctan fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Abs fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Abs fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Max fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 6. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 7. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 8. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 9. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 10. \\<And>fa1 fa2 M slp.\n        \\<lbrakk>\\<And>M slp.\n                    slp_of_fa_rev fa1 M slp (length slp) =\n                    (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                     in (M, rev slp', length slp'));\n         \\<And>M slp.\n            slp_of_fa_rev fa2 M slp (length slp) =\n            (let (M, slp') = slp_of_fa fa2 M (rev slp)\n             in (M, rev slp', length slp'))\\<rbrakk>\n        \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                          (let (M, slp') =\n                                 slp_of_fa (Powr fa1 fa2) M (rev slp)\n                           in (M, rev slp', length slp'))\nA total of 15 subgoals...", "then"], ["proof (chain)\npicking this:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "show ?case"], ["proof (prove)\nusing this:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (1 subgoal):\n 1. slp_of_fa_rev (Inverse fa) M slp (length slp) =\n    (let a = slp_of_fa (Inverse fa) M (rev slp)\n     in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "by (auto split: prod.splits simp: Let_def\n      slp_of_fa_cnst_slp_of_fa_rev_cnst slp_of_fa_bin_slp_of_fa_rev_bin slp_of_fa_un_slp_of_fa_rev_un)\n    (metis (mono_tags, lifting) length_rev prod.simps(2) rev_swap slp_of_fa_un_slp_of_fa_rev_un)"], ["proof (state)\nthis:\n  slp_of_fa_rev (Inverse fa) M slp (length slp) =\n  (let a = slp_of_fa (Inverse fa) M (rev slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (14 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Cos fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Cos fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Arctan fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Arctan fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Abs fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Abs fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Max fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 5. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 6. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 8. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 9. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 10. \\<And>fa M slp.\n        (\\<And>M slp.\n            slp_of_fa_rev fa M slp (length slp) =\n            (let (M, slp') = slp_of_fa fa M (rev slp)\n             in (M, rev slp', length slp'))) \\<Longrightarrow>\n        slp_of_fa_rev (Ln fa) M slp (length slp) =\n        (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n         in (M, rev slp', length slp'))\nA total of 14 subgoals...", "next"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Cos fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Cos fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Arctan fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Arctan fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Abs fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Abs fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Max fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 5. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 6. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 8. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 9. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 10. \\<And>fa M slp.\n        (\\<And>M slp.\n            slp_of_fa_rev fa M slp (length slp) =\n            (let (M, slp') = slp_of_fa fa M (rev slp)\n             in (M, rev slp', length slp'))) \\<Longrightarrow>\n        slp_of_fa_rev (Ln fa) M slp (length slp) =\n        (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n         in (M, rev slp', length slp'))\nA total of 14 subgoals...", "case (Cos fa)"], ["proof (state)\nthis:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (14 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Cos fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Cos fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Arctan fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Arctan fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Abs fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Abs fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Max fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 5. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 6. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 8. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 9. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 10. \\<And>fa M slp.\n        (\\<And>M slp.\n            slp_of_fa_rev fa M slp (length slp) =\n            (let (M, slp') = slp_of_fa fa M (rev slp)\n             in (M, rev slp', length slp'))) \\<Longrightarrow>\n        slp_of_fa_rev (Ln fa) M slp (length slp) =\n        (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n         in (M, rev slp', length slp'))\nA total of 14 subgoals...", "then"], ["proof (chain)\npicking this:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "show ?case"], ["proof (prove)\nusing this:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (1 subgoal):\n 1. slp_of_fa_rev (Cos fa) M slp (length slp) =\n    (let a = slp_of_fa (Cos fa) M (rev slp)\n     in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "by (auto split: prod.splits simp: Let_def\n      slp_of_fa_cnst_slp_of_fa_rev_cnst slp_of_fa_bin_slp_of_fa_rev_bin slp_of_fa_un_slp_of_fa_rev_un)\n    (metis (mono_tags, lifting) length_rev prod.simps(2) rev_swap slp_of_fa_un_slp_of_fa_rev_un)"], ["proof (state)\nthis:\n  slp_of_fa_rev (Cos fa) M slp (length slp) =\n  (let a = slp_of_fa (Cos fa) M (rev slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (13 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Arctan fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Arctan fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Abs fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Abs fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Max fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 4. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 5. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 8. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 9. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 10. \\<And>fa x2a M slp.\n        (\\<And>M slp.\n            slp_of_fa_rev fa M slp (length slp) =\n            (let (M, slp') = slp_of_fa fa M (rev slp)\n             in (M, rev slp', length slp'))) \\<Longrightarrow>\n        slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n        (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n         in (M, rev slp', length slp'))\nA total of 13 subgoals...", "next"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Arctan fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Arctan fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Abs fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Abs fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Max fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 4. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 5. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 8. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 9. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 10. \\<And>fa x2a M slp.\n        (\\<And>M slp.\n            slp_of_fa_rev fa M slp (length slp) =\n            (let (M, slp') = slp_of_fa fa M (rev slp)\n             in (M, rev slp', length slp'))) \\<Longrightarrow>\n        slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n        (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n         in (M, rev slp', length slp'))\nA total of 13 subgoals...", "case (Arctan fa)"], ["proof (state)\nthis:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (13 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Arctan fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Arctan fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Abs fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Abs fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Max fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 4. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 5. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 8. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 9. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 10. \\<And>fa x2a M slp.\n        (\\<And>M slp.\n            slp_of_fa_rev fa M slp (length slp) =\n            (let (M, slp') = slp_of_fa fa M (rev slp)\n             in (M, rev slp', length slp'))) \\<Longrightarrow>\n        slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n        (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n         in (M, rev slp', length slp'))\nA total of 13 subgoals...", "then"], ["proof (chain)\npicking this:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "show ?case"], ["proof (prove)\nusing this:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (1 subgoal):\n 1. slp_of_fa_rev (Arctan fa) M slp (length slp) =\n    (let a = slp_of_fa (Arctan fa) M (rev slp)\n     in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "by (auto split: prod.splits simp: Let_def\n      slp_of_fa_cnst_slp_of_fa_rev_cnst slp_of_fa_bin_slp_of_fa_rev_bin slp_of_fa_un_slp_of_fa_rev_un)\n    (metis (mono_tags, lifting) length_rev prod.simps(2) rev_swap slp_of_fa_un_slp_of_fa_rev_un)"], ["proof (state)\nthis:\n  slp_of_fa_rev (Arctan fa) M slp (length slp) =\n  (let a = slp_of_fa (Arctan fa) M (rev slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (12 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Abs fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Abs fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Max fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 3. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 4. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 8. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 9. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 10. \\<And>fa M slp.\n        (\\<And>M slp.\n            slp_of_fa_rev fa M slp (length slp) =\n            (let (M, slp') = slp_of_fa fa M (rev slp)\n             in (M, rev slp', length slp'))) \\<Longrightarrow>\n        slp_of_fa_rev (Floor fa) M slp (length slp) =\n        (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n         in (M, rev slp', length slp'))\nA total of 12 subgoals...", "next"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Abs fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Abs fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Max fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 3. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 4. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 8. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 9. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 10. \\<And>fa M slp.\n        (\\<And>M slp.\n            slp_of_fa_rev fa M slp (length slp) =\n            (let (M, slp') = slp_of_fa fa M (rev slp)\n             in (M, rev slp', length slp'))) \\<Longrightarrow>\n        slp_of_fa_rev (Floor fa) M slp (length slp) =\n        (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n         in (M, rev slp', length slp'))\nA total of 12 subgoals...", "case (Abs fa)"], ["proof (state)\nthis:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (12 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Abs fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Abs fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Max fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 3. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 4. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 8. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 9. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 10. \\<And>fa M slp.\n        (\\<And>M slp.\n            slp_of_fa_rev fa M slp (length slp) =\n            (let (M, slp') = slp_of_fa fa M (rev slp)\n             in (M, rev slp', length slp'))) \\<Longrightarrow>\n        slp_of_fa_rev (Floor fa) M slp (length slp) =\n        (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n         in (M, rev slp', length slp'))\nA total of 12 subgoals...", "then"], ["proof (chain)\npicking this:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "show ?case"], ["proof (prove)\nusing this:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (1 subgoal):\n 1. slp_of_fa_rev (Abs fa) M slp (length slp) =\n    (let a = slp_of_fa (Abs fa) M (rev slp)\n     in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "by (auto split: prod.splits simp: Let_def\n      slp_of_fa_cnst_slp_of_fa_rev_cnst slp_of_fa_bin_slp_of_fa_rev_bin slp_of_fa_un_slp_of_fa_rev_un)\n    (metis (mono_tags, lifting) length_rev prod.simps(2) rev_swap slp_of_fa_un_slp_of_fa_rev_un)"], ["proof (state)\nthis:\n  slp_of_fa_rev (Abs fa) M slp (length slp) =\n  (let a = slp_of_fa (Abs fa) M (rev slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (11 subgoals):\n 1. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Max fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 2. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 3. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 7. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 8. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 9. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 10. \\<And>x M slp.\n        slp_of_fa_rev (Var x) M slp (length slp) =\n        (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n         in (M, rev slp', length slp'))\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Max fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 2. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 3. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 7. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 8. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 9. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 10. \\<And>x M slp.\n        slp_of_fa_rev (Var x) M slp (length slp) =\n        (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n         in (M, rev slp', length slp'))\nA total of 11 subgoals...", "case (Max fa1 fa2)"], ["proof (state)\nthis:\n  slp_of_fa_rev fa1 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa1 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n  slp_of_fa_rev fa2 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa2 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (11 subgoals):\n 1. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Max fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 2. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 3. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 7. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 8. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 9. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 10. \\<And>x M slp.\n        slp_of_fa_rev (Var x) M slp (length slp) =\n        (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n         in (M, rev slp', length slp'))\nA total of 11 subgoals...", "then"], ["proof (chain)\npicking this:\n  slp_of_fa_rev fa1 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa1 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n  slp_of_fa_rev fa2 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa2 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "show ?case"], ["proof (prove)\nusing this:\n  slp_of_fa_rev fa1 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa1 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n  slp_of_fa_rev fa2 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa2 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (1 subgoal):\n 1. slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n    (let a = slp_of_fa (Max fa1 fa2) M (rev slp)\n     in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "by (auto split: prod.splits simp: Let_def\n      slp_of_fa_cnst_slp_of_fa_rev_cnst slp_of_fa_bin_slp_of_fa_rev_bin slp_of_fa_un_slp_of_fa_rev_un)\n      (metis (no_types, lifting) Pair_inject length_rev prod.simps(2) rev_rev_ident slp_of_fa_bin_slp_of_fa_rev_bin)"], ["proof (state)\nthis:\n  slp_of_fa_rev (Max fa1 fa2) M slp (length slp) =\n  (let a = slp_of_fa (Max fa1 fa2) M (rev slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (10 subgoals):\n 1. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 2. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 6. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 8. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 9. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 10. \\<And>x M slp.\n        slp_of_fa_rev (Num x) M slp (length slp) =\n        (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n         in (M, rev slp', length slp'))", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 2. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 6. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 8. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 9. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 10. \\<And>x M slp.\n        slp_of_fa_rev (Num x) M slp (length slp) =\n        (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n         in (M, rev slp', length slp'))", "case (Min fa1 fa2)"], ["proof (state)\nthis:\n  slp_of_fa_rev fa1 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa1 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n  slp_of_fa_rev fa2 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa2 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (10 subgoals):\n 1. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Min fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 2. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 6. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 8. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 9. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 10. \\<And>x M slp.\n        slp_of_fa_rev (Num x) M slp (length slp) =\n        (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n         in (M, rev slp', length slp'))", "then"], ["proof (chain)\npicking this:\n  slp_of_fa_rev fa1 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa1 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n  slp_of_fa_rev fa2 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa2 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "show ?case"], ["proof (prove)\nusing this:\n  slp_of_fa_rev fa1 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa1 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n  slp_of_fa_rev fa2 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa2 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (1 subgoal):\n 1. slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n    (let a = slp_of_fa (Min fa1 fa2) M (rev slp)\n     in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "by (auto split: prod.splits simp: Let_def\n      slp_of_fa_cnst_slp_of_fa_rev_cnst slp_of_fa_bin_slp_of_fa_rev_bin slp_of_fa_un_slp_of_fa_rev_un)\n      (metis (no_types, lifting) Pair_inject length_rev prod.simps(2) rev_rev_ident slp_of_fa_bin_slp_of_fa_rev_bin)"], ["proof (state)\nthis:\n  slp_of_fa_rev (Min fa1 fa2) M slp (length slp) =\n  (let a = slp_of_fa (Min fa1 fa2) M (rev slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (9 subgoals):\n 1. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 5. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 8. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 9. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 5. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 8. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 9. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "case Pi"], ["proof (state)\nthis:\n  \n\ngoal (9 subgoals):\n 1. \\<And>M slp.\n       slp_of_fa_rev Pi M slp (length slp) =\n       (let (M, slp') = slp_of_fa Pi M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 5. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 8. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 9. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. slp_of_fa_rev Pi M slp (length slp) =\n    (let a = slp_of_fa Pi M (rev slp)\n     in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "by (auto split: prod.splits simp: Let_def\n      slp_of_fa_cnst_slp_of_fa_rev_cnst slp_of_fa_bin_slp_of_fa_rev_bin slp_of_fa_un_slp_of_fa_rev_un)"], ["proof (state)\nthis:\n  slp_of_fa_rev Pi M slp (length slp) =\n  (let a = slp_of_fa Pi M (rev slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (8 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 4. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 8. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 4. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 8. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "case (Sqrt fa)"], ["proof (state)\nthis:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (8 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Sqrt fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 4. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 8. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "then"], ["proof (chain)\npicking this:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "show ?case"], ["proof (prove)\nusing this:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (1 subgoal):\n 1. slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n    (let a = slp_of_fa (Sqrt fa) M (rev slp)\n     in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "by (auto split: prod.splits simp: Let_def\n      slp_of_fa_cnst_slp_of_fa_rev_cnst slp_of_fa_bin_slp_of_fa_rev_bin slp_of_fa_un_slp_of_fa_rev_un)\n    (metis (mono_tags, lifting) length_rev prod.simps(2) rev_swap slp_of_fa_un_slp_of_fa_rev_un)"], ["proof (state)\nthis:\n  slp_of_fa_rev (Sqrt fa) M slp (length slp) =\n  (let a = slp_of_fa (Sqrt fa) M (rev slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (7 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "case (Exp fa)"], ["proof (state)\nthis:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (7 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Exp fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Exp fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 7. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "then"], ["proof (chain)\npicking this:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "show ?case"], ["proof (prove)\nusing this:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (1 subgoal):\n 1. slp_of_fa_rev (Exp fa) M slp (length slp) =\n    (let a = slp_of_fa (Exp fa) M (rev slp)\n     in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "by (auto split: prod.splits simp: Let_def\n      slp_of_fa_cnst_slp_of_fa_rev_cnst slp_of_fa_bin_slp_of_fa_rev_bin slp_of_fa_un_slp_of_fa_rev_un)\n    (metis (mono_tags, lifting) length_rev prod.simps(2) rev_swap slp_of_fa_un_slp_of_fa_rev_un)"], ["proof (state)\nthis:\n  slp_of_fa_rev (Exp fa) M slp (length slp) =\n  (let a = slp_of_fa (Exp fa) M (rev slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (6 subgoals):\n 1. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "case (Powr fa1 fa2)"], ["proof (state)\nthis:\n  slp_of_fa_rev fa1 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa1 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n  slp_of_fa_rev fa2 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa2 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (6 subgoals):\n 1. \\<And>fa1 fa2 M slp.\n       \\<lbrakk>\\<And>M slp.\n                   slp_of_fa_rev fa1 M slp (length slp) =\n                   (let (M, slp') = slp_of_fa fa1 M (rev slp)\n                    in (M, rev slp', length slp'));\n        \\<And>M slp.\n           slp_of_fa_rev fa2 M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa2 M (rev slp)\n            in (M, rev slp', length slp'))\\<rbrakk>\n       \\<Longrightarrow> slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n                         (let (M, slp') =\n                                slp_of_fa (Powr fa1 fa2) M (rev slp)\n                          in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 6. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "then"], ["proof (chain)\npicking this:\n  slp_of_fa_rev fa1 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa1 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n  slp_of_fa_rev fa2 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa2 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "show ?case"], ["proof (prove)\nusing this:\n  slp_of_fa_rev fa1 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa1 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n  slp_of_fa_rev fa2 ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa2 ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (1 subgoal):\n 1. slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n    (let a = slp_of_fa (Powr fa1 fa2) M (rev slp)\n     in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "by (auto split: prod.splits simp: Let_def\n      slp_of_fa_cnst_slp_of_fa_rev_cnst slp_of_fa_bin_slp_of_fa_rev_bin slp_of_fa_un_slp_of_fa_rev_un)\n      (metis (no_types, lifting) Pair_inject length_rev prod.simps(2) rev_rev_ident slp_of_fa_bin_slp_of_fa_rev_bin)"], ["proof (state)\nthis:\n  slp_of_fa_rev (Powr fa1 fa2) M slp (length slp) =\n  (let a = slp_of_fa (Powr fa1 fa2) M (rev slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (5 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "case (Ln fa)"], ["proof (state)\nthis:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (5 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Ln fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Ln fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 5. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "then"], ["proof (chain)\npicking this:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "show ?case"], ["proof (prove)\nusing this:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (1 subgoal):\n 1. slp_of_fa_rev (Ln fa) M slp (length slp) =\n    (let a = slp_of_fa (Ln fa) M (rev slp)\n     in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "by (auto split: prod.splits simp: Let_def\n      slp_of_fa_cnst_slp_of_fa_rev_cnst slp_of_fa_bin_slp_of_fa_rev_bin slp_of_fa_un_slp_of_fa_rev_un)\n    (metis (mono_tags, lifting) length_rev prod.simps(2) rev_swap slp_of_fa_un_slp_of_fa_rev_un)"], ["proof (state)\nthis:\n  slp_of_fa_rev (Ln fa) M slp (length slp) =\n  (let a = slp_of_fa (Ln fa) M (rev slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (4 subgoals):\n 1. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "case (Power fa x2a)"], ["proof (state)\nthis:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (4 subgoals):\n 1. \\<And>fa x2a M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Power fa x2a) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 4. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "then"], ["proof (chain)\npicking this:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "show ?case"], ["proof (prove)\nusing this:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (1 subgoal):\n 1. slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n    (let a = slp_of_fa (Power fa x2a) M (rev slp)\n     in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "by (auto split: prod.splits simp: Let_def\n      slp_of_fa_cnst_slp_of_fa_rev_cnst slp_of_fa_bin_slp_of_fa_rev_bin slp_of_fa_un_slp_of_fa_rev_un)\n    (metis (mono_tags, lifting) length_rev prod.simps(2) rev_swap slp_of_fa_un_slp_of_fa_rev_un)"], ["proof (state)\nthis:\n  slp_of_fa_rev (Power fa x2a) M slp (length slp) =\n  (let a = slp_of_fa (Power fa x2a) M (rev slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (3 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "case (Floor fa)"], ["proof (state)\nthis:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (3 subgoals):\n 1. \\<And>fa M slp.\n       (\\<And>M slp.\n           slp_of_fa_rev fa M slp (length slp) =\n           (let (M, slp') = slp_of_fa fa M (rev slp)\n            in (M, rev slp', length slp'))) \\<Longrightarrow>\n       slp_of_fa_rev (Floor fa) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Floor fa) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 3. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "then"], ["proof (chain)\npicking this:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "show ?case"], ["proof (prove)\nusing this:\n  slp_of_fa_rev fa ?M ?slp (length ?slp) =\n  (let a = slp_of_fa fa ?M (rev ?slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (1 subgoal):\n 1. slp_of_fa_rev (Floor fa) M slp (length slp) =\n    (let a = slp_of_fa (Floor fa) M (rev slp)\n     in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "by (auto split: prod.splits simp: Let_def\n      slp_of_fa_cnst_slp_of_fa_rev_cnst slp_of_fa_bin_slp_of_fa_rev_bin slp_of_fa_un_slp_of_fa_rev_un)\n    (metis (mono_tags, lifting) length_rev prod.simps(2) rev_swap slp_of_fa_un_slp_of_fa_rev_un)"], ["proof (state)\nthis:\n  slp_of_fa_rev (Floor fa) M slp (length slp) =\n  (let a = slp_of_fa (Floor fa) M (rev slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (2 subgoals):\n 1. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "case (Var x)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>x M slp.\n       slp_of_fa_rev (Var x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Var x) M (rev slp)\n        in (M, rev slp', length slp'))\n 2. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. slp_of_fa_rev (Var x) M slp (length slp) =\n    (let a = slp_of_fa (Var x) M (rev slp)\n     in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "by (auto split: prod.splits simp: Let_def\n      slp_of_fa_cnst_slp_of_fa_rev_cnst slp_of_fa_bin_slp_of_fa_rev_bin slp_of_fa_un_slp_of_fa_rev_un)"], ["proof (state)\nthis:\n  slp_of_fa_rev (Var x) M slp (length slp) =\n  (let a = slp_of_fa (Var x) M (rev slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal (1 subgoal):\n 1. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "case (Num x)"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>x M slp.\n       slp_of_fa_rev (Num x) M slp (length slp) =\n       (let (M, slp') = slp_of_fa (Num x) M (rev slp)\n        in (M, rev slp', length slp'))", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. slp_of_fa_rev (Num x) M slp (length slp) =\n    (let a = slp_of_fa (Num x) M (rev slp)\n     in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))", "by (auto split: prod.splits simp: Let_def\n      slp_of_fa_cnst_slp_of_fa_rev_cnst slp_of_fa_bin_slp_of_fa_rev_bin slp_of_fa_un_slp_of_fa_rev_un)"], ["proof (state)\nthis:\n  slp_of_fa_rev (Num x) M slp (length slp) =\n  (let a = slp_of_fa (Num x) M (rev slp)\n   in case a of (M, slp') \\<Rightarrow> (M, rev slp', length slp'))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma slp_of_fa_code[code]:\n  \"slp_of_fa fa M slp = (let (M, slp', _) = slp_of_fa_rev fa M (rev slp) (length slp) in (M, rev slp'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. slp_of_fa fa M slp =\n    (let (M, slp', uu_) = slp_of_fa_rev fa M (rev slp) (length slp)\n     in (M, rev slp'))", "using slp_of_fa_rev[of fa M \"rev slp\"]"], ["proof (prove)\nusing this:\n  slp_of_fa_rev fa M (rev slp) (length (rev slp)) =\n  (let (M, slp') = slp_of_fa fa M (rev (rev slp))\n   in (M, rev slp', length slp'))\n\ngoal (1 subgoal):\n 1. slp_of_fa fa M slp =\n    (let (M, slp', uu_) = slp_of_fa_rev fa M (rev slp) (length slp)\n     in (M, rev slp'))", "by (auto split: prod.splits)"], ["", "definition \"norm2_slp n = slp_of_fas [floatarith.Inverse (norm2\\<^sub>e n)]\""], ["", "unbundle no_floatarith_notation"], ["", "end"]]}