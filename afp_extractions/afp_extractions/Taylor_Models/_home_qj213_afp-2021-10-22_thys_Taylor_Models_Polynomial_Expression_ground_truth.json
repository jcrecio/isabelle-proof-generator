{"file_name": "/home/qj213/afp-2021-10-22/thys/Taylor_Models/Polynomial_Expression.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Taylor_Models", "problem_names": ["lemmas RIpoly_eqs = Ipoly.simps", "lemma isnpolyh_mono: \"n' \\<le> n \\<Longrightarrow> isnpolyh p n \\<Longrightarrow> isnpolyh p n'\"", "lemma polyadd_normh: \"isnpolyh p n0 \\<Longrightarrow> isnpolyh q n1 \\<Longrightarrow> isnpolyh (polyadd p q) (min n0 n1)\"", "lemma polyadd[simp]:\nfixes p :: \"'a::ring_1 poly\"\nshows \"Ipoly bs (polyadd p q) = Ipoly bs p + Ipoly bs q\"", "lemma polyadd_norm: \"isnpoly p \\<Longrightarrow> isnpoly q \\<Longrightarrow> isnpoly (polyadd p q)\"", "lemma polyadd_different_degreen:\n  assumes \"isnpolyh p n0\"\n    and \"isnpolyh q n1\"\n    and \"degreen p m \\<noteq> degreen q m\"\n    and \"m \\<le> min n0 n1\"\n  shows \"degreen (polyadd p q) m = max (degreen p m) (degreen q m)\"", "lemma headnz[simp]: \"isnpolyh p n \\<Longrightarrow> p \\<noteq> 0\\<^sub>p \\<Longrightarrow> headn p m \\<noteq> 0\\<^sub>p\"", "lemma degree_isnpolyh_Suc[simp]: \"isnpolyh p (Suc n) \\<Longrightarrow> degree p = 0\"", "lemma degreen_0[simp]: \"isnpolyh p n \\<Longrightarrow> m < n \\<Longrightarrow> degreen p m = 0\"", "lemma degree_isnpolyh_Suc': \"n > 0 \\<Longrightarrow> isnpolyh p n \\<Longrightarrow> degree p = 0\"", "lemma degree_npolyhCN[simp]: \"isnpolyh (CN c n p) n0 \\<Longrightarrow> degree c = 0\"", "lemma degreen_npolyhCN[simp]: \"isnpolyh (CN c n p) n0 \\<Longrightarrow> degreen c n = 0\"", "lemma degreen_polyadd:\n  assumes np: \"isnpolyh p n0\"\n    and nq: \"isnpolyh q n1\"\n    and m: \"m \\<le> max n0 n1\"\n  shows \"degreen (p +\\<^sub>p q) m \\<le> max (degreen p m) (degreen q m)\"", "lemma polyadd_eq_const_degreen:\n  assumes \"isnpolyh p n0\"\n    and \"isnpolyh q n1\"\n    and \"polyadd p q = C c\"\n  shows \"degreen p m = degreen q m\"", "lemma polymul_properties:\nfixes p::\"'a::field poly\"\n  assumes np: \"isnpolyh p n0\"\n      and nq: \"isnpolyh q n1\"\n      and m: \"m \\<le> min n0 n1\"\n  shows \"isnpolyh (p *\\<^sub>p q) (min n0 n1)\"\n    and \"p *\\<^sub>p q = 0\\<^sub>p \\<longleftrightarrow> p = 0\\<^sub>p \\<or> q = 0\\<^sub>p\"\n    and \"degreen (p *\\<^sub>p q) m = (if p = 0\\<^sub>p \\<or> q = 0\\<^sub>p then 0 else degreen p m + degreen q m)\"", "lemma polymul[simp]:\nfixes p::\"'a::field poly\"\nshows \"Ipoly bs (p *\\<^sub>p q) = Ipoly bs p * Ipoly bs q\"", "lemma polymul_normh:\n  fixes p::\"'a::field poly\"\n  shows \"isnpolyh p n0 \\<Longrightarrow> isnpolyh q n1 \\<Longrightarrow> isnpolyh (p *\\<^sub>p q) (min n0 n1)\"", "lemma polymul_eq0_iff:\n  fixes p::\"'a::field poly\"\n  shows \"isnpolyh p n0 \\<Longrightarrow> isnpolyh q n1 \\<Longrightarrow> p *\\<^sub>p q = 0\\<^sub>p \\<longleftrightarrow> p = 0\\<^sub>p \\<or> q = 0\\<^sub>p\"", "lemma polymul_degreen:\n  fixes p::\"'a::field poly\"\n  shows \"isnpolyh p n0 \\<Longrightarrow> isnpolyh q n1 \\<Longrightarrow> m \\<le> min n0 n1 \\<Longrightarrow>\n    degreen (p *\\<^sub>p q) m = (if p = 0\\<^sub>p \\<or> q = 0\\<^sub>p then 0 else degreen p m + degreen q m)\"", "lemma polymul_norm:\n  fixes p::\"'a::field poly\"\n  shows \"isnpoly p \\<Longrightarrow> isnpoly q \\<Longrightarrow> isnpoly (polymul p q)\"", "lemma headconst_zero: \n  fixes p::\"'a::zero poly\"\n  shows \"isnpolyh p n0 \\<Longrightarrow> headconst p = 0 \\<longleftrightarrow> p = 0\\<^sub>p\"", "lemma polyneg[simp]:\nfixes p::\"'a::ring_1 poly\"\nshows \"Ipoly bs (polyneg p) = - Ipoly bs p\"", "lemma polyneg0:\nfixes p::\"'a::ring_1 poly\"\nshows \"isnpolyh p n \\<Longrightarrow> (~\\<^sub>p p) = 0\\<^sub>p \\<longleftrightarrow> p = 0\\<^sub>p\"", "lemma polyneg_polyneg:\nfixes p::\"'a::ring_1 poly\"\nshows \"isnpolyh p n0 \\<Longrightarrow> ~\\<^sub>p (~\\<^sub>p p) = p\"", "lemma polyneg_normh:\nfixes p::\"'a::ring_1 poly\"\nshows \"isnpolyh p n \\<Longrightarrow> isnpolyh (polyneg p) n\"", "lemma polyneg_norm:\nfixes p::\"'a::ring_1 poly\"\nshows \"isnpoly p \\<Longrightarrow> isnpoly (polyneg p)\"", "lemma polysub[simp]:\nfixes p::\"'a::ring_1 poly\"\nshows \"Ipoly bs (polysub p q) = Ipoly bs p - Ipoly bs q\"", "lemma polysub_normh:\nfixes p::\"'a::ring_1 poly\"\nshows \"isnpolyh p n0 \\<Longrightarrow> isnpolyh q n1 \\<Longrightarrow> isnpolyh (polysub p q) (min n0 n1)\"", "lemma polysub_norm:\nfixes p::\"'a::ring_1 poly\"\nshows \"isnpoly p \\<Longrightarrow> isnpoly q \\<Longrightarrow> isnpoly (polysub p q)\"", "lemma polysub_same_0[simp]:\n  fixes p::\"'a::ring_1 poly\"\n  shows \"isnpolyh p n0 \\<Longrightarrow> polysub p p = 0\\<^sub>p\"", "lemma polysub_0:\n  fixes p::\"'a::ring_1 poly\"\n  shows \"isnpolyh p n0 \\<Longrightarrow> isnpolyh q n1 \\<Longrightarrow> p -\\<^sub>p q = 0\\<^sub>p \\<longleftrightarrow> p = q\"", "lemma polypow[simp]:\n  \"Ipoly bs (polypow n p) = (Ipoly bs p :: 'a::field) ^ n\"", "lemma polypow_normh:\n  fixes p :: \"'a::field poly\"\n  shows \"isnpolyh p n \\<Longrightarrow> isnpolyh (polypow k p) n\"", "lemma polypow_norm:\n  fixes p :: \"'a::field poly\"\n  shows \"isnpoly p \\<Longrightarrow> isnpoly (polypow k p)\"", "lemma polynate [simp]:\n  \"Ipoly bs (polynate p) = (Ipoly bs p :: 'a ::field)\"", "lemma polynate_norm[simp]:\n  fixes p :: \"'a::field poly\"\n  shows \"isnpoly (polynate p)\"", "lemma shift1:\n  fixes p :: \"'a::ring_1 poly\"\n  shows \"Ipoly bs (shift1 p) = Ipoly bs (Mul (Bound 0) p)\"", "lemma shift1_isnpoly:\n  assumes \"isnpoly p\"\n    and \"p \\<noteq> 0\\<^sub>p\"\n  shows \"isnpoly (shift1 p) \"", "lemma shift1_nz[simp]:\"shift1 p \\<noteq> 0\\<^sub>p\"", "lemma funpow_shift1_isnpoly: \"isnpoly p \\<Longrightarrow> p \\<noteq> 0\\<^sub>p \\<Longrightarrow> isnpoly (funpow n shift1 p)\"", "lemma funpow_isnpolyh:\n  assumes \"\\<And>p. isnpolyh p n \\<Longrightarrow> isnpolyh (f p) n\"\n    and \"isnpolyh p n\"\n  shows \"isnpolyh (funpow k f p) n\"", "lemma funpow_shift1:\n  \"(Ipoly bs (funpow n shift1 p) :: 'a :: comm_ring_1) =\n    Ipoly bs (Mul (Pw (Bound 0) n) p)\"", "lemma shift1_isnpolyh: \"isnpolyh p n0 \\<Longrightarrow> p \\<noteq> 0\\<^sub>p \\<Longrightarrow> isnpolyh (shift1 p) 0\"", "lemma funpow_shift1_1:\n  \"(Ipoly bs (funpow n shift1 p) :: 'a :: field) =\n    Ipoly bs (funpow n shift1 (1)\\<^sub>p *\\<^sub>p p)\"", "lemma poly_cmul[simp]:\n  fixes p :: \"'a::comm_ring_1 poly\"\n  shows \"Ipoly bs (poly_cmul c p) = Ipoly bs (Mul (C c) p)\"", "lemma behead:\n  assumes \"isnpolyh p n\"\n  shows \"Ipoly bs (Add (Mul (head p) (Pw (Bound 0) (degree p))) (behead p)) =\n    (Ipoly bs p :: 'a :: comm_ring_1)\"", "lemma behead_isnpolyh:\n  assumes \"isnpolyh p n\"\n  shows \"isnpolyh (behead p) n\"", "lemma isnpolyh_polybound0: \"isnpolyh p (Suc n) \\<Longrightarrow> polybound0 p\"", "lemma isconstant_polybound0: \"isnpolyh p n0 \\<Longrightarrow> isconstant p \\<longleftrightarrow> polybound0 p\"", "lemma decrpoly_zero[simp]: \"decrpoly p = 0\\<^sub>p \\<longleftrightarrow> p = 0\\<^sub>p\"", "lemma decrpoly_normh: \"isnpolyh p n0 \\<Longrightarrow> polybound0 p \\<Longrightarrow> isnpolyh (decrpoly p) (n0 - 1)\"", "lemma head_polybound0: \"isnpolyh p n0 \\<Longrightarrow> polybound0 (head p)\"", "lemma polybound0_I:\n  assumes \"polybound0 a\"\n  shows \"Ipoly (b # bs) a = Ipoly (b' # bs) a\"", "lemma polysubst0_I: \"Ipoly (b # bs) (polysubst0 a t) = Ipoly ((Ipoly (b # bs) a) # bs) t\"", "lemma polysubst0_I':\n  assumes \"polybound0 a\"\n  shows \"Ipoly (b # bs) (polysubst0 a t) = Ipoly ((Ipoly (b' # bs) a) # bs) t\"", "lemma decrpoly:\n  assumes \"polybound0 t\"\n  shows \"Ipoly (x # bs) t = Ipoly bs (decrpoly t)\"", "lemma polysubst0_polybound0:\n  assumes \"polybound0 t\"\n  shows \"polybound0 (polysubst0 t a)\"", "lemma degree0_polybound0: \"isnpolyh p n \\<Longrightarrow> degree p = 0 \\<Longrightarrow> polybound0 p\"", "lemma wf_bs_coefficients: \"wf_bs bs p \\<Longrightarrow> \\<forall>c \\<in> set (coefficients p). wf_bs bs c\"", "lemma maxindex_coefficients: \"\\<forall>c \\<in> set (coefficients p). maxindex c \\<le> maxindex p\"", "lemma wf_bs_I: \"wf_bs bs p \\<Longrightarrow> Ipoly (bs @ bs') p = Ipoly bs p\"", "lemma take_maxindex_wf:\n  assumes wf: \"wf_bs bs p\"\n  shows \"Ipoly (take (maxindex p) bs) p = Ipoly bs p\"", "lemma decr_maxindex: \"polybound0 p \\<Longrightarrow> maxindex (decrpoly p) = maxindex p - 1\"", "lemma wf_bs_insensitive: \"length bs = length bs' \\<Longrightarrow> wf_bs bs p = wf_bs bs' p\"", "lemma wf_bs_insensitive': \"wf_bs (x # bs) p = wf_bs (y # bs) p\"", "lemma wf_bs_coefficients': \"\\<forall>c \\<in> set (coefficients p). wf_bs bs c \\<Longrightarrow> wf_bs (x # bs) p\"", "lemma coefficients_Nil[simp]: \"coefficients p \\<noteq> []\"", "lemma coefficients_head: \"last (coefficients p) = head p\"", "lemma wf_bs_decrpoly: \"wf_bs bs (decrpoly p) \\<Longrightarrow> wf_bs (x # bs) p\"", "lemma length_le_list_ex: \"length xs \\<le> n \\<Longrightarrow> \\<exists>ys. length (xs @ ys) = n\"", "lemma isnpolyh_Suc_const: \"isnpolyh p (Suc n) \\<Longrightarrow> isconstant p\"", "lemma wf_bs_polyadd: \"wf_bs bs p \\<and> wf_bs bs q \\<longrightarrow> wf_bs bs (p +\\<^sub>p q)\"", "lemma wf_bs_polyul: \"wf_bs bs p \\<Longrightarrow> wf_bs bs q \\<Longrightarrow> wf_bs bs (p *\\<^sub>p q)\"", "lemma wf_bs_polyneg: \"wf_bs bs p \\<Longrightarrow> wf_bs bs (~\\<^sub>p p)\"", "lemma wf_bs_polysub: \"wf_bs bs p \\<Longrightarrow> wf_bs bs q \\<Longrightarrow> wf_bs bs (p -\\<^sub>p q)\"", "lemma coefficients_normh: \"isnpolyh p n0 \\<Longrightarrow> \\<forall>q \\<in> set (coefficients p). isnpolyh q n0\"", "lemma coefficients_isconst: \"isnpolyh p n \\<Longrightarrow> \\<forall>q \\<in> set (coefficients p). isconstant q\"", "lemma polypoly_polypoly':\n  assumes np: \"isnpolyh p n0\"\n  shows \"polypoly (x # bs) p = polypoly' bs p\"", "lemma polypoly_poly:\n  assumes \"isnpolyh p n0\"\n  shows \"Ipoly (x # bs) p = poly (polypoly (x # bs) p) x\"", "lemma polypoly'_poly:\n  assumes \"isnpolyh p n0\"\n  shows \"Ipoly (x # bs) p = poly (polypoly' bs p) x\"", "lemma polypoly_poly_polybound0:\n  assumes \"isnpolyh p n0\"\n    and \"polybound0 p\"\n  shows \"polypoly bs p = [Ipoly bs p]\"", "lemma head_isnpolyh: \"isnpolyh p n0 \\<Longrightarrow> isnpolyh (head p) n0\"", "lemma headn_nz[simp]: \"isnpolyh p n0 \\<Longrightarrow> headn p m = 0\\<^sub>p \\<longleftrightarrow> p = 0\\<^sub>p\"", "lemma head_eq_headn0: \"head p = headn p 0\"", "lemma head_nz[simp]: \"isnpolyh p n0 \\<Longrightarrow> head p = 0\\<^sub>p \\<longleftrightarrow> p = 0\\<^sub>p\"", "lemma isnpolyh_zero_iff:\nfixes p :: \"'a::idom_char_0 poly\"\n  assumes nq: \"isnpolyh p n0\"\n    and eq :\"\\<forall>bs. wf_bs bs p \\<longrightarrow> Ipoly bs p = 0\"\n  shows \"p = 0\\<^sub>p\"", "lemma isnpolyh_unique:\n  assumes np: \"isnpolyh p n0\"\n    and nq: \"isnpolyh q n1\"\n  shows \"(\\<forall>bs. Ipoly bs p = (Ipoly bs q :: 'a::idom_char_0)) \\<longleftrightarrow> p = q\"", "lemma polyadd_commute:\n  fixes p :: \"'a::idom_char_0 poly\"\n  assumes np: \"isnpolyh p n0\"\n      and nq: \"isnpolyh q n1\"\n  shows \"p +\\<^sub>p q = q +\\<^sub>p p\"", "lemma zero_normh: \"isnpolyh 0\\<^sub>p n\"", "lemma one_normh: \"isnpolyh (1)\\<^sub>p n\"", "lemma polyadd_0[simp]:\n  fixes p :: \"'a::idom_char_0 poly\"\n  assumes np: \"isnpolyh p n0\"\n  shows \"p +\\<^sub>p 0\\<^sub>p = p\"\n    and \"0\\<^sub>p +\\<^sub>p p = p\"", "lemma polymul_1[simp]:\n  fixes p :: \"'a::field_char_0 poly\"\n  assumes np: \"isnpolyh p n0\"\n  shows \"p *\\<^sub>p (1)\\<^sub>p = p\"\n    and \"(1)\\<^sub>p *\\<^sub>p p = p\"", "lemma polymul_0[simp]:\n  fixes p :: \"'a::field_char_0 poly\"\n  assumes np: \"isnpolyh p n0\"\n  shows \"p *\\<^sub>p 0\\<^sub>p = 0\\<^sub>p\"\n    and \"0\\<^sub>p *\\<^sub>p p = 0\\<^sub>p\"", "lemma polymul_commute:\n  fixes p :: \"'a::field_char_0 poly\"\n  assumes np: \"isnpolyh p n0\"\n    and nq: \"isnpolyh q n1\"\n  shows \"p *\\<^sub>p q = q *\\<^sub>p p\"", "lemma isnpolyh_polynate_id [simp]:\n  fixes p :: \"'a::field_char_0 poly\"\n  assumes np: \"isnpolyh p n0\"\n  shows \"polynate p = p\"", "lemma polynate_idempotent[simp]:\n  fixes p :: \"'a::field_char_0 poly\"\n  shows \"polynate (polynate p) = polynate p\"", "lemma poly_nate_polypoly': \"poly_nate bs p = polypoly' bs (polynate p)\"", "lemma poly_nate_poly:\n  \"poly (poly_nate bs p) = (\\<lambda>x:: 'a ::field. Ipoly (x # bs) p)\"", "lemma degree_eq_degreen0: \"degree p = degreen p 0\"", "lemma degree_polyneg:\n  assumes \"isnpolyh p n\"\n  shows \"degree (polyneg p) = degree p\"", "lemma degree_polyadd:\n  fixes p::\"'a::{plus,zero} poly\"\n  assumes np: \"isnpolyh p n0\"\n    and nq: \"isnpolyh q n1\"\n  shows \"degree (p +\\<^sub>p q) \\<le> max (degree p) (degree q)\"", "lemma degree_polysub:\n  fixes p::\"'a::ring_1 poly\"\n  assumes np: \"isnpolyh p n0\"\n    and nq: \"isnpolyh q n1\"\n  shows \"degree (p -\\<^sub>p q) \\<le> max (degree p) (degree q)\"", "lemma degree_polysub_samehead:\n  fixes p::\"'a::ring_1 poly\"\n  assumes np: \"isnpolyh p n0\"\n    and nq: \"isnpolyh q n1\"\n    and h: \"head p = head q\"\n    and d: \"degree p = degree q\"\n  shows \"degree (p -\\<^sub>p q) < degree p \\<or> (p -\\<^sub>p q = 0\\<^sub>p)\"", "lemma shift1_head : \"isnpolyh p n0 \\<Longrightarrow> head (shift1 p) = head p\"", "lemma funpow_shift1_head: \"isnpolyh p n0 \\<Longrightarrow> p\\<noteq> 0\\<^sub>p \\<Longrightarrow> head (funpow k shift1 p) = head p\"", "lemma shift1_degree: \"degree (shift1 p) = 1 + degree p\"", "lemma funpow_shift1_degree: \"degree (funpow k shift1 p) = k + degree p \"", "lemma funpow_shift1_nz: \"p \\<noteq> 0\\<^sub>p \\<Longrightarrow> funpow n shift1 p \\<noteq> 0\\<^sub>p\"", "lemma head_isnpolyh_Suc[simp]: \"isnpolyh p (Suc n) \\<Longrightarrow> head p = p\"", "lemma headn_0[simp]: \"isnpolyh p n \\<Longrightarrow> m < n \\<Longrightarrow> headn p m = p\"", "lemma head_isnpolyh_Suc': \"n > 0 \\<Longrightarrow> isnpolyh p n \\<Longrightarrow> head p = p\"", "lemma head_head[simp]: \"isnpolyh p n0 \\<Longrightarrow> head (head p) = head p\"", "lemma polyadd_eq_const_degree:\n  \"isnpolyh p n0 \\<Longrightarrow> isnpolyh q n1 \\<Longrightarrow> polyadd p q = C c \\<Longrightarrow> degree p = degree q\"", "lemma polyadd_head:\n  assumes np: \"isnpolyh p n0\"\n    and nq: \"isnpolyh q n1\"\n    and deg: \"degree p \\<noteq> degree q\"\n  shows \"head (p +\\<^sub>p q) = (if degree p < degree q then head q else head p)\"", "lemma polymul_head_polyeq:\n  fixes p :: \"'a::field poly\"\n  shows \"isnpolyh p n0 \\<Longrightarrow> isnpolyh q n1 \\<Longrightarrow> p \\<noteq> 0\\<^sub>p \\<Longrightarrow> q \\<noteq> 0\\<^sub>p \\<Longrightarrow> head (p *\\<^sub>p q) = head p *\\<^sub>p head q\"", "lemma degree_coefficients: \"degree p = length (coefficients p) - 1\"", "lemma degree_head[simp]: \"degree (head p) = 0\"", "lemma degree_CN: \"isnpolyh p n \\<Longrightarrow> degree (CN c n p) \\<le> 1 + degree p\"", "lemma degree_CN': \"isnpolyh p n \\<Longrightarrow> degree (CN c n p) \\<ge>  degree p\"", "lemma polyadd_different_degree:\n  \"isnpolyh p n0 \\<Longrightarrow> isnpolyh q n1 \\<Longrightarrow> degree p \\<noteq> degree q \\<Longrightarrow>\n    degree (polyadd p q) = max (degree p) (degree q)\"", "lemma degreen_polyneg: \"isnpolyh p n0 \\<Longrightarrow> degreen (~\\<^sub>p p) m = degreen p m\"", "lemma degree_polymul:\n  fixes p :: \"'a::field poly\"\n  assumes np: \"isnpolyh p n0\"\n    and nq: \"isnpolyh q n1\"\n  shows \"degree (p *\\<^sub>p q) \\<le> degree p + degree q\"", "lemma polyneg_degree: \"isnpolyh p n \\<Longrightarrow> degree (polyneg p) = degree p\"", "lemma polyneg_head: \"isnpolyh p n \\<Longrightarrow> head (polyneg p) = polyneg (head p)\"", "lemma isnonconstant_pnormal_iff:\n  assumes \"isnonconstant p\"\n  shows \"pnormal (polypoly bs p) \\<longleftrightarrow> Ipoly bs (head p) \\<noteq> 0\"", "lemma isnonconstant_coefficients_length: \"isnonconstant p \\<Longrightarrow> length (coefficients p) > 1\"", "lemma isnonconstant_nonconstant:\n  assumes \"isnonconstant p\"\n  shows \"nonconstant (polypoly bs p) \\<longleftrightarrow> Ipoly bs (head p) \\<noteq> 0\"", "lemma pnormal_length: \"p \\<noteq> [] \\<Longrightarrow> pnormal p \\<longleftrightarrow> length (pnormalize p) = length p\"", "lemma degree_degree:\n  assumes \"isnonconstant p\"\n  shows \"degree p = Polynomial_List.degree (polypoly bs p) \\<longleftrightarrow> Ipoly bs (head p) \\<noteq> 0\"", "lemma swap:\n  assumes \"n < length bs\"\n    and \"m < length bs\"\n  shows \"Ipoly bs (swap n m t) = Ipoly ((bs[n:= bs!m])[m:= bs!n]) t\"", "lemma swap_swap_id [simp]: \"swap n m (swap m n t) = t\"", "lemma swap_commute: \"swap n m p = swap m n p\"", "lemma swap_same_id[simp]: \"swap n n t = t\"", "lemma swapnorm:\n  fixes t :: \"'a::field poly\"\n  assumes nbs: \"n < length bs\"\n    and mbs: \"m < length bs\"\n  shows \"((Ipoly bs (swapnorm n m t))) =\n    Ipoly ((bs[n:= bs!m])[m:= bs!n]) t\"", "lemma swapnorm_isnpoly [simp]:\n  fixes p :: \"'a::field poly\"\n  shows \"isnpoly (swapnorm n m p)\"", "lemma swap_nz [simp]: \"swap n m p = 0\\<^sub>p \\<longleftrightarrow> p = 0\\<^sub>p\"", "lemma isnpolyh_isweaknpoly: \"isnpolyh p n0 \\<Longrightarrow> isweaknpoly p\"", "lemma swap_isweanpoly: \"isweaknpoly p \\<Longrightarrow> isweaknpoly (swap n m p)\""], "translations": [["", "lemmas RIpoly_eqs = Ipoly.simps"], ["", "subsection \\<open>Normal form and normalization\\<close>"], ["", "fun isnpolyh:: \"'a::zero poly \\<Rightarrow> nat \\<Rightarrow> bool\"\nwhere\n  (* TODO: Inject normalization via a custom type class here? *)\n  (*\"isnpolyh (C c) = (\\<lambda>k. isnormNum c)\"*)\n  \"isnpolyh (C c) = (\\<lambda>k. True)\"\n| \"isnpolyh (CN c n p) = (\\<lambda>k. n \\<ge> k \\<and> isnpolyh c (Suc n) \\<and> isnpolyh p n \\<and> p \\<noteq> 0\\<^sub>p)\"\n| \"isnpolyh p = (\\<lambda>k. False)\""], ["", "lemma isnpolyh_mono: \"n' \\<le> n \\<Longrightarrow> isnpolyh p n \\<Longrightarrow> isnpolyh p n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n' \\<le> n; isnpolyh p n\\<rbrakk>\n    \\<Longrightarrow> isnpolyh p n'", "by (induct p rule: isnpolyh.induct) auto"], ["", "definition isnpoly :: \"'a::zero poly \\<Rightarrow> bool\"\n  where \"isnpoly p = isnpolyh p 0\""], ["", "text \\<open>polyadd preserves normal forms\\<close>"], ["", "lemma polyadd_normh: \"isnpolyh p n0 \\<Longrightarrow> isnpolyh q n1 \\<Longrightarrow> isnpolyh (polyadd p q) (min n0 n1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpolyh p n0; isnpolyh q n1\\<rbrakk>\n    \\<Longrightarrow> isnpolyh (p +\\<^sub>p q) (min n0 n1)", "proof (induct p q arbitrary: n0 n1 rule: polyadd.induct)"], ["proof (state)\ngoal (28 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p c')\n(min n0 n1);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 3. \\<And>c n p c' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 4. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0;\n                    isnpolyh (CN c' n' p') n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min n0 n1);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 9. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1.\n        \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\nA total of 28 subgoals...", "case (2 ab c' n' p' n0 n1)"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh (ab)\\<^sub>p ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh ((ab)\\<^sub>p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  isnpolyh (ab)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n\ngoal (28 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p c')\n(min n0 n1);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 3. \\<And>c n p c' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 4. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0;\n                    isnpolyh (CN c' n' p') n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min n0 n1);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 9. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1.\n        \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\nA total of 28 subgoals...", "from 2"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh (ab)\\<^sub>p ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh ((ab)\\<^sub>p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  isnpolyh (ab)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1", "have  th1: \"isnpolyh (C ab) (Suc n')\""], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh (ab)\\<^sub>p ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh ((ab)\\<^sub>p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  isnpolyh (ab)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n\ngoal (1 subgoal):\n 1. isnpolyh (ab)\\<^sub>p (Suc n')", "by simp"], ["proof (state)\nthis:\n  isnpolyh (ab)\\<^sub>p (Suc n')\n\ngoal (28 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p c')\n(min n0 n1);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 3. \\<And>c n p c' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 4. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0;\n                    isnpolyh (CN c' n' p') n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min n0 n1);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 9. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1.\n        \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\nA total of 28 subgoals...", "from 2(3)"], ["proof (chain)\npicking this:\n  isnpolyh (CN c' n' p') n1", "have th2: \"isnpolyh c' (Suc n')\" and nplen1: \"n' \\<ge> n1\""], ["proof (prove)\nusing this:\n  isnpolyh (CN c' n' p') n1\n\ngoal (1 subgoal):\n 1. isnpolyh c' (Suc n') &&& n1 \\<le> n'", "by simp_all"], ["proof (state)\nthis:\n  isnpolyh c' (Suc n')\n  n1 \\<le> n'\n\ngoal (28 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p c')\n(min n0 n1);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 3. \\<And>c n p c' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 4. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0;\n                    isnpolyh (CN c' n' p') n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min n0 n1);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 9. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1.\n        \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\nA total of 28 subgoals...", "with isnpolyh_mono"], ["proof (chain)\npicking this:\n  \\<lbrakk>?n' \\<le> ?n; isnpolyh ?p ?n\\<rbrakk>\n  \\<Longrightarrow> isnpolyh ?p ?n'\n  isnpolyh c' (Suc n')\n  n1 \\<le> n'", "have cp: \"isnpolyh c' (Suc n')\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?n' \\<le> ?n; isnpolyh ?p ?n\\<rbrakk>\n  \\<Longrightarrow> isnpolyh ?p ?n'\n  isnpolyh c' (Suc n')\n  n1 \\<le> n'\n\ngoal (1 subgoal):\n 1. isnpolyh c' (Suc n')", "by simp"], ["proof (state)\nthis:\n  isnpolyh c' (Suc n')\n\ngoal (28 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p c')\n(min n0 n1);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 3. \\<And>c n p c' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 4. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0;\n                    isnpolyh (CN c' n' p') n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min n0 n1);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 9. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1.\n        \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\nA total of 28 subgoals...", "with 2(1)[OF th1 th2]"], ["proof (chain)\npicking this:\n  isnpolyh ((ab)\\<^sub>p +\\<^sub>p c') (min (Suc n') (Suc n'))\n  isnpolyh c' (Suc n')", "have th3:\"isnpolyh (C ab +\\<^sub>p c') (Suc n')\""], ["proof (prove)\nusing this:\n  isnpolyh ((ab)\\<^sub>p +\\<^sub>p c') (min (Suc n') (Suc n'))\n  isnpolyh c' (Suc n')\n\ngoal (1 subgoal):\n 1. isnpolyh ((ab)\\<^sub>p +\\<^sub>p c') (Suc n')", "by simp"], ["proof (state)\nthis:\n  isnpolyh ((ab)\\<^sub>p +\\<^sub>p c') (Suc n')\n\ngoal (28 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p c')\n(min n0 n1);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 3. \\<And>c n p c' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 4. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0;\n                    isnpolyh (CN c' n' p') n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min n0 n1);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 9. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1.\n        \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\nA total of 28 subgoals...", "from nplen1"], ["proof (chain)\npicking this:\n  n1 \\<le> n'", "have n01len1: \"min n0 n1 \\<le> n'\""], ["proof (prove)\nusing this:\n  n1 \\<le> n'\n\ngoal (1 subgoal):\n 1. min n0 n1 \\<le> n'", "by simp"], ["proof (state)\nthis:\n  min n0 n1 \\<le> n'\n\ngoal (28 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p c')\n(min n0 n1);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 3. \\<And>c n p c' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 4. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0;\n                    isnpolyh (CN c' n' p') n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min n0 n1);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 9. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1.\n        \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\nA total of 28 subgoals...", "then"], ["proof (chain)\npicking this:\n  min n0 n1 \\<le> n'", "show ?case"], ["proof (prove)\nusing this:\n  min n0 n1 \\<le> n'\n\ngoal (1 subgoal):\n 1. isnpolyh ((ab)\\<^sub>p +\\<^sub>p CN c' n' p') (min n0 n1)", "using 2 th3"], ["proof (prove)\nusing this:\n  min n0 n1 \\<le> n'\n  \\<lbrakk>isnpolyh (ab)\\<^sub>p ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh ((ab)\\<^sub>p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  isnpolyh (ab)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n  isnpolyh ((ab)\\<^sub>p +\\<^sub>p c') (Suc n')\n\ngoal (1 subgoal):\n 1. isnpolyh ((ab)\\<^sub>p +\\<^sub>p CN c' n' p') (min n0 n1)", "by simp"], ["proof (state)\nthis:\n  isnpolyh ((ab)\\<^sub>p +\\<^sub>p CN c' n' p') (min n0 n1)\n\ngoal (27 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c n p c' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 3. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0;\n                    isnpolyh (CN c' n' p') n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min n0 n1);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 4. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va vb vc n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Bound vc)\n                           (min n0 n1)\nA total of 27 subgoals...", "next"], ["proof (state)\ngoal (27 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c n p c' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 3. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0;\n                    isnpolyh (CN c' n' p') n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min n0 n1);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 4. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va vb vc n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Bound vc)\n                           (min n0 n1)\nA total of 27 subgoals...", "case (3 c' n' p' ab n1 n0)"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh c' ?n0.0; isnpolyh (ab)\\<^sub>p ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c' +\\<^sub>p (ab)\\<^sub>p) (min ?n0.0 ?n1.0)\n  isnpolyh (CN c' n' p') n1\n  isnpolyh (ab)\\<^sub>p n0\n\ngoal (27 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c n p c' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 3. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0;\n                    isnpolyh (CN c' n' p') n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min n0 n1);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 4. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va vb vc n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Bound vc)\n                           (min n0 n1)\nA total of 27 subgoals...", "from 3"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c' ?n0.0; isnpolyh (ab)\\<^sub>p ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c' +\\<^sub>p (ab)\\<^sub>p) (min ?n0.0 ?n1.0)\n  isnpolyh (CN c' n' p') n1\n  isnpolyh (ab)\\<^sub>p n0", "have  th1: \"isnpolyh (C ab) (Suc n')\""], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c' ?n0.0; isnpolyh (ab)\\<^sub>p ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c' +\\<^sub>p (ab)\\<^sub>p) (min ?n0.0 ?n1.0)\n  isnpolyh (CN c' n' p') n1\n  isnpolyh (ab)\\<^sub>p n0\n\ngoal (1 subgoal):\n 1. isnpolyh (ab)\\<^sub>p (Suc n')", "by simp"], ["proof (state)\nthis:\n  isnpolyh (ab)\\<^sub>p (Suc n')\n\ngoal (27 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c n p c' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 3. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0;\n                    isnpolyh (CN c' n' p') n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min n0 n1);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 4. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va vb vc n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Bound vc)\n                           (min n0 n1)\nA total of 27 subgoals...", "from 3(2)"], ["proof (chain)\npicking this:\n  isnpolyh (CN c' n' p') n1", "have th2: \"isnpolyh c' (Suc n')\"  and nplen1: \"n' \\<ge> n1\""], ["proof (prove)\nusing this:\n  isnpolyh (CN c' n' p') n1\n\ngoal (1 subgoal):\n 1. isnpolyh c' (Suc n') &&& n1 \\<le> n'", "by simp_all"], ["proof (state)\nthis:\n  isnpolyh c' (Suc n')\n  n1 \\<le> n'\n\ngoal (27 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c n p c' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 3. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0;\n                    isnpolyh (CN c' n' p') n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min n0 n1);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 4. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va vb vc n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Bound vc)\n                           (min n0 n1)\nA total of 27 subgoals...", "with isnpolyh_mono"], ["proof (chain)\npicking this:\n  \\<lbrakk>?n' \\<le> ?n; isnpolyh ?p ?n\\<rbrakk>\n  \\<Longrightarrow> isnpolyh ?p ?n'\n  isnpolyh c' (Suc n')\n  n1 \\<le> n'", "have cp: \"isnpolyh c' (Suc n')\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?n' \\<le> ?n; isnpolyh ?p ?n\\<rbrakk>\n  \\<Longrightarrow> isnpolyh ?p ?n'\n  isnpolyh c' (Suc n')\n  n1 \\<le> n'\n\ngoal (1 subgoal):\n 1. isnpolyh c' (Suc n')", "by simp"], ["proof (state)\nthis:\n  isnpolyh c' (Suc n')\n\ngoal (27 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c n p c' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 3. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0;\n                    isnpolyh (CN c' n' p') n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min n0 n1);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 4. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va vb vc n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Bound vc)\n                           (min n0 n1)\nA total of 27 subgoals...", "with 3(1)[OF th2 th1]"], ["proof (chain)\npicking this:\n  isnpolyh (c' +\\<^sub>p (ab)\\<^sub>p) (min (Suc n') (Suc n'))\n  isnpolyh c' (Suc n')", "have th3:\"isnpolyh (c' +\\<^sub>p C ab) (Suc n')\""], ["proof (prove)\nusing this:\n  isnpolyh (c' +\\<^sub>p (ab)\\<^sub>p) (min (Suc n') (Suc n'))\n  isnpolyh c' (Suc n')\n\ngoal (1 subgoal):\n 1. isnpolyh (c' +\\<^sub>p (ab)\\<^sub>p) (Suc n')", "by simp"], ["proof (state)\nthis:\n  isnpolyh (c' +\\<^sub>p (ab)\\<^sub>p) (Suc n')\n\ngoal (27 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c n p c' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 3. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0;\n                    isnpolyh (CN c' n' p') n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min n0 n1);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 4. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va vb vc n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Bound vc)\n                           (min n0 n1)\nA total of 27 subgoals...", "from nplen1"], ["proof (chain)\npicking this:\n  n1 \\<le> n'", "have n01len1: \"min n0 n1 \\<le> n'\""], ["proof (prove)\nusing this:\n  n1 \\<le> n'\n\ngoal (1 subgoal):\n 1. min n0 n1 \\<le> n'", "by simp"], ["proof (state)\nthis:\n  min n0 n1 \\<le> n'\n\ngoal (27 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c n p c' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 3. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0;\n                    isnpolyh (CN c' n' p') n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min n0 n1);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 4. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va vb vc n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Bound vc)\n                           (min n0 n1)\nA total of 27 subgoals...", "then"], ["proof (chain)\npicking this:\n  min n0 n1 \\<le> n'", "show ?case"], ["proof (prove)\nusing this:\n  min n0 n1 \\<le> n'\n\ngoal (1 subgoal):\n 1. isnpolyh (CN c' n' p' +\\<^sub>p (ab)\\<^sub>p) (min n1 n0)", "using 3 th3"], ["proof (prove)\nusing this:\n  min n0 n1 \\<le> n'\n  \\<lbrakk>isnpolyh c' ?n0.0; isnpolyh (ab)\\<^sub>p ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c' +\\<^sub>p (ab)\\<^sub>p) (min ?n0.0 ?n1.0)\n  isnpolyh (CN c' n' p') n1\n  isnpolyh (ab)\\<^sub>p n0\n  isnpolyh (c' +\\<^sub>p (ab)\\<^sub>p) (Suc n')\n\ngoal (1 subgoal):\n 1. isnpolyh (CN c' n' p' +\\<^sub>p (ab)\\<^sub>p) (min n1 n0)", "by simp"], ["proof (state)\nthis:\n  isnpolyh (CN c' n' p' +\\<^sub>p (ab)\\<^sub>p) (min n1 n0)\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0;\n                    isnpolyh (CN c' n' p') n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min n0 n1);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Bound vc)\n                          (min n0 n1)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Add vc vd)\n                           (min n0 n1)\nA total of 26 subgoals...", "next"], ["proof (state)\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0;\n                    isnpolyh (CN c' n' p') n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min n0 n1);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Bound vc)\n                          (min n0 n1)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Add vc vd)\n                           (min n0 n1)\nA total of 26 subgoals...", "case (4 c n p c' n' p' n0 n1)"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0;\n                    isnpolyh (CN c' n' p') n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min n0 n1);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Bound vc)\n                          (min n0 n1)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Add vc vd)\n                           (min n0 n1)\nA total of 26 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1", "have nc: \"isnpolyh c (Suc n)\" and np: \"isnpolyh p n\""], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n\ngoal (1 subgoal):\n 1. isnpolyh c (Suc n) &&& isnpolyh p n", "by simp_all"], ["proof (state)\nthis:\n  isnpolyh c (Suc n)\n  isnpolyh p n\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0;\n                    isnpolyh (CN c' n' p') n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min n0 n1);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Bound vc)\n                          (min n0 n1)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Add vc vd)\n                           (min n0 n1)\nA total of 26 subgoals...", "from 4"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1", "have nc': \"isnpolyh c' (Suc n')\" and np': \"isnpolyh p' n'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n\ngoal (1 subgoal):\n 1. isnpolyh c' (Suc n') &&& isnpolyh p' n'", "by simp_all"], ["proof (state)\nthis:\n  isnpolyh c' (Suc n')\n  isnpolyh p' n'\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0;\n                    isnpolyh (CN c' n' p') n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min n0 n1);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Bound vc)\n                          (min n0 n1)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Add vc vd)\n                           (min n0 n1)\nA total of 26 subgoals...", "from 4"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1", "have ngen0: \"n \\<ge> n0\""], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n\ngoal (1 subgoal):\n 1. n0 \\<le> n", "by simp"], ["proof (state)\nthis:\n  n0 \\<le> n\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0;\n                    isnpolyh (CN c' n' p') n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min n0 n1);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Bound vc)\n                          (min n0 n1)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Add vc vd)\n                           (min n0 n1)\nA total of 26 subgoals...", "from 4"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1", "have n'gen1: \"n' \\<ge> n1\""], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n\ngoal (1 subgoal):\n 1. n1 \\<le> n'", "by simp"], ["proof (state)\nthis:\n  n1 \\<le> n'\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0;\n                    isnpolyh (CN c' n' p') n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min n0 n1);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Bound vc)\n                          (min n0 n1)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Add vc vd)\n                           (min n0 n1)\nA total of 26 subgoals...", "consider (eq) \"n = n'\" | (lt) \"n < n'\" | (gt) \"n > n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = n' \\<Longrightarrow> thesis;\n     n < n' \\<Longrightarrow> thesis;\n     n' < n \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by arith"], ["proof (state)\nthis:\n  \\<lbrakk>n = n' \\<Longrightarrow> ?thesis;\n   n < n' \\<Longrightarrow> ?thesis;\n   n' < n \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0;\n                    isnpolyh (CN c' n' p') n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min n0 n1);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min n0 n1);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Bound vc)\n                          (min n0 n1)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Add vc vd)\n                           (min n0 n1)\nA total of 26 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>n = n' \\<Longrightarrow> ?thesis;\n   n < n' \\<Longrightarrow> ?thesis;\n   n' < n \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>n = n' \\<Longrightarrow> ?thesis;\n   n < n' \\<Longrightarrow> ?thesis;\n   n' < n \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. n = n' \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n 2. n < n' \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n 3. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "case eq"], ["proof (state)\nthis:\n  n = n'\n\ngoal (3 subgoals):\n 1. n = n' \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n 2. n < n' \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n 3. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "with \"4.hyps\"(3)[OF nc nc']"], ["proof (chain)\npicking this:\n  isnpolyh (c +\\<^sub>p c') (min (Suc n) (Suc n'))\n  n = n'", "have ncc':\"isnpolyh (c +\\<^sub>p c') (Suc n)\""], ["proof (prove)\nusing this:\n  isnpolyh (c +\\<^sub>p c') (min (Suc n) (Suc n'))\n  n = n'\n\ngoal (1 subgoal):\n 1. isnpolyh (c +\\<^sub>p c') (Suc n)", "by auto"], ["proof (state)\nthis:\n  isnpolyh (c +\\<^sub>p c') (Suc n)\n\ngoal (3 subgoals):\n 1. n = n' \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n 2. n < n' \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n 3. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "then"], ["proof (chain)\npicking this:\n  isnpolyh (c +\\<^sub>p c') (Suc n)", "have ncc'n01: \"isnpolyh (c +\\<^sub>p c') (min n0 n1)\""], ["proof (prove)\nusing this:\n  isnpolyh (c +\\<^sub>p c') (Suc n)\n\ngoal (1 subgoal):\n 1. isnpolyh (c +\\<^sub>p c') (min n0 n1)", "apply(rule isnpolyh_mono[where n'=\"min n0 n1\", rotated])"], ["proof (prove)\ngoal (1 subgoal):\n 1. min n0 n1 \\<le> Suc n", "using  ngen0 n'gen1"], ["proof (prove)\nusing this:\n  n0 \\<le> n\n  n1 \\<le> n'\n\ngoal (1 subgoal):\n 1. min n0 n1 \\<le> Suc n", "by auto"], ["proof (state)\nthis:\n  isnpolyh (c +\\<^sub>p c') (min n0 n1)\n\ngoal (3 subgoals):\n 1. n = n' \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n 2. n < n' \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n 3. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "from eq \"4.hyps\"(4)[OF np np']"], ["proof (chain)\npicking this:\n  n = n'\n  isnpolyh (p +\\<^sub>p p') (min n n')", "have npp': \"isnpolyh (p +\\<^sub>p p') n\""], ["proof (prove)\nusing this:\n  n = n'\n  isnpolyh (p +\\<^sub>p p') (min n n')\n\ngoal (1 subgoal):\n 1. isnpolyh (p +\\<^sub>p p') n", "by simp"], ["proof (state)\nthis:\n  isnpolyh (p +\\<^sub>p p') n\n\ngoal (3 subgoals):\n 1. n = n' \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n 2. n < n' \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n 3. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "have minle: \"min n0 n1 \\<le> n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min n0 n1 \\<le> n'", "using ngen0 n'gen1 eq"], ["proof (prove)\nusing this:\n  n0 \\<le> n\n  n1 \\<le> n'\n  n = n'\n\ngoal (1 subgoal):\n 1. min n0 n1 \\<le> n'", "by simp"], ["proof (state)\nthis:\n  min n0 n1 \\<le> n'\n\ngoal (3 subgoals):\n 1. n = n' \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n 2. n < n' \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n 3. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "from minle npp' ncc'n01 4 eq ngen0 n'gen1 ncc'"], ["proof (chain)\npicking this:\n  min n0 n1 \\<le> n'\n  isnpolyh (p +\\<^sub>p p') n\n  isnpolyh (c +\\<^sub>p c') (min n0 n1)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  n = n'\n  n0 \\<le> n\n  n1 \\<le> n'\n  isnpolyh (c +\\<^sub>p c') (Suc n)", "show ?thesis"], ["proof (prove)\nusing this:\n  min n0 n1 \\<le> n'\n  isnpolyh (p +\\<^sub>p p') n\n  isnpolyh (c +\\<^sub>p c') (min n0 n1)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  n = n'\n  n0 \\<le> n\n  n1 \\<le> n'\n  isnpolyh (c +\\<^sub>p c') (Suc n)\n\ngoal (1 subgoal):\n 1. isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "by (simp add: Let_def)"], ["proof (state)\nthis:\n  isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n\ngoal (2 subgoals):\n 1. n < n' \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n 2. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. n < n' \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n 2. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "case lt"], ["proof (state)\nthis:\n  n < n'\n\ngoal (2 subgoals):\n 1. n < n' \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n 2. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "have \"min n0 n1 \\<le> n0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min n0 n1 \\<le> n0", "by simp"], ["proof (state)\nthis:\n  min n0 n1 \\<le> n0\n\ngoal (2 subgoals):\n 1. n < n' \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n 2. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "with 4 lt"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  n < n'\n  min n0 n1 \\<le> n0", "have th1:\"min n0 n1 \\<le> n\""], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  n < n'\n  min n0 n1 \\<le> n0\n\ngoal (1 subgoal):\n 1. min n0 n1 \\<le> n", "by auto"], ["proof (state)\nthis:\n  min n0 n1 \\<le> n\n\ngoal (2 subgoals):\n 1. n < n' \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n 2. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "from 4"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1", "have th21: \"isnpolyh c (Suc n)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n\ngoal (1 subgoal):\n 1. isnpolyh c (Suc n)", "by simp"], ["proof (state)\nthis:\n  isnpolyh c (Suc n)\n\ngoal (2 subgoals):\n 1. n < n' \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n 2. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "from 4"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1", "have th22: \"isnpolyh (CN c' n' p') n'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n\ngoal (1 subgoal):\n 1. isnpolyh (CN c' n' p') n'", "by simp"], ["proof (state)\nthis:\n  isnpolyh (CN c' n' p') n'\n\ngoal (2 subgoals):\n 1. n < n' \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n 2. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "from lt"], ["proof (chain)\npicking this:\n  n < n'", "have th23: \"min (Suc n) n' = Suc n\""], ["proof (prove)\nusing this:\n  n < n'\n\ngoal (1 subgoal):\n 1. min (Suc n) n' = Suc n", "by arith"], ["proof (state)\nthis:\n  min (Suc n) n' = Suc n\n\ngoal (2 subgoals):\n 1. n < n' \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n 2. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "from \"4.hyps\"(1)[OF th21 th22]"], ["proof (chain)\npicking this:\n  isnpolyh (c +\\<^sub>p CN c' n' p') (min (Suc n) n')", "have \"isnpolyh (polyadd c (CN c' n' p')) (Suc n)\""], ["proof (prove)\nusing this:\n  isnpolyh (c +\\<^sub>p CN c' n' p') (min (Suc n) n')\n\ngoal (1 subgoal):\n 1. isnpolyh (c +\\<^sub>p CN c' n' p') (Suc n)", "using th23"], ["proof (prove)\nusing this:\n  isnpolyh (c +\\<^sub>p CN c' n' p') (min (Suc n) n')\n  min (Suc n) n' = Suc n\n\ngoal (1 subgoal):\n 1. isnpolyh (c +\\<^sub>p CN c' n' p') (Suc n)", "by simp"], ["proof (state)\nthis:\n  isnpolyh (c +\\<^sub>p CN c' n' p') (Suc n)\n\ngoal (2 subgoals):\n 1. n < n' \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n 2. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "with 4 lt th1"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  n < n'\n  min n0 n1 \\<le> n\n  isnpolyh (c +\\<^sub>p CN c' n' p') (Suc n)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  n < n'\n  min n0 n1 \\<le> n\n  isnpolyh (c +\\<^sub>p CN c' n' p') (Suc n)\n\ngoal (1 subgoal):\n 1. isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "by simp"], ["proof (state)\nthis:\n  isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n\ngoal (1 subgoal):\n 1. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "case gt"], ["proof (state)\nthis:\n  n' < n\n\ngoal (1 subgoal):\n 1. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "then"], ["proof (chain)\npicking this:\n  n' < n", "have gt': \"n' < n \\<and> \\<not> n < n'\""], ["proof (prove)\nusing this:\n  n' < n\n\ngoal (1 subgoal):\n 1. n' < n \\<and> \\<not> n < n'", "by simp"], ["proof (state)\nthis:\n  n' < n \\<and> \\<not> n < n'\n\ngoal (1 subgoal):\n 1. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "have \"min n0 n1 \\<le> n1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min n0 n1 \\<le> n1", "by simp"], ["proof (state)\nthis:\n  min n0 n1 \\<le> n1\n\ngoal (1 subgoal):\n 1. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "with 4 gt"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  n' < n\n  min n0 n1 \\<le> n1", "have th1: \"min n0 n1 \\<le> n'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  n' < n\n  min n0 n1 \\<le> n1\n\ngoal (1 subgoal):\n 1. min n0 n1 \\<le> n'", "by auto"], ["proof (state)\nthis:\n  min n0 n1 \\<le> n'\n\ngoal (1 subgoal):\n 1. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "from 4"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1", "have th21: \"isnpolyh c' (Suc n')\""], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n\ngoal (1 subgoal):\n 1. isnpolyh c' (Suc n')", "by simp_all"], ["proof (state)\nthis:\n  isnpolyh c' (Suc n')\n\ngoal (1 subgoal):\n 1. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "from 4"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1", "have th22: \"isnpolyh (CN c n p) n\""], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n\ngoal (1 subgoal):\n 1. isnpolyh (CN c n p) n", "by simp"], ["proof (state)\nthis:\n  isnpolyh (CN c n p) n\n\ngoal (1 subgoal):\n 1. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "from gt"], ["proof (chain)\npicking this:\n  n' < n", "have th23: \"min n (Suc n') = Suc n'\""], ["proof (prove)\nusing this:\n  n' < n\n\ngoal (1 subgoal):\n 1. min n (Suc n') = Suc n'", "by arith"], ["proof (state)\nthis:\n  min n (Suc n') = Suc n'\n\ngoal (1 subgoal):\n 1. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "from \"4.hyps\"(2)[OF th22 th21]"], ["proof (chain)\npicking this:\n  isnpolyh (CN c n p +\\<^sub>p c') (min n (Suc n'))", "have \"isnpolyh (polyadd (CN c n p) c') (Suc n')\""], ["proof (prove)\nusing this:\n  isnpolyh (CN c n p +\\<^sub>p c') (min n (Suc n'))\n\ngoal (1 subgoal):\n 1. isnpolyh (CN c n p +\\<^sub>p c') (Suc n')", "using th23"], ["proof (prove)\nusing this:\n  isnpolyh (CN c n p +\\<^sub>p c') (min n (Suc n'))\n  min n (Suc n') = Suc n'\n\ngoal (1 subgoal):\n 1. isnpolyh (CN c n p +\\<^sub>p c') (Suc n')", "by simp"], ["proof (state)\nthis:\n  isnpolyh (CN c n p +\\<^sub>p c') (Suc n')\n\ngoal (1 subgoal):\n 1. n' < n \\<Longrightarrow>\n    isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "with 4 gt th1"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  n' < n\n  min n0 n1 \\<le> n'\n  isnpolyh (CN c n p +\\<^sub>p c') (Suc n')", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c +\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p p') (min ?n0.0 ?n1.0)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  n' < n\n  min n0 n1 \\<le> n'\n  isnpolyh (CN c n p +\\<^sub>p c') (Suc n')\n\ngoal (1 subgoal):\n 1. isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)", "by simp"], ["proof (state)\nthis:\n  isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  isnpolyh (CN c n p +\\<^sub>p CN c' n' p') (min n0 n1)\n\ngoal (25 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v +\\<^sub>p b) (min n0 n1)\n 3. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va +\\<^sub>p b) (min n0 n1)\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Sub v va +\\<^sub>p b) (min n0 n1)\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Mul v va +\\<^sub>p b) (min n0 n1)\n 6. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Neg v +\\<^sub>p b) (min n0 n1)\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Pw v va +\\<^sub>p b) (min n0 n1)\n 8. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Bound vc)\n                          (min n0 n1)\n 9. \\<And>v va vb vc vd n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Add vc vd)\n                          (min n0 n1)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (CN v va vb +\\<^sub>p Sub vc vd)\n                           (min n0 n1)\nA total of 25 subgoals...", "qed auto"], ["", "lemma polyadd[simp]:\nfixes p :: \"'a::ring_1 poly\"\nshows \"Ipoly bs (polyadd p q) = Ipoly bs p + Ipoly bs q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly bs (p +\\<^sub>p q) = Ipoly bs p + Ipoly bs q", "by (induct p q rule: polyadd.induct)\n     (auto simp add: Let_def field_simps distrib_left[symmetric] simp del: distrib_left_NO_MATCH)"], ["", "lemma polyadd_norm: \"isnpoly p \\<Longrightarrow> isnpoly q \\<Longrightarrow> isnpoly (polyadd p q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpoly p; isnpoly q\\<rbrakk>\n    \\<Longrightarrow> isnpoly (p +\\<^sub>p q)", "using polyadd_normh[of p 0 q 0]"], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh p 0; isnpolyh q 0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p +\\<^sub>p q) (min 0 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpoly p; isnpoly q\\<rbrakk>\n    \\<Longrightarrow> isnpoly (p +\\<^sub>p q)", "by (simp add: isnpoly_def)"], ["", "text \\<open>The degree of addition and other general lemmas needed for the normal form of polymul.\\<close>"], ["", "lemma polyadd_different_degreen:\n  assumes \"isnpolyh p n0\"\n    and \"isnpolyh q n1\"\n    and \"degreen p m \\<noteq> degreen q m\"\n    and \"m \\<le> min n0 n1\"\n  shows \"degreen (polyadd p q) m = max (degreen p m) (degreen q m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degreen (p +\\<^sub>p q) m = max (degreen p m) (degreen q m)", "using assms"], ["proof (prove)\nusing this:\n  isnpolyh p n0\n  isnpolyh q n1\n  degreen p m \\<noteq> degreen q m\n  m \\<le> min n0 n1\n\ngoal (1 subgoal):\n 1. degreen (p +\\<^sub>p q) m = max (degreen p m) (degreen q m)", "proof (induct p q arbitrary: m n0 n1 rule: polyadd.induct)"], ["proof (state)\ngoal (28 subgoals):\n 1. \\<And>c c' m n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        degreen (c)\\<^sub>p m \\<noteq> degreen (c')\\<^sub>p m;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p) m =\n                         max (degreen (c)\\<^sub>p m)\n                          (degreen (c')\\<^sub>p m)\n 2. \\<And>c c' n' p' m n0 n1.\n       \\<lbrakk>\\<And>m n0 n1.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    degreen (c)\\<^sub>p m \\<noteq> degreen c' m;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p c') m =\n                                     max (degreen (c)\\<^sub>p m)\n(degreen c' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        degreen (c)\\<^sub>p m \\<noteq> degreen (CN c' n' p') m;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p CN c' n' p') m =\n                         max (degreen (c)\\<^sub>p m)\n                          (degreen (CN c' n' p') m)\n 3. \\<And>c n p c' m n0 n1.\n       \\<lbrakk>\\<And>m n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    degreen c m \\<noteq> degreen (c')\\<^sub>p m;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> degreen (c +\\<^sub>p (c')\\<^sub>p) m =\n                                     max (degreen c m)\n(degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        degreen (CN c n p) m \\<noteq> degreen (c')\\<^sub>p m;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p +\\<^sub>p (c')\\<^sub>p) m =\n                         max (degreen (CN c n p) m) (degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' m n0 n1.\n       \\<lbrakk>\\<And>m n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    degreen c m \\<noteq> degreen (CN c' n' p') m;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> degreen (c +\\<^sub>p CN c' n' p') m =\n                                     max (degreen c m)\n(degreen (CN c' n' p') m);\n        \\<And>m n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            degreen (CN c n p) m \\<noteq> degreen c' m;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p +\\<^sub>p c') m =\n                             max (degreen (CN c n p) m) (degreen c' m);\n        \\<And>m n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1;\n            degreen c m \\<noteq> degreen c' m; m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c +\\<^sub>p c') m =\n                             max (degreen c m) (degreen c' m);\n        \\<And>x m n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1;\n            degreen p m \\<noteq> degreen p' m; m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p +\\<^sub>p p') m =\n                             max (degreen p m) (degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        degreen (CN c n p) m \\<noteq> degreen (CN c' n' p') m;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p +\\<^sub>p CN c' n' p') m =\n                         max (degreen (CN c n p) m)\n                          (degreen (CN c' n' p') m)\n 5. \\<And>v b m n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        degreen (Bound v) m \\<noteq> degreen b m; m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v +\\<^sub>p b) m =\n                         max (degreen (Bound v) m) (degreen b m)\n 6. \\<And>v va b m n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        degreen (Add v va) m \\<noteq> degreen b m;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Add v va +\\<^sub>p b) m =\n                         max (degreen (Add v va) m) (degreen b m)\n 7. \\<And>v va b m n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        degreen (Sub v va) m \\<noteq> degreen b m;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Sub v va +\\<^sub>p b) m =\n                         max (degreen (Sub v va) m) (degreen b m)\n 8. \\<And>v va b m n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        degreen (Mul v va) m \\<noteq> degreen b m;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Mul v va +\\<^sub>p b) m =\n                         max (degreen (Mul v va) m) (degreen b m)\n 9. \\<And>v b m n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        degreen (Neg v) m \\<noteq> degreen b m; m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Neg v +\\<^sub>p b) m =\n                         max (degreen (Neg v) m) (degreen b m)\n 10. \\<And>v va b m n0 n1.\n        \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n         degreen (Pw v va) m \\<noteq> degreen b m;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (Pw v va +\\<^sub>p b) m =\n                          max (degreen (Pw v va) m) (degreen b m)\nA total of 28 subgoals...", "case (4 c n p c' n' p' m n0 n1)"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   degreen c ?m \\<noteq> degreen (CN c' n' p') ?m;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (c +\\<^sub>p CN c' n' p') ?m =\n                    max (degreen c ?m) (degreen (CN c' n' p') ?m)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   degreen (CN c n p) ?m \\<noteq> degreen c' ?m;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p +\\<^sub>p c') ?m =\n                    max (degreen (CN c n p) ?m) (degreen c' ?m)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0;\n   degreen c ?m \\<noteq> degreen c' ?m; ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (c +\\<^sub>p c') ?m =\n                    max (degreen c ?m) (degreen c' ?m)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0;\n   degreen p ?m \\<noteq> degreen p' ?m; ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (p +\\<^sub>p p') ?m =\n                    max (degreen p ?m) (degreen p' ?m)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  degreen (CN c n p) m \\<noteq> degreen (CN c' n' p') m\n  m \\<le> min n0 n1\n\ngoal (28 subgoals):\n 1. \\<And>c c' m n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        degreen (c)\\<^sub>p m \\<noteq> degreen (c')\\<^sub>p m;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p) m =\n                         max (degreen (c)\\<^sub>p m)\n                          (degreen (c')\\<^sub>p m)\n 2. \\<And>c c' n' p' m n0 n1.\n       \\<lbrakk>\\<And>m n0 n1.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    degreen (c)\\<^sub>p m \\<noteq> degreen c' m;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p c') m =\n                                     max (degreen (c)\\<^sub>p m)\n(degreen c' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        degreen (c)\\<^sub>p m \\<noteq> degreen (CN c' n' p') m;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p CN c' n' p') m =\n                         max (degreen (c)\\<^sub>p m)\n                          (degreen (CN c' n' p') m)\n 3. \\<And>c n p c' m n0 n1.\n       \\<lbrakk>\\<And>m n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    degreen c m \\<noteq> degreen (c')\\<^sub>p m;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> degreen (c +\\<^sub>p (c')\\<^sub>p) m =\n                                     max (degreen c m)\n(degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        degreen (CN c n p) m \\<noteq> degreen (c')\\<^sub>p m;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p +\\<^sub>p (c')\\<^sub>p) m =\n                         max (degreen (CN c n p) m) (degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' m n0 n1.\n       \\<lbrakk>\\<And>m n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    degreen c m \\<noteq> degreen (CN c' n' p') m;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> degreen (c +\\<^sub>p CN c' n' p') m =\n                                     max (degreen c m)\n(degreen (CN c' n' p') m);\n        \\<And>m n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            degreen (CN c n p) m \\<noteq> degreen c' m;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p +\\<^sub>p c') m =\n                             max (degreen (CN c n p) m) (degreen c' m);\n        \\<And>m n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1;\n            degreen c m \\<noteq> degreen c' m; m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c +\\<^sub>p c') m =\n                             max (degreen c m) (degreen c' m);\n        \\<And>x m n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1;\n            degreen p m \\<noteq> degreen p' m; m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p +\\<^sub>p p') m =\n                             max (degreen p m) (degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        degreen (CN c n p) m \\<noteq> degreen (CN c' n' p') m;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p +\\<^sub>p CN c' n' p') m =\n                         max (degreen (CN c n p) m)\n                          (degreen (CN c' n' p') m)\n 5. \\<And>v b m n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        degreen (Bound v) m \\<noteq> degreen b m; m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v +\\<^sub>p b) m =\n                         max (degreen (Bound v) m) (degreen b m)\n 6. \\<And>v va b m n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        degreen (Add v va) m \\<noteq> degreen b m;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Add v va +\\<^sub>p b) m =\n                         max (degreen (Add v va) m) (degreen b m)\n 7. \\<And>v va b m n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        degreen (Sub v va) m \\<noteq> degreen b m;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Sub v va +\\<^sub>p b) m =\n                         max (degreen (Sub v va) m) (degreen b m)\n 8. \\<And>v va b m n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        degreen (Mul v va) m \\<noteq> degreen b m;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Mul v va +\\<^sub>p b) m =\n                         max (degreen (Mul v va) m) (degreen b m)\n 9. \\<And>v b m n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        degreen (Neg v) m \\<noteq> degreen b m; m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Neg v +\\<^sub>p b) m =\n                         max (degreen (Neg v) m) (degreen b m)\n 10. \\<And>v va b m n0 n1.\n        \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n         degreen (Pw v va) m \\<noteq> degreen b m;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (Pw v va +\\<^sub>p b) m =\n                          max (degreen (Pw v va) m) (degreen b m)\nA total of 28 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. degreen (CN c n p +\\<^sub>p CN c' n' p') m =\n    max (degreen (CN c n p) m) (degreen (CN c' n' p') m)", "proof (cases \"n = n'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = n' \\<Longrightarrow>\n    degreen (CN c n p +\\<^sub>p CN c' n' p') m =\n    max (degreen (CN c n p) m) (degreen (CN c' n' p') m)\n 2. n \\<noteq> n' \\<Longrightarrow>\n    degreen (CN c n p +\\<^sub>p CN c' n' p') m =\n    max (degreen (CN c n p) m) (degreen (CN c' n' p') m)", "case True"], ["proof (state)\nthis:\n  n = n'\n\ngoal (2 subgoals):\n 1. n = n' \\<Longrightarrow>\n    degreen (CN c n p +\\<^sub>p CN c' n' p') m =\n    max (degreen (CN c n p) m) (degreen (CN c' n' p') m)\n 2. n \\<noteq> n' \\<Longrightarrow>\n    degreen (CN c n p +\\<^sub>p CN c' n' p') m =\n    max (degreen (CN c n p) m) (degreen (CN c' n' p') m)", "with 4(4)[of n n m] 4(3)[of \"Suc n\" \"Suc n\" m] 4(5-7)"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh p n; isnpolyh p' n; degreen p m \\<noteq> degreen p' m;\n   m \\<le> min n n\\<rbrakk>\n  \\<Longrightarrow> degreen (p +\\<^sub>p p') m =\n                    max (degreen p m) (degreen p' m)\n  \\<lbrakk>isnpolyh c (Suc n); isnpolyh c' (Suc n);\n   degreen c m \\<noteq> degreen c' m; m \\<le> min (Suc n) (Suc n)\\<rbrakk>\n  \\<Longrightarrow> degreen (c +\\<^sub>p c') m =\n                    max (degreen c m) (degreen c' m)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  degreen (CN c n p) m \\<noteq> degreen (CN c' n' p') m\n  n = n'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh p n; isnpolyh p' n; degreen p m \\<noteq> degreen p' m;\n   m \\<le> min n n\\<rbrakk>\n  \\<Longrightarrow> degreen (p +\\<^sub>p p') m =\n                    max (degreen p m) (degreen p' m)\n  \\<lbrakk>isnpolyh c (Suc n); isnpolyh c' (Suc n);\n   degreen c m \\<noteq> degreen c' m; m \\<le> min (Suc n) (Suc n)\\<rbrakk>\n  \\<Longrightarrow> degreen (c +\\<^sub>p c') m =\n                    max (degreen c m) (degreen c' m)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  degreen (CN c n p) m \\<noteq> degreen (CN c' n' p') m\n  n = n'\n\ngoal (1 subgoal):\n 1. degreen (CN c n p +\\<^sub>p CN c' n' p') m =\n    max (degreen (CN c n p) m) (degreen (CN c' n' p') m)", "by (auto simp: Let_def)"], ["proof (state)\nthis:\n  degreen (CN c n p +\\<^sub>p CN c' n' p') m =\n  max (degreen (CN c n p) m) (degreen (CN c' n' p') m)\n\ngoal (1 subgoal):\n 1. n \\<noteq> n' \\<Longrightarrow>\n    degreen (CN c n p +\\<^sub>p CN c' n' p') m =\n    max (degreen (CN c n p) m) (degreen (CN c' n' p') m)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> n' \\<Longrightarrow>\n    degreen (CN c n p +\\<^sub>p CN c' n' p') m =\n    max (degreen (CN c n p) m) (degreen (CN c' n' p') m)", "case False"], ["proof (state)\nthis:\n  n \\<noteq> n'\n\ngoal (1 subgoal):\n 1. n \\<noteq> n' \\<Longrightarrow>\n    degreen (CN c n p +\\<^sub>p CN c' n' p') m =\n    max (degreen (CN c n p) m) (degreen (CN c' n' p') m)", "with 4"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   degreen c ?m \\<noteq> degreen (CN c' n' p') ?m;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (c +\\<^sub>p CN c' n' p') ?m =\n                    max (degreen c ?m) (degreen (CN c' n' p') ?m)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   degreen (CN c n p) ?m \\<noteq> degreen c' ?m;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p +\\<^sub>p c') ?m =\n                    max (degreen (CN c n p) ?m) (degreen c' ?m)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0;\n   degreen c ?m \\<noteq> degreen c' ?m; ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (c +\\<^sub>p c') ?m =\n                    max (degreen c ?m) (degreen c' ?m)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0;\n   degreen p ?m \\<noteq> degreen p' ?m; ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (p +\\<^sub>p p') ?m =\n                    max (degreen p ?m) (degreen p' ?m)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  degreen (CN c n p) m \\<noteq> degreen (CN c' n' p') m\n  m \\<le> min n0 n1\n  n \\<noteq> n'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   degreen c ?m \\<noteq> degreen (CN c' n' p') ?m;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (c +\\<^sub>p CN c' n' p') ?m =\n                    max (degreen c ?m) (degreen (CN c' n' p') ?m)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   degreen (CN c n p) ?m \\<noteq> degreen c' ?m;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p +\\<^sub>p c') ?m =\n                    max (degreen (CN c n p) ?m) (degreen c' ?m)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0;\n   degreen c ?m \\<noteq> degreen c' ?m; ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (c +\\<^sub>p c') ?m =\n                    max (degreen c ?m) (degreen c' ?m)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0;\n   degreen p ?m \\<noteq> degreen p' ?m; ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (p +\\<^sub>p p') ?m =\n                    max (degreen p ?m) (degreen p' ?m)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  degreen (CN c n p) m \\<noteq> degreen (CN c' n' p') m\n  m \\<le> min n0 n1\n  n \\<noteq> n'\n\ngoal (1 subgoal):\n 1. degreen (CN c n p +\\<^sub>p CN c' n' p') m =\n    max (degreen (CN c n p) m) (degreen (CN c' n' p') m)", "by auto"], ["proof (state)\nthis:\n  degreen (CN c n p +\\<^sub>p CN c' n' p') m =\n  max (degreen (CN c n p) m) (degreen (CN c' n' p') m)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  degreen (CN c n p +\\<^sub>p CN c' n' p') m =\n  max (degreen (CN c n p) m) (degreen (CN c' n' p') m)\n\ngoal (27 subgoals):\n 1. \\<And>c c' m n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        degreen (c)\\<^sub>p m \\<noteq> degreen (c')\\<^sub>p m;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p) m =\n                         max (degreen (c)\\<^sub>p m)\n                          (degreen (c')\\<^sub>p m)\n 2. \\<And>c c' n' p' m n0 n1.\n       \\<lbrakk>\\<And>m n0 n1.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    degreen (c)\\<^sub>p m \\<noteq> degreen c' m;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p c') m =\n                                     max (degreen (c)\\<^sub>p m)\n(degreen c' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        degreen (c)\\<^sub>p m \\<noteq> degreen (CN c' n' p') m;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p CN c' n' p') m =\n                         max (degreen (c)\\<^sub>p m)\n                          (degreen (CN c' n' p') m)\n 3. \\<And>c n p c' m n0 n1.\n       \\<lbrakk>\\<And>m n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    degreen c m \\<noteq> degreen (c')\\<^sub>p m;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> degreen (c +\\<^sub>p (c')\\<^sub>p) m =\n                                     max (degreen c m)\n(degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        degreen (CN c n p) m \\<noteq> degreen (c')\\<^sub>p m;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p +\\<^sub>p (c')\\<^sub>p) m =\n                         max (degreen (CN c n p) m) (degreen (c')\\<^sub>p m)\n 4. \\<And>v b m n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        degreen (Bound v) m \\<noteq> degreen b m; m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v +\\<^sub>p b) m =\n                         max (degreen (Bound v) m) (degreen b m)\n 5. \\<And>v va b m n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        degreen (Add v va) m \\<noteq> degreen b m;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Add v va +\\<^sub>p b) m =\n                         max (degreen (Add v va) m) (degreen b m)\n 6. \\<And>v va b m n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        degreen (Sub v va) m \\<noteq> degreen b m;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Sub v va +\\<^sub>p b) m =\n                         max (degreen (Sub v va) m) (degreen b m)\n 7. \\<And>v va b m n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        degreen (Mul v va) m \\<noteq> degreen b m;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Mul v va +\\<^sub>p b) m =\n                         max (degreen (Mul v va) m) (degreen b m)\n 8. \\<And>v b m n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        degreen (Neg v) m \\<noteq> degreen b m; m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Neg v +\\<^sub>p b) m =\n                         max (degreen (Neg v) m) (degreen b m)\n 9. \\<And>v va b m n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        degreen (Pw v va) m \\<noteq> degreen b m; m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Pw v va +\\<^sub>p b) m =\n                         max (degreen (Pw v va) m) (degreen b m)\n 10. \\<And>v va vb vc m n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n         degreen (CN v va vb) m \\<noteq> degreen (Bound vc) m;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (CN v va vb +\\<^sub>p Bound vc) m =\n                          max (degreen (CN v va vb) m)\n                           (degreen (Bound vc) m)\nA total of 27 subgoals...", "qed auto"], ["", "lemma headnz[simp]: \"isnpolyh p n \\<Longrightarrow> p \\<noteq> 0\\<^sub>p \\<Longrightarrow> headn p m \\<noteq> 0\\<^sub>p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpolyh p n; p \\<noteq> 0\\<^sub>p\\<rbrakk>\n    \\<Longrightarrow> headn p m \\<noteq> 0\\<^sub>p", "by (induct p arbitrary: n rule: headn.induct) auto"], ["", "lemma degree_isnpolyh_Suc[simp]: \"isnpolyh p (Suc n) \\<Longrightarrow> degree p = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p (Suc n) \\<Longrightarrow> Polynomial_Expression.degree p = 0", "by (induct p arbitrary: n rule: degree.induct) auto"], ["", "lemma degreen_0[simp]: \"isnpolyh p n \\<Longrightarrow> m < n \\<Longrightarrow> degreen p m = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpolyh p n; m < n\\<rbrakk> \\<Longrightarrow> degreen p m = 0", "by (induct p arbitrary: n rule: degreen.induct) auto"], ["", "lemma degree_isnpolyh_Suc': \"n > 0 \\<Longrightarrow> isnpolyh p n \\<Longrightarrow> degree p = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; isnpolyh p n\\<rbrakk>\n    \\<Longrightarrow> Polynomial_Expression.degree p = 0", "by (induct p arbitrary: n rule: degree.induct) auto"], ["", "lemma degree_npolyhCN[simp]: \"isnpolyh (CN c n p) n0 \\<Longrightarrow> degree c = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh (CN c n p) n0 \\<Longrightarrow>\n    Polynomial_Expression.degree c = 0", "using degree_isnpolyh_Suc"], ["proof (prove)\nusing this:\n  isnpolyh ?p (Suc ?n) \\<Longrightarrow> Polynomial_Expression.degree ?p = 0\n\ngoal (1 subgoal):\n 1. isnpolyh (CN c n p) n0 \\<Longrightarrow>\n    Polynomial_Expression.degree c = 0", "by auto"], ["", "lemma degreen_npolyhCN[simp]: \"isnpolyh (CN c n p) n0 \\<Longrightarrow> degreen c n = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh (CN c n p) n0 \\<Longrightarrow> degreen c n = 0", "using degreen_0"], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh ?p ?n; ?m < ?n\\<rbrakk>\n  \\<Longrightarrow> degreen ?p ?m = 0\n\ngoal (1 subgoal):\n 1. isnpolyh (CN c n p) n0 \\<Longrightarrow> degreen c n = 0", "by auto"], ["", "lemma degreen_polyadd:\n  assumes np: \"isnpolyh p n0\"\n    and nq: \"isnpolyh q n1\"\n    and m: \"m \\<le> max n0 n1\"\n  shows \"degreen (p +\\<^sub>p q) m \\<le> max (degreen p m) (degreen q m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degreen (p +\\<^sub>p q) m \\<le> max (degreen p m) (degreen q m)", "using np nq m"], ["proof (prove)\nusing this:\n  isnpolyh p n0\n  isnpolyh q n1\n  m \\<le> max n0 n1\n\ngoal (1 subgoal):\n 1. degreen (p +\\<^sub>p q) m \\<le> max (degreen p m) (degreen q m)", "proof (induct p q arbitrary: n0 n1 m rule: polyadd.induct)"], ["proof (state)\ngoal (28 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p) m\n                         \\<le> max (degreen (c)\\<^sub>p m)\n                                (degreen (c')\\<^sub>p m)\n 2. \\<And>c c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    m \\<le> max n0 n1\\<rbrakk>\n                   \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p c') m\n                                     \\<le> max (degreen (c)\\<^sub>p m)\n      (degreen c' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p CN c' n' p') m\n                         \\<le> max (degreen (c)\\<^sub>p m)\n                                (degreen (CN c' n' p') m)\n 3. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> max n0 n1\\<rbrakk>\n                   \\<Longrightarrow> degreen (c +\\<^sub>p (c')\\<^sub>p) m\n                                     \\<le> max (degreen c m)\n      (degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p +\\<^sub>p (c')\\<^sub>p) m\n                         \\<le> max (degreen (CN c n p) m)\n                                (degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> max n0 n1\\<rbrakk>\n                   \\<Longrightarrow> degreen (c +\\<^sub>p CN c' n' p') m\n                                     \\<le> max (degreen c m)\n      (degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p +\\<^sub>p c') m\n                             \\<le> max (degreen (CN c n p) m)\n                                    (degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c +\\<^sub>p c') m\n                             \\<le> max (degreen c m) (degreen c' m);\n        \\<And>x n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p +\\<^sub>p p') m\n                             \\<le> max (degreen p m) (degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p +\\<^sub>p CN c' n' p') m\n                         \\<le> max (degreen (CN c n p) m)\n                                (degreen (CN c' n' p') m)\n 5. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v +\\<^sub>p b) m\n                         \\<le> max (degreen (Bound v) m) (degreen b m)\n 6. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Add v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Add v va) m) (degreen b m)\n 7. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Sub v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Sub v va) m) (degreen b m)\n 8. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Mul v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Mul v va) m) (degreen b m)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Neg v +\\<^sub>p b) m\n                         \\<le> max (degreen (Neg v) m) (degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n         m \\<le> max n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (Pw v va +\\<^sub>p b) m\n                          \\<le> max (degreen (Pw v va) m) (degreen b m)\nA total of 28 subgoals...", "case (2 c c' n' p' n0 n1)"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> max ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p c') ?m\n                    \\<le> max (degreen (c)\\<^sub>p ?m) (degreen c' ?m)\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> max n0 n1\n\ngoal (28 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p) m\n                         \\<le> max (degreen (c)\\<^sub>p m)\n                                (degreen (c')\\<^sub>p m)\n 2. \\<And>c c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    m \\<le> max n0 n1\\<rbrakk>\n                   \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p c') m\n                                     \\<le> max (degreen (c)\\<^sub>p m)\n      (degreen c' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p CN c' n' p') m\n                         \\<le> max (degreen (c)\\<^sub>p m)\n                                (degreen (CN c' n' p') m)\n 3. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> max n0 n1\\<rbrakk>\n                   \\<Longrightarrow> degreen (c +\\<^sub>p (c')\\<^sub>p) m\n                                     \\<le> max (degreen c m)\n      (degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p +\\<^sub>p (c')\\<^sub>p) m\n                         \\<le> max (degreen (CN c n p) m)\n                                (degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> max n0 n1\\<rbrakk>\n                   \\<Longrightarrow> degreen (c +\\<^sub>p CN c' n' p') m\n                                     \\<le> max (degreen c m)\n      (degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p +\\<^sub>p c') m\n                             \\<le> max (degreen (CN c n p) m)\n                                    (degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c +\\<^sub>p c') m\n                             \\<le> max (degreen c m) (degreen c' m);\n        \\<And>x n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p +\\<^sub>p p') m\n                             \\<le> max (degreen p m) (degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p +\\<^sub>p CN c' n' p') m\n                         \\<le> max (degreen (CN c n p) m)\n                                (degreen (CN c' n' p') m)\n 5. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v +\\<^sub>p b) m\n                         \\<le> max (degreen (Bound v) m) (degreen b m)\n 6. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Add v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Add v va) m) (degreen b m)\n 7. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Sub v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Sub v va) m) (degreen b m)\n 8. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Mul v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Mul v va) m) (degreen b m)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Neg v +\\<^sub>p b) m\n                         \\<le> max (degreen (Neg v) m) (degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n         m \\<le> max n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (Pw v va +\\<^sub>p b) m\n                          \\<le> max (degreen (Pw v va) m) (degreen b m)\nA total of 28 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> max ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p c') ?m\n                    \\<le> max (degreen (c)\\<^sub>p ?m) (degreen c' ?m)\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> max n0 n1", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> max ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p c') ?m\n                    \\<le> max (degreen (c)\\<^sub>p ?m) (degreen c' ?m)\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> max n0 n1\n\ngoal (1 subgoal):\n 1. degreen ((c)\\<^sub>p +\\<^sub>p CN c' n' p') m\n    \\<le> max (degreen (c)\\<^sub>p m) (degreen (CN c' n' p') m)", "by (cases n') simp_all"], ["proof (state)\nthis:\n  degreen ((c)\\<^sub>p +\\<^sub>p CN c' n' p') m\n  \\<le> max (degreen (c)\\<^sub>p m) (degreen (CN c' n' p') m)\n\ngoal (27 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p) m\n                         \\<le> max (degreen (c)\\<^sub>p m)\n                                (degreen (c')\\<^sub>p m)\n 2. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> max n0 n1\\<rbrakk>\n                   \\<Longrightarrow> degreen (c +\\<^sub>p (c')\\<^sub>p) m\n                                     \\<le> max (degreen c m)\n      (degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p +\\<^sub>p (c')\\<^sub>p) m\n                         \\<le> max (degreen (CN c n p) m)\n                                (degreen (c')\\<^sub>p m)\n 3. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> max n0 n1\\<rbrakk>\n                   \\<Longrightarrow> degreen (c +\\<^sub>p CN c' n' p') m\n                                     \\<le> max (degreen c m)\n      (degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p +\\<^sub>p c') m\n                             \\<le> max (degreen (CN c n p) m)\n                                    (degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c +\\<^sub>p c') m\n                             \\<le> max (degreen c m) (degreen c' m);\n        \\<And>x n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p +\\<^sub>p p') m\n                             \\<le> max (degreen p m) (degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p +\\<^sub>p CN c' n' p') m\n                         \\<le> max (degreen (CN c n p) m)\n                                (degreen (CN c' n' p') m)\n 4. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v +\\<^sub>p b) m\n                         \\<le> max (degreen (Bound v) m) (degreen b m)\n 5. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Add v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Add v va) m) (degreen b m)\n 6. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Sub v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Sub v va) m) (degreen b m)\n 7. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Mul v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Mul v va) m) (degreen b m)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Neg v +\\<^sub>p b) m\n                         \\<le> max (degreen (Neg v) m) (degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Pw v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Pw v va) m) (degreen b m)\n 10. \\<And>v va vb vc n0 n1 m.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n         m \\<le> max n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (CN v va vb +\\<^sub>p Bound vc) m\n                          \\<le> max (degreen (CN v va vb) m)\n                                 (degreen (Bound vc) m)\nA total of 27 subgoals...", "next"], ["proof (state)\ngoal (27 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p) m\n                         \\<le> max (degreen (c)\\<^sub>p m)\n                                (degreen (c')\\<^sub>p m)\n 2. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> max n0 n1\\<rbrakk>\n                   \\<Longrightarrow> degreen (c +\\<^sub>p (c')\\<^sub>p) m\n                                     \\<le> max (degreen c m)\n      (degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p +\\<^sub>p (c')\\<^sub>p) m\n                         \\<le> max (degreen (CN c n p) m)\n                                (degreen (c')\\<^sub>p m)\n 3. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> max n0 n1\\<rbrakk>\n                   \\<Longrightarrow> degreen (c +\\<^sub>p CN c' n' p') m\n                                     \\<le> max (degreen c m)\n      (degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p +\\<^sub>p c') m\n                             \\<le> max (degreen (CN c n p) m)\n                                    (degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c +\\<^sub>p c') m\n                             \\<le> max (degreen c m) (degreen c' m);\n        \\<And>x n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p +\\<^sub>p p') m\n                             \\<le> max (degreen p m) (degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p +\\<^sub>p CN c' n' p') m\n                         \\<le> max (degreen (CN c n p) m)\n                                (degreen (CN c' n' p') m)\n 4. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v +\\<^sub>p b) m\n                         \\<le> max (degreen (Bound v) m) (degreen b m)\n 5. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Add v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Add v va) m) (degreen b m)\n 6. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Sub v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Sub v va) m) (degreen b m)\n 7. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Mul v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Mul v va) m) (degreen b m)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Neg v +\\<^sub>p b) m\n                         \\<le> max (degreen (Neg v) m) (degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Pw v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Pw v va) m) (degreen b m)\n 10. \\<And>v va vb vc n0 n1 m.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n         m \\<le> max n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (CN v va vb +\\<^sub>p Bound vc) m\n                          \\<le> max (degreen (CN v va vb) m)\n                                 (degreen (Bound vc) m)\nA total of 27 subgoals...", "case (3 c n p c' n0 n1)"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   ?m \\<le> max ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (c +\\<^sub>p (c')\\<^sub>p) ?m\n                    \\<le> max (degreen c ?m) (degreen (c')\\<^sub>p ?m)\n  isnpolyh (CN c n p) n0\n  isnpolyh (c')\\<^sub>p n1\n  m \\<le> max n0 n1\n\ngoal (27 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p) m\n                         \\<le> max (degreen (c)\\<^sub>p m)\n                                (degreen (c')\\<^sub>p m)\n 2. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> max n0 n1\\<rbrakk>\n                   \\<Longrightarrow> degreen (c +\\<^sub>p (c')\\<^sub>p) m\n                                     \\<le> max (degreen c m)\n      (degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p +\\<^sub>p (c')\\<^sub>p) m\n                         \\<le> max (degreen (CN c n p) m)\n                                (degreen (c')\\<^sub>p m)\n 3. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> max n0 n1\\<rbrakk>\n                   \\<Longrightarrow> degreen (c +\\<^sub>p CN c' n' p') m\n                                     \\<le> max (degreen c m)\n      (degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p +\\<^sub>p c') m\n                             \\<le> max (degreen (CN c n p) m)\n                                    (degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c +\\<^sub>p c') m\n                             \\<le> max (degreen c m) (degreen c' m);\n        \\<And>x n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p +\\<^sub>p p') m\n                             \\<le> max (degreen p m) (degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p +\\<^sub>p CN c' n' p') m\n                         \\<le> max (degreen (CN c n p) m)\n                                (degreen (CN c' n' p') m)\n 4. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v +\\<^sub>p b) m\n                         \\<le> max (degreen (Bound v) m) (degreen b m)\n 5. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Add v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Add v va) m) (degreen b m)\n 6. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Sub v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Sub v va) m) (degreen b m)\n 7. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Mul v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Mul v va) m) (degreen b m)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Neg v +\\<^sub>p b) m\n                         \\<le> max (degreen (Neg v) m) (degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Pw v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Pw v va) m) (degreen b m)\n 10. \\<And>v va vb vc n0 n1 m.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n         m \\<le> max n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (CN v va vb +\\<^sub>p Bound vc) m\n                          \\<le> max (degreen (CN v va vb) m)\n                                 (degreen (Bound vc) m)\nA total of 27 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   ?m \\<le> max ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (c +\\<^sub>p (c')\\<^sub>p) ?m\n                    \\<le> max (degreen c ?m) (degreen (c')\\<^sub>p ?m)\n  isnpolyh (CN c n p) n0\n  isnpolyh (c')\\<^sub>p n1\n  m \\<le> max n0 n1", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   ?m \\<le> max ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (c +\\<^sub>p (c')\\<^sub>p) ?m\n                    \\<le> max (degreen c ?m) (degreen (c')\\<^sub>p ?m)\n  isnpolyh (CN c n p) n0\n  isnpolyh (c')\\<^sub>p n1\n  m \\<le> max n0 n1\n\ngoal (1 subgoal):\n 1. degreen (CN c n p +\\<^sub>p (c')\\<^sub>p) m\n    \\<le> max (degreen (CN c n p) m) (degreen (c')\\<^sub>p m)", "by (cases n) auto"], ["proof (state)\nthis:\n  degreen (CN c n p +\\<^sub>p (c')\\<^sub>p) m\n  \\<le> max (degreen (CN c n p) m) (degreen (c')\\<^sub>p m)\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p) m\n                         \\<le> max (degreen (c)\\<^sub>p m)\n                                (degreen (c')\\<^sub>p m)\n 2. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> max n0 n1\\<rbrakk>\n                   \\<Longrightarrow> degreen (c +\\<^sub>p CN c' n' p') m\n                                     \\<le> max (degreen c m)\n      (degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p +\\<^sub>p c') m\n                             \\<le> max (degreen (CN c n p) m)\n                                    (degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c +\\<^sub>p c') m\n                             \\<le> max (degreen c m) (degreen c' m);\n        \\<And>x n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p +\\<^sub>p p') m\n                             \\<le> max (degreen p m) (degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p +\\<^sub>p CN c' n' p') m\n                         \\<le> max (degreen (CN c n p) m)\n                                (degreen (CN c' n' p') m)\n 3. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v +\\<^sub>p b) m\n                         \\<le> max (degreen (Bound v) m) (degreen b m)\n 4. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Add v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Add v va) m) (degreen b m)\n 5. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Sub v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Sub v va) m) (degreen b m)\n 6. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Mul v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Mul v va) m) (degreen b m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Neg v +\\<^sub>p b) m\n                         \\<le> max (degreen (Neg v) m) (degreen b m)\n 8. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Pw v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Pw v va) m) (degreen b m)\n 9. \\<And>v va vb vc n0 n1 m.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN v va vb +\\<^sub>p Bound vc) m\n                         \\<le> max (degreen (CN v va vb) m)\n                                (degreen (Bound vc) m)\n 10. \\<And>v va vb vc vd n0 n1 m.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         m \\<le> max n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (CN v va vb +\\<^sub>p Add vc vd) m\n                          \\<le> max (degreen (CN v va vb) m)\n                                 (degreen (Add vc vd) m)\nA total of 26 subgoals...", "next"], ["proof (state)\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p) m\n                         \\<le> max (degreen (c)\\<^sub>p m)\n                                (degreen (c')\\<^sub>p m)\n 2. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> max n0 n1\\<rbrakk>\n                   \\<Longrightarrow> degreen (c +\\<^sub>p CN c' n' p') m\n                                     \\<le> max (degreen c m)\n      (degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p +\\<^sub>p c') m\n                             \\<le> max (degreen (CN c n p) m)\n                                    (degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c +\\<^sub>p c') m\n                             \\<le> max (degreen c m) (degreen c' m);\n        \\<And>x n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p +\\<^sub>p p') m\n                             \\<le> max (degreen p m) (degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p +\\<^sub>p CN c' n' p') m\n                         \\<le> max (degreen (CN c n p) m)\n                                (degreen (CN c' n' p') m)\n 3. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v +\\<^sub>p b) m\n                         \\<le> max (degreen (Bound v) m) (degreen b m)\n 4. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Add v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Add v va) m) (degreen b m)\n 5. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Sub v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Sub v va) m) (degreen b m)\n 6. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Mul v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Mul v va) m) (degreen b m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Neg v +\\<^sub>p b) m\n                         \\<le> max (degreen (Neg v) m) (degreen b m)\n 8. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Pw v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Pw v va) m) (degreen b m)\n 9. \\<And>v va vb vc n0 n1 m.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN v va vb +\\<^sub>p Bound vc) m\n                         \\<le> max (degreen (CN v va vb) m)\n                                (degreen (Bound vc) m)\n 10. \\<And>v va vb vc vd n0 n1 m.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         m \\<le> max n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (CN v va vb +\\<^sub>p Add vc vd) m\n                          \\<le> max (degreen (CN v va vb) m)\n                                 (degreen (Add vc vd) m)\nA total of 26 subgoals...", "case (4 c n p c' n' p' n0 n1 m)"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   ?m \\<le> max ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (c +\\<^sub>p CN c' n' p') ?m\n                    \\<le> max (degreen c ?m) (degreen (CN c' n' p') ?m)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> max ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p +\\<^sub>p c') ?m\n                    \\<le> max (degreen (CN c n p) ?m) (degreen c' ?m)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> max ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (c +\\<^sub>p c') ?m\n                    \\<le> max (degreen c ?m) (degreen c' ?m)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> max ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (p +\\<^sub>p p') ?m\n                    \\<le> max (degreen p ?m) (degreen p' ?m)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> max n0 n1\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p) m\n                         \\<le> max (degreen (c)\\<^sub>p m)\n                                (degreen (c')\\<^sub>p m)\n 2. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> max n0 n1\\<rbrakk>\n                   \\<Longrightarrow> degreen (c +\\<^sub>p CN c' n' p') m\n                                     \\<le> max (degreen c m)\n      (degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p +\\<^sub>p c') m\n                             \\<le> max (degreen (CN c n p) m)\n                                    (degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c +\\<^sub>p c') m\n                             \\<le> max (degreen c m) (degreen c' m);\n        \\<And>x n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1;\n            m \\<le> max n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p +\\<^sub>p p') m\n                             \\<le> max (degreen p m) (degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p +\\<^sub>p CN c' n' p') m\n                         \\<le> max (degreen (CN c n p) m)\n                                (degreen (CN c' n' p') m)\n 3. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v +\\<^sub>p b) m\n                         \\<le> max (degreen (Bound v) m) (degreen b m)\n 4. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Add v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Add v va) m) (degreen b m)\n 5. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Sub v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Sub v va) m) (degreen b m)\n 6. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Mul v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Mul v va) m) (degreen b m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Neg v +\\<^sub>p b) m\n                         \\<le> max (degreen (Neg v) m) (degreen b m)\n 8. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Pw v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Pw v va) m) (degreen b m)\n 9. \\<And>v va vb vc n0 n1 m.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN v va vb +\\<^sub>p Bound vc) m\n                         \\<le> max (degreen (CN v va vb) m)\n                                (degreen (Bound vc) m)\n 10. \\<And>v va vb vc vd n0 n1 m.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         m \\<le> max n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (CN v va vb +\\<^sub>p Add vc vd) m\n                          \\<le> max (degreen (CN v va vb) m)\n                                 (degreen (Add vc vd) m)\nA total of 26 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. degreen (CN c n p +\\<^sub>p CN c' n' p') m\n    \\<le> max (degreen (CN c n p) m) (degreen (CN c' n' p') m)", "proof (cases \"n = n'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = n' \\<Longrightarrow>\n    degreen (CN c n p +\\<^sub>p CN c' n' p') m\n    \\<le> max (degreen (CN c n p) m) (degreen (CN c' n' p') m)\n 2. n \\<noteq> n' \\<Longrightarrow>\n    degreen (CN c n p +\\<^sub>p CN c' n' p') m\n    \\<le> max (degreen (CN c n p) m) (degreen (CN c' n' p') m)", "case True"], ["proof (state)\nthis:\n  n = n'\n\ngoal (2 subgoals):\n 1. n = n' \\<Longrightarrow>\n    degreen (CN c n p +\\<^sub>p CN c' n' p') m\n    \\<le> max (degreen (CN c n p) m) (degreen (CN c' n' p') m)\n 2. n \\<noteq> n' \\<Longrightarrow>\n    degreen (CN c n p +\\<^sub>p CN c' n' p') m\n    \\<le> max (degreen (CN c n p) m) (degreen (CN c' n' p') m)", "with 4(4)[of n n m] 4(3)[of \"Suc n\" \"Suc n\" m] 4(5-7)"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh p n; isnpolyh p' n; m \\<le> max n n\\<rbrakk>\n  \\<Longrightarrow> degreen (p +\\<^sub>p p') m\n                    \\<le> max (degreen p m) (degreen p' m)\n  \\<lbrakk>isnpolyh c (Suc n); isnpolyh c' (Suc n);\n   m \\<le> max (Suc n) (Suc n)\\<rbrakk>\n  \\<Longrightarrow> degreen (c +\\<^sub>p c') m\n                    \\<le> max (degreen c m) (degreen c' m)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> max n0 n1\n  n = n'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh p n; isnpolyh p' n; m \\<le> max n n\\<rbrakk>\n  \\<Longrightarrow> degreen (p +\\<^sub>p p') m\n                    \\<le> max (degreen p m) (degreen p' m)\n  \\<lbrakk>isnpolyh c (Suc n); isnpolyh c' (Suc n);\n   m \\<le> max (Suc n) (Suc n)\\<rbrakk>\n  \\<Longrightarrow> degreen (c +\\<^sub>p c') m\n                    \\<le> max (degreen c m) (degreen c' m)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> max n0 n1\n  n = n'\n\ngoal (1 subgoal):\n 1. degreen (CN c n p +\\<^sub>p CN c' n' p') m\n    \\<le> max (degreen (CN c n p) m) (degreen (CN c' n' p') m)", "by (auto simp: Let_def)"], ["proof (state)\nthis:\n  degreen (CN c n p +\\<^sub>p CN c' n' p') m\n  \\<le> max (degreen (CN c n p) m) (degreen (CN c' n' p') m)\n\ngoal (1 subgoal):\n 1. n \\<noteq> n' \\<Longrightarrow>\n    degreen (CN c n p +\\<^sub>p CN c' n' p') m\n    \\<le> max (degreen (CN c n p) m) (degreen (CN c' n' p') m)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> n' \\<Longrightarrow>\n    degreen (CN c n p +\\<^sub>p CN c' n' p') m\n    \\<le> max (degreen (CN c n p) m) (degreen (CN c' n' p') m)", "case False"], ["proof (state)\nthis:\n  n \\<noteq> n'\n\ngoal (1 subgoal):\n 1. n \\<noteq> n' \\<Longrightarrow>\n    degreen (CN c n p +\\<^sub>p CN c' n' p') m\n    \\<le> max (degreen (CN c n p) m) (degreen (CN c' n' p') m)", "then"], ["proof (chain)\npicking this:\n  n \\<noteq> n'", "show ?thesis"], ["proof (prove)\nusing this:\n  n \\<noteq> n'\n\ngoal (1 subgoal):\n 1. degreen (CN c n p +\\<^sub>p CN c' n' p') m\n    \\<le> max (degreen (CN c n p) m) (degreen (CN c' n' p') m)", "by simp"], ["proof (state)\nthis:\n  degreen (CN c n p +\\<^sub>p CN c' n' p') m\n  \\<le> max (degreen (CN c n p) m) (degreen (CN c' n' p') m)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  degreen (CN c n p +\\<^sub>p CN c' n' p') m\n  \\<le> max (degreen (CN c n p) m) (degreen (CN c' n' p') m)\n\ngoal (25 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p) m\n                         \\<le> max (degreen (c)\\<^sub>p m)\n                                (degreen (c')\\<^sub>p m)\n 2. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v +\\<^sub>p b) m\n                         \\<le> max (degreen (Bound v) m) (degreen b m)\n 3. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Add v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Add v va) m) (degreen b m)\n 4. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Sub v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Sub v va) m) (degreen b m)\n 5. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Mul v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Mul v va) m) (degreen b m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Neg v +\\<^sub>p b) m\n                         \\<le> max (degreen (Neg v) m) (degreen b m)\n 7. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Pw v va +\\<^sub>p b) m\n                         \\<le> max (degreen (Pw v va) m) (degreen b m)\n 8. \\<And>v va vb vc n0 n1 m.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN v va vb +\\<^sub>p Bound vc) m\n                         \\<le> max (degreen (CN v va vb) m)\n                                (degreen (Bound vc) m)\n 9. \\<And>v va vb vc vd n0 n1 m.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        m \\<le> max n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN v va vb +\\<^sub>p Add vc vd) m\n                         \\<le> max (degreen (CN v va vb) m)\n                                (degreen (Add vc vd) m)\n 10. \\<And>v va vb vc vd n0 n1 m.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         m \\<le> max n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (CN v va vb +\\<^sub>p Sub vc vd) m\n                          \\<le> max (degreen (CN v va vb) m)\n                                 (degreen (Sub vc vd) m)\nA total of 25 subgoals...", "qed auto"], ["", "lemma polyadd_eq_const_degreen:\n  assumes \"isnpolyh p n0\"\n    and \"isnpolyh q n1\"\n    and \"polyadd p q = C c\"\n  shows \"degreen p m = degreen q m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degreen p m = degreen q m", "using assms"], ["proof (prove)\nusing this:\n  isnpolyh p n0\n  isnpolyh q n1\n  p +\\<^sub>p q = (c)\\<^sub>p\n\ngoal (1 subgoal):\n 1. degreen p m = degreen q m", "proof (induct p q arbitrary: m n0 n1 c rule: polyadd.induct)"], ["proof (state)\ngoal (28 subgoals):\n 1. \\<And>c c' m n0 n1 ca.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p = (ca)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (c)\\<^sub>p m = degreen (c')\\<^sub>p m\n 2. \\<And>c c' n' p' m n0 n1 ca.\n       \\<lbrakk>\\<And>m n0 n1 ca.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    (c)\\<^sub>p +\\<^sub>p c' = (ca)\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> degreen (c)\\<^sub>p m = degreen c' m;\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        (c)\\<^sub>p +\\<^sub>p CN c' n' p' = (ca)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (c)\\<^sub>p m = degreen (CN c' n' p') m\n 3. \\<And>c n p c' m n0 n1 ca.\n       \\<lbrakk>\\<And>m n0 n1 ca.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    c +\\<^sub>p (c')\\<^sub>p = (ca)\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> degreen c m = degreen (c')\\<^sub>p m;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        CN c n p +\\<^sub>p (c')\\<^sub>p = (ca)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p) m = degreen (c')\\<^sub>p m\n 4. \\<And>c n p c' n' p' m n0 n1 ca.\n       \\<lbrakk>\\<And>m n0 n1 ca.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c +\\<^sub>p CN c' n' p' = (ca)\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> degreen c m = degreen (CN c' n' p') m;\n        \\<And>m n0 n1 ca.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p +\\<^sub>p c' = (ca)\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p) m = degreen c' m;\n        \\<And>m n0 n1 ca.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1;\n            c +\\<^sub>p c' = (ca)\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> degreen c m = degreen c' m;\n        \\<And>x m n0 n1 c.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1;\n            p +\\<^sub>p p' = (c)\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> degreen p m = degreen p' m;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p +\\<^sub>p CN c' n' p' = (ca)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p) m = degreen (CN c' n' p') m\n 5. \\<And>v b m n0 n1 c.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v) m = degreen b m\n 6. \\<And>v va b m n0 n1 c.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (Add v va) m = degreen b m\n 7. \\<And>v va b m n0 n1 c.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (Sub v va) m = degreen b m\n 8. \\<And>v va b m n0 n1 c.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (Mul v va) m = degreen b m\n 9. \\<And>v b m n0 n1 c.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (Neg v) m = degreen b m\n 10. \\<And>v va b m n0 n1 c.\n        \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n         Pw v va +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> degreen (Pw v va) m = degreen b m\nA total of 28 subgoals...", "case (4 c n p c' n' p' m n0 n1 x)"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   c +\\<^sub>p CN c' n' p' = (?c)\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> degreen c ?m = degreen (CN c' n' p') ?m\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   CN c n p +\\<^sub>p c' = (?c)\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p) ?m = degreen c' ?m\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0;\n   c +\\<^sub>p c' = (?c)\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> degreen c ?m = degreen c' ?m\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0;\n   p +\\<^sub>p p' = (?c)\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> degreen p ?m = degreen p' ?m\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  CN c n p +\\<^sub>p CN c' n' p' = (x)\\<^sub>p\n\ngoal (28 subgoals):\n 1. \\<And>c c' m n0 n1 ca.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p = (ca)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (c)\\<^sub>p m = degreen (c')\\<^sub>p m\n 2. \\<And>c c' n' p' m n0 n1 ca.\n       \\<lbrakk>\\<And>m n0 n1 ca.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    (c)\\<^sub>p +\\<^sub>p c' = (ca)\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> degreen (c)\\<^sub>p m = degreen c' m;\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        (c)\\<^sub>p +\\<^sub>p CN c' n' p' = (ca)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (c)\\<^sub>p m = degreen (CN c' n' p') m\n 3. \\<And>c n p c' m n0 n1 ca.\n       \\<lbrakk>\\<And>m n0 n1 ca.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    c +\\<^sub>p (c')\\<^sub>p = (ca)\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> degreen c m = degreen (c')\\<^sub>p m;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        CN c n p +\\<^sub>p (c')\\<^sub>p = (ca)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p) m = degreen (c')\\<^sub>p m\n 4. \\<And>c n p c' n' p' m n0 n1 ca.\n       \\<lbrakk>\\<And>m n0 n1 ca.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c +\\<^sub>p CN c' n' p' = (ca)\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> degreen c m = degreen (CN c' n' p') m;\n        \\<And>m n0 n1 ca.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p +\\<^sub>p c' = (ca)\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p) m = degreen c' m;\n        \\<And>m n0 n1 ca.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1;\n            c +\\<^sub>p c' = (ca)\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> degreen c m = degreen c' m;\n        \\<And>x m n0 n1 c.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1;\n            p +\\<^sub>p p' = (c)\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> degreen p m = degreen p' m;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p +\\<^sub>p CN c' n' p' = (ca)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p) m = degreen (CN c' n' p') m\n 5. \\<And>v b m n0 n1 c.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v) m = degreen b m\n 6. \\<And>v va b m n0 n1 c.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (Add v va) m = degreen b m\n 7. \\<And>v va b m n0 n1 c.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (Sub v va) m = degreen b m\n 8. \\<And>v va b m n0 n1 c.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (Mul v va) m = degreen b m\n 9. \\<And>v b m n0 n1 c.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (Neg v) m = degreen b m\n 10. \\<And>v va b m n0 n1 c.\n        \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n         Pw v va +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> degreen (Pw v va) m = degreen b m\nA total of 28 subgoals...", "consider \"n = n'\" | \"n > n' \\<or> n < n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = n' \\<Longrightarrow> thesis;\n     n' < n \\<or> n < n' \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by arith"], ["proof (state)\nthis:\n  \\<lbrakk>n = n' \\<Longrightarrow> ?thesis;\n   n' < n \\<or> n < n' \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (28 subgoals):\n 1. \\<And>c c' m n0 n1 ca.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p = (ca)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (c)\\<^sub>p m = degreen (c')\\<^sub>p m\n 2. \\<And>c c' n' p' m n0 n1 ca.\n       \\<lbrakk>\\<And>m n0 n1 ca.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    (c)\\<^sub>p +\\<^sub>p c' = (ca)\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> degreen (c)\\<^sub>p m = degreen c' m;\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        (c)\\<^sub>p +\\<^sub>p CN c' n' p' = (ca)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (c)\\<^sub>p m = degreen (CN c' n' p') m\n 3. \\<And>c n p c' m n0 n1 ca.\n       \\<lbrakk>\\<And>m n0 n1 ca.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    c +\\<^sub>p (c')\\<^sub>p = (ca)\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> degreen c m = degreen (c')\\<^sub>p m;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        CN c n p +\\<^sub>p (c')\\<^sub>p = (ca)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p) m = degreen (c')\\<^sub>p m\n 4. \\<And>c n p c' n' p' m n0 n1 ca.\n       \\<lbrakk>\\<And>m n0 n1 ca.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c +\\<^sub>p CN c' n' p' = (ca)\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> degreen c m = degreen (CN c' n' p') m;\n        \\<And>m n0 n1 ca.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p +\\<^sub>p c' = (ca)\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p) m = degreen c' m;\n        \\<And>m n0 n1 ca.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1;\n            c +\\<^sub>p c' = (ca)\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> degreen c m = degreen c' m;\n        \\<And>x m n0 n1 c.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1;\n            p +\\<^sub>p p' = (c)\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> degreen p m = degreen p' m;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p +\\<^sub>p CN c' n' p' = (ca)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p) m = degreen (CN c' n' p') m\n 5. \\<And>v b m n0 n1 c.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v) m = degreen b m\n 6. \\<And>v va b m n0 n1 c.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (Add v va) m = degreen b m\n 7. \\<And>v va b m n0 n1 c.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (Sub v va) m = degreen b m\n 8. \\<And>v va b m n0 n1 c.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (Mul v va) m = degreen b m\n 9. \\<And>v b m n0 n1 c.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (Neg v) m = degreen b m\n 10. \\<And>v va b m n0 n1 c.\n        \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n         Pw v va +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> degreen (Pw v va) m = degreen b m\nA total of 28 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>n = n' \\<Longrightarrow> ?thesis;\n   n' < n \\<or> n < n' \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>n = n' \\<Longrightarrow> ?thesis;\n   n' < n \\<or> n < n' \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. degreen (CN c n p) m = degreen (CN c' n' p') m", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. n = n' \\<Longrightarrow> degreen (CN c n p) m = degreen (CN c' n' p') m\n 2. n' < n \\<or> n < n' \\<Longrightarrow>\n    degreen (CN c n p) m = degreen (CN c' n' p') m", "case 1"], ["proof (state)\nthis:\n  n = n'\n\ngoal (2 subgoals):\n 1. n = n' \\<Longrightarrow> degreen (CN c n p) m = degreen (CN c' n' p') m\n 2. n' < n \\<or> n < n' \\<Longrightarrow>\n    degreen (CN c n p) m = degreen (CN c' n' p') m", "with 4"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   c +\\<^sub>p CN c' n' p' = (?c)\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> degreen c ?m = degreen (CN c' n' p') ?m\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   CN c n p +\\<^sub>p c' = (?c)\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p) ?m = degreen c' ?m\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0;\n   c +\\<^sub>p c' = (?c)\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> degreen c ?m = degreen c' ?m\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0;\n   p +\\<^sub>p p' = (?c)\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> degreen p ?m = degreen p' ?m\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  CN c n p +\\<^sub>p CN c' n' p' = (x)\\<^sub>p\n  n = n'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   c +\\<^sub>p CN c' n' p' = (?c)\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> degreen c ?m = degreen (CN c' n' p') ?m\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   CN c n p +\\<^sub>p c' = (?c)\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p) ?m = degreen c' ?m\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0;\n   c +\\<^sub>p c' = (?c)\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> degreen c ?m = degreen c' ?m\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0;\n   p +\\<^sub>p p' = (?c)\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> degreen p ?m = degreen p' ?m\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  CN c n p +\\<^sub>p CN c' n' p' = (x)\\<^sub>p\n  n = n'\n\ngoal (1 subgoal):\n 1. degreen (CN c n p) m = degreen (CN c' n' p') m", "by (cases \"p +\\<^sub>p p' = 0\\<^sub>p\") (auto simp add: Let_def)"], ["proof (state)\nthis:\n  degreen (CN c n p) m = degreen (CN c' n' p') m\n\ngoal (1 subgoal):\n 1. n' < n \\<or> n < n' \\<Longrightarrow>\n    degreen (CN c n p) m = degreen (CN c' n' p') m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n' < n \\<or> n < n' \\<Longrightarrow>\n    degreen (CN c n p) m = degreen (CN c' n' p') m", "case 2"], ["proof (state)\nthis:\n  n' < n \\<or> n < n'\n\ngoal (1 subgoal):\n 1. n' < n \\<or> n < n' \\<Longrightarrow>\n    degreen (CN c n p) m = degreen (CN c' n' p') m", "with 4"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   c +\\<^sub>p CN c' n' p' = (?c)\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> degreen c ?m = degreen (CN c' n' p') ?m\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   CN c n p +\\<^sub>p c' = (?c)\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p) ?m = degreen c' ?m\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0;\n   c +\\<^sub>p c' = (?c)\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> degreen c ?m = degreen c' ?m\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0;\n   p +\\<^sub>p p' = (?c)\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> degreen p ?m = degreen p' ?m\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  CN c n p +\\<^sub>p CN c' n' p' = (x)\\<^sub>p\n  n' < n \\<or> n < n'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   c +\\<^sub>p CN c' n' p' = (?c)\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> degreen c ?m = degreen (CN c' n' p') ?m\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   CN c n p +\\<^sub>p c' = (?c)\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p) ?m = degreen c' ?m\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh c' ?n1.0;\n   c +\\<^sub>p c' = (?c)\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> degreen c ?m = degreen c' ?m\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh p' ?n1.0;\n   p +\\<^sub>p p' = (?c)\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> degreen p ?m = degreen p' ?m\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  CN c n p +\\<^sub>p CN c' n' p' = (x)\\<^sub>p\n  n' < n \\<or> n < n'\n\ngoal (1 subgoal):\n 1. degreen (CN c n p) m = degreen (CN c' n' p') m", "by auto"], ["proof (state)\nthis:\n  degreen (CN c n p) m = degreen (CN c' n' p') m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  degreen (CN c n p) m = degreen (CN c' n' p') m\n\ngoal (27 subgoals):\n 1. \\<And>c c' m n0 n1 ca.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p = (ca)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (c)\\<^sub>p m = degreen (c')\\<^sub>p m\n 2. \\<And>c c' n' p' m n0 n1 ca.\n       \\<lbrakk>\\<And>m n0 n1 ca.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    (c)\\<^sub>p +\\<^sub>p c' = (ca)\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> degreen (c)\\<^sub>p m = degreen c' m;\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        (c)\\<^sub>p +\\<^sub>p CN c' n' p' = (ca)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (c)\\<^sub>p m = degreen (CN c' n' p') m\n 3. \\<And>c n p c' m n0 n1 ca.\n       \\<lbrakk>\\<And>m n0 n1 ca.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    c +\\<^sub>p (c')\\<^sub>p = (ca)\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> degreen c m = degreen (c')\\<^sub>p m;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        CN c n p +\\<^sub>p (c')\\<^sub>p = (ca)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p) m = degreen (c')\\<^sub>p m\n 4. \\<And>v b m n0 n1 c.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v) m = degreen b m\n 5. \\<And>v va b m n0 n1 c.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (Add v va) m = degreen b m\n 6. \\<And>v va b m n0 n1 c.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (Sub v va) m = degreen b m\n 7. \\<And>v va b m n0 n1 c.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (Mul v va) m = degreen b m\n 8. \\<And>v b m n0 n1 c.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (Neg v) m = degreen b m\n 9. \\<And>v va b m n0 n1 c.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va +\\<^sub>p b = (c)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> degreen (Pw v va) m = degreen b m\n 10. \\<And>v va vb vc m n0 n1 c.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n         CN v va vb +\\<^sub>p Bound vc = (c)\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> degreen (CN v va vb) m = degreen (Bound vc) m\nA total of 27 subgoals...", "qed simp_all"], ["", "lemma polymul_properties:\nfixes p::\"'a::field poly\"\n  assumes np: \"isnpolyh p n0\"\n      and nq: \"isnpolyh q n1\"\n      and m: \"m \\<le> min n0 n1\"\n  shows \"isnpolyh (p *\\<^sub>p q) (min n0 n1)\"\n    and \"p *\\<^sub>p q = 0\\<^sub>p \\<longleftrightarrow> p = 0\\<^sub>p \\<or> q = 0\\<^sub>p\"\n    and \"degreen (p *\\<^sub>p q) m = (if p = 0\\<^sub>p \\<or> q = 0\\<^sub>p then 0 else degreen p m + degreen q m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh (p *\\<^sub>p q) (min n0 n1) &&&\n    (p *\\<^sub>p q = 0\\<^sub>p) = (p = 0\\<^sub>p \\<or> q = 0\\<^sub>p) &&&\n    degreen (p *\\<^sub>p q) m =\n    (if p = 0\\<^sub>p \\<or> q = 0\\<^sub>p then 0\n     else degreen p m + degreen q m)", "using np nq m"], ["proof (prove)\nusing this:\n  isnpolyh p n0\n  isnpolyh q n1\n  m \\<le> min n0 n1\n\ngoal (1 subgoal):\n 1. isnpolyh (p *\\<^sub>p q) (min n0 n1) &&&\n    (p *\\<^sub>p q = 0\\<^sub>p) = (p = 0\\<^sub>p \\<or> q = 0\\<^sub>p) &&&\n    degreen (p *\\<^sub>p q) m =\n    (if p = 0\\<^sub>p \\<or> q = 0\\<^sub>p then 0\n     else degreen p m + degreen q m)", "proof (induct p q arbitrary: n0 n1 m rule: polymul.induct)"], ["proof (state)\ngoal (84 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 c' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p')\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 p' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen p' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 c' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p')\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 p' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen p' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 c' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p')\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 p' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen p' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p CN c' n' p') m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 8. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 9. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (c')\\<^sub>p m)\n 10. \\<And>c n p c' n' p' n0 n1 m.\n        \\<lbrakk>\\<And>n0 n1 m.\n                    \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                     m \\<le> min n0 n1\\<rbrakk>\n                    \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                              (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                              (if c = 0\\<^sub>p \\<or>\n                                  CN c' n' p' = 0\\<^sub>p\n                               then 0\n                               else degreen c m + degreen (CN c' n' p') m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p')\n                               (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                              (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                              (if p = 0\\<^sub>p \\<or>\n                                  CN c' n' p' = 0\\<^sub>p\n                               then 0\n                               else degreen p m + degreen (CN c' n' p') m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen c' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen p' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen c' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen p' m);\n         isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                           (min n0 n1)\nA total of 84 subgoals...", "case (2 c c' n' p')"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                    ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') ?m =\n                    (if (c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p then 0\n                     else degreen (c)\\<^sub>p ?m + degreen c' ?m)\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                    ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') ?m =\n                    (if (c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n                     else degreen (c)\\<^sub>p ?m + degreen p' ?m)\n\ngoal (84 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 c' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p')\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 p' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen p' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 c' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p')\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 p' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen p' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 c' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p')\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 p' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen p' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p CN c' n' p') m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 8. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 9. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (c')\\<^sub>p m)\n 10. \\<And>c n p c' n' p' n0 n1 m.\n        \\<lbrakk>\\<And>n0 n1 m.\n                    \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                     m \\<le> min n0 n1\\<rbrakk>\n                    \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                              (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                              (if c = 0\\<^sub>p \\<or>\n                                  CN c' n' p' = 0\\<^sub>p\n                               then 0\n                               else degreen c m + degreen (CN c' n' p') m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p')\n                               (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                              (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                              (if p = 0\\<^sub>p \\<or>\n                                  CN c' n' p' = 0\\<^sub>p\n                               then 0\n                               else degreen p m + degreen (CN c' n' p') m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen c' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen p' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen c' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen p' m);\n         isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                           (min n0 n1)\nA total of 84 subgoals...", "{"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                    ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') ?m =\n                    (if (c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p then 0\n                     else degreen (c)\\<^sub>p ?m + degreen c' ?m)\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                    ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') ?m =\n                    (if (c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n                     else degreen (c)\\<^sub>p ?m + degreen p' ?m)\n\ngoal (84 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 c' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p')\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 p' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen p' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 c' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p')\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 p' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen p' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 c' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p')\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 p' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen p' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p CN c' n' p') m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 8. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 9. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (c')\\<^sub>p m)\n 10. \\<And>c n p c' n' p' n0 n1 m.\n        \\<lbrakk>\\<And>n0 n1 m.\n                    \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                     m \\<le> min n0 n1\\<rbrakk>\n                    \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                              (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                              (if c = 0\\<^sub>p \\<or>\n                                  CN c' n' p' = 0\\<^sub>p\n                               then 0\n                               else degreen c m + degreen (CN c' n' p') m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p')\n                               (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                              (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                              (if p = 0\\<^sub>p \\<or>\n                                  CN c' n' p' = 0\\<^sub>p\n                               then 0\n                               else degreen p m + degreen (CN c' n' p') m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen c' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen p' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen c' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen p' m);\n         isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                           (min n0 n1)\nA total of 84 subgoals...", "case (1 n0 n1)"], ["proof (state)\nthis:\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> min n0 n1\n\ngoal (84 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 c' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p')\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 p' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen p' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 c' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p')\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 p' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen p' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 c' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p')\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 p' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen p' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p CN c' n' p') m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 8. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 9. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (c')\\<^sub>p m)\n 10. \\<And>c n p c' n' p' n0 n1 m.\n        \\<lbrakk>\\<And>n0 n1 m.\n                    \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                     m \\<le> min n0 n1\\<rbrakk>\n                    \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                              (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                              (if c = 0\\<^sub>p \\<or>\n                                  CN c' n' p' = 0\\<^sub>p\n                               then 0\n                               else degreen c m + degreen (CN c' n' p') m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p')\n                               (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                              (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                              (if p = 0\\<^sub>p \\<or>\n                                  CN c' n' p' = 0\\<^sub>p\n                               then 0\n                               else degreen p m + degreen (CN c' n' p') m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen c' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen p' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen c' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen p' m);\n         isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                           (min n0 n1)\nA total of 84 subgoals...", "with \"2.hyps\"(4-6)[of n' n' n'] and \"2.hyps\"(1-3)[of \"Suc n'\" \"Suc n'\" n']"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh (c)\\<^sub>p n'; isnpolyh p' n';\n   n' \\<le> min n' n'\\<rbrakk>\n  \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p') (min n' n')\n  \\<lbrakk>isnpolyh (c)\\<^sub>p n'; isnpolyh p' n';\n   n' \\<le> min n' n'\\<rbrakk>\n  \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                    ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh (c)\\<^sub>p n'; isnpolyh p' n';\n   n' \\<le> min n' n'\\<rbrakk>\n  \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') n' =\n                    (if (c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n                     else degreen (c)\\<^sub>p n' + degreen p' n')\n  \\<lbrakk>isnpolyh (c)\\<^sub>p (Suc n'); isnpolyh c' (Suc n');\n   n' \\<le> min (Suc n') (Suc n')\\<rbrakk>\n  \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c')\n                     (min (Suc n') (Suc n'))\n  \\<lbrakk>isnpolyh (c)\\<^sub>p (Suc n'); isnpolyh c' (Suc n');\n   n' \\<le> min (Suc n') (Suc n')\\<rbrakk>\n  \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                    ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh (c)\\<^sub>p (Suc n'); isnpolyh c' (Suc n');\n   n' \\<le> min (Suc n') (Suc n')\\<rbrakk>\n  \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') n' =\n                    (if (c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p then 0\n                     else degreen (c)\\<^sub>p n' + degreen c' n')\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> min n0 n1", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh (c)\\<^sub>p n'; isnpolyh p' n';\n   n' \\<le> min n' n'\\<rbrakk>\n  \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p') (min n' n')\n  \\<lbrakk>isnpolyh (c)\\<^sub>p n'; isnpolyh p' n';\n   n' \\<le> min n' n'\\<rbrakk>\n  \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                    ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh (c)\\<^sub>p n'; isnpolyh p' n';\n   n' \\<le> min n' n'\\<rbrakk>\n  \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') n' =\n                    (if (c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n                     else degreen (c)\\<^sub>p n' + degreen p' n')\n  \\<lbrakk>isnpolyh (c)\\<^sub>p (Suc n'); isnpolyh c' (Suc n');\n   n' \\<le> min (Suc n') (Suc n')\\<rbrakk>\n  \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c')\n                     (min (Suc n') (Suc n'))\n  \\<lbrakk>isnpolyh (c)\\<^sub>p (Suc n'); isnpolyh c' (Suc n');\n   n' \\<le> min (Suc n') (Suc n')\\<rbrakk>\n  \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                    ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh (c)\\<^sub>p (Suc n'); isnpolyh c' (Suc n');\n   n' \\<le> min (Suc n') (Suc n')\\<rbrakk>\n  \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') n' =\n                    (if (c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p then 0\n                     else degreen (c)\\<^sub>p n' + degreen c' n')\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> min n0 n1\n\ngoal (1 subgoal):\n 1. isnpolyh ((c)\\<^sub>p *\\<^sub>p CN c' n' p') (min n0 n1)", "by (auto simp add: min_def)"], ["proof (state)\nthis:\n  isnpolyh ((c)\\<^sub>p *\\<^sub>p CN c' n' p') (min n0 n1)\n\ngoal (83 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 c' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p')\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 p' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen p' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 c' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p')\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 p' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen p' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p CN c' n' p') m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 7. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 8. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (c')\\<^sub>p m)\n 9. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 10. \\<And>c n p c' n' p' n0 n1 m.\n        \\<lbrakk>\\<And>n0 n1 m.\n                    \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                     m \\<le> min n0 n1\\<rbrakk>\n                    \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                              (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                              (if c = 0\\<^sub>p \\<or>\n                                  CN c' n' p' = 0\\<^sub>p\n                               then 0\n                               else degreen c m + degreen (CN c' n' p') m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p')\n                               (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                              (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                              (if p = 0\\<^sub>p \\<or>\n                                  CN c' n' p' = 0\\<^sub>p\n                               then 0\n                               else degreen p m + degreen (CN c' n' p') m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen c' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen p' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen c' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen p' m);\n         isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                          (CN c n p = 0\\<^sub>p \\<or>\n                           CN c' n' p' = 0\\<^sub>p)\nA total of 83 subgoals...", "next"], ["proof (state)\ngoal (83 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 c' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p')\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 p' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen p' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 c' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p')\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 p' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen p' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p CN c' n' p') m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 7. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 8. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (c')\\<^sub>p m)\n 9. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 10. \\<And>c n p c' n' p' n0 n1 m.\n        \\<lbrakk>\\<And>n0 n1 m.\n                    \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                     m \\<le> min n0 n1\\<rbrakk>\n                    \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                              (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                              (if c = 0\\<^sub>p \\<or>\n                                  CN c' n' p' = 0\\<^sub>p\n                               then 0\n                               else degreen c m + degreen (CN c' n' p') m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p')\n                               (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                              (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                              (if p = 0\\<^sub>p \\<or>\n                                  CN c' n' p' = 0\\<^sub>p\n                               then 0\n                               else degreen p m + degreen (CN c' n' p') m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen c' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen p' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen c' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen p' m);\n         isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                          (CN c n p = 0\\<^sub>p \\<or>\n                           CN c' n' p' = 0\\<^sub>p)\nA total of 83 subgoals...", "case (2 n0 n1)"], ["proof (state)\nthis:\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> min n0 n1\n\ngoal (83 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 c' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p')\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 p' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen p' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 c' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p')\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 p' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen p' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p CN c' n' p') m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 7. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 8. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (c')\\<^sub>p m)\n 9. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 10. \\<And>c n p c' n' p' n0 n1 m.\n        \\<lbrakk>\\<And>n0 n1 m.\n                    \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                     m \\<le> min n0 n1\\<rbrakk>\n                    \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                              (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                              (if c = 0\\<^sub>p \\<or>\n                                  CN c' n' p' = 0\\<^sub>p\n                               then 0\n                               else degreen c m + degreen (CN c' n' p') m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p')\n                               (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                              (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                              (if p = 0\\<^sub>p \\<or>\n                                  CN c' n' p' = 0\\<^sub>p\n                               then 0\n                               else degreen p m + degreen (CN c' n' p') m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen c' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen p' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen c' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen p' m);\n         isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                          (CN c n p = 0\\<^sub>p \\<or>\n                           CN c' n' p' = 0\\<^sub>p)\nA total of 83 subgoals...", "then"], ["proof (chain)\npicking this:\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> min n0 n1", "show ?case"], ["proof (prove)\nusing this:\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> min n0 n1\n\ngoal (1 subgoal):\n 1. ((c)\\<^sub>p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n    ((c)\\<^sub>p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p)", "by auto"], ["proof (state)\nthis:\n  ((c)\\<^sub>p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n  ((c)\\<^sub>p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p)\n\ngoal (82 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 c' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p')\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 p' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen p' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p CN c' n' p') m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (CN c' n' p') m)\n 5. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 6. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 7. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (c')\\<^sub>p m)\n 8. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 9. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 10. \\<And>c n p c' n' p' n0 n1 m.\n        \\<lbrakk>\\<And>n0 n1 m.\n                    \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                     m \\<le> min n0 n1\\<rbrakk>\n                    \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                              (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                              (if c = 0\\<^sub>p \\<or>\n                                  CN c' n' p' = 0\\<^sub>p\n                               then 0\n                               else degreen c m + degreen (CN c' n' p') m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p')\n                               (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                              (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                              (if p = 0\\<^sub>p \\<or>\n                                  CN c' n' p' = 0\\<^sub>p\n                               then 0\n                               else degreen p m + degreen (CN c' n' p') m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen c' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen p' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen c' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen p' m);\n         isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                          (if CN c n p = 0\\<^sub>p \\<or>\n                              CN c' n' p' = 0\\<^sub>p\n                           then 0\n                           else degreen (CN c n p) m +\n                                degreen (CN c' n' p') m)\nA total of 82 subgoals...", "next"], ["proof (state)\ngoal (82 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 c' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p')\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 p' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen p' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p CN c' n' p') m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (CN c' n' p') m)\n 5. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 6. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 7. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (c')\\<^sub>p m)\n 8. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 9. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 10. \\<And>c n p c' n' p' n0 n1 m.\n        \\<lbrakk>\\<And>n0 n1 m.\n                    \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                     m \\<le> min n0 n1\\<rbrakk>\n                    \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                              (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                              (if c = 0\\<^sub>p \\<or>\n                                  CN c' n' p' = 0\\<^sub>p\n                               then 0\n                               else degreen c m + degreen (CN c' n' p') m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p')\n                               (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                              (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                              (if p = 0\\<^sub>p \\<or>\n                                  CN c' n' p' = 0\\<^sub>p\n                               then 0\n                               else degreen p m + degreen (CN c' n' p') m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen c' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen p' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen c' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen p' m);\n         isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                          (if CN c n p = 0\\<^sub>p \\<or>\n                              CN c' n' p' = 0\\<^sub>p\n                           then 0\n                           else degreen (CN c n p) m +\n                                degreen (CN c' n' p') m)\nA total of 82 subgoals...", "case (3 n0 n1)"], ["proof (state)\nthis:\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> min n0 n1\n\ngoal (82 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 c' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p')\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                             ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') m =\n                             (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                                 p' = 0\\<^sub>p\n                              then 0\n                              else degreen (c)\\<^sub>p m + degreen p' m);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p CN c' n' p') m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (CN c' n' p') m)\n 5. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 6. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 7. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (c')\\<^sub>p m)\n 8. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 9. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 10. \\<And>c n p c' n' p' n0 n1 m.\n        \\<lbrakk>\\<And>n0 n1 m.\n                    \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                     m \\<le> min n0 n1\\<rbrakk>\n                    \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                              (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                              (if c = 0\\<^sub>p \\<or>\n                                  CN c' n' p' = 0\\<^sub>p\n                               then 0\n                               else degreen c m + degreen (CN c' n' p') m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p')\n                               (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                              (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                              (if p = 0\\<^sub>p \\<or>\n                                  CN c' n' p' = 0\\<^sub>p\n                               then 0\n                               else degreen p m + degreen (CN c' n' p') m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen c' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen p' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen c' m);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                              (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n         \\<And>n0 n1 m.\n            \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n             m \\<le> min n0 n1\\<rbrakk>\n            \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                              (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                               then 0\n                               else degreen (CN c n p) m + degreen p' m);\n         isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                          (if CN c n p = 0\\<^sub>p \\<or>\n                              CN c' n' p' = 0\\<^sub>p\n                           then 0\n                           else degreen (CN c n p) m +\n                                degreen (CN c' n' p') m)\nA total of 82 subgoals...", "then"], ["proof (chain)\npicking this:\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> min n0 n1", "show ?case"], ["proof (prove)\nusing this:\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> min n0 n1\n\ngoal (1 subgoal):\n 1. degreen ((c)\\<^sub>p *\\<^sub>p CN c' n' p') m =\n    (if (c)\\<^sub>p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n     else degreen (c)\\<^sub>p m + degreen (CN c' n' p') m)", "using \"2.hyps\""], ["proof (prove)\nusing this:\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> min n0 n1\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p c' = 0\\<^sub>p) =\n                    ((c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p c') ?m =\n                    (if (c)\\<^sub>p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p then 0\n                     else degreen (c)\\<^sub>p ?m + degreen c' ?m)\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p p' = 0\\<^sub>p) =\n                    ((c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p p') ?m =\n                    (if (c)\\<^sub>p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n                     else degreen (c)\\<^sub>p ?m + degreen p' ?m)\n\ngoal (1 subgoal):\n 1. degreen ((c)\\<^sub>p *\\<^sub>p CN c' n' p') m =\n    (if (c)\\<^sub>p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n     else degreen (c)\\<^sub>p m + degreen (CN c' n' p') m)", "by auto"], ["proof (state)\nthis:\n  degreen ((c)\\<^sub>p *\\<^sub>p CN c' n' p') m =\n  (if (c)\\<^sub>p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n   else degreen (c)\\<^sub>p m + degreen (CN c' n' p') m)\n\ngoal (81 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 5. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 6. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (c')\\<^sub>p m)\n 7. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 8. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 9. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 10. \\<And>v b n0 n1 m.\n        \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\nA total of 81 subgoals...", "}"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0a2; isnpolyh (CN c' n' p') ?n1a2;\n   ?ma2 \\<le> min ?n0a2 ?n1a2\\<rbrakk>\n  \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p CN c' n' p') ?ma2 =\n                    (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                        CN c' n' p' = 0\\<^sub>p\n                     then 0\n                     else degreen (c)\\<^sub>p ?ma2 +\n                          degreen (CN c' n' p') ?ma2)\n\ngoal (81 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 5. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 6. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (c')\\<^sub>p m)\n 7. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 8. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 9. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 10. \\<And>v b n0 n1 m.\n        \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\nA total of 81 subgoals...", "next"], ["proof (state)\ngoal (81 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 5. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 6. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (c')\\<^sub>p m)\n 7. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 8. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 9. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 10. \\<And>v b n0 n1 m.\n        \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\nA total of 81 subgoals...", "case (3 c n p c')"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p) (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                    (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) ?m =\n                    (if c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p then 0\n                     else degreen c ?m + degreen (c')\\<^sub>p ?m)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p) (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                    (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) ?m =\n                    (if p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p then 0\n                     else degreen p ?m + degreen (c')\\<^sub>p ?m)\n\ngoal (81 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 5. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 6. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (c')\\<^sub>p m)\n 7. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 8. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 9. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 10. \\<And>v b n0 n1 m.\n        \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\nA total of 81 subgoals...", "{"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p) (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                    (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) ?m =\n                    (if c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p then 0\n                     else degreen c ?m + degreen (c')\\<^sub>p ?m)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p) (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                    (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) ?m =\n                    (if p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p then 0\n                     else degreen p ?m + degreen (c')\\<^sub>p ?m)\n\ngoal (81 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 5. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 6. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (c')\\<^sub>p m)\n 7. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 8. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 9. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 10. \\<And>v b n0 n1 m.\n        \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\nA total of 81 subgoals...", "case (1 n0 n1)"], ["proof (state)\nthis:\n  isnpolyh (CN c n p) n0\n  isnpolyh (c')\\<^sub>p n1\n  m \\<le> min n0 n1\n\ngoal (81 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 5. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 6. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (c')\\<^sub>p m)\n 7. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 8. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 9. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 10. \\<And>v b n0 n1 m.\n        \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\nA total of 81 subgoals...", "with \"3.hyps\"(4-6)[of n n n] and \"3.hyps\"(1-3)[of \"Suc n\" \"Suc n\" n]"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh p n; isnpolyh (c')\\<^sub>p n; n \\<le> min n n\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p) (min n n)\n  \\<lbrakk>isnpolyh p n; isnpolyh (c')\\<^sub>p n; n \\<le> min n n\\<rbrakk>\n  \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                    (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh p n; isnpolyh (c')\\<^sub>p n; n \\<le> min n n\\<rbrakk>\n  \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) n =\n                    (if p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p then 0\n                     else degreen p n + degreen (c')\\<^sub>p n)\n  \\<lbrakk>isnpolyh c (Suc n); isnpolyh (c')\\<^sub>p (Suc n);\n   n \\<le> min (Suc n) (Suc n)\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n                     (min (Suc n) (Suc n))\n  \\<lbrakk>isnpolyh c (Suc n); isnpolyh (c')\\<^sub>p (Suc n);\n   n \\<le> min (Suc n) (Suc n)\\<rbrakk>\n  \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                    (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh c (Suc n); isnpolyh (c')\\<^sub>p (Suc n);\n   n \\<le> min (Suc n) (Suc n)\\<rbrakk>\n  \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) n =\n                    (if c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p then 0\n                     else degreen c n + degreen (c')\\<^sub>p n)\n  isnpolyh (CN c n p) n0\n  isnpolyh (c')\\<^sub>p n1\n  m \\<le> min n0 n1", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh p n; isnpolyh (c')\\<^sub>p n; n \\<le> min n n\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p) (min n n)\n  \\<lbrakk>isnpolyh p n; isnpolyh (c')\\<^sub>p n; n \\<le> min n n\\<rbrakk>\n  \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                    (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh p n; isnpolyh (c')\\<^sub>p n; n \\<le> min n n\\<rbrakk>\n  \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) n =\n                    (if p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p then 0\n                     else degreen p n + degreen (c')\\<^sub>p n)\n  \\<lbrakk>isnpolyh c (Suc n); isnpolyh (c')\\<^sub>p (Suc n);\n   n \\<le> min (Suc n) (Suc n)\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n                     (min (Suc n) (Suc n))\n  \\<lbrakk>isnpolyh c (Suc n); isnpolyh (c')\\<^sub>p (Suc n);\n   n \\<le> min (Suc n) (Suc n)\\<rbrakk>\n  \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                    (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh c (Suc n); isnpolyh (c')\\<^sub>p (Suc n);\n   n \\<le> min (Suc n) (Suc n)\\<rbrakk>\n  \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) n =\n                    (if c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p then 0\n                     else degreen c n + degreen (c')\\<^sub>p n)\n  isnpolyh (CN c n p) n0\n  isnpolyh (c')\\<^sub>p n1\n  m \\<le> min n0 n1\n\ngoal (1 subgoal):\n 1. isnpolyh (CN c n p *\\<^sub>p (c')\\<^sub>p) (min n0 n1)", "by (auto simp add: min_def)"], ["proof (state)\nthis:\n  isnpolyh (CN c n p *\\<^sub>p (c')\\<^sub>p) (min n0 n1)\n\ngoal (80 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 5. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (c')\\<^sub>p m)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 7. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 8. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v b n0 n1 m.\n        \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                          (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 80 subgoals...", "next"], ["proof (state)\ngoal (80 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 5. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (c')\\<^sub>p m)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 7. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 8. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v b n0 n1 m.\n        \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                          (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 80 subgoals...", "case (2 n0 n1)"], ["proof (state)\nthis:\n  isnpolyh (CN c n p) n0\n  isnpolyh (c')\\<^sub>p n1\n  m \\<le> min n0 n1\n\ngoal (80 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 5. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (c')\\<^sub>p m)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 7. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 8. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v b n0 n1 m.\n        \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                          (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 80 subgoals...", "then"], ["proof (chain)\npicking this:\n  isnpolyh (CN c n p) n0\n  isnpolyh (c')\\<^sub>p n1\n  m \\<le> min n0 n1", "show ?case"], ["proof (prove)\nusing this:\n  isnpolyh (CN c n p) n0\n  isnpolyh (c')\\<^sub>p n1\n  m \\<le> min n0 n1\n\ngoal (1 subgoal):\n 1. (CN c n p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n    (CN c n p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p)", "by auto"], ["proof (state)\nthis:\n  (CN c n p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p)\n\ngoal (79 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (c')\\<^sub>p m)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 7. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 10. \\<And>v b n0 n1 m.\n        \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                          (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                           else degreen (Bound v) m + degreen b m)\nA total of 79 subgoals...", "next"], ["proof (state)\ngoal (79 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (c')\\<^sub>p m)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 7. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 10. \\<And>v b n0 n1 m.\n        \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                          (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                           else degreen (Bound v) m + degreen b m)\nA total of 79 subgoals...", "case (3 n0 n1)"], ["proof (state)\nthis:\n  isnpolyh (CN c n p) n0\n  isnpolyh (c')\\<^sub>p n1\n  m \\<le> min n0 n1\n\ngoal (79 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p)\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) m =\n                             (if c = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (c')\\<^sub>p m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p)\n                              (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) m =\n                             (if p = 0\\<^sub>p \\<or>\n                                 (c')\\<^sub>p = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (c')\\<^sub>p m);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (c')\\<^sub>p m)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 7. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 10. \\<And>v b n0 n1 m.\n        \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                          (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                           else degreen (Bound v) m + degreen b m)\nA total of 79 subgoals...", "then"], ["proof (chain)\npicking this:\n  isnpolyh (CN c n p) n0\n  isnpolyh (c')\\<^sub>p n1\n  m \\<le> min n0 n1", "show ?case"], ["proof (prove)\nusing this:\n  isnpolyh (CN c n p) n0\n  isnpolyh (c')\\<^sub>p n1\n  m \\<le> min n0 n1\n\ngoal (1 subgoal):\n 1. degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n    (if CN c n p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p then 0\n     else degreen (CN c n p) m + degreen (c')\\<^sub>p m)", "using \"3.hyps\""], ["proof (prove)\nusing this:\n  isnpolyh (CN c n p) n0\n  isnpolyh (c')\\<^sub>p n1\n  m \\<le> min n0 n1\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c *\\<^sub>p (c')\\<^sub>p) (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> (c *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                    (c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (c *\\<^sub>p (c')\\<^sub>p) ?m =\n                    (if c = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p then 0\n                     else degreen c ?m + degreen (c')\\<^sub>p ?m)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p *\\<^sub>p (c')\\<^sub>p) (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> (p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                    (p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (p *\\<^sub>p (c')\\<^sub>p) ?m =\n                    (if p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p then 0\n                     else degreen p ?m + degreen (c')\\<^sub>p ?m)\n\ngoal (1 subgoal):\n 1. degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n    (if CN c n p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p then 0\n     else degreen (CN c n p) m + degreen (c')\\<^sub>p m)", "by auto"], ["proof (state)\nthis:\n  degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) m =\n  (if CN c n p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen (c')\\<^sub>p m)\n\ngoal (78 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\nA total of 78 subgoals...", "}"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh (CN c n p) ?n0a2; isnpolyh (c')\\<^sub>p ?n1a2;\n   ?ma2 \\<le> min ?n0a2 ?n1a2\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p *\\<^sub>p (c')\\<^sub>p) ?ma2 =\n                    (if CN c n p = 0\\<^sub>p \\<or> (c')\\<^sub>p = 0\\<^sub>p\n                     then 0\n                     else degreen (CN c n p) ?ma2 +\n                          degreen (c')\\<^sub>p ?ma2)\n\ngoal (78 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\nA total of 78 subgoals...", "next"], ["proof (state)\ngoal (78 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\nA total of 78 subgoals...", "case (4 c n p c' n' p')"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                    (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') ?m =\n                    (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n                     else degreen c ?m + degreen (CN c' n' p') ?m)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                    (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') ?m =\n                    (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n                     else degreen p ?m + degreen (CN c' n' p') ?m)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                    (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') ?m =\n                    (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p then 0\n                     else degreen (CN c n p) ?m + degreen c' ?m)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                    (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') ?m =\n                    (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n                     else degreen (CN c n p) ?m + degreen p' ?m)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                    (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') ?m =\n                    (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p then 0\n                     else degreen (CN c n p) ?m + degreen c' ?m)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                    (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') ?m =\n                    (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n                     else degreen (CN c n p) ?m + degreen p' ?m)\n\ngoal (78 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\nA total of 78 subgoals...", "let ?cnp = \"CN c n p\""], ["proof (state)\ngoal (78 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\nA total of 78 subgoals...", "let ?cnp' = \"CN c' n' p'\""], ["proof (state)\ngoal (78 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\nA total of 78 subgoals...", "{"], ["proof (state)\ngoal (78 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\nA total of 78 subgoals...", "case (1 n0 n1)"], ["proof (state)\nthis:\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> min n0 n1\n\ngoal (78 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\nA total of 78 subgoals...", "then"], ["proof (chain)\npicking this:\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> min n0 n1", "have cnp: \"isnpolyh ?cnp n\"\n      and cnp': \"isnpolyh ?cnp' n'\"\n      and np: \"isnpolyh p n\"\n      and nc: \"isnpolyh c (Suc n)\"\n      and np': \"isnpolyh p' n'\"\n      and nc': \"isnpolyh c' (Suc n')\"\n      and nn0: \"n \\<ge> n0\"\n      and nn1: \"n' \\<ge> n1\""], ["proof (prove)\nusing this:\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> min n0 n1\n\ngoal (1 subgoal):\n 1. ((isnpolyh (CN c n p) n &&& isnpolyh (CN c' n' p') n') &&&\n     isnpolyh p n &&& isnpolyh c (Suc n)) &&&\n    (isnpolyh p' n' &&& isnpolyh c' (Suc n')) &&& n0 \\<le> n &&& n1 \\<le> n'", "by simp_all"], ["proof (state)\nthis:\n  isnpolyh (CN c n p) n\n  isnpolyh (CN c' n' p') n'\n  isnpolyh p n\n  isnpolyh c (Suc n)\n  isnpolyh p' n'\n  isnpolyh c' (Suc n')\n  n0 \\<le> n\n  n1 \\<le> n'\n\ngoal (78 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\nA total of 78 subgoals...", "{"], ["proof (state)\nthis:\n  isnpolyh (CN c n p) n\n  isnpolyh (CN c' n' p') n'\n  isnpolyh p n\n  isnpolyh c (Suc n)\n  isnpolyh p' n'\n  isnpolyh c' (Suc n')\n  n0 \\<le> n\n  n1 \\<le> n'\n\ngoal (78 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\nA total of 78 subgoals...", "assume \"n < n'\""], ["proof (state)\nthis:\n  n < n'\n\ngoal (78 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\nA total of 78 subgoals...", "with \"4.hyps\"(4-5)[OF np cnp', of n] and \"4.hyps\"(1)[OF nc cnp', of n] nn0 cnp"], ["proof (chain)\npicking this:\n  n \\<le> min n n' \\<Longrightarrow>\n  isnpolyh (p *\\<^sub>p CN c' n' p') (min n n')\n  n \\<le> min n n' \\<Longrightarrow>\n  (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n  (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p)\n  n \\<le> min (Suc n) n' \\<Longrightarrow>\n  isnpolyh (c *\\<^sub>p CN c' n' p') (min (Suc n) n')\n  n0 \\<le> n\n  isnpolyh (CN c n p) n\n  n < n'", "have ?case"], ["proof (prove)\nusing this:\n  n \\<le> min n n' \\<Longrightarrow>\n  isnpolyh (p *\\<^sub>p CN c' n' p') (min n n')\n  n \\<le> min n n' \\<Longrightarrow>\n  (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n  (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p)\n  n \\<le> min (Suc n) n' \\<Longrightarrow>\n  isnpolyh (c *\\<^sub>p CN c' n' p') (min (Suc n) n')\n  n0 \\<le> n\n  isnpolyh (CN c n p) n\n  n < n'\n\ngoal (1 subgoal):\n 1. isnpolyh (CN c n p *\\<^sub>p CN c' n' p') (min n0 n1)", "by (simp add: min_def)"], ["proof (state)\nthis:\n  isnpolyh (CN c n p *\\<^sub>p CN c' n' p') (min n0 n1)\n\ngoal (78 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\nA total of 78 subgoals...", "}"], ["proof (state)\nthis:\n  n < n' \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p CN c' n' p') (min n0 n1)\n\ngoal (78 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\nA total of 78 subgoals...", "moreover"], ["proof (state)\nthis:\n  n < n' \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p CN c' n' p') (min n0 n1)\n\ngoal (78 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\nA total of 78 subgoals...", "{"], ["proof (state)\nthis:\n  n < n' \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p CN c' n' p') (min n0 n1)\n\ngoal (78 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\nA total of 78 subgoals...", "assume \"n' < n\""], ["proof (state)\nthis:\n  n' < n\n\ngoal (78 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\nA total of 78 subgoals...", "with \"4.hyps\"(16-17)[OF cnp np', of \"n'\"] and \"4.hyps\"(13)[OF cnp nc', of \"Suc n'\"] nn1 cnp'"], ["proof (chain)\npicking this:\n  n' \\<le> min n n' \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p p') (min n n')\n  n' \\<le> min n n' \\<Longrightarrow>\n  (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  Suc n' \\<le> min n (Suc n') \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p c') (min n (Suc n'))\n  n1 \\<le> n'\n  isnpolyh (CN c' n' p') n'\n  n' < n", "have ?case"], ["proof (prove)\nusing this:\n  n' \\<le> min n n' \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p p') (min n n')\n  n' \\<le> min n n' \\<Longrightarrow>\n  (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  Suc n' \\<le> min n (Suc n') \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p c') (min n (Suc n'))\n  n1 \\<le> n'\n  isnpolyh (CN c' n' p') n'\n  n' < n\n\ngoal (1 subgoal):\n 1. isnpolyh (CN c n p *\\<^sub>p CN c' n' p') (min n0 n1)", "by (cases \"Suc n' = n\") (simp_all add: min_def)"], ["proof (state)\nthis:\n  isnpolyh (CN c n p *\\<^sub>p CN c' n' p') (min n0 n1)\n\ngoal (78 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\nA total of 78 subgoals...", "}"], ["proof (state)\nthis:\n  n' < n \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p CN c' n' p') (min n0 n1)\n\ngoal (78 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\nA total of 78 subgoals...", "moreover"], ["proof (state)\nthis:\n  n' < n \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p CN c' n' p') (min n0 n1)\n\ngoal (78 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\nA total of 78 subgoals...", "{"], ["proof (state)\nthis:\n  n' < n \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p CN c' n' p') (min n0 n1)\n\ngoal (78 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\nA total of 78 subgoals...", "assume \"n' = n\""], ["proof (state)\nthis:\n  n' = n\n\ngoal (78 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\nA total of 78 subgoals...", "with \"4.hyps\"(16-17)[OF cnp np', of n] and \"4.hyps\"(13)[OF cnp nc', of n] cnp cnp' nn1 nn0"], ["proof (chain)\npicking this:\n  n \\<le> min n n' \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p p') (min n n')\n  n \\<le> min n n' \\<Longrightarrow>\n  (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  n \\<le> min n (Suc n') \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p c') (min n (Suc n'))\n  isnpolyh (CN c n p) n\n  isnpolyh (CN c' n' p') n'\n  n1 \\<le> n'\n  n0 \\<le> n\n  n' = n", "have ?case"], ["proof (prove)\nusing this:\n  n \\<le> min n n' \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p p') (min n n')\n  n \\<le> min n n' \\<Longrightarrow>\n  (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  n \\<le> min n (Suc n') \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p c') (min n (Suc n'))\n  isnpolyh (CN c n p) n\n  isnpolyh (CN c' n' p') n'\n  n1 \\<le> n'\n  n0 \\<le> n\n  n' = n\n\ngoal (1 subgoal):\n 1. isnpolyh (CN c n p *\\<^sub>p CN c' n' p') (min n0 n1)", "apply (auto intro!: polyadd_normh)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpolyh (CN c n p *\\<^sub>p p') n;\n     CN c n p *\\<^sub>p p' \\<noteq> 0\\<^sub>p;\n     isnpolyh (CN c n p *\\<^sub>p c') (min n (Suc n)); n1 \\<le> n;\n     n0 \\<le> n; n' = n; isnpolyh c (Suc n); isnpolyh c' (Suc n);\n     isnpolyh p n; p \\<noteq> 0\\<^sub>p; isnpolyh p' n;\n     p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n    \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') n0", "apply (simp_all add: min_def isnpolyh_mono[OF nn0])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  isnpolyh (CN c n p *\\<^sub>p CN c' n' p') (min n0 n1)\n\ngoal (78 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\nA total of 78 subgoals...", "}"], ["proof (state)\nthis:\n  n' = n \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p CN c' n' p') (min n0 n1)\n\ngoal (78 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p CN c' n' p')\n                          (min n0 n1)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 6. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\nA total of 78 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  n < n' \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p CN c' n' p') (min n0 n1)\n  n' < n \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p CN c' n' p') (min n0 n1)\n  n' = n \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p CN c' n' p') (min n0 n1)", "show ?case"], ["proof (prove)\nusing this:\n  n < n' \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p CN c' n' p') (min n0 n1)\n  n' < n \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p CN c' n' p') (min n0 n1)\n  n' = n \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p CN c' n' p') (min n0 n1)\n\ngoal (1 subgoal):\n 1. isnpolyh (CN c n p *\\<^sub>p CN c' n' p') (min n0 n1)", "by arith"], ["proof (state)\nthis:\n  isnpolyh (CN c n p *\\<^sub>p CN c' n' p') (min n0 n1)\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "next"], ["proof (state)\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "fix n0 n1 m"], ["proof (state)\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "assume np: \"isnpolyh ?cnp n0\""], ["proof (state)\nthis:\n  isnpolyh (CN c n p) n0\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "assume np':\"isnpolyh ?cnp' n1\""], ["proof (state)\nthis:\n  isnpolyh (CN c' n' p') n1\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "assume m: \"m \\<le> min n0 n1\""], ["proof (state)\nthis:\n  m \\<le> min n0 n1\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "let ?d = \"degreen (?cnp *\\<^sub>p ?cnp') m\""], ["proof (state)\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "let ?d1 = \"degreen ?cnp m\""], ["proof (state)\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "let ?d2 = \"degreen ?cnp' m\""], ["proof (state)\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "let ?eq = \"?d = (if ?cnp = 0\\<^sub>p \\<or> ?cnp' = 0\\<^sub>p then 0  else ?d1 + ?d2)\""], ["proof (state)\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "have \"n' < n \\<or> n < n' \\<or> n' = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n' < n \\<or> n < n' \\<or> n' = n", "by auto"], ["proof (state)\nthis:\n  n' < n \\<or> n < n' \\<or> n' = n\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "moreover"], ["proof (state)\nthis:\n  n' < n \\<or> n < n' \\<or> n' = n\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "{"], ["proof (state)\nthis:\n  n' < n \\<or> n < n' \\<or> n' = n\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "assume \"n' < n \\<or> n < n'\""], ["proof (state)\nthis:\n  n' < n \\<or> n < n'\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "with \"4.hyps\"(3,6,18) np np' m"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') ?m =\n                    (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n                     else degreen c ?m + degreen (CN c' n' p') ?m)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') ?m =\n                    (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n                     else degreen p ?m + degreen (CN c' n' p') ?m)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') ?m =\n                    (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n                     else degreen (CN c n p) ?m + degreen p' ?m)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> min n0 n1\n  n' < n \\<or> n < n'", "have ?eq"], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') ?m =\n                    (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n                     else degreen c ?m + degreen (CN c' n' p') ?m)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') ?m =\n                    (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n                     else degreen p ?m + degreen (CN c' n' p') ?m)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') ?m =\n                    (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n                     else degreen (CN c n p) ?m + degreen p' ?m)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> min n0 n1\n  n' < n \\<or> n < n'\n\ngoal (1 subgoal):\n 1. degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n    (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n     else degreen (CN c n p) m + degreen (CN c' n' p') m)", "by auto"], ["proof (state)\nthis:\n  degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen (CN c' n' p') m)\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "}"], ["proof (state)\nthis:\n  n' < n \\<or> n < n' \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen (CN c' n' p') m)\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "moreover"], ["proof (state)\nthis:\n  n' < n \\<or> n < n' \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen (CN c' n' p') m)\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "{"], ["proof (state)\nthis:\n  n' < n \\<or> n < n' \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen (CN c' n' p') m)\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "assume nn': \"n' = n\""], ["proof (state)\nthis:\n  n' = n\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "then"], ["proof (chain)\npicking this:\n  n' = n", "have nn: \"\\<not> n' < n \\<and> \\<not> n < n'\""], ["proof (prove)\nusing this:\n  n' = n\n\ngoal (1 subgoal):\n 1. \\<not> n' < n \\<and> \\<not> n < n'", "by arith"], ["proof (state)\nthis:\n  \\<not> n' < n \\<and> \\<not> n < n'\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "from \"4.hyps\"(16,18)[of n n' n]\n        \"4.hyps\"(13,14)[of n \"Suc n'\" n]\n        np np' nn'"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh (CN c n p) n; isnpolyh p' n'; n \\<le> min n n'\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n n')\n  \\<lbrakk>isnpolyh (CN c n p) n; isnpolyh p' n'; n \\<le> min n n'\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') n =\n                    (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n                     else degreen (CN c n p) n + degreen p' n)\n  \\<lbrakk>isnpolyh (CN c n p) n; isnpolyh c' (Suc n');\n   n \\<le> min n (Suc n')\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n (Suc n'))\n  \\<lbrakk>isnpolyh (CN c n p) n; isnpolyh c' (Suc n');\n   n \\<le> min n (Suc n')\\<rbrakk>\n  \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                    (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  n' = n", "have norm:\n        \"isnpolyh ?cnp n\"\n        \"isnpolyh c' (Suc n)\"\n        \"isnpolyh (?cnp *\\<^sub>p c') n\"\n        \"isnpolyh p' n\"\n        \"isnpolyh (?cnp *\\<^sub>p p') n\"\n        \"isnpolyh (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\"\n        \"?cnp *\\<^sub>p c' = 0\\<^sub>p \\<longleftrightarrow> c' = 0\\<^sub>p\"\n        \"?cnp *\\<^sub>p p' \\<noteq> 0\\<^sub>p\""], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh (CN c n p) n; isnpolyh p' n'; n \\<le> min n n'\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n n')\n  \\<lbrakk>isnpolyh (CN c n p) n; isnpolyh p' n'; n \\<le> min n n'\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') n =\n                    (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n                     else degreen (CN c n p) n + degreen p' n)\n  \\<lbrakk>isnpolyh (CN c n p) n; isnpolyh c' (Suc n');\n   n \\<le> min n (Suc n')\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n (Suc n'))\n  \\<lbrakk>isnpolyh (CN c n p) n; isnpolyh c' (Suc n');\n   n \\<le> min n (Suc n')\\<rbrakk>\n  \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                    (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  n' = n\n\ngoal (1 subgoal):\n 1. ((isnpolyh (CN c n p) n &&& isnpolyh c' (Suc n)) &&&\n     isnpolyh (CN c n p *\\<^sub>p c') n &&& isnpolyh p' n) &&&\n    (isnpolyh (CN c n p *\\<^sub>p p') n &&&\n     isnpolyh (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n) &&&\n    (CN c n p *\\<^sub>p c' = 0\\<^sub>p) = (c' = 0\\<^sub>p) &&&\n    CN c n p *\\<^sub>p p' \\<noteq> 0\\<^sub>p", "by (auto simp add: min_def)"], ["proof (state)\nthis:\n  isnpolyh (CN c n p) n\n  isnpolyh c' (Suc n)\n  isnpolyh (CN c n p *\\<^sub>p c') n\n  isnpolyh p' n\n  isnpolyh (CN c n p *\\<^sub>p p') n\n  isnpolyh (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n  (CN c n p *\\<^sub>p c' = 0\\<^sub>p) = (c' = 0\\<^sub>p)\n  CN c n p *\\<^sub>p p' \\<noteq> 0\\<^sub>p\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "{"], ["proof (state)\nthis:\n  isnpolyh (CN c n p) n\n  isnpolyh c' (Suc n)\n  isnpolyh (CN c n p *\\<^sub>p c') n\n  isnpolyh p' n\n  isnpolyh (CN c n p *\\<^sub>p p') n\n  isnpolyh (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n  (CN c n p *\\<^sub>p c' = 0\\<^sub>p) = (c' = 0\\<^sub>p)\n  CN c n p *\\<^sub>p p' \\<noteq> 0\\<^sub>p\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "assume mn: \"m = n\""], ["proof (state)\nthis:\n  m = n\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "from \"4.hyps\"(17,18)[OF norm(1,4), of n]\n          \"4.hyps\"(13,15)[OF norm(1,2), of n] norm nn' mn"], ["proof (chain)\npicking this:\n  n \\<le> min n n \\<Longrightarrow>\n  (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  n \\<le> min n n \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p p') n =\n  (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) n + degreen p' n)\n  n \\<le> min n (Suc n) \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p c') (min n (Suc n))\n  n \\<le> min n (Suc n) \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p c') n =\n  (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p then 0\n   else degreen (CN c n p) n + degreen c' n)\n  isnpolyh (CN c n p) n\n  isnpolyh c' (Suc n)\n  isnpolyh (CN c n p *\\<^sub>p c') n\n  isnpolyh p' n\n  isnpolyh (CN c n p *\\<^sub>p p') n\n  isnpolyh (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n  (CN c n p *\\<^sub>p c' = 0\\<^sub>p) = (c' = 0\\<^sub>p)\n  CN c n p *\\<^sub>p p' \\<noteq> 0\\<^sub>p\n  n' = n\n  m = n", "have degs:\n          \"degreen (?cnp *\\<^sub>p c') n = (if c' = 0\\<^sub>p then 0 else ?d1 + degreen c' n)\"\n          \"degreen (?cnp *\\<^sub>p p') n = ?d1  + degreen p' n\""], ["proof (prove)\nusing this:\n  n \\<le> min n n \\<Longrightarrow>\n  (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  n \\<le> min n n \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p p') n =\n  (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) n + degreen p' n)\n  n \\<le> min n (Suc n) \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p c') (min n (Suc n))\n  n \\<le> min n (Suc n) \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p c') n =\n  (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p then 0\n   else degreen (CN c n p) n + degreen c' n)\n  isnpolyh (CN c n p) n\n  isnpolyh c' (Suc n)\n  isnpolyh (CN c n p *\\<^sub>p c') n\n  isnpolyh p' n\n  isnpolyh (CN c n p *\\<^sub>p p') n\n  isnpolyh (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n  (CN c n p *\\<^sub>p c' = 0\\<^sub>p) = (c' = 0\\<^sub>p)\n  CN c n p *\\<^sub>p p' \\<noteq> 0\\<^sub>p\n  n' = n\n  m = n\n\ngoal (1 subgoal):\n 1. degreen (CN c n p *\\<^sub>p c') n =\n    (if c' = 0\\<^sub>p then 0 else degreen (CN c n p) m + degreen c' n) &&&\n    degreen (CN c n p *\\<^sub>p p') n = degreen (CN c n p) m + degreen p' n", "by (simp_all add: min_def)"], ["proof (state)\nthis:\n  degreen (CN c n p *\\<^sub>p c') n =\n  (if c' = 0\\<^sub>p then 0 else degreen (CN c n p) m + degreen c' n)\n  degreen (CN c n p *\\<^sub>p p') n = degreen (CN c n p) m + degreen p' n\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "from degs norm"], ["proof (chain)\npicking this:\n  degreen (CN c n p *\\<^sub>p c') n =\n  (if c' = 0\\<^sub>p then 0 else degreen (CN c n p) m + degreen c' n)\n  degreen (CN c n p *\\<^sub>p p') n = degreen (CN c n p) m + degreen p' n\n  isnpolyh (CN c n p) n\n  isnpolyh c' (Suc n)\n  isnpolyh (CN c n p *\\<^sub>p c') n\n  isnpolyh p' n\n  isnpolyh (CN c n p *\\<^sub>p p') n\n  isnpolyh (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n  (CN c n p *\\<^sub>p c' = 0\\<^sub>p) = (c' = 0\\<^sub>p)\n  CN c n p *\\<^sub>p p' \\<noteq> 0\\<^sub>p", "have th1: \"degreen (?cnp *\\<^sub>p c') n < degreen (CN 0\\<^sub>p n (?cnp *\\<^sub>p p')) n\""], ["proof (prove)\nusing this:\n  degreen (CN c n p *\\<^sub>p c') n =\n  (if c' = 0\\<^sub>p then 0 else degreen (CN c n p) m + degreen c' n)\n  degreen (CN c n p *\\<^sub>p p') n = degreen (CN c n p) m + degreen p' n\n  isnpolyh (CN c n p) n\n  isnpolyh c' (Suc n)\n  isnpolyh (CN c n p *\\<^sub>p c') n\n  isnpolyh p' n\n  isnpolyh (CN c n p *\\<^sub>p p') n\n  isnpolyh (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n  (CN c n p *\\<^sub>p c' = 0\\<^sub>p) = (c' = 0\\<^sub>p)\n  CN c n p *\\<^sub>p p' \\<noteq> 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. degreen (CN c n p *\\<^sub>p c') n\n    < degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n", "by simp"], ["proof (state)\nthis:\n  degreen (CN c n p *\\<^sub>p c') n\n  < degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "then"], ["proof (chain)\npicking this:\n  degreen (CN c n p *\\<^sub>p c') n\n  < degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n", "have neq: \"degreen (?cnp *\\<^sub>p c') n \\<noteq> degreen (CN 0\\<^sub>p n (?cnp *\\<^sub>p p')) n\""], ["proof (prove)\nusing this:\n  degreen (CN c n p *\\<^sub>p c') n\n  < degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n\ngoal (1 subgoal):\n 1. degreen (CN c n p *\\<^sub>p c') n \\<noteq>\n    degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n", "by simp"], ["proof (state)\nthis:\n  degreen (CN c n p *\\<^sub>p c') n \\<noteq>\n  degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "have nmin: \"n \\<le> min n n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> min n n", "by (simp add: min_def)"], ["proof (state)\nthis:\n  n \\<le> min n n\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "from polyadd_different_degreen[OF norm(3,6) neq nmin] th1"], ["proof (chain)\npicking this:\n  degreen\n   (CN c n p *\\<^sub>p c' +\\<^sub>p CN 0\\<^sub>p n (CN c n p *\\<^sub>p p'))\n   n =\n  max (degreen (CN c n p *\\<^sub>p c') n)\n   (degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n)\n  degreen (CN c n p *\\<^sub>p c') n\n  < degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n", "have deg: \"degreen (CN c n p *\\<^sub>p c' +\\<^sub>p CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n =\n            degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\""], ["proof (prove)\nusing this:\n  degreen\n   (CN c n p *\\<^sub>p c' +\\<^sub>p CN 0\\<^sub>p n (CN c n p *\\<^sub>p p'))\n   n =\n  max (degreen (CN c n p *\\<^sub>p c') n)\n   (degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n)\n  degreen (CN c n p *\\<^sub>p c') n\n  < degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n\ngoal (1 subgoal):\n 1. degreen\n     (CN c n p *\\<^sub>p c' +\\<^sub>p\n      CN 0\\<^sub>p n (CN c n p *\\<^sub>p p'))\n     n =\n    degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n", "by simp"], ["proof (state)\nthis:\n  degreen\n   (CN c n p *\\<^sub>p c' +\\<^sub>p CN 0\\<^sub>p n (CN c n p *\\<^sub>p p'))\n   n =\n  degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "from \"4.hyps\"(16-18)[OF norm(1,4), of n]\n          \"4.hyps\"(13-15)[OF norm(1,2), of n]\n          mn norm m nn' deg"], ["proof (chain)\npicking this:\n  n \\<le> min n n \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p p') (min n n)\n  n \\<le> min n n \\<Longrightarrow>\n  (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  n \\<le> min n n \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p p') n =\n  (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) n + degreen p' n)\n  n \\<le> min n (Suc n) \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p c') (min n (Suc n))\n  n \\<le> min n (Suc n) \\<Longrightarrow>\n  (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p)\n  n \\<le> min n (Suc n) \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p c') n =\n  (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p then 0\n   else degreen (CN c n p) n + degreen c' n)\n  m = n\n  isnpolyh (CN c n p) n\n  isnpolyh c' (Suc n)\n  isnpolyh (CN c n p *\\<^sub>p c') n\n  isnpolyh p' n\n  isnpolyh (CN c n p *\\<^sub>p p') n\n  isnpolyh (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n  (CN c n p *\\<^sub>p c' = 0\\<^sub>p) = (c' = 0\\<^sub>p)\n  CN c n p *\\<^sub>p p' \\<noteq> 0\\<^sub>p\n  m \\<le> min n0 n1\n  n' = n\n  degreen\n   (CN c n p *\\<^sub>p c' +\\<^sub>p CN 0\\<^sub>p n (CN c n p *\\<^sub>p p'))\n   n =\n  degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n", "have ?eq"], ["proof (prove)\nusing this:\n  n \\<le> min n n \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p p') (min n n)\n  n \\<le> min n n \\<Longrightarrow>\n  (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  n \\<le> min n n \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p p') n =\n  (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) n + degreen p' n)\n  n \\<le> min n (Suc n) \\<Longrightarrow>\n  isnpolyh (CN c n p *\\<^sub>p c') (min n (Suc n))\n  n \\<le> min n (Suc n) \\<Longrightarrow>\n  (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p)\n  n \\<le> min n (Suc n) \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p c') n =\n  (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p then 0\n   else degreen (CN c n p) n + degreen c' n)\n  m = n\n  isnpolyh (CN c n p) n\n  isnpolyh c' (Suc n)\n  isnpolyh (CN c n p *\\<^sub>p c') n\n  isnpolyh p' n\n  isnpolyh (CN c n p *\\<^sub>p p') n\n  isnpolyh (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n  (CN c n p *\\<^sub>p c' = 0\\<^sub>p) = (c' = 0\\<^sub>p)\n  CN c n p *\\<^sub>p p' \\<noteq> 0\\<^sub>p\n  m \\<le> min n0 n1\n  n' = n\n  degreen\n   (CN c n p *\\<^sub>p c' +\\<^sub>p CN 0\\<^sub>p n (CN c n p *\\<^sub>p p'))\n   n =\n  degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n\ngoal (1 subgoal):\n 1. degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n    (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n     else degreen (CN c n p) m + degreen (CN c' n' p') m)", "by simp"], ["proof (state)\nthis:\n  degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen (CN c' n' p') m)\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "}"], ["proof (state)\nthis:\n  m = n \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen (CN c' n' p') m)\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "moreover"], ["proof (state)\nthis:\n  m = n \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen (CN c' n' p') m)\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "{"], ["proof (state)\nthis:\n  m = n \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen (CN c' n' p') m)\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "assume mn: \"m \\<noteq> n\""], ["proof (state)\nthis:\n  m \\<noteq> n\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "then"], ["proof (chain)\npicking this:\n  m \\<noteq> n", "have mn': \"m < n\""], ["proof (prove)\nusing this:\n  m \\<noteq> n\n\ngoal (1 subgoal):\n 1. m < n", "using m np"], ["proof (prove)\nusing this:\n  m \\<noteq> n\n  m \\<le> min n0 n1\n  isnpolyh (CN c n p) n0\n\ngoal (1 subgoal):\n 1. m < n", "by auto"], ["proof (state)\nthis:\n  m < n\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "from nn' m np"], ["proof (chain)\npicking this:\n  n' = n\n  m \\<le> min n0 n1\n  isnpolyh (CN c n p) n0", "have max1: \"m \\<le> max n n\""], ["proof (prove)\nusing this:\n  n' = n\n  m \\<le> min n0 n1\n  isnpolyh (CN c n p) n0\n\ngoal (1 subgoal):\n 1. m \\<le> max n n", "by simp"], ["proof (state)\nthis:\n  m \\<le> max n n\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "then"], ["proof (chain)\npicking this:\n  m \\<le> max n n", "have min1: \"m \\<le> min n n\""], ["proof (prove)\nusing this:\n  m \\<le> max n n\n\ngoal (1 subgoal):\n 1. m \\<le> min n n", "by simp"], ["proof (state)\nthis:\n  m \\<le> min n n\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "then"], ["proof (chain)\npicking this:\n  m \\<le> min n n", "have min2: \"m \\<le> min n (Suc n)\""], ["proof (prove)\nusing this:\n  m \\<le> min n n\n\ngoal (1 subgoal):\n 1. m \\<le> min n (Suc n)", "by simp"], ["proof (state)\nthis:\n  m \\<le> min n (Suc n)\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "from \"4.hyps\"(16-18)[OF norm(1,4) min1]\n          \"4.hyps\"(13-15)[OF norm(1,2) min2]\n          degreen_polyadd[OF norm(3,6) max1]"], ["proof (chain)\npicking this:\n  isnpolyh (CN c n p *\\<^sub>p p') (min n n)\n  (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  degreen (CN c n p *\\<^sub>p p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen p' m)\n  isnpolyh (CN c n p *\\<^sub>p c') (min n (Suc n))\n  (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p)\n  degreen (CN c n p *\\<^sub>p c') m =\n  (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen c' m)\n  degreen\n   (CN c n p *\\<^sub>p c' +\\<^sub>p CN 0\\<^sub>p n (CN c n p *\\<^sub>p p'))\n   m\n  \\<le> max (degreen (CN c n p *\\<^sub>p c') m)\n         (degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) m)", "have \"degreen (?cnp *\\<^sub>p c' +\\<^sub>p CN 0\\<^sub>p n (?cnp *\\<^sub>p p')) m \\<le>\n            max (degreen (?cnp *\\<^sub>p c') m) (degreen (CN 0\\<^sub>p n (?cnp *\\<^sub>p p')) m)\""], ["proof (prove)\nusing this:\n  isnpolyh (CN c n p *\\<^sub>p p') (min n n)\n  (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  degreen (CN c n p *\\<^sub>p p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen p' m)\n  isnpolyh (CN c n p *\\<^sub>p c') (min n (Suc n))\n  (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p)\n  degreen (CN c n p *\\<^sub>p c') m =\n  (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen c' m)\n  degreen\n   (CN c n p *\\<^sub>p c' +\\<^sub>p CN 0\\<^sub>p n (CN c n p *\\<^sub>p p'))\n   m\n  \\<le> max (degreen (CN c n p *\\<^sub>p c') m)\n         (degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) m)\n\ngoal (1 subgoal):\n 1. degreen\n     (CN c n p *\\<^sub>p c' +\\<^sub>p\n      CN 0\\<^sub>p n (CN c n p *\\<^sub>p p'))\n     m\n    \\<le> max (degreen (CN c n p *\\<^sub>p c') m)\n           (degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) m)", "using mn nn' np np'"], ["proof (prove)\nusing this:\n  isnpolyh (CN c n p *\\<^sub>p p') (min n n)\n  (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  degreen (CN c n p *\\<^sub>p p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen p' m)\n  isnpolyh (CN c n p *\\<^sub>p c') (min n (Suc n))\n  (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p)\n  degreen (CN c n p *\\<^sub>p c') m =\n  (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen c' m)\n  degreen\n   (CN c n p *\\<^sub>p c' +\\<^sub>p CN 0\\<^sub>p n (CN c n p *\\<^sub>p p'))\n   m\n  \\<le> max (degreen (CN c n p *\\<^sub>p c') m)\n         (degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) m)\n  m \\<noteq> n\n  n' = n\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n\ngoal (1 subgoal):\n 1. degreen\n     (CN c n p *\\<^sub>p c' +\\<^sub>p\n      CN 0\\<^sub>p n (CN c n p *\\<^sub>p p'))\n     m\n    \\<le> max (degreen (CN c n p *\\<^sub>p c') m)\n           (degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) m)", "by simp"], ["proof (state)\nthis:\n  degreen\n   (CN c n p *\\<^sub>p c' +\\<^sub>p CN 0\\<^sub>p n (CN c n p *\\<^sub>p p'))\n   m\n  \\<le> max (degreen (CN c n p *\\<^sub>p c') m)\n         (degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) m)\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "with \"4.hyps\"(16-18)[OF norm(1,4) min1]\n          \"4.hyps\"(13-15)[OF norm(1,2) min2]\n          degreen_0[OF norm(3) mn']"], ["proof (chain)\npicking this:\n  isnpolyh (CN c n p *\\<^sub>p p') (min n n)\n  (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  degreen (CN c n p *\\<^sub>p p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen p' m)\n  isnpolyh (CN c n p *\\<^sub>p c') (min n (Suc n))\n  (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p)\n  degreen (CN c n p *\\<^sub>p c') m =\n  (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen c' m)\n  degreen (CN c n p *\\<^sub>p c') m = 0\n  degreen\n   (CN c n p *\\<^sub>p c' +\\<^sub>p CN 0\\<^sub>p n (CN c n p *\\<^sub>p p'))\n   m\n  \\<le> max (degreen (CN c n p *\\<^sub>p c') m)\n         (degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) m)", "have ?eq"], ["proof (prove)\nusing this:\n  isnpolyh (CN c n p *\\<^sub>p p') (min n n)\n  (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  degreen (CN c n p *\\<^sub>p p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen p' m)\n  isnpolyh (CN c n p *\\<^sub>p c') (min n (Suc n))\n  (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p)\n  degreen (CN c n p *\\<^sub>p c') m =\n  (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen c' m)\n  degreen (CN c n p *\\<^sub>p c') m = 0\n  degreen\n   (CN c n p *\\<^sub>p c' +\\<^sub>p CN 0\\<^sub>p n (CN c n p *\\<^sub>p p'))\n   m\n  \\<le> max (degreen (CN c n p *\\<^sub>p c') m)\n         (degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) m)\n\ngoal (1 subgoal):\n 1. degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n    (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n     else degreen (CN c n p) m + degreen (CN c' n' p') m)", "using nn' mn np np'"], ["proof (prove)\nusing this:\n  isnpolyh (CN c n p *\\<^sub>p p') (min n n)\n  (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  degreen (CN c n p *\\<^sub>p p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen p' m)\n  isnpolyh (CN c n p *\\<^sub>p c') (min n (Suc n))\n  (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p)\n  degreen (CN c n p *\\<^sub>p c') m =\n  (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen c' m)\n  degreen (CN c n p *\\<^sub>p c') m = 0\n  degreen\n   (CN c n p *\\<^sub>p c' +\\<^sub>p CN 0\\<^sub>p n (CN c n p *\\<^sub>p p'))\n   m\n  \\<le> max (degreen (CN c n p *\\<^sub>p c') m)\n         (degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) m)\n  n' = n\n  m \\<noteq> n\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n\ngoal (1 subgoal):\n 1. degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n    (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n     else degreen (CN c n p) m + degreen (CN c' n' p') m)", "by clarsimp"], ["proof (state)\nthis:\n  degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen (CN c' n' p') m)\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "}"], ["proof (state)\nthis:\n  m \\<noteq> n \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen (CN c' n' p') m)\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  m = n \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen (CN c' n' p') m)\n  m \\<noteq> n \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen (CN c' n' p') m)", "have ?eq"], ["proof (prove)\nusing this:\n  m = n \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen (CN c' n' p') m)\n  m \\<noteq> n \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen (CN c' n' p') m)\n\ngoal (1 subgoal):\n 1. degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n    (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n     else degreen (CN c n p) m + degreen (CN c' n' p') m)", "by blast"], ["proof (state)\nthis:\n  degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen (CN c' n' p') m)\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "}"], ["proof (state)\nthis:\n  n' = n \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen (CN c' n' p') m)\n\ngoal (77 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n                         (if CN c n p = 0\\<^sub>p \\<or>\n                             CN c' n' p' = 0\\<^sub>p\n                          then 0\n                          else degreen (CN c n p) m +\n                               degreen (CN c' n' p') m)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 8. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                          (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\nA total of 77 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  n' < n \\<or> n < n' \\<or> n' = n\n  n' < n \\<or> n < n' \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen (CN c' n' p') m)\n  n' = n \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen (CN c' n' p') m)", "show ?eq"], ["proof (prove)\nusing this:\n  n' < n \\<or> n < n' \\<or> n' = n\n  n' < n \\<or> n < n' \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen (CN c' n' p') m)\n  n' = n \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen (CN c' n' p') m)\n\ngoal (1 subgoal):\n 1. degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n    (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n     else degreen (CN c n p) m + degreen (CN c' n' p') m)", "by blast"], ["proof (state)\nthis:\n  degreen (CN c n p *\\<^sub>p CN c' n' p') m =\n  (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) m + degreen (CN c' n' p') m)\n\ngoal (76 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 8. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                         (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (Add v va *\\<^sub>p b) m =\n                          (if Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p\n                           then 0 else degreen (Add v va) m + degreen b m)\nA total of 76 subgoals...", "}"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh (CN c n p) ?n0a2; isnpolyh (CN c' n' p') ?n1a2;\n   ?ma2 \\<le> min ?n0a2 ?n1a2\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') ?ma2 =\n                    (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                     then 0\n                     else degreen (CN c n p) ?ma2 +\n                          degreen (CN c' n' p') ?ma2)\n\ngoal (76 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 8. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                         (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (Add v va *\\<^sub>p b) m =\n                          (if Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p\n                           then 0 else degreen (Add v va) m + degreen b m)\nA total of 76 subgoals...", "{"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh (CN c n p) ?n0a2; isnpolyh (CN c' n' p') ?n1a2;\n   ?ma2 \\<le> min ?n0a2 ?n1a2\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p *\\<^sub>p CN c' n' p') ?ma2 =\n                    (if CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                     then 0\n                     else degreen (CN c n p) ?ma2 +\n                          degreen (CN c' n' p') ?ma2)\n\ngoal (76 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 8. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                         (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (Add v va *\\<^sub>p b) m =\n                          (if Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p\n                           then 0 else degreen (Add v va) m + degreen b m)\nA total of 76 subgoals...", "case (2 n0 n1)"], ["proof (state)\nthis:\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> min n0 n1\n\ngoal (76 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 8. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                         (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (Add v va *\\<^sub>p b) m =\n                          (if Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p\n                           then 0 else degreen (Add v va) m + degreen b m)\nA total of 76 subgoals...", "then"], ["proof (chain)\npicking this:\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> min n0 n1", "have np: \"isnpolyh ?cnp n0\"\n      and np': \"isnpolyh ?cnp' n1\"\n      and m: \"m \\<le> min n0 n1\""], ["proof (prove)\nusing this:\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> min n0 n1\n\ngoal (1 subgoal):\n 1. isnpolyh (CN c n p) n0 &&&\n    isnpolyh (CN c' n' p') n1 &&& m \\<le> min n0 n1", "by simp_all"], ["proof (state)\nthis:\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> min n0 n1\n\ngoal (76 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 8. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                         (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (Add v va *\\<^sub>p b) m =\n                          (if Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p\n                           then 0 else degreen (Add v va) m + degreen b m)\nA total of 76 subgoals...", "then"], ["proof (chain)\npicking this:\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> min n0 n1", "have mn: \"m \\<le> n\""], ["proof (prove)\nusing this:\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  m \\<le> min n0 n1\n\ngoal (1 subgoal):\n 1. m \\<le> n", "by simp"], ["proof (state)\nthis:\n  m \\<le> n\n\ngoal (76 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 8. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                         (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (Add v va *\\<^sub>p b) m =\n                          (if Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p\n                           then 0 else degreen (Add v va) m + degreen b m)\nA total of 76 subgoals...", "let ?c0p = \"CN 0\\<^sub>p n (?cnp *\\<^sub>p p')\""], ["proof (state)\ngoal (76 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 8. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                         (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (Add v va *\\<^sub>p b) m =\n                          (if Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p\n                           then 0 else degreen (Add v va) m + degreen b m)\nA total of 76 subgoals...", "{"], ["proof (state)\ngoal (76 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 8. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                         (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (Add v va *\\<^sub>p b) m =\n                          (if Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p\n                           then 0 else degreen (Add v va) m + degreen b m)\nA total of 76 subgoals...", "assume C: \"?cnp *\\<^sub>p c' +\\<^sub>p ?c0p = 0\\<^sub>p\" \"n' = n\""], ["proof (state)\nthis:\n  CN c n p *\\<^sub>p c' +\\<^sub>p CN 0\\<^sub>p n (CN c n p *\\<^sub>p p') =\n  0\\<^sub>p\n  n' = n\n\ngoal (76 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 8. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                         (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (Add v va *\\<^sub>p b) m =\n                          (if Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p\n                           then 0 else degreen (Add v va) m + degreen b m)\nA total of 76 subgoals...", "then"], ["proof (chain)\npicking this:\n  CN c n p *\\<^sub>p c' +\\<^sub>p CN 0\\<^sub>p n (CN c n p *\\<^sub>p p') =\n  0\\<^sub>p\n  n' = n", "have nn: \"\\<not> n' < n \\<and> \\<not> n < n'\""], ["proof (prove)\nusing this:\n  CN c n p *\\<^sub>p c' +\\<^sub>p CN 0\\<^sub>p n (CN c n p *\\<^sub>p p') =\n  0\\<^sub>p\n  n' = n\n\ngoal (1 subgoal):\n 1. \\<not> n' < n \\<and> \\<not> n < n'", "by simp"], ["proof (state)\nthis:\n  \\<not> n' < n \\<and> \\<not> n < n'\n\ngoal (76 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 8. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                         (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (Add v va *\\<^sub>p b) m =\n                          (if Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p\n                           then 0 else degreen (Add v va) m + degreen b m)\nA total of 76 subgoals...", "from \"4.hyps\"(16-18) [of n n n]\n        \"4.hyps\"(13-15)[of n \"Suc n\" n]\n        np np' C(2) mn"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh (CN c n p) n; isnpolyh p' n; n \\<le> min n n\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n n)\n  \\<lbrakk>isnpolyh (CN c n p) n; isnpolyh p' n; n \\<le> min n n\\<rbrakk>\n  \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                    (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh (CN c n p) n; isnpolyh p' n; n \\<le> min n n\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') n =\n                    (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n                     else degreen (CN c n p) n + degreen p' n)\n  \\<lbrakk>isnpolyh (CN c n p) n; isnpolyh c' (Suc n);\n   n \\<le> min n (Suc n)\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n (Suc n))\n  \\<lbrakk>isnpolyh (CN c n p) n; isnpolyh c' (Suc n);\n   n \\<le> min n (Suc n)\\<rbrakk>\n  \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                    (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh (CN c n p) n; isnpolyh c' (Suc n);\n   n \\<le> min n (Suc n)\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') n =\n                    (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p then 0\n                     else degreen (CN c n p) n + degreen c' n)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  n' = n\n  m \\<le> n", "have norm:\n        \"isnpolyh ?cnp n\"\n        \"isnpolyh c' (Suc n)\"\n        \"isnpolyh (?cnp *\\<^sub>p c') n\"\n        \"isnpolyh p' n\"\n        \"isnpolyh (?cnp *\\<^sub>p p') n\"\n        \"isnpolyh (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\"\n        \"?cnp *\\<^sub>p c' = 0\\<^sub>p \\<longleftrightarrow> c' = 0\\<^sub>p\"\n        \"?cnp *\\<^sub>p p' \\<noteq> 0\\<^sub>p\"\n        \"degreen (?cnp *\\<^sub>p c') n = (if c' = 0\\<^sub>p then 0 else degreen ?cnp n + degreen c' n)\"\n        \"degreen (?cnp *\\<^sub>p p') n = degreen ?cnp n + degreen p' n\""], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh (CN c n p) n; isnpolyh p' n; n \\<le> min n n\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n n)\n  \\<lbrakk>isnpolyh (CN c n p) n; isnpolyh p' n; n \\<le> min n n\\<rbrakk>\n  \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                    (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh (CN c n p) n; isnpolyh p' n; n \\<le> min n n\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') n =\n                    (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n                     else degreen (CN c n p) n + degreen p' n)\n  \\<lbrakk>isnpolyh (CN c n p) n; isnpolyh c' (Suc n);\n   n \\<le> min n (Suc n)\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n (Suc n))\n  \\<lbrakk>isnpolyh (CN c n p) n; isnpolyh c' (Suc n);\n   n \\<le> min n (Suc n)\\<rbrakk>\n  \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                    (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh (CN c n p) n; isnpolyh c' (Suc n);\n   n \\<le> min n (Suc n)\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') n =\n                    (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p then 0\n                     else degreen (CN c n p) n + degreen c' n)\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  n' = n\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. ((isnpolyh (CN c n p) n &&& isnpolyh c' (Suc n)) &&&\n     isnpolyh (CN c n p *\\<^sub>p c') n &&&\n     isnpolyh p' n &&& isnpolyh (CN c n p *\\<^sub>p p') n) &&&\n    (isnpolyh (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n &&&\n     (CN c n p *\\<^sub>p c' = 0\\<^sub>p) = (c' = 0\\<^sub>p)) &&&\n    CN c n p *\\<^sub>p p' \\<noteq> 0\\<^sub>p &&&\n    degreen (CN c n p *\\<^sub>p c') n =\n    (if c' = 0\\<^sub>p then 0 else degreen (CN c n p) n + degreen c' n) &&&\n    degreen (CN c n p *\\<^sub>p p') n = degreen (CN c n p) n + degreen p' n", "by (simp_all add: min_def)"], ["proof (state)\nthis:\n  isnpolyh (CN c n p) n\n  isnpolyh c' (Suc n)\n  isnpolyh (CN c n p *\\<^sub>p c') n\n  isnpolyh p' n\n  isnpolyh (CN c n p *\\<^sub>p p') n\n  isnpolyh (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n  (CN c n p *\\<^sub>p c' = 0\\<^sub>p) = (c' = 0\\<^sub>p)\n  CN c n p *\\<^sub>p p' \\<noteq> 0\\<^sub>p\n  degreen (CN c n p *\\<^sub>p c') n =\n  (if c' = 0\\<^sub>p then 0 else degreen (CN c n p) n + degreen c' n)\n  degreen (CN c n p *\\<^sub>p p') n = degreen (CN c n p) n + degreen p' n\n\ngoal (76 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 8. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                         (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (Add v va *\\<^sub>p b) m =\n                          (if Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p\n                           then 0 else degreen (Add v va) m + degreen b m)\nA total of 76 subgoals...", "from norm"], ["proof (chain)\npicking this:\n  isnpolyh (CN c n p) n\n  isnpolyh c' (Suc n)\n  isnpolyh (CN c n p *\\<^sub>p c') n\n  isnpolyh p' n\n  isnpolyh (CN c n p *\\<^sub>p p') n\n  isnpolyh (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n  (CN c n p *\\<^sub>p c' = 0\\<^sub>p) = (c' = 0\\<^sub>p)\n  CN c n p *\\<^sub>p p' \\<noteq> 0\\<^sub>p\n  degreen (CN c n p *\\<^sub>p c') n =\n  (if c' = 0\\<^sub>p then 0 else degreen (CN c n p) n + degreen c' n)\n  degreen (CN c n p *\\<^sub>p p') n = degreen (CN c n p) n + degreen p' n", "have cn: \"isnpolyh (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\""], ["proof (prove)\nusing this:\n  isnpolyh (CN c n p) n\n  isnpolyh c' (Suc n)\n  isnpolyh (CN c n p *\\<^sub>p c') n\n  isnpolyh p' n\n  isnpolyh (CN c n p *\\<^sub>p p') n\n  isnpolyh (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n  (CN c n p *\\<^sub>p c' = 0\\<^sub>p) = (c' = 0\\<^sub>p)\n  CN c n p *\\<^sub>p p' \\<noteq> 0\\<^sub>p\n  degreen (CN c n p *\\<^sub>p c') n =\n  (if c' = 0\\<^sub>p then 0 else degreen (CN c n p) n + degreen c' n)\n  degreen (CN c n p *\\<^sub>p p') n = degreen (CN c n p) n + degreen p' n\n\ngoal (1 subgoal):\n 1. isnpolyh (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n", "by simp"], ["proof (state)\nthis:\n  isnpolyh (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n\ngoal (76 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 8. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                         (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (Add v va *\\<^sub>p b) m =\n                          (if Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p\n                           then 0 else degreen (Add v va) m + degreen b m)\nA total of 76 subgoals...", "have degneq: \"degreen (?cnp *\\<^sub>p c') n < degreen (CN 0\\<^sub>p n (?cnp *\\<^sub>p p')) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degreen (CN c n p *\\<^sub>p c') n\n    < degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n", "using norm"], ["proof (prove)\nusing this:\n  isnpolyh (CN c n p) n\n  isnpolyh c' (Suc n)\n  isnpolyh (CN c n p *\\<^sub>p c') n\n  isnpolyh p' n\n  isnpolyh (CN c n p *\\<^sub>p p') n\n  isnpolyh (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n  (CN c n p *\\<^sub>p c' = 0\\<^sub>p) = (c' = 0\\<^sub>p)\n  CN c n p *\\<^sub>p p' \\<noteq> 0\\<^sub>p\n  degreen (CN c n p *\\<^sub>p c') n =\n  (if c' = 0\\<^sub>p then 0 else degreen (CN c n p) n + degreen c' n)\n  degreen (CN c n p *\\<^sub>p p') n = degreen (CN c n p) n + degreen p' n\n\ngoal (1 subgoal):\n 1. degreen (CN c n p *\\<^sub>p c') n\n    < degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n", "by simp"], ["proof (state)\nthis:\n  degreen (CN c n p *\\<^sub>p c') n\n  < degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n\ngoal (76 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 8. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                         (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (Add v va *\\<^sub>p b) m =\n                          (if Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p\n                           then 0 else degreen (Add v va) m + degreen b m)\nA total of 76 subgoals...", "from polyadd_eq_const_degreen[OF norm(3) cn C(1), where m=\"n\"] degneq"], ["proof (chain)\npicking this:\n  degreen (CN c n p *\\<^sub>p c') n =\n  degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n  degreen (CN c n p *\\<^sub>p c') n\n  < degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n", "have False"], ["proof (prove)\nusing this:\n  degreen (CN c n p *\\<^sub>p c') n =\n  degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n  degreen (CN c n p *\\<^sub>p c') n\n  < degreen (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (76 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 8. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                         (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (Add v va *\\<^sub>p b) m =\n                          (if Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p\n                           then 0 else degreen (Add v va) m + degreen b m)\nA total of 76 subgoals...", "}"], ["proof (state)\nthis:\n  \\<lbrakk>CN c n p *\\<^sub>p c' +\\<^sub>p\n           CN 0\\<^sub>p n (CN c n p *\\<^sub>p p') =\n           0\\<^sub>p;\n   n' = n\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (76 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>c n p c' n' p' n0 n1 m.\n       \\<lbrakk>\\<And>n0 n1 m.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    m \\<le> min n0 n1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p')\n(min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') m =\n                             (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen c m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                             (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') m =\n                             (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p\n                              then 0\n                              else degreen p m + degreen (CN c' n' p') m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen c' m);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min n0 n1);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                             (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p);\n        \\<And>n0 n1 m.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            m \\<le> min n0 n1\\<rbrakk>\n           \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') m =\n                             (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p\n                              then 0\n                              else degreen (CN c n p) m + degreen p' m);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                         (CN c n p = 0\\<^sub>p \\<or>\n                          CN c' n' p' = 0\\<^sub>p)\n 5. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 7. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 8. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                         (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> degreen (Add v va *\\<^sub>p b) m =\n                          (if Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p\n                           then 0 else degreen (Add v va) m + degreen b m)\nA total of 76 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>CN c n p *\\<^sub>p c' +\\<^sub>p\n           CN 0\\<^sub>p n (CN c n p *\\<^sub>p p') =\n           0\\<^sub>p;\n   n' = n\\<rbrakk>\n  \\<Longrightarrow> False", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>CN c n p *\\<^sub>p c' +\\<^sub>p\n           CN 0\\<^sub>p n (CN c n p *\\<^sub>p p') =\n           0\\<^sub>p;\n   n' = n\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n    (CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p)", "using \"4.hyps\""], ["proof (prove)\nusing this:\n  \\<lbrakk>CN c n p *\\<^sub>p c' +\\<^sub>p\n           CN 0\\<^sub>p n (CN c n p *\\<^sub>p p') =\n           0\\<^sub>p;\n   n' = n\\<rbrakk>\n  \\<Longrightarrow> False\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (c *\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> (c *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                    (c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (c *\\<^sub>p CN c' n' p') ?m =\n                    (if c = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n                     else degreen c ?m + degreen (CN c' n' p') ?m)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p *\\<^sub>p CN c' n' p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> (p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                    (p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (p *\\<^sub>p CN c' n' p') ?m =\n                    (if p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p then 0\n                     else degreen p ?m + degreen (CN c' n' p') ?m)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                    (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') ?m =\n                    (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p then 0\n                     else degreen (CN c n p) ?m + degreen c' ?m)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                    (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') ?m =\n                    (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n                     else degreen (CN c n p) ?m + degreen p' ?m)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p c') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> (CN c n p *\\<^sub>p c' = 0\\<^sub>p) =\n                    (CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p *\\<^sub>p c') ?m =\n                    (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p then 0\n                     else degreen (CN c n p) ?m + degreen c' ?m)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (CN c n p *\\<^sub>p p') (min ?n0.0 ?n1.0)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n                    (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh p' ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> degreen (CN c n p *\\<^sub>p p') ?m =\n                    (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n                     else degreen (CN c n p) ?m + degreen p' ?m)\n\ngoal (1 subgoal):\n 1. (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n    (CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p)", "by clarsimp"], ["proof (state)\nthis:\n  (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p)\n\ngoal (75 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 5. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 7. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                         (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Add v va *\\<^sub>p b) m =\n                         (if Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Add v va) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Sub v va *\\<^sub>p b) (min n0 n1)\nA total of 75 subgoals...", "}"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh (CN c n p) ?n0a2; isnpolyh (CN c' n' p') ?n1a2;\n   ?ma2 \\<le> min ?n0a2 ?n1a2\\<rbrakk>\n  \\<Longrightarrow> (CN c n p *\\<^sub>p CN c' n' p' = 0\\<^sub>p) =\n                    (CN c n p = 0\\<^sub>p \\<or> CN c' n' p' = 0\\<^sub>p)\n\ngoal (75 subgoals):\n 1. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                          (min n0 n1)\n 2. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p) =\n                         ((c)\\<^sub>p = 0\\<^sub>p \\<or>\n                          (c')\\<^sub>p = 0\\<^sub>p)\n 3. \\<And>c c' n0 n1 m.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) m =\n                         (if (c)\\<^sub>p = 0\\<^sub>p \\<or>\n                             (c')\\<^sub>p = 0\\<^sub>p\n                          then 0\n                          else degreen (c)\\<^sub>p m +\n                               degreen (c')\\<^sub>p m)\n 4. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Bound v *\\<^sub>p b) (min n0 n1)\n 5. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Bound v *\\<^sub>p b = 0\\<^sub>p) =\n                         (Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 6. \\<And>v b n0 n1 m.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Bound v *\\<^sub>p b) m =\n                         (if Bound v = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Bound v) m + degreen b m)\n 7. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (Add v va *\\<^sub>p b) (min n0 n1)\n 8. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> (Add v va *\\<^sub>p b = 0\\<^sub>p) =\n                         (Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p)\n 9. \\<And>v va b n0 n1 m.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        m \\<le> min n0 n1\\<rbrakk>\n       \\<Longrightarrow> degreen (Add v va *\\<^sub>p b) m =\n                         (if Add v va = 0\\<^sub>p \\<or> b = 0\\<^sub>p then 0\n                          else degreen (Add v va) m + degreen b m)\n 10. \\<And>v va b n0 n1 m.\n        \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n         m \\<le> min n0 n1\\<rbrakk>\n        \\<Longrightarrow> isnpolyh (Sub v va *\\<^sub>p b) (min n0 n1)\nA total of 75 subgoals...", "qed auto"], ["", "lemma polymul[simp]:\nfixes p::\"'a::field poly\"\nshows \"Ipoly bs (p *\\<^sub>p q) = Ipoly bs p * Ipoly bs q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly bs (p *\\<^sub>p q) = Ipoly bs p * Ipoly bs q", "by (induct p q rule: polymul.induct) (auto simp add: field_simps)"], ["", "lemma polymul_normh:\n  fixes p::\"'a::field poly\"\n  shows \"isnpolyh p n0 \\<Longrightarrow> isnpolyh q n1 \\<Longrightarrow> isnpolyh (p *\\<^sub>p q) (min n0 n1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpolyh p n0; isnpolyh q n1\\<rbrakk>\n    \\<Longrightarrow> isnpolyh (p *\\<^sub>p q) (min n0 n1)", "using polymul_properties(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh ?p ?n0.0; isnpolyh ?q ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (?p *\\<^sub>p ?q) (min ?n0.0 ?n1.0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpolyh p n0; isnpolyh q n1\\<rbrakk>\n    \\<Longrightarrow> isnpolyh (p *\\<^sub>p q) (min n0 n1)", "by blast"], ["", "lemma polymul_eq0_iff:\n  fixes p::\"'a::field poly\"\n  shows \"isnpolyh p n0 \\<Longrightarrow> isnpolyh q n1 \\<Longrightarrow> p *\\<^sub>p q = 0\\<^sub>p \\<longleftrightarrow> p = 0\\<^sub>p \\<or> q = 0\\<^sub>p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpolyh p n0; isnpolyh q n1\\<rbrakk>\n    \\<Longrightarrow> (p *\\<^sub>p q = 0\\<^sub>p) =\n                      (p = 0\\<^sub>p \\<or> q = 0\\<^sub>p)", "using polymul_properties(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh ?p ?n0.0; isnpolyh ?q ?n1.0;\n   ?m \\<le> min ?n0.0 ?n1.0\\<rbrakk>\n  \\<Longrightarrow> (?p *\\<^sub>p ?q = 0\\<^sub>p) =\n                    (?p = 0\\<^sub>p \\<or> ?q = 0\\<^sub>p)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpolyh p n0; isnpolyh q n1\\<rbrakk>\n    \\<Longrightarrow> (p *\\<^sub>p q = 0\\<^sub>p) =\n                      (p = 0\\<^sub>p \\<or> q = 0\\<^sub>p)", "by blast"], ["", "lemma polymul_degreen:\n  fixes p::\"'a::field poly\"\n  shows \"isnpolyh p n0 \\<Longrightarrow> isnpolyh q n1 \\<Longrightarrow> m \\<le> min n0 n1 \\<Longrightarrow>\n    degreen (p *\\<^sub>p q) m = (if p = 0\\<^sub>p \\<or> q = 0\\<^sub>p then 0 else degreen p m + degreen q m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpolyh p n0; isnpolyh q n1; m \\<le> min n0 n1\\<rbrakk>\n    \\<Longrightarrow> degreen (p *\\<^sub>p q) m =\n                      (if p = 0\\<^sub>p \\<or> q = 0\\<^sub>p then 0\n                       else degreen p m + degreen q m)", "by (fact polymul_properties(3))"], ["", "lemma polymul_norm:\n  fixes p::\"'a::field poly\"\n  shows \"isnpoly p \\<Longrightarrow> isnpoly q \\<Longrightarrow> isnpoly (polymul p q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpoly p; isnpoly q\\<rbrakk>\n    \\<Longrightarrow> isnpoly (p *\\<^sub>p q)", "using polymul_normh[of \"p\" \"0\" \"q\" \"0\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh p 0; isnpolyh q 0\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (p *\\<^sub>p q) (min 0 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpoly p; isnpoly q\\<rbrakk>\n    \\<Longrightarrow> isnpoly (p *\\<^sub>p q)", "by (simp add: isnpoly_def)"], ["", "lemma headconst_zero: \n  fixes p::\"'a::zero poly\"\n  shows \"isnpolyh p n0 \\<Longrightarrow> headconst p = 0 \\<longleftrightarrow> p = 0\\<^sub>p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p n0 \\<Longrightarrow>\n    (headconst p = (0::'a)) = (p = 0\\<^sub>p)", "by (induct p arbitrary: n0 rule: headconst.induct) auto"], ["", "(*lemma headconst_isnormNum: \"isnpolyh p n0 \\<Longrightarrow> isnormNum (headconst p)\"\n  by (induct p arbitrary: n0) auto\n\nlemma monic_eqI:\n  assumes np: \"isnpolyh p n0\"\n  shows \"INum (headconst p) * Ipoly bs (fst (monic p)) =\n    (Ipoly bs p ::'a::{field_char_0,field, power})\"\n  unfolding monic_def Let_def\nproof (cases \"headconst p = 0\\<^sub>N\", simp_all add: headconst_zero[OF np])\n  let ?h = \"headconst p\"\n  assume pz: \"p \\<noteq> 0\\<^sub>p\"\n  {\n    assume hz: \"INum ?h = (0::'a)\"\n    from headconst_isnormNum[OF np] have norm: \"isnormNum ?h\" \"isnormNum 0\\<^sub>N\"\n      by simp_all\n    from isnormNum_unique[where ?'a = 'a, OF norm] hz have \"?h = 0\\<^sub>N\"\n      by simp\n    with headconst_zero[OF np] have \"p = 0\\<^sub>p\"\n      by blast\n    with pz have False\n      by blast\n  }\n  then show \"INum (headconst p) = (0::'a) \\<longrightarrow> \\<lparr>p\\<rparr>\\<^sub>p\\<^bsup>bs\\<^esup> = 0\"\n    by blast\nqed*)"], ["", "text \\<open>polyneg is a negation and preserves normal forms\\<close>"], ["", "lemma polyneg[simp]:\nfixes p::\"'a::ring_1 poly\"\nshows \"Ipoly bs (polyneg p) = - Ipoly bs p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly bs (~\\<^sub>p p) = - Ipoly bs p", "by (induct p rule: polyneg.induct) auto"], ["", "lemma polyneg0:\nfixes p::\"'a::ring_1 poly\"\nshows \"isnpolyh p n \\<Longrightarrow> (~\\<^sub>p p) = 0\\<^sub>p \\<longleftrightarrow> p = 0\\<^sub>p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p n \\<Longrightarrow>\n    (~\\<^sub>p p = 0\\<^sub>p) = (p = 0\\<^sub>p)", "by (induct p arbitrary: n rule: polyneg.induct) auto"], ["", "lemma polyneg_polyneg:\nfixes p::\"'a::ring_1 poly\"\nshows \"isnpolyh p n0 \\<Longrightarrow> ~\\<^sub>p (~\\<^sub>p p) = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p n0 \\<Longrightarrow> ~\\<^sub>p (~\\<^sub>p p) = p", "by (induct p arbitrary: n0 rule: polyneg.induct) auto"], ["", "lemma polyneg_normh:\nfixes p::\"'a::ring_1 poly\"\nshows \"isnpolyh p n \\<Longrightarrow> isnpolyh (polyneg p) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p n \\<Longrightarrow> isnpolyh (~\\<^sub>p p) n", "by (induct p arbitrary: n rule: polyneg.induct) (auto simp add: polyneg0)"], ["", "lemma polyneg_norm:\nfixes p::\"'a::ring_1 poly\"\nshows \"isnpoly p \\<Longrightarrow> isnpoly (polyneg p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpoly p \\<Longrightarrow> isnpoly (~\\<^sub>p p)", "using polyneg_normh"], ["proof (prove)\nusing this:\n  isnpolyh ?p ?n \\<Longrightarrow> isnpolyh (~\\<^sub>p ?p) ?n\n\ngoal (1 subgoal):\n 1. isnpoly p \\<Longrightarrow> isnpoly (~\\<^sub>p p)", "by (simp add: isnpoly_def)"], ["", "text \\<open>polysub is a substraction and preserves normal forms\\<close>"], ["", "lemma polysub[simp]:\nfixes p::\"'a::ring_1 poly\"\nshows \"Ipoly bs (polysub p q) = Ipoly bs p - Ipoly bs q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly bs (p -\\<^sub>p q) = Ipoly bs p - Ipoly bs q", "by (simp add: polysub_def)"], ["", "lemma polysub_normh:\nfixes p::\"'a::ring_1 poly\"\nshows \"isnpolyh p n0 \\<Longrightarrow> isnpolyh q n1 \\<Longrightarrow> isnpolyh (polysub p q) (min n0 n1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpolyh p n0; isnpolyh q n1\\<rbrakk>\n    \\<Longrightarrow> isnpolyh (p -\\<^sub>p q) (min n0 n1)", "by (simp add: polysub_def polyneg_normh polyadd_normh)"], ["", "lemma polysub_norm:\nfixes p::\"'a::ring_1 poly\"\nshows \"isnpoly p \\<Longrightarrow> isnpoly q \\<Longrightarrow> isnpoly (polysub p q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpoly p; isnpoly q\\<rbrakk>\n    \\<Longrightarrow> isnpoly (p -\\<^sub>p q)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpoly p; isnpoly q\\<rbrakk>\n    \\<Longrightarrow> isnpoly (p -\\<^sub>p q)", "assume \"isnpoly p\" \"isnpoly q\""], ["proof (state)\nthis:\n  isnpoly p\n  isnpoly q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpoly p; isnpoly q\\<rbrakk>\n    \\<Longrightarrow> isnpoly (p -\\<^sub>p q)", "from polyadd_norm[OF _ polyneg_norm, OF this]"], ["proof (chain)\npicking this:\n  isnpoly (p +\\<^sub>p ~\\<^sub>p q)", "have \"isnpoly (p +\\<^sub>p ~\\<^sub>p q)\""], ["proof (prove)\nusing this:\n  isnpoly (p +\\<^sub>p ~\\<^sub>p q)\n\ngoal (1 subgoal):\n 1. isnpoly (p +\\<^sub>p ~\\<^sub>p q)", "."], ["proof (state)\nthis:\n  isnpoly (p +\\<^sub>p ~\\<^sub>p q)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpoly p; isnpoly q\\<rbrakk>\n    \\<Longrightarrow> isnpoly (p -\\<^sub>p q)", "thus \"isnpoly (polysub p q)\""], ["proof (prove)\nusing this:\n  isnpoly (p +\\<^sub>p ~\\<^sub>p q)\n\ngoal (1 subgoal):\n 1. isnpoly (p -\\<^sub>p q)", "by (simp add: polysub_def)"], ["proof (state)\nthis:\n  isnpoly (p -\\<^sub>p q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma polysub_same_0[simp]:\n  fixes p::\"'a::ring_1 poly\"\n  shows \"isnpolyh p n0 \\<Longrightarrow> polysub p p = 0\\<^sub>p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p n0 \\<Longrightarrow> p -\\<^sub>p p = 0\\<^sub>p", "unfolding polysub_def split_def fst_conv snd_conv"], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p n0 \\<Longrightarrow> p +\\<^sub>p ~\\<^sub>p p = 0\\<^sub>p", "by (induct p arbitrary: n0) (auto simp add: Let_def Nsub0[simplified Nsub_def])"], ["", "lemma polysub_0:\n  fixes p::\"'a::ring_1 poly\"\n  shows \"isnpolyh p n0 \\<Longrightarrow> isnpolyh q n1 \\<Longrightarrow> p -\\<^sub>p q = 0\\<^sub>p \\<longleftrightarrow> p = q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpolyh p n0; isnpolyh q n1\\<rbrakk>\n    \\<Longrightarrow> (p -\\<^sub>p q = 0\\<^sub>p) = (p = q)", "unfolding polysub_def split_def fst_conv snd_conv"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpolyh p n0; isnpolyh q n1\\<rbrakk>\n    \\<Longrightarrow> (p +\\<^sub>p ~\\<^sub>p q = 0\\<^sub>p) = (p = q)", "by (induct p q arbitrary: n0 n1 rule:polyadd.induct)\n    (auto simp: Nsub0[simplified Nsub_def] Let_def)"], ["", "text \\<open>polypow is a power function and preserves normal forms\\<close>"], ["", "lemma polypow[simp]:\n  \"Ipoly bs (polypow n p) = (Ipoly bs p :: 'a::field) ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly bs (p ^\\<^sub>p n) = Ipoly bs p ^ n", "proof (induct n rule: polypow.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. Ipoly bs (p ^\\<^sub>p 0) = Ipoly bs p ^ 0\n 2. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. Ipoly bs (p ^\\<^sub>p 0) = Ipoly bs p ^ 0\n 2. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly bs (p ^\\<^sub>p 0) = Ipoly bs p ^ 0", "by simp"], ["proof (state)\nthis:\n  Ipoly bs (p ^\\<^sub>p 0) = Ipoly bs p ^ 0\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "assume hyp: \"\\<And>x. Ipoly bs (p ^\\<^sub>p Suc n div 2) = Ipoly bs p ^ (Suc n div 2)\""], ["proof (state)\nthis:\n  Ipoly bs (p ^\\<^sub>p Suc n div 2) = Ipoly bs p ^ (Suc n div 2)\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "let ?q = \"polypow ((Suc n) div 2) p\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "let ?d = \"polymul ?q ?q\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "have \"odd (Suc n) \\<or> even (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. odd (Suc n) \\<or> even (Suc n)", "by simp"], ["proof (state)\nthis:\n  odd (Suc n) \\<or> even (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "moreover"], ["proof (state)\nthis:\n  odd (Suc n) \\<or> even (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "{"], ["proof (state)\nthis:\n  odd (Suc n) \\<or> even (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "assume odd: \"odd (Suc n)\""], ["proof (state)\nthis:\n  odd (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "have th: \"(Suc (Suc (Suc 0) * (Suc n div Suc (Suc 0)))) = Suc n div 2 + Suc n div 2 + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (Suc (Suc 0) * (Suc n div Suc (Suc 0))) =\n    Suc n div 2 + Suc n div 2 + 1", "by arith"], ["proof (state)\nthis:\n  Suc (Suc (Suc 0) * (Suc n div Suc (Suc 0))) =\n  Suc n div 2 + Suc n div 2 + 1\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "from odd"], ["proof (chain)\npicking this:\n  odd (Suc n)", "have \"Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs (polymul p ?d)\""], ["proof (prove)\nusing this:\n  odd (Suc n)\n\ngoal (1 subgoal):\n 1. Ipoly bs (p ^\\<^sub>p Suc n) =\n    Ipoly bs\n     (p *\\<^sub>p\n      (p ^\\<^sub>p Suc n div 2 *\\<^sub>p (p ^\\<^sub>p Suc n div 2)))", "by (simp add: Let_def)"], ["proof (state)\nthis:\n  Ipoly bs (p ^\\<^sub>p Suc n) =\n  Ipoly bs\n   (p *\\<^sub>p\n    (p ^\\<^sub>p Suc n div 2 *\\<^sub>p (p ^\\<^sub>p Suc n div 2)))\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "also"], ["proof (state)\nthis:\n  Ipoly bs (p ^\\<^sub>p Suc n) =\n  Ipoly bs\n   (p *\\<^sub>p\n    (p ^\\<^sub>p Suc n div 2 *\\<^sub>p (p ^\\<^sub>p Suc n div 2)))\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "have \"\\<dots> = (Ipoly bs p) * (Ipoly bs p)^(Suc n div 2) * (Ipoly bs p)^(Suc n div 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly bs\n     (p *\\<^sub>p\n      (p ^\\<^sub>p Suc n div 2 *\\<^sub>p (p ^\\<^sub>p Suc n div 2))) =\n    Ipoly bs p * Ipoly bs p ^ (Suc n div 2) * Ipoly bs p ^ (Suc n div 2)", "using hyp"], ["proof (prove)\nusing this:\n  Ipoly bs (p ^\\<^sub>p Suc n div 2) = Ipoly bs p ^ (Suc n div 2)\n\ngoal (1 subgoal):\n 1. Ipoly bs\n     (p *\\<^sub>p\n      (p ^\\<^sub>p Suc n div 2 *\\<^sub>p (p ^\\<^sub>p Suc n div 2))) =\n    Ipoly bs p * Ipoly bs p ^ (Suc n div 2) * Ipoly bs p ^ (Suc n div 2)", "by simp"], ["proof (state)\nthis:\n  Ipoly bs\n   (p *\\<^sub>p\n    (p ^\\<^sub>p Suc n div 2 *\\<^sub>p (p ^\\<^sub>p Suc n div 2))) =\n  Ipoly bs p * Ipoly bs p ^ (Suc n div 2) * Ipoly bs p ^ (Suc n div 2)\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "also"], ["proof (state)\nthis:\n  Ipoly bs\n   (p *\\<^sub>p\n    (p ^\\<^sub>p Suc n div 2 *\\<^sub>p (p ^\\<^sub>p Suc n div 2))) =\n  Ipoly bs p * Ipoly bs p ^ (Suc n div 2) * Ipoly bs p ^ (Suc n div 2)\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "have \"\\<dots> = (Ipoly bs p) ^ (Suc n div 2 + Suc n div 2 + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly bs p * Ipoly bs p ^ (Suc n div 2) * Ipoly bs p ^ (Suc n div 2) =\n    Ipoly bs p ^ (Suc n div 2 + Suc n div 2 + 1)", "by (simp only: power_add power_one_right) simp"], ["proof (state)\nthis:\n  Ipoly bs p * Ipoly bs p ^ (Suc n div 2) * Ipoly bs p ^ (Suc n div 2) =\n  Ipoly bs p ^ (Suc n div 2 + Suc n div 2 + 1)\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "also"], ["proof (state)\nthis:\n  Ipoly bs p * Ipoly bs p ^ (Suc n div 2) * Ipoly bs p ^ (Suc n div 2) =\n  Ipoly bs p ^ (Suc n div 2 + Suc n div 2 + 1)\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "have \"\\<dots> = (Ipoly bs p) ^ (Suc (Suc (Suc 0) * (Suc n div Suc (Suc 0))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly bs p ^ (Suc n div 2 + Suc n div 2 + 1) =\n    Ipoly bs p ^ Suc (Suc (Suc 0) * (Suc n div Suc (Suc 0)))", "by (simp only: th)"], ["proof (state)\nthis:\n  Ipoly bs p ^ (Suc n div 2 + Suc n div 2 + 1) =\n  Ipoly bs p ^ Suc (Suc (Suc 0) * (Suc n div Suc (Suc 0)))\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "finally"], ["proof (chain)\npicking this:\n  Ipoly bs (p ^\\<^sub>p Suc n) =\n  Ipoly bs p ^ Suc (Suc (Suc 0) * (Suc n div Suc (Suc 0)))", "have \"Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ Suc n\""], ["proof (prove)\nusing this:\n  Ipoly bs (p ^\\<^sub>p Suc n) =\n  Ipoly bs p ^ Suc (Suc (Suc 0) * (Suc n div Suc (Suc 0)))\n\ngoal (1 subgoal):\n 1. Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ Suc n", "unfolding numeral_2_eq_2 [symmetric]"], ["proof (prove)\nusing this:\n  Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ Suc (2 * (Suc n div 2))\n\ngoal (1 subgoal):\n 1. Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ Suc n", "using odd_two_times_div_two_nat [OF odd]"], ["proof (prove)\nusing this:\n  Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ Suc (2 * (Suc n div 2))\n  2 * (Suc n div 2) = Suc n - 1\n\ngoal (1 subgoal):\n 1. Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ Suc n", "by simp"], ["proof (state)\nthis:\n  Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ Suc n\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "}"], ["proof (state)\nthis:\n  odd (Suc n) \\<Longrightarrow>\n  Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ Suc n\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "moreover"], ["proof (state)\nthis:\n  odd (Suc n) \\<Longrightarrow>\n  Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ Suc n\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "{"], ["proof (state)\nthis:\n  odd (Suc n) \\<Longrightarrow>\n  Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ Suc n\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "assume even: \"even (Suc n)\""], ["proof (state)\nthis:\n  even (Suc n)\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "from even"], ["proof (chain)\npicking this:\n  even (Suc n)", "have \"Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs ?d\""], ["proof (prove)\nusing this:\n  even (Suc n)\n\ngoal (1 subgoal):\n 1. Ipoly bs (p ^\\<^sub>p Suc n) =\n    Ipoly bs (p ^\\<^sub>p Suc n div 2 *\\<^sub>p (p ^\\<^sub>p Suc n div 2))", "by (simp add: Let_def)"], ["proof (state)\nthis:\n  Ipoly bs (p ^\\<^sub>p Suc n) =\n  Ipoly bs (p ^\\<^sub>p Suc n div 2 *\\<^sub>p (p ^\\<^sub>p Suc n div 2))\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "also"], ["proof (state)\nthis:\n  Ipoly bs (p ^\\<^sub>p Suc n) =\n  Ipoly bs (p ^\\<^sub>p Suc n div 2 *\\<^sub>p (p ^\\<^sub>p Suc n div 2))\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "have \"\\<dots> = (Ipoly bs p) ^ (2 * (Suc n div 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly bs (p ^\\<^sub>p Suc n div 2 *\\<^sub>p (p ^\\<^sub>p Suc n div 2)) =\n    Ipoly bs p ^ (2 * (Suc n div 2))", "using hyp"], ["proof (prove)\nusing this:\n  Ipoly bs (p ^\\<^sub>p Suc n div 2) = Ipoly bs p ^ (Suc n div 2)\n\ngoal (1 subgoal):\n 1. Ipoly bs (p ^\\<^sub>p Suc n div 2 *\\<^sub>p (p ^\\<^sub>p Suc n div 2)) =\n    Ipoly bs p ^ (2 * (Suc n div 2))", "by (simp only: mult_2 power_add) simp"], ["proof (state)\nthis:\n  Ipoly bs (p ^\\<^sub>p Suc n div 2 *\\<^sub>p (p ^\\<^sub>p Suc n div 2)) =\n  Ipoly bs p ^ (2 * (Suc n div 2))\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "finally"], ["proof (chain)\npicking this:\n  Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ (2 * (Suc n div 2))", "have \"Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ Suc n\""], ["proof (prove)\nusing this:\n  Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ (2 * (Suc n div 2))\n\ngoal (1 subgoal):\n 1. Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ Suc n", "using even_two_times_div_two [OF even]"], ["proof (prove)\nusing this:\n  Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ (2 * (Suc n div 2))\n  2 * (Suc n div 2) = Suc n\n\ngoal (1 subgoal):\n 1. Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ Suc n", "by simp"], ["proof (state)\nthis:\n  Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ Suc n\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "}"], ["proof (state)\nthis:\n  even (Suc n) \\<Longrightarrow>\n  Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ Suc n\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       (\\<And>x.\n           Ipoly bs (p ^\\<^sub>p Suc v div 2) =\n           Ipoly bs p ^ (Suc v div 2)) \\<Longrightarrow>\n       Ipoly bs (p ^\\<^sub>p Suc v) = Ipoly bs p ^ Suc v", "ultimately"], ["proof (chain)\npicking this:\n  odd (Suc n) \\<or> even (Suc n)\n  odd (Suc n) \\<Longrightarrow>\n  Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ Suc n\n  even (Suc n) \\<Longrightarrow>\n  Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ Suc n", "show \"Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ Suc n\""], ["proof (prove)\nusing this:\n  odd (Suc n) \\<or> even (Suc n)\n  odd (Suc n) \\<Longrightarrow>\n  Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ Suc n\n  even (Suc n) \\<Longrightarrow>\n  Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ Suc n\n\ngoal (1 subgoal):\n 1. Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ Suc n", "by blast"], ["proof (state)\nthis:\n  Ipoly bs (p ^\\<^sub>p Suc n) = Ipoly bs p ^ Suc n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma polypow_normh:\n  fixes p :: \"'a::field poly\"\n  shows \"isnpolyh p n \\<Longrightarrow> isnpolyh (polypow k p) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p n \\<Longrightarrow> isnpolyh (p ^\\<^sub>p k) n", "proof (induct k arbitrary: n rule: polypow.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n. isnpolyh p n \\<Longrightarrow> isnpolyh (p ^\\<^sub>p 0) n\n 2. \\<And>v n.\n       \\<lbrakk>\\<And>x n.\n                   isnpolyh p n \\<Longrightarrow>\n                   isnpolyh (p ^\\<^sub>p Suc v div 2) n;\n        isnpolyh p n\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (p ^\\<^sub>p Suc v) n", "case 1"], ["proof (state)\nthis:\n  isnpolyh p n\n\ngoal (2 subgoals):\n 1. \\<And>n. isnpolyh p n \\<Longrightarrow> isnpolyh (p ^\\<^sub>p 0) n\n 2. \\<And>v n.\n       \\<lbrakk>\\<And>x n.\n                   isnpolyh p n \\<Longrightarrow>\n                   isnpolyh (p ^\\<^sub>p Suc v div 2) n;\n        isnpolyh p n\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (p ^\\<^sub>p Suc v) n", "then"], ["proof (chain)\npicking this:\n  isnpolyh p n", "show ?case"], ["proof (prove)\nusing this:\n  isnpolyh p n\n\ngoal (1 subgoal):\n 1. isnpolyh (p ^\\<^sub>p 0) n", "by auto"], ["proof (state)\nthis:\n  isnpolyh (p ^\\<^sub>p 0) n\n\ngoal (1 subgoal):\n 1. \\<And>v n.\n       \\<lbrakk>\\<And>x n.\n                   isnpolyh p n \\<Longrightarrow>\n                   isnpolyh (p ^\\<^sub>p Suc v div 2) n;\n        isnpolyh p n\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (p ^\\<^sub>p Suc v) n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v n.\n       \\<lbrakk>\\<And>x n.\n                   isnpolyh p n \\<Longrightarrow>\n                   isnpolyh (p ^\\<^sub>p Suc v div 2) n;\n        isnpolyh p n\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (p ^\\<^sub>p Suc v) n", "fix k n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v n.\n       \\<lbrakk>\\<And>x n.\n                   isnpolyh p n \\<Longrightarrow>\n                   isnpolyh (p ^\\<^sub>p Suc v div 2) n;\n        isnpolyh p n\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (p ^\\<^sub>p Suc v) n", "assume hyps: \"(\\<And>x n. isnpolyh p n \\<Longrightarrow> isnpolyh (p ^\\<^sub>p Suc k div 2) n)\" \"isnpolyh p n\""], ["proof (state)\nthis:\n  isnpolyh p ?n \\<Longrightarrow> isnpolyh (p ^\\<^sub>p Suc k div 2) ?n\n  isnpolyh p n\n\ngoal (1 subgoal):\n 1. \\<And>v n.\n       \\<lbrakk>\\<And>x n.\n                   isnpolyh p n \\<Longrightarrow>\n                   isnpolyh (p ^\\<^sub>p Suc v div 2) n;\n        isnpolyh p n\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (p ^\\<^sub>p Suc v) n", "let ?q = \"polypow (Suc k div 2) p\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v n.\n       \\<lbrakk>\\<And>x n.\n                   isnpolyh p n \\<Longrightarrow>\n                   isnpolyh (p ^\\<^sub>p Suc v div 2) n;\n        isnpolyh p n\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (p ^\\<^sub>p Suc v) n", "let ?d = \"polymul ?q ?q\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v n.\n       \\<lbrakk>\\<And>x n.\n                   isnpolyh p n \\<Longrightarrow>\n                   isnpolyh (p ^\\<^sub>p Suc v div 2) n;\n        isnpolyh p n\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (p ^\\<^sub>p Suc v) n", "from hyps"], ["proof (chain)\npicking this:\n  isnpolyh p ?n \\<Longrightarrow> isnpolyh (p ^\\<^sub>p Suc k div 2) ?n\n  isnpolyh p n", "have th1: \"isnpolyh ?q n\" and th2: \"isnpolyh p n\""], ["proof (prove)\nusing this:\n  isnpolyh p ?n \\<Longrightarrow> isnpolyh (p ^\\<^sub>p Suc k div 2) ?n\n  isnpolyh p n\n\ngoal (1 subgoal):\n 1. isnpolyh (p ^\\<^sub>p Suc k div 2) n &&& isnpolyh p n", "by blast+"], ["proof (state)\nthis:\n  isnpolyh (p ^\\<^sub>p Suc k div 2) n\n  isnpolyh p n\n\ngoal (1 subgoal):\n 1. \\<And>v n.\n       \\<lbrakk>\\<And>x n.\n                   isnpolyh p n \\<Longrightarrow>\n                   isnpolyh (p ^\\<^sub>p Suc v div 2) n;\n        isnpolyh p n\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (p ^\\<^sub>p Suc v) n", "from polymul_normh[OF th1 th1]"], ["proof (chain)\npicking this:\n  isnpolyh (p ^\\<^sub>p Suc k div 2 *\\<^sub>p (p ^\\<^sub>p Suc k div 2))\n   (min n n)", "have dn: \"isnpolyh ?d n\""], ["proof (prove)\nusing this:\n  isnpolyh (p ^\\<^sub>p Suc k div 2 *\\<^sub>p (p ^\\<^sub>p Suc k div 2))\n   (min n n)\n\ngoal (1 subgoal):\n 1. isnpolyh (p ^\\<^sub>p Suc k div 2 *\\<^sub>p (p ^\\<^sub>p Suc k div 2)) n", "by simp"], ["proof (state)\nthis:\n  isnpolyh (p ^\\<^sub>p Suc k div 2 *\\<^sub>p (p ^\\<^sub>p Suc k div 2)) n\n\ngoal (1 subgoal):\n 1. \\<And>v n.\n       \\<lbrakk>\\<And>x n.\n                   isnpolyh p n \\<Longrightarrow>\n                   isnpolyh (p ^\\<^sub>p Suc v div 2) n;\n        isnpolyh p n\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (p ^\\<^sub>p Suc v) n", "from polymul_normh[OF th2 dn]"], ["proof (chain)\npicking this:\n  isnpolyh\n   (p *\\<^sub>p\n    (p ^\\<^sub>p Suc k div 2 *\\<^sub>p (p ^\\<^sub>p Suc k div 2)))\n   (min n n)", "have on: \"isnpolyh (polymul p ?d) n\""], ["proof (prove)\nusing this:\n  isnpolyh\n   (p *\\<^sub>p\n    (p ^\\<^sub>p Suc k div 2 *\\<^sub>p (p ^\\<^sub>p Suc k div 2)))\n   (min n n)\n\ngoal (1 subgoal):\n 1. isnpolyh\n     (p *\\<^sub>p\n      (p ^\\<^sub>p Suc k div 2 *\\<^sub>p (p ^\\<^sub>p Suc k div 2)))\n     n", "by simp"], ["proof (state)\nthis:\n  isnpolyh\n   (p *\\<^sub>p\n    (p ^\\<^sub>p Suc k div 2 *\\<^sub>p (p ^\\<^sub>p Suc k div 2)))\n   n\n\ngoal (1 subgoal):\n 1. \\<And>v n.\n       \\<lbrakk>\\<And>x n.\n                   isnpolyh p n \\<Longrightarrow>\n                   isnpolyh (p ^\\<^sub>p Suc v div 2) n;\n        isnpolyh p n\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (p ^\\<^sub>p Suc v) n", "from dn on"], ["proof (chain)\npicking this:\n  isnpolyh (p ^\\<^sub>p Suc k div 2 *\\<^sub>p (p ^\\<^sub>p Suc k div 2)) n\n  isnpolyh\n   (p *\\<^sub>p\n    (p ^\\<^sub>p Suc k div 2 *\\<^sub>p (p ^\\<^sub>p Suc k div 2)))\n   n", "show \"isnpolyh (p ^\\<^sub>p Suc k) n\""], ["proof (prove)\nusing this:\n  isnpolyh (p ^\\<^sub>p Suc k div 2 *\\<^sub>p (p ^\\<^sub>p Suc k div 2)) n\n  isnpolyh\n   (p *\\<^sub>p\n    (p ^\\<^sub>p Suc k div 2 *\\<^sub>p (p ^\\<^sub>p Suc k div 2)))\n   n\n\ngoal (1 subgoal):\n 1. isnpolyh (p ^\\<^sub>p Suc k) n", "by (simp, unfold Let_def) auto"], ["proof (state)\nthis:\n  isnpolyh (p ^\\<^sub>p Suc k) n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma polypow_norm:\n  fixes p :: \"'a::field poly\"\n  shows \"isnpoly p \\<Longrightarrow> isnpoly (polypow k p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpoly p \\<Longrightarrow> isnpoly (p ^\\<^sub>p k)", "by (simp add: polypow_normh isnpoly_def)"], ["", "text \\<open>Finally the whole normalization\\<close>"], ["", "lemma polynate [simp]:\n  \"Ipoly bs (polynate p) = (Ipoly bs p :: 'a ::field)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly bs (polynate p) = Ipoly bs p", "by (induct p rule: polynate.induct) auto"], ["", "lemma polynate_norm[simp]:\n  fixes p :: \"'a::field poly\"\n  shows \"isnpoly (polynate p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpoly (polynate p)", "by (induct p rule: polynate.induct)\n     (simp_all add: polyadd_norm polymul_norm polysub_norm polyneg_norm polypow_norm,\n      simp_all add: isnpoly_def)"], ["", "text \\<open>shift1\\<close>"], ["", "lemma shift1:\n  fixes p :: \"'a::ring_1 poly\"\n  shows \"Ipoly bs (shift1 p) = Ipoly bs (Mul (Bound 0) p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly bs (shift1 p) = Ipoly bs (Mul (Bound 0) p)", "by (simp add: shift1_def)"], ["", "lemma shift1_isnpoly:\n  assumes \"isnpoly p\"\n    and \"p \\<noteq> 0\\<^sub>p\"\n  shows \"isnpoly (shift1 p) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpoly (shift1 p)", "using assms"], ["proof (prove)\nusing this:\n  isnpoly p\n  p \\<noteq> 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. isnpoly (shift1 p)", "by (simp add: shift1_def isnpoly_def)"], ["", "lemma shift1_nz[simp]:\"shift1 p \\<noteq> 0\\<^sub>p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. shift1 p \\<noteq> 0\\<^sub>p", "by (simp add: shift1_def)"], ["", "lemma funpow_shift1_isnpoly: \"isnpoly p \\<Longrightarrow> p \\<noteq> 0\\<^sub>p \\<Longrightarrow> isnpoly (funpow n shift1 p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpoly p; p \\<noteq> 0\\<^sub>p\\<rbrakk>\n    \\<Longrightarrow> isnpoly ((shift1 ^^ n) p)", "by (induct n arbitrary: p) (auto simp add: shift1_isnpoly funpow_swap1)"], ["", "lemma funpow_isnpolyh:\n  assumes \"\\<And>p. isnpolyh p n \\<Longrightarrow> isnpolyh (f p) n\"\n    and \"isnpolyh p n\"\n  shows \"isnpolyh (funpow k f p) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh ((f ^^ k) p) n", "using assms"], ["proof (prove)\nusing this:\n  isnpolyh ?p n \\<Longrightarrow> isnpolyh (f ?p) n\n  isnpolyh p n\n\ngoal (1 subgoal):\n 1. isnpolyh ((f ^^ k) p) n", "by (induct k arbitrary: p) auto"], ["", "lemma funpow_shift1:\n  \"(Ipoly bs (funpow n shift1 p) :: 'a :: comm_ring_1) =\n    Ipoly bs (Mul (Pw (Bound 0) n) p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly bs ((shift1 ^^ n) p) = Ipoly bs (Mul (Pw (Bound 0) n) p)", "by (induct n arbitrary: p) (simp_all add: shift1_isnpoly shift1)"], ["", "lemma shift1_isnpolyh: \"isnpolyh p n0 \\<Longrightarrow> p \\<noteq> 0\\<^sub>p \\<Longrightarrow> isnpolyh (shift1 p) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpolyh p n0; p \\<noteq> 0\\<^sub>p\\<rbrakk>\n    \\<Longrightarrow> isnpolyh (shift1 p) 0", "using isnpolyh_mono[where n=\"n0\" and n'=\"0\" and p=\"p\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> n0; isnpolyh p n0\\<rbrakk> \\<Longrightarrow> isnpolyh p 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpolyh p n0; p \\<noteq> 0\\<^sub>p\\<rbrakk>\n    \\<Longrightarrow> isnpolyh (shift1 p) 0", "by (simp add: shift1_def)"], ["", "lemma funpow_shift1_1:\n  \"(Ipoly bs (funpow n shift1 p) :: 'a :: field) =\n    Ipoly bs (funpow n shift1 (1)\\<^sub>p *\\<^sub>p p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly bs ((shift1 ^^ n) p) =\n    Ipoly bs ((shift1 ^^ n) (1::'a)\\<^sub>p *\\<^sub>p p)", "by (simp add: funpow_shift1)"], ["", "lemma poly_cmul[simp]:\n  fixes p :: \"'a::comm_ring_1 poly\"\n  shows \"Ipoly bs (poly_cmul c p) = Ipoly bs (Mul (C c) p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly bs (poly_cmul c p) = Ipoly bs (Mul (c)\\<^sub>p p)", "by (induct p, simp_all add: field_simps)"], ["", "lemma behead:\n  assumes \"isnpolyh p n\"\n  shows \"Ipoly bs (Add (Mul (head p) (Pw (Bound 0) (degree p))) (behead p)) =\n    (Ipoly bs p :: 'a :: comm_ring_1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly bs\n     (Add (Mul (head p) (Pw (Bound 0) (Polynomial_Expression.degree p)))\n       (behead p)) =\n    Ipoly bs p", "using assms"], ["proof (prove)\nusing this:\n  isnpolyh p n\n\ngoal (1 subgoal):\n 1. Ipoly bs\n     (Add (Mul (head p) (Pw (Bound 0) (Polynomial_Expression.degree p)))\n       (behead p)) =\n    Ipoly bs p", "proof (induct p arbitrary: n rule: behead.induct)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>c p n.\n       \\<lbrakk>\\<And>n.\n                   isnpolyh p n \\<Longrightarrow>\n                   Ipoly bs\n                    (Add (Mul (head p)\n                           (Pw (Bound 0) (Polynomial_Expression.degree p)))\n                      (behead p)) =\n                   Ipoly bs p;\n        isnpolyh (CN c 0 p) n\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs\n                          (Add (Mul (head (CN c 0 p))\n                                 (Pw (Bound 0)\n                                   (Polynomial_Expression.degree\n                                     (CN c 0 p))))\n                            (behead (CN c 0 p))) =\n                         Ipoly bs (CN c 0 p)\n 2. \\<And>v n.\n       isnpolyh (v)\\<^sub>p n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (v)\\<^sub>p)\n               (Pw (Bound 0) (Polynomial_Expression.degree (v)\\<^sub>p)))\n          (behead (v)\\<^sub>p)) =\n       Ipoly bs (v)\\<^sub>p\n 3. \\<And>v n.\n       isnpolyh (Bound v) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Bound v))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Bound v))))\n          (behead (Bound v))) =\n       Ipoly bs (Bound v)\n 4. \\<And>v va n.\n       isnpolyh (Add v va) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Add v va))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Add v va))))\n          (behead (Add v va))) =\n       Ipoly bs (Add v va)\n 5. \\<And>v va n.\n       isnpolyh (Sub v va) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Sub v va))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Sub v va))))\n          (behead (Sub v va))) =\n       Ipoly bs (Sub v va)\n 6. \\<And>v va n.\n       isnpolyh (Mul v va) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Mul v va))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Mul v va))))\n          (behead (Mul v va))) =\n       Ipoly bs (Mul v va)\n 7. \\<And>v n.\n       isnpolyh (Neg v) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Neg v))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Neg v))))\n          (behead (Neg v))) =\n       Ipoly bs (Neg v)\n 8. \\<And>v va n.\n       isnpolyh (Pw v va) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Pw v va))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Pw v va))))\n          (behead (Pw v va))) =\n       Ipoly bs (Pw v va)\n 9. \\<And>v vc vb n.\n       isnpolyh (CN v (Suc vc) vb) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (CN v (Suc vc) vb))\n               (Pw (Bound 0)\n                 (Polynomial_Expression.degree (CN v (Suc vc) vb))))\n          (behead (CN v (Suc vc) vb))) =\n       Ipoly bs (CN v (Suc vc) vb)", "case (1 c p n)"], ["proof (state)\nthis:\n  isnpolyh p ?n \\<Longrightarrow>\n  Ipoly bs\n   (Add (Mul (head p) (Pw (Bound 0) (Polynomial_Expression.degree p)))\n     (behead p)) =\n  Ipoly bs p\n  isnpolyh (CN c 0 p) n\n\ngoal (9 subgoals):\n 1. \\<And>c p n.\n       \\<lbrakk>\\<And>n.\n                   isnpolyh p n \\<Longrightarrow>\n                   Ipoly bs\n                    (Add (Mul (head p)\n                           (Pw (Bound 0) (Polynomial_Expression.degree p)))\n                      (behead p)) =\n                   Ipoly bs p;\n        isnpolyh (CN c 0 p) n\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs\n                          (Add (Mul (head (CN c 0 p))\n                                 (Pw (Bound 0)\n                                   (Polynomial_Expression.degree\n                                     (CN c 0 p))))\n                            (behead (CN c 0 p))) =\n                         Ipoly bs (CN c 0 p)\n 2. \\<And>v n.\n       isnpolyh (v)\\<^sub>p n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (v)\\<^sub>p)\n               (Pw (Bound 0) (Polynomial_Expression.degree (v)\\<^sub>p)))\n          (behead (v)\\<^sub>p)) =\n       Ipoly bs (v)\\<^sub>p\n 3. \\<And>v n.\n       isnpolyh (Bound v) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Bound v))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Bound v))))\n          (behead (Bound v))) =\n       Ipoly bs (Bound v)\n 4. \\<And>v va n.\n       isnpolyh (Add v va) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Add v va))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Add v va))))\n          (behead (Add v va))) =\n       Ipoly bs (Add v va)\n 5. \\<And>v va n.\n       isnpolyh (Sub v va) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Sub v va))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Sub v va))))\n          (behead (Sub v va))) =\n       Ipoly bs (Sub v va)\n 6. \\<And>v va n.\n       isnpolyh (Mul v va) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Mul v va))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Mul v va))))\n          (behead (Mul v va))) =\n       Ipoly bs (Mul v va)\n 7. \\<And>v n.\n       isnpolyh (Neg v) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Neg v))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Neg v))))\n          (behead (Neg v))) =\n       Ipoly bs (Neg v)\n 8. \\<And>v va n.\n       isnpolyh (Pw v va) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Pw v va))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Pw v va))))\n          (behead (Pw v va))) =\n       Ipoly bs (Pw v va)\n 9. \\<And>v vc vb n.\n       isnpolyh (CN v (Suc vc) vb) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (CN v (Suc vc) vb))\n               (Pw (Bound 0)\n                 (Polynomial_Expression.degree (CN v (Suc vc) vb))))\n          (behead (CN v (Suc vc) vb))) =\n       Ipoly bs (CN v (Suc vc) vb)", "then"], ["proof (chain)\npicking this:\n  isnpolyh p ?n \\<Longrightarrow>\n  Ipoly bs\n   (Add (Mul (head p) (Pw (Bound 0) (Polynomial_Expression.degree p)))\n     (behead p)) =\n  Ipoly bs p\n  isnpolyh (CN c 0 p) n", "have pn: \"isnpolyh p n\""], ["proof (prove)\nusing this:\n  isnpolyh p ?n \\<Longrightarrow>\n  Ipoly bs\n   (Add (Mul (head p) (Pw (Bound 0) (Polynomial_Expression.degree p)))\n     (behead p)) =\n  Ipoly bs p\n  isnpolyh (CN c 0 p) n\n\ngoal (1 subgoal):\n 1. isnpolyh p n", "by simp"], ["proof (state)\nthis:\n  isnpolyh p n\n\ngoal (9 subgoals):\n 1. \\<And>c p n.\n       \\<lbrakk>\\<And>n.\n                   isnpolyh p n \\<Longrightarrow>\n                   Ipoly bs\n                    (Add (Mul (head p)\n                           (Pw (Bound 0) (Polynomial_Expression.degree p)))\n                      (behead p)) =\n                   Ipoly bs p;\n        isnpolyh (CN c 0 p) n\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs\n                          (Add (Mul (head (CN c 0 p))\n                                 (Pw (Bound 0)\n                                   (Polynomial_Expression.degree\n                                     (CN c 0 p))))\n                            (behead (CN c 0 p))) =\n                         Ipoly bs (CN c 0 p)\n 2. \\<And>v n.\n       isnpolyh (v)\\<^sub>p n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (v)\\<^sub>p)\n               (Pw (Bound 0) (Polynomial_Expression.degree (v)\\<^sub>p)))\n          (behead (v)\\<^sub>p)) =\n       Ipoly bs (v)\\<^sub>p\n 3. \\<And>v n.\n       isnpolyh (Bound v) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Bound v))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Bound v))))\n          (behead (Bound v))) =\n       Ipoly bs (Bound v)\n 4. \\<And>v va n.\n       isnpolyh (Add v va) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Add v va))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Add v va))))\n          (behead (Add v va))) =\n       Ipoly bs (Add v va)\n 5. \\<And>v va n.\n       isnpolyh (Sub v va) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Sub v va))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Sub v va))))\n          (behead (Sub v va))) =\n       Ipoly bs (Sub v va)\n 6. \\<And>v va n.\n       isnpolyh (Mul v va) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Mul v va))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Mul v va))))\n          (behead (Mul v va))) =\n       Ipoly bs (Mul v va)\n 7. \\<And>v n.\n       isnpolyh (Neg v) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Neg v))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Neg v))))\n          (behead (Neg v))) =\n       Ipoly bs (Neg v)\n 8. \\<And>v va n.\n       isnpolyh (Pw v va) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Pw v va))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Pw v va))))\n          (behead (Pw v va))) =\n       Ipoly bs (Pw v va)\n 9. \\<And>v vc vb n.\n       isnpolyh (CN v (Suc vc) vb) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (CN v (Suc vc) vb))\n               (Pw (Bound 0)\n                 (Polynomial_Expression.degree (CN v (Suc vc) vb))))\n          (behead (CN v (Suc vc) vb))) =\n       Ipoly bs (CN v (Suc vc) vb)", "from 1(1)[OF pn]"], ["proof (chain)\npicking this:\n  Ipoly bs\n   (Add (Mul (head p) (Pw (Bound 0) (Polynomial_Expression.degree p)))\n     (behead p)) =\n  Ipoly bs p", "have th:\"Ipoly bs (Add (Mul (head p) (Pw (Bound 0) (degree p))) (behead p)) = Ipoly bs p\""], ["proof (prove)\nusing this:\n  Ipoly bs\n   (Add (Mul (head p) (Pw (Bound 0) (Polynomial_Expression.degree p)))\n     (behead p)) =\n  Ipoly bs p\n\ngoal (1 subgoal):\n 1. Ipoly bs\n     (Add (Mul (head p) (Pw (Bound 0) (Polynomial_Expression.degree p)))\n       (behead p)) =\n    Ipoly bs p", "."], ["proof (state)\nthis:\n  Ipoly bs\n   (Add (Mul (head p) (Pw (Bound 0) (Polynomial_Expression.degree p)))\n     (behead p)) =\n  Ipoly bs p\n\ngoal (9 subgoals):\n 1. \\<And>c p n.\n       \\<lbrakk>\\<And>n.\n                   isnpolyh p n \\<Longrightarrow>\n                   Ipoly bs\n                    (Add (Mul (head p)\n                           (Pw (Bound 0) (Polynomial_Expression.degree p)))\n                      (behead p)) =\n                   Ipoly bs p;\n        isnpolyh (CN c 0 p) n\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs\n                          (Add (Mul (head (CN c 0 p))\n                                 (Pw (Bound 0)\n                                   (Polynomial_Expression.degree\n                                     (CN c 0 p))))\n                            (behead (CN c 0 p))) =\n                         Ipoly bs (CN c 0 p)\n 2. \\<And>v n.\n       isnpolyh (v)\\<^sub>p n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (v)\\<^sub>p)\n               (Pw (Bound 0) (Polynomial_Expression.degree (v)\\<^sub>p)))\n          (behead (v)\\<^sub>p)) =\n       Ipoly bs (v)\\<^sub>p\n 3. \\<And>v n.\n       isnpolyh (Bound v) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Bound v))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Bound v))))\n          (behead (Bound v))) =\n       Ipoly bs (Bound v)\n 4. \\<And>v va n.\n       isnpolyh (Add v va) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Add v va))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Add v va))))\n          (behead (Add v va))) =\n       Ipoly bs (Add v va)\n 5. \\<And>v va n.\n       isnpolyh (Sub v va) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Sub v va))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Sub v va))))\n          (behead (Sub v va))) =\n       Ipoly bs (Sub v va)\n 6. \\<And>v va n.\n       isnpolyh (Mul v va) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Mul v va))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Mul v va))))\n          (behead (Mul v va))) =\n       Ipoly bs (Mul v va)\n 7. \\<And>v n.\n       isnpolyh (Neg v) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Neg v))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Neg v))))\n          (behead (Neg v))) =\n       Ipoly bs (Neg v)\n 8. \\<And>v va n.\n       isnpolyh (Pw v va) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Pw v va))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Pw v va))))\n          (behead (Pw v va))) =\n       Ipoly bs (Pw v va)\n 9. \\<And>v vc vb n.\n       isnpolyh (CN v (Suc vc) vb) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (CN v (Suc vc) vb))\n               (Pw (Bound 0)\n                 (Polynomial_Expression.degree (CN v (Suc vc) vb))))\n          (behead (CN v (Suc vc) vb))) =\n       Ipoly bs (CN v (Suc vc) vb)", "then"], ["proof (chain)\npicking this:\n  Ipoly bs\n   (Add (Mul (head p) (Pw (Bound 0) (Polynomial_Expression.degree p)))\n     (behead p)) =\n  Ipoly bs p", "show ?case"], ["proof (prove)\nusing this:\n  Ipoly bs\n   (Add (Mul (head p) (Pw (Bound 0) (Polynomial_Expression.degree p)))\n     (behead p)) =\n  Ipoly bs p\n\ngoal (1 subgoal):\n 1. Ipoly bs\n     (Add (Mul (head (CN c 0 p))\n            (Pw (Bound 0) (Polynomial_Expression.degree (CN c 0 p))))\n       (behead (CN c 0 p))) =\n    Ipoly bs (CN c 0 p)", "using \"1.hyps\""], ["proof (prove)\nusing this:\n  Ipoly bs\n   (Add (Mul (head p) (Pw (Bound 0) (Polynomial_Expression.degree p)))\n     (behead p)) =\n  Ipoly bs p\n  isnpolyh p ?n \\<Longrightarrow>\n  Ipoly bs\n   (Add (Mul (head p) (Pw (Bound 0) (Polynomial_Expression.degree p)))\n     (behead p)) =\n  Ipoly bs p\n\ngoal (1 subgoal):\n 1. Ipoly bs\n     (Add (Mul (head (CN c 0 p))\n            (Pw (Bound 0) (Polynomial_Expression.degree (CN c 0 p))))\n       (behead (CN c 0 p))) =\n    Ipoly bs (CN c 0 p)", "apply (simp add: Let_def,cases \"behead p = 0\\<^sub>p\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>Ipoly bs (head p) * bs ! 0 ^ Polynomial_Expression.degree p +\n             Ipoly bs (behead p) =\n             Ipoly bs p;\n     Ipoly bs\n      (Add (Mul (head p) (Pw (Bound 0) (Polynomial_Expression.degree p)))\n        (behead p)) =\n     Ipoly bs p;\n     \\<And>n.\n        isnpolyh p n \\<Longrightarrow>\n        Ipoly bs\n         (Add (Mul (head p) (Pw (Bound 0) (Polynomial_Expression.degree p)))\n           (behead p)) =\n        Ipoly bs p;\n     behead p = 0\\<^sub>p\\<rbrakk>\n    \\<Longrightarrow> (behead p = 0\\<^sub>p \\<longrightarrow>\n                       Ipoly bs (head p) *\n                       (bs ! 0 * bs ! 0 ^ Polynomial_Expression.degree p) =\n                       bs ! 0 * Ipoly bs p) \\<and>\n                      (behead p \\<noteq> 0\\<^sub>p \\<longrightarrow>\n                       Ipoly bs (head p) *\n                       (bs ! 0 * bs ! 0 ^ Polynomial_Expression.degree p) +\n                       bs ! 0 * Ipoly bs (behead p) =\n                       bs ! 0 * Ipoly bs p)\n 2. \\<lbrakk>Ipoly bs (head p) * bs ! 0 ^ Polynomial_Expression.degree p +\n             Ipoly bs (behead p) =\n             Ipoly bs p;\n     Ipoly bs\n      (Add (Mul (head p) (Pw (Bound 0) (Polynomial_Expression.degree p)))\n        (behead p)) =\n     Ipoly bs p;\n     \\<And>n.\n        isnpolyh p n \\<Longrightarrow>\n        Ipoly bs\n         (Add (Mul (head p) (Pw (Bound 0) (Polynomial_Expression.degree p)))\n           (behead p)) =\n        Ipoly bs p;\n     behead p \\<noteq> 0\\<^sub>p\\<rbrakk>\n    \\<Longrightarrow> (behead p = 0\\<^sub>p \\<longrightarrow>\n                       Ipoly bs (head p) *\n                       (bs ! 0 * bs ! 0 ^ Polynomial_Expression.degree p) =\n                       bs ! 0 * Ipoly bs p) \\<and>\n                      (behead p \\<noteq> 0\\<^sub>p \\<longrightarrow>\n                       Ipoly bs (head p) *\n                       (bs ! 0 * bs ! 0 ^ Polynomial_Expression.degree p) +\n                       bs ! 0 * Ipoly bs (behead p) =\n                       bs ! 0 * Ipoly bs p)", "apply (simp_all add: th[symmetric] field_simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Ipoly bs\n   (Add (Mul (head (CN c 0 p))\n          (Pw (Bound 0) (Polynomial_Expression.degree (CN c 0 p))))\n     (behead (CN c 0 p))) =\n  Ipoly bs (CN c 0 p)\n\ngoal (8 subgoals):\n 1. \\<And>v n.\n       isnpolyh (v)\\<^sub>p n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (v)\\<^sub>p)\n               (Pw (Bound 0) (Polynomial_Expression.degree (v)\\<^sub>p)))\n          (behead (v)\\<^sub>p)) =\n       Ipoly bs (v)\\<^sub>p\n 2. \\<And>v n.\n       isnpolyh (Bound v) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Bound v))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Bound v))))\n          (behead (Bound v))) =\n       Ipoly bs (Bound v)\n 3. \\<And>v va n.\n       isnpolyh (Add v va) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Add v va))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Add v va))))\n          (behead (Add v va))) =\n       Ipoly bs (Add v va)\n 4. \\<And>v va n.\n       isnpolyh (Sub v va) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Sub v va))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Sub v va))))\n          (behead (Sub v va))) =\n       Ipoly bs (Sub v va)\n 5. \\<And>v va n.\n       isnpolyh (Mul v va) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Mul v va))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Mul v va))))\n          (behead (Mul v va))) =\n       Ipoly bs (Mul v va)\n 6. \\<And>v n.\n       isnpolyh (Neg v) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Neg v))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Neg v))))\n          (behead (Neg v))) =\n       Ipoly bs (Neg v)\n 7. \\<And>v va n.\n       isnpolyh (Pw v va) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (Pw v va))\n               (Pw (Bound 0) (Polynomial_Expression.degree (Pw v va))))\n          (behead (Pw v va))) =\n       Ipoly bs (Pw v va)\n 8. \\<And>v vc vb n.\n       isnpolyh (CN v (Suc vc) vb) n \\<Longrightarrow>\n       Ipoly bs\n        (Add (Mul (head (CN v (Suc vc) vb))\n               (Pw (Bound 0)\n                 (Polynomial_Expression.degree (CN v (Suc vc) vb))))\n          (behead (CN v (Suc vc) vb))) =\n       Ipoly bs (CN v (Suc vc) vb)", "qed (auto simp add: Let_def)"], ["", "lemma behead_isnpolyh:\n  assumes \"isnpolyh p n\"\n  shows \"isnpolyh (behead p) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh (behead p) n", "using assms"], ["proof (prove)\nusing this:\n  isnpolyh p n\n\ngoal (1 subgoal):\n 1. isnpolyh (behead p) n", "by (induct p rule: behead.induct) (auto simp add: Let_def isnpolyh_mono)"], ["", "subsection \\<open>Miscellaneous lemmas about indexes, decrementation, substitution  etc ...\\<close>"], ["", "lemma isnpolyh_polybound0: \"isnpolyh p (Suc n) \\<Longrightarrow> polybound0 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p (Suc n) \\<Longrightarrow> polybound0 p", "proof (induct p arbitrary: n rule: poly.induct, auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a x3 n.\n       \\<lbrakk>\\<And>n.\n                   isnpolyh x1a (Suc n) \\<Longrightarrow> polybound0 x1a;\n        \\<And>n. isnpolyh x3 (Suc n) \\<Longrightarrow> polybound0 x3;\n        Suc n \\<le> x2a; isnpolyh x1a (Suc x2a); isnpolyh x3 x2a;\n        x3 \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> polybound0 x3", "case prems: (1 c n p n')"], ["proof (state)\nthis:\n  isnpolyh c (Suc ?n) \\<Longrightarrow> polybound0 c\n  isnpolyh p (Suc ?n) \\<Longrightarrow> polybound0 p\n  Suc n' \\<le> n\n  isnpolyh c (Suc n)\n  isnpolyh p n\n  p \\<noteq> 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2a x3 n.\n       \\<lbrakk>\\<And>n.\n                   isnpolyh x1a (Suc n) \\<Longrightarrow> polybound0 x1a;\n        \\<And>n. isnpolyh x3 (Suc n) \\<Longrightarrow> polybound0 x3;\n        Suc n \\<le> x2a; isnpolyh x1a (Suc x2a); isnpolyh x3 x2a;\n        x3 \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> polybound0 x3", "then"], ["proof (chain)\npicking this:\n  isnpolyh c (Suc ?n) \\<Longrightarrow> polybound0 c\n  isnpolyh p (Suc ?n) \\<Longrightarrow> polybound0 p\n  Suc n' \\<le> n\n  isnpolyh c (Suc n)\n  isnpolyh p n\n  p \\<noteq> 0\\<^sub>p", "have \"n = Suc (n - 1)\""], ["proof (prove)\nusing this:\n  isnpolyh c (Suc ?n) \\<Longrightarrow> polybound0 c\n  isnpolyh p (Suc ?n) \\<Longrightarrow> polybound0 p\n  Suc n' \\<le> n\n  isnpolyh c (Suc n)\n  isnpolyh p n\n  p \\<noteq> 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. n = Suc (n - 1)", "by simp"], ["proof (state)\nthis:\n  n = Suc (n - 1)\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2a x3 n.\n       \\<lbrakk>\\<And>n.\n                   isnpolyh x1a (Suc n) \\<Longrightarrow> polybound0 x1a;\n        \\<And>n. isnpolyh x3 (Suc n) \\<Longrightarrow> polybound0 x3;\n        Suc n \\<le> x2a; isnpolyh x1a (Suc x2a); isnpolyh x3 x2a;\n        x3 \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> polybound0 x3", "then"], ["proof (chain)\npicking this:\n  n = Suc (n - 1)", "have \"isnpolyh p (Suc (n - 1))\""], ["proof (prove)\nusing this:\n  n = Suc (n - 1)\n\ngoal (1 subgoal):\n 1. isnpolyh p (Suc (n - 1))", "using \\<open>isnpolyh p n\\<close>"], ["proof (prove)\nusing this:\n  n = Suc (n - 1)\n  isnpolyh p n\n\ngoal (1 subgoal):\n 1. isnpolyh p (Suc (n - 1))", "by simp"], ["proof (state)\nthis:\n  isnpolyh p (Suc (n - 1))\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2a x3 n.\n       \\<lbrakk>\\<And>n.\n                   isnpolyh x1a (Suc n) \\<Longrightarrow> polybound0 x1a;\n        \\<And>n. isnpolyh x3 (Suc n) \\<Longrightarrow> polybound0 x3;\n        Suc n \\<le> x2a; isnpolyh x1a (Suc x2a); isnpolyh x3 x2a;\n        x3 \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> polybound0 x3", "with prems(2)"], ["proof (chain)\npicking this:\n  isnpolyh p (Suc ?n) \\<Longrightarrow> polybound0 p\n  isnpolyh p (Suc (n - 1))", "show ?case"], ["proof (prove)\nusing this:\n  isnpolyh p (Suc ?n) \\<Longrightarrow> polybound0 p\n  isnpolyh p (Suc (n - 1))\n\ngoal (1 subgoal):\n 1. polybound0 p", "by simp"], ["proof (state)\nthis:\n  polybound0 p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma isconstant_polybound0: \"isnpolyh p n0 \\<Longrightarrow> isconstant p \\<longleftrightarrow> polybound0 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p n0 \\<Longrightarrow> isconstant p = polybound0 p", "by (induct p arbitrary: n0 rule: isconstant.induct) (auto simp add: isnpolyh_polybound0)"], ["", "lemma decrpoly_zero[simp]: \"decrpoly p = 0\\<^sub>p \\<longleftrightarrow> p = 0\\<^sub>p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (decrpoly p = 0\\<^sub>p) = (p = 0\\<^sub>p)", "by (induct p) auto"], ["", "lemma decrpoly_normh: \"isnpolyh p n0 \\<Longrightarrow> polybound0 p \\<Longrightarrow> isnpolyh (decrpoly p) (n0 - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpolyh p n0; polybound0 p\\<rbrakk>\n    \\<Longrightarrow> isnpolyh (decrpoly p) (n0 - 1)", "apply (induct p arbitrary: n0)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x n0.\n       \\<lbrakk>isnpolyh (x)\\<^sub>p n0; polybound0 (x)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (decrpoly (x)\\<^sub>p) (n0 - 1)\n 2. \\<And>x n0.\n       \\<lbrakk>isnpolyh (Bound x) n0; polybound0 (Bound x)\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (decrpoly (Bound x)) (n0 - 1)\n 3. \\<And>p1 p2 n0.\n       \\<lbrakk>\\<And>n0.\n                   \\<lbrakk>isnpolyh p1 n0; polybound0 p1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (decrpoly p1) (n0 - 1);\n        \\<And>n0.\n           \\<lbrakk>isnpolyh p2 n0; polybound0 p2\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (decrpoly p2) (n0 - 1);\n        isnpolyh (Add p1 p2) n0; polybound0 (Add p1 p2)\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (decrpoly (Add p1 p2)) (n0 - 1)\n 4. \\<And>p1 p2 n0.\n       \\<lbrakk>\\<And>n0.\n                   \\<lbrakk>isnpolyh p1 n0; polybound0 p1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (decrpoly p1) (n0 - 1);\n        \\<And>n0.\n           \\<lbrakk>isnpolyh p2 n0; polybound0 p2\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (decrpoly p2) (n0 - 1);\n        isnpolyh (Sub p1 p2) n0; polybound0 (Sub p1 p2)\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (decrpoly (Sub p1 p2)) (n0 - 1)\n 5. \\<And>p1 p2 n0.\n       \\<lbrakk>\\<And>n0.\n                   \\<lbrakk>isnpolyh p1 n0; polybound0 p1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (decrpoly p1) (n0 - 1);\n        \\<And>n0.\n           \\<lbrakk>isnpolyh p2 n0; polybound0 p2\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (decrpoly p2) (n0 - 1);\n        isnpolyh (Mul p1 p2) n0; polybound0 (Mul p1 p2)\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (decrpoly (Mul p1 p2)) (n0 - 1)\n 6. \\<And>p n0.\n       \\<lbrakk>\\<And>n0.\n                   \\<lbrakk>isnpolyh p n0; polybound0 p\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (decrpoly p) (n0 - 1);\n        isnpolyh (Neg p) n0; polybound0 (Neg p)\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (decrpoly (Neg p)) (n0 - 1)\n 7. \\<And>p x2a n0.\n       \\<lbrakk>\\<And>n0.\n                   \\<lbrakk>isnpolyh p n0; polybound0 p\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (decrpoly p) (n0 - 1);\n        isnpolyh (Pw p x2a) n0; polybound0 (Pw p x2a)\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (decrpoly (Pw p x2a)) (n0 - 1)\n 8. \\<And>p1 x2a p2 n0.\n       \\<lbrakk>\\<And>n0.\n                   \\<lbrakk>isnpolyh p1 n0; polybound0 p1\\<rbrakk>\n                   \\<Longrightarrow> isnpolyh (decrpoly p1) (n0 - 1);\n        \\<And>n0.\n           \\<lbrakk>isnpolyh p2 n0; polybound0 p2\\<rbrakk>\n           \\<Longrightarrow> isnpolyh (decrpoly p2) (n0 - 1);\n        isnpolyh (CN p1 x2a p2) n0; polybound0 (CN p1 x2a p2)\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (decrpoly (CN p1 x2a p2)) (n0 - 1)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p1 x2a p2 n0.\n       \\<lbrakk>\\<And>n0.\n                   isnpolyh p1 n0 \\<Longrightarrow>\n                   isnpolyh (decrpoly p1) (n0 - Suc 0);\n        \\<And>n0.\n           isnpolyh p2 n0 \\<Longrightarrow>\n           isnpolyh (decrpoly p2) (n0 - Suc 0);\n        n0 \\<le> x2a; 0 < x2a; isnpolyh p1 (Suc x2a); polybound0 p1;\n        polybound0 p2; isnpolyh p2 x2a; p2 \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (decrpoly p1) x2a", "apply atomize"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p1 x2a p2 n0.\n       \\<lbrakk>\\<forall>n0.\n                   isnpolyh p1 n0 \\<longrightarrow>\n                   isnpolyh (decrpoly p1) (n0 - Suc 0);\n        \\<forall>n0.\n           isnpolyh p2 n0 \\<longrightarrow>\n           isnpolyh (decrpoly p2) (n0 - Suc 0);\n        n0 \\<le> x2a; 0 < x2a; isnpolyh p1 (Suc x2a); polybound0 p1;\n        polybound0 p2; isnpolyh p2 x2a; p2 \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (decrpoly p1) x2a", "apply (rename_tac nat a b, erule_tac x = \"Suc nat\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p1 nat a b.\n       \\<lbrakk>\\<forall>n0.\n                   isnpolyh a n0 \\<longrightarrow>\n                   isnpolyh (decrpoly a) (n0 - Suc 0);\n        b \\<le> nat; 0 < nat; isnpolyh p1 (Suc nat); polybound0 p1;\n        polybound0 a; isnpolyh a nat; a \\<noteq> 0\\<^sub>p;\n        isnpolyh p1 (Suc nat) \\<longrightarrow>\n        isnpolyh (decrpoly p1) (Suc nat - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> isnpolyh (decrpoly p1) nat", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma head_polybound0: \"isnpolyh p n0 \\<Longrightarrow> polybound0 (head p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p n0 \\<Longrightarrow> polybound0 (head p)", "by (induct p  arbitrary: n0 rule: head.induct) (auto intro: isnpolyh_polybound0)"], ["", "lemma polybound0_I:\n  assumes \"polybound0 a\"\n  shows \"Ipoly (b # bs) a = Ipoly (b' # bs) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly (b # bs) a = Ipoly (b' # bs) a", "using assms"], ["proof (prove)\nusing this:\n  polybound0 a\n\ngoal (1 subgoal):\n 1. Ipoly (b # bs) a = Ipoly (b' # bs) a", "by (induct a rule: poly.induct) auto"], ["", "lemma polysubst0_I: \"Ipoly (b # bs) (polysubst0 a t) = Ipoly ((Ipoly (b # bs) a) # bs) t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly (b # bs) (polysubst0 a t) = Ipoly (Ipoly (b # bs) a # bs) t", "by (induct t) simp_all"], ["", "lemma polysubst0_I':\n  assumes \"polybound0 a\"\n  shows \"Ipoly (b # bs) (polysubst0 a t) = Ipoly ((Ipoly (b' # bs) a) # bs) t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly (b # bs) (polysubst0 a t) = Ipoly (Ipoly (b' # bs) a # bs) t", "by (induct t) (simp_all add: polybound0_I[OF assms, where b=\"b\" and b'=\"b'\"])"], ["", "lemma decrpoly:\n  assumes \"polybound0 t\"\n  shows \"Ipoly (x # bs) t = Ipoly bs (decrpoly t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly (x # bs) t = Ipoly bs (decrpoly t)", "using assms"], ["proof (prove)\nusing this:\n  polybound0 t\n\ngoal (1 subgoal):\n 1. Ipoly (x # bs) t = Ipoly bs (decrpoly t)", "by (induct t rule: decrpoly.induct) simp_all"], ["", "lemma polysubst0_polybound0:\n  assumes \"polybound0 t\"\n  shows \"polybound0 (polysubst0 t a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. polybound0 (polysubst0 t a)", "using assms"], ["proof (prove)\nusing this:\n  polybound0 t\n\ngoal (1 subgoal):\n 1. polybound0 (polysubst0 t a)", "by (induct a rule: poly.induct) auto"], ["", "lemma degree0_polybound0: \"isnpolyh p n \\<Longrightarrow> degree p = 0 \\<Longrightarrow> polybound0 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpolyh p n; Polynomial_Expression.degree p = 0\\<rbrakk>\n    \\<Longrightarrow> polybound0 p", "by (induct p arbitrary: n rule: degree.induct) (auto simp add: isnpolyh_polybound0)"], ["", "primrec maxindex :: \"'a poly \\<Rightarrow> nat\"\nwhere\n  \"maxindex (Bound n) = n + 1\"\n| \"maxindex (CN c n p) = max  (n + 1) (max (maxindex c) (maxindex p))\"\n| \"maxindex (Add p q) = max (maxindex p) (maxindex q)\"\n| \"maxindex (Sub p q) = max (maxindex p) (maxindex q)\"\n| \"maxindex (Mul p q) = max (maxindex p) (maxindex q)\"\n| \"maxindex (Neg p) = maxindex p\"\n| \"maxindex (Pw p n) = maxindex p\"\n| \"maxindex (C x) = 0\""], ["", "definition wf_bs :: \"'a list \\<Rightarrow> 'a poly \\<Rightarrow> bool\"\n  where \"wf_bs bs p \\<longleftrightarrow> length bs \\<ge> maxindex p\""], ["", "lemma wf_bs_coefficients: \"wf_bs bs p \\<Longrightarrow> \\<forall>c \\<in> set (coefficients p). wf_bs bs c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_bs bs p \\<Longrightarrow>\n    \\<forall>c\\<in>set (coefficients p). wf_bs bs c", "proof (induct p rule: coefficients.induct)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>c p.\n       \\<lbrakk>wf_bs bs p \\<Longrightarrow>\n                Ball (set (coefficients p)) (wf_bs bs);\n        wf_bs bs (CN c 0 p)\\<rbrakk>\n       \\<Longrightarrow> Ball (set (coefficients (CN c 0 p))) (wf_bs bs)\n 2. \\<And>v.\n       wf_bs bs (v)\\<^sub>p \\<Longrightarrow>\n       Ball (set (coefficients (v)\\<^sub>p)) (wf_bs bs)\n 3. \\<And>v.\n       wf_bs bs (Bound v) \\<Longrightarrow>\n       Ball (set (coefficients (Bound v))) (wf_bs bs)\n 4. \\<And>v va.\n       wf_bs bs (Add v va) \\<Longrightarrow>\n       Ball (set (coefficients (Add v va))) (wf_bs bs)\n 5. \\<And>v va.\n       wf_bs bs (Sub v va) \\<Longrightarrow>\n       Ball (set (coefficients (Sub v va))) (wf_bs bs)\n 6. \\<And>v va.\n       wf_bs bs (Mul v va) \\<Longrightarrow>\n       Ball (set (coefficients (Mul v va))) (wf_bs bs)\n 7. \\<And>v.\n       wf_bs bs (Neg v) \\<Longrightarrow>\n       Ball (set (coefficients (Neg v))) (wf_bs bs)\n 8. \\<And>v va.\n       wf_bs bs (Pw v va) \\<Longrightarrow>\n       Ball (set (coefficients (Pw v va))) (wf_bs bs)\n 9. \\<And>v vc vb.\n       wf_bs bs (CN v (Suc vc) vb) \\<Longrightarrow>\n       Ball (set (coefficients (CN v (Suc vc) vb))) (wf_bs bs)", "case (1 c p)"], ["proof (state)\nthis:\n  wf_bs bs p \\<Longrightarrow>\n  \\<forall>a\\<in>set (coefficients p). wf_bs bs a\n  wf_bs bs (CN c 0 p)\n\ngoal (9 subgoals):\n 1. \\<And>c p.\n       \\<lbrakk>wf_bs bs p \\<Longrightarrow>\n                Ball (set (coefficients p)) (wf_bs bs);\n        wf_bs bs (CN c 0 p)\\<rbrakk>\n       \\<Longrightarrow> Ball (set (coefficients (CN c 0 p))) (wf_bs bs)\n 2. \\<And>v.\n       wf_bs bs (v)\\<^sub>p \\<Longrightarrow>\n       Ball (set (coefficients (v)\\<^sub>p)) (wf_bs bs)\n 3. \\<And>v.\n       wf_bs bs (Bound v) \\<Longrightarrow>\n       Ball (set (coefficients (Bound v))) (wf_bs bs)\n 4. \\<And>v va.\n       wf_bs bs (Add v va) \\<Longrightarrow>\n       Ball (set (coefficients (Add v va))) (wf_bs bs)\n 5. \\<And>v va.\n       wf_bs bs (Sub v va) \\<Longrightarrow>\n       Ball (set (coefficients (Sub v va))) (wf_bs bs)\n 6. \\<And>v va.\n       wf_bs bs (Mul v va) \\<Longrightarrow>\n       Ball (set (coefficients (Mul v va))) (wf_bs bs)\n 7. \\<And>v.\n       wf_bs bs (Neg v) \\<Longrightarrow>\n       Ball (set (coefficients (Neg v))) (wf_bs bs)\n 8. \\<And>v va.\n       wf_bs bs (Pw v va) \\<Longrightarrow>\n       Ball (set (coefficients (Pw v va))) (wf_bs bs)\n 9. \\<And>v vc vb.\n       wf_bs bs (CN v (Suc vc) vb) \\<Longrightarrow>\n       Ball (set (coefficients (CN v (Suc vc) vb))) (wf_bs bs)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>set (coefficients (CN c 0 p)). wf_bs bs a", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (coefficients (CN c 0 p)) \\<Longrightarrow> wf_bs bs x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (coefficients (CN c 0 p)) \\<Longrightarrow> wf_bs bs x", "assume xc: \"x \\<in> set (coefficients (CN c 0 p))\""], ["proof (state)\nthis:\n  x \\<in> set (coefficients (CN c 0 p))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (coefficients (CN c 0 p)) \\<Longrightarrow> wf_bs bs x", "then"], ["proof (chain)\npicking this:\n  x \\<in> set (coefficients (CN c 0 p))", "have \"x = c \\<or> x \\<in> set (coefficients p)\""], ["proof (prove)\nusing this:\n  x \\<in> set (coefficients (CN c 0 p))\n\ngoal (1 subgoal):\n 1. x = c \\<or> x \\<in> set (coefficients p)", "by simp"], ["proof (state)\nthis:\n  x = c \\<or> x \\<in> set (coefficients p)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (coefficients (CN c 0 p)) \\<Longrightarrow> wf_bs bs x", "moreover"], ["proof (state)\nthis:\n  x = c \\<or> x \\<in> set (coefficients p)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (coefficients (CN c 0 p)) \\<Longrightarrow> wf_bs bs x", "{"], ["proof (state)\nthis:\n  x = c \\<or> x \\<in> set (coefficients p)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (coefficients (CN c 0 p)) \\<Longrightarrow> wf_bs bs x", "assume \"x = c\""], ["proof (state)\nthis:\n  x = c\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (coefficients (CN c 0 p)) \\<Longrightarrow> wf_bs bs x", "then"], ["proof (chain)\npicking this:\n  x = c", "have \"wf_bs bs x\""], ["proof (prove)\nusing this:\n  x = c\n\ngoal (1 subgoal):\n 1. wf_bs bs x", "using \"1.prems\""], ["proof (prove)\nusing this:\n  x = c\n  wf_bs bs (CN c 0 p)\n\ngoal (1 subgoal):\n 1. wf_bs bs x", "unfolding wf_bs_def"], ["proof (prove)\nusing this:\n  x = c\n  maxindex (CN c 0 p) \\<le> length bs\n\ngoal (1 subgoal):\n 1. maxindex x \\<le> length bs", "by simp"], ["proof (state)\nthis:\n  wf_bs bs x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (coefficients (CN c 0 p)) \\<Longrightarrow> wf_bs bs x", "}"], ["proof (state)\nthis:\n  x = c \\<Longrightarrow> wf_bs bs x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (coefficients (CN c 0 p)) \\<Longrightarrow> wf_bs bs x", "moreover"], ["proof (state)\nthis:\n  x = c \\<Longrightarrow> wf_bs bs x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (coefficients (CN c 0 p)) \\<Longrightarrow> wf_bs bs x", "{"], ["proof (state)\nthis:\n  x = c \\<Longrightarrow> wf_bs bs x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (coefficients (CN c 0 p)) \\<Longrightarrow> wf_bs bs x", "assume H: \"x \\<in> set (coefficients p)\""], ["proof (state)\nthis:\n  x \\<in> set (coefficients p)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (coefficients (CN c 0 p)) \\<Longrightarrow> wf_bs bs x", "from \"1.prems\""], ["proof (chain)\npicking this:\n  wf_bs bs (CN c 0 p)", "have \"wf_bs bs p\""], ["proof (prove)\nusing this:\n  wf_bs bs (CN c 0 p)\n\ngoal (1 subgoal):\n 1. wf_bs bs p", "unfolding wf_bs_def"], ["proof (prove)\nusing this:\n  maxindex (CN c 0 p) \\<le> length bs\n\ngoal (1 subgoal):\n 1. maxindex p \\<le> length bs", "by simp"], ["proof (state)\nthis:\n  wf_bs bs p\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (coefficients (CN c 0 p)) \\<Longrightarrow> wf_bs bs x", "with \"1.hyps\" H"], ["proof (chain)\npicking this:\n  wf_bs bs p \\<Longrightarrow>\n  \\<forall>a\\<in>set (coefficients p). wf_bs bs a\n  x \\<in> set (coefficients p)\n  wf_bs bs p", "have \"wf_bs bs x\""], ["proof (prove)\nusing this:\n  wf_bs bs p \\<Longrightarrow>\n  \\<forall>a\\<in>set (coefficients p). wf_bs bs a\n  x \\<in> set (coefficients p)\n  wf_bs bs p\n\ngoal (1 subgoal):\n 1. wf_bs bs x", "by blast"], ["proof (state)\nthis:\n  wf_bs bs x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (coefficients (CN c 0 p)) \\<Longrightarrow> wf_bs bs x", "}"], ["proof (state)\nthis:\n  x \\<in> set (coefficients p) \\<Longrightarrow> wf_bs bs x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (coefficients (CN c 0 p)) \\<Longrightarrow> wf_bs bs x", "ultimately"], ["proof (chain)\npicking this:\n  x = c \\<or> x \\<in> set (coefficients p)\n  x = c \\<Longrightarrow> wf_bs bs x\n  x \\<in> set (coefficients p) \\<Longrightarrow> wf_bs bs x", "show \"wf_bs bs x\""], ["proof (prove)\nusing this:\n  x = c \\<or> x \\<in> set (coefficients p)\n  x = c \\<Longrightarrow> wf_bs bs x\n  x \\<in> set (coefficients p) \\<Longrightarrow> wf_bs bs x\n\ngoal (1 subgoal):\n 1. wf_bs bs x", "by blast"], ["proof (state)\nthis:\n  wf_bs bs x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>a\\<in>set (coefficients (CN c 0 p)). wf_bs bs a\n\ngoal (8 subgoals):\n 1. \\<And>v.\n       wf_bs bs (v)\\<^sub>p \\<Longrightarrow>\n       Ball (set (coefficients (v)\\<^sub>p)) (wf_bs bs)\n 2. \\<And>v.\n       wf_bs bs (Bound v) \\<Longrightarrow>\n       Ball (set (coefficients (Bound v))) (wf_bs bs)\n 3. \\<And>v va.\n       wf_bs bs (Add v va) \\<Longrightarrow>\n       Ball (set (coefficients (Add v va))) (wf_bs bs)\n 4. \\<And>v va.\n       wf_bs bs (Sub v va) \\<Longrightarrow>\n       Ball (set (coefficients (Sub v va))) (wf_bs bs)\n 5. \\<And>v va.\n       wf_bs bs (Mul v va) \\<Longrightarrow>\n       Ball (set (coefficients (Mul v va))) (wf_bs bs)\n 6. \\<And>v.\n       wf_bs bs (Neg v) \\<Longrightarrow>\n       Ball (set (coefficients (Neg v))) (wf_bs bs)\n 7. \\<And>v va.\n       wf_bs bs (Pw v va) \\<Longrightarrow>\n       Ball (set (coefficients (Pw v va))) (wf_bs bs)\n 8. \\<And>v vc vb.\n       wf_bs bs (CN v (Suc vc) vb) \\<Longrightarrow>\n       Ball (set (coefficients (CN v (Suc vc) vb))) (wf_bs bs)", "qed simp_all"], ["", "lemma maxindex_coefficients: \"\\<forall>c \\<in> set (coefficients p). maxindex c \\<le> maxindex p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set (coefficients p). maxindex c \\<le> maxindex p", "by (induct p rule: coefficients.induct) auto"], ["", "lemma wf_bs_I: \"wf_bs bs p \\<Longrightarrow> Ipoly (bs @ bs') p = Ipoly bs p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_bs bs p \\<Longrightarrow> Ipoly (bs @ bs') p = Ipoly bs p", "unfolding wf_bs_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. maxindex p \\<le> length bs \\<Longrightarrow>\n    Ipoly (bs @ bs') p = Ipoly bs p", "by (induct p) (auto simp add: nth_append)"], ["", "lemma take_maxindex_wf:\n  assumes wf: \"wf_bs bs p\"\n  shows \"Ipoly (take (maxindex p) bs) p = Ipoly bs p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly (take (maxindex p) bs) p = Ipoly bs p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Ipoly (take (maxindex p) bs) p = Ipoly bs p", "let ?ip = \"maxindex p\""], ["proof (state)\ngoal (1 subgoal):\n 1. Ipoly (take (maxindex p) bs) p = Ipoly bs p", "let ?tbs = \"take ?ip bs\""], ["proof (state)\ngoal (1 subgoal):\n 1. Ipoly (take (maxindex p) bs) p = Ipoly bs p", "from wf"], ["proof (chain)\npicking this:\n  wf_bs bs p", "have \"length ?tbs = ?ip\""], ["proof (prove)\nusing this:\n  wf_bs bs p\n\ngoal (1 subgoal):\n 1. length (take (maxindex p) bs) = maxindex p", "unfolding wf_bs_def"], ["proof (prove)\nusing this:\n  maxindex p \\<le> length bs\n\ngoal (1 subgoal):\n 1. length (take (maxindex p) bs) = maxindex p", "by simp"], ["proof (state)\nthis:\n  length (take (maxindex p) bs) = maxindex p\n\ngoal (1 subgoal):\n 1. Ipoly (take (maxindex p) bs) p = Ipoly bs p", "then"], ["proof (chain)\npicking this:\n  length (take (maxindex p) bs) = maxindex p", "have wf': \"wf_bs ?tbs p\""], ["proof (prove)\nusing this:\n  length (take (maxindex p) bs) = maxindex p\n\ngoal (1 subgoal):\n 1. wf_bs (take (maxindex p) bs) p", "unfolding wf_bs_def"], ["proof (prove)\nusing this:\n  length (take (maxindex p) bs) = maxindex p\n\ngoal (1 subgoal):\n 1. maxindex p \\<le> length (take (maxindex p) bs)", "by  simp"], ["proof (state)\nthis:\n  wf_bs (take (maxindex p) bs) p\n\ngoal (1 subgoal):\n 1. Ipoly (take (maxindex p) bs) p = Ipoly bs p", "have eq: \"bs = ?tbs @ drop ?ip bs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bs = take (maxindex p) bs @ drop (maxindex p) bs", "by simp"], ["proof (state)\nthis:\n  bs = take (maxindex p) bs @ drop (maxindex p) bs\n\ngoal (1 subgoal):\n 1. Ipoly (take (maxindex p) bs) p = Ipoly bs p", "from wf_bs_I[OF wf', of \"drop ?ip bs\"]"], ["proof (chain)\npicking this:\n  Ipoly (take (maxindex p) bs @ drop (maxindex p) bs) p =\n  Ipoly (take (maxindex p) bs) p", "show ?thesis"], ["proof (prove)\nusing this:\n  Ipoly (take (maxindex p) bs @ drop (maxindex p) bs) p =\n  Ipoly (take (maxindex p) bs) p\n\ngoal (1 subgoal):\n 1. Ipoly (take (maxindex p) bs) p = Ipoly bs p", "using eq"], ["proof (prove)\nusing this:\n  Ipoly (take (maxindex p) bs @ drop (maxindex p) bs) p =\n  Ipoly (take (maxindex p) bs) p\n  bs = take (maxindex p) bs @ drop (maxindex p) bs\n\ngoal (1 subgoal):\n 1. Ipoly (take (maxindex p) bs) p = Ipoly bs p", "by simp"], ["proof (state)\nthis:\n  Ipoly (take (maxindex p) bs) p = Ipoly bs p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma decr_maxindex: \"polybound0 p \\<Longrightarrow> maxindex (decrpoly p) = maxindex p - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. polybound0 p \\<Longrightarrow> maxindex (decrpoly p) = maxindex p - 1", "by (induct p) auto"], ["", "lemma wf_bs_insensitive: \"length bs = length bs' \\<Longrightarrow> wf_bs bs p = wf_bs bs' p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length bs = length bs' \\<Longrightarrow> wf_bs bs p = wf_bs bs' p", "unfolding wf_bs_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. length bs = length bs' \\<Longrightarrow>\n    (maxindex p \\<le> length bs) = (maxindex p \\<le> length bs')", "by simp"], ["", "lemma wf_bs_insensitive': \"wf_bs (x # bs) p = wf_bs (y # bs) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_bs (x # bs) p = wf_bs (y # bs) p", "unfolding wf_bs_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (maxindex p \\<le> length (x # bs)) = (maxindex p \\<le> length (y # bs))", "by simp"], ["", "lemma wf_bs_coefficients': \"\\<forall>c \\<in> set (coefficients p). wf_bs bs c \\<Longrightarrow> wf_bs (x # bs) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set (coefficients p). wf_bs bs c \\<Longrightarrow>\n    wf_bs (x # bs) p", "by (induct p rule: coefficients.induct) (auto simp add: wf_bs_def)"], ["", "lemma coefficients_Nil[simp]: \"coefficients p \\<noteq> []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coefficients p \\<noteq> []", "by (induct p rule: coefficients.induct) simp_all"], ["", "lemma coefficients_head: \"last (coefficients p) = head p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. last (coefficients p) = head p", "by (induct p rule: coefficients.induct) auto"], ["", "lemma wf_bs_decrpoly: \"wf_bs bs (decrpoly p) \\<Longrightarrow> wf_bs (x # bs) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_bs bs (decrpoly p) \\<Longrightarrow> wf_bs (x # bs) p", "unfolding wf_bs_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. maxindex (decrpoly p) \\<le> length bs \\<Longrightarrow>\n    maxindex p \\<le> length (x # bs)", "by (induct p rule: decrpoly.induct) auto"], ["", "lemma length_le_list_ex: \"length xs \\<le> n \\<Longrightarrow> \\<exists>ys. length (xs @ ys) = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length xs \\<le> n \\<Longrightarrow> \\<exists>ys. length (xs @ ys) = n", "apply (rule exI[where x=\"replicate (n - length xs) z\" for z])"], ["proof (prove)\ngoal (1 subgoal):\n 1. length xs \\<le> n \\<Longrightarrow>\n    length (xs @ replicate (n - length xs) ?z4) = n", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isnpolyh_Suc_const: \"isnpolyh p (Suc n) \\<Longrightarrow> isconstant p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p (Suc n) \\<Longrightarrow> isconstant p", "apply (cases p)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>isnpolyh p (Suc n); p = (x1)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> isconstant p\n 2. \\<And>x2.\n       \\<lbrakk>isnpolyh p (Suc n); p = Bound x2\\<rbrakk>\n       \\<Longrightarrow> isconstant p\n 3. \\<And>x31 x32.\n       \\<lbrakk>isnpolyh p (Suc n); p = Add x31 x32\\<rbrakk>\n       \\<Longrightarrow> isconstant p\n 4. \\<And>x41 x42.\n       \\<lbrakk>isnpolyh p (Suc n); p = Sub x41 x42\\<rbrakk>\n       \\<Longrightarrow> isconstant p\n 5. \\<And>x51 x52.\n       \\<lbrakk>isnpolyh p (Suc n); p = Mul x51 x52\\<rbrakk>\n       \\<Longrightarrow> isconstant p\n 6. \\<And>x6.\n       \\<lbrakk>isnpolyh p (Suc n); p = Neg x6\\<rbrakk>\n       \\<Longrightarrow> isconstant p\n 7. \\<And>x71 x72.\n       \\<lbrakk>isnpolyh p (Suc n); p = Pw x71 x72\\<rbrakk>\n       \\<Longrightarrow> isconstant p\n 8. \\<And>x81 x82 x83.\n       \\<lbrakk>isnpolyh p (Suc n); p = CN x81 x82 x83\\<rbrakk>\n       \\<Longrightarrow> isconstant p", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x81 x82 x83.\n       \\<lbrakk>p = CN x81 x82 x83; Suc n \\<le> x82; isnpolyh x81 (Suc x82);\n        isnpolyh x83 x82; x83 \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> isconstant (CN x81 x82 x83)", "apply (rename_tac nat a, case_tac \"nat\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x81 nat a.\n       \\<lbrakk>p = CN x81 nat a; Suc n \\<le> nat; isnpolyh x81 (Suc nat);\n        isnpolyh a nat; a \\<noteq> 0\\<^sub>p; nat = 0\\<rbrakk>\n       \\<Longrightarrow> isconstant (CN x81 nat a)\n 2. \\<And>x81 nat a nata.\n       \\<lbrakk>p = CN x81 nat a; Suc n \\<le> nat; isnpolyh x81 (Suc nat);\n        isnpolyh a nat; a \\<noteq> 0\\<^sub>p; nat = Suc nata\\<rbrakk>\n       \\<Longrightarrow> isconstant (CN x81 nat a)", "apply simp_all"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma wf_bs_polyadd: \"wf_bs bs p \\<and> wf_bs bs q \\<longrightarrow> wf_bs bs (p +\\<^sub>p q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_bs bs p \\<and> wf_bs bs q \\<longrightarrow> wf_bs bs (p +\\<^sub>p q)", "unfolding wf_bs_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. maxindex p \\<le> length bs \\<and>\n    maxindex q \\<le> length bs \\<longrightarrow>\n    maxindex (p +\\<^sub>p q) \\<le> length bs", "by (induct p q rule: polyadd.induct) (auto simp add: Let_def)"], ["", "lemma wf_bs_polyul: \"wf_bs bs p \\<Longrightarrow> wf_bs bs q \\<Longrightarrow> wf_bs bs (p *\\<^sub>p q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_bs bs p; wf_bs bs q\\<rbrakk>\n    \\<Longrightarrow> wf_bs bs (p *\\<^sub>p q)", "unfolding wf_bs_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>maxindex p \\<le> length bs; maxindex q \\<le> length bs\\<rbrakk>\n    \\<Longrightarrow> maxindex (p *\\<^sub>p q) \\<le> length bs", "apply (induct p q arbitrary: bs rule: polymul.induct)"], ["proof (prove)\ngoal (28 subgoals):\n 1. \\<And>c c' bs.\n       \\<lbrakk>maxindex (c)\\<^sub>p \\<le> length bs;\n        maxindex (c')\\<^sub>p \\<le> length bs\\<rbrakk>\n       \\<Longrightarrow> maxindex ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p)\n                         \\<le> length bs\n 2. \\<And>c c' n' p' bs.\n       \\<lbrakk>\\<And>bs.\n                   \\<lbrakk>maxindex (c)\\<^sub>p \\<le> length bs;\n                    maxindex c' \\<le> length bs\\<rbrakk>\n                   \\<Longrightarrow> maxindex ((c)\\<^sub>p *\\<^sub>p c')\n                                     \\<le> length bs;\n        \\<And>bs.\n           \\<lbrakk>maxindex (c)\\<^sub>p \\<le> length bs;\n            maxindex p' \\<le> length bs\\<rbrakk>\n           \\<Longrightarrow> maxindex ((c)\\<^sub>p *\\<^sub>p p')\n                             \\<le> length bs;\n        maxindex (c)\\<^sub>p \\<le> length bs;\n        maxindex (CN c' n' p') \\<le> length bs\\<rbrakk>\n       \\<Longrightarrow> maxindex ((c)\\<^sub>p *\\<^sub>p CN c' n' p')\n                         \\<le> length bs\n 3. \\<And>c n p c' bs.\n       \\<lbrakk>\\<And>bs.\n                   \\<lbrakk>maxindex c \\<le> length bs;\n                    maxindex (c')\\<^sub>p \\<le> length bs\\<rbrakk>\n                   \\<Longrightarrow> maxindex (c *\\<^sub>p (c')\\<^sub>p)\n                                     \\<le> length bs;\n        \\<And>bs.\n           \\<lbrakk>maxindex p \\<le> length bs;\n            maxindex (c')\\<^sub>p \\<le> length bs\\<rbrakk>\n           \\<Longrightarrow> maxindex (p *\\<^sub>p (c')\\<^sub>p)\n                             \\<le> length bs;\n        maxindex (CN c n p) \\<le> length bs;\n        maxindex (c')\\<^sub>p \\<le> length bs\\<rbrakk>\n       \\<Longrightarrow> maxindex (CN c n p *\\<^sub>p (c')\\<^sub>p)\n                         \\<le> length bs\n 4. \\<And>c n p c' n' p' bs.\n       \\<lbrakk>\\<And>bs.\n                   \\<lbrakk>maxindex c \\<le> length bs;\n                    maxindex (CN c' n' p') \\<le> length bs\\<rbrakk>\n                   \\<Longrightarrow> maxindex (c *\\<^sub>p CN c' n' p')\n                                     \\<le> length bs;\n        \\<And>bs.\n           \\<lbrakk>maxindex p \\<le> length bs;\n            maxindex (CN c' n' p') \\<le> length bs\\<rbrakk>\n           \\<Longrightarrow> maxindex (p *\\<^sub>p CN c' n' p')\n                             \\<le> length bs;\n        \\<And>bs.\n           \\<lbrakk>maxindex (CN c n p) \\<le> length bs;\n            maxindex c' \\<le> length bs\\<rbrakk>\n           \\<Longrightarrow> maxindex (CN c n p *\\<^sub>p c')\n                             \\<le> length bs;\n        \\<And>bs.\n           \\<lbrakk>maxindex (CN c n p) \\<le> length bs;\n            maxindex p' \\<le> length bs\\<rbrakk>\n           \\<Longrightarrow> maxindex (CN c n p *\\<^sub>p p')\n                             \\<le> length bs;\n        \\<And>bs.\n           \\<lbrakk>maxindex (CN c n p) \\<le> length bs;\n            maxindex c' \\<le> length bs\\<rbrakk>\n           \\<Longrightarrow> maxindex (CN c n p *\\<^sub>p c')\n                             \\<le> length bs;\n        \\<And>bs.\n           \\<lbrakk>maxindex (CN c n p) \\<le> length bs;\n            maxindex p' \\<le> length bs\\<rbrakk>\n           \\<Longrightarrow> maxindex (CN c n p *\\<^sub>p p')\n                             \\<le> length bs;\n        maxindex (CN c n p) \\<le> length bs;\n        maxindex (CN c' n' p') \\<le> length bs\\<rbrakk>\n       \\<Longrightarrow> maxindex (CN c n p *\\<^sub>p CN c' n' p')\n                         \\<le> length bs\n 5. \\<And>v b bs.\n       \\<lbrakk>maxindex (Bound v) \\<le> length bs;\n        maxindex b \\<le> length bs\\<rbrakk>\n       \\<Longrightarrow> maxindex (Bound v *\\<^sub>p b) \\<le> length bs\n 6. \\<And>v va b bs.\n       \\<lbrakk>maxindex (Add v va) \\<le> length bs;\n        maxindex b \\<le> length bs\\<rbrakk>\n       \\<Longrightarrow> maxindex (Add v va *\\<^sub>p b) \\<le> length bs\n 7. \\<And>v va b bs.\n       \\<lbrakk>maxindex (Sub v va) \\<le> length bs;\n        maxindex b \\<le> length bs\\<rbrakk>\n       \\<Longrightarrow> maxindex (Sub v va *\\<^sub>p b) \\<le> length bs\n 8. \\<And>v va b bs.\n       \\<lbrakk>maxindex (Mul v va) \\<le> length bs;\n        maxindex b \\<le> length bs\\<rbrakk>\n       \\<Longrightarrow> maxindex (Mul v va *\\<^sub>p b) \\<le> length bs\n 9. \\<And>v b bs.\n       \\<lbrakk>maxindex (Neg v) \\<le> length bs;\n        maxindex b \\<le> length bs\\<rbrakk>\n       \\<Longrightarrow> maxindex (Neg v *\\<^sub>p b) \\<le> length bs\n 10. \\<And>v va b bs.\n        \\<lbrakk>maxindex (Pw v va) \\<le> length bs;\n         maxindex b \\<le> length bs\\<rbrakk>\n        \\<Longrightarrow> maxindex (Pw v va *\\<^sub>p b) \\<le> length bs\nA total of 28 subgoals...", "apply (simp_all add: wf_bs_polyadd)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c n p c' n' p' bs.\n       \\<lbrakk>\\<And>bs.\n                   \\<lbrakk>maxindex c \\<le> length bs;\n                    Suc n' \\<le> length bs \\<and>\n                    maxindex c' \\<le> length bs \\<and>\n                    maxindex p' \\<le> length bs\\<rbrakk>\n                   \\<Longrightarrow> maxindex (c *\\<^sub>p CN c' n' p')\n                                     \\<le> length bs;\n        \\<And>bs.\n           \\<lbrakk>maxindex p \\<le> length bs;\n            Suc n' \\<le> length bs \\<and>\n            maxindex c' \\<le> length bs \\<and>\n            maxindex p' \\<le> length bs\\<rbrakk>\n           \\<Longrightarrow> maxindex (p *\\<^sub>p CN c' n' p')\n                             \\<le> length bs;\n        \\<And>bs.\n           \\<lbrakk>Suc n \\<le> length bs \\<and>\n                    maxindex c \\<le> length bs \\<and>\n                    maxindex p \\<le> length bs;\n            maxindex c' \\<le> length bs\\<rbrakk>\n           \\<Longrightarrow> maxindex (CN c n p *\\<^sub>p c')\n                             \\<le> length bs;\n        \\<And>bs.\n           \\<lbrakk>Suc n \\<le> length bs \\<and>\n                    maxindex c \\<le> length bs \\<and>\n                    maxindex p \\<le> length bs;\n            maxindex p' \\<le> length bs\\<rbrakk>\n           \\<Longrightarrow> maxindex (CN c n p *\\<^sub>p p')\n                             \\<le> length bs;\n        Suc n \\<le> length bs \\<and>\n        maxindex c \\<le> length bs \\<and> maxindex p \\<le> length bs;\n        Suc n' \\<le> length bs \\<and>\n        maxindex c' \\<le> length bs \\<and>\n        maxindex p' \\<le> length bs\\<rbrakk>\n       \\<Longrightarrow> \\<not> n' < n \\<longrightarrow>\n                         n = n' \\<longrightarrow>\n                         maxindex\n                          (CN c n' p *\\<^sub>p c' +\\<^sub>p\n                           CN 0\\<^sub>p n' (CN c n' p *\\<^sub>p p'))\n                         \\<le> length bs", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c p c' n' p' bs.\n       \\<lbrakk>\\<And>bs.\n                   \\<lbrakk>maxindex c \\<le> length bs;\n                    Suc n' \\<le> length bs \\<and>\n                    maxindex c' \\<le> length bs \\<and>\n                    maxindex p' \\<le> length bs\\<rbrakk>\n                   \\<Longrightarrow> maxindex (c *\\<^sub>p CN c' n' p')\n                                     \\<le> length bs;\n        \\<And>bs.\n           \\<lbrakk>maxindex p \\<le> length bs;\n            Suc n' \\<le> length bs \\<and>\n            maxindex c' \\<le> length bs \\<and>\n            maxindex p' \\<le> length bs\\<rbrakk>\n           \\<Longrightarrow> maxindex (p *\\<^sub>p CN c' n' p')\n                             \\<le> length bs;\n        \\<And>bs.\n           \\<lbrakk>Suc n' \\<le> length bs \\<and>\n                    maxindex c \\<le> length bs \\<and>\n                    maxindex p \\<le> length bs;\n            maxindex c' \\<le> length bs\\<rbrakk>\n           \\<Longrightarrow> maxindex (CN c n' p *\\<^sub>p c')\n                             \\<le> length bs;\n        \\<And>bs.\n           \\<lbrakk>Suc n' \\<le> length bs \\<and>\n                    maxindex c \\<le> length bs \\<and>\n                    maxindex p \\<le> length bs;\n            maxindex p' \\<le> length bs\\<rbrakk>\n           \\<Longrightarrow> maxindex (CN c n' p *\\<^sub>p p')\n                             \\<le> length bs;\n        Suc n' \\<le> length bs; maxindex c \\<le> length bs;\n        maxindex p \\<le> length bs; maxindex c' \\<le> length bs;\n        maxindex p' \\<le> length bs\\<rbrakk>\n       \\<Longrightarrow> maxindex\n                          (CN c n' p *\\<^sub>p c' +\\<^sub>p\n                           CN 0\\<^sub>p n' (CN c n' p *\\<^sub>p p'))\n                         \\<le> length bs", "apply (rule wf_bs_polyadd[unfolded wf_bs_def, rule_format])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c p c' n' p' bs.\n       \\<lbrakk>\\<And>bs.\n                   \\<lbrakk>maxindex c \\<le> length bs;\n                    Suc n' \\<le> length bs \\<and>\n                    maxindex c' \\<le> length bs \\<and>\n                    maxindex p' \\<le> length bs\\<rbrakk>\n                   \\<Longrightarrow> maxindex (c *\\<^sub>p CN c' n' p')\n                                     \\<le> length bs;\n        \\<And>bs.\n           \\<lbrakk>maxindex p \\<le> length bs;\n            Suc n' \\<le> length bs \\<and>\n            maxindex c' \\<le> length bs \\<and>\n            maxindex p' \\<le> length bs\\<rbrakk>\n           \\<Longrightarrow> maxindex (p *\\<^sub>p CN c' n' p')\n                             \\<le> length bs;\n        \\<And>bs.\n           \\<lbrakk>Suc n' \\<le> length bs \\<and>\n                    maxindex c \\<le> length bs \\<and>\n                    maxindex p \\<le> length bs;\n            maxindex c' \\<le> length bs\\<rbrakk>\n           \\<Longrightarrow> maxindex (CN c n' p *\\<^sub>p c')\n                             \\<le> length bs;\n        \\<And>bs.\n           \\<lbrakk>Suc n' \\<le> length bs \\<and>\n                    maxindex c \\<le> length bs \\<and>\n                    maxindex p \\<le> length bs;\n            maxindex p' \\<le> length bs\\<rbrakk>\n           \\<Longrightarrow> maxindex (CN c n' p *\\<^sub>p p')\n                             \\<le> length bs;\n        Suc n' \\<le> length bs; maxindex c \\<le> length bs;\n        maxindex p \\<le> length bs; maxindex c' \\<le> length bs;\n        maxindex p' \\<le> length bs\\<rbrakk>\n       \\<Longrightarrow> maxindex (CN c n' p *\\<^sub>p c')\n                         \\<le> length bs \\<and>\n                         maxindex (CN 0\\<^sub>p n' (CN c n' p *\\<^sub>p p'))\n                         \\<le> length bs", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma wf_bs_polyneg: \"wf_bs bs p \\<Longrightarrow> wf_bs bs (~\\<^sub>p p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_bs bs p \\<Longrightarrow> wf_bs bs (~\\<^sub>p p)", "unfolding wf_bs_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. maxindex p \\<le> length bs \\<Longrightarrow>\n    maxindex (~\\<^sub>p p) \\<le> length bs", "by (induct p rule: polyneg.induct) auto"], ["", "lemma wf_bs_polysub: \"wf_bs bs p \\<Longrightarrow> wf_bs bs q \\<Longrightarrow> wf_bs bs (p -\\<^sub>p q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_bs bs p; wf_bs bs q\\<rbrakk>\n    \\<Longrightarrow> wf_bs bs (p -\\<^sub>p q)", "unfolding polysub_def split_def fst_conv snd_conv"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_bs bs p; wf_bs bs q\\<rbrakk>\n    \\<Longrightarrow> wf_bs bs (p +\\<^sub>p ~\\<^sub>p q)", "using wf_bs_polyadd wf_bs_polyneg"], ["proof (prove)\nusing this:\n  wf_bs ?bs ?p \\<and> wf_bs ?bs ?q \\<longrightarrow>\n  wf_bs ?bs (?p +\\<^sub>p ?q)\n  wf_bs ?bs ?p \\<Longrightarrow> wf_bs ?bs (~\\<^sub>p ?p)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_bs bs p; wf_bs bs q\\<rbrakk>\n    \\<Longrightarrow> wf_bs bs (p +\\<^sub>p ~\\<^sub>p q)", "by blast"], ["", "subsection \\<open>Canonicity of polynomial representation, see lemma isnpolyh_unique\\<close>"], ["", "definition \"polypoly bs p = map (Ipoly bs) (coefficients p)\""], ["", "definition \"polypoly' bs p = map (Ipoly bs \\<circ> decrpoly) (coefficients p)\""], ["", "definition \"poly_nate bs p = map (Ipoly bs \\<circ> decrpoly) (coefficients (polynate p))\""], ["", "lemma coefficients_normh: \"isnpolyh p n0 \\<Longrightarrow> \\<forall>q \\<in> set (coefficients p). isnpolyh q n0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p n0 \\<Longrightarrow>\n    \\<forall>q\\<in>set (coefficients p). isnpolyh q n0", "proof (induct p arbitrary: n0 rule: coefficients.induct)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>c p n0.\n       \\<lbrakk>\\<And>n0.\n                   isnpolyh p n0 \\<Longrightarrow>\n                   \\<forall>q\\<in>set (coefficients p). isnpolyh q n0;\n        isnpolyh (CN c 0 p) n0\\<rbrakk>\n       \\<Longrightarrow> \\<forall>q\\<in>set (coefficients (CN c 0 p)).\n                            isnpolyh q n0\n 2. \\<And>v n0.\n       isnpolyh (v)\\<^sub>p n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (v)\\<^sub>p). isnpolyh q n0\n 3. \\<And>v n0.\n       isnpolyh (Bound v) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Bound v)). isnpolyh q n0\n 4. \\<And>v va n0.\n       isnpolyh (Add v va) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Add v va)). isnpolyh q n0\n 5. \\<And>v va n0.\n       isnpolyh (Sub v va) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Sub v va)). isnpolyh q n0\n 6. \\<And>v va n0.\n       isnpolyh (Mul v va) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Mul v va)). isnpolyh q n0\n 7. \\<And>v n0.\n       isnpolyh (Neg v) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Neg v)). isnpolyh q n0\n 8. \\<And>v va n0.\n       isnpolyh (Pw v va) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Pw v va)). isnpolyh q n0\n 9. \\<And>v vc vb n0.\n       isnpolyh (CN v (Suc vc) vb) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (CN v (Suc vc) vb)). isnpolyh q n0", "case (1 c p n0)"], ["proof (state)\nthis:\n  isnpolyh p ?n0.0 \\<Longrightarrow>\n  \\<forall>q\\<in>set (coefficients p). isnpolyh q ?n0.0\n  isnpolyh (CN c 0 p) n0\n\ngoal (9 subgoals):\n 1. \\<And>c p n0.\n       \\<lbrakk>\\<And>n0.\n                   isnpolyh p n0 \\<Longrightarrow>\n                   \\<forall>q\\<in>set (coefficients p). isnpolyh q n0;\n        isnpolyh (CN c 0 p) n0\\<rbrakk>\n       \\<Longrightarrow> \\<forall>q\\<in>set (coefficients (CN c 0 p)).\n                            isnpolyh q n0\n 2. \\<And>v n0.\n       isnpolyh (v)\\<^sub>p n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (v)\\<^sub>p). isnpolyh q n0\n 3. \\<And>v n0.\n       isnpolyh (Bound v) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Bound v)). isnpolyh q n0\n 4. \\<And>v va n0.\n       isnpolyh (Add v va) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Add v va)). isnpolyh q n0\n 5. \\<And>v va n0.\n       isnpolyh (Sub v va) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Sub v va)). isnpolyh q n0\n 6. \\<And>v va n0.\n       isnpolyh (Mul v va) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Mul v va)). isnpolyh q n0\n 7. \\<And>v n0.\n       isnpolyh (Neg v) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Neg v)). isnpolyh q n0\n 8. \\<And>v va n0.\n       isnpolyh (Pw v va) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Pw v va)). isnpolyh q n0\n 9. \\<And>v vc vb n0.\n       isnpolyh (CN v (Suc vc) vb) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (CN v (Suc vc) vb)). isnpolyh q n0", "have cp: \"isnpolyh (CN c 0 p) n0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh (CN c 0 p) n0", "by fact"], ["proof (state)\nthis:\n  isnpolyh (CN c 0 p) n0\n\ngoal (9 subgoals):\n 1. \\<And>c p n0.\n       \\<lbrakk>\\<And>n0.\n                   isnpolyh p n0 \\<Longrightarrow>\n                   \\<forall>q\\<in>set (coefficients p). isnpolyh q n0;\n        isnpolyh (CN c 0 p) n0\\<rbrakk>\n       \\<Longrightarrow> \\<forall>q\\<in>set (coefficients (CN c 0 p)).\n                            isnpolyh q n0\n 2. \\<And>v n0.\n       isnpolyh (v)\\<^sub>p n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (v)\\<^sub>p). isnpolyh q n0\n 3. \\<And>v n0.\n       isnpolyh (Bound v) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Bound v)). isnpolyh q n0\n 4. \\<And>v va n0.\n       isnpolyh (Add v va) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Add v va)). isnpolyh q n0\n 5. \\<And>v va n0.\n       isnpolyh (Sub v va) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Sub v va)). isnpolyh q n0\n 6. \\<And>v va n0.\n       isnpolyh (Mul v va) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Mul v va)). isnpolyh q n0\n 7. \\<And>v n0.\n       isnpolyh (Neg v) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Neg v)). isnpolyh q n0\n 8. \\<And>v va n0.\n       isnpolyh (Pw v va) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Pw v va)). isnpolyh q n0\n 9. \\<And>v vc vb n0.\n       isnpolyh (CN v (Suc vc) vb) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (CN v (Suc vc) vb)). isnpolyh q n0", "then"], ["proof (chain)\npicking this:\n  isnpolyh (CN c 0 p) n0", "have norm: \"isnpolyh c 0\" \"isnpolyh p 0\" \"p \\<noteq> 0\\<^sub>p\" \"n0 = 0\""], ["proof (prove)\nusing this:\n  isnpolyh (CN c 0 p) n0\n\ngoal (1 subgoal):\n 1. (isnpolyh c 0 &&& isnpolyh p 0) &&& p \\<noteq> 0\\<^sub>p &&& n0 = 0", "by (auto simp add: isnpolyh_mono[where n'=0])"], ["proof (state)\nthis:\n  isnpolyh c 0\n  isnpolyh p 0\n  p \\<noteq> 0\\<^sub>p\n  n0 = 0\n\ngoal (9 subgoals):\n 1. \\<And>c p n0.\n       \\<lbrakk>\\<And>n0.\n                   isnpolyh p n0 \\<Longrightarrow>\n                   \\<forall>q\\<in>set (coefficients p). isnpolyh q n0;\n        isnpolyh (CN c 0 p) n0\\<rbrakk>\n       \\<Longrightarrow> \\<forall>q\\<in>set (coefficients (CN c 0 p)).\n                            isnpolyh q n0\n 2. \\<And>v n0.\n       isnpolyh (v)\\<^sub>p n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (v)\\<^sub>p). isnpolyh q n0\n 3. \\<And>v n0.\n       isnpolyh (Bound v) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Bound v)). isnpolyh q n0\n 4. \\<And>v va n0.\n       isnpolyh (Add v va) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Add v va)). isnpolyh q n0\n 5. \\<And>v va n0.\n       isnpolyh (Sub v va) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Sub v va)). isnpolyh q n0\n 6. \\<And>v va n0.\n       isnpolyh (Mul v va) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Mul v va)). isnpolyh q n0\n 7. \\<And>v n0.\n       isnpolyh (Neg v) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Neg v)). isnpolyh q n0\n 8. \\<And>v va n0.\n       isnpolyh (Pw v va) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Pw v va)). isnpolyh q n0\n 9. \\<And>v vc vb n0.\n       isnpolyh (CN v (Suc vc) vb) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (CN v (Suc vc) vb)). isnpolyh q n0", "from \"1.hyps\"[OF norm(2)] norm(1) norm(4)"], ["proof (chain)\npicking this:\n  \\<forall>q\\<in>set (coefficients p). isnpolyh q 0\n  isnpolyh c 0\n  n0 = 0", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>q\\<in>set (coefficients p). isnpolyh q 0\n  isnpolyh c 0\n  n0 = 0\n\ngoal (1 subgoal):\n 1. \\<forall>q\\<in>set (coefficients (CN c 0 p)). isnpolyh q n0", "by simp"], ["proof (state)\nthis:\n  \\<forall>q\\<in>set (coefficients (CN c 0 p)). isnpolyh q n0\n\ngoal (8 subgoals):\n 1. \\<And>v n0.\n       isnpolyh (v)\\<^sub>p n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (v)\\<^sub>p). isnpolyh q n0\n 2. \\<And>v n0.\n       isnpolyh (Bound v) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Bound v)). isnpolyh q n0\n 3. \\<And>v va n0.\n       isnpolyh (Add v va) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Add v va)). isnpolyh q n0\n 4. \\<And>v va n0.\n       isnpolyh (Sub v va) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Sub v va)). isnpolyh q n0\n 5. \\<And>v va n0.\n       isnpolyh (Mul v va) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Mul v va)). isnpolyh q n0\n 6. \\<And>v n0.\n       isnpolyh (Neg v) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Neg v)). isnpolyh q n0\n 7. \\<And>v va n0.\n       isnpolyh (Pw v va) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (Pw v va)). isnpolyh q n0\n 8. \\<And>v vc vb n0.\n       isnpolyh (CN v (Suc vc) vb) n0 \\<Longrightarrow>\n       \\<forall>q\\<in>set (coefficients (CN v (Suc vc) vb)). isnpolyh q n0", "qed auto"], ["", "lemma coefficients_isconst: \"isnpolyh p n \\<Longrightarrow> \\<forall>q \\<in> set (coefficients p). isconstant q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p n \\<Longrightarrow>\n    \\<forall>q\\<in>set (coefficients p). isconstant q", "by (induct p arbitrary: n rule: coefficients.induct) (auto simp add: isnpolyh_Suc_const)"], ["", "lemma polypoly_polypoly':\n  assumes np: \"isnpolyh p n0\"\n  shows \"polypoly (x # bs) p = polypoly' bs p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. polypoly (x # bs) p = polypoly' bs p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. polypoly (x # bs) p = polypoly' bs p", "let ?cf = \"set (coefficients p)\""], ["proof (state)\ngoal (1 subgoal):\n 1. polypoly (x # bs) p = polypoly' bs p", "from coefficients_normh[OF np]"], ["proof (chain)\npicking this:\n  \\<forall>q\\<in>set (coefficients p). isnpolyh q n0", "have cn_norm: \"\\<forall> q\\<in> ?cf. isnpolyh q n0\""], ["proof (prove)\nusing this:\n  \\<forall>q\\<in>set (coefficients p). isnpolyh q n0\n\ngoal (1 subgoal):\n 1. \\<forall>q\\<in>set (coefficients p). isnpolyh q n0", "."], ["proof (state)\nthis:\n  \\<forall>q\\<in>set (coefficients p). isnpolyh q n0\n\ngoal (1 subgoal):\n 1. polypoly (x # bs) p = polypoly' bs p", "{"], ["proof (state)\nthis:\n  \\<forall>q\\<in>set (coefficients p). isnpolyh q n0\n\ngoal (1 subgoal):\n 1. polypoly (x # bs) p = polypoly' bs p", "fix q"], ["proof (state)\ngoal (1 subgoal):\n 1. polypoly (x # bs) p = polypoly' bs p", "assume q: \"q \\<in> ?cf\""], ["proof (state)\nthis:\n  q \\<in> set (coefficients p)\n\ngoal (1 subgoal):\n 1. polypoly (x # bs) p = polypoly' bs p", "from q cn_norm"], ["proof (chain)\npicking this:\n  q \\<in> set (coefficients p)\n  \\<forall>q\\<in>set (coefficients p). isnpolyh q n0", "have th: \"isnpolyh q n0\""], ["proof (prove)\nusing this:\n  q \\<in> set (coefficients p)\n  \\<forall>q\\<in>set (coefficients p). isnpolyh q n0\n\ngoal (1 subgoal):\n 1. isnpolyh q n0", "by blast"], ["proof (state)\nthis:\n  isnpolyh q n0\n\ngoal (1 subgoal):\n 1. polypoly (x # bs) p = polypoly' bs p", "from coefficients_isconst[OF np] q"], ["proof (chain)\npicking this:\n  \\<forall>q\\<in>set (coefficients p). isconstant q\n  q \\<in> set (coefficients p)", "have \"isconstant q\""], ["proof (prove)\nusing this:\n  \\<forall>q\\<in>set (coefficients p). isconstant q\n  q \\<in> set (coefficients p)\n\ngoal (1 subgoal):\n 1. isconstant q", "by blast"], ["proof (state)\nthis:\n  isconstant q\n\ngoal (1 subgoal):\n 1. polypoly (x # bs) p = polypoly' bs p", "with isconstant_polybound0[OF th]"], ["proof (chain)\npicking this:\n  isconstant q = polybound0 q\n  isconstant q", "have \"polybound0 q\""], ["proof (prove)\nusing this:\n  isconstant q = polybound0 q\n  isconstant q\n\ngoal (1 subgoal):\n 1. polybound0 q", "by blast"], ["proof (state)\nthis:\n  polybound0 q\n\ngoal (1 subgoal):\n 1. polypoly (x # bs) p = polypoly' bs p", "}"], ["proof (state)\nthis:\n  ?q2 \\<in> set (coefficients p) \\<Longrightarrow> polybound0 ?q2\n\ngoal (1 subgoal):\n 1. polypoly (x # bs) p = polypoly' bs p", "then"], ["proof (chain)\npicking this:\n  ?q2 \\<in> set (coefficients p) \\<Longrightarrow> polybound0 ?q2", "have \"\\<forall>q \\<in> ?cf. polybound0 q\""], ["proof (prove)\nusing this:\n  ?q2 \\<in> set (coefficients p) \\<Longrightarrow> polybound0 ?q2\n\ngoal (1 subgoal):\n 1. \\<forall>q\\<in>set (coefficients p). polybound0 q", ".."], ["proof (state)\nthis:\n  \\<forall>q\\<in>set (coefficients p). polybound0 q\n\ngoal (1 subgoal):\n 1. polypoly (x # bs) p = polypoly' bs p", "then"], ["proof (chain)\npicking this:\n  \\<forall>q\\<in>set (coefficients p). polybound0 q", "have \"\\<forall>q \\<in> ?cf. Ipoly (x # bs) q = Ipoly bs (decrpoly q)\""], ["proof (prove)\nusing this:\n  \\<forall>q\\<in>set (coefficients p). polybound0 q\n\ngoal (1 subgoal):\n 1. \\<forall>q\\<in>set (coefficients p).\n       Ipoly (x # bs) q = Ipoly bs (decrpoly q)", "using polybound0_I[where b=x and bs=bs and b'=y] decrpoly[where x=x and bs=bs]"], ["proof (prove)\nusing this:\n  \\<forall>q\\<in>set (coefficients p). polybound0 q\n  polybound0 ?a \\<Longrightarrow> Ipoly (x # bs) ?a = Ipoly (y # bs) ?a\n  polybound0 ?t \\<Longrightarrow> Ipoly (x # bs) ?t = Ipoly bs (decrpoly ?t)\n\ngoal (1 subgoal):\n 1. \\<forall>q\\<in>set (coefficients p).\n       Ipoly (x # bs) q = Ipoly bs (decrpoly q)", "by auto"], ["proof (state)\nthis:\n  \\<forall>q\\<in>set (coefficients p).\n     Ipoly (x # bs) q = Ipoly bs (decrpoly q)\n\ngoal (1 subgoal):\n 1. polypoly (x # bs) p = polypoly' bs p", "then"], ["proof (chain)\npicking this:\n  \\<forall>q\\<in>set (coefficients p).\n     Ipoly (x # bs) q = Ipoly bs (decrpoly q)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>q\\<in>set (coefficients p).\n     Ipoly (x # bs) q = Ipoly bs (decrpoly q)\n\ngoal (1 subgoal):\n 1. polypoly (x # bs) p = polypoly' bs p", "unfolding polypoly_def polypoly'_def"], ["proof (prove)\nusing this:\n  \\<forall>q\\<in>set (coefficients p).\n     Ipoly (x # bs) q = Ipoly bs (decrpoly q)\n\ngoal (1 subgoal):\n 1. map (Ipoly (x # bs)) (coefficients p) =\n    map (Ipoly bs \\<circ> decrpoly) (coefficients p)", "by simp"], ["proof (state)\nthis:\n  polypoly (x # bs) p = polypoly' bs p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma polypoly_poly:\n  assumes \"isnpolyh p n0\"\n  shows \"Ipoly (x # bs) p = poly (polypoly (x # bs) p) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly (x # bs) p = poly (polypoly (x # bs) p) x", "using assms"], ["proof (prove)\nusing this:\n  isnpolyh p n0\n\ngoal (1 subgoal):\n 1. Ipoly (x # bs) p = poly (polypoly (x # bs) p) x", "by (induct p arbitrary: n0 bs rule: coefficients.induct) (auto simp add: polypoly_def)"], ["", "lemma polypoly'_poly:\n  assumes \"isnpolyh p n0\"\n  shows \"Ipoly (x # bs) p = poly (polypoly' bs p) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly (x # bs) p = poly (polypoly' bs p) x", "using polypoly_poly[OF assms, simplified polypoly_polypoly'[OF assms]]"], ["proof (prove)\nusing this:\n  Ipoly (?x # ?bs) p = poly (polypoly' ?bs p) ?x\n\ngoal (1 subgoal):\n 1. Ipoly (x # bs) p = poly (polypoly' bs p) x", "."], ["", "lemma polypoly_poly_polybound0:\n  assumes \"isnpolyh p n0\"\n    and \"polybound0 p\"\n  shows \"polypoly bs p = [Ipoly bs p]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. polypoly bs p = [Ipoly bs p]", "using assms"], ["proof (prove)\nusing this:\n  isnpolyh p n0\n  polybound0 p\n\ngoal (1 subgoal):\n 1. polypoly bs p = [Ipoly bs p]", "unfolding polypoly_def"], ["proof (prove)\nusing this:\n  isnpolyh p n0\n  polybound0 p\n\ngoal (1 subgoal):\n 1. map (Ipoly bs) (coefficients p) = [Ipoly bs p]", "apply (cases p)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>isnpolyh p n0; polybound0 p; p = (x1)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> map (Ipoly bs) (coefficients p) = [Ipoly bs p]\n 2. \\<And>x2.\n       \\<lbrakk>isnpolyh p n0; polybound0 p; p = Bound x2\\<rbrakk>\n       \\<Longrightarrow> map (Ipoly bs) (coefficients p) = [Ipoly bs p]\n 3. \\<And>x31 x32.\n       \\<lbrakk>isnpolyh p n0; polybound0 p; p = Add x31 x32\\<rbrakk>\n       \\<Longrightarrow> map (Ipoly bs) (coefficients p) = [Ipoly bs p]\n 4. \\<And>x41 x42.\n       \\<lbrakk>isnpolyh p n0; polybound0 p; p = Sub x41 x42\\<rbrakk>\n       \\<Longrightarrow> map (Ipoly bs) (coefficients p) = [Ipoly bs p]\n 5. \\<And>x51 x52.\n       \\<lbrakk>isnpolyh p n0; polybound0 p; p = Mul x51 x52\\<rbrakk>\n       \\<Longrightarrow> map (Ipoly bs) (coefficients p) = [Ipoly bs p]\n 6. \\<And>x6.\n       \\<lbrakk>isnpolyh p n0; polybound0 p; p = Neg x6\\<rbrakk>\n       \\<Longrightarrow> map (Ipoly bs) (coefficients p) = [Ipoly bs p]\n 7. \\<And>x71 x72.\n       \\<lbrakk>isnpolyh p n0; polybound0 p; p = Pw x71 x72\\<rbrakk>\n       \\<Longrightarrow> map (Ipoly bs) (coefficients p) = [Ipoly bs p]\n 8. \\<And>x81 x82 x83.\n       \\<lbrakk>isnpolyh p n0; polybound0 p; p = CN x81 x82 x83\\<rbrakk>\n       \\<Longrightarrow> map (Ipoly bs) (coefficients p) = [Ipoly bs p]", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x81 x82 x83.\n       \\<lbrakk>p = CN x81 x82 x83; n0 \\<le> x82; 0 < x82;\n        isnpolyh x81 (Suc x82); polybound0 x81; polybound0 x83;\n        isnpolyh x83 x82; x83 \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> map (Ipoly bs) (coefficients (CN x81 x82 x83)) =\n                         [Ipoly bs x81 + bs ! x82 * Ipoly bs x83]", "apply (rename_tac nat a, case_tac nat)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x81 nat a.\n       \\<lbrakk>p = CN x81 nat a; n0 \\<le> nat; 0 < nat;\n        isnpolyh x81 (Suc nat); polybound0 x81; polybound0 a;\n        isnpolyh a nat; a \\<noteq> 0\\<^sub>p; nat = 0\\<rbrakk>\n       \\<Longrightarrow> map (Ipoly bs) (coefficients (CN x81 nat a)) =\n                         [Ipoly bs x81 + bs ! nat * Ipoly bs a]\n 2. \\<And>x81 nat a nata.\n       \\<lbrakk>p = CN x81 nat a; n0 \\<le> nat; 0 < nat;\n        isnpolyh x81 (Suc nat); polybound0 x81; polybound0 a;\n        isnpolyh a nat; a \\<noteq> 0\\<^sub>p; nat = Suc nata\\<rbrakk>\n       \\<Longrightarrow> map (Ipoly bs) (coefficients (CN x81 nat a)) =\n                         [Ipoly bs x81 + bs ! nat * Ipoly bs a]", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma head_isnpolyh: \"isnpolyh p n0 \\<Longrightarrow> isnpolyh (head p) n0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p n0 \\<Longrightarrow> isnpolyh (head p) n0", "by (induct p rule: head.induct) auto"], ["", "lemma headn_nz[simp]: \"isnpolyh p n0 \\<Longrightarrow> headn p m = 0\\<^sub>p \\<longleftrightarrow> p = 0\\<^sub>p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p n0 \\<Longrightarrow>\n    (headn p m = 0\\<^sub>p) = (p = 0\\<^sub>p)", "by (cases p) auto"], ["", "lemma head_eq_headn0: \"head p = headn p 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. head p = headn p 0", "by (induct p rule: head.induct) simp_all"], ["", "lemma head_nz[simp]: \"isnpolyh p n0 \\<Longrightarrow> head p = 0\\<^sub>p \\<longleftrightarrow> p = 0\\<^sub>p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p n0 \\<Longrightarrow> (head p = 0\\<^sub>p) = (p = 0\\<^sub>p)", "by (simp add: head_eq_headn0)"], ["", "lemma isnpolyh_zero_iff:\nfixes p :: \"'a::idom_char_0 poly\"\n  assumes nq: \"isnpolyh p n0\"\n    and eq :\"\\<forall>bs. wf_bs bs p \\<longrightarrow> Ipoly bs p = 0\"\n  shows \"p = 0\\<^sub>p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = 0\\<^sub>p", "using nq eq"], ["proof (prove)\nusing this:\n  isnpolyh p n0\n  \\<forall>bs. wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\n\ngoal (1 subgoal):\n 1. p = 0\\<^sub>p", "proof (induct \"maxindex p\" arbitrary: p n0 rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "case less"], ["proof (state)\nthis:\n  \\<lbrakk>maxindex ?p < maxindex p; isnpolyh ?p ?n0.0;\n   \\<forall>bs. wf_bs bs ?p \\<longrightarrow> Ipoly bs ?p = (0::'a)\\<rbrakk>\n  \\<Longrightarrow> ?p = 0\\<^sub>p\n  isnpolyh p n0\n  \\<forall>bs. wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "note np = \\<open>isnpolyh p n0\\<close> and zp = \\<open>\\<forall>bs. wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<close>"], ["proof (state)\nthis:\n  isnpolyh p n0\n  \\<forall>bs. wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "{"], ["proof (state)\nthis:\n  isnpolyh p n0\n  \\<forall>bs. wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "assume nz: \"maxindex p = 0\""], ["proof (state)\nthis:\n  maxindex p = 0\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "then"], ["proof (chain)\npicking this:\n  maxindex p = 0", "obtain c where \"p = C c\""], ["proof (prove)\nusing this:\n  maxindex p = 0\n\ngoal (1 subgoal):\n 1. (\\<And>c. p = (c)\\<^sub>p \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using np"], ["proof (prove)\nusing this:\n  maxindex p = 0\n  isnpolyh p n0\n\ngoal (1 subgoal):\n 1. (\\<And>c. p = (c)\\<^sub>p \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases p) auto"], ["proof (state)\nthis:\n  p = (c)\\<^sub>p\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "with zp np"], ["proof (chain)\npicking this:\n  \\<forall>bs. wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\n  isnpolyh p n0\n  p = (c)\\<^sub>p", "have \"p = 0\\<^sub>p\""], ["proof (prove)\nusing this:\n  \\<forall>bs. wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\n  isnpolyh p n0\n  p = (c)\\<^sub>p\n\ngoal (1 subgoal):\n 1. p = 0\\<^sub>p", "unfolding wf_bs_def"], ["proof (prove)\nusing this:\n  \\<forall>bs.\n     maxindex p \\<le> length bs \\<longrightarrow> Ipoly bs p = (0::'a)\n  isnpolyh p n0\n  p = (c)\\<^sub>p\n\ngoal (1 subgoal):\n 1. p = 0\\<^sub>p", "by simp"], ["proof (state)\nthis:\n  p = 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "}"], ["proof (state)\nthis:\n  maxindex p = 0 \\<Longrightarrow> p = 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "moreover"], ["proof (state)\nthis:\n  maxindex p = 0 \\<Longrightarrow> p = 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "{"], ["proof (state)\nthis:\n  maxindex p = 0 \\<Longrightarrow> p = 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "assume nz: \"maxindex p \\<noteq> 0\""], ["proof (state)\nthis:\n  maxindex p \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "let ?h = \"head p\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "let ?hd = \"decrpoly ?h\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "let ?ihd = \"maxindex ?hd\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "from head_isnpolyh[OF np] head_polybound0[OF np]"], ["proof (chain)\npicking this:\n  isnpolyh (head p) n0\n  polybound0 (head p)", "have h: \"isnpolyh ?h n0\" \"polybound0 ?h\""], ["proof (prove)\nusing this:\n  isnpolyh (head p) n0\n  polybound0 (head p)\n\ngoal (1 subgoal):\n 1. isnpolyh (head p) n0 &&& polybound0 (head p)", "by simp_all"], ["proof (state)\nthis:\n  isnpolyh (head p) n0\n  polybound0 (head p)\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "then"], ["proof (chain)\npicking this:\n  isnpolyh (head p) n0\n  polybound0 (head p)", "have nhd: \"isnpolyh ?hd (n0 - 1)\""], ["proof (prove)\nusing this:\n  isnpolyh (head p) n0\n  polybound0 (head p)\n\ngoal (1 subgoal):\n 1. isnpolyh (decrpoly (head p)) (n0 - 1)", "using decrpoly_normh"], ["proof (prove)\nusing this:\n  isnpolyh (head p) n0\n  polybound0 (head p)\n  \\<lbrakk>isnpolyh ?p ?n0.0; polybound0 ?p\\<rbrakk>\n  \\<Longrightarrow> isnpolyh (decrpoly ?p) (?n0.0 - 1)\n\ngoal (1 subgoal):\n 1. isnpolyh (decrpoly (head p)) (n0 - 1)", "by blast"], ["proof (state)\nthis:\n  isnpolyh (decrpoly (head p)) (n0 - 1)\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "from maxindex_coefficients[of p] coefficients_head[of p, symmetric]"], ["proof (chain)\npicking this:\n  \\<forall>c\\<in>set (coefficients p). maxindex c \\<le> maxindex p\n  head p = last (coefficients p)", "have mihn: \"maxindex ?h \\<le> maxindex p\""], ["proof (prove)\nusing this:\n  \\<forall>c\\<in>set (coefficients p). maxindex c \\<le> maxindex p\n  head p = last (coefficients p)\n\ngoal (1 subgoal):\n 1. maxindex (head p) \\<le> maxindex p", "by auto"], ["proof (state)\nthis:\n  maxindex (head p) \\<le> maxindex p\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "with decr_maxindex[OF h(2)] nz"], ["proof (chain)\npicking this:\n  maxindex (decrpoly (head p)) = maxindex (head p) - 1\n  maxindex p \\<noteq> 0\n  maxindex (head p) \\<le> maxindex p", "have ihd_lt_n: \"?ihd < maxindex p\""], ["proof (prove)\nusing this:\n  maxindex (decrpoly (head p)) = maxindex (head p) - 1\n  maxindex p \\<noteq> 0\n  maxindex (head p) \\<le> maxindex p\n\ngoal (1 subgoal):\n 1. maxindex (decrpoly (head p)) < maxindex p", "by auto"], ["proof (state)\nthis:\n  maxindex (decrpoly (head p)) < maxindex p\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "{"], ["proof (state)\nthis:\n  maxindex (decrpoly (head p)) < maxindex p\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "fix bs :: \"'a list\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "assume bs: \"wf_bs bs ?hd\""], ["proof (state)\nthis:\n  wf_bs bs (decrpoly (head p))\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "let ?ts = \"take ?ihd bs\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "let ?rs = \"drop ?ihd bs\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "have ts: \"wf_bs ?ts ?hd\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_bs (take (maxindex (decrpoly (head p))) bs) (decrpoly (head p))", "using bs"], ["proof (prove)\nusing this:\n  wf_bs bs (decrpoly (head p))\n\ngoal (1 subgoal):\n 1. wf_bs (take (maxindex (decrpoly (head p))) bs) (decrpoly (head p))", "unfolding wf_bs_def"], ["proof (prove)\nusing this:\n  maxindex (decrpoly (head p)) \\<le> length bs\n\ngoal (1 subgoal):\n 1. maxindex (decrpoly (head p))\n    \\<le> length (take (maxindex (decrpoly (head p))) bs)", "by simp"], ["proof (state)\nthis:\n  wf_bs (take (maxindex (decrpoly (head p))) bs) (decrpoly (head p))\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "have bs_ts_eq: \"?ts @ ?rs = bs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take (maxindex (decrpoly (head p))) bs @\n    drop (maxindex (decrpoly (head p))) bs =\n    bs", "by simp"], ["proof (state)\nthis:\n  take (maxindex (decrpoly (head p))) bs @\n  drop (maxindex (decrpoly (head p))) bs =\n  bs\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "from wf_bs_decrpoly[OF ts]"], ["proof (chain)\npicking this:\n  wf_bs (?x # take (maxindex (decrpoly (head p))) bs) (head p)", "have tsh: \" \\<forall>x. wf_bs (x # ?ts) ?h\""], ["proof (prove)\nusing this:\n  wf_bs (?x # take (maxindex (decrpoly (head p))) bs) (head p)\n\ngoal (1 subgoal):\n 1. \\<forall>x. wf_bs (x # take (maxindex (decrpoly (head p))) bs) (head p)", "by simp"], ["proof (state)\nthis:\n  \\<forall>x. wf_bs (x # take (maxindex (decrpoly (head p))) bs) (head p)\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "from ihd_lt_n"], ["proof (chain)\npicking this:\n  maxindex (decrpoly (head p)) < maxindex p", "have \"\\<forall>x. length (x # ?ts) \\<le> maxindex p\""], ["proof (prove)\nusing this:\n  maxindex (decrpoly (head p)) < maxindex p\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       length (x # take (maxindex (decrpoly (head p))) bs) \\<le> maxindex p", "by simp"], ["proof (state)\nthis:\n  \\<forall>x.\n     length (x # take (maxindex (decrpoly (head p))) bs) \\<le> maxindex p\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "with length_le_list_ex"], ["proof (chain)\npicking this:\n  length ?xs \\<le> ?n \\<Longrightarrow> \\<exists>ys. length (?xs @ ys) = ?n\n  \\<forall>x.\n     length (x # take (maxindex (decrpoly (head p))) bs) \\<le> maxindex p", "obtain xs where xs: \"length ((x # ?ts) @ xs) = maxindex p\""], ["proof (prove)\nusing this:\n  length ?xs \\<le> ?n \\<Longrightarrow> \\<exists>ys. length (?xs @ ys) = ?n\n  \\<forall>x.\n     length (x # take (maxindex (decrpoly (head p))) bs) \\<le> maxindex p\n\ngoal (1 subgoal):\n 1. (\\<And>xs.\n        length ((x # take (maxindex (decrpoly (head p))) bs) @ xs) =\n        maxindex p \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  length ((x # take (maxindex (decrpoly (head p))) bs) @ xs) = maxindex p\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "then"], ["proof (chain)\npicking this:\n  length ((x # take (maxindex (decrpoly (head p))) bs) @ xs) = maxindex p", "have \"\\<forall>x. wf_bs ((x # ?ts) @ xs) p\""], ["proof (prove)\nusing this:\n  length ((x # take (maxindex (decrpoly (head p))) bs) @ xs) = maxindex p\n\ngoal (1 subgoal):\n 1. \\<forall>x. wf_bs ((x # take (maxindex (decrpoly (head p))) bs) @ xs) p", "unfolding wf_bs_def"], ["proof (prove)\nusing this:\n  length ((x # take (maxindex (decrpoly (head p))) bs) @ xs) = maxindex p\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       maxindex p\n       \\<le> length ((x # take (maxindex (decrpoly (head p))) bs) @ xs)", "by simp"], ["proof (state)\nthis:\n  \\<forall>x. wf_bs ((x # take (maxindex (decrpoly (head p))) bs) @ xs) p\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "with zp"], ["proof (chain)\npicking this:\n  \\<forall>bs. wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\n  \\<forall>x. wf_bs ((x # take (maxindex (decrpoly (head p))) bs) @ xs) p", "have \"\\<forall>x. Ipoly ((x # ?ts) @ xs) p = 0\""], ["proof (prove)\nusing this:\n  \\<forall>bs. wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\n  \\<forall>x. wf_bs ((x # take (maxindex (decrpoly (head p))) bs) @ xs) p\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       Ipoly ((x # take (maxindex (decrpoly (head p))) bs) @ xs) p = (0::'a)", "by blast"], ["proof (state)\nthis:\n  \\<forall>x.\n     Ipoly ((x # take (maxindex (decrpoly (head p))) bs) @ xs) p = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "then"], ["proof (chain)\npicking this:\n  \\<forall>x.\n     Ipoly ((x # take (maxindex (decrpoly (head p))) bs) @ xs) p = (0::'a)", "have \"\\<forall>x. Ipoly (x # (?ts @ xs)) p = 0\""], ["proof (prove)\nusing this:\n  \\<forall>x.\n     Ipoly ((x # take (maxindex (decrpoly (head p))) bs) @ xs) p = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       Ipoly (x # take (maxindex (decrpoly (head p))) bs @ xs) p = (0::'a)", "by simp"], ["proof (state)\nthis:\n  \\<forall>x.\n     Ipoly (x # take (maxindex (decrpoly (head p))) bs @ xs) p = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "with polypoly_poly[OF np] polypoly_polypoly'[OF np]"], ["proof (chain)\npicking this:\n  Ipoly (?x # ?bs) p = poly (polypoly (?x # ?bs) p) ?x\n  polypoly (?x # ?bs) p = polypoly' ?bs p\n  \\<forall>x.\n     Ipoly (x # take (maxindex (decrpoly (head p))) bs @ xs) p = (0::'a)", "have \"\\<forall>x. poly (polypoly' (?ts @ xs) p) x = poly [] x\""], ["proof (prove)\nusing this:\n  Ipoly (?x # ?bs) p = poly (polypoly (?x # ?bs) p) ?x\n  polypoly (?x # ?bs) p = polypoly' ?bs p\n  \\<forall>x.\n     Ipoly (x # take (maxindex (decrpoly (head p))) bs @ xs) p = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       poly (polypoly' (take (maxindex (decrpoly (head p))) bs @ xs) p) x =\n       poly [] x", "by simp"], ["proof (state)\nthis:\n  \\<forall>x.\n     poly (polypoly' (take (maxindex (decrpoly (head p))) bs @ xs) p) x =\n     poly [] x\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "then"], ["proof (chain)\npicking this:\n  \\<forall>x.\n     poly (polypoly' (take (maxindex (decrpoly (head p))) bs @ xs) p) x =\n     poly [] x", "have \"poly (polypoly' (?ts @ xs) p) = poly []\""], ["proof (prove)\nusing this:\n  \\<forall>x.\n     poly (polypoly' (take (maxindex (decrpoly (head p))) bs @ xs) p) x =\n     poly [] x\n\ngoal (1 subgoal):\n 1. poly (polypoly' (take (maxindex (decrpoly (head p))) bs @ xs) p) =\n    poly []", "by auto"], ["proof (state)\nthis:\n  poly (polypoly' (take (maxindex (decrpoly (head p))) bs @ xs) p) = poly []\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "then"], ["proof (chain)\npicking this:\n  poly (polypoly' (take (maxindex (decrpoly (head p))) bs @ xs) p) = poly []", "have \"\\<forall>c \\<in> set (coefficients p). Ipoly (?ts @ xs) (decrpoly c) = 0\""], ["proof (prove)\nusing this:\n  poly (polypoly' (take (maxindex (decrpoly (head p))) bs @ xs) p) = poly []\n\ngoal (1 subgoal):\n 1. \\<forall>c\\<in>set (coefficients p).\n       Ipoly (take (maxindex (decrpoly (head p))) bs @ xs) (decrpoly c) =\n       (0::'a)", "by (simp add: poly_zero polypoly'_def)"], ["proof (state)\nthis:\n  \\<forall>c\\<in>set (coefficients p).\n     Ipoly (take (maxindex (decrpoly (head p))) bs @ xs) (decrpoly c) =\n     (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "with coefficients_head[of p, symmetric]"], ["proof (chain)\npicking this:\n  head p = last (coefficients p)\n  \\<forall>c\\<in>set (coefficients p).\n     Ipoly (take (maxindex (decrpoly (head p))) bs @ xs) (decrpoly c) =\n     (0::'a)", "have th0: \"Ipoly (?ts @ xs) ?hd = 0\""], ["proof (prove)\nusing this:\n  head p = last (coefficients p)\n  \\<forall>c\\<in>set (coefficients p).\n     Ipoly (take (maxindex (decrpoly (head p))) bs @ xs) (decrpoly c) =\n     (0::'a)\n\ngoal (1 subgoal):\n 1. Ipoly (take (maxindex (decrpoly (head p))) bs @ xs)\n     (decrpoly (head p)) =\n    (0::'a)", "by simp"], ["proof (state)\nthis:\n  Ipoly (take (maxindex (decrpoly (head p))) bs @ xs) (decrpoly (head p)) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "from bs"], ["proof (chain)\npicking this:\n  wf_bs bs (decrpoly (head p))", "have wf'': \"wf_bs ?ts ?hd\""], ["proof (prove)\nusing this:\n  wf_bs bs (decrpoly (head p))\n\ngoal (1 subgoal):\n 1. wf_bs (take (maxindex (decrpoly (head p))) bs) (decrpoly (head p))", "unfolding wf_bs_def"], ["proof (prove)\nusing this:\n  maxindex (decrpoly (head p)) \\<le> length bs\n\ngoal (1 subgoal):\n 1. maxindex (decrpoly (head p))\n    \\<le> length (take (maxindex (decrpoly (head p))) bs)", "by simp"], ["proof (state)\nthis:\n  wf_bs (take (maxindex (decrpoly (head p))) bs) (decrpoly (head p))\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "with th0 wf_bs_I[of ?ts ?hd xs]"], ["proof (chain)\npicking this:\n  Ipoly (take (maxindex (decrpoly (head p))) bs @ xs) (decrpoly (head p)) =\n  (0::'a)\n  wf_bs (take (maxindex (decrpoly (head p))) bs)\n   (decrpoly (head p)) \\<Longrightarrow>\n  Ipoly (take (maxindex (decrpoly (head p))) bs @ xs) (decrpoly (head p)) =\n  Ipoly (take (maxindex (decrpoly (head p))) bs) (decrpoly (head p))\n  wf_bs (take (maxindex (decrpoly (head p))) bs) (decrpoly (head p))", "have \"Ipoly ?ts ?hd = 0\""], ["proof (prove)\nusing this:\n  Ipoly (take (maxindex (decrpoly (head p))) bs @ xs) (decrpoly (head p)) =\n  (0::'a)\n  wf_bs (take (maxindex (decrpoly (head p))) bs)\n   (decrpoly (head p)) \\<Longrightarrow>\n  Ipoly (take (maxindex (decrpoly (head p))) bs @ xs) (decrpoly (head p)) =\n  Ipoly (take (maxindex (decrpoly (head p))) bs) (decrpoly (head p))\n  wf_bs (take (maxindex (decrpoly (head p))) bs) (decrpoly (head p))\n\ngoal (1 subgoal):\n 1. Ipoly (take (maxindex (decrpoly (head p))) bs) (decrpoly (head p)) =\n    (0::'a)", "by simp"], ["proof (state)\nthis:\n  Ipoly (take (maxindex (decrpoly (head p))) bs) (decrpoly (head p)) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "with wf'' wf_bs_I[of ?ts ?hd ?rs] bs_ts_eq"], ["proof (chain)\npicking this:\n  wf_bs (take (maxindex (decrpoly (head p))) bs) (decrpoly (head p))\n  wf_bs (take (maxindex (decrpoly (head p))) bs)\n   (decrpoly (head p)) \\<Longrightarrow>\n  Ipoly\n   (take (maxindex (decrpoly (head p))) bs @\n    drop (maxindex (decrpoly (head p))) bs)\n   (decrpoly (head p)) =\n  Ipoly (take (maxindex (decrpoly (head p))) bs) (decrpoly (head p))\n  take (maxindex (decrpoly (head p))) bs @\n  drop (maxindex (decrpoly (head p))) bs =\n  bs\n  Ipoly (take (maxindex (decrpoly (head p))) bs) (decrpoly (head p)) =\n  (0::'a)", "have \"Ipoly bs ?hd = 0\""], ["proof (prove)\nusing this:\n  wf_bs (take (maxindex (decrpoly (head p))) bs) (decrpoly (head p))\n  wf_bs (take (maxindex (decrpoly (head p))) bs)\n   (decrpoly (head p)) \\<Longrightarrow>\n  Ipoly\n   (take (maxindex (decrpoly (head p))) bs @\n    drop (maxindex (decrpoly (head p))) bs)\n   (decrpoly (head p)) =\n  Ipoly (take (maxindex (decrpoly (head p))) bs) (decrpoly (head p))\n  take (maxindex (decrpoly (head p))) bs @\n  drop (maxindex (decrpoly (head p))) bs =\n  bs\n  Ipoly (take (maxindex (decrpoly (head p))) bs) (decrpoly (head p)) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. Ipoly bs (decrpoly (head p)) = (0::'a)", "by simp"], ["proof (state)\nthis:\n  Ipoly bs (decrpoly (head p)) = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "}"], ["proof (state)\nthis:\n  wf_bs ?bs2 (decrpoly (head p)) \\<Longrightarrow>\n  Ipoly ?bs2 (decrpoly (head p)) = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "then"], ["proof (chain)\npicking this:\n  wf_bs ?bs2 (decrpoly (head p)) \\<Longrightarrow>\n  Ipoly ?bs2 (decrpoly (head p)) = (0::'a)", "have hdz: \"\\<forall>bs. wf_bs bs ?hd \\<longrightarrow> Ipoly bs ?hd = (0::'a)\""], ["proof (prove)\nusing this:\n  wf_bs ?bs2 (decrpoly (head p)) \\<Longrightarrow>\n  Ipoly ?bs2 (decrpoly (head p)) = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<forall>bs.\n       wf_bs bs (decrpoly (head p)) \\<longrightarrow>\n       Ipoly bs (decrpoly (head p)) = (0::'a)", "by blast"], ["proof (state)\nthis:\n  \\<forall>bs.\n     wf_bs bs (decrpoly (head p)) \\<longrightarrow>\n     Ipoly bs (decrpoly (head p)) = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "from less(1)[OF ihd_lt_n nhd] hdz"], ["proof (chain)\npicking this:\n  \\<forall>bs.\n     wf_bs bs (decrpoly (head p)) \\<longrightarrow>\n     Ipoly bs (decrpoly (head p)) = (0::'a) \\<Longrightarrow>\n  decrpoly (head p) = 0\\<^sub>p\n  \\<forall>bs.\n     wf_bs bs (decrpoly (head p)) \\<longrightarrow>\n     Ipoly bs (decrpoly (head p)) = (0::'a)", "have \"?hd = 0\\<^sub>p\""], ["proof (prove)\nusing this:\n  \\<forall>bs.\n     wf_bs bs (decrpoly (head p)) \\<longrightarrow>\n     Ipoly bs (decrpoly (head p)) = (0::'a) \\<Longrightarrow>\n  decrpoly (head p) = 0\\<^sub>p\n  \\<forall>bs.\n     wf_bs bs (decrpoly (head p)) \\<longrightarrow>\n     Ipoly bs (decrpoly (head p)) = (0::'a)\n\ngoal (1 subgoal):\n 1. decrpoly (head p) = 0\\<^sub>p", "by blast"], ["proof (state)\nthis:\n  decrpoly (head p) = 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "then"], ["proof (chain)\npicking this:\n  decrpoly (head p) = 0\\<^sub>p", "have \"?h = 0\\<^sub>p\""], ["proof (prove)\nusing this:\n  decrpoly (head p) = 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. head p = 0\\<^sub>p", "by simp"], ["proof (state)\nthis:\n  head p = 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "with head_nz[OF np]"], ["proof (chain)\npicking this:\n  (head p = 0\\<^sub>p) = (p = 0\\<^sub>p)\n  head p = 0\\<^sub>p", "have \"p = 0\\<^sub>p\""], ["proof (prove)\nusing this:\n  (head p = 0\\<^sub>p) = (p = 0\\<^sub>p)\n  head p = 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. p = 0\\<^sub>p", "by simp"], ["proof (state)\nthis:\n  p = 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "}"], ["proof (state)\nthis:\n  maxindex p \\<noteq> 0 \\<Longrightarrow> p = 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. \\<And>p n0.\n       \\<lbrakk>\\<And>pa n0.\n                   \\<lbrakk>maxindex pa < maxindex p; isnpolyh pa n0;\n                    \\<forall>bs.\n                       wf_bs bs pa \\<longrightarrow>\n                       Ipoly bs pa = (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> pa = 0\\<^sub>p;\n        isnpolyh p n0;\n        \\<forall>bs.\n           wf_bs bs p \\<longrightarrow> Ipoly bs p = (0::'a)\\<rbrakk>\n       \\<Longrightarrow> p = 0\\<^sub>p", "ultimately"], ["proof (chain)\npicking this:\n  maxindex p = 0 \\<Longrightarrow> p = 0\\<^sub>p\n  maxindex p \\<noteq> 0 \\<Longrightarrow> p = 0\\<^sub>p", "show \"p = 0\\<^sub>p\""], ["proof (prove)\nusing this:\n  maxindex p = 0 \\<Longrightarrow> p = 0\\<^sub>p\n  maxindex p \\<noteq> 0 \\<Longrightarrow> p = 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. p = 0\\<^sub>p", "by blast"], ["proof (state)\nthis:\n  p = 0\\<^sub>p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma isnpolyh_unique:\n  assumes np: \"isnpolyh p n0\"\n    and nq: \"isnpolyh q n1\"\n  shows \"(\\<forall>bs. Ipoly bs p = (Ipoly bs q :: 'a::idom_char_0)) \\<longleftrightarrow> p = q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>bs. Ipoly bs p = Ipoly bs q) = (p = q)", "proof auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>bs. Ipoly bs p = Ipoly bs q \\<Longrightarrow> p = q", "assume H: \"\\<forall>bs. (Ipoly bs p ::'a) = Ipoly bs q\""], ["proof (state)\nthis:\n  \\<forall>bs. Ipoly bs p = Ipoly bs q\n\ngoal (1 subgoal):\n 1. \\<forall>bs. Ipoly bs p = Ipoly bs q \\<Longrightarrow> p = q", "then"], ["proof (chain)\npicking this:\n  \\<forall>bs. Ipoly bs p = Ipoly bs q", "have \"\\<forall>bs. Ipoly bs (p -\\<^sub>p q) = (0::'a)\""], ["proof (prove)\nusing this:\n  \\<forall>bs. Ipoly bs p = Ipoly bs q\n\ngoal (1 subgoal):\n 1. \\<forall>bs. Ipoly bs (p -\\<^sub>p q) = (0::'a)", "by simp"], ["proof (state)\nthis:\n  \\<forall>bs. Ipoly bs (p -\\<^sub>p q) = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<forall>bs. Ipoly bs p = Ipoly bs q \\<Longrightarrow> p = q", "then"], ["proof (chain)\npicking this:\n  \\<forall>bs. Ipoly bs (p -\\<^sub>p q) = (0::'a)", "have \"\\<forall>bs. wf_bs bs (p -\\<^sub>p q) \\<longrightarrow> Ipoly bs (p -\\<^sub>p q) = (0::'a)\""], ["proof (prove)\nusing this:\n  \\<forall>bs. Ipoly bs (p -\\<^sub>p q) = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<forall>bs.\n       wf_bs bs (p -\\<^sub>p q) \\<longrightarrow>\n       Ipoly bs (p -\\<^sub>p q) = (0::'a)", "using wf_bs_polysub[where p=p and q=q]"], ["proof (prove)\nusing this:\n  \\<forall>bs. Ipoly bs (p -\\<^sub>p q) = (0::'a)\n  \\<lbrakk>wf_bs ?bs p; wf_bs ?bs q\\<rbrakk>\n  \\<Longrightarrow> wf_bs ?bs (p -\\<^sub>p q)\n\ngoal (1 subgoal):\n 1. \\<forall>bs.\n       wf_bs bs (p -\\<^sub>p q) \\<longrightarrow>\n       Ipoly bs (p -\\<^sub>p q) = (0::'a)", "by auto"], ["proof (state)\nthis:\n  \\<forall>bs.\n     wf_bs bs (p -\\<^sub>p q) \\<longrightarrow>\n     Ipoly bs (p -\\<^sub>p q) = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<forall>bs. Ipoly bs p = Ipoly bs q \\<Longrightarrow> p = q", "with isnpolyh_zero_iff[OF polysub_normh[OF np nq]] polysub_0[OF np nq]"], ["proof (chain)\npicking this:\n  \\<forall>bs.\n     wf_bs bs (p -\\<^sub>p q) \\<longrightarrow>\n     Ipoly bs (p -\\<^sub>p q) = (0::'a) \\<Longrightarrow>\n  p -\\<^sub>p q = 0\\<^sub>p\n  (p -\\<^sub>p q = 0\\<^sub>p) = (p = q)\n  \\<forall>bs.\n     wf_bs bs (p -\\<^sub>p q) \\<longrightarrow>\n     Ipoly bs (p -\\<^sub>p q) = (0::'a)", "show \"p = q\""], ["proof (prove)\nusing this:\n  \\<forall>bs.\n     wf_bs bs (p -\\<^sub>p q) \\<longrightarrow>\n     Ipoly bs (p -\\<^sub>p q) = (0::'a) \\<Longrightarrow>\n  p -\\<^sub>p q = 0\\<^sub>p\n  (p -\\<^sub>p q = 0\\<^sub>p) = (p = q)\n  \\<forall>bs.\n     wf_bs bs (p -\\<^sub>p q) \\<longrightarrow>\n     Ipoly bs (p -\\<^sub>p q) = (0::'a)\n\ngoal (1 subgoal):\n 1. p = q", "by blast"], ["proof (state)\nthis:\n  p = q\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>consequences of unicity on the algorithms for polynomial normalization\\<close>"], ["", "lemma polyadd_commute:\n  fixes p :: \"'a::idom_char_0 poly\"\n  assumes np: \"isnpolyh p n0\"\n      and nq: \"isnpolyh q n1\"\n  shows \"p +\\<^sub>p q = q +\\<^sub>p p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p +\\<^sub>p q = q +\\<^sub>p p", "using isnpolyh_unique[OF polyadd_normh[OF np nq] polyadd_normh[OF nq np]]"], ["proof (prove)\nusing this:\n  (\\<forall>bs. Ipoly bs (p +\\<^sub>p q) = Ipoly bs (q +\\<^sub>p p)) =\n  (p +\\<^sub>p q = q +\\<^sub>p p)\n\ngoal (1 subgoal):\n 1. p +\\<^sub>p q = q +\\<^sub>p p", "by simp"], ["", "lemma zero_normh: \"isnpolyh 0\\<^sub>p n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh 0\\<^sub>p n", "by simp"], ["", "lemma one_normh: \"isnpolyh (1)\\<^sub>p n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh (1::'a)\\<^sub>p n", "by simp"], ["", "lemma polyadd_0[simp]:\n  fixes p :: \"'a::idom_char_0 poly\"\n  assumes np: \"isnpolyh p n0\"\n  shows \"p +\\<^sub>p 0\\<^sub>p = p\"\n    and \"0\\<^sub>p +\\<^sub>p p = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p +\\<^sub>p 0\\<^sub>p = p &&& 0\\<^sub>p +\\<^sub>p p = p", "using isnpolyh_unique[OF polyadd_normh[OF np zero_normh] np]\n    isnpolyh_unique[OF polyadd_normh[OF zero_normh np] np]"], ["proof (prove)\nusing this:\n  (\\<forall>bs. Ipoly bs (p +\\<^sub>p 0\\<^sub>p) = Ipoly bs p) =\n  (p +\\<^sub>p 0\\<^sub>p = p)\n  (\\<forall>bs. Ipoly bs (0\\<^sub>p +\\<^sub>p p) = Ipoly bs p) =\n  (0\\<^sub>p +\\<^sub>p p = p)\n\ngoal (1 subgoal):\n 1. p +\\<^sub>p 0\\<^sub>p = p &&& 0\\<^sub>p +\\<^sub>p p = p", "by simp_all"], ["", "lemma polymul_1[simp]:\n  fixes p :: \"'a::field_char_0 poly\"\n  assumes np: \"isnpolyh p n0\"\n  shows \"p *\\<^sub>p (1)\\<^sub>p = p\"\n    and \"(1)\\<^sub>p *\\<^sub>p p = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p *\\<^sub>p (1::'a)\\<^sub>p = p &&& (1::'a)\\<^sub>p *\\<^sub>p p = p", "using isnpolyh_unique[OF polymul_normh[OF np one_normh] np]\n    isnpolyh_unique[OF polymul_normh[OF one_normh np] np]"], ["proof (prove)\nusing this:\n  (\\<forall>bs. Ipoly bs (p *\\<^sub>p (1::'a)\\<^sub>p) = Ipoly bs p) =\n  (p *\\<^sub>p (1::'a)\\<^sub>p = p)\n  (\\<forall>bs. Ipoly bs ((1::'a)\\<^sub>p *\\<^sub>p p) = Ipoly bs p) =\n  ((1::'a)\\<^sub>p *\\<^sub>p p = p)\n\ngoal (1 subgoal):\n 1. p *\\<^sub>p (1::'a)\\<^sub>p = p &&& (1::'a)\\<^sub>p *\\<^sub>p p = p", "by simp_all"], ["", "lemma polymul_0[simp]:\n  fixes p :: \"'a::field_char_0 poly\"\n  assumes np: \"isnpolyh p n0\"\n  shows \"p *\\<^sub>p 0\\<^sub>p = 0\\<^sub>p\"\n    and \"0\\<^sub>p *\\<^sub>p p = 0\\<^sub>p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p *\\<^sub>p 0\\<^sub>p = 0\\<^sub>p &&& 0\\<^sub>p *\\<^sub>p p = 0\\<^sub>p", "using isnpolyh_unique[OF polymul_normh[OF np zero_normh] zero_normh]\n    isnpolyh_unique[OF polymul_normh[OF zero_normh np] zero_normh]"], ["proof (prove)\nusing this:\n  (\\<forall>bs. Ipoly bs (p *\\<^sub>p 0\\<^sub>p) = Ipoly bs 0\\<^sub>p) =\n  (p *\\<^sub>p 0\\<^sub>p = 0\\<^sub>p)\n  (\\<forall>bs. Ipoly bs (0\\<^sub>p *\\<^sub>p p) = Ipoly bs 0\\<^sub>p) =\n  (0\\<^sub>p *\\<^sub>p p = 0\\<^sub>p)\n\ngoal (1 subgoal):\n 1. p *\\<^sub>p 0\\<^sub>p = 0\\<^sub>p &&& 0\\<^sub>p *\\<^sub>p p = 0\\<^sub>p", "by simp_all"], ["", "lemma polymul_commute:\n  fixes p :: \"'a::field_char_0 poly\"\n  assumes np: \"isnpolyh p n0\"\n    and nq: \"isnpolyh q n1\"\n  shows \"p *\\<^sub>p q = q *\\<^sub>p p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p *\\<^sub>p q = q *\\<^sub>p p", "using isnpolyh_unique[OF polymul_normh[OF np nq] polymul_normh[OF nq np]]"], ["proof (prove)\nusing this:\n  (\\<forall>bs. Ipoly bs (p *\\<^sub>p q) = Ipoly bs (q *\\<^sub>p p)) =\n  (p *\\<^sub>p q = q *\\<^sub>p p)\n\ngoal (1 subgoal):\n 1. p *\\<^sub>p q = q *\\<^sub>p p", "by simp"], ["", "declare polyneg_polyneg [simp]"], ["", "lemma isnpolyh_polynate_id [simp]:\n  fixes p :: \"'a::field_char_0 poly\"\n  assumes np: \"isnpolyh p n0\"\n  shows \"polynate p = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. polynate p = p", "using isnpolyh_unique[OF polynate_norm[of p, unfolded isnpoly_def] np]\n    polynate"], ["proof (prove)\nusing this:\n  (\\<forall>bs. Ipoly bs (polynate p) = Ipoly bs p) = (polynate p = p)\n  Ipoly ?bs (polynate ?p) = Ipoly ?bs ?p\n\ngoal (1 subgoal):\n 1. polynate p = p", "by simp"], ["", "lemma polynate_idempotent[simp]:\n  fixes p :: \"'a::field_char_0 poly\"\n  shows \"polynate (polynate p) = polynate p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. polynate (polynate p) = polynate p", "using isnpolyh_polynate_id[OF polynate_norm[of p, unfolded isnpoly_def]]"], ["proof (prove)\nusing this:\n  polynate (polynate p) = polynate p\n\ngoal (1 subgoal):\n 1. polynate (polynate p) = polynate p", "."], ["", "lemma poly_nate_polypoly': \"poly_nate bs p = polypoly' bs (polynate p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly_nate bs p = polypoly' bs (polynate p)", "unfolding poly_nate_def polypoly'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. map (Ipoly bs \\<circ> decrpoly) (coefficients (polynate p)) =\n    map (Ipoly bs \\<circ> decrpoly) (coefficients (polynate p))", ".."], ["", "lemma poly_nate_poly:\n  \"poly (poly_nate bs p) = (\\<lambda>x:: 'a ::field. Ipoly (x # bs) p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly (poly_nate bs p) = (\\<lambda>x. Ipoly (x # bs) p)", "using polypoly'_poly[OF polynate_norm[unfolded isnpoly_def], symmetric, of bs p]"], ["proof (prove)\nusing this:\n  poly (polypoly' bs (polynate p)) ?x = Ipoly (?x # bs) (polynate p)\n\ngoal (1 subgoal):\n 1. poly (poly_nate bs p) = (\\<lambda>x. Ipoly (x # bs) p)", "unfolding poly_nate_polypoly'"], ["proof (prove)\nusing this:\n  poly (polypoly' bs (polynate p)) ?x = Ipoly (?x # bs) (polynate p)\n\ngoal (1 subgoal):\n 1. poly (polypoly' bs (polynate p)) = (\\<lambda>x. Ipoly (x # bs) p)", "by auto"], ["", "subsection \\<open>heads, degrees and all that\\<close>"], ["", "lemma degree_eq_degreen0: \"degree p = degreen p 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree p = degreen p 0", "by (induct p rule: degree.induct) simp_all"], ["", "lemma degree_polyneg:\n  assumes \"isnpolyh p n\"\n  shows \"degree (polyneg p) = degree p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (~\\<^sub>p p) =\n    Polynomial_Expression.degree p", "apply (induct p rule: polyneg.induct)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>c.\n       Polynomial_Expression.degree (~\\<^sub>p (c)\\<^sub>p) =\n       Polynomial_Expression.degree (c)\\<^sub>p\n 2. \\<And>c n p.\n       \\<lbrakk>Polynomial_Expression.degree (~\\<^sub>p c) =\n                Polynomial_Expression.degree c;\n        Polynomial_Expression.degree (~\\<^sub>p p) =\n        Polynomial_Expression.degree p\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (~\\<^sub>p (CN c n p)) =\n                         Polynomial_Expression.degree (CN c n p)\n 3. \\<And>v.\n       Polynomial_Expression.degree (~\\<^sub>p (Bound v)) =\n       Polynomial_Expression.degree (Bound v)\n 4. \\<And>v va.\n       Polynomial_Expression.degree (~\\<^sub>p (Add v va)) =\n       Polynomial_Expression.degree (Add v va)\n 5. \\<And>v va.\n       Polynomial_Expression.degree (~\\<^sub>p (Sub v va)) =\n       Polynomial_Expression.degree (Sub v va)\n 6. \\<And>v va.\n       Polynomial_Expression.degree (~\\<^sub>p (Mul v va)) =\n       Polynomial_Expression.degree (Mul v va)\n 7. \\<And>v.\n       Polynomial_Expression.degree (~\\<^sub>p (Neg v)) =\n       Polynomial_Expression.degree (Neg v)\n 8. \\<And>v va.\n       Polynomial_Expression.degree (~\\<^sub>p (Pw v va)) =\n       Polynomial_Expression.degree (Pw v va)", "using assms"], ["proof (prove)\nusing this:\n  isnpolyh p n\n\ngoal (8 subgoals):\n 1. \\<And>c.\n       Polynomial_Expression.degree (~\\<^sub>p (c)\\<^sub>p) =\n       Polynomial_Expression.degree (c)\\<^sub>p\n 2. \\<And>c n p.\n       \\<lbrakk>Polynomial_Expression.degree (~\\<^sub>p c) =\n                Polynomial_Expression.degree c;\n        Polynomial_Expression.degree (~\\<^sub>p p) =\n        Polynomial_Expression.degree p\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (~\\<^sub>p (CN c n p)) =\n                         Polynomial_Expression.degree (CN c n p)\n 3. \\<And>v.\n       Polynomial_Expression.degree (~\\<^sub>p (Bound v)) =\n       Polynomial_Expression.degree (Bound v)\n 4. \\<And>v va.\n       Polynomial_Expression.degree (~\\<^sub>p (Add v va)) =\n       Polynomial_Expression.degree (Add v va)\n 5. \\<And>v va.\n       Polynomial_Expression.degree (~\\<^sub>p (Sub v va)) =\n       Polynomial_Expression.degree (Sub v va)\n 6. \\<And>v va.\n       Polynomial_Expression.degree (~\\<^sub>p (Mul v va)) =\n       Polynomial_Expression.degree (Mul v va)\n 7. \\<And>v.\n       Polynomial_Expression.degree (~\\<^sub>p (Neg v)) =\n       Polynomial_Expression.degree (Neg v)\n 8. \\<And>v va.\n       Polynomial_Expression.degree (~\\<^sub>p (Pw v va)) =\n       Polynomial_Expression.degree (Pw v va)", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c na pa.\n       \\<lbrakk>Polynomial_Expression.degree (~\\<^sub>p c) =\n                Polynomial_Expression.degree c;\n        Polynomial_Expression.degree (~\\<^sub>p pa) =\n        Polynomial_Expression.degree pa;\n        isnpolyh p n\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN (~\\<^sub>p c) na (~\\<^sub>p pa)) =\n                         Polynomial_Expression.degree (CN c na pa)", "apply (case_tac na)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>c na pa.\n       \\<lbrakk>Polynomial_Expression.degree (~\\<^sub>p c) =\n                Polynomial_Expression.degree c;\n        Polynomial_Expression.degree (~\\<^sub>p pa) =\n        Polynomial_Expression.degree pa;\n        isnpolyh p n; na = 0\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN (~\\<^sub>p c) na (~\\<^sub>p pa)) =\n                         Polynomial_Expression.degree (CN c na pa)\n 2. \\<And>c na pa nat.\n       \\<lbrakk>Polynomial_Expression.degree (~\\<^sub>p c) =\n                Polynomial_Expression.degree c;\n        Polynomial_Expression.degree (~\\<^sub>p pa) =\n        Polynomial_Expression.degree pa;\n        isnpolyh p n; na = Suc nat\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN (~\\<^sub>p c) na (~\\<^sub>p pa)) =\n                         Polynomial_Expression.degree (CN c na pa)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma degree_polyadd:\n  fixes p::\"'a::{plus,zero} poly\"\n  assumes np: \"isnpolyh p n0\"\n    and nq: \"isnpolyh q n1\"\n  shows \"degree (p +\\<^sub>p q) \\<le> max (degree p) (degree q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (p +\\<^sub>p q)\n    \\<le> max (Polynomial_Expression.degree p)\n           (Polynomial_Expression.degree q)", "using degreen_polyadd[OF np nq, where m= \"0\"]"], ["proof (prove)\nusing this:\n  0 \\<le> max n0 n1 \\<Longrightarrow>\n  degreen (p +\\<^sub>p q) 0 \\<le> max (degreen p 0) (degreen q 0)\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (p +\\<^sub>p q)\n    \\<le> max (Polynomial_Expression.degree p)\n           (Polynomial_Expression.degree q)", "by (simp add: degree_eq_degreen0)"], ["", "lemma degree_polysub:\n  fixes p::\"'a::ring_1 poly\"\n  assumes np: \"isnpolyh p n0\"\n    and nq: \"isnpolyh q n1\"\n  shows \"degree (p -\\<^sub>p q) \\<le> max (degree p) (degree q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (p -\\<^sub>p q)\n    \\<le> max (Polynomial_Expression.degree p)\n           (Polynomial_Expression.degree q)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (p -\\<^sub>p q)\n    \\<le> max (Polynomial_Expression.degree p)\n           (Polynomial_Expression.degree q)", "from polyneg_normh[OF nq]"], ["proof (chain)\npicking this:\n  isnpolyh (~\\<^sub>p q) n1", "have nq': \"isnpolyh (~\\<^sub>p q) n1\""], ["proof (prove)\nusing this:\n  isnpolyh (~\\<^sub>p q) n1\n\ngoal (1 subgoal):\n 1. isnpolyh (~\\<^sub>p q) n1", "."], ["proof (state)\nthis:\n  isnpolyh (~\\<^sub>p q) n1\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (p -\\<^sub>p q)\n    \\<le> max (Polynomial_Expression.degree p)\n           (Polynomial_Expression.degree q)", "from degree_polyadd[OF np nq']"], ["proof (chain)\npicking this:\n  Polynomial_Expression.degree (p +\\<^sub>p ~\\<^sub>p q)\n  \\<le> max (Polynomial_Expression.degree p)\n         (Polynomial_Expression.degree (~\\<^sub>p q))", "show ?thesis"], ["proof (prove)\nusing this:\n  Polynomial_Expression.degree (p +\\<^sub>p ~\\<^sub>p q)\n  \\<le> max (Polynomial_Expression.degree p)\n         (Polynomial_Expression.degree (~\\<^sub>p q))\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (p -\\<^sub>p q)\n    \\<le> max (Polynomial_Expression.degree p)\n           (Polynomial_Expression.degree q)", "by (simp add: polysub_def degree_polyneg[OF nq])"], ["proof (state)\nthis:\n  Polynomial_Expression.degree (p -\\<^sub>p q)\n  \\<le> max (Polynomial_Expression.degree p)\n         (Polynomial_Expression.degree q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma degree_polysub_samehead:\n  fixes p::\"'a::ring_1 poly\"\n  assumes np: \"isnpolyh p n0\"\n    and nq: \"isnpolyh q n1\"\n    and h: \"head p = head q\"\n    and d: \"degree p = degree q\"\n  shows \"degree (p -\\<^sub>p q) < degree p \\<or> (p -\\<^sub>p q = 0\\<^sub>p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (p -\\<^sub>p q)\n    < Polynomial_Expression.degree p \\<or>\n    p -\\<^sub>p q = 0\\<^sub>p", "unfolding polysub_def split_def fst_conv snd_conv"], ["proof (prove)\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (p +\\<^sub>p ~\\<^sub>p q)\n    < Polynomial_Expression.degree p \\<or>\n    p +\\<^sub>p ~\\<^sub>p q = 0\\<^sub>p", "using np nq h d"], ["proof (prove)\nusing this:\n  isnpolyh p n0\n  isnpolyh q n1\n  head p = head q\n  Polynomial_Expression.degree p = Polynomial_Expression.degree q\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (p +\\<^sub>p ~\\<^sub>p q)\n    < Polynomial_Expression.degree p \\<or>\n    p +\\<^sub>p ~\\<^sub>p q = 0\\<^sub>p", "proof (induct p q rule: polyadd.induct)"], ["proof (state)\ngoal (28 subgoals):\n 1. \\<And>c c'.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        head (c)\\<^sub>p = head (c')\\<^sub>p;\n        Polynomial_Expression.degree (c)\\<^sub>p =\n        Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                         < Polynomial_Expression.degree (c)\\<^sub>p \\<or>\n                         (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                         0\\<^sub>p\n 2. \\<And>c c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                 head (c)\\<^sub>p = head c';\n                 Polynomial_Expression.degree (c)\\<^sub>p =\n                 Polynomial_Expression.degree c'\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c')\n                                  < Polynomial_Expression.degree\n                                     (c)\\<^sub>p \\<or>\n                                  (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c' =\n                                  0\\<^sub>p;\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        head (c)\\<^sub>p = head (CN c' n' p');\n        Polynomial_Expression.degree (c)\\<^sub>p =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (c)\\<^sub>p \\<or>\n                         (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 3. \\<And>c n p c'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                 head c = head (c')\\<^sub>p;\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                                  0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        head (CN c n p) = head (c')\\<^sub>p;\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                         0\\<^sub>p\n 4. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 5. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 9. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 10. \\<And>v va b.\n        \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n         head (Pw v va) = head b;\n         Polynomial_Expression.degree (Pw v va) =\n         Polynomial_Expression.degree b\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                          < Polynomial_Expression.degree (Pw v va) \\<or>\n                          Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\nA total of 28 subgoals...", "case (1 c c')"], ["proof (state)\nthis:\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (c')\\<^sub>p n1\n  head (c)\\<^sub>p = head (c')\\<^sub>p\n  Polynomial_Expression.degree (c)\\<^sub>p =\n  Polynomial_Expression.degree (c')\\<^sub>p\n\ngoal (28 subgoals):\n 1. \\<And>c c'.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        head (c)\\<^sub>p = head (c')\\<^sub>p;\n        Polynomial_Expression.degree (c)\\<^sub>p =\n        Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                         < Polynomial_Expression.degree (c)\\<^sub>p \\<or>\n                         (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                         0\\<^sub>p\n 2. \\<And>c c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                 head (c)\\<^sub>p = head c';\n                 Polynomial_Expression.degree (c)\\<^sub>p =\n                 Polynomial_Expression.degree c'\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c')\n                                  < Polynomial_Expression.degree\n                                     (c)\\<^sub>p \\<or>\n                                  (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c' =\n                                  0\\<^sub>p;\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        head (c)\\<^sub>p = head (CN c' n' p');\n        Polynomial_Expression.degree (c)\\<^sub>p =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (c)\\<^sub>p \\<or>\n                         (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 3. \\<And>c n p c'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                 head c = head (c')\\<^sub>p;\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                                  0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        head (CN c n p) = head (c')\\<^sub>p;\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                         0\\<^sub>p\n 4. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 5. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 9. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 10. \\<And>v va b.\n        \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n         head (Pw v va) = head b;\n         Polynomial_Expression.degree (Pw v va) =\n         Polynomial_Expression.degree b\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                          < Polynomial_Expression.degree (Pw v va) \\<or>\n                          Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\nA total of 28 subgoals...", "then"], ["proof (chain)\npicking this:\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (c')\\<^sub>p n1\n  head (c)\\<^sub>p = head (c')\\<^sub>p\n  Polynomial_Expression.degree (c)\\<^sub>p =\n  Polynomial_Expression.degree (c')\\<^sub>p", "show ?case"], ["proof (prove)\nusing this:\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (c')\\<^sub>p n1\n  head (c)\\<^sub>p = head (c')\\<^sub>p\n  Polynomial_Expression.degree (c)\\<^sub>p =\n  Polynomial_Expression.degree (c')\\<^sub>p\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree\n     ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n    < Polynomial_Expression.degree (c)\\<^sub>p \\<or>\n    (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p", "by (simp add: Nsub_def Nsub0[simplified Nsub_def])"], ["proof (state)\nthis:\n  Polynomial_Expression.degree\n   ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n  < Polynomial_Expression.degree (c)\\<^sub>p \\<or>\n  (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p\n\ngoal (27 subgoals):\n 1. \\<And>c c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                 head (c)\\<^sub>p = head c';\n                 Polynomial_Expression.degree (c)\\<^sub>p =\n                 Polynomial_Expression.degree c'\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c')\n                                  < Polynomial_Expression.degree\n                                     (c)\\<^sub>p \\<or>\n                                  (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c' =\n                                  0\\<^sub>p;\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        head (c)\\<^sub>p = head (CN c' n' p');\n        Polynomial_Expression.degree (c)\\<^sub>p =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (c)\\<^sub>p \\<or>\n                         (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>c n p c'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                 head c = head (c')\\<^sub>p;\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                                  0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        head (CN c n p) = head (c')\\<^sub>p;\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                         0\\<^sub>p\n 3. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 4. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 9. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 10. \\<And>v va vb vc.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n         head (CN v va vb) = head (Bound vc);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                          0\\<^sub>p\nA total of 27 subgoals...", "next"], ["proof (state)\ngoal (27 subgoals):\n 1. \\<And>c c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                 head (c)\\<^sub>p = head c';\n                 Polynomial_Expression.degree (c)\\<^sub>p =\n                 Polynomial_Expression.degree c'\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c')\n                                  < Polynomial_Expression.degree\n                                     (c)\\<^sub>p \\<or>\n                                  (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c' =\n                                  0\\<^sub>p;\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        head (c)\\<^sub>p = head (CN c' n' p');\n        Polynomial_Expression.degree (c)\\<^sub>p =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (c)\\<^sub>p \\<or>\n                         (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>c n p c'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                 head c = head (c')\\<^sub>p;\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                                  0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        head (CN c n p) = head (c')\\<^sub>p;\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                         0\\<^sub>p\n 3. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 4. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 9. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 10. \\<And>v va vb vc.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n         head (CN v va vb) = head (Bound vc);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                          0\\<^sub>p\nA total of 27 subgoals...", "case (2 c c' n' p')"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n   head (c)\\<^sub>p = head c';\n   Polynomial_Expression.degree (c)\\<^sub>p =\n   Polynomial_Expression.degree c'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c')\n                    < Polynomial_Expression.degree (c)\\<^sub>p \\<or>\n                    (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n  head (c)\\<^sub>p = head (CN c' n' p')\n  Polynomial_Expression.degree (c)\\<^sub>p =\n  Polynomial_Expression.degree (CN c' n' p')\n\ngoal (27 subgoals):\n 1. \\<And>c c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                 head (c)\\<^sub>p = head c';\n                 Polynomial_Expression.degree (c)\\<^sub>p =\n                 Polynomial_Expression.degree c'\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c')\n                                  < Polynomial_Expression.degree\n                                     (c)\\<^sub>p \\<or>\n                                  (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c' =\n                                  0\\<^sub>p;\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        head (c)\\<^sub>p = head (CN c' n' p');\n        Polynomial_Expression.degree (c)\\<^sub>p =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (c)\\<^sub>p \\<or>\n                         (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>c n p c'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                 head c = head (c')\\<^sub>p;\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                                  0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        head (CN c n p) = head (c')\\<^sub>p;\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                         0\\<^sub>p\n 3. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 4. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 9. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 10. \\<And>v va vb vc.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n         head (CN v va vb) = head (Bound vc);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                          0\\<^sub>p\nA total of 27 subgoals...", "from 2"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n   head (c)\\<^sub>p = head c';\n   Polynomial_Expression.degree (c)\\<^sub>p =\n   Polynomial_Expression.degree c'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c')\n                    < Polynomial_Expression.degree (c)\\<^sub>p \\<or>\n                    (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n  head (c)\\<^sub>p = head (CN c' n' p')\n  Polynomial_Expression.degree (c)\\<^sub>p =\n  Polynomial_Expression.degree (CN c' n' p')", "have \"degree (C c) = degree (CN c' n' p')\""], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n   head (c)\\<^sub>p = head c';\n   Polynomial_Expression.degree (c)\\<^sub>p =\n   Polynomial_Expression.degree c'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c')\n                    < Polynomial_Expression.degree (c)\\<^sub>p \\<or>\n                    (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n  head (c)\\<^sub>p = head (CN c' n' p')\n  Polynomial_Expression.degree (c)\\<^sub>p =\n  Polynomial_Expression.degree (CN c' n' p')\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (c)\\<^sub>p =\n    Polynomial_Expression.degree (CN c' n' p')", "by simp"], ["proof (state)\nthis:\n  Polynomial_Expression.degree (c)\\<^sub>p =\n  Polynomial_Expression.degree (CN c' n' p')\n\ngoal (27 subgoals):\n 1. \\<And>c c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                 head (c)\\<^sub>p = head c';\n                 Polynomial_Expression.degree (c)\\<^sub>p =\n                 Polynomial_Expression.degree c'\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c')\n                                  < Polynomial_Expression.degree\n                                     (c)\\<^sub>p \\<or>\n                                  (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c' =\n                                  0\\<^sub>p;\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        head (c)\\<^sub>p = head (CN c' n' p');\n        Polynomial_Expression.degree (c)\\<^sub>p =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (c)\\<^sub>p \\<or>\n                         (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>c n p c'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                 head c = head (c')\\<^sub>p;\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                                  0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        head (CN c n p) = head (c')\\<^sub>p;\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                         0\\<^sub>p\n 3. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 4. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 9. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 10. \\<And>v va vb vc.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n         head (CN v va vb) = head (Bound vc);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                          0\\<^sub>p\nA total of 27 subgoals...", "then"], ["proof (chain)\npicking this:\n  Polynomial_Expression.degree (c)\\<^sub>p =\n  Polynomial_Expression.degree (CN c' n' p')", "have nz: \"n' > 0\""], ["proof (prove)\nusing this:\n  Polynomial_Expression.degree (c)\\<^sub>p =\n  Polynomial_Expression.degree (CN c' n' p')\n\ngoal (1 subgoal):\n 1. 0 < n'", "by (cases n') auto"], ["proof (state)\nthis:\n  0 < n'\n\ngoal (27 subgoals):\n 1. \\<And>c c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                 head (c)\\<^sub>p = head c';\n                 Polynomial_Expression.degree (c)\\<^sub>p =\n                 Polynomial_Expression.degree c'\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c')\n                                  < Polynomial_Expression.degree\n                                     (c)\\<^sub>p \\<or>\n                                  (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c' =\n                                  0\\<^sub>p;\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        head (c)\\<^sub>p = head (CN c' n' p');\n        Polynomial_Expression.degree (c)\\<^sub>p =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (c)\\<^sub>p \\<or>\n                         (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>c n p c'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                 head c = head (c')\\<^sub>p;\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                                  0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        head (CN c n p) = head (c')\\<^sub>p;\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                         0\\<^sub>p\n 3. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 4. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 9. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 10. \\<And>v va vb vc.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n         head (CN v va vb) = head (Bound vc);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                          0\\<^sub>p\nA total of 27 subgoals...", "then"], ["proof (chain)\npicking this:\n  0 < n'", "have \"head (CN c' n' p') = CN c' n' p'\""], ["proof (prove)\nusing this:\n  0 < n'\n\ngoal (1 subgoal):\n 1. head (CN c' n' p') = CN c' n' p'", "by (cases n') auto"], ["proof (state)\nthis:\n  head (CN c' n' p') = CN c' n' p'\n\ngoal (27 subgoals):\n 1. \\<And>c c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                 head (c)\\<^sub>p = head c';\n                 Polynomial_Expression.degree (c)\\<^sub>p =\n                 Polynomial_Expression.degree c'\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c')\n                                  < Polynomial_Expression.degree\n                                     (c)\\<^sub>p \\<or>\n                                  (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c' =\n                                  0\\<^sub>p;\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        head (c)\\<^sub>p = head (CN c' n' p');\n        Polynomial_Expression.degree (c)\\<^sub>p =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (c)\\<^sub>p \\<or>\n                         (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>c n p c'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                 head c = head (c')\\<^sub>p;\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                                  0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        head (CN c n p) = head (c')\\<^sub>p;\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                         0\\<^sub>p\n 3. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 4. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 9. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 10. \\<And>v va vb vc.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n         head (CN v va vb) = head (Bound vc);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                          0\\<^sub>p\nA total of 27 subgoals...", "with 2"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n   head (c)\\<^sub>p = head c';\n   Polynomial_Expression.degree (c)\\<^sub>p =\n   Polynomial_Expression.degree c'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c')\n                    < Polynomial_Expression.degree (c)\\<^sub>p \\<or>\n                    (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n  head (c)\\<^sub>p = head (CN c' n' p')\n  Polynomial_Expression.degree (c)\\<^sub>p =\n  Polynomial_Expression.degree (CN c' n' p')\n  head (CN c' n' p') = CN c' n' p'", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n   head (c)\\<^sub>p = head c';\n   Polynomial_Expression.degree (c)\\<^sub>p =\n   Polynomial_Expression.degree c'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c')\n                    < Polynomial_Expression.degree (c)\\<^sub>p \\<or>\n                    (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n  head (c)\\<^sub>p = head (CN c' n' p')\n  Polynomial_Expression.degree (c)\\<^sub>p =\n  Polynomial_Expression.degree (CN c' n' p')\n  head (CN c' n' p') = CN c' n' p'\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree\n     ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n    < Polynomial_Expression.degree (c)\\<^sub>p \\<or>\n    (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p", "by simp"], ["proof (state)\nthis:\n  Polynomial_Expression.degree\n   ((c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (c)\\<^sub>p \\<or>\n  (c)\\<^sub>p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n\ngoal (26 subgoals):\n 1. \\<And>c n p c'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                 head c = head (c')\\<^sub>p;\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                                  0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        head (CN c n p) = head (c')\\<^sub>p;\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                         0\\<^sub>p\n 2. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 3. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 9. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         head (CN v va vb) = head (Add vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                          0\\<^sub>p\nA total of 26 subgoals...", "next"], ["proof (state)\ngoal (26 subgoals):\n 1. \\<And>c n p c'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                 head c = head (c')\\<^sub>p;\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                                  0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        head (CN c n p) = head (c')\\<^sub>p;\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                         0\\<^sub>p\n 2. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 3. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 9. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         head (CN v va vb) = head (Add vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                          0\\<^sub>p\nA total of 26 subgoals...", "case (3 c n p c')"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n   head c = head (c')\\<^sub>p;\n   Polynomial_Expression.degree c =\n   Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     (c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                    < Polynomial_Expression.degree c \\<or>\n                    c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p\n  isnpolyh (CN c n p) n0\n  isnpolyh (c')\\<^sub>p n1\n  head (CN c n p) = head (c')\\<^sub>p\n  Polynomial_Expression.degree (CN c n p) =\n  Polynomial_Expression.degree (c')\\<^sub>p\n\ngoal (26 subgoals):\n 1. \\<And>c n p c'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                 head c = head (c')\\<^sub>p;\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                                  0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        head (CN c n p) = head (c')\\<^sub>p;\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                         0\\<^sub>p\n 2. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 3. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 9. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         head (CN v va vb) = head (Add vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                          0\\<^sub>p\nA total of 26 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n   head c = head (c')\\<^sub>p;\n   Polynomial_Expression.degree c =\n   Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     (c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                    < Polynomial_Expression.degree c \\<or>\n                    c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p\n  isnpolyh (CN c n p) n0\n  isnpolyh (c')\\<^sub>p n1\n  head (CN c n p) = head (c')\\<^sub>p\n  Polynomial_Expression.degree (CN c n p) =\n  Polynomial_Expression.degree (c')\\<^sub>p", "have \"degree (C c') = degree (CN c n p)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n   head c = head (c')\\<^sub>p;\n   Polynomial_Expression.degree c =\n   Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     (c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                    < Polynomial_Expression.degree c \\<or>\n                    c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p\n  isnpolyh (CN c n p) n0\n  isnpolyh (c')\\<^sub>p n1\n  head (CN c n p) = head (c')\\<^sub>p\n  Polynomial_Expression.degree (CN c n p) =\n  Polynomial_Expression.degree (c')\\<^sub>p\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (c')\\<^sub>p =\n    Polynomial_Expression.degree (CN c n p)", "by simp"], ["proof (state)\nthis:\n  Polynomial_Expression.degree (c')\\<^sub>p =\n  Polynomial_Expression.degree (CN c n p)\n\ngoal (26 subgoals):\n 1. \\<And>c n p c'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                 head c = head (c')\\<^sub>p;\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                                  0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        head (CN c n p) = head (c')\\<^sub>p;\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                         0\\<^sub>p\n 2. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 3. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 9. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         head (CN v va vb) = head (Add vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                          0\\<^sub>p\nA total of 26 subgoals...", "then"], ["proof (chain)\npicking this:\n  Polynomial_Expression.degree (c')\\<^sub>p =\n  Polynomial_Expression.degree (CN c n p)", "have nz: \"n > 0\""], ["proof (prove)\nusing this:\n  Polynomial_Expression.degree (c')\\<^sub>p =\n  Polynomial_Expression.degree (CN c n p)\n\ngoal (1 subgoal):\n 1. 0 < n", "by (cases n) auto"], ["proof (state)\nthis:\n  0 < n\n\ngoal (26 subgoals):\n 1. \\<And>c n p c'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                 head c = head (c')\\<^sub>p;\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                                  0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        head (CN c n p) = head (c')\\<^sub>p;\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                         0\\<^sub>p\n 2. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 3. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 9. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         head (CN v va vb) = head (Add vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                          0\\<^sub>p\nA total of 26 subgoals...", "then"], ["proof (chain)\npicking this:\n  0 < n", "have \"head (CN c n p) = CN c n p\""], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. head (CN c n p) = CN c n p", "by (cases n) auto"], ["proof (state)\nthis:\n  head (CN c n p) = CN c n p\n\ngoal (26 subgoals):\n 1. \\<And>c n p c'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                 head c = head (c')\\<^sub>p;\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                                  0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        head (CN c n p) = head (c')\\<^sub>p;\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p =\n                         0\\<^sub>p\n 2. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 3. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 9. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         head (CN v va vb) = head (Add vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                          0\\<^sub>p\nA total of 26 subgoals...", "with 3"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n   head c = head (c')\\<^sub>p;\n   Polynomial_Expression.degree c =\n   Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     (c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                    < Polynomial_Expression.degree c \\<or>\n                    c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p\n  isnpolyh (CN c n p) n0\n  isnpolyh (c')\\<^sub>p n1\n  head (CN c n p) = head (c')\\<^sub>p\n  Polynomial_Expression.degree (CN c n p) =\n  Polynomial_Expression.degree (c')\\<^sub>p\n  head (CN c n p) = CN c n p", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n   head c = head (c')\\<^sub>p;\n   Polynomial_Expression.degree c =\n   Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     (c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n                    < Polynomial_Expression.degree c \\<or>\n                    c +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p\n  isnpolyh (CN c n p) n0\n  isnpolyh (c')\\<^sub>p n1\n  head (CN c n p) = head (c')\\<^sub>p\n  Polynomial_Expression.degree (CN c n p) =\n  Polynomial_Expression.degree (c')\\<^sub>p\n  head (CN c n p) = CN c n p\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n    < Polynomial_Expression.degree (CN c n p) \\<or>\n    CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p", "by simp"], ["proof (state)\nthis:\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p)\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (c')\\<^sub>p = 0\\<^sub>p\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "next"], ["proof (state)\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "case (4 c n p c' n' p')"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n   head c = head (CN c' n' p');\n   Polynomial_Expression.degree c =\n   Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                    < Polynomial_Expression.degree c \\<or>\n                    c +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n  \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n   head (CN c n p) = head c';\n   Polynomial_Expression.degree (CN c n p) =\n   Polynomial_Expression.degree c'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                    < Polynomial_Expression.degree (CN c n p) \\<or>\n                    CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p\n  \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n   Polynomial_Expression.degree c = Polynomial_Expression.degree c'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree (c +\\<^sub>p ~\\<^sub>p c')\n                    < Polynomial_Expression.degree c \\<or>\n                    c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p\n  \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n   Polynomial_Expression.degree p = Polynomial_Expression.degree p'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree (p +\\<^sub>p ~\\<^sub>p p')\n                    < Polynomial_Expression.degree p \\<or>\n                    p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  head (CN c n p) = head (CN c' n' p')\n  Polynomial_Expression.degree (CN c n p) =\n  Polynomial_Expression.degree (CN c' n' p')\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n   head c = head (CN c' n' p');\n   Polynomial_Expression.degree c =\n   Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                    < Polynomial_Expression.degree c \\<or>\n                    c +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n  \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n   head (CN c n p) = head c';\n   Polynomial_Expression.degree (CN c n p) =\n   Polynomial_Expression.degree c'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                    < Polynomial_Expression.degree (CN c n p) \\<or>\n                    CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p\n  \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n   Polynomial_Expression.degree c = Polynomial_Expression.degree c'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree (c +\\<^sub>p ~\\<^sub>p c')\n                    < Polynomial_Expression.degree c \\<or>\n                    c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p\n  \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n   Polynomial_Expression.degree p = Polynomial_Expression.degree p'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree (p +\\<^sub>p ~\\<^sub>p p')\n                    < Polynomial_Expression.degree p \\<or>\n                    p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  head (CN c n p) = head (CN c' n' p')\n  Polynomial_Expression.degree (CN c n p) =\n  Polynomial_Expression.degree (CN c' n' p')", "have H:\n    \"isnpolyh (CN c n p) n0\"\n    \"isnpolyh (CN c' n' p') n1\"\n    \"head (CN c n p) = head (CN c' n' p')\"\n    \"degree (CN c n p) = degree (CN c' n' p')\""], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n   head c = head (CN c' n' p');\n   Polynomial_Expression.degree c =\n   Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                    < Polynomial_Expression.degree c \\<or>\n                    c +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n  \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n   head (CN c n p) = head c';\n   Polynomial_Expression.degree (CN c n p) =\n   Polynomial_Expression.degree c'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                    < Polynomial_Expression.degree (CN c n p) \\<or>\n                    CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p\n  \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n   Polynomial_Expression.degree c = Polynomial_Expression.degree c'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree (c +\\<^sub>p ~\\<^sub>p c')\n                    < Polynomial_Expression.degree c \\<or>\n                    c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p\n  \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n   Polynomial_Expression.degree p = Polynomial_Expression.degree p'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree (p +\\<^sub>p ~\\<^sub>p p')\n                    < Polynomial_Expression.degree p \\<or>\n                    p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  head (CN c n p) = head (CN c' n' p')\n  Polynomial_Expression.degree (CN c n p) =\n  Polynomial_Expression.degree (CN c' n' p')\n\ngoal (1 subgoal):\n 1. (isnpolyh (CN c n p) n0 &&& isnpolyh (CN c' n' p') n1) &&&\n    head (CN c n p) = head (CN c' n' p') &&&\n    Polynomial_Expression.degree (CN c n p) =\n    Polynomial_Expression.degree (CN c' n' p')", "by simp_all"], ["proof (state)\nthis:\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  head (CN c n p) = head (CN c' n' p')\n  Polynomial_Expression.degree (CN c n p) =\n  Polynomial_Expression.degree (CN c' n' p')\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "then"], ["proof (chain)\npicking this:\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  head (CN c n p) = head (CN c' n' p')\n  Polynomial_Expression.degree (CN c n p) =\n  Polynomial_Expression.degree (CN c' n' p')", "have degc: \"degree c = 0\" and degc': \"degree c' = 0\""], ["proof (prove)\nusing this:\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  head (CN c n p) = head (CN c' n' p')\n  Polynomial_Expression.degree (CN c n p) =\n  Polynomial_Expression.degree (CN c' n' p')\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree c = 0 &&&\n    Polynomial_Expression.degree c' = 0", "by simp_all"], ["proof (state)\nthis:\n  Polynomial_Expression.degree c = 0\n  Polynomial_Expression.degree c' = 0\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "have degnc: \"degree (~\\<^sub>p c) = 0\" and degnc': \"degree (~\\<^sub>p c') = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (~\\<^sub>p c) = 0 &&&\n    Polynomial_Expression.degree (~\\<^sub>p c') = 0", "using H(1-2) degc"], ["proof (prove)\nusing this:\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  Polynomial_Expression.degree c = 0\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (~\\<^sub>p c) = 0 &&&\n    Polynomial_Expression.degree (~\\<^sub>p c') = 0", "by (auto simp: degree_polyneg)"], ["proof (state)\nthis:\n  Polynomial_Expression.degree (~\\<^sub>p c) = 0\n  Polynomial_Expression.degree (~\\<^sub>p c') = 0\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "from H"], ["proof (chain)\npicking this:\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  head (CN c n p) = head (CN c' n' p')\n  Polynomial_Expression.degree (CN c n p) =\n  Polynomial_Expression.degree (CN c' n' p')", "have cnh: \"isnpolyh c (Suc n)\" and c'nh: \"isnpolyh c' (Suc n')\""], ["proof (prove)\nusing this:\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  head (CN c n p) = head (CN c' n' p')\n  Polynomial_Expression.degree (CN c n p) =\n  Polynomial_Expression.degree (CN c' n' p')\n\ngoal (1 subgoal):\n 1. isnpolyh c (Suc n) &&& isnpolyh c' (Suc n')", "by simp_all"], ["proof (state)\nthis:\n  isnpolyh c (Suc n)\n  isnpolyh c' (Suc n')\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "from degree_polysub[OF cnh c'nh, simplified polysub_def] degc degc'"], ["proof (chain)\npicking this:\n  Polynomial_Expression.degree (c +\\<^sub>p ~\\<^sub>p c')\n  \\<le> max (Polynomial_Expression.degree c)\n         (Polynomial_Expression.degree c')\n  Polynomial_Expression.degree c = 0\n  Polynomial_Expression.degree c' = 0", "have degcmc': \"degree (c +\\<^sub>p  ~\\<^sub>pc') = 0\""], ["proof (prove)\nusing this:\n  Polynomial_Expression.degree (c +\\<^sub>p ~\\<^sub>p c')\n  \\<le> max (Polynomial_Expression.degree c)\n         (Polynomial_Expression.degree c')\n  Polynomial_Expression.degree c = 0\n  Polynomial_Expression.degree c' = 0\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (c +\\<^sub>p ~\\<^sub>p c') = 0", "by simp"], ["proof (state)\nthis:\n  Polynomial_Expression.degree (c +\\<^sub>p ~\\<^sub>p c') = 0\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "from H"], ["proof (chain)\npicking this:\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  head (CN c n p) = head (CN c' n' p')\n  Polynomial_Expression.degree (CN c n p) =\n  Polynomial_Expression.degree (CN c' n' p')", "have pnh: \"isnpolyh p n\" and p'nh: \"isnpolyh p' n'\""], ["proof (prove)\nusing this:\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  head (CN c n p) = head (CN c' n' p')\n  Polynomial_Expression.degree (CN c n p) =\n  Polynomial_Expression.degree (CN c' n' p')\n\ngoal (1 subgoal):\n 1. isnpolyh p n &&& isnpolyh p' n'", "by auto"], ["proof (state)\nthis:\n  isnpolyh p n\n  isnpolyh p' n'\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "have \"n = n' \\<or> n < n' \\<or> n > n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = n' \\<or> n < n' \\<or> n' < n", "by arith"], ["proof (state)\nthis:\n  n = n' \\<or> n < n' \\<or> n' < n\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "moreover"], ["proof (state)\nthis:\n  n = n' \\<or> n < n' \\<or> n' < n\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "{"], ["proof (state)\nthis:\n  n = n' \\<or> n < n' \\<or> n' < n\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "assume nn': \"n = n'\""], ["proof (state)\nthis:\n  n = n'\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "have \"n = 0 \\<or> n > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = 0 \\<or> 0 < n", "by arith"], ["proof (state)\nthis:\n  n = 0 \\<or> 0 < n\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "moreover"], ["proof (state)\nthis:\n  n = 0 \\<or> 0 < n\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "{"], ["proof (state)\nthis:\n  n = 0 \\<or> 0 < n\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "assume nz: \"n = 0\""], ["proof (state)\nthis:\n  n = 0\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "then"], ["proof (chain)\npicking this:\n  n = 0", "have ?case"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree\n     (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n    < Polynomial_Expression.degree (CN c n p) \\<or>\n    CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p", "using 4 nn'"], ["proof (prove)\nusing this:\n  n = 0\n  \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n   head c = head (CN c' n' p');\n   Polynomial_Expression.degree c =\n   Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                    < Polynomial_Expression.degree c \\<or>\n                    c +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n  \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n   head (CN c n p) = head c';\n   Polynomial_Expression.degree (CN c n p) =\n   Polynomial_Expression.degree c'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                    < Polynomial_Expression.degree (CN c n p) \\<or>\n                    CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p\n  \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n   Polynomial_Expression.degree c = Polynomial_Expression.degree c'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree (c +\\<^sub>p ~\\<^sub>p c')\n                    < Polynomial_Expression.degree c \\<or>\n                    c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p\n  \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n   Polynomial_Expression.degree p = Polynomial_Expression.degree p'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree (p +\\<^sub>p ~\\<^sub>p p')\n                    < Polynomial_Expression.degree p \\<or>\n                    p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  head (CN c n p) = head (CN c' n' p')\n  Polynomial_Expression.degree (CN c n p) =\n  Polynomial_Expression.degree (CN c' n' p')\n  n = n'\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree\n     (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n    < Polynomial_Expression.degree (CN c n p) \\<or>\n    CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p", "by (auto simp add: Let_def degcmc')"], ["proof (state)\nthis:\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "}"], ["proof (state)\nthis:\n  n = 0 \\<Longrightarrow>\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "moreover"], ["proof (state)\nthis:\n  n = 0 \\<Longrightarrow>\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "{"], ["proof (state)\nthis:\n  n = 0 \\<Longrightarrow>\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "assume nz: \"n > 0\""], ["proof (state)\nthis:\n  0 < n\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "with nn' H(3)"], ["proof (chain)\npicking this:\n  n = n'\n  head (CN c n p) = head (CN c' n' p')\n  0 < n", "have  cc': \"c = c'\" and pp': \"p = p'\""], ["proof (prove)\nusing this:\n  n = n'\n  head (CN c n p) = head (CN c' n' p')\n  0 < n\n\ngoal (1 subgoal):\n 1. c = c' &&& p = p'", "by (cases n, auto)+"], ["proof (state)\nthis:\n  c = c'\n  p = p'\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "then"], ["proof (chain)\npicking this:\n  c = c'\n  p = p'", "have ?case"], ["proof (prove)\nusing this:\n  c = c'\n  p = p'\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree\n     (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n    < Polynomial_Expression.degree (CN c n p) \\<or>\n    CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p", "using polysub_same_0[OF p'nh, simplified polysub_def split_def fst_conv snd_conv]"], ["proof (prove)\nusing this:\n  c = c'\n  p = p'\n  p' +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree\n     (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n    < Polynomial_Expression.degree (CN c n p) \\<or>\n    CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p", "using polysub_same_0[OF c'nh, simplified polysub_def]"], ["proof (prove)\nusing this:\n  c = c'\n  p = p'\n  p' +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p\n  c' +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree\n     (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n    < Polynomial_Expression.degree (CN c n p) \\<or>\n    CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p", "using nn' 4"], ["proof (prove)\nusing this:\n  c = c'\n  p = p'\n  p' +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p\n  c' +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p\n  n = n'\n  \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n   head c = head (CN c' n' p');\n   Polynomial_Expression.degree c =\n   Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                    < Polynomial_Expression.degree c \\<or>\n                    c +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n  \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n   head (CN c n p) = head c';\n   Polynomial_Expression.degree (CN c n p) =\n   Polynomial_Expression.degree c'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                    < Polynomial_Expression.degree (CN c n p) \\<or>\n                    CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p\n  \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n   Polynomial_Expression.degree c = Polynomial_Expression.degree c'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree (c +\\<^sub>p ~\\<^sub>p c')\n                    < Polynomial_Expression.degree c \\<or>\n                    c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p\n  \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n   Polynomial_Expression.degree p = Polynomial_Expression.degree p'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree (p +\\<^sub>p ~\\<^sub>p p')\n                    < Polynomial_Expression.degree p \\<or>\n                    p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  head (CN c n p) = head (CN c' n' p')\n  Polynomial_Expression.degree (CN c n p) =\n  Polynomial_Expression.degree (CN c' n' p')\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree\n     (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n    < Polynomial_Expression.degree (CN c n p) \\<or>\n    CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p", "by (simp add: Let_def)"], ["proof (state)\nthis:\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "}"], ["proof (state)\nthis:\n  0 < n \\<Longrightarrow>\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  n = 0 \\<or> 0 < n\n  n = 0 \\<Longrightarrow>\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n  0 < n \\<Longrightarrow>\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p", "have ?case"], ["proof (prove)\nusing this:\n  n = 0 \\<or> 0 < n\n  n = 0 \\<Longrightarrow>\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n  0 < n \\<Longrightarrow>\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree\n     (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n    < Polynomial_Expression.degree (CN c n p) \\<or>\n    CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p", "by blast"], ["proof (state)\nthis:\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "}"], ["proof (state)\nthis:\n  n = n' \\<Longrightarrow>\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "moreover"], ["proof (state)\nthis:\n  n = n' \\<Longrightarrow>\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "{"], ["proof (state)\nthis:\n  n = n' \\<Longrightarrow>\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "assume nn': \"n < n'\""], ["proof (state)\nthis:\n  n < n'\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "then"], ["proof (chain)\npicking this:\n  n < n'", "have n'p: \"n' > 0\""], ["proof (prove)\nusing this:\n  n < n'\n\ngoal (1 subgoal):\n 1. 0 < n'", "by simp"], ["proof (state)\nthis:\n  0 < n'\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "then"], ["proof (chain)\npicking this:\n  0 < n'", "have headcnp':\"head (CN c' n' p') = CN c' n' p'\""], ["proof (prove)\nusing this:\n  0 < n'\n\ngoal (1 subgoal):\n 1. head (CN c' n' p') = CN c' n' p'", "by (cases n') simp_all"], ["proof (state)\nthis:\n  head (CN c' n' p') = CN c' n' p'\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "have degcnp': \"degree (CN c' n' p') = 0\"\n      and degcnpeq: \"degree (CN c n p) = degree (CN c' n' p')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (CN c' n' p') = 0 &&&\n    Polynomial_Expression.degree (CN c n p) =\n    Polynomial_Expression.degree (CN c' n' p')", "using 4 nn'"], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n   head c = head (CN c' n' p');\n   Polynomial_Expression.degree c =\n   Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                    < Polynomial_Expression.degree c \\<or>\n                    c +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n  \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n   head (CN c n p) = head c';\n   Polynomial_Expression.degree (CN c n p) =\n   Polynomial_Expression.degree c'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                    < Polynomial_Expression.degree (CN c n p) \\<or>\n                    CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p\n  \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n   Polynomial_Expression.degree c = Polynomial_Expression.degree c'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree (c +\\<^sub>p ~\\<^sub>p c')\n                    < Polynomial_Expression.degree c \\<or>\n                    c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p\n  \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n   Polynomial_Expression.degree p = Polynomial_Expression.degree p'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree (p +\\<^sub>p ~\\<^sub>p p')\n                    < Polynomial_Expression.degree p \\<or>\n                    p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  head (CN c n p) = head (CN c' n' p')\n  Polynomial_Expression.degree (CN c n p) =\n  Polynomial_Expression.degree (CN c' n' p')\n  n < n'\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (CN c' n' p') = 0 &&&\n    Polynomial_Expression.degree (CN c n p) =\n    Polynomial_Expression.degree (CN c' n' p')", "by (cases n', simp_all)"], ["proof (state)\nthis:\n  Polynomial_Expression.degree (CN c' n' p') = 0\n  Polynomial_Expression.degree (CN c n p) =\n  Polynomial_Expression.degree (CN c' n' p')\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "then"], ["proof (chain)\npicking this:\n  Polynomial_Expression.degree (CN c' n' p') = 0\n  Polynomial_Expression.degree (CN c n p) =\n  Polynomial_Expression.degree (CN c' n' p')", "have \"n > 0\""], ["proof (prove)\nusing this:\n  Polynomial_Expression.degree (CN c' n' p') = 0\n  Polynomial_Expression.degree (CN c n p) =\n  Polynomial_Expression.degree (CN c' n' p')\n\ngoal (1 subgoal):\n 1. 0 < n", "by (cases n) simp_all"], ["proof (state)\nthis:\n  0 < n\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "then"], ["proof (chain)\npicking this:\n  0 < n", "have headcnp: \"head (CN c n p) = CN c n p\""], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. head (CN c n p) = CN c n p", "by (cases n) auto"], ["proof (state)\nthis:\n  head (CN c n p) = CN c n p\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "from H(3) headcnp headcnp' nn'"], ["proof (chain)\npicking this:\n  head (CN c n p) = head (CN c' n' p')\n  head (CN c n p) = CN c n p\n  head (CN c' n' p') = CN c' n' p'\n  n < n'", "have ?case"], ["proof (prove)\nusing this:\n  head (CN c n p) = head (CN c' n' p')\n  head (CN c n p) = CN c n p\n  head (CN c' n' p') = CN c' n' p'\n  n < n'\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree\n     (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n    < Polynomial_Expression.degree (CN c n p) \\<or>\n    CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p", "by auto"], ["proof (state)\nthis:\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "}"], ["proof (state)\nthis:\n  n < n' \\<Longrightarrow>\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "moreover"], ["proof (state)\nthis:\n  n < n' \\<Longrightarrow>\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "{"], ["proof (state)\nthis:\n  n < n' \\<Longrightarrow>\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "assume nn': \"n > n'\""], ["proof (state)\nthis:\n  n' < n\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "then"], ["proof (chain)\npicking this:\n  n' < n", "have np: \"n > 0\""], ["proof (prove)\nusing this:\n  n' < n\n\ngoal (1 subgoal):\n 1. 0 < n", "by simp"], ["proof (state)\nthis:\n  0 < n\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "then"], ["proof (chain)\npicking this:\n  0 < n", "have headcnp:\"head (CN c n p) = CN c n p\""], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. head (CN c n p) = CN c n p", "by (cases n) simp_all"], ["proof (state)\nthis:\n  head (CN c n p) = CN c n p\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "from 4"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n   head c = head (CN c' n' p');\n   Polynomial_Expression.degree c =\n   Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                    < Polynomial_Expression.degree c \\<or>\n                    c +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n  \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n   head (CN c n p) = head c';\n   Polynomial_Expression.degree (CN c n p) =\n   Polynomial_Expression.degree c'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                    < Polynomial_Expression.degree (CN c n p) \\<or>\n                    CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p\n  \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n   Polynomial_Expression.degree c = Polynomial_Expression.degree c'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree (c +\\<^sub>p ~\\<^sub>p c')\n                    < Polynomial_Expression.degree c \\<or>\n                    c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p\n  \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n   Polynomial_Expression.degree p = Polynomial_Expression.degree p'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree (p +\\<^sub>p ~\\<^sub>p p')\n                    < Polynomial_Expression.degree p \\<or>\n                    p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  head (CN c n p) = head (CN c' n' p')\n  Polynomial_Expression.degree (CN c n p) =\n  Polynomial_Expression.degree (CN c' n' p')", "have degcnpeq: \"degree (CN c' n' p') = degree (CN c n p)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n   head c = head (CN c' n' p');\n   Polynomial_Expression.degree c =\n   Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                    < Polynomial_Expression.degree c \\<or>\n                    c +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n  \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n   head (CN c n p) = head c';\n   Polynomial_Expression.degree (CN c n p) =\n   Polynomial_Expression.degree c'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree\n                     (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                    < Polynomial_Expression.degree (CN c n p) \\<or>\n                    CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p\n  \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n   Polynomial_Expression.degree c = Polynomial_Expression.degree c'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree (c +\\<^sub>p ~\\<^sub>p c')\n                    < Polynomial_Expression.degree c \\<or>\n                    c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p\n  \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n   Polynomial_Expression.degree p = Polynomial_Expression.degree p'\\<rbrakk>\n  \\<Longrightarrow> Polynomial_Expression.degree (p +\\<^sub>p ~\\<^sub>p p')\n                    < Polynomial_Expression.degree p \\<or>\n                    p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  head (CN c n p) = head (CN c' n' p')\n  Polynomial_Expression.degree (CN c n p) =\n  Polynomial_Expression.degree (CN c' n' p')\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (CN c' n' p') =\n    Polynomial_Expression.degree (CN c n p)", "by simp"], ["proof (state)\nthis:\n  Polynomial_Expression.degree (CN c' n' p') =\n  Polynomial_Expression.degree (CN c n p)\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "from np"], ["proof (chain)\npicking this:\n  0 < n", "have degcnp: \"degree (CN c n p) = 0\""], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (CN c n p) = 0", "by (cases n) simp_all"], ["proof (state)\nthis:\n  Polynomial_Expression.degree (CN c n p) = 0\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "with degcnpeq"], ["proof (chain)\npicking this:\n  Polynomial_Expression.degree (CN c' n' p') =\n  Polynomial_Expression.degree (CN c n p)\n  Polynomial_Expression.degree (CN c n p) = 0", "have \"n' > 0\""], ["proof (prove)\nusing this:\n  Polynomial_Expression.degree (CN c' n' p') =\n  Polynomial_Expression.degree (CN c n p)\n  Polynomial_Expression.degree (CN c n p) = 0\n\ngoal (1 subgoal):\n 1. 0 < n'", "by (cases n') simp_all"], ["proof (state)\nthis:\n  0 < n'\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "then"], ["proof (chain)\npicking this:\n  0 < n'", "have headcnp': \"head (CN c' n' p') = CN c' n' p'\""], ["proof (prove)\nusing this:\n  0 < n'\n\ngoal (1 subgoal):\n 1. head (CN c' n' p') = CN c' n' p'", "by (cases n') auto"], ["proof (state)\nthis:\n  head (CN c' n' p') = CN c' n' p'\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "from H(3) headcnp headcnp' nn'"], ["proof (chain)\npicking this:\n  head (CN c n p) = head (CN c' n' p')\n  head (CN c n p) = CN c n p\n  head (CN c' n' p') = CN c' n' p'\n  n' < n", "have ?case"], ["proof (prove)\nusing this:\n  head (CN c n p) = head (CN c' n' p')\n  head (CN c n p) = CN c n p\n  head (CN c' n' p') = CN c' n' p'\n  n' < n\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree\n     (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n    < Polynomial_Expression.degree (CN c n p) \\<or>\n    CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p", "by auto"], ["proof (state)\nthis:\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "}"], ["proof (state)\nthis:\n  n' < n \\<Longrightarrow>\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n\ngoal (25 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                 head c = head (CN c' n' p');\n                 Polynomial_Expression.degree c =\n                 Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                \\<Longrightarrow> Polynomial_Expression.degree\n                                   (c +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                                  < Polynomial_Expression.degree c \\<or>\n                                  c +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                                  0\\<^sub>p;\n        \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n         head (CN c n p) = head c';\n         Polynomial_Expression.degree (CN c n p) =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN c n p +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree (CN c n p) \\<or>\n                          CN c n p +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<lbrakk>isnpolyh c n0; isnpolyh c' n1; head c = head c';\n         Polynomial_Expression.degree c =\n         Polynomial_Expression.degree c'\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (c +\\<^sub>p ~\\<^sub>p c')\n                          < Polynomial_Expression.degree c \\<or>\n                          c +\\<^sub>p ~\\<^sub>p c' = 0\\<^sub>p;\n        \\<And>x.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1; head p = head p';\n            Polynomial_Expression.degree p =\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> Polynomial_Expression.degree\n                              (p +\\<^sub>p ~\\<^sub>p p')\n                             < Polynomial_Expression.degree p \\<or>\n                             p +\\<^sub>p ~\\<^sub>p p' = 0\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        head (CN c n p) = head (CN c' n' p');\n        Polynomial_Expression.degree (CN c n p) =\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n                         < Polynomial_Expression.degree (CN c n p) \\<or>\n                         CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') =\n                         0\\<^sub>p\n 2. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 8. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         head (CN v va vb) = head (Sub vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                          0\\<^sub>p\nA total of 25 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  n = n' \\<or> n < n' \\<or> n' < n\n  n = n' \\<Longrightarrow>\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n  n < n' \\<Longrightarrow>\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n  n' < n \\<Longrightarrow>\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p", "show ?case"], ["proof (prove)\nusing this:\n  n = n' \\<or> n < n' \\<or> n' < n\n  n = n' \\<Longrightarrow>\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n  n < n' \\<Longrightarrow>\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n  n' < n \\<Longrightarrow>\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree\n     (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n    < Polynomial_Expression.degree (CN c n p) \\<or>\n    CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p", "by blast"], ["proof (state)\nthis:\n  Polynomial_Expression.degree (CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p'))\n  < Polynomial_Expression.degree (CN c n p) \\<or>\n  CN c n p +\\<^sub>p ~\\<^sub>p (CN c' n' p') = 0\\<^sub>p\n\ngoal (24 subgoals):\n 1. \\<And>v b.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        head (Bound v) = head b;\n        Polynomial_Expression.degree (Bound v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Bound v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Bound v) \\<or>\n                         Bound v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 2. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        head (Add v va) = head b;\n        Polynomial_Expression.degree (Add v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Add v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Add v va) \\<or>\n                         Add v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 3. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        head (Sub v va) = head b;\n        Polynomial_Expression.degree (Sub v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Sub v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Sub v va) \\<or>\n                         Sub v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 4. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        head (Mul v va) = head b;\n        Polynomial_Expression.degree (Mul v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Mul v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Mul v va) \\<or>\n                         Mul v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 5. \\<And>v b.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1; head (Neg v) = head b;\n        Polynomial_Expression.degree (Neg v) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Neg v +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Neg v) \\<or>\n                         Neg v +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 6. \\<And>v va b.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        head (Pw v va) = head b;\n        Polynomial_Expression.degree (Pw v va) =\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (Pw v va +\\<^sub>p ~\\<^sub>p b)\n                         < Polynomial_Expression.degree (Pw v va) \\<or>\n                         Pw v va +\\<^sub>p ~\\<^sub>p b = 0\\<^sub>p\n 7. \\<And>v va vb vc.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        head (CN v va vb) = head (Bound vc);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Bound vc)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Bound vc) =\n                         0\\<^sub>p\n 8. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        head (CN v va vb) = head (Add vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Add vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Add vc vd) =\n                         0\\<^sub>p\n 9. \\<And>v va vb vc vd.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n        head (CN v va vb) = head (Sub vc vd);\n        Polynomial_Expression.degree (CN v va vb) =\n        Polynomial_Expression.degree (Sub vc vd)\\<rbrakk>\n       \\<Longrightarrow> Polynomial_Expression.degree\n                          (CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd))\n                         < Polynomial_Expression.degree (CN v va vb) \\<or>\n                         CN v va vb +\\<^sub>p ~\\<^sub>p (Sub vc vd) =\n                         0\\<^sub>p\n 10. \\<And>v va vb vc vd.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Mul vc vd) n1;\n         head (CN v va vb) = head (Mul vc vd);\n         Polynomial_Expression.degree (CN v va vb) =\n         Polynomial_Expression.degree (Mul vc vd)\\<rbrakk>\n        \\<Longrightarrow> Polynomial_Expression.degree\n                           (CN v va vb +\\<^sub>p ~\\<^sub>p (Mul vc vd))\n                          < Polynomial_Expression.degree (CN v va vb) \\<or>\n                          CN v va vb +\\<^sub>p ~\\<^sub>p (Mul vc vd) =\n                          0\\<^sub>p\nA total of 24 subgoals...", "qed auto"], ["", "lemma shift1_head : \"isnpolyh p n0 \\<Longrightarrow> head (shift1 p) = head p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p n0 \\<Longrightarrow> head (shift1 p) = head p", "by (induct p arbitrary: n0 rule: head.induct) (simp_all add: shift1_def)"], ["", "lemma funpow_shift1_head: \"isnpolyh p n0 \\<Longrightarrow> p\\<noteq> 0\\<^sub>p \\<Longrightarrow> head (funpow k shift1 p) = head p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpolyh p n0; p \\<noteq> 0\\<^sub>p\\<rbrakk>\n    \\<Longrightarrow> head ((shift1 ^^ k) p) = head p", "proof (induct k arbitrary: n0 p)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n0 p.\n       \\<lbrakk>isnpolyh p n0; p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((shift1 ^^ 0) p) = head p\n 2. \\<And>k n0 p.\n       \\<lbrakk>\\<And>n0 p.\n                   \\<lbrakk>isnpolyh p n0; p \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head ((shift1 ^^ k) p) = head p;\n        isnpolyh p n0; p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((shift1 ^^ Suc k) p) = head p", "case 0"], ["proof (state)\nthis:\n  isnpolyh p n0\n  p \\<noteq> 0\\<^sub>p\n\ngoal (2 subgoals):\n 1. \\<And>n0 p.\n       \\<lbrakk>isnpolyh p n0; p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((shift1 ^^ 0) p) = head p\n 2. \\<And>k n0 p.\n       \\<lbrakk>\\<And>n0 p.\n                   \\<lbrakk>isnpolyh p n0; p \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head ((shift1 ^^ k) p) = head p;\n        isnpolyh p n0; p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((shift1 ^^ Suc k) p) = head p", "then"], ["proof (chain)\npicking this:\n  isnpolyh p n0\n  p \\<noteq> 0\\<^sub>p", "show ?case"], ["proof (prove)\nusing this:\n  isnpolyh p n0\n  p \\<noteq> 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. head ((shift1 ^^ 0) p) = head p", "by auto"], ["proof (state)\nthis:\n  head ((shift1 ^^ 0) p) = head p\n\ngoal (1 subgoal):\n 1. \\<And>k n0 p.\n       \\<lbrakk>\\<And>n0 p.\n                   \\<lbrakk>isnpolyh p n0; p \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head ((shift1 ^^ k) p) = head p;\n        isnpolyh p n0; p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((shift1 ^^ Suc k) p) = head p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k n0 p.\n       \\<lbrakk>\\<And>n0 p.\n                   \\<lbrakk>isnpolyh p n0; p \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head ((shift1 ^^ k) p) = head p;\n        isnpolyh p n0; p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((shift1 ^^ Suc k) p) = head p", "case (Suc k n0 p)"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh ?p ?n0.0; ?p \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head ((shift1 ^^ k) ?p) = head ?p\n  isnpolyh p n0\n  p \\<noteq> 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. \\<And>k n0 p.\n       \\<lbrakk>\\<And>n0 p.\n                   \\<lbrakk>isnpolyh p n0; p \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head ((shift1 ^^ k) p) = head p;\n        isnpolyh p n0; p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((shift1 ^^ Suc k) p) = head p", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh ?p ?n0.0; ?p \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head ((shift1 ^^ k) ?p) = head ?p\n  isnpolyh p n0\n  p \\<noteq> 0\\<^sub>p", "have \"isnpolyh (shift1 p) 0\""], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh ?p ?n0.0; ?p \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head ((shift1 ^^ k) ?p) = head ?p\n  isnpolyh p n0\n  p \\<noteq> 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. isnpolyh (shift1 p) 0", "by (simp add: shift1_isnpolyh)"], ["proof (state)\nthis:\n  isnpolyh (shift1 p) 0\n\ngoal (1 subgoal):\n 1. \\<And>k n0 p.\n       \\<lbrakk>\\<And>n0 p.\n                   \\<lbrakk>isnpolyh p n0; p \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head ((shift1 ^^ k) p) = head p;\n        isnpolyh p n0; p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((shift1 ^^ Suc k) p) = head p", "with Suc"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh ?p ?n0.0; ?p \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head ((shift1 ^^ k) ?p) = head ?p\n  isnpolyh p n0\n  p \\<noteq> 0\\<^sub>p\n  isnpolyh (shift1 p) 0", "have \"head (funpow k shift1 (shift1 p)) = head (shift1 p)\"\n    and \"head (shift1 p) = head p\""], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh ?p ?n0.0; ?p \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head ((shift1 ^^ k) ?p) = head ?p\n  isnpolyh p n0\n  p \\<noteq> 0\\<^sub>p\n  isnpolyh (shift1 p) 0\n\ngoal (1 subgoal):\n 1. head ((shift1 ^^ k) (shift1 p)) = head (shift1 p) &&&\n    head (shift1 p) = head p", "by (simp_all add: shift1_head)"], ["proof (state)\nthis:\n  head ((shift1 ^^ k) (shift1 p)) = head (shift1 p)\n  head (shift1 p) = head p\n\ngoal (1 subgoal):\n 1. \\<And>k n0 p.\n       \\<lbrakk>\\<And>n0 p.\n                   \\<lbrakk>isnpolyh p n0; p \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head ((shift1 ^^ k) p) = head p;\n        isnpolyh p n0; p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((shift1 ^^ Suc k) p) = head p", "then"], ["proof (chain)\npicking this:\n  head ((shift1 ^^ k) (shift1 p)) = head (shift1 p)\n  head (shift1 p) = head p", "show ?case"], ["proof (prove)\nusing this:\n  head ((shift1 ^^ k) (shift1 p)) = head (shift1 p)\n  head (shift1 p) = head p\n\ngoal (1 subgoal):\n 1. head ((shift1 ^^ Suc k) p) = head p", "by (simp add: funpow_swap1)"], ["proof (state)\nthis:\n  head ((shift1 ^^ Suc k) p) = head p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma shift1_degree: \"degree (shift1 p) = 1 + degree p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (shift1 p) =\n    1 + Polynomial_Expression.degree p", "by (simp add: shift1_def)"], ["", "lemma funpow_shift1_degree: \"degree (funpow k shift1 p) = k + degree p \""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree ((shift1 ^^ k) p) =\n    k + Polynomial_Expression.degree p", "by (induct k arbitrary: p) (auto simp add: shift1_degree)"], ["", "lemma funpow_shift1_nz: \"p \\<noteq> 0\\<^sub>p \\<Longrightarrow> funpow n shift1 p \\<noteq> 0\\<^sub>p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<noteq> 0\\<^sub>p \\<Longrightarrow>\n    (shift1 ^^ n) p \\<noteq> 0\\<^sub>p", "by (induct n arbitrary: p) simp_all"], ["", "lemma head_isnpolyh_Suc[simp]: \"isnpolyh p (Suc n) \\<Longrightarrow> head p = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p (Suc n) \\<Longrightarrow> head p = p", "by (induct p arbitrary: n rule: degree.induct) auto"], ["", "lemma headn_0[simp]: \"isnpolyh p n \\<Longrightarrow> m < n \\<Longrightarrow> headn p m = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpolyh p n; m < n\\<rbrakk> \\<Longrightarrow> headn p m = p", "by (induct p arbitrary: n rule: degreen.induct) auto"], ["", "lemma head_isnpolyh_Suc': \"n > 0 \\<Longrightarrow> isnpolyh p n \\<Longrightarrow> head p = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < n; isnpolyh p n\\<rbrakk> \\<Longrightarrow> head p = p", "by (induct p arbitrary: n rule: degree.induct) auto"], ["", "lemma head_head[simp]: \"isnpolyh p n0 \\<Longrightarrow> head (head p) = head p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p n0 \\<Longrightarrow> head (head p) = head p", "by (induct p rule: head.induct) auto"], ["", "lemma polyadd_eq_const_degree:\n  \"isnpolyh p n0 \\<Longrightarrow> isnpolyh q n1 \\<Longrightarrow> polyadd p q = C c \\<Longrightarrow> degree p = degree q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpolyh p n0; isnpolyh q n1;\n     p +\\<^sub>p q = (c)\\<^sub>p\\<rbrakk>\n    \\<Longrightarrow> Polynomial_Expression.degree p =\n                      Polynomial_Expression.degree q", "using polyadd_eq_const_degreen"], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh ?p ?n0.0; isnpolyh ?q ?n1.0;\n   ?p +\\<^sub>p ?q = (?c)\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> degreen ?p ?m = degreen ?q ?m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpolyh p n0; isnpolyh q n1;\n     p +\\<^sub>p q = (c)\\<^sub>p\\<rbrakk>\n    \\<Longrightarrow> Polynomial_Expression.degree p =\n                      Polynomial_Expression.degree q", "by (simp add: degree_eq_degreen0)"], ["", "lemma polyadd_head:\n  assumes np: \"isnpolyh p n0\"\n    and nq: \"isnpolyh q n1\"\n    and deg: \"degree p \\<noteq> degree q\"\n  shows \"head (p +\\<^sub>p q) = (if degree p < degree q then head q else head p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. head (p +\\<^sub>p q) =\n    (if Polynomial_Expression.degree p < Polynomial_Expression.degree q\n     then head q else head p)", "using np nq deg"], ["proof (prove)\nusing this:\n  isnpolyh p n0\n  isnpolyh q n1\n  Polynomial_Expression.degree p \\<noteq> Polynomial_Expression.degree q\n\ngoal (1 subgoal):\n 1. head (p +\\<^sub>p q) =\n    (if Polynomial_Expression.degree p < Polynomial_Expression.degree q\n     then head q else head p)", "apply (induct p q arbitrary: n0 n1 rule: polyadd.induct)"], ["proof (prove)\ngoal (28 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        Polynomial_Expression.degree (c)\\<^sub>p \\<noteq>\n        Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p) =\n                         (if Polynomial_Expression.degree (c)\\<^sub>p\n                             < Polynomial_Expression.degree (c')\\<^sub>p\n                          then head (c')\\<^sub>p else head (c)\\<^sub>p)\n 2. \\<And>c c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    Polynomial_Expression.degree (c)\\<^sub>p \\<noteq>\n                    Polynomial_Expression.degree c'\\<rbrakk>\n                   \\<Longrightarrow> head ((c)\\<^sub>p +\\<^sub>p c') =\n                                     (if Polynomial_Expression.degree\n    (c)\\<^sub>p\n   < Polynomial_Expression.degree c'\nthen head c' else head (c)\\<^sub>p);\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        Polynomial_Expression.degree (c)\\<^sub>p \\<noteq>\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p +\\<^sub>p CN c' n' p') =\n                         (if Polynomial_Expression.degree (c)\\<^sub>p\n                             < Polynomial_Expression.degree (CN c' n' p')\n                          then head (CN c' n' p') else head (c)\\<^sub>p)\n 3. \\<And>c n p c' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    Polynomial_Expression.degree c \\<noteq>\n                    Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c +\\<^sub>p (c')\\<^sub>p) =\n                                     (if Polynomial_Expression.degree c\n   < Polynomial_Expression.degree (c')\\<^sub>p\nthen head (c')\\<^sub>p else head c);\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        Polynomial_Expression.degree (CN c n p) \\<noteq>\n        Polynomial_Expression.degree (c')\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p +\\<^sub>p (c')\\<^sub>p) =\n                         (if Polynomial_Expression.degree (CN c n p)\n                             < Polynomial_Expression.degree (c')\\<^sub>p\n                          then head (c')\\<^sub>p else head (CN c n p))\n 4. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    Polynomial_Expression.degree c \\<noteq>\n                    Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                   \\<Longrightarrow> head (c +\\<^sub>p CN c' n' p') =\n                                     (if Polynomial_Expression.degree c\n   < Polynomial_Expression.degree (CN c' n' p')\nthen head (CN c' n' p') else head c);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            Polynomial_Expression.degree (CN c n p) \\<noteq>\n            Polynomial_Expression.degree c'\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p +\\<^sub>p c') =\n                             (if Polynomial_Expression.degree (CN c n p)\n                                 < Polynomial_Expression.degree c'\n                              then head c' else head (CN c n p));\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh c n0; isnpolyh c' n1;\n            Polynomial_Expression.degree c \\<noteq>\n            Polynomial_Expression.degree c'\\<rbrakk>\n           \\<Longrightarrow> head (c +\\<^sub>p c') =\n                             (if Polynomial_Expression.degree c\n                                 < Polynomial_Expression.degree c'\n                              then head c' else head c);\n        \\<And>x n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1;\n            Polynomial_Expression.degree p \\<noteq>\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> head (p +\\<^sub>p p') =\n                             (if Polynomial_Expression.degree p\n                                 < Polynomial_Expression.degree p'\n                              then head p' else head p);\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        Polynomial_Expression.degree (CN c n p) \\<noteq>\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p +\\<^sub>p CN c' n' p') =\n                         (if Polynomial_Expression.degree (CN c n p)\n                             < Polynomial_Expression.degree (CN c' n' p')\n                          then head (CN c' n' p') else head (CN c n p))\n 5. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Polynomial_Expression.degree (Bound v) \\<noteq>\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> head (Bound v +\\<^sub>p b) =\n                         (if Polynomial_Expression.degree (Bound v)\n                             < Polynomial_Expression.degree b\n                          then head b else head (Bound v))\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Polynomial_Expression.degree (Add v va) \\<noteq>\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> head (Add v va +\\<^sub>p b) =\n                         (if Polynomial_Expression.degree (Add v va)\n                             < Polynomial_Expression.degree b\n                          then head b else head (Add v va))\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Polynomial_Expression.degree (Sub v va) \\<noteq>\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va +\\<^sub>p b) =\n                         (if Polynomial_Expression.degree (Sub v va)\n                             < Polynomial_Expression.degree b\n                          then head b else head (Sub v va))\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Polynomial_Expression.degree (Mul v va) \\<noteq>\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va +\\<^sub>p b) =\n                         (if Polynomial_Expression.degree (Mul v va)\n                             < Polynomial_Expression.degree b\n                          then head b else head (Mul v va))\n 9. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Polynomial_Expression.degree (Neg v) \\<noteq>\n        Polynomial_Expression.degree b\\<rbrakk>\n       \\<Longrightarrow> head (Neg v +\\<^sub>p b) =\n                         (if Polynomial_Expression.degree (Neg v)\n                             < Polynomial_Expression.degree b\n                          then head b else head (Neg v))\n 10. \\<And>v va b n0 n1.\n        \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n         Polynomial_Expression.degree (Pw v va) \\<noteq>\n         Polynomial_Expression.degree b\\<rbrakk>\n        \\<Longrightarrow> head (Pw v va +\\<^sub>p b) =\n                          (if Polynomial_Expression.degree (Pw v va)\n                              < Polynomial_Expression.degree b\n                           then head b else head (Pw v va))\nA total of 28 subgoals...", "apply simp_all"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>c c' n' p' n1.\n       \\<lbrakk>n1 \\<le> n' \\<and>\n                isnpolyh c' (Suc n') \\<and>\n                isnpolyh p' n' \\<and> p' \\<noteq> 0\\<^sub>p;\n        0 < Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> head (CN ((c)\\<^sub>p +\\<^sub>p c') n' p') =\n                         head (CN c' n' p')\n 2. \\<And>c n p c' n0.\n       \\<lbrakk>n0 \\<le> n \\<and>\n                isnpolyh c (Suc n) \\<and>\n                isnpolyh p n \\<and> p \\<noteq> 0\\<^sub>p;\n        0 < Polynomial_Expression.degree (CN c n p)\\<rbrakk>\n       \\<Longrightarrow> head (CN (c +\\<^sub>p (c')\\<^sub>p) n p) =\n                         head (CN c n p)\n 3. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; n1 \\<le> n';\n                    0 < Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                   \\<Longrightarrow> head (c +\\<^sub>p CN c' n' p') =\n                                     head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>n0 \\<le> n; isnpolyh c' n1;\n            0 < Polynomial_Expression.degree (CN c n p)\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p +\\<^sub>p c') = head (CN c n p);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1;\n            Polynomial_Expression.degree p \\<noteq>\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> head (p +\\<^sub>p p') =\n                             (if Polynomial_Expression.degree p\n                                 < Polynomial_Expression.degree p'\n                              then head p' else head p);\n        n0 \\<le> n \\<and>\n        isnpolyh c (Suc n) \\<and> isnpolyh p n \\<and> p \\<noteq> 0\\<^sub>p;\n        n1 \\<le> n' \\<and>\n        isnpolyh c' (Suc n') \\<and>\n        isnpolyh p' n' \\<and> p' \\<noteq> 0\\<^sub>p;\n        Polynomial_Expression.degree (CN c n p) \\<noteq>\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> (n' < n \\<longrightarrow>\n                          (Polynomial_Expression.degree (CN c n p)\n                           < Polynomial_Expression.degree\n                              (CN c' n' p') \\<longrightarrow>\n                           head (CN (CN c n p +\\<^sub>p c') n' p') =\n                           head (CN c' n' p')) \\<and>\n                          (\\<not> Polynomial_Expression.degree (CN c n p)\n                                  < Polynomial_Expression.degree\n                                     (CN c' n' p') \\<longrightarrow>\n                           head (CN (CN c n p +\\<^sub>p c') n' p') =\n                           head (CN c n p))) \\<and>\n                         (\\<not> n' < n \\<longrightarrow>\n                          (n < n' \\<longrightarrow>\n                           (Polynomial_Expression.degree (CN c n p)\n                            < Polynomial_Expression.degree\n                               (CN c' n' p') \\<longrightarrow>\n                            head (CN (c +\\<^sub>p CN c' n' p') n p) =\n                            head (CN c' n' p')) \\<and>\n                           (\\<not> Polynomial_Expression.degree (CN c n p)\n                                   < Polynomial_Expression.degree\n(CN c' n' p') \\<longrightarrow>\n                            head (CN (c +\\<^sub>p CN c' n' p') n p) =\n                            head (CN c n p))) \\<and>\n                          (n = n' \\<longrightarrow>\n                           (Polynomial_Expression.degree (CN c n' p)\n                            < Polynomial_Expression.degree\n                               (CN c' n' p') \\<longrightarrow>\n                            head\n                             (let cc' = c +\\<^sub>p c'; pp' = p +\\<^sub>p p'\n                              in if pp' = 0\\<^sub>p then cc'\n                                 else CN cc' n pp') =\n                            head (CN c' n' p')) \\<and>\n                           (\\<not> Polynomial_Expression.degree (CN c n' p)\n                                   < Polynomial_Expression.degree\n(CN c' n' p') \\<longrightarrow>\n                            head\n                             (let cc' = c +\\<^sub>p c'; pp' = p +\\<^sub>p p'\n                              in if pp' = 0\\<^sub>p then cc'\n                                 else CN cc' n pp') =\n                            head (CN c n' p))))", "apply (case_tac n', simp, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>c n p c' n0.\n       \\<lbrakk>n0 \\<le> n \\<and>\n                isnpolyh c (Suc n) \\<and>\n                isnpolyh p n \\<and> p \\<noteq> 0\\<^sub>p;\n        0 < Polynomial_Expression.degree (CN c n p)\\<rbrakk>\n       \\<Longrightarrow> head (CN (c +\\<^sub>p (c')\\<^sub>p) n p) =\n                         head (CN c n p)\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; n1 \\<le> n';\n                    0 < Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                   \\<Longrightarrow> head (c +\\<^sub>p CN c' n' p') =\n                                     head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>n0 \\<le> n; isnpolyh c' n1;\n            0 < Polynomial_Expression.degree (CN c n p)\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p +\\<^sub>p c') = head (CN c n p);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1;\n            Polynomial_Expression.degree p \\<noteq>\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> head (p +\\<^sub>p p') =\n                             (if Polynomial_Expression.degree p\n                                 < Polynomial_Expression.degree p'\n                              then head p' else head p);\n        n0 \\<le> n \\<and>\n        isnpolyh c (Suc n) \\<and> isnpolyh p n \\<and> p \\<noteq> 0\\<^sub>p;\n        n1 \\<le> n' \\<and>\n        isnpolyh c' (Suc n') \\<and>\n        isnpolyh p' n' \\<and> p' \\<noteq> 0\\<^sub>p;\n        Polynomial_Expression.degree (CN c n p) \\<noteq>\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> (n' < n \\<longrightarrow>\n                          (Polynomial_Expression.degree (CN c n p)\n                           < Polynomial_Expression.degree\n                              (CN c' n' p') \\<longrightarrow>\n                           head (CN (CN c n p +\\<^sub>p c') n' p') =\n                           head (CN c' n' p')) \\<and>\n                          (\\<not> Polynomial_Expression.degree (CN c n p)\n                                  < Polynomial_Expression.degree\n                                     (CN c' n' p') \\<longrightarrow>\n                           head (CN (CN c n p +\\<^sub>p c') n' p') =\n                           head (CN c n p))) \\<and>\n                         (\\<not> n' < n \\<longrightarrow>\n                          (n < n' \\<longrightarrow>\n                           (Polynomial_Expression.degree (CN c n p)\n                            < Polynomial_Expression.degree\n                               (CN c' n' p') \\<longrightarrow>\n                            head (CN (c +\\<^sub>p CN c' n' p') n p) =\n                            head (CN c' n' p')) \\<and>\n                           (\\<not> Polynomial_Expression.degree (CN c n p)\n                                   < Polynomial_Expression.degree\n(CN c' n' p') \\<longrightarrow>\n                            head (CN (c +\\<^sub>p CN c' n' p') n p) =\n                            head (CN c n p))) \\<and>\n                          (n = n' \\<longrightarrow>\n                           (Polynomial_Expression.degree (CN c n' p)\n                            < Polynomial_Expression.degree\n                               (CN c' n' p') \\<longrightarrow>\n                            head\n                             (let cc' = c +\\<^sub>p c'; pp' = p +\\<^sub>p p'\n                              in if pp' = 0\\<^sub>p then cc'\n                                 else CN cc' n pp') =\n                            head (CN c' n' p')) \\<and>\n                           (\\<not> Polynomial_Expression.degree (CN c n' p)\n                                   < Polynomial_Expression.degree\n(CN c' n' p') \\<longrightarrow>\n                            head\n                             (let cc' = c +\\<^sub>p c'; pp' = p +\\<^sub>p p'\n                              in if pp' = 0\\<^sub>p then cc'\n                                 else CN cc' n pp') =\n                            head (CN c n' p))))", "apply (case_tac n, simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; n1 \\<le> n';\n                    0 < Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                   \\<Longrightarrow> head (c +\\<^sub>p CN c' n' p') =\n                                     head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>n0 \\<le> n; isnpolyh c' n1;\n            0 < Polynomial_Expression.degree (CN c n p)\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p +\\<^sub>p c') = head (CN c n p);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1;\n            Polynomial_Expression.degree p \\<noteq>\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> head (p +\\<^sub>p p') =\n                             (if Polynomial_Expression.degree p\n                                 < Polynomial_Expression.degree p'\n                              then head p' else head p);\n        n0 \\<le> n \\<and>\n        isnpolyh c (Suc n) \\<and> isnpolyh p n \\<and> p \\<noteq> 0\\<^sub>p;\n        n1 \\<le> n' \\<and>\n        isnpolyh c' (Suc n') \\<and>\n        isnpolyh p' n' \\<and> p' \\<noteq> 0\\<^sub>p;\n        Polynomial_Expression.degree (CN c n p) \\<noteq>\n        Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n       \\<Longrightarrow> (n' < n \\<longrightarrow>\n                          (Polynomial_Expression.degree (CN c n p)\n                           < Polynomial_Expression.degree\n                              (CN c' n' p') \\<longrightarrow>\n                           head (CN (CN c n p +\\<^sub>p c') n' p') =\n                           head (CN c' n' p')) \\<and>\n                          (\\<not> Polynomial_Expression.degree (CN c n p)\n                                  < Polynomial_Expression.degree\n                                     (CN c' n' p') \\<longrightarrow>\n                           head (CN (CN c n p +\\<^sub>p c') n' p') =\n                           head (CN c n p))) \\<and>\n                         (\\<not> n' < n \\<longrightarrow>\n                          (n < n' \\<longrightarrow>\n                           (Polynomial_Expression.degree (CN c n p)\n                            < Polynomial_Expression.degree\n                               (CN c' n' p') \\<longrightarrow>\n                            head (CN (c +\\<^sub>p CN c' n' p') n p) =\n                            head (CN c' n' p')) \\<and>\n                           (\\<not> Polynomial_Expression.degree (CN c n p)\n                                   < Polynomial_Expression.degree\n(CN c' n' p') \\<longrightarrow>\n                            head (CN (c +\\<^sub>p CN c' n' p') n p) =\n                            head (CN c n p))) \\<and>\n                          (n = n' \\<longrightarrow>\n                           (Polynomial_Expression.degree (CN c n' p)\n                            < Polynomial_Expression.degree\n                               (CN c' n' p') \\<longrightarrow>\n                            head\n                             (let cc' = c +\\<^sub>p c'; pp' = p +\\<^sub>p p'\n                              in if pp' = 0\\<^sub>p then cc'\n                                 else CN cc' n pp') =\n                            head (CN c' n' p')) \\<and>\n                           (\\<not> Polynomial_Expression.degree (CN c n' p)\n                                   < Polynomial_Expression.degree\n(CN c' n' p') \\<longrightarrow>\n                            head\n                             (let cc' = c +\\<^sub>p c'; pp' = p +\\<^sub>p p'\n                              in if pp' = 0\\<^sub>p then cc'\n                                 else CN cc' n pp') =\n                            head (CN c n' p))))", "apply (case_tac n, case_tac n', simp add: Let_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>c n p c' n' p'.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; n1 = 0\\<rbrakk>\n                   \\<Longrightarrow> head (c +\\<^sub>p CN c' 0 p') =\n                                     head p';\n        \\<And>n0 n1.\n           \\<lbrakk>n0 = 0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> head (CN c 0 p +\\<^sub>p c') = head p;\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> head (p +\\<^sub>p p') =\n                             (if Polynomial_Expression.degree p\n                                 < Polynomial_Expression.degree p'\n                              then head p' else head p);\n        isnpolyh c (Suc 0) \\<and> isnpolyh p 0 \\<and> p \\<noteq> 0\\<^sub>p;\n        isnpolyh c' (Suc 0) \\<and>\n        isnpolyh p' 0 \\<and> p' \\<noteq> 0\\<^sub>p;\n        Polynomial_Expression.degree p \\<noteq>\n        Polynomial_Expression.degree p';\n        n = 0; n' = 0\\<rbrakk>\n       \\<Longrightarrow> (p +\\<^sub>p p' = 0\\<^sub>p \\<longrightarrow>\n                          (Polynomial_Expression.degree p\n                           < Polynomial_Expression.degree\n                              p' \\<longrightarrow>\n                           head (c +\\<^sub>p c') = head p') \\<and>\n                          (\\<not> Polynomial_Expression.degree p\n                                  < Polynomial_Expression.degree\n                                     p' \\<longrightarrow>\n                           head (c +\\<^sub>p c') = head p)) \\<and>\n                         (p +\\<^sub>p p' \\<noteq>\n                          0\\<^sub>p \\<longrightarrow>\n                          (Polynomial_Expression.degree p\n                           < Polynomial_Expression.degree\n                              p' \\<longrightarrow>\n                           head (p +\\<^sub>p p') = head p') \\<and>\n                          (\\<not> Polynomial_Expression.degree p\n                                  < Polynomial_Expression.degree\n                                     p' \\<longrightarrow>\n                           head (p +\\<^sub>p p') = head p))\n 2. \\<And>c n p c' n' p' n0 n1 nat.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; n1 \\<le> n';\n                    0 < Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                   \\<Longrightarrow> head (c +\\<^sub>p CN c' n' p') =\n                                     head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>n0 \\<le> n; isnpolyh c' n1;\n            0 < Polynomial_Expression.degree (CN c n p)\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p +\\<^sub>p c') = head (CN c n p);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1;\n            Polynomial_Expression.degree p \\<noteq>\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> head (p +\\<^sub>p p') =\n                             (if Polynomial_Expression.degree p\n                                 < Polynomial_Expression.degree p'\n                              then head p' else head p);\n        n0 \\<le> n \\<and>\n        isnpolyh c (Suc n) \\<and> isnpolyh p n \\<and> p \\<noteq> 0\\<^sub>p;\n        n1 \\<le> n' \\<and>\n        isnpolyh c' (Suc n') \\<and>\n        isnpolyh p' n' \\<and> p' \\<noteq> 0\\<^sub>p;\n        Polynomial_Expression.degree (CN c n p) \\<noteq>\n        Polynomial_Expression.degree (CN c' n' p');\n        n = 0; n' = Suc nat\\<rbrakk>\n       \\<Longrightarrow> (n' < n \\<longrightarrow>\n                          (Polynomial_Expression.degree (CN c n p)\n                           < Polynomial_Expression.degree\n                              (CN c' n' p') \\<longrightarrow>\n                           head (CN (CN c n p +\\<^sub>p c') n' p') =\n                           head (CN c' n' p')) \\<and>\n                          (\\<not> Polynomial_Expression.degree (CN c n p)\n                                  < Polynomial_Expression.degree\n                                     (CN c' n' p') \\<longrightarrow>\n                           head (CN (CN c n p +\\<^sub>p c') n' p') =\n                           head (CN c n p))) \\<and>\n                         (\\<not> n' < n \\<longrightarrow>\n                          (n < n' \\<longrightarrow>\n                           (Polynomial_Expression.degree (CN c n p)\n                            < Polynomial_Expression.degree\n                               (CN c' n' p') \\<longrightarrow>\n                            head (CN (c +\\<^sub>p CN c' n' p') n p) =\n                            head (CN c' n' p')) \\<and>\n                           (\\<not> Polynomial_Expression.degree (CN c n p)\n                                   < Polynomial_Expression.degree\n(CN c' n' p') \\<longrightarrow>\n                            head (CN (c +\\<^sub>p CN c' n' p') n p) =\n                            head (CN c n p))) \\<and>\n                          (n = n' \\<longrightarrow>\n                           (Polynomial_Expression.degree (CN c n' p)\n                            < Polynomial_Expression.degree\n                               (CN c' n' p') \\<longrightarrow>\n                            head\n                             (let cc' = c +\\<^sub>p c'; pp' = p +\\<^sub>p p'\n                              in if pp' = 0\\<^sub>p then cc'\n                                 else CN cc' n pp') =\n                            head (CN c' n' p')) \\<and>\n                           (\\<not> Polynomial_Expression.degree (CN c n' p)\n                                   < Polynomial_Expression.degree\n(CN c' n' p') \\<longrightarrow>\n                            head\n                             (let cc' = c +\\<^sub>p c'; pp' = p +\\<^sub>p p'\n                              in if pp' = 0\\<^sub>p then cc'\n                                 else CN cc' n pp') =\n                            head (CN c n' p))))\n 3. \\<And>c n p c' n' p' n0 n1 nat.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; n1 \\<le> n';\n                    0 < Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                   \\<Longrightarrow> head (c +\\<^sub>p CN c' n' p') =\n                                     head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>n0 \\<le> n; isnpolyh c' n1;\n            0 < Polynomial_Expression.degree (CN c n p)\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p +\\<^sub>p c') = head (CN c n p);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1;\n            Polynomial_Expression.degree p \\<noteq>\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> head (p +\\<^sub>p p') =\n                             (if Polynomial_Expression.degree p\n                                 < Polynomial_Expression.degree p'\n                              then head p' else head p);\n        n0 \\<le> n \\<and>\n        isnpolyh c (Suc n) \\<and> isnpolyh p n \\<and> p \\<noteq> 0\\<^sub>p;\n        n1 \\<le> n' \\<and>\n        isnpolyh c' (Suc n') \\<and>\n        isnpolyh p' n' \\<and> p' \\<noteq> 0\\<^sub>p;\n        Polynomial_Expression.degree (CN c n p) \\<noteq>\n        Polynomial_Expression.degree (CN c' n' p');\n        n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> (n' < n \\<longrightarrow>\n                          (Polynomial_Expression.degree (CN c n p)\n                           < Polynomial_Expression.degree\n                              (CN c' n' p') \\<longrightarrow>\n                           head (CN (CN c n p +\\<^sub>p c') n' p') =\n                           head (CN c' n' p')) \\<and>\n                          (\\<not> Polynomial_Expression.degree (CN c n p)\n                                  < Polynomial_Expression.degree\n                                     (CN c' n' p') \\<longrightarrow>\n                           head (CN (CN c n p +\\<^sub>p c') n' p') =\n                           head (CN c n p))) \\<and>\n                         (\\<not> n' < n \\<longrightarrow>\n                          (n < n' \\<longrightarrow>\n                           (Polynomial_Expression.degree (CN c n p)\n                            < Polynomial_Expression.degree\n                               (CN c' n' p') \\<longrightarrow>\n                            head (CN (c +\\<^sub>p CN c' n' p') n p) =\n                            head (CN c' n' p')) \\<and>\n                           (\\<not> Polynomial_Expression.degree (CN c n p)\n                                   < Polynomial_Expression.degree\n(CN c' n' p') \\<longrightarrow>\n                            head (CN (c +\\<^sub>p CN c' n' p') n p) =\n                            head (CN c n p))) \\<and>\n                          (n = n' \\<longrightarrow>\n                           (Polynomial_Expression.degree (CN c n' p)\n                            < Polynomial_Expression.degree\n                               (CN c' n' p') \\<longrightarrow>\n                            head\n                             (let cc' = c +\\<^sub>p c'; pp' = p +\\<^sub>p p'\n                              in if pp' = 0\\<^sub>p then cc'\n                                 else CN cc' n pp') =\n                            head (CN c' n' p')) \\<and>\n                           (\\<not> Polynomial_Expression.degree (CN c n' p)\n                                   < Polynomial_Expression.degree\n(CN c' n' p') \\<longrightarrow>\n                            head\n                             (let cc' = c +\\<^sub>p c'; pp' = p +\\<^sub>p p'\n                              in if pp' = 0\\<^sub>p then cc'\n                                 else CN cc' n pp') =\n                            head (CN c n' p))))", "apply (auto simp add: polyadd_eq_const_degree)[2]"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>c p c' p'.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; n1 = 0\\<rbrakk>\n                   \\<Longrightarrow> head (c +\\<^sub>p CN c' 0 p') =\n                                     head p';\n        \\<And>n0 n1.\n           \\<lbrakk>n0 = 0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> head (CN c 0 p +\\<^sub>p c') = head p;\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> 0\\<^sub>p = head p;\n        isnpolyh c (Suc 0); isnpolyh c' (Suc 0); isnpolyh p 0;\n        p \\<noteq> head p; isnpolyh p' 0; p' \\<noteq> head p;\n        p +\\<^sub>p p' = head p;\n        Polynomial_Expression.degree p\n        < Polynomial_Expression.degree p'\\<rbrakk>\n       \\<Longrightarrow> head (c +\\<^sub>p c') = head p'\n 2. \\<And>c p c' p'.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; n1 = 0\\<rbrakk>\n                   \\<Longrightarrow> head (c +\\<^sub>p CN c' 0 p') =\n                                     head p';\n        \\<And>n0 n1.\n           \\<lbrakk>n0 = 0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> head (CN c 0 p +\\<^sub>p c') = head p;\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> 0\\<^sub>p = head p;\n        Polynomial_Expression.degree p \\<noteq>\n        Polynomial_Expression.degree p';\n        isnpolyh c (Suc 0); isnpolyh c' (Suc 0); isnpolyh p 0;\n        p \\<noteq> head p; isnpolyh p' 0; p' \\<noteq> head p;\n        p +\\<^sub>p p' = head p;\n        \\<not> Polynomial_Expression.degree p\n               < Polynomial_Expression.degree p'\\<rbrakk>\n       \\<Longrightarrow> head (c +\\<^sub>p c') = head p\n 3. \\<And>c n p c' n' p' n0 n1 nat.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; n1 \\<le> n';\n                    0 < Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                   \\<Longrightarrow> head (c +\\<^sub>p CN c' n' p') =\n                                     head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>n0 \\<le> n; isnpolyh c' n1;\n            0 < Polynomial_Expression.degree (CN c n p)\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p +\\<^sub>p c') = head (CN c n p);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1;\n            Polynomial_Expression.degree p \\<noteq>\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> head (p +\\<^sub>p p') =\n                             (if Polynomial_Expression.degree p\n                                 < Polynomial_Expression.degree p'\n                              then head p' else head p);\n        n0 \\<le> n \\<and>\n        isnpolyh c (Suc n) \\<and> isnpolyh p n \\<and> p \\<noteq> 0\\<^sub>p;\n        n1 \\<le> n' \\<and>\n        isnpolyh c' (Suc n') \\<and>\n        isnpolyh p' n' \\<and> p' \\<noteq> 0\\<^sub>p;\n        Polynomial_Expression.degree (CN c n p) \\<noteq>\n        Polynomial_Expression.degree (CN c' n' p');\n        n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> (n' < n \\<longrightarrow>\n                          (Polynomial_Expression.degree (CN c n p)\n                           < Polynomial_Expression.degree\n                              (CN c' n' p') \\<longrightarrow>\n                           head (CN (CN c n p +\\<^sub>p c') n' p') =\n                           head (CN c' n' p')) \\<and>\n                          (\\<not> Polynomial_Expression.degree (CN c n p)\n                                  < Polynomial_Expression.degree\n                                     (CN c' n' p') \\<longrightarrow>\n                           head (CN (CN c n p +\\<^sub>p c') n' p') =\n                           head (CN c n p))) \\<and>\n                         (\\<not> n' < n \\<longrightarrow>\n                          (n < n' \\<longrightarrow>\n                           (Polynomial_Expression.degree (CN c n p)\n                            < Polynomial_Expression.degree\n                               (CN c' n' p') \\<longrightarrow>\n                            head (CN (c +\\<^sub>p CN c' n' p') n p) =\n                            head (CN c' n' p')) \\<and>\n                           (\\<not> Polynomial_Expression.degree (CN c n p)\n                                   < Polynomial_Expression.degree\n(CN c' n' p') \\<longrightarrow>\n                            head (CN (c +\\<^sub>p CN c' n' p') n p) =\n                            head (CN c n p))) \\<and>\n                          (n = n' \\<longrightarrow>\n                           (Polynomial_Expression.degree (CN c n' p)\n                            < Polynomial_Expression.degree\n                               (CN c' n' p') \\<longrightarrow>\n                            head\n                             (let cc' = c +\\<^sub>p c'; pp' = p +\\<^sub>p p'\n                              in if pp' = 0\\<^sub>p then cc'\n                                 else CN cc' n pp') =\n                            head (CN c' n' p')) \\<and>\n                           (\\<not> Polynomial_Expression.degree (CN c n' p)\n                                   < Polynomial_Expression.degree\n(CN c' n' p') \\<longrightarrow>\n                            head\n                             (let cc' = c +\\<^sub>p c'; pp' = p +\\<^sub>p p'\n                              in if pp' = 0\\<^sub>p then cc'\n                                 else CN cc' n pp') =\n                            head (CN c n' p))))", "apply (metis head_nz)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>c p c' p'.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; n1 = 0\\<rbrakk>\n                   \\<Longrightarrow> head (c +\\<^sub>p CN c' 0 p') =\n                                     head p';\n        \\<And>n0 n1.\n           \\<lbrakk>n0 = 0; isnpolyh c' n1\\<rbrakk>\n           \\<Longrightarrow> head (CN c 0 p +\\<^sub>p c') = head p;\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1\\<rbrakk>\n           \\<Longrightarrow> 0\\<^sub>p = head p;\n        Polynomial_Expression.degree p \\<noteq>\n        Polynomial_Expression.degree p';\n        isnpolyh c (Suc 0); isnpolyh c' (Suc 0); isnpolyh p 0;\n        p \\<noteq> head p; isnpolyh p' 0; p' \\<noteq> head p;\n        p +\\<^sub>p p' = head p;\n        \\<not> Polynomial_Expression.degree p\n               < Polynomial_Expression.degree p'\\<rbrakk>\n       \\<Longrightarrow> head (c +\\<^sub>p c') = head p\n 2. \\<And>c n p c' n' p' n0 n1 nat.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; n1 \\<le> n';\n                    0 < Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                   \\<Longrightarrow> head (c +\\<^sub>p CN c' n' p') =\n                                     head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>n0 \\<le> n; isnpolyh c' n1;\n            0 < Polynomial_Expression.degree (CN c n p)\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p +\\<^sub>p c') = head (CN c n p);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1;\n            Polynomial_Expression.degree p \\<noteq>\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> head (p +\\<^sub>p p') =\n                             (if Polynomial_Expression.degree p\n                                 < Polynomial_Expression.degree p'\n                              then head p' else head p);\n        n0 \\<le> n \\<and>\n        isnpolyh c (Suc n) \\<and> isnpolyh p n \\<and> p \\<noteq> 0\\<^sub>p;\n        n1 \\<le> n' \\<and>\n        isnpolyh c' (Suc n') \\<and>\n        isnpolyh p' n' \\<and> p' \\<noteq> 0\\<^sub>p;\n        Polynomial_Expression.degree (CN c n p) \\<noteq>\n        Polynomial_Expression.degree (CN c' n' p');\n        n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> (n' < n \\<longrightarrow>\n                          (Polynomial_Expression.degree (CN c n p)\n                           < Polynomial_Expression.degree\n                              (CN c' n' p') \\<longrightarrow>\n                           head (CN (CN c n p +\\<^sub>p c') n' p') =\n                           head (CN c' n' p')) \\<and>\n                          (\\<not> Polynomial_Expression.degree (CN c n p)\n                                  < Polynomial_Expression.degree\n                                     (CN c' n' p') \\<longrightarrow>\n                           head (CN (CN c n p +\\<^sub>p c') n' p') =\n                           head (CN c n p))) \\<and>\n                         (\\<not> n' < n \\<longrightarrow>\n                          (n < n' \\<longrightarrow>\n                           (Polynomial_Expression.degree (CN c n p)\n                            < Polynomial_Expression.degree\n                               (CN c' n' p') \\<longrightarrow>\n                            head (CN (c +\\<^sub>p CN c' n' p') n p) =\n                            head (CN c' n' p')) \\<and>\n                           (\\<not> Polynomial_Expression.degree (CN c n p)\n                                   < Polynomial_Expression.degree\n(CN c' n' p') \\<longrightarrow>\n                            head (CN (c +\\<^sub>p CN c' n' p') n p) =\n                            head (CN c n p))) \\<and>\n                          (n = n' \\<longrightarrow>\n                           (Polynomial_Expression.degree (CN c n' p)\n                            < Polynomial_Expression.degree\n                               (CN c' n' p') \\<longrightarrow>\n                            head\n                             (let cc' = c +\\<^sub>p c'; pp' = p +\\<^sub>p p'\n                              in if pp' = 0\\<^sub>p then cc'\n                                 else CN cc' n pp') =\n                            head (CN c' n' p')) \\<and>\n                           (\\<not> Polynomial_Expression.degree (CN c n' p)\n                                   < Polynomial_Expression.degree\n(CN c' n' p') \\<longrightarrow>\n                            head\n                             (let cc' = c +\\<^sub>p c'; pp' = p +\\<^sub>p p'\n                              in if pp' = 0\\<^sub>p then cc'\n                                 else CN cc' n pp') =\n                            head (CN c n' p))))", "apply (metis head_nz)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c n p c' n' p' n0 n1 nat.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; n1 \\<le> n';\n                    0 < Polynomial_Expression.degree (CN c' n' p')\\<rbrakk>\n                   \\<Longrightarrow> head (c +\\<^sub>p CN c' n' p') =\n                                     head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>n0 \\<le> n; isnpolyh c' n1;\n            0 < Polynomial_Expression.degree (CN c n p)\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p +\\<^sub>p c') = head (CN c n p);\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh p' n1;\n            Polynomial_Expression.degree p \\<noteq>\n            Polynomial_Expression.degree p'\\<rbrakk>\n           \\<Longrightarrow> head (p +\\<^sub>p p') =\n                             (if Polynomial_Expression.degree p\n                                 < Polynomial_Expression.degree p'\n                              then head p' else head p);\n        n0 \\<le> n \\<and>\n        isnpolyh c (Suc n) \\<and> isnpolyh p n \\<and> p \\<noteq> 0\\<^sub>p;\n        n1 \\<le> n' \\<and>\n        isnpolyh c' (Suc n') \\<and>\n        isnpolyh p' n' \\<and> p' \\<noteq> 0\\<^sub>p;\n        Polynomial_Expression.degree (CN c n p) \\<noteq>\n        Polynomial_Expression.degree (CN c' n' p');\n        n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> (n' < n \\<longrightarrow>\n                          (Polynomial_Expression.degree (CN c n p)\n                           < Polynomial_Expression.degree\n                              (CN c' n' p') \\<longrightarrow>\n                           head (CN (CN c n p +\\<^sub>p c') n' p') =\n                           head (CN c' n' p')) \\<and>\n                          (\\<not> Polynomial_Expression.degree (CN c n p)\n                                  < Polynomial_Expression.degree\n                                     (CN c' n' p') \\<longrightarrow>\n                           head (CN (CN c n p +\\<^sub>p c') n' p') =\n                           head (CN c n p))) \\<and>\n                         (\\<not> n' < n \\<longrightarrow>\n                          (n < n' \\<longrightarrow>\n                           (Polynomial_Expression.degree (CN c n p)\n                            < Polynomial_Expression.degree\n                               (CN c' n' p') \\<longrightarrow>\n                            head (CN (c +\\<^sub>p CN c' n' p') n p) =\n                            head (CN c' n' p')) \\<and>\n                           (\\<not> Polynomial_Expression.degree (CN c n p)\n                                   < Polynomial_Expression.degree\n(CN c' n' p') \\<longrightarrow>\n                            head (CN (c +\\<^sub>p CN c' n' p') n p) =\n                            head (CN c n p))) \\<and>\n                          (n = n' \\<longrightarrow>\n                           (Polynomial_Expression.degree (CN c n' p)\n                            < Polynomial_Expression.degree\n                               (CN c' n' p') \\<longrightarrow>\n                            head\n                             (let cc' = c +\\<^sub>p c'; pp' = p +\\<^sub>p p'\n                              in if pp' = 0\\<^sub>p then cc'\n                                 else CN cc' n pp') =\n                            head (CN c' n' p')) \\<and>\n                           (\\<not> Polynomial_Expression.degree (CN c n' p)\n                                   < Polynomial_Expression.degree\n(CN c' n' p') \\<longrightarrow>\n                            head\n                             (let cc' = c +\\<^sub>p c'; pp' = p +\\<^sub>p p'\n                              in if pp' = 0\\<^sub>p then cc'\n                                 else CN cc' n pp') =\n                            head (CN c n' p))))", "apply (metis degree.simps(9) gr0_conv_Suc head.simps(1) less_Suc0 not_less_eq)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma polymul_head_polyeq:\n  fixes p :: \"'a::field poly\"\n  shows \"isnpolyh p n0 \\<Longrightarrow> isnpolyh q n1 \\<Longrightarrow> p \\<noteq> 0\\<^sub>p \\<Longrightarrow> q \\<noteq> 0\\<^sub>p \\<Longrightarrow> head (p *\\<^sub>p q) = head p *\\<^sub>p head q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpolyh p n0; isnpolyh q n1; p \\<noteq> 0\\<^sub>p;\n     q \\<noteq> 0\\<^sub>p\\<rbrakk>\n    \\<Longrightarrow> head (p *\\<^sub>p q) = head p *\\<^sub>p head q", "proof (induct p q arbitrary: n0 n1 rule: polymul.induct)"], ["proof (state)\ngoal (28 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n                    c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p c') =\n                                     head (c)\\<^sub>p *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            (c)\\<^sub>p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p p') =\n                             head (c)\\<^sub>p *\\<^sub>p head p';\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p CN c' n' p') =\n                         head (c)\\<^sub>p *\\<^sub>p head (CN c' n' p')\n 3. \\<And>c n p c' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p (c')\\<^sub>p) =\n                                     head c *\\<^sub>p head (c')\\<^sub>p;\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            p \\<noteq> 0\\<^sub>p; (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p (c')\\<^sub>p) =\n                             head p *\\<^sub>p head (c')\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        CN c n p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p (c')\\<^sub>p) =\n                         head (CN c n p) *\\<^sub>p head (c')\\<^sub>p\n 4. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 5. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 9. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 10. \\<And>v va b n0 n1.\n        \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n         Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                          head (Pw v va) *\\<^sub>p head b\nA total of 28 subgoals...", "case (2 c c' n' p' n0 n1)"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh c' ?n1.0;\n   (c)\\<^sub>p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p c') =\n                    head (c)\\<^sub>p *\\<^sub>p head c'\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh p' ?n1.0;\n   (c)\\<^sub>p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p p') =\n                    head (c)\\<^sub>p *\\<^sub>p head p'\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n  (c)\\<^sub>p \\<noteq> 0\\<^sub>p\n  CN c' n' p' \\<noteq> 0\\<^sub>p\n\ngoal (28 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n                    c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p c') =\n                                     head (c)\\<^sub>p *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            (c)\\<^sub>p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p p') =\n                             head (c)\\<^sub>p *\\<^sub>p head p';\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p CN c' n' p') =\n                         head (c)\\<^sub>p *\\<^sub>p head (CN c' n' p')\n 3. \\<And>c n p c' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p (c')\\<^sub>p) =\n                                     head c *\\<^sub>p head (c')\\<^sub>p;\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            p \\<noteq> 0\\<^sub>p; (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p (c')\\<^sub>p) =\n                             head p *\\<^sub>p head (c')\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        CN c n p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p (c')\\<^sub>p) =\n                         head (CN c n p) *\\<^sub>p head (c')\\<^sub>p\n 4. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 5. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 9. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 10. \\<And>v va b n0 n1.\n        \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n         Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                          head (Pw v va) *\\<^sub>p head b\nA total of 28 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh c' ?n1.0;\n   (c)\\<^sub>p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p c') =\n                    head (c)\\<^sub>p *\\<^sub>p head c'\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh p' ?n1.0;\n   (c)\\<^sub>p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p p') =\n                    head (c)\\<^sub>p *\\<^sub>p head p'\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n  (c)\\<^sub>p \\<noteq> 0\\<^sub>p\n  CN c' n' p' \\<noteq> 0\\<^sub>p", "have \"isnpolyh (head (CN c' n' p')) n1\""], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh c' ?n1.0;\n   (c)\\<^sub>p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p c') =\n                    head (c)\\<^sub>p *\\<^sub>p head c'\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh p' ?n1.0;\n   (c)\\<^sub>p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p p') =\n                    head (c)\\<^sub>p *\\<^sub>p head p'\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n  (c)\\<^sub>p \\<noteq> 0\\<^sub>p\n  CN c' n' p' \\<noteq> 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. isnpolyh (head (CN c' n' p')) n1", "by (simp_all add: head_isnpolyh)"], ["proof (state)\nthis:\n  isnpolyh (head (CN c' n' p')) n1\n\ngoal (28 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh c' n1;\n                    (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n                    c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p c') =\n                                     head (c)\\<^sub>p *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh p' n1;\n            (c)\\<^sub>p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p p') =\n                             head (c)\\<^sub>p *\\<^sub>p head p';\n        isnpolyh (c)\\<^sub>p n0; isnpolyh (CN c' n' p') n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p CN c' n' p') =\n                         head (c)\\<^sub>p *\\<^sub>p head (CN c' n' p')\n 3. \\<And>c n p c' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p (c')\\<^sub>p) =\n                                     head c *\\<^sub>p head (c')\\<^sub>p;\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            p \\<noteq> 0\\<^sub>p; (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p (c')\\<^sub>p) =\n                             head p *\\<^sub>p head (c')\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        CN c n p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p (c')\\<^sub>p) =\n                         head (CN c n p) *\\<^sub>p head (c')\\<^sub>p\n 4. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 5. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 9. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 10. \\<And>v va b n0 n1.\n        \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n         Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                          head (Pw v va) *\\<^sub>p head b\nA total of 28 subgoals...", "then"], ["proof (chain)\npicking this:\n  isnpolyh (head (CN c' n' p')) n1", "show ?case"], ["proof (prove)\nusing this:\n  isnpolyh (head (CN c' n' p')) n1\n\ngoal (1 subgoal):\n 1. head ((c)\\<^sub>p *\\<^sub>p CN c' n' p') =\n    head (c)\\<^sub>p *\\<^sub>p head (CN c' n' p')", "using 2"], ["proof (prove)\nusing this:\n  isnpolyh (head (CN c' n' p')) n1\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh c' ?n1.0;\n   (c)\\<^sub>p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p c') =\n                    head (c)\\<^sub>p *\\<^sub>p head c'\n  \\<lbrakk>isnpolyh (c)\\<^sub>p ?n0.0; isnpolyh p' ?n1.0;\n   (c)\\<^sub>p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p p') =\n                    head (c)\\<^sub>p *\\<^sub>p head p'\n  isnpolyh (c)\\<^sub>p n0\n  isnpolyh (CN c' n' p') n1\n  (c)\\<^sub>p \\<noteq> 0\\<^sub>p\n  CN c' n' p' \\<noteq> 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. head ((c)\\<^sub>p *\\<^sub>p CN c' n' p') =\n    head (c)\\<^sub>p *\\<^sub>p head (CN c' n' p')", "by (cases n') auto"], ["proof (state)\nthis:\n  head ((c)\\<^sub>p *\\<^sub>p CN c' n' p') =\n  head (c)\\<^sub>p *\\<^sub>p head (CN c' n' p')\n\ngoal (27 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p (c')\\<^sub>p) =\n                                     head c *\\<^sub>p head (c')\\<^sub>p;\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            p \\<noteq> 0\\<^sub>p; (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p (c')\\<^sub>p) =\n                             head p *\\<^sub>p head (c')\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        CN c n p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p (c')\\<^sub>p) =\n                         head (CN c n p) *\\<^sub>p head (c')\\<^sub>p\n 3. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 4. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 8. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 9. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 10. \\<And>v va vb vc n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                          head (CN v va vb) *\\<^sub>p head (Bound vc)\nA total of 27 subgoals...", "next"], ["proof (state)\ngoal (27 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p (c')\\<^sub>p) =\n                                     head c *\\<^sub>p head (c')\\<^sub>p;\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            p \\<noteq> 0\\<^sub>p; (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p (c')\\<^sub>p) =\n                             head p *\\<^sub>p head (c')\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        CN c n p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p (c')\\<^sub>p) =\n                         head (CN c n p) *\\<^sub>p head (c')\\<^sub>p\n 3. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 4. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 8. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 9. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 10. \\<And>v va vb vc n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                          head (CN v va vb) *\\<^sub>p head (Bound vc)\nA total of 27 subgoals...", "case (3 c n p c' n0 n1)"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   c \\<noteq> 0\\<^sub>p; (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (c *\\<^sub>p (c')\\<^sub>p) =\n                    head c *\\<^sub>p head (c')\\<^sub>p\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   p \\<noteq> 0\\<^sub>p; (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (p *\\<^sub>p (c')\\<^sub>p) =\n                    head p *\\<^sub>p head (c')\\<^sub>p\n  isnpolyh (CN c n p) n0\n  isnpolyh (c')\\<^sub>p n1\n  CN c n p \\<noteq> 0\\<^sub>p\n  (c')\\<^sub>p \\<noteq> 0\\<^sub>p\n\ngoal (27 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p (c')\\<^sub>p) =\n                                     head c *\\<^sub>p head (c')\\<^sub>p;\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            p \\<noteq> 0\\<^sub>p; (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p (c')\\<^sub>p) =\n                             head p *\\<^sub>p head (c')\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        CN c n p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p (c')\\<^sub>p) =\n                         head (CN c n p) *\\<^sub>p head (c')\\<^sub>p\n 3. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 4. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 8. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 9. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 10. \\<And>v va vb vc n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                          head (CN v va vb) *\\<^sub>p head (Bound vc)\nA total of 27 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   c \\<noteq> 0\\<^sub>p; (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (c *\\<^sub>p (c')\\<^sub>p) =\n                    head c *\\<^sub>p head (c')\\<^sub>p\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   p \\<noteq> 0\\<^sub>p; (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (p *\\<^sub>p (c')\\<^sub>p) =\n                    head p *\\<^sub>p head (c')\\<^sub>p\n  isnpolyh (CN c n p) n0\n  isnpolyh (c')\\<^sub>p n1\n  CN c n p \\<noteq> 0\\<^sub>p\n  (c')\\<^sub>p \\<noteq> 0\\<^sub>p", "have \"isnpolyh (head (CN c n p)) n0\""], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   c \\<noteq> 0\\<^sub>p; (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (c *\\<^sub>p (c')\\<^sub>p) =\n                    head c *\\<^sub>p head (c')\\<^sub>p\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   p \\<noteq> 0\\<^sub>p; (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (p *\\<^sub>p (c')\\<^sub>p) =\n                    head p *\\<^sub>p head (c')\\<^sub>p\n  isnpolyh (CN c n p) n0\n  isnpolyh (c')\\<^sub>p n1\n  CN c n p \\<noteq> 0\\<^sub>p\n  (c')\\<^sub>p \\<noteq> 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. isnpolyh (head (CN c n p)) n0", "by (simp_all add: head_isnpolyh)"], ["proof (state)\nthis:\n  isnpolyh (head (CN c n p)) n0\n\ngoal (27 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (c')\\<^sub>p n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p (c')\\<^sub>p) =\n                                     head c *\\<^sub>p head (c')\\<^sub>p;\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (c')\\<^sub>p n1;\n            p \\<noteq> 0\\<^sub>p; (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p (c')\\<^sub>p) =\n                             head p *\\<^sub>p head (c')\\<^sub>p;\n        isnpolyh (CN c n p) n0; isnpolyh (c')\\<^sub>p n1;\n        CN c n p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p (c')\\<^sub>p) =\n                         head (CN c n p) *\\<^sub>p head (c')\\<^sub>p\n 3. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 4. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 8. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 9. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 10. \\<And>v va vb vc n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                          head (CN v va vb) *\\<^sub>p head (Bound vc)\nA total of 27 subgoals...", "then"], ["proof (chain)\npicking this:\n  isnpolyh (head (CN c n p)) n0", "show ?case"], ["proof (prove)\nusing this:\n  isnpolyh (head (CN c n p)) n0\n\ngoal (1 subgoal):\n 1. head (CN c n p *\\<^sub>p (c')\\<^sub>p) =\n    head (CN c n p) *\\<^sub>p head (c')\\<^sub>p", "using 3"], ["proof (prove)\nusing this:\n  isnpolyh (head (CN c n p)) n0\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   c \\<noteq> 0\\<^sub>p; (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (c *\\<^sub>p (c')\\<^sub>p) =\n                    head c *\\<^sub>p head (c')\\<^sub>p\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (c')\\<^sub>p ?n1.0;\n   p \\<noteq> 0\\<^sub>p; (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (p *\\<^sub>p (c')\\<^sub>p) =\n                    head p *\\<^sub>p head (c')\\<^sub>p\n  isnpolyh (CN c n p) n0\n  isnpolyh (c')\\<^sub>p n1\n  CN c n p \\<noteq> 0\\<^sub>p\n  (c')\\<^sub>p \\<noteq> 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. head (CN c n p *\\<^sub>p (c')\\<^sub>p) =\n    head (CN c n p) *\\<^sub>p head (c')\\<^sub>p", "by (cases n) auto"], ["proof (state)\nthis:\n  head (CN c n p *\\<^sub>p (c')\\<^sub>p) =\n  head (CN c n p) *\\<^sub>p head (c')\\<^sub>p\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "next"], ["proof (state)\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "case (4 c n p c' n' p' n0 n1)"], ["proof (state)\nthis:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   c \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                    head c *\\<^sub>p head (CN c' n' p')\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                    head p *\\<^sub>p head (CN c' n' p')\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                    head (CN c n p) *\\<^sub>p head c'\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh p' ?n1.0;\n   CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                    head (CN c n p) *\\<^sub>p head p'\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                    head (CN c n p) *\\<^sub>p head c'\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh p' ?n1.0;\n   CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                    head (CN c n p) *\\<^sub>p head p'\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  CN c n p \\<noteq> 0\\<^sub>p\n  CN c' n' p' \\<noteq> 0\\<^sub>p\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   c \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                    head c *\\<^sub>p head (CN c' n' p')\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                    head p *\\<^sub>p head (CN c' n' p')\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                    head (CN c n p) *\\<^sub>p head c'\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh p' ?n1.0;\n   CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                    head (CN c n p) *\\<^sub>p head p'\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                    head (CN c n p) *\\<^sub>p head c'\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh p' ?n1.0;\n   CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                    head (CN c n p) *\\<^sub>p head p'\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  CN c n p \\<noteq> 0\\<^sub>p\n  CN c' n' p' \\<noteq> 0\\<^sub>p", "have norm: \"isnpolyh p n\" \"isnpolyh c (Suc n)\" \"isnpolyh p' n'\" \"isnpolyh c' (Suc n')\"\n    \"isnpolyh (CN c n p) n\" \"isnpolyh (CN c' n' p') n'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>isnpolyh c ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   c \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                    head c *\\<^sub>p head (CN c' n' p')\n  \\<lbrakk>isnpolyh p ?n0.0; isnpolyh (CN c' n' p') ?n1.0;\n   p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                    head p *\\<^sub>p head (CN c' n' p')\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                    head (CN c n p) *\\<^sub>p head c'\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh p' ?n1.0;\n   CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                    head (CN c n p) *\\<^sub>p head p'\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh c' ?n1.0;\n   CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                    head (CN c n p) *\\<^sub>p head c'\n  \\<lbrakk>isnpolyh (CN c n p) ?n0.0; isnpolyh p' ?n1.0;\n   CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                    head (CN c n p) *\\<^sub>p head p'\n  isnpolyh (CN c n p) n0\n  isnpolyh (CN c' n' p') n1\n  CN c n p \\<noteq> 0\\<^sub>p\n  CN c' n' p' \\<noteq> 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. (isnpolyh p n &&& isnpolyh c (Suc n) &&& isnpolyh p' n') &&&\n    isnpolyh c' (Suc n') &&&\n    isnpolyh (CN c n p) n &&& isnpolyh (CN c' n' p') n'", "by simp_all"], ["proof (state)\nthis:\n  isnpolyh p n\n  isnpolyh c (Suc n)\n  isnpolyh p' n'\n  isnpolyh c' (Suc n')\n  isnpolyh (CN c n p) n\n  isnpolyh (CN c' n' p') n'\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "have \"n < n' \\<or> n' < n \\<or> n = n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n < n' \\<or> n' < n \\<or> n = n'", "by arith"], ["proof (state)\nthis:\n  n < n' \\<or> n' < n \\<or> n = n'\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "moreover"], ["proof (state)\nthis:\n  n < n' \\<or> n' < n \\<or> n = n'\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "{"], ["proof (state)\nthis:\n  n < n' \\<or> n' < n \\<or> n = n'\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "assume nn': \"n < n'\""], ["proof (state)\nthis:\n  n < n'\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "then"], ["proof (chain)\npicking this:\n  n < n'", "have ?case"], ["proof (prove)\nusing this:\n  n < n'\n\ngoal (1 subgoal):\n 1. head (CN c n p *\\<^sub>p CN c' n' p') =\n    head (CN c n p) *\\<^sub>p head (CN c' n' p')", "using norm \"4.hyps\"(2)[OF norm(1,6)] \"4.hyps\"(1)[OF norm(2,6)]"], ["proof (prove)\nusing this:\n  n < n'\n  isnpolyh p n\n  isnpolyh c (Suc n)\n  isnpolyh p' n'\n  isnpolyh c' (Suc n')\n  isnpolyh (CN c n p) n\n  isnpolyh (CN c' n' p') n'\n  \\<lbrakk>p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                    head p *\\<^sub>p head (CN c' n' p')\n  \\<lbrakk>c \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                    head c *\\<^sub>p head (CN c' n' p')\n\ngoal (1 subgoal):\n 1. head (CN c n p *\\<^sub>p CN c' n' p') =\n    head (CN c n p) *\\<^sub>p head (CN c' n' p')", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n < n'; isnpolyh p n; isnpolyh c (Suc n); isnpolyh p' n';\n     isnpolyh c' (Suc n'); p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p;\n     head (p *\\<^sub>p CN c' n' p') = head p *\\<^sub>p head (CN c' n' p');\n     c \\<noteq> 0\\<^sub>p \\<Longrightarrow>\n     head (c *\\<^sub>p CN c' n' p') =\n     c *\\<^sub>p head (CN c' n' p')\\<rbrakk>\n    \\<Longrightarrow> head\n                       (CN (c *\\<^sub>p CN c' n' p') n\n                         (p *\\<^sub>p CN c' n' p')) =\n                      head (CN c n p) *\\<^sub>p head (CN c' n' p')", "apply (cases n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n < n'; isnpolyh p n; isnpolyh c (Suc n); isnpolyh p' n';\n     isnpolyh c' (Suc n'); p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p;\n     head (p *\\<^sub>p CN c' n' p') = head p *\\<^sub>p head (CN c' n' p');\n     c \\<noteq> 0\\<^sub>p \\<Longrightarrow>\n     head (c *\\<^sub>p CN c' n' p') = c *\\<^sub>p head (CN c' n' p');\n     n = 0\\<rbrakk>\n    \\<Longrightarrow> head\n                       (CN (c *\\<^sub>p CN c' n' p') n\n                         (p *\\<^sub>p CN c' n' p')) =\n                      head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 2. \\<And>nat.\n       \\<lbrakk>n < n'; isnpolyh p n; isnpolyh c (Suc n); isnpolyh p' n';\n        isnpolyh c' (Suc n'); p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p;\n        head (p *\\<^sub>p CN c' n' p') =\n        head p *\\<^sub>p head (CN c' n' p');\n        c \\<noteq> 0\\<^sub>p \\<Longrightarrow>\n        head (c *\\<^sub>p CN c' n' p') = c *\\<^sub>p head (CN c' n' p');\n        n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> head\n                          (CN (c *\\<^sub>p CN c' n' p') n\n                            (p *\\<^sub>p CN c' n' p')) =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>n < n'; isnpolyh p n; isnpolyh c (Suc n); isnpolyh p' n';\n        isnpolyh c' (Suc n'); p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p;\n        head (p *\\<^sub>p CN c' n' p') =\n        head p *\\<^sub>p head (CN c' n' p');\n        c \\<noteq> 0\\<^sub>p \\<Longrightarrow>\n        head (c *\\<^sub>p CN c' n' p') = c *\\<^sub>p head (CN c' n' p');\n        n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> head\n                          (CN (c *\\<^sub>p CN c' n' p') n\n                            (p *\\<^sub>p CN c' n' p')) =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')", "apply (cases n')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>nat.\n       \\<lbrakk>n < n'; isnpolyh p n; isnpolyh c (Suc n); isnpolyh p' n';\n        isnpolyh c' (Suc n'); p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p;\n        head (p *\\<^sub>p CN c' n' p') =\n        head p *\\<^sub>p head (CN c' n' p');\n        c \\<noteq> 0\\<^sub>p \\<Longrightarrow>\n        head (c *\\<^sub>p CN c' n' p') = c *\\<^sub>p head (CN c' n' p');\n        n = Suc nat; n' = 0\\<rbrakk>\n       \\<Longrightarrow> head\n                          (CN (c *\\<^sub>p CN c' n' p') n\n                            (p *\\<^sub>p CN c' n' p')) =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 2. \\<And>nat nata.\n       \\<lbrakk>n < n'; isnpolyh p n; isnpolyh c (Suc n); isnpolyh p' n';\n        isnpolyh c' (Suc n'); p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p;\n        head (p *\\<^sub>p CN c' n' p') =\n        head p *\\<^sub>p head (CN c' n' p');\n        c \\<noteq> 0\\<^sub>p \\<Longrightarrow>\n        head (c *\\<^sub>p CN c' n' p') = c *\\<^sub>p head (CN c' n' p');\n        n = Suc nat; n' = Suc nata\\<rbrakk>\n       \\<Longrightarrow> head\n                          (CN (c *\\<^sub>p CN c' n' p') n\n                            (p *\\<^sub>p CN c' n' p')) =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')", "apply simp_all"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "}"], ["proof (state)\nthis:\n  n < n' \\<Longrightarrow>\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "moreover"], ["proof (state)\nthis:\n  n < n' \\<Longrightarrow>\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "{"], ["proof (state)\nthis:\n  n < n' \\<Longrightarrow>\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "assume nn': \"n'< n\""], ["proof (state)\nthis:\n  n' < n\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "then"], ["proof (chain)\npicking this:\n  n' < n", "have ?case"], ["proof (prove)\nusing this:\n  n' < n\n\ngoal (1 subgoal):\n 1. head (CN c n p *\\<^sub>p CN c' n' p') =\n    head (CN c n p) *\\<^sub>p head (CN c' n' p')", "using norm \"4.hyps\"(6) [OF norm(5,3)] \"4.hyps\"(5)[OF norm(5,4)]"], ["proof (prove)\nusing this:\n  n' < n\n  isnpolyh p n\n  isnpolyh c (Suc n)\n  isnpolyh p' n'\n  isnpolyh c' (Suc n')\n  isnpolyh (CN c n p) n\n  isnpolyh (CN c' n' p') n'\n  \\<lbrakk>CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                    head (CN c n p) *\\<^sub>p head p'\n  \\<lbrakk>CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                    head (CN c n p) *\\<^sub>p head c'\n\ngoal (1 subgoal):\n 1. head (CN c n p *\\<^sub>p CN c' n' p') =\n    head (CN c n p) *\\<^sub>p head (CN c' n' p')", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n' < n; isnpolyh p n; isnpolyh c (Suc n); isnpolyh p' n';\n     isnpolyh c' (Suc n'); p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p;\n     head (CN c n p *\\<^sub>p p') = head (CN c n p) *\\<^sub>p head p';\n     c' \\<noteq> 0\\<^sub>p \\<Longrightarrow>\n     head (CN c n p *\\<^sub>p c') = head (CN c n p) *\\<^sub>p c'\\<rbrakk>\n    \\<Longrightarrow> head\n                       (CN (CN c n p *\\<^sub>p c') n'\n                         (CN c n p *\\<^sub>p p')) =\n                      head (CN c n p) *\\<^sub>p head (CN c' n' p')", "apply (cases n')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n' < n; isnpolyh p n; isnpolyh c (Suc n); isnpolyh p' n';\n     isnpolyh c' (Suc n'); p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p;\n     head (CN c n p *\\<^sub>p p') = head (CN c n p) *\\<^sub>p head p';\n     c' \\<noteq> 0\\<^sub>p \\<Longrightarrow>\n     head (CN c n p *\\<^sub>p c') = head (CN c n p) *\\<^sub>p c';\n     n' = 0\\<rbrakk>\n    \\<Longrightarrow> head\n                       (CN (CN c n p *\\<^sub>p c') n'\n                         (CN c n p *\\<^sub>p p')) =\n                      head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 2. \\<And>nat.\n       \\<lbrakk>n' < n; isnpolyh p n; isnpolyh c (Suc n); isnpolyh p' n';\n        isnpolyh c' (Suc n'); p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p;\n        head (CN c n p *\\<^sub>p p') = head (CN c n p) *\\<^sub>p head p';\n        c' \\<noteq> 0\\<^sub>p \\<Longrightarrow>\n        head (CN c n p *\\<^sub>p c') = head (CN c n p) *\\<^sub>p c';\n        n' = Suc nat\\<rbrakk>\n       \\<Longrightarrow> head\n                          (CN (CN c n p *\\<^sub>p c') n'\n                            (CN c n p *\\<^sub>p p')) =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>n' < n; isnpolyh p n; isnpolyh c (Suc n); isnpolyh p' n';\n        isnpolyh c' (Suc n'); p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p;\n        head (CN c n p *\\<^sub>p p') = head (CN c n p) *\\<^sub>p head p';\n        c' \\<noteq> 0\\<^sub>p \\<Longrightarrow>\n        head (CN c n p *\\<^sub>p c') = head (CN c n p) *\\<^sub>p c';\n        n' = Suc nat\\<rbrakk>\n       \\<Longrightarrow> head\n                          (CN (CN c n p *\\<^sub>p c') n'\n                            (CN c n p *\\<^sub>p p')) =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')", "apply (cases n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>nat.\n       \\<lbrakk>n' < n; isnpolyh p n; isnpolyh c (Suc n); isnpolyh p' n';\n        isnpolyh c' (Suc n'); p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p;\n        head (CN c n p *\\<^sub>p p') = head (CN c n p) *\\<^sub>p head p';\n        c' \\<noteq> 0\\<^sub>p \\<Longrightarrow>\n        head (CN c n p *\\<^sub>p c') = head (CN c n p) *\\<^sub>p c';\n        n' = Suc nat; n = 0\\<rbrakk>\n       \\<Longrightarrow> head\n                          (CN (CN c n p *\\<^sub>p c') n'\n                            (CN c n p *\\<^sub>p p')) =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 2. \\<And>nat nata.\n       \\<lbrakk>n' < n; isnpolyh p n; isnpolyh c (Suc n); isnpolyh p' n';\n        isnpolyh c' (Suc n'); p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p;\n        head (CN c n p *\\<^sub>p p') = head (CN c n p) *\\<^sub>p head p';\n        c' \\<noteq> 0\\<^sub>p \\<Longrightarrow>\n        head (CN c n p *\\<^sub>p c') = head (CN c n p) *\\<^sub>p c';\n        n' = Suc nat; n = Suc nata\\<rbrakk>\n       \\<Longrightarrow> head\n                          (CN (CN c n p *\\<^sub>p c') n'\n                            (CN c n p *\\<^sub>p p')) =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "}"], ["proof (state)\nthis:\n  n' < n \\<Longrightarrow>\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "moreover"], ["proof (state)\nthis:\n  n' < n \\<Longrightarrow>\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "{"], ["proof (state)\nthis:\n  n' < n \\<Longrightarrow>\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "assume nn': \"n' = n\""], ["proof (state)\nthis:\n  n' = n\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "from nn' polymul_normh[OF norm(5,4)]"], ["proof (chain)\npicking this:\n  n' = n\n  isnpolyh (CN c n p *\\<^sub>p c') (min n (Suc n'))", "have ncnpc':\"isnpolyh (CN c n p *\\<^sub>p c') n\""], ["proof (prove)\nusing this:\n  n' = n\n  isnpolyh (CN c n p *\\<^sub>p c') (min n (Suc n'))\n\ngoal (1 subgoal):\n 1. isnpolyh (CN c n p *\\<^sub>p c') n", "by (simp add: min_def)"], ["proof (state)\nthis:\n  isnpolyh (CN c n p *\\<^sub>p c') n\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "from nn' polymul_normh[OF norm(5,3)] norm"], ["proof (chain)\npicking this:\n  n' = n\n  isnpolyh (CN c n p *\\<^sub>p p') (min n n')\n  isnpolyh p n\n  isnpolyh c (Suc n)\n  isnpolyh p' n'\n  isnpolyh c' (Suc n')\n  isnpolyh (CN c n p) n\n  isnpolyh (CN c' n' p') n'", "have ncnpp':\"isnpolyh (CN c n p *\\<^sub>p p') n\""], ["proof (prove)\nusing this:\n  n' = n\n  isnpolyh (CN c n p *\\<^sub>p p') (min n n')\n  isnpolyh p n\n  isnpolyh c (Suc n)\n  isnpolyh p' n'\n  isnpolyh c' (Suc n')\n  isnpolyh (CN c n p) n\n  isnpolyh (CN c' n' p') n'\n\ngoal (1 subgoal):\n 1. isnpolyh (CN c n p *\\<^sub>p p') n", "by simp"], ["proof (state)\nthis:\n  isnpolyh (CN c n p *\\<^sub>p p') n\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "from nn' ncnpp' polymul_eq0_iff[OF norm(5,3)] norm(6)"], ["proof (chain)\npicking this:\n  n' = n\n  isnpolyh (CN c n p *\\<^sub>p p') n\n  (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  isnpolyh (CN c' n' p') n'", "have ncnpp0':\"isnpolyh (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\""], ["proof (prove)\nusing this:\n  n' = n\n  isnpolyh (CN c n p *\\<^sub>p p') n\n  (CN c n p *\\<^sub>p p' = 0\\<^sub>p) =\n  (CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p)\n  isnpolyh (CN c' n' p') n'\n\ngoal (1 subgoal):\n 1. isnpolyh (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n", "by simp"], ["proof (state)\nthis:\n  isnpolyh (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) n\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "from polyadd_normh[OF ncnpc' ncnpp0']"], ["proof (chain)\npicking this:\n  isnpolyh\n   (CN c n p *\\<^sub>p c' +\\<^sub>p CN 0\\<^sub>p n (CN c n p *\\<^sub>p p'))\n   (min n n)", "have nth: \"isnpolyh ((CN c n p *\\<^sub>p c') +\\<^sub>p (CN 0\\<^sub>p n (CN c n p *\\<^sub>p p'))) n\""], ["proof (prove)\nusing this:\n  isnpolyh\n   (CN c n p *\\<^sub>p c' +\\<^sub>p CN 0\\<^sub>p n (CN c n p *\\<^sub>p p'))\n   (min n n)\n\ngoal (1 subgoal):\n 1. isnpolyh\n     (CN c n p *\\<^sub>p c' +\\<^sub>p\n      CN 0\\<^sub>p n (CN c n p *\\<^sub>p p'))\n     n", "by (simp add: min_def)"], ["proof (state)\nthis:\n  isnpolyh\n   (CN c n p *\\<^sub>p c' +\\<^sub>p CN 0\\<^sub>p n (CN c n p *\\<^sub>p p'))\n   n\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "{"], ["proof (state)\nthis:\n  isnpolyh\n   (CN c n p *\\<^sub>p c' +\\<^sub>p CN 0\\<^sub>p n (CN c n p *\\<^sub>p p'))\n   n\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "assume np: \"n > 0\""], ["proof (state)\nthis:\n  0 < n\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "with nn' head_isnpolyh_Suc'[OF np nth]\n        head_isnpolyh_Suc'[OF np norm(5)] head_isnpolyh_Suc'[OF np norm(6)[simplified nn']]"], ["proof (chain)\npicking this:\n  n' = n\n  head\n   (CN c n p *\\<^sub>p c' +\\<^sub>p\n    CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) =\n  CN c n p *\\<^sub>p c' +\\<^sub>p CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')\n  head (CN c n p) = CN c n p\n  head (CN c' n p') = CN c' n p'\n  0 < n", "have ?case"], ["proof (prove)\nusing this:\n  n' = n\n  head\n   (CN c n p *\\<^sub>p c' +\\<^sub>p\n    CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')) =\n  CN c n p *\\<^sub>p c' +\\<^sub>p CN 0\\<^sub>p n (CN c n p *\\<^sub>p p')\n  head (CN c n p) = CN c n p\n  head (CN c' n p') = CN c' n p'\n  0 < n\n\ngoal (1 subgoal):\n 1. head (CN c n p *\\<^sub>p CN c' n' p') =\n    head (CN c n p) *\\<^sub>p head (CN c' n' p')", "by simp"], ["proof (state)\nthis:\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "}"], ["proof (state)\nthis:\n  0 < n \\<Longrightarrow>\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "moreover"], ["proof (state)\nthis:\n  0 < n \\<Longrightarrow>\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "{"], ["proof (state)\nthis:\n  0 < n \\<Longrightarrow>\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "assume nz: \"n = 0\""], ["proof (state)\nthis:\n  n = 0\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "from polymul_degreen[OF norm(5,4), where m=\"0\"]\n        polymul_degreen[OF norm(5,3), where m=\"0\"] nn' nz degree_eq_degreen0\n      norm(5,6) degree_npolyhCN[OF norm(6)]"], ["proof (chain)\npicking this:\n  0 \\<le> min n (Suc n') \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p c') 0 =\n  (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p then 0\n   else degreen (CN c n p) 0 + degreen c' 0)\n  0 \\<le> min n n' \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p p') 0 =\n  (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) 0 + degreen p' 0)\n  n' = n\n  n = 0\n  Polynomial_Expression.degree ?p = degreen ?p 0\n  isnpolyh (CN c n p) n\n  isnpolyh (CN c' n' p') n'\n  Polynomial_Expression.degree c' = 0", "have dth: \"degree (CN c 0 p *\\<^sub>p c') < degree (CN 0\\<^sub>p 0 (CN c 0 p *\\<^sub>p p'))\""], ["proof (prove)\nusing this:\n  0 \\<le> min n (Suc n') \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p c') 0 =\n  (if CN c n p = 0\\<^sub>p \\<or> c' = 0\\<^sub>p then 0\n   else degreen (CN c n p) 0 + degreen c' 0)\n  0 \\<le> min n n' \\<Longrightarrow>\n  degreen (CN c n p *\\<^sub>p p') 0 =\n  (if CN c n p = 0\\<^sub>p \\<or> p' = 0\\<^sub>p then 0\n   else degreen (CN c n p) 0 + degreen p' 0)\n  n' = n\n  n = 0\n  Polynomial_Expression.degree ?p = degreen ?p 0\n  isnpolyh (CN c n p) n\n  isnpolyh (CN c' n' p') n'\n  Polynomial_Expression.degree c' = 0\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (CN c 0 p *\\<^sub>p c')\n    < Polynomial_Expression.degree (CN 0\\<^sub>p 0 (CN c 0 p *\\<^sub>p p'))", "by (smt \"4.prems\"(4) One_nat_def add_Suc add_less_imp_less_left comm_monoid_add_class.add_0 degree.simps(1) eq_imp_le gr_implies_not0 head.simps(1) head_nz min_0L norm(3) not_less_eq)"], ["proof (state)\nthis:\n  Polynomial_Expression.degree (CN c 0 p *\\<^sub>p c')\n  < Polynomial_Expression.degree (CN 0\\<^sub>p 0 (CN c 0 p *\\<^sub>p p'))\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "then"], ["proof (chain)\npicking this:\n  Polynomial_Expression.degree (CN c 0 p *\\<^sub>p c')\n  < Polynomial_Expression.degree (CN 0\\<^sub>p 0 (CN c 0 p *\\<^sub>p p'))", "have dth': \"degree (CN c 0 p *\\<^sub>p c') \\<noteq> degree (CN 0\\<^sub>p 0 (CN c 0 p *\\<^sub>p p'))\""], ["proof (prove)\nusing this:\n  Polynomial_Expression.degree (CN c 0 p *\\<^sub>p c')\n  < Polynomial_Expression.degree (CN 0\\<^sub>p 0 (CN c 0 p *\\<^sub>p p'))\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (CN c 0 p *\\<^sub>p c') \\<noteq>\n    Polynomial_Expression.degree (CN 0\\<^sub>p 0 (CN c 0 p *\\<^sub>p p'))", "by simp"], ["proof (state)\nthis:\n  Polynomial_Expression.degree (CN c 0 p *\\<^sub>p c') \\<noteq>\n  Polynomial_Expression.degree (CN 0\\<^sub>p 0 (CN c 0 p *\\<^sub>p p'))\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "from polyadd_head[OF ncnpc'[simplified nz] ncnpp0'[simplified nz] dth'] dth"], ["proof (chain)\npicking this:\n  head\n   (CN c 0 p *\\<^sub>p c' +\\<^sub>p\n    CN 0\\<^sub>p 0 (CN c 0 p *\\<^sub>p p')) =\n  (if Polynomial_Expression.degree (CN c 0 p *\\<^sub>p c')\n      < Polynomial_Expression.degree\n         (CN 0\\<^sub>p 0 (CN c 0 p *\\<^sub>p p'))\n   then head (CN 0\\<^sub>p 0 (CN c 0 p *\\<^sub>p p'))\n   else head (CN c 0 p *\\<^sub>p c'))\n  Polynomial_Expression.degree (CN c 0 p *\\<^sub>p c')\n  < Polynomial_Expression.degree (CN 0\\<^sub>p 0 (CN c 0 p *\\<^sub>p p'))", "have ?case"], ["proof (prove)\nusing this:\n  head\n   (CN c 0 p *\\<^sub>p c' +\\<^sub>p\n    CN 0\\<^sub>p 0 (CN c 0 p *\\<^sub>p p')) =\n  (if Polynomial_Expression.degree (CN c 0 p *\\<^sub>p c')\n      < Polynomial_Expression.degree\n         (CN 0\\<^sub>p 0 (CN c 0 p *\\<^sub>p p'))\n   then head (CN 0\\<^sub>p 0 (CN c 0 p *\\<^sub>p p'))\n   else head (CN c 0 p *\\<^sub>p c'))\n  Polynomial_Expression.degree (CN c 0 p *\\<^sub>p c')\n  < Polynomial_Expression.degree (CN 0\\<^sub>p 0 (CN c 0 p *\\<^sub>p p'))\n\ngoal (1 subgoal):\n 1. head (CN c n p *\\<^sub>p CN c' n' p') =\n    head (CN c n p) *\\<^sub>p head (CN c' n' p')", "using norm \"4.hyps\"(6)[OF norm(5,3)] \"4.hyps\"(5)[OF norm(5,4)] nn' nz"], ["proof (prove)\nusing this:\n  head\n   (CN c 0 p *\\<^sub>p c' +\\<^sub>p\n    CN 0\\<^sub>p 0 (CN c 0 p *\\<^sub>p p')) =\n  (if Polynomial_Expression.degree (CN c 0 p *\\<^sub>p c')\n      < Polynomial_Expression.degree\n         (CN 0\\<^sub>p 0 (CN c 0 p *\\<^sub>p p'))\n   then head (CN 0\\<^sub>p 0 (CN c 0 p *\\<^sub>p p'))\n   else head (CN c 0 p *\\<^sub>p c'))\n  Polynomial_Expression.degree (CN c 0 p *\\<^sub>p c')\n  < Polynomial_Expression.degree (CN 0\\<^sub>p 0 (CN c 0 p *\\<^sub>p p'))\n  isnpolyh p n\n  isnpolyh c (Suc n)\n  isnpolyh p' n'\n  isnpolyh c' (Suc n')\n  isnpolyh (CN c n p) n\n  isnpolyh (CN c' n' p') n'\n  \\<lbrakk>CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                    head (CN c n p) *\\<^sub>p head p'\n  \\<lbrakk>CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n  \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                    head (CN c n p) *\\<^sub>p head c'\n  n' = n\n  n = 0\n\ngoal (1 subgoal):\n 1. head (CN c n p *\\<^sub>p CN c' n' p') =\n    head (CN c n p) *\\<^sub>p head (CN c' n' p')", "by simp"], ["proof (state)\nthis:\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "}"], ["proof (state)\nthis:\n  n = 0 \\<Longrightarrow>\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  0 < n \\<Longrightarrow>\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n  n = 0 \\<Longrightarrow>\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')", "have ?case"], ["proof (prove)\nusing this:\n  0 < n \\<Longrightarrow>\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n  n = 0 \\<Longrightarrow>\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n\ngoal (1 subgoal):\n 1. head (CN c n p *\\<^sub>p CN c' n' p') =\n    head (CN c n p) *\\<^sub>p head (CN c' n' p')", "by (cases n) auto"], ["proof (state)\nthis:\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "}"], ["proof (state)\nthis:\n  n' = n \\<Longrightarrow>\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n\ngoal (26 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>c n p c' n' p' n0 n1.\n       \\<lbrakk>\\<And>n0 n1.\n                   \\<lbrakk>isnpolyh c n0; isnpolyh (CN c' n' p') n1;\n                    c \\<noteq> 0\\<^sub>p;\n                    CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n                   \\<Longrightarrow> head (c *\\<^sub>p CN c' n' p') =\n                                     head c *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh p n0; isnpolyh (CN c' n' p') n1;\n            p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (p *\\<^sub>p CN c' n' p') =\n                             head p *\\<^sub>p head (CN c' n' p');\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh c' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; c' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p c') =\n                             head (CN c n p) *\\<^sub>p head c';\n        \\<And>n0 n1.\n           \\<lbrakk>isnpolyh (CN c n p) n0; isnpolyh p' n1;\n            CN c n p \\<noteq> 0\\<^sub>p; p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n           \\<Longrightarrow> head (CN c n p *\\<^sub>p p') =\n                             head (CN c n p) *\\<^sub>p head p';\n        isnpolyh (CN c n p) n0; isnpolyh (CN c' n' p') n1;\n        CN c n p \\<noteq> 0\\<^sub>p; CN c' n' p' \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN c n p *\\<^sub>p CN c' n' p') =\n                         head (CN c n p) *\\<^sub>p head (CN c' n' p')\n 3. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 6. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 7. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 8. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 9. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Add vc vd)\nA total of 26 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  n < n' \\<or> n' < n \\<or> n = n'\n  n < n' \\<Longrightarrow>\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n  n' < n \\<Longrightarrow>\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n  n' = n \\<Longrightarrow>\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')", "show ?case"], ["proof (prove)\nusing this:\n  n < n' \\<or> n' < n \\<or> n = n'\n  n < n' \\<Longrightarrow>\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n  n' < n \\<Longrightarrow>\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n  n' = n \\<Longrightarrow>\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n\ngoal (1 subgoal):\n 1. head (CN c n p *\\<^sub>p CN c' n' p') =\n    head (CN c n p) *\\<^sub>p head (CN c' n' p')", "by blast"], ["proof (state)\nthis:\n  head (CN c n p *\\<^sub>p CN c' n' p') =\n  head (CN c n p) *\\<^sub>p head (CN c' n' p')\n\ngoal (25 subgoals):\n 1. \\<And>c c' n0 n1.\n       \\<lbrakk>isnpolyh (c)\\<^sub>p n0; isnpolyh (c')\\<^sub>p n1;\n        (c)\\<^sub>p \\<noteq> 0\\<^sub>p;\n        (c')\\<^sub>p \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head ((c)\\<^sub>p *\\<^sub>p (c')\\<^sub>p) =\n                         head (c)\\<^sub>p *\\<^sub>p head (c')\\<^sub>p\n 2. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Bound v) n0; isnpolyh b n1;\n        Bound v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Bound v *\\<^sub>p b) =\n                         head (Bound v) *\\<^sub>p head b\n 3. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Add v va) n0; isnpolyh b n1;\n        Add v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Add v va *\\<^sub>p b) =\n                         head (Add v va) *\\<^sub>p head b\n 4. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Sub v va) n0; isnpolyh b n1;\n        Sub v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Sub v va *\\<^sub>p b) =\n                         head (Sub v va) *\\<^sub>p head b\n 5. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Mul v va) n0; isnpolyh b n1;\n        Mul v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Mul v va *\\<^sub>p b) =\n                         head (Mul v va) *\\<^sub>p head b\n 6. \\<And>v b n0 n1.\n       \\<lbrakk>isnpolyh (Neg v) n0; isnpolyh b n1;\n        Neg v \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Neg v *\\<^sub>p b) =\n                         head (Neg v) *\\<^sub>p head b\n 7. \\<And>v va b n0 n1.\n       \\<lbrakk>isnpolyh (Pw v va) n0; isnpolyh b n1;\n        Pw v va \\<noteq> 0\\<^sub>p; b \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (Pw v va *\\<^sub>p b) =\n                         head (Pw v va) *\\<^sub>p head b\n 8. \\<And>v va vb vc n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Bound vc) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Bound vc \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Bound vc) =\n                         head (CN v va vb) *\\<^sub>p head (Bound vc)\n 9. \\<And>v va vb vc vd n0 n1.\n       \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Add vc vd) n1;\n        CN v va vb \\<noteq> 0\\<^sub>p; Add vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> head (CN v va vb *\\<^sub>p Add vc vd) =\n                         head (CN v va vb) *\\<^sub>p head (Add vc vd)\n 10. \\<And>v va vb vc vd n0 n1.\n        \\<lbrakk>isnpolyh (CN v va vb) n0; isnpolyh (Sub vc vd) n1;\n         CN v va vb \\<noteq> 0\\<^sub>p;\n         Sub vc vd \\<noteq> 0\\<^sub>p\\<rbrakk>\n        \\<Longrightarrow> head (CN v va vb *\\<^sub>p Sub vc vd) =\n                          head (CN v va vb) *\\<^sub>p head (Sub vc vd)\nA total of 25 subgoals...", "qed simp_all"], ["", "lemma degree_coefficients: \"degree p = length (coefficients p) - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree p = length (coefficients p) - 1", "by (induct p rule: degree.induct) auto"], ["", "lemma degree_head[simp]: \"degree (head p) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (head p) = 0", "by (induct p rule: head.induct) auto"], ["", "lemma degree_CN: \"isnpolyh p n \\<Longrightarrow> degree (CN c n p) \\<le> 1 + degree p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p n \\<Longrightarrow>\n    Polynomial_Expression.degree (CN c n p)\n    \\<le> 1 + Polynomial_Expression.degree p", "by (cases n) simp_all"], ["", "lemma degree_CN': \"isnpolyh p n \\<Longrightarrow> degree (CN c n p) \\<ge>  degree p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p n \\<Longrightarrow>\n    Polynomial_Expression.degree p\n    \\<le> Polynomial_Expression.degree (CN c n p)", "by (cases n) simp_all"], ["", "lemma polyadd_different_degree:\n  \"isnpolyh p n0 \\<Longrightarrow> isnpolyh q n1 \\<Longrightarrow> degree p \\<noteq> degree q \\<Longrightarrow>\n    degree (polyadd p q) = max (degree p) (degree q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>isnpolyh p n0; isnpolyh q n1;\n     Polynomial_Expression.degree p \\<noteq>\n     Polynomial_Expression.degree q\\<rbrakk>\n    \\<Longrightarrow> Polynomial_Expression.degree (p +\\<^sub>p q) =\n                      max (Polynomial_Expression.degree p)\n                       (Polynomial_Expression.degree q)", "by (simp add: degree_eq_degreen0 polyadd_different_degreen)"], ["", "lemma degreen_polyneg: \"isnpolyh p n0 \\<Longrightarrow> degreen (~\\<^sub>p p) m = degreen p m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p n0 \\<Longrightarrow> degreen (~\\<^sub>p p) m = degreen p m", "by (induct p arbitrary: n0 rule: polyneg.induct) auto"], ["", "lemma degree_polymul:\n  fixes p :: \"'a::field poly\"\n  assumes np: \"isnpolyh p n0\"\n    and nq: \"isnpolyh q n1\"\n  shows \"degree (p *\\<^sub>p q) \\<le> degree p + degree q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (p *\\<^sub>p q)\n    \\<le> Polynomial_Expression.degree p + Polynomial_Expression.degree q", "using polymul_degreen[OF np nq, where m=\"0\"]"], ["proof (prove)\nusing this:\n  0 \\<le> min n0 n1 \\<Longrightarrow>\n  degreen (p *\\<^sub>p q) 0 =\n  (if p = 0\\<^sub>p \\<or> q = 0\\<^sub>p then 0\n   else degreen p 0 + degreen q 0)\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree (p *\\<^sub>p q)\n    \\<le> Polynomial_Expression.degree p + Polynomial_Expression.degree q", "by (simp add: degree_eq_degreen0)"], ["", "lemma polyneg_degree: \"isnpolyh p n \\<Longrightarrow> degree (polyneg p) = degree p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p n \\<Longrightarrow>\n    Polynomial_Expression.degree (~\\<^sub>p p) =\n    Polynomial_Expression.degree p", "by (induct p arbitrary: n rule: degree.induct) auto"], ["", "lemma polyneg_head: \"isnpolyh p n \\<Longrightarrow> head (polyneg p) = polyneg (head p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p n \\<Longrightarrow> head (~\\<^sub>p p) = ~\\<^sub>p (head p)", "by (induct p arbitrary: n rule: degree.induct) auto"], ["", "subsection \\<open>Correctness of polynomial pseudo division\\<close>"], ["", "(*lemma polydivide_aux_properties:\n  fixes p :: \"'a::field poly\"\n  assumes np: \"isnpolyh p n0\"\n    and ns: \"isnpolyh s n1\"\n    and ap: \"head p = a\"\n    and ndp: \"degree p = n\"\n    and pnz: \"p \\<noteq> 0\\<^sub>p\"\n  shows \"polydivide_aux a n p k s = (k', r) \\<longrightarrow> k' \\<ge> k \\<and> (degree r = 0 \\<or> degree r < degree p) \\<and>\n    (\\<exists>nr. isnpolyh r nr) \\<and> (\\<exists>q n1. isnpolyh q n1 \\<and> (polypow (k' - k) a) *\\<^sub>p s = p *\\<^sub>p q +\\<^sub>p r)\"\n  using ns\nproof (induct \"degree s\" arbitrary: s k k' r n1 rule: less_induct)\n  case less\n  let ?qths = \"\\<exists>q n1. isnpolyh q n1 \\<and> (a ^\\<^sub>p (k' - k) *\\<^sub>p s = p *\\<^sub>p q +\\<^sub>p r)\"\n  let ?ths = \"polydivide_aux a n p k s = (k', r) \\<longrightarrow>  k \\<le> k' \\<and>\n    (degree r = 0 \\<or> degree r < degree p) \\<and> (\\<exists>nr. isnpolyh r nr) \\<and> ?qths\"\n  let ?b = \"head s\"\n  let ?p' = \"funpow (degree s - n) shift1 p\"\n  let ?xdn = \"funpow (degree s - n) shift1 (1)\\<^sub>p\"\n  let ?akk' = \"a ^\\<^sub>p (k' - k)\"\n  note ns = \\<open>isnpolyh s n1\\<close>\n  from np have np0: \"isnpolyh p 0\"\n    using isnpolyh_mono[where n=\"n0\" and n'=\"0\" and p=\"p\"] by simp\n  have np': \"isnpolyh ?p' 0\"\n    using funpow_shift1_isnpoly[OF np0[simplified isnpoly_def[symmetric]] pnz, where n=\"degree s - n\"]\n    by (simp add: isnpoly_def)\n  have headp': \"head ?p' = head p\"\n    using funpow_shift1_head[OF np pnz] by simp\n  from funpow_shift1_isnpoly[where p=\"(1)\\<^sub>p\"] have nxdn: \"isnpolyh ?xdn 0\"\n    (*by (simp add: isnpoly_def)*)\n    sorry\n  from polypow_normh [OF head_isnpolyh[OF np0], where k=\"k' - k\"] ap\n  have nakk':\"isnpolyh ?akk' 0\" by blast\n  {\n    assume sz: \"s = 0\\<^sub>p\"\n    then have ?ths\n      using np polydivide_aux.simps\n      apply clarsimp\n      apply (rule exI[where x=\"0\\<^sub>p\"])\n      apply simp\n      done\n  }\n  moreover\n  {\n    assume sz: \"s \\<noteq> 0\\<^sub>p\"\n    {\n      assume dn: \"degree s < n\"\n      then have \"?ths\"\n        using ns ndp np polydivide_aux.simps\n        apply auto\n        apply (rule exI[where x=\"0\\<^sub>p\"])\n        apply simp\n        done\n    }\n    moreover\n    {\n      assume dn': \"\\<not> degree s < n\"\n      then have dn: \"degree s \\<ge> n\"\n        by arith\n      have degsp': \"degree s = degree ?p'\"\n        using dn ndp funpow_shift1_degree[where k = \"degree s - n\" and p=\"p\"]\n        by simp\n      {\n        assume ba: \"?b = a\"\n        then have headsp': \"head s = head ?p'\"\n          using ap headp' by simp\n        have nr: \"isnpolyh (s -\\<^sub>p ?p') 0\"\n          using polysub_normh[OF ns np'] by simp\n        from degree_polysub_samehead[OF ns np' headsp' degsp']\n        have \"degree (s -\\<^sub>p ?p') < degree s \\<or> s -\\<^sub>p ?p' = 0\\<^sub>p\"\n          by simp\n        moreover\n        {\n          assume deglt:\"degree (s -\\<^sub>p ?p') < degree s\"\n          from polydivide_aux.simps sz dn' ba\n          have eq: \"polydivide_aux a n p k s = polydivide_aux a n p k (s -\\<^sub>p ?p')\"\n            by (simp add: Let_def)\n          {\n            assume h1: \"polydivide_aux a n p k s = (k', r)\"\n            from less(1)[OF deglt nr, of k k' r] trans[OF eq[symmetric] h1]\n            have kk': \"k \\<le> k'\"\n              and nr: \"\\<exists>nr. isnpolyh r nr\"\n              and dr: \"degree r = 0 \\<or> degree r < degree p\"\n              and q1: \"\\<exists>q nq. isnpolyh q nq \\<and> a ^\\<^sub>p k' - k *\\<^sub>p (s -\\<^sub>p ?p') = p *\\<^sub>p q +\\<^sub>p r\"\n              by auto\n            from q1 obtain q n1 where nq: \"isnpolyh q n1\"\n              and asp: \"a^\\<^sub>p (k' - k) *\\<^sub>p (s -\\<^sub>p ?p') = p *\\<^sub>p q +\\<^sub>p r\"\n              by blast\n            from nr obtain nr where nr': \"isnpolyh r nr\"\n              by blast\n            from polymul_normh[OF nakk' ns] have nakks': \"isnpolyh (a ^\\<^sub>p (k' - k) *\\<^sub>p s) 0\"\n              by simp\n            from polyadd_normh[OF polymul_normh[OF nakk' nxdn] nq]\n            have nq': \"isnpolyh (?akk' *\\<^sub>p ?xdn +\\<^sub>p q) 0\" by simp\n            from polyadd_normh[OF polymul_normh[OF np\n              polyadd_normh[OF polymul_normh[OF nakk' nxdn] nq]] nr']\n            have nqr': \"isnpolyh (p *\\<^sub>p (?akk' *\\<^sub>p ?xdn +\\<^sub>p q) +\\<^sub>p r) 0\"\n              by simp\n            from asp have \"\\<forall>bs :: 'a::{field_char_0,field} list.\n              Ipoly bs (a^\\<^sub>p (k' - k) *\\<^sub>p (s -\\<^sub>p ?p')) = Ipoly bs (p *\\<^sub>p q +\\<^sub>p r)\"\n              by simp\n            then have \"\\<forall>bs :: 'a::{field_char_0,field} list.\n              Ipoly bs (a^\\<^sub>p (k' - k)*\\<^sub>p s) =\n              Ipoly bs (a^\\<^sub>p (k' - k)) * Ipoly bs ?p' + Ipoly bs p * Ipoly bs q + Ipoly bs r\"\n              by (simp add: field_simps)\n            then have \"\\<forall>bs :: 'a::{field_char_0,field} list.\n              Ipoly bs (a ^\\<^sub>p (k' - k) *\\<^sub>p s) =\n              Ipoly bs (a^\\<^sub>p (k' - k)) * Ipoly bs (funpow (degree s - n) shift1 (1)\\<^sub>p *\\<^sub>p p) +\n              Ipoly bs p * Ipoly bs q + Ipoly bs r\"\n              by (auto simp only: funpow_shift1_1)\n            then have \"\\<forall>bs:: 'a::{field_char_0,field} list.\n              Ipoly bs (a ^\\<^sub>p (k' - k) *\\<^sub>p s) =\n              Ipoly bs p * (Ipoly bs (a^\\<^sub>p (k' - k)) * Ipoly bs (funpow (degree s - n) shift1 (1)\\<^sub>p) +\n              Ipoly bs q) + Ipoly bs r\"\n              by (simp add: field_simps)\n            then have \"\\<forall>bs:: 'a::{field_char_0,field} list.\n              Ipoly bs (a ^\\<^sub>p (k' - k) *\\<^sub>p s) =\n              Ipoly bs (p *\\<^sub>p ((a^\\<^sub>p (k' - k)) *\\<^sub>p (funpow (degree s - n) shift1 (1)\\<^sub>p) +\\<^sub>p q) +\\<^sub>p r)\"\n              by simp\n            with isnpolyh_unique[OF nakks' nqr']\n            have \"a ^\\<^sub>p (k' - k) *\\<^sub>p s =\n              p *\\<^sub>p ((a^\\<^sub>p (k' - k)) *\\<^sub>p (funpow (degree s - n) shift1 (1)\\<^sub>p) +\\<^sub>p q) +\\<^sub>p r\"\n              by blast\n            then have ?qths using nq'\n              apply (rule_tac x=\"(a^\\<^sub>p (k' - k)) *\\<^sub>p (funpow (degree s - n) shift1 (1)\\<^sub>p) +\\<^sub>p q\" in exI)\n              apply (rule_tac x=\"0\" in exI)\n              apply simp\n              done\n            with kk' nr dr have \"k \\<le> k' \\<and> (degree r = 0 \\<or> degree r < degree p) \\<and>\n              (\\<exists>nr. isnpolyh r nr) \\<and> ?qths\"\n              by blast\n          }\n          then have ?ths by blast\n        }\n        moreover\n        {\n          assume spz:\"s -\\<^sub>p ?p' = 0\\<^sub>p\"\n          from spz isnpolyh_unique[OF polysub_normh[OF ns np'], where q=\"0\\<^sub>p\", symmetric, where ?'a = \"'a::{field_char_0,field}\"]\n          have \"\\<forall>bs:: 'a::{field_char_0,field} list. Ipoly bs s = Ipoly bs ?p'\"\n            by simp\n          then have \"\\<forall>bs:: 'a::{field_char_0,field} list. Ipoly bs s = Ipoly bs (?xdn *\\<^sub>p p)\"\n            using np nxdn\n            apply simp\n            apply (simp only: funpow_shift1_1)\n            apply simp\n            done\n          then have sp': \"s = ?xdn *\\<^sub>p p\"\n            using isnpolyh_unique[OF ns polymul_normh[OF nxdn np]]\n            by blast\n          {\n            assume h1: \"polydivide_aux a n p k s = (k', r)\"\n            from polydivide_aux.simps sz dn' ba\n            have eq: \"polydivide_aux a n p k s = polydivide_aux a n p k (s -\\<^sub>p ?p')\"\n              by (simp add: Let_def)\n            also have \"\\<dots> = (k,0\\<^sub>p)\"\n              using polydivide_aux.simps spz by simp\n            finally have \"(k', r) = (k, 0\\<^sub>p)\"\n              using h1 by simp\n            with sp'[symmetric] ns np nxdn polyadd_0(1)[OF polymul_normh[OF np nxdn]]\n              polyadd_0(2)[OF polymul_normh[OF np nxdn]] have ?ths\n              apply auto\n              apply (rule exI[where x=\"?xdn\"])\n              apply (auto simp add: polymul_commute[of p])\n              done\n          }\n        }\n        ultimately have ?ths by blast\n      }\n      moreover\n      {\n        assume ba: \"?b \\<noteq> a\"\n        from polysub_normh[OF polymul_normh[OF head_isnpolyh[OF np0, simplified ap] ns]\n          polymul_normh[OF head_isnpolyh[OF ns] np']]\n        have nth: \"isnpolyh ((a *\\<^sub>p s) -\\<^sub>p (?b *\\<^sub>p ?p')) 0\"\n          by (simp add: min_def)\n        have nzths: \"a *\\<^sub>p s \\<noteq> 0\\<^sub>p\" \"?b *\\<^sub>p ?p' \\<noteq> 0\\<^sub>p\"\n          using polymul_eq0_iff[OF head_isnpolyh[OF np0, simplified ap] ns]\n            polymul_eq0_iff[OF head_isnpolyh[OF ns] np']head_nz[OF np0] ap pnz sz head_nz[OF ns]\n            funpow_shift1_nz[OF pnz]\n          by simp_all\n        from polymul_head_polyeq[OF head_isnpolyh[OF np] ns] head_nz[OF np] sz ap head_head[OF np] pnz\n          polymul_head_polyeq[OF head_isnpolyh[OF ns] np'] head_nz [OF ns] sz funpow_shift1_nz[OF pnz, where n=\"degree s - n\"]\n        have hdth: \"head (a *\\<^sub>p s) = head (?b *\\<^sub>p ?p')\"\n          using head_head[OF ns] funpow_shift1_head[OF np pnz]\n            polymul_commute[OF head_isnpolyh[OF np] head_isnpolyh[OF ns]]\n          by (simp add: ap)\n        from polymul_degreen[OF head_isnpolyh[OF np] ns, where m=\"0\"]\n          head_nz[OF np] pnz sz ap[symmetric]\n          funpow_shift1_nz[OF pnz, where n=\"degree s - n\"]\n          polymul_degreen[OF head_isnpolyh[OF ns] np', where m=\"0\"] head_nz[OF ns]\n          ndp dn\n        have degth: \"degree (a *\\<^sub>p s) = degree (?b *\\<^sub>p ?p')\"\n          by (simp add: degree_eq_degreen0[symmetric] funpow_shift1_degree)\n        {\n          assume dth: \"degree ((a *\\<^sub>p s) -\\<^sub>p (?b *\\<^sub>p ?p')) < degree s\"\n          from polysub_normh[OF polymul_normh[OF head_isnpolyh[OF np] ns]\n            polymul_normh[OF head_isnpolyh[OF ns]np']] ap\n          have nasbp': \"isnpolyh ((a *\\<^sub>p s) -\\<^sub>p (?b *\\<^sub>p ?p')) 0\"\n            by simp\n          {\n            assume h1:\"polydivide_aux a n p k s = (k', r)\"\n            from h1 polydivide_aux.simps sz dn' ba\n            have eq:\"polydivide_aux a n p (Suc k) ((a *\\<^sub>p s) -\\<^sub>p (?b *\\<^sub>p ?p')) = (k',r)\"\n              by (simp add: Let_def)\n            with less(1)[OF dth nasbp', of \"Suc k\" k' r]\n            obtain q nq nr where kk': \"Suc k \\<le> k'\"\n              and nr: \"isnpolyh r nr\"\n              and nq: \"isnpolyh q nq\"\n              and dr: \"degree r = 0 \\<or> degree r < degree p\"\n              and qr: \"a ^\\<^sub>p (k' - Suc k) *\\<^sub>p ((a *\\<^sub>p s) -\\<^sub>p (?b *\\<^sub>p ?p')) = p *\\<^sub>p q +\\<^sub>p r\"\n              by auto\n            from kk' have kk'': \"Suc (k' - Suc k) = k' - k\"\n              by arith\n            {\n              fix bs :: \"'a::{field_char_0,field} list\"\n              from qr isnpolyh_unique[OF polypow_normh[OF head_isnpolyh[OF np], where k=\"k' - Suc k\", simplified ap] nasbp', symmetric]\n              have \"Ipoly bs (a ^\\<^sub>p (k' - Suc k) *\\<^sub>p ((a *\\<^sub>p s) -\\<^sub>p (?b *\\<^sub>p ?p'))) = Ipoly bs (p *\\<^sub>p q +\\<^sub>p r)\"\n                by simp\n              then have \"Ipoly bs a ^ (Suc (k' - Suc k)) * Ipoly bs s =\n                Ipoly bs p * Ipoly bs q + Ipoly bs a ^ (k' - Suc k) * Ipoly bs ?b * Ipoly bs ?p' + Ipoly bs r\"\n                by (simp add: field_simps)\n              then have \"Ipoly bs a ^ (k' - k)  * Ipoly bs s =\n                Ipoly bs p * Ipoly bs q + Ipoly bs a ^ (k' - Suc k) * Ipoly bs ?b * Ipoly bs ?xdn * Ipoly bs p + Ipoly bs r\"\n                by (simp add: kk'' funpow_shift1_1[where n=\"degree s - n\" and p=\"p\"])\n              then have \"Ipoly bs (a ^\\<^sub>p (k' - k) *\\<^sub>p s) =\n                Ipoly bs p * (Ipoly bs q + Ipoly bs a ^ (k' - Suc k) * Ipoly bs ?b * Ipoly bs ?xdn) + Ipoly bs r\"\n                by (simp add: field_simps)\n            }\n            then have ieq:\"\\<forall>bs :: 'a::{field_char_0,field} list.\n                Ipoly bs (a ^\\<^sub>p (k' - k) *\\<^sub>p s) =\n                Ipoly bs (p *\\<^sub>p (q +\\<^sub>p (a ^\\<^sub>p (k' - Suc k) *\\<^sub>p ?b *\\<^sub>p ?xdn)) +\\<^sub>p r)\"\n              by auto\n            let ?q = \"q +\\<^sub>p (a ^\\<^sub>p (k' - Suc k) *\\<^sub>p ?b *\\<^sub>p ?xdn)\"\n            from polyadd_normh[OF nq polymul_normh[OF polymul_normh[OF polypow_normh[OF head_isnpolyh[OF np], where k=\"k' - Suc k\"] head_isnpolyh[OF ns], simplified ap] nxdn]]\n            have nqw: \"isnpolyh ?q 0\"\n              by simp\n            from ieq isnpolyh_unique[OF polymul_normh[OF polypow_normh[OF head_isnpolyh[OF np], where k=\"k' - k\"] ns, simplified ap] polyadd_normh[OF polymul_normh[OF np nqw] nr]]\n            have asth: \"(a ^\\<^sub>p (k' - k) *\\<^sub>p s) = p *\\<^sub>p (q +\\<^sub>p (a ^\\<^sub>p (k' - Suc k) *\\<^sub>p ?b *\\<^sub>p ?xdn)) +\\<^sub>p r\"\n              by blast\n            from dr kk' nr h1 asth nqw have ?ths\n              apply simp\n              apply (rule conjI)\n              apply (rule exI[where x=\"nr\"], simp)\n              apply (rule exI[where x=\"(q +\\<^sub>p (a ^\\<^sub>p (k' - Suc k) *\\<^sub>p ?b *\\<^sub>p ?xdn))\"], simp)\n              apply (rule exI[where x=\"0\"], simp)\n              done\n          }\n          then have ?ths by blast\n        }\n        moreover\n        {\n          assume spz: \"a *\\<^sub>p s -\\<^sub>p (?b *\\<^sub>p ?p') = 0\\<^sub>p\"\n          {\n            fix bs :: \"'a::{field_char_0,field} list\"\n            from isnpolyh_unique[OF nth, where ?'a=\"'a\" and q=\"0\\<^sub>p\",simplified,symmetric] spz\n            have \"Ipoly bs (a*\\<^sub>p s) = Ipoly bs ?b * Ipoly bs ?p'\"\n              by simp\n            then have \"Ipoly bs (a*\\<^sub>p s) = Ipoly bs (?b *\\<^sub>p ?xdn) * Ipoly bs p\"\n              by (simp add: funpow_shift1_1[where n=\"degree s - n\" and p=\"p\"])\n            then have \"Ipoly bs (a*\\<^sub>p s) = Ipoly bs (p *\\<^sub>p (?b *\\<^sub>p ?xdn))\"\n              by simp\n          }\n          then have hth: \"\\<forall>bs :: 'a::{field_char_0,field} list.\n            Ipoly bs (a *\\<^sub>p s) = Ipoly bs (p *\\<^sub>p (?b *\\<^sub>p ?xdn))\" ..\n          from hth have asq: \"a *\\<^sub>p s = p *\\<^sub>p (?b *\\<^sub>p ?xdn)\"\n            using isnpolyh_unique[where ?'a = \"'a::{field_char_0,field}\", OF polymul_normh[OF head_isnpolyh[OF np] ns]\n                    polymul_normh[OF np polymul_normh[OF head_isnpolyh[OF ns] nxdn]],\n              simplified ap]\n            by simp\n          {\n            assume h1: \"polydivide_aux a n p k s = (k', r)\"\n            from h1 sz ba dn' spz polydivide_aux.simps polydivide_aux.simps\n            have \"(k', r) = (Suc k, 0\\<^sub>p)\"\n              by (simp add: Let_def)\n            with h1 np head_isnpolyh[OF np, simplified ap] ns polymul_normh[OF head_isnpolyh[OF ns] nxdn]\n              polymul_normh[OF np polymul_normh[OF head_isnpolyh[OF ns] nxdn]] asq\n            have ?ths\n              apply (clarsimp simp add: Let_def)\n              apply (rule exI[where x=\"?b *\\<^sub>p ?xdn\"])\n              apply simp\n              apply (rule exI[where x=\"0\"], simp)\n              done\n          }\n          then have ?ths by blast\n        }\n        ultimately have ?ths\n          using degree_polysub_samehead[OF polymul_normh[OF head_isnpolyh[OF np0, simplified ap] ns] polymul_normh[OF head_isnpolyh[OF ns] np'] hdth degth] polymul_degreen[OF head_isnpolyh[OF np] ns, where m=\"0\"]\n            head_nz[OF np] pnz sz ap[symmetric]\n          by (auto simp add: degree_eq_degreen0[symmetric])\n      }\n      ultimately have ?ths by blast\n    }\n    ultimately have ?ths by blast\n  }\n  ultimately show ?ths by blast\nqed\n\nlemma polydivide_properties:\n  assumes \"SORT_CONSTRAINT('a::{field_char_0,field})\"\n    and np: \"isnpolyh p n0\"\n    and ns: \"isnpolyh s n1\"\n    and pnz: \"p \\<noteq> 0\\<^sub>p\"\n  shows \"\\<exists>k r. polydivide s p = (k, r) \\<and>\n    (\\<exists>nr. isnpolyh r nr) \\<and> (degree r = 0 \\<or> degree r < degree p) \\<and>\n    (\\<exists>q n1. isnpolyh q n1 \\<and> polypow k (head p) *\\<^sub>p s = p *\\<^sub>p q +\\<^sub>p r)\"\nproof -\n  have trv: \"head p = head p\" \"degree p = degree p\"\n    by simp_all\n  from polydivide_def[where s=\"s\" and p=\"p\"] have ex: \"\\<exists> k r. polydivide s p = (k,r)\"\n    by auto\n  then obtain k r where kr: \"polydivide s p = (k,r)\"\n    by blast\n  from trans[OF polydivide_def[where s=\"s\"and p=\"p\", symmetric] kr]\n    polydivide_aux_properties[OF np ns trv pnz, where k=\"0\" and k'=\"k\" and r=\"r\"]\n  have \"(degree r = 0 \\<or> degree r < degree p) \\<and>\n    (\\<exists>nr. isnpolyh r nr) \\<and> (\\<exists>q n1. isnpolyh q n1 \\<and> head p ^\\<^sub>p k - 0 *\\<^sub>p s = p *\\<^sub>p q +\\<^sub>p r)\"\n    by blast\n  with kr show ?thesis\n    apply -\n    apply (rule exI[where x=\"k\"])\n    apply (rule exI[where x=\"r\"])\n    apply simp\n    done\nqed*)"], ["", "subsection \\<open>More about polypoly and pnormal etc\\<close>"], ["", "definition \"isnonconstant p \\<longleftrightarrow> \\<not> isconstant p\""], ["", "lemma isnonconstant_pnormal_iff:\n  assumes \"isnonconstant p\"\n  shows \"pnormal (polypoly bs p) \\<longleftrightarrow> Ipoly bs (head p) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pnormal (polypoly bs p) = (Ipoly bs (head p) \\<noteq> (0::'a))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. pnormal (polypoly bs p) \\<Longrightarrow>\n    Ipoly bs (head p) \\<noteq> (0::'a)\n 2. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    pnormal (polypoly bs p)", "let ?p = \"polypoly bs p\""], ["proof (state)\ngoal (2 subgoals):\n 1. pnormal (polypoly bs p) \\<Longrightarrow>\n    Ipoly bs (head p) \\<noteq> (0::'a)\n 2. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    pnormal (polypoly bs p)", "assume H: \"pnormal ?p\""], ["proof (state)\nthis:\n  pnormal (polypoly bs p)\n\ngoal (2 subgoals):\n 1. pnormal (polypoly bs p) \\<Longrightarrow>\n    Ipoly bs (head p) \\<noteq> (0::'a)\n 2. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    pnormal (polypoly bs p)", "have csz: \"coefficients p \\<noteq> []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coefficients p \\<noteq> []", "using assms"], ["proof (prove)\nusing this:\n  isnonconstant p\n\ngoal (1 subgoal):\n 1. coefficients p \\<noteq> []", "by (cases p) auto"], ["proof (state)\nthis:\n  coefficients p \\<noteq> []\n\ngoal (2 subgoals):\n 1. pnormal (polypoly bs p) \\<Longrightarrow>\n    Ipoly bs (head p) \\<noteq> (0::'a)\n 2. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    pnormal (polypoly bs p)", "from coefficients_head[of p] last_map[OF csz, of \"Ipoly bs\"] pnormal_last_nonzero[OF H]"], ["proof (chain)\npicking this:\n  last (coefficients p) = head p\n  last (map (Ipoly bs) (coefficients p)) = Ipoly bs (last (coefficients p))\n  last (polypoly bs p) \\<noteq> (0::'a)", "show \"Ipoly bs (head p) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  last (coefficients p) = head p\n  last (map (Ipoly bs) (coefficients p)) = Ipoly bs (last (coefficients p))\n  last (polypoly bs p) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a)", "by (simp add: polypoly_def)"], ["proof (state)\nthis:\n  Ipoly bs (head p) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    pnormal (polypoly bs p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    pnormal (polypoly bs p)", "assume h: \"Ipoly bs (head p) \\<noteq> 0\""], ["proof (state)\nthis:\n  Ipoly bs (head p) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    pnormal (polypoly bs p)", "let ?p = \"polypoly bs p\""], ["proof (state)\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    pnormal (polypoly bs p)", "have csz: \"coefficients p \\<noteq> []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coefficients p \\<noteq> []", "using assms"], ["proof (prove)\nusing this:\n  isnonconstant p\n\ngoal (1 subgoal):\n 1. coefficients p \\<noteq> []", "by (cases p) auto"], ["proof (state)\nthis:\n  coefficients p \\<noteq> []\n\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    pnormal (polypoly bs p)", "then"], ["proof (chain)\npicking this:\n  coefficients p \\<noteq> []", "have pz: \"?p \\<noteq> []\""], ["proof (prove)\nusing this:\n  coefficients p \\<noteq> []\n\ngoal (1 subgoal):\n 1. polypoly bs p \\<noteq> []", "by (simp add: polypoly_def)"], ["proof (state)\nthis:\n  polypoly bs p \\<noteq> []\n\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    pnormal (polypoly bs p)", "then"], ["proof (chain)\npicking this:\n  polypoly bs p \\<noteq> []", "have lg: \"length ?p > 0\""], ["proof (prove)\nusing this:\n  polypoly bs p \\<noteq> []\n\ngoal (1 subgoal):\n 1. 0 < length (polypoly bs p)", "by simp"], ["proof (state)\nthis:\n  0 < length (polypoly bs p)\n\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    pnormal (polypoly bs p)", "from h coefficients_head[of p] last_map[OF csz, of \"Ipoly bs\"]"], ["proof (chain)\npicking this:\n  Ipoly bs (head p) \\<noteq> (0::'a)\n  last (coefficients p) = head p\n  last (map (Ipoly bs) (coefficients p)) = Ipoly bs (last (coefficients p))", "have lz: \"last ?p \\<noteq> 0\""], ["proof (prove)\nusing this:\n  Ipoly bs (head p) \\<noteq> (0::'a)\n  last (coefficients p) = head p\n  last (map (Ipoly bs) (coefficients p)) = Ipoly bs (last (coefficients p))\n\ngoal (1 subgoal):\n 1. last (polypoly bs p) \\<noteq> (0::'a)", "by (simp add: polypoly_def)"], ["proof (state)\nthis:\n  last (polypoly bs p) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    pnormal (polypoly bs p)", "from pnormal_last_length[OF lg lz]"], ["proof (chain)\npicking this:\n  pnormal (polypoly bs p)", "show \"pnormal ?p\""], ["proof (prove)\nusing this:\n  pnormal (polypoly bs p)\n\ngoal (1 subgoal):\n 1. pnormal (polypoly bs p)", "."], ["proof (state)\nthis:\n  pnormal (polypoly bs p)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma isnonconstant_coefficients_length: \"isnonconstant p \\<Longrightarrow> length (coefficients p) > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnonconstant p \\<Longrightarrow> 1 < length (coefficients p)", "unfolding isnonconstant_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> isconstant p \\<Longrightarrow> 1 < length (coefficients p)", "apply (cases p)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>\\<not> isconstant p; p = (x1)\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> 1 < length (coefficients p)\n 2. \\<And>x2.\n       \\<lbrakk>\\<not> isconstant p; p = Bound x2\\<rbrakk>\n       \\<Longrightarrow> 1 < length (coefficients p)\n 3. \\<And>x31 x32.\n       \\<lbrakk>\\<not> isconstant p; p = Add x31 x32\\<rbrakk>\n       \\<Longrightarrow> 1 < length (coefficients p)\n 4. \\<And>x41 x42.\n       \\<lbrakk>\\<not> isconstant p; p = Sub x41 x42\\<rbrakk>\n       \\<Longrightarrow> 1 < length (coefficients p)\n 5. \\<And>x51 x52.\n       \\<lbrakk>\\<not> isconstant p; p = Mul x51 x52\\<rbrakk>\n       \\<Longrightarrow> 1 < length (coefficients p)\n 6. \\<And>x6.\n       \\<lbrakk>\\<not> isconstant p; p = Neg x6\\<rbrakk>\n       \\<Longrightarrow> 1 < length (coefficients p)\n 7. \\<And>x71 x72.\n       \\<lbrakk>\\<not> isconstant p; p = Pw x71 x72\\<rbrakk>\n       \\<Longrightarrow> 1 < length (coefficients p)\n 8. \\<And>x81 x82 x83.\n       \\<lbrakk>\\<not> isconstant p; p = CN x81 x82 x83\\<rbrakk>\n       \\<Longrightarrow> 1 < length (coefficients p)", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x81 x82 x83.\n       \\<lbrakk>\\<not> isconstant (CN x81 x82 x83);\n        p = CN x81 x82 x83\\<rbrakk>\n       \\<Longrightarrow> Suc 0 < length (coefficients (CN x81 x82 x83))", "apply (rename_tac nat a, case_tac nat)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x81 nat a.\n       \\<lbrakk>\\<not> isconstant (CN x81 nat a); p = CN x81 nat a;\n        nat = 0\\<rbrakk>\n       \\<Longrightarrow> Suc 0 < length (coefficients (CN x81 nat a))\n 2. \\<And>x81 nat a nata.\n       \\<lbrakk>\\<not> isconstant (CN x81 nat a); p = CN x81 nat a;\n        nat = Suc nata\\<rbrakk>\n       \\<Longrightarrow> Suc 0 < length (coefficients (CN x81 nat a))", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma isnonconstant_nonconstant:\n  assumes \"isnonconstant p\"\n  shows \"nonconstant (polypoly bs p) \\<longleftrightarrow> Ipoly bs (head p) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nonconstant (polypoly bs p) = (Ipoly bs (head p) \\<noteq> (0::'a))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. nonconstant (polypoly bs p) \\<Longrightarrow>\n    Ipoly bs (head p) \\<noteq> (0::'a)\n 2. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    nonconstant (polypoly bs p)", "let ?p = \"polypoly bs p\""], ["proof (state)\ngoal (2 subgoals):\n 1. nonconstant (polypoly bs p) \\<Longrightarrow>\n    Ipoly bs (head p) \\<noteq> (0::'a)\n 2. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    nonconstant (polypoly bs p)", "assume nc: \"nonconstant ?p\""], ["proof (state)\nthis:\n  nonconstant (polypoly bs p)\n\ngoal (2 subgoals):\n 1. nonconstant (polypoly bs p) \\<Longrightarrow>\n    Ipoly bs (head p) \\<noteq> (0::'a)\n 2. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    nonconstant (polypoly bs p)", "from isnonconstant_pnormal_iff[OF assms, of bs] nc"], ["proof (chain)\npicking this:\n  pnormal (polypoly bs p) = (Ipoly bs (head p) \\<noteq> (0::'a))\n  nonconstant (polypoly bs p)", "show \"Ipoly bs (head p) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  pnormal (polypoly bs p) = (Ipoly bs (head p) \\<noteq> (0::'a))\n  nonconstant (polypoly bs p)\n\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a)", "unfolding nonconstant_def"], ["proof (prove)\nusing this:\n  pnormal (polypoly bs p) = (Ipoly bs (head p) \\<noteq> (0::'a))\n  pnormal (polypoly bs p) \\<and> (\\<forall>x. polypoly bs p \\<noteq> [x])\n\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a)", "by blast"], ["proof (state)\nthis:\n  Ipoly bs (head p) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    nonconstant (polypoly bs p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    nonconstant (polypoly bs p)", "let ?p = \"polypoly bs p\""], ["proof (state)\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    nonconstant (polypoly bs p)", "assume h: \"Ipoly bs (head p) \\<noteq> 0\""], ["proof (state)\nthis:\n  Ipoly bs (head p) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    nonconstant (polypoly bs p)", "from isnonconstant_pnormal_iff[OF assms, of bs] h"], ["proof (chain)\npicking this:\n  pnormal (polypoly bs p) = (Ipoly bs (head p) \\<noteq> (0::'a))\n  Ipoly bs (head p) \\<noteq> (0::'a)", "have pn: \"pnormal ?p\""], ["proof (prove)\nusing this:\n  pnormal (polypoly bs p) = (Ipoly bs (head p) \\<noteq> (0::'a))\n  Ipoly bs (head p) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. pnormal (polypoly bs p)", "by blast"], ["proof (state)\nthis:\n  pnormal (polypoly bs p)\n\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    nonconstant (polypoly bs p)", "{"], ["proof (state)\nthis:\n  pnormal (polypoly bs p)\n\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    nonconstant (polypoly bs p)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    nonconstant (polypoly bs p)", "assume H: \"?p = [x]\""], ["proof (state)\nthis:\n  polypoly bs p = [x]\n\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    nonconstant (polypoly bs p)", "from H"], ["proof (chain)\npicking this:\n  polypoly bs p = [x]", "have \"length (coefficients p) = 1\""], ["proof (prove)\nusing this:\n  polypoly bs p = [x]\n\ngoal (1 subgoal):\n 1. length (coefficients p) = 1", "unfolding polypoly_def"], ["proof (prove)\nusing this:\n  map (Ipoly bs) (coefficients p) = [x]\n\ngoal (1 subgoal):\n 1. length (coefficients p) = 1", "by auto"], ["proof (state)\nthis:\n  length (coefficients p) = 1\n\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    nonconstant (polypoly bs p)", "with isnonconstant_coefficients_length[OF assms]"], ["proof (chain)\npicking this:\n  1 < length (coefficients p)\n  length (coefficients p) = 1", "have False"], ["proof (prove)\nusing this:\n  1 < length (coefficients p)\n  length (coefficients p) = 1\n\ngoal (1 subgoal):\n 1. False", "by arith"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    nonconstant (polypoly bs p)", "}"], ["proof (state)\nthis:\n  polypoly bs p = [?x2] \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    nonconstant (polypoly bs p)", "then"], ["proof (chain)\npicking this:\n  polypoly bs p = [?x2] \\<Longrightarrow> False", "show \"nonconstant ?p\""], ["proof (prove)\nusing this:\n  polypoly bs p = [?x2] \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. nonconstant (polypoly bs p)", "using pn"], ["proof (prove)\nusing this:\n  polypoly bs p = [?x2] \\<Longrightarrow> False\n  pnormal (polypoly bs p)\n\ngoal (1 subgoal):\n 1. nonconstant (polypoly bs p)", "unfolding nonconstant_def"], ["proof (prove)\nusing this:\n  polypoly bs p = [?x2] \\<Longrightarrow> False\n  pnormal (polypoly bs p)\n\ngoal (1 subgoal):\n 1. pnormal (polypoly bs p) \\<and> (\\<forall>x. polypoly bs p \\<noteq> [x])", "by blast"], ["proof (state)\nthis:\n  nonconstant (polypoly bs p)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pnormal_length: \"p \\<noteq> [] \\<Longrightarrow> pnormal p \\<longleftrightarrow> length (pnormalize p) = length p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<noteq> [] \\<Longrightarrow>\n    pnormal p = (length (pnormalize p) = length p)", "apply (induct p)"], ["proof (prove)\ngoal (2 subgoals):\n 1. [] \\<noteq> [] \\<Longrightarrow>\n    pnormal [] = (length (pnormalize []) = length [])\n 2. \\<And>a p.\n       \\<lbrakk>p \\<noteq> [] \\<Longrightarrow>\n                pnormal p = (length (pnormalize p) = length p);\n        a # p \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> pnormal (a # p) =\n                         (length (pnormalize (a # p)) = length (a # p))", "apply (simp_all add: pnormal_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a p.\n       (p \\<noteq> [] \\<Longrightarrow>\n        (pnormalize p = p) =\n        (length (pnormalize p) = length p)) \\<Longrightarrow>\n       (a = (0::'a) \\<longrightarrow>\n        pnormalize p \\<noteq> [] \\<longrightarrow>\n        (pnormalize p = p) = (length (pnormalize p) = length p)) \\<and>\n       (a \\<noteq> (0::'a) \\<longrightarrow>\n        (pnormalize p = [] \\<longrightarrow> ([] = p) = (p = [])) \\<and>\n        (pnormalize p \\<noteq> [] \\<longrightarrow>\n         (pnormalize p = p) = (length (pnormalize p) = length p)))", "apply (case_tac \"p = []\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a p.\n       \\<lbrakk>p \\<noteq> [] \\<Longrightarrow>\n                (pnormalize p = p) = (length (pnormalize p) = length p);\n        p = []\\<rbrakk>\n       \\<Longrightarrow> (a = (0::'a) \\<longrightarrow>\n                          pnormalize p \\<noteq> [] \\<longrightarrow>\n                          (pnormalize p = p) =\n                          (length (pnormalize p) = length p)) \\<and>\n                         (a \\<noteq> (0::'a) \\<longrightarrow>\n                          (pnormalize p = [] \\<longrightarrow>\n                           ([] = p) = (p = [])) \\<and>\n                          (pnormalize p \\<noteq> [] \\<longrightarrow>\n                           (pnormalize p = p) =\n                           (length (pnormalize p) = length p)))\n 2. \\<And>a p.\n       \\<lbrakk>p \\<noteq> [] \\<Longrightarrow>\n                (pnormalize p = p) = (length (pnormalize p) = length p);\n        p \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> (a = (0::'a) \\<longrightarrow>\n                          pnormalize p \\<noteq> [] \\<longrightarrow>\n                          (pnormalize p = p) =\n                          (length (pnormalize p) = length p)) \\<and>\n                         (a \\<noteq> (0::'a) \\<longrightarrow>\n                          (pnormalize p = [] \\<longrightarrow>\n                           ([] = p) = (p = [])) \\<and>\n                          (pnormalize p \\<noteq> [] \\<longrightarrow>\n                           (pnormalize p = p) =\n                           (length (pnormalize p) = length p)))", "apply simp_all"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma degree_degree:\n  assumes \"isnonconstant p\"\n  shows \"degree p = Polynomial_List.degree (polypoly bs p) \\<longleftrightarrow> Ipoly bs (head p) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Polynomial_Expression.degree p =\n     semiring_0_class.degree (polypoly bs p)) =\n    (Ipoly bs (head p) \\<noteq> (0::'a))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. Polynomial_Expression.degree p =\n    semiring_0_class.degree (polypoly bs p) \\<Longrightarrow>\n    Ipoly bs (head p) \\<noteq> (0::'a)\n 2. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    Polynomial_Expression.degree p = semiring_0_class.degree (polypoly bs p)", "let ?p = \"polypoly bs p\""], ["proof (state)\ngoal (2 subgoals):\n 1. Polynomial_Expression.degree p =\n    semiring_0_class.degree (polypoly bs p) \\<Longrightarrow>\n    Ipoly bs (head p) \\<noteq> (0::'a)\n 2. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    Polynomial_Expression.degree p = semiring_0_class.degree (polypoly bs p)", "assume H: \"degree p = Polynomial_List.degree ?p\""], ["proof (state)\nthis:\n  Polynomial_Expression.degree p = semiring_0_class.degree (polypoly bs p)\n\ngoal (2 subgoals):\n 1. Polynomial_Expression.degree p =\n    semiring_0_class.degree (polypoly bs p) \\<Longrightarrow>\n    Ipoly bs (head p) \\<noteq> (0::'a)\n 2. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    Polynomial_Expression.degree p = semiring_0_class.degree (polypoly bs p)", "from isnonconstant_coefficients_length[OF assms]"], ["proof (chain)\npicking this:\n  1 < length (coefficients p)", "have pz: \"?p \\<noteq> []\""], ["proof (prove)\nusing this:\n  1 < length (coefficients p)\n\ngoal (1 subgoal):\n 1. polypoly bs p \\<noteq> []", "unfolding polypoly_def"], ["proof (prove)\nusing this:\n  1 < length (coefficients p)\n\ngoal (1 subgoal):\n 1. map (Ipoly bs) (coefficients p) \\<noteq> []", "by auto"], ["proof (state)\nthis:\n  polypoly bs p \\<noteq> []\n\ngoal (2 subgoals):\n 1. Polynomial_Expression.degree p =\n    semiring_0_class.degree (polypoly bs p) \\<Longrightarrow>\n    Ipoly bs (head p) \\<noteq> (0::'a)\n 2. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    Polynomial_Expression.degree p = semiring_0_class.degree (polypoly bs p)", "from H degree_coefficients[of p] isnonconstant_coefficients_length[OF assms]"], ["proof (chain)\npicking this:\n  Polynomial_Expression.degree p = semiring_0_class.degree (polypoly bs p)\n  Polynomial_Expression.degree p = length (coefficients p) - 1\n  1 < length (coefficients p)", "have lg: \"length (pnormalize ?p) = length ?p\""], ["proof (prove)\nusing this:\n  Polynomial_Expression.degree p = semiring_0_class.degree (polypoly bs p)\n  Polynomial_Expression.degree p = length (coefficients p) - 1\n  1 < length (coefficients p)\n\ngoal (1 subgoal):\n 1. length (pnormalize (polypoly bs p)) = length (polypoly bs p)", "unfolding Polynomial_List.degree_def polypoly_def"], ["proof (prove)\nusing this:\n  Polynomial_Expression.degree p =\n  length (pnormalize (map (Ipoly bs) (coefficients p))) - 1\n  Polynomial_Expression.degree p = length (coefficients p) - 1\n  1 < length (coefficients p)\n\ngoal (1 subgoal):\n 1. length (pnormalize (map (Ipoly bs) (coefficients p))) =\n    length (map (Ipoly bs) (coefficients p))", "by simp"], ["proof (state)\nthis:\n  length (pnormalize (polypoly bs p)) = length (polypoly bs p)\n\ngoal (2 subgoals):\n 1. Polynomial_Expression.degree p =\n    semiring_0_class.degree (polypoly bs p) \\<Longrightarrow>\n    Ipoly bs (head p) \\<noteq> (0::'a)\n 2. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    Polynomial_Expression.degree p = semiring_0_class.degree (polypoly bs p)", "then"], ["proof (chain)\npicking this:\n  length (pnormalize (polypoly bs p)) = length (polypoly bs p)", "have \"pnormal ?p\""], ["proof (prove)\nusing this:\n  length (pnormalize (polypoly bs p)) = length (polypoly bs p)\n\ngoal (1 subgoal):\n 1. pnormal (polypoly bs p)", "using pnormal_length[OF pz]"], ["proof (prove)\nusing this:\n  length (pnormalize (polypoly bs p)) = length (polypoly bs p)\n  pnormal (polypoly bs p) =\n  (length (pnormalize (polypoly bs p)) = length (polypoly bs p))\n\ngoal (1 subgoal):\n 1. pnormal (polypoly bs p)", "by blast"], ["proof (state)\nthis:\n  pnormal (polypoly bs p)\n\ngoal (2 subgoals):\n 1. Polynomial_Expression.degree p =\n    semiring_0_class.degree (polypoly bs p) \\<Longrightarrow>\n    Ipoly bs (head p) \\<noteq> (0::'a)\n 2. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    Polynomial_Expression.degree p = semiring_0_class.degree (polypoly bs p)", "with isnonconstant_pnormal_iff[OF assms]"], ["proof (chain)\npicking this:\n  pnormal (polypoly ?bs p) = (Ipoly ?bs (head p) \\<noteq> (0::'a))\n  pnormal (polypoly bs p)", "show \"Ipoly bs (head p) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  pnormal (polypoly ?bs p) = (Ipoly ?bs (head p) \\<noteq> (0::'a))\n  pnormal (polypoly bs p)\n\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a)", "by blast"], ["proof (state)\nthis:\n  Ipoly bs (head p) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    Polynomial_Expression.degree p = semiring_0_class.degree (polypoly bs p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    Polynomial_Expression.degree p = semiring_0_class.degree (polypoly bs p)", "let ?p = \"polypoly bs p\""], ["proof (state)\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    Polynomial_Expression.degree p = semiring_0_class.degree (polypoly bs p)", "assume H: \"Ipoly bs (head p) \\<noteq> 0\""], ["proof (state)\nthis:\n  Ipoly bs (head p) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    Polynomial_Expression.degree p = semiring_0_class.degree (polypoly bs p)", "with isnonconstant_pnormal_iff[OF assms]"], ["proof (chain)\npicking this:\n  pnormal (polypoly ?bs p) = (Ipoly ?bs (head p) \\<noteq> (0::'a))\n  Ipoly bs (head p) \\<noteq> (0::'a)", "have \"pnormal ?p\""], ["proof (prove)\nusing this:\n  pnormal (polypoly ?bs p) = (Ipoly ?bs (head p) \\<noteq> (0::'a))\n  Ipoly bs (head p) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. pnormal (polypoly bs p)", "by blast"], ["proof (state)\nthis:\n  pnormal (polypoly bs p)\n\ngoal (1 subgoal):\n 1. Ipoly bs (head p) \\<noteq> (0::'a) \\<Longrightarrow>\n    Polynomial_Expression.degree p = semiring_0_class.degree (polypoly bs p)", "with degree_coefficients[of p] isnonconstant_coefficients_length[OF assms]"], ["proof (chain)\npicking this:\n  Polynomial_Expression.degree p = length (coefficients p) - 1\n  1 < length (coefficients p)\n  pnormal (polypoly bs p)", "show \"degree p = Polynomial_List.degree ?p\""], ["proof (prove)\nusing this:\n  Polynomial_Expression.degree p = length (coefficients p) - 1\n  1 < length (coefficients p)\n  pnormal (polypoly bs p)\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree p = semiring_0_class.degree (polypoly bs p)", "unfolding polypoly_def pnormal_def Polynomial_List.degree_def"], ["proof (prove)\nusing this:\n  Polynomial_Expression.degree p = length (coefficients p) - 1\n  1 < length (coefficients p)\n  pnormalize (map (Ipoly bs) (coefficients p)) =\n  map (Ipoly bs) (coefficients p) \\<and>\n  map (Ipoly bs) (coefficients p) \\<noteq> []\n\ngoal (1 subgoal):\n 1. Polynomial_Expression.degree p =\n    length (pnormalize (map (Ipoly bs) (coefficients p))) - 1", "by auto"], ["proof (state)\nthis:\n  Polynomial_Expression.degree p = semiring_0_class.degree (polypoly bs p)\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Swaps ; Division by a certain variable\\<close>"], ["", "primrec swap :: \"nat \\<Rightarrow> nat \\<Rightarrow> 'a poly \\<Rightarrow> 'a poly\"\nwhere\n  \"swap n m (C x) = C x\"\n| \"swap n m (Bound k) = Bound (if k = n then m else if k = m then n else k)\"\n| \"swap n m (Neg t) = Neg (swap n m t)\"\n| \"swap n m (Add s t) = Add (swap n m s) (swap n m t)\"\n| \"swap n m (Sub s t) = Sub (swap n m s) (swap n m t)\"\n| \"swap n m (Mul s t) = Mul (swap n m s) (swap n m t)\"\n| \"swap n m (Pw t k) = Pw (swap n m t) k\"\n| \"swap n m (CN c k p) = CN (swap n m c) (if k = n then m else if k=m then n else k) (swap n m p)\""], ["", "lemma swap:\n  assumes \"n < length bs\"\n    and \"m < length bs\"\n  shows \"Ipoly bs (swap n m t) = Ipoly ((bs[n:= bs!m])[m:= bs!n]) t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly bs (swap n m t) = Ipoly (bs[n := bs ! m, m := bs ! n]) t", "proof (induct t)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>x.\n       Ipoly bs (swap n m (x)\\<^sub>p) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) (x)\\<^sub>p\n 2. \\<And>x.\n       Ipoly bs (swap n m (Bound x)) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) (Bound x)\n 3. \\<And>t1 t2.\n       \\<lbrakk>Ipoly bs (swap n m t1) =\n                Ipoly (bs[n := bs ! m, m := bs ! n]) t1;\n        Ipoly bs (swap n m t2) =\n        Ipoly (bs[n := bs ! m, m := bs ! n]) t2\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs (swap n m (Add t1 t2)) =\n                         Ipoly (bs[n := bs ! m, m := bs ! n]) (Add t1 t2)\n 4. \\<And>t1 t2.\n       \\<lbrakk>Ipoly bs (swap n m t1) =\n                Ipoly (bs[n := bs ! m, m := bs ! n]) t1;\n        Ipoly bs (swap n m t2) =\n        Ipoly (bs[n := bs ! m, m := bs ! n]) t2\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs (swap n m (Sub t1 t2)) =\n                         Ipoly (bs[n := bs ! m, m := bs ! n]) (Sub t1 t2)\n 5. \\<And>t1 t2.\n       \\<lbrakk>Ipoly bs (swap n m t1) =\n                Ipoly (bs[n := bs ! m, m := bs ! n]) t1;\n        Ipoly bs (swap n m t2) =\n        Ipoly (bs[n := bs ! m, m := bs ! n]) t2\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs (swap n m (Mul t1 t2)) =\n                         Ipoly (bs[n := bs ! m, m := bs ! n]) (Mul t1 t2)\n 6. \\<And>t.\n       Ipoly bs (swap n m t) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) t \\<Longrightarrow>\n       Ipoly bs (swap n m (Neg t)) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) (Neg t)\n 7. \\<And>t x2a.\n       Ipoly bs (swap n m t) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) t \\<Longrightarrow>\n       Ipoly bs (swap n m (Pw t x2a)) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) (Pw t x2a)\n 8. \\<And>t1 x2a t2.\n       \\<lbrakk>Ipoly bs (swap n m t1) =\n                Ipoly (bs[n := bs ! m, m := bs ! n]) t1;\n        Ipoly bs (swap n m t2) =\n        Ipoly (bs[n := bs ! m, m := bs ! n]) t2\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs (swap n m (CN t1 x2a t2)) =\n                         Ipoly (bs[n := bs ! m, m := bs ! n]) (CN t1 x2a t2)", "case (Bound k)"], ["proof (state)\nthis:\n  \n\ngoal (8 subgoals):\n 1. \\<And>x.\n       Ipoly bs (swap n m (x)\\<^sub>p) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) (x)\\<^sub>p\n 2. \\<And>x.\n       Ipoly bs (swap n m (Bound x)) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) (Bound x)\n 3. \\<And>t1 t2.\n       \\<lbrakk>Ipoly bs (swap n m t1) =\n                Ipoly (bs[n := bs ! m, m := bs ! n]) t1;\n        Ipoly bs (swap n m t2) =\n        Ipoly (bs[n := bs ! m, m := bs ! n]) t2\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs (swap n m (Add t1 t2)) =\n                         Ipoly (bs[n := bs ! m, m := bs ! n]) (Add t1 t2)\n 4. \\<And>t1 t2.\n       \\<lbrakk>Ipoly bs (swap n m t1) =\n                Ipoly (bs[n := bs ! m, m := bs ! n]) t1;\n        Ipoly bs (swap n m t2) =\n        Ipoly (bs[n := bs ! m, m := bs ! n]) t2\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs (swap n m (Sub t1 t2)) =\n                         Ipoly (bs[n := bs ! m, m := bs ! n]) (Sub t1 t2)\n 5. \\<And>t1 t2.\n       \\<lbrakk>Ipoly bs (swap n m t1) =\n                Ipoly (bs[n := bs ! m, m := bs ! n]) t1;\n        Ipoly bs (swap n m t2) =\n        Ipoly (bs[n := bs ! m, m := bs ! n]) t2\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs (swap n m (Mul t1 t2)) =\n                         Ipoly (bs[n := bs ! m, m := bs ! n]) (Mul t1 t2)\n 6. \\<And>t.\n       Ipoly bs (swap n m t) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) t \\<Longrightarrow>\n       Ipoly bs (swap n m (Neg t)) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) (Neg t)\n 7. \\<And>t x2a.\n       Ipoly bs (swap n m t) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) t \\<Longrightarrow>\n       Ipoly bs (swap n m (Pw t x2a)) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) (Pw t x2a)\n 8. \\<And>t1 x2a t2.\n       \\<lbrakk>Ipoly bs (swap n m t1) =\n                Ipoly (bs[n := bs ! m, m := bs ! n]) t1;\n        Ipoly bs (swap n m t2) =\n        Ipoly (bs[n := bs ! m, m := bs ! n]) t2\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs (swap n m (CN t1 x2a t2)) =\n                         Ipoly (bs[n := bs ! m, m := bs ! n]) (CN t1 x2a t2)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly bs (swap n m (Bound k)) =\n    Ipoly (bs[n := bs ! m, m := bs ! n]) (Bound k)", "using assms"], ["proof (prove)\nusing this:\n  n < length bs\n  m < length bs\n\ngoal (1 subgoal):\n 1. Ipoly bs (swap n m (Bound k)) =\n    Ipoly (bs[n := bs ! m, m := bs ! n]) (Bound k)", "by simp"], ["proof (state)\nthis:\n  Ipoly bs (swap n m (Bound k)) =\n  Ipoly (bs[n := bs ! m, m := bs ! n]) (Bound k)\n\ngoal (7 subgoals):\n 1. \\<And>x.\n       Ipoly bs (swap n m (x)\\<^sub>p) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) (x)\\<^sub>p\n 2. \\<And>t1 t2.\n       \\<lbrakk>Ipoly bs (swap n m t1) =\n                Ipoly (bs[n := bs ! m, m := bs ! n]) t1;\n        Ipoly bs (swap n m t2) =\n        Ipoly (bs[n := bs ! m, m := bs ! n]) t2\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs (swap n m (Add t1 t2)) =\n                         Ipoly (bs[n := bs ! m, m := bs ! n]) (Add t1 t2)\n 3. \\<And>t1 t2.\n       \\<lbrakk>Ipoly bs (swap n m t1) =\n                Ipoly (bs[n := bs ! m, m := bs ! n]) t1;\n        Ipoly bs (swap n m t2) =\n        Ipoly (bs[n := bs ! m, m := bs ! n]) t2\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs (swap n m (Sub t1 t2)) =\n                         Ipoly (bs[n := bs ! m, m := bs ! n]) (Sub t1 t2)\n 4. \\<And>t1 t2.\n       \\<lbrakk>Ipoly bs (swap n m t1) =\n                Ipoly (bs[n := bs ! m, m := bs ! n]) t1;\n        Ipoly bs (swap n m t2) =\n        Ipoly (bs[n := bs ! m, m := bs ! n]) t2\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs (swap n m (Mul t1 t2)) =\n                         Ipoly (bs[n := bs ! m, m := bs ! n]) (Mul t1 t2)\n 5. \\<And>t.\n       Ipoly bs (swap n m t) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) t \\<Longrightarrow>\n       Ipoly bs (swap n m (Neg t)) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) (Neg t)\n 6. \\<And>t x2a.\n       Ipoly bs (swap n m t) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) t \\<Longrightarrow>\n       Ipoly bs (swap n m (Pw t x2a)) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) (Pw t x2a)\n 7. \\<And>t1 x2a t2.\n       \\<lbrakk>Ipoly bs (swap n m t1) =\n                Ipoly (bs[n := bs ! m, m := bs ! n]) t1;\n        Ipoly bs (swap n m t2) =\n        Ipoly (bs[n := bs ! m, m := bs ! n]) t2\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs (swap n m (CN t1 x2a t2)) =\n                         Ipoly (bs[n := bs ! m, m := bs ! n]) (CN t1 x2a t2)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>x.\n       Ipoly bs (swap n m (x)\\<^sub>p) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) (x)\\<^sub>p\n 2. \\<And>t1 t2.\n       \\<lbrakk>Ipoly bs (swap n m t1) =\n                Ipoly (bs[n := bs ! m, m := bs ! n]) t1;\n        Ipoly bs (swap n m t2) =\n        Ipoly (bs[n := bs ! m, m := bs ! n]) t2\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs (swap n m (Add t1 t2)) =\n                         Ipoly (bs[n := bs ! m, m := bs ! n]) (Add t1 t2)\n 3. \\<And>t1 t2.\n       \\<lbrakk>Ipoly bs (swap n m t1) =\n                Ipoly (bs[n := bs ! m, m := bs ! n]) t1;\n        Ipoly bs (swap n m t2) =\n        Ipoly (bs[n := bs ! m, m := bs ! n]) t2\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs (swap n m (Sub t1 t2)) =\n                         Ipoly (bs[n := bs ! m, m := bs ! n]) (Sub t1 t2)\n 4. \\<And>t1 t2.\n       \\<lbrakk>Ipoly bs (swap n m t1) =\n                Ipoly (bs[n := bs ! m, m := bs ! n]) t1;\n        Ipoly bs (swap n m t2) =\n        Ipoly (bs[n := bs ! m, m := bs ! n]) t2\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs (swap n m (Mul t1 t2)) =\n                         Ipoly (bs[n := bs ! m, m := bs ! n]) (Mul t1 t2)\n 5. \\<And>t.\n       Ipoly bs (swap n m t) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) t \\<Longrightarrow>\n       Ipoly bs (swap n m (Neg t)) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) (Neg t)\n 6. \\<And>t x2a.\n       Ipoly bs (swap n m t) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) t \\<Longrightarrow>\n       Ipoly bs (swap n m (Pw t x2a)) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) (Pw t x2a)\n 7. \\<And>t1 x2a t2.\n       \\<lbrakk>Ipoly bs (swap n m t1) =\n                Ipoly (bs[n := bs ! m, m := bs ! n]) t1;\n        Ipoly bs (swap n m t2) =\n        Ipoly (bs[n := bs ! m, m := bs ! n]) t2\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs (swap n m (CN t1 x2a t2)) =\n                         Ipoly (bs[n := bs ! m, m := bs ! n]) (CN t1 x2a t2)", "case (CN c k p)"], ["proof (state)\nthis:\n  Ipoly bs (swap n m c) = Ipoly (bs[n := bs ! m, m := bs ! n]) c\n  Ipoly bs (swap n m p) = Ipoly (bs[n := bs ! m, m := bs ! n]) p\n\ngoal (7 subgoals):\n 1. \\<And>x.\n       Ipoly bs (swap n m (x)\\<^sub>p) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) (x)\\<^sub>p\n 2. \\<And>t1 t2.\n       \\<lbrakk>Ipoly bs (swap n m t1) =\n                Ipoly (bs[n := bs ! m, m := bs ! n]) t1;\n        Ipoly bs (swap n m t2) =\n        Ipoly (bs[n := bs ! m, m := bs ! n]) t2\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs (swap n m (Add t1 t2)) =\n                         Ipoly (bs[n := bs ! m, m := bs ! n]) (Add t1 t2)\n 3. \\<And>t1 t2.\n       \\<lbrakk>Ipoly bs (swap n m t1) =\n                Ipoly (bs[n := bs ! m, m := bs ! n]) t1;\n        Ipoly bs (swap n m t2) =\n        Ipoly (bs[n := bs ! m, m := bs ! n]) t2\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs (swap n m (Sub t1 t2)) =\n                         Ipoly (bs[n := bs ! m, m := bs ! n]) (Sub t1 t2)\n 4. \\<And>t1 t2.\n       \\<lbrakk>Ipoly bs (swap n m t1) =\n                Ipoly (bs[n := bs ! m, m := bs ! n]) t1;\n        Ipoly bs (swap n m t2) =\n        Ipoly (bs[n := bs ! m, m := bs ! n]) t2\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs (swap n m (Mul t1 t2)) =\n                         Ipoly (bs[n := bs ! m, m := bs ! n]) (Mul t1 t2)\n 5. \\<And>t.\n       Ipoly bs (swap n m t) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) t \\<Longrightarrow>\n       Ipoly bs (swap n m (Neg t)) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) (Neg t)\n 6. \\<And>t x2a.\n       Ipoly bs (swap n m t) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) t \\<Longrightarrow>\n       Ipoly bs (swap n m (Pw t x2a)) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) (Pw t x2a)\n 7. \\<And>t1 x2a t2.\n       \\<lbrakk>Ipoly bs (swap n m t1) =\n                Ipoly (bs[n := bs ! m, m := bs ! n]) t1;\n        Ipoly bs (swap n m t2) =\n        Ipoly (bs[n := bs ! m, m := bs ! n]) t2\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs (swap n m (CN t1 x2a t2)) =\n                         Ipoly (bs[n := bs ! m, m := bs ! n]) (CN t1 x2a t2)", "then"], ["proof (chain)\npicking this:\n  Ipoly bs (swap n m c) = Ipoly (bs[n := bs ! m, m := bs ! n]) c\n  Ipoly bs (swap n m p) = Ipoly (bs[n := bs ! m, m := bs ! n]) p", "show ?case"], ["proof (prove)\nusing this:\n  Ipoly bs (swap n m c) = Ipoly (bs[n := bs ! m, m := bs ! n]) c\n  Ipoly bs (swap n m p) = Ipoly (bs[n := bs ! m, m := bs ! n]) p\n\ngoal (1 subgoal):\n 1. Ipoly bs (swap n m (CN c k p)) =\n    Ipoly (bs[n := bs ! m, m := bs ! n]) (CN c k p)", "using assms"], ["proof (prove)\nusing this:\n  Ipoly bs (swap n m c) = Ipoly (bs[n := bs ! m, m := bs ! n]) c\n  Ipoly bs (swap n m p) = Ipoly (bs[n := bs ! m, m := bs ! n]) p\n  n < length bs\n  m < length bs\n\ngoal (1 subgoal):\n 1. Ipoly bs (swap n m (CN c k p)) =\n    Ipoly (bs[n := bs ! m, m := bs ! n]) (CN c k p)", "by simp"], ["proof (state)\nthis:\n  Ipoly bs (swap n m (CN c k p)) =\n  Ipoly (bs[n := bs ! m, m := bs ! n]) (CN c k p)\n\ngoal (6 subgoals):\n 1. \\<And>x.\n       Ipoly bs (swap n m (x)\\<^sub>p) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) (x)\\<^sub>p\n 2. \\<And>t1 t2.\n       \\<lbrakk>Ipoly bs (swap n m t1) =\n                Ipoly (bs[n := bs ! m, m := bs ! n]) t1;\n        Ipoly bs (swap n m t2) =\n        Ipoly (bs[n := bs ! m, m := bs ! n]) t2\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs (swap n m (Add t1 t2)) =\n                         Ipoly (bs[n := bs ! m, m := bs ! n]) (Add t1 t2)\n 3. \\<And>t1 t2.\n       \\<lbrakk>Ipoly bs (swap n m t1) =\n                Ipoly (bs[n := bs ! m, m := bs ! n]) t1;\n        Ipoly bs (swap n m t2) =\n        Ipoly (bs[n := bs ! m, m := bs ! n]) t2\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs (swap n m (Sub t1 t2)) =\n                         Ipoly (bs[n := bs ! m, m := bs ! n]) (Sub t1 t2)\n 4. \\<And>t1 t2.\n       \\<lbrakk>Ipoly bs (swap n m t1) =\n                Ipoly (bs[n := bs ! m, m := bs ! n]) t1;\n        Ipoly bs (swap n m t2) =\n        Ipoly (bs[n := bs ! m, m := bs ! n]) t2\\<rbrakk>\n       \\<Longrightarrow> Ipoly bs (swap n m (Mul t1 t2)) =\n                         Ipoly (bs[n := bs ! m, m := bs ! n]) (Mul t1 t2)\n 5. \\<And>t.\n       Ipoly bs (swap n m t) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) t \\<Longrightarrow>\n       Ipoly bs (swap n m (Neg t)) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) (Neg t)\n 6. \\<And>t x2a.\n       Ipoly bs (swap n m t) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) t \\<Longrightarrow>\n       Ipoly bs (swap n m (Pw t x2a)) =\n       Ipoly (bs[n := bs ! m, m := bs ! n]) (Pw t x2a)", "qed simp_all"], ["", "lemma swap_swap_id [simp]: \"swap n m (swap m n t) = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. swap n m (swap m n t) = t", "by (induct t) simp_all"], ["", "lemma swap_commute: \"swap n m p = swap m n p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. swap n m p = swap m n p", "by (induct p) simp_all"], ["", "lemma swap_same_id[simp]: \"swap n n t = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. swap n n t = t", "by (induct t) simp_all"], ["", "definition \"swapnorm n m t = polynate (swap n m t)\""], ["", "lemma swapnorm:\n  fixes t :: \"'a::field poly\"\n  assumes nbs: \"n < length bs\"\n    and mbs: \"m < length bs\"\n  shows \"((Ipoly bs (swapnorm n m t))) =\n    Ipoly ((bs[n:= bs!m])[m:= bs!n]) t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly bs (swapnorm n m t) = Ipoly (bs[n := bs ! m, m := bs ! n]) t", "by (simp add: swap[OF assms] swapnorm_def)"], ["", "lemma swapnorm_isnpoly [simp]:\n  fixes p :: \"'a::field poly\"\n  shows \"isnpoly (swapnorm n m p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpoly (swapnorm n m p)", "by (simp add: swapnorm_def)"], ["", "definition \"polydivideby n s p =\n  (let\n    ss = swapnorm 0 n s;\n    sp = swapnorm 0 n p;\n    h = head sp;\n    (k, r) = polydivide ss sp\n   in (k, swapnorm 0 n h, swapnorm 0 n r))\""], ["", "lemma swap_nz [simp]: \"swap n m p = 0\\<^sub>p \\<longleftrightarrow> p = 0\\<^sub>p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (swap n m p = 0\\<^sub>p) = (p = 0\\<^sub>p)", "by (induct p) simp_all"], ["", "fun isweaknpoly :: \"'a poly \\<Rightarrow> bool\"\nwhere\n  \"isweaknpoly (C c) = True\"\n| \"isweaknpoly (CN c n p) \\<longleftrightarrow> isweaknpoly c \\<and> isweaknpoly p\"\n| \"isweaknpoly p = False\""], ["", "lemma isnpolyh_isweaknpoly: \"isnpolyh p n0 \\<Longrightarrow> isweaknpoly p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isnpolyh p n0 \\<Longrightarrow> isweaknpoly p", "by (induct p arbitrary: n0) auto"], ["", "lemma swap_isweanpoly: \"isweaknpoly p \\<Longrightarrow> isweaknpoly (swap n m p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isweaknpoly p \\<Longrightarrow> isweaknpoly (swap n m p)", "by (induct p) auto"], ["", "end"]]}