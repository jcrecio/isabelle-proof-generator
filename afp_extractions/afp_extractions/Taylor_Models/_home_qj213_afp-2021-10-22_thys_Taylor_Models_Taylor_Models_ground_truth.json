{"file_name": "/home/qj213/afp-2021-10-22/thys/Taylor_Models/Taylor_Models.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Taylor_Models", "problem_names": ["lemma compute_bound_fa_correct:\n  \"interpret_floatarith f i \\<in>\\<^sub>r ivl\"\n  if \"compute_bound_fa prec f I = Some ivl\"\n    \"i all_in I\"\n  for i::\"real list\"", "lemma Ipoly_num_params_cong: \"Ipoly xs p = Ipoly ys p\"\n  if \"\\<And>i. i < num_params p \\<Longrightarrow> xs ! i = ys ! i\"", "lemma insertion_num_params_cong: \"insertion e p = insertion f p\"\n  if \"\\<And>i. i < num_params p \\<Longrightarrow> e i = f i\"", "lemma insertion_eq_IpolyI: \"insertion xs p = Ipoly ys p\"\n  if \"\\<And>i. i < num_params p \\<Longrightarrow> xs i = ys ! i\"", "lemma Ipoly_eq_insertionI: \"Ipoly ys p = insertion xs p\"\n  if \"\\<And>i. i < num_params p \\<Longrightarrow> xs i = ys ! i\"", "lemma range_tmI:\n  \"x \\<in>\\<^sub>i range_tm e tm\"\n  if x: \"x \\<in>\\<^sub>i interval_of (insertion e ((tm_poly tm))) + real_interval (tm_bound tm)\"\n  for e::\"nat\\<Rightarrow>real\"", "lemma range_tmD:\n  \"x \\<in>\\<^sub>i interval_of (insertion e (tm_poly tm)) + real_interval (tm_bound tm)\"\n  if \"x \\<in>\\<^sub>i range_tm e tm\"\n  for e::\"nat\\<Rightarrow>real\"", "lemma compute_bound_tm_def:\n  \"compute_bound_tm prec I a tm = compute_bound_poly prec (tm_poly tm) I a + (tm_bound tm)\"", "lemma real_of_float_in_real_interval_of[intro, simp]: \"real_of_float x \\<in>\\<^sub>r X\" if \"x \\<in>\\<^sub>i X\"", "lemma in_set_of_round_interval[intro, simp]:\n  \"x \\<in>\\<^sub>r round_interval prec X\" if \"x \\<in>\\<^sub>r X\"", "lemma in_set_real_minus_interval[intro, simp]:\n  \"x - y \\<in>\\<^sub>r X - Y\" if \"x \\<in>\\<^sub>r X\" \"y \\<in>\\<^sub>r Y\"", "lemma real_interval_plus: \"real_interval (a + b) = real_interval a + real_interval b\"", "lemma real_interval_uminus: \"real_interval (- b) = - real_interval b\"", "lemma real_interval_of: \"real_interval (interval_of b) = interval_of b\"", "lemma real_interval_minus: \"real_interval (a - b) = real_interval a - real_interval b\"", "lemma in_set_real_plus_interval[intro, simp]:\n  \"x + y \\<in>\\<^sub>r X + Y\" if \"x \\<in>\\<^sub>r X\" \"y \\<in>\\<^sub>r Y\"", "lemma in_set_neg_plus_interval[intro, simp]:\n  \"- y \\<in>\\<^sub>r - Y\" if \"y \\<in>\\<^sub>r Y\"", "lemma in_set_real_times_interval[intro, simp]:\n  \"x * y \\<in>\\<^sub>r X * Y\" if \"x \\<in>\\<^sub>r X\" \"y \\<in>\\<^sub>r Y\"", "lemma real_interval_one: \"real_interval 1 = 1\"", "lemma real_interval_zero: \"real_interval 0 = 0\"", "lemma real_interval_power: \"real_interval (a ^ b) = real_interval a ^ b\"", "lemma in_set_real_power_interval[intro, simp]:\n  \"x ^ n \\<in>\\<^sub>r X ^ n\" if \"x \\<in>\\<^sub>r X\"", "lemma power_float_interval_real_interval[intro, simp]:\n  \"x ^ n \\<in>\\<^sub>r power_float_interval prec n X\" if \"x \\<in>\\<^sub>r X\"", "lemma in_set_mult_float_interval[intro, simp]:\n  \"x * y \\<in>\\<^sub>r mult_float_interval prec X Y\" if \"x \\<in>\\<^sub>r X\" \"y \\<in>\\<^sub>r Y\"", "lemma in_set_real_minus_swapI: \"e i \\<in>\\<^sub>r I ! i - a ! i\"\n  if \"x - e i \\<in>\\<^sub>r a ! i\" \"x \\<in>\\<^sub>r I ! i\"", "lemma develops_at_withinI:\n  assumes all_in: \"a all_subset I\"\n  assumes e: \"\\<And>i. i < length I \\<Longrightarrow> e i \\<in>\\<^sub>r I ! i - a ! i\"\n  shows \"develops_at_within e a I\"", "lemma develops_at_withinD:\n  assumes \"develops_at_within e a I\"\n  shows \"a all_subset I\"\n    \"\\<And>i. i < length I \\<Longrightarrow> e i \\<in>\\<^sub>r I ! i - a ! i\"", "lemma compute_bound_poly_correct:\n  fixes p::\"float poly\"\n  assumes \"num_params p \\<le> length I\"\n  assumes dev: \"develops_at_within e a I\"\n  shows \"insertion e (p::real poly) \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p) I a\"", "lemma compute_bound_tm_correct:\n  fixes I :: \"float interval list\" and f :: \"real list \\<Rightarrow> real\"\n  assumes n: \"num_params (tm_poly t) \\<le> length I\"\n  assumes dev: \"develops_at_within e a I\"\n  assumes x0: \"x0 \\<in>\\<^sub>i range_tm e t\"\n  shows \"x0 \\<in>\\<^sub>r compute_bound_tm prec I a t\"", "lemma compute_bound_tm_correct_subset:\n  fixes I :: \"float interval list\" and f :: \"real list \\<Rightarrow> real\"\n  assumes n: \"num_params (tm_poly t) \\<le> length I\"\n  assumes dev: \"develops_at_within e a I\"\n  shows \"set_of (range_tm e t) \\<subseteq> set_of (real_interval (compute_bound_tm prec I a t))\"", "lemma compute_bound_poly_mono:\n  assumes \"num_params p \\<le> length I\"\n  assumes mem: \"I all_subset J\" \"a all_subset I\"\n  shows \"set_of (compute_bound_poly prec p I a) \\<subseteq> set_of (compute_bound_poly prec p J a)\"", "lemma compute_bound_tm_mono:\n  fixes I :: \"float interval list\" and f :: \"real list \\<Rightarrow> real\"\n  assumes \"num_params (tm_poly t) \\<le> length I\"\n  assumes \"I all_subset J\"\n  assumes \"a all_subset I\"\n  shows \"set_of (compute_bound_tm prec I a t) \\<subseteq> set_of (compute_bound_tm prec J a t)\"", "lemma zero_real_interval[intro,simp]: \"0 \\<in>\\<^sub>r 0\"", "lemma range_TM_tm_const[simp]: \"range_tm e (tm_const c) = interval_of c\"", "lemma num_params_tm_const[simp]: \"num_params (tm_poly (tm_const c)) = 0\"", "lemma num_params_tm_pi[simp]: \"num_params (tm_poly (tm_pi prec)) = 0\"", "lemma range_tm_tm_pi: \"pi \\<in>\\<^sub>i range_tm e (tm_pi prec)\"", "lemma isDERIV_DERIV_floatarith:\n  assumes \"isDERIV v f vs\"\n  shows \"isDERIV v (DERIV_floatarith v f) vs\"", "lemma isDERIV_is_analytic:\n  \"isDERIV i (Taylor_Models.deriv i f n) xs\"\n  if \"isDERIV i f xs\"", "lemma deriv_correct:\n  assumes \"isDERIV i f (xs[i:=t])\" \"i < length xs\"\n  shows \"((\\<lambda>x. interpret_floatarith (deriv i f n) (xs[i:=x])) has_real_derivative interpret_floatarith (deriv i f (Suc n)) (xs[i:=t]))\n    (at t within S)\"", "lemma deriv_rec_correct:\n  assumes \"isDERIV 0 f (xs[0:=t])\" \"0 < length xs\"\n  shows \"((\\<lambda>x. interpret_floatarith (deriv_rec f n) (xs[0:=x])) has_real_derivative interpret_floatarith (deriv_rec f (Suc n)) (xs[0:=t])) (at t within S)\"", "lemma deriv_rec_0_idem[simp]:\n  shows \"deriv_rec f 0 = f\"", "lemma tmf_c_correct:\n  fixes A::\"float interval list\" and I::\"float interval\" and f::floatarith and a::\"real list\"\n  assumes \"a all_in A\"\n  assumes \"tmf_c prec A f i = Some I\"\n  shows \"interpret_floatarith (deriv_rec f i) a / fact i \\<in>\\<^sub>r I\"", "lemma tmf_ivl_cs_length:\n  assumes \"tmf_ivl_cs prec n A a f = Some cs\"\n  shows \"length cs = n + 1\"", "lemma tmf_ivl_cs_correct:\n  fixes A::\"float interval list\" and f::floatarith\n  assumes \"a all_in I\"\n  assumes \"tmf_ivl_cs prec ord I a f = Some cs\"\n  shows \"\\<And>i. i < ord \\<Longrightarrow> tmf_c prec (map interval_of a) f i = Some (cs!i)\"\n    and \"tmf_c prec I f ord = Some (cs!ord)\"\n    and \"length cs = Suc ord\"", "lemma Ipoly_fst_tmf_polys:\n  \"Ipoly xs (fst (tmf_polys z)) = (\\<Sum>i<length z. xs ! 0 ^ i * (mid (z ! i)))\"\n  for xs::\"real list\"", "lemma insertion_fst_tmf_polys:\n  \"insertion e (fst (tmf_polys z)) = (\\<Sum>i<length z. e 0 ^ i * (mid (z ! i)))\"\n  for e::\"nat \\<Rightarrow> real\"", "lemma Ipoly_snd_tmf_polys:\n  \"set_of (horner_eval (real_interval o centered o nth z) x (length z)) \\<subseteq> set_of (Ipoly [x] (map_poly real_interval (snd (tmf_polys z))))\"", "lemma zero_interval[intro,simp]: \"0 \\<in>\\<^sub>i 0\"", "lemma sum_in_intervalI: \"sum f X \\<in>\\<^sub>i sum g X\" if \"\\<And>x. x \\<in> X \\<Longrightarrow> f x \\<in>\\<^sub>i g x\"\n  for f :: \"_ \\<Rightarrow> 'a :: ordered_comm_monoid_add\"", "lemma set_of_sum_subset: \"set_of (sum f X) \\<subseteq> set_of (sum g X)\"\n  if \"\\<And>x. x \\<in> X \\<Longrightarrow> set_of (f x) \\<subseteq> set_of (g x)\"\n  for f :: \"_\\<Rightarrow>'a::linordered_ab_group_add interval\"", "lemma interval_of_plus: \"interval_of (a + b) = interval_of a + interval_of b\"", "lemma interval_of_uminus: \"interval_of (- a) = - interval_of a\"", "lemma interval_of_zero: \"interval_of 0 = 0\"", "lemma interval_of_sum: \"interval_of (sum f X) = sum (\\<lambda>x. interval_of (f x)) X\"", "lemma interval_of_prod: \"interval_of (a * b) = interval_of a * interval_of b\"", "lemma in_set_of_interval_of[simp]: \"x \\<in>\\<^sub>i (interval_of y) \\<longleftrightarrow> x = y\" for x y::\"'a::order\"", "lemma real_interval_Ipoly: \"real_interval (Ipoly xs p) = Ipoly (map real_interval xs) (map_poly real_interval p)\"\n  if \"num_params p \\<le> length xs\"", "lemma num_params_tmf_polys1: \"num_params (fst (tmf_polys z)) \\<le> Suc 0\"", "lemma num_params_tmf_polys2: \"num_params (snd (tmf_polys z)) \\<le> Suc 0\"", "lemma set_of_real_interval_subset: \"set_of (real_interval x) \\<subseteq> set_of (real_interval y)\"\n  if \"set_of x \\<subseteq> set_of y\"", "theorem tm_floatarith:\n  assumes t: \"tm_floatarith prec ord I xs f = Some t\"\n  assumes a: \"xs all_in I\" and x: \"x \\<in>\\<^sub>r I ! 0\"\n  assumes xs_ne: \"xs \\<noteq> []\"\n  assumes deriv: \"\\<And>x. x \\<in>\\<^sub>r I ! 0 \\<Longrightarrow> isDERIV 0 f (xs[0 := x])\"\n  assumes \"\\<And>i. 0 < i \\<Longrightarrow> i < length xs \\<Longrightarrow> e i = real_of_float (xs ! i)\"\n  assumes diff_e: \"(x - real_of_float (xs ! 0)) = e 0\"\n  shows \"interpret_floatarith f (xs[0:=x]) \\<in>\\<^sub>i range_tm e t\"", "lemmas [simp del] = tm_norm'.simps", "lemma insertion_polyadd[simp]: \"insertion e (a +\\<^sub>p b) = insertion e a + insertion e b\"\n  for a b::\"'a::ring_1 poly\"", "lemma insertion_polyneg[simp]: \"insertion e (~\\<^sub>p b) =  - insertion e b\"\n  for b::\"'a::ring_1 poly\"", "lemma insertion_polysub[simp]: \"insertion e (a -\\<^sub>p b) = insertion e a - insertion e b\"\n  for a b::\"'a::ring_1 poly\"", "lemma insertion_polymul[simp]: \"insertion e (a *\\<^sub>p b) = insertion e a * insertion e b\"\n  for a b::\"'a::comm_ring_1 poly\"", "lemma insertion_polypow[simp]: \"insertion e (a ^\\<^sub>p b) = insertion e a ^ b\"\n  for a::\"'a::comm_ring_1 poly\"", "lemma insertion_polynate [simp]:\n  \"insertion bs (polynate p) = (insertion bs p :: 'a::comm_ring_1)\"", "lemma tm_norm_poly_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t\"\n  shows \"x \\<in>\\<^sub>i range_tm e (tm_norm_poly t)\"", "lemma split_by_degree_correct_insertion:\n  fixes x :: \"nat \\<Rightarrow> real\" and p :: \"float poly\"\n  assumes \"split_by_degree ord p = (l, r)\"\n  shows \"maxdegree l \\<le> ord\" (is ?P1)\n    and   \"insertion x p = insertion x l + insertion x r\" (is ?P2)\n    and   \"num_params l \\<le> num_params p\" (is ?P3)\n    and   \"num_params r \\<le> num_params p\" (is ?P4)", "lemma split_by_prec_correct_insertion:\n  fixes x :: \"nat \\<Rightarrow> real\" and p :: \"float poly\"\n  assumes \"split_by_prec ord p = (l, r)\"\n  shows \"insertion x p = insertion x l + insertion x r\" (is ?P1)\n    and \"num_params l \\<le> num_params p\" (is ?P2)\n    and \"num_params r \\<le> num_params p\" (is ?P3)", "lemma tm_lower_order_of_normed_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t\"\n  assumes dev: \"develops_at_within e a I\"\n  assumes \"num_params (tm_poly t) \\<le> length I\"\n  shows \"x \\<in>\\<^sub>i range_tm e (tm_lower_order_of_normed prec ord I a t)\"", "lemma num_params_tm_norm_poly_le: \"num_params (tm_poly (tm_norm_poly t)) \\<le> X\"\n  if \"num_params (tm_poly t) \\<le> X\"", "lemma tm_lower_order_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t\"\n  assumes dev: \"develops_at_within e a I\"\n  assumes \"num_params (tm_poly t) \\<le> length I\"\n  shows \"x \\<in>\\<^sub>i range_tm e (tm_lower_order prec ord I a t)\"", "lemma tm_round_floats_of_normed_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t\"\n  assumes dev: \"develops_at_within e a I\"\n  assumes \"num_params (tm_poly t) \\<le> length I\"\n  shows \"x \\<in>\\<^sub>i range_tm e (tm_round_floats_of_normed prec I a t)\"\n    \\<comment> \\<open>TODO: this is a clone of @{thm tm_lower_order_of_normed_range} -> general sweeping method!\\<close>", "lemma num_params_split_by_degree_le: \"num_params (fst (split_by_degree ord x)) \\<le> K\"\n  \"num_params (snd (split_by_degree ord x)) \\<le> K\"\n  if \"num_params x \\<le> K\" for x::\"float poly\"", "lemma num_params_split_by_prec_le: \"num_params (fst (split_by_prec ord x)) \\<le> K\"\n  \"num_params (snd (split_by_prec ord x)) \\<le> K\"\n  if \"num_params x \\<le> K\" for x::\"float poly\"", "lemma num_params_tm_norm'_le:\n  \"num_params (tm_poly (tm_round_floats_of_normed prec I a t)) \\<le> X\"\n  if \"num_params (tm_poly t) \\<le> X\"", "lemma tm_round_floats_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t\" \"develops_at_within e a I\" \"num_params (tm_poly t) \\<le> length I\"\n  shows \"x \\<in>\\<^sub>i range_tm e (tm_round_floats prec I a t)\"", "lemma num_params_tm_lower_order_of_normed_le: \"num_params (tm_poly (tm_lower_order_of_normed prec ord I a t)) \\<le> X\"\n  if \"num_params (tm_poly t) \\<le> X\"", "lemma tm_norm'_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t\" \"develops_at_within e a I\" \"num_params (tm_poly t) \\<le> length I\"\n  shows \"x \\<in>\\<^sub>i range_tm e (tm_norm' prec ord I a t)\"", "lemma num_params_tm_norm':\n  \"num_params (tm_poly (tm_norm' prec ord I a t)) \\<le> X\"\n  if \"num_params (tm_poly t) \\<le> X\"", "lemma tm_norm_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t\" \"develops_at_within e a I\" \"num_params (tm_poly t) \\<le> length I\"\n  shows \"x \\<in>\\<^sub>i range_tm e (tm_norm prec ord I a t)\"", "lemmas [simp del] = tm_norm.simps", "lemma tm_neg_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t\"\n  shows \"- x \\<in>\\<^sub>i range_tm e (tm_neg t)\"", "lemmas [simp del] = tm_neg.simps", "lemma tm_bound_tm_add[simp]: \"tm_bound (tm_add t1 t2) = tm_bound t1 + tm_bound t2\"", "lemma interval_of_add: \"interval_of (a + b) = interval_of a + interval_of b\"", "lemma tm_add_range:\n  \"x + y \\<in>\\<^sub>i range_tm e (tm_add t1 t2)\"\n  if \"x \\<in>\\<^sub>i range_tm e t1\"\n    \"y \\<in>\\<^sub>i range_tm e t2\"", "lemmas [simp del] = tm_add.simps", "lemma tm_sub_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t1\"\n  assumes \"y \\<in>\\<^sub>i range_tm e t2\"\n  shows \"x - y \\<in>\\<^sub>i range_tm e (tm_sub t1 t2)\"", "lemmas [simp del] = tm_sub.simps", "lemma set_of_intervalI: \"set_of (interval_of y) \\<subseteq> set_of Y\" if \"y \\<in>\\<^sub>i Y\" for y::\"'a::order\"", "lemma set_of_real_intervalI: \"set_of (interval_of y) \\<subseteq> set_of (real_interval Y)\" if \"y \\<in>\\<^sub>r Y\"", "lemma tm_mul_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t1\"\n  assumes \"y \\<in>\\<^sub>i range_tm e t2\"\n  assumes dev: \"develops_at_within e a I\"\n  assumes params: \"num_params (tm_poly t1) \\<le> length I\" \"num_params (tm_poly t2) \\<le> length I\"\n  shows \"x * y \\<in>\\<^sub>i range_tm e (tm_mul prec ord I a t1 t2)\"", "lemma num_params_tm_mul_le:\n  \"num_params (tm_poly (tm_mul prec ord I a t1 t2)) \\<le> X\"\n  if \"num_params (tm_poly t1) \\<le> X\"\n    \"num_params (tm_poly t2) \\<le> X\"", "lemmas [simp del] = tm_pow.simps\\<comment> \\<open>TODO: make a systematic decision\\<close>", "lemma\n  shows tm_pow_range: \"num_params (tm_poly t) \\<le> length I \\<Longrightarrow>\n      develops_at_within e a I \\<Longrightarrow>\n      x \\<in>\\<^sub>i range_tm e t \\<Longrightarrow>\n      x ^ n \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a t n)\"\n    and num_params_tm_pow_le[THEN order_trans]:\n      \"num_params (tm_poly (tm_pow prec ord I a t n)) \\<le> num_params (tm_poly t)\"", "lemma num_params_tm_add_le:\n  \"num_params (tm_poly (tm_add t1 t2)) \\<le> X\"\n  if \"num_params (tm_poly t1) \\<le> X\"\n    \"num_params (tm_poly t2) \\<le> X\"", "lemma num_params_tm_neg_eq[simp]:\n  \"num_params (tm_poly (tm_neg t1)) = num_params (tm_poly t1)\"", "lemma num_params_tm_sub_le:\n  \"num_params (tm_poly (tm_sub t1 t2)) \\<le> X\"\n  if \"num_params (tm_poly t1) \\<le> X\"\n    \"num_params (tm_poly t2) \\<le> X\"", "lemma num_params_eval_poly_le: \"num_params (tm_poly (eval_poly_at_tm prec ord I a p t)) \\<le> x\"\n  if \"num_params (tm_poly t) \\<le> x\" \"num_params p \\<le> max 1 x\"", "lemma eval_poly_at_tm_range:\n  assumes \"num_params p \\<le> 1\"\n  assumes tg_def: \"e' 0 \\<in>\\<^sub>i range_tm e tg\"\n  assumes dev: \"develops_at_within e a I\" and params: \"num_params (tm_poly tg) \\<le> length I\"\n  shows \"insertion e' p \\<in>\\<^sub>i range_tm e (eval_poly_at_tm prec ord I a p tg)\"", "lemma tm_inc_err_range: \"x \\<in>\\<^sub>i range_tm e (tm_inc_err i t)\"\n  if \"x \\<in>\\<^sub>i range_tm e t + real_interval i\"", "lemma num_params_tm_inc_err: \"num_params (tm_poly (tm_inc_err i t)) \\<le> X\"\n  if \"num_params (tm_poly t) \\<le> X\"", "lemma num_params_tm_comp_le: \"num_params (tm_poly (tm_comp prec ord I a ga tf tg)) \\<le> X\"\n  if \"num_params (tm_poly tf) \\<le> max 1 X\" \"num_params (tm_poly tg) \\<le> X\"", "lemma tm_comp_range:\n  assumes tf_def: \"x \\<in>\\<^sub>i range_tm e' tf\"\n  assumes tg_def: \"e' 0 \\<in>\\<^sub>i range_tm e (tm_sub tg (tm_const ga))\"\n  assumes params: \"num_params (tm_poly tf) \\<le> 1\" \"num_params (tm_poly tg) \\<le> length I\"\n  assumes dev: \"develops_at_within e a I\"\n  shows \"x \\<in>\\<^sub>i range_tm e (tm_comp prec ord I a ga tf tg)\"", "lemma mid_centered_collapse:\n  \"interval_of (real_of_float (mid abs_bound)) + real_interval (centered abs_bound) =\n    real_interval abs_bound\"", "lemmas [simp del] = tm_abs.simps", "lemma tm_abs_range:\n  assumes x: \"x \\<in>\\<^sub>i range_tm e t\"\n  assumes n: \"num_params (tm_poly t) \\<le> length I\" and d: \"develops_at_within e a I\"\n  shows \"abs x \\<in>\\<^sub>i range_tm e (tm_abs prec I a t)\"", "lemma num_params_tm_abs_le: \"num_params (tm_poly (tm_abs prec I a t)) \\<le> X\" if \"num_params (tm_poly t) \\<le> X\"", "lemma real_interval_sup: \"real_interval (sup a b) = sup (real_interval a) (real_interval b)\"", "lemma in_interval_supI1: \"x \\<in>\\<^sub>i a \\<Longrightarrow> x \\<in>\\<^sub>i sup a b\"\n  and in_interval_supI2: \"x \\<in>\\<^sub>i b \\<Longrightarrow> x \\<in>\\<^sub>i sup a b\"\n  for x::\"'a::lattice\"", "lemma tm_union_range_left:\n  assumes \"x \\<in>\\<^sub>i range_tm e t1\"\n    \"num_params (tm_poly t1) \\<le> length I\" \"develops_at_within e a I\"\n  shows \"x \\<in>\\<^sub>i range_tm e (tm_union prec I a t1 t2)\"", "lemma tm_union_range_right:\n  assumes \"x \\<in>\\<^sub>i range_tm e t2\"\n    \"num_params (tm_poly t2) \\<le> length I\" \"develops_at_within e a I\"\n  shows \"x \\<in>\\<^sub>i range_tm e (tm_union prec I a t1 t2)\"", "lemma num_params_tm_union_le:\n  \"num_params (tm_poly (tm_union prec I a t1 t2)) \\<le> X\"\n  if \"num_params (tm_poly t1) \\<le> X\" \"num_params (tm_poly t2) \\<le> X\"", "lemmas [simp del] = tm_union.simps tm_min.simps tm_max.simps", "lemma tm_min_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t1\"\n  assumes \"y \\<in>\\<^sub>i range_tm e t2\"\n    \"num_params (tm_poly t1) \\<le> length I\"\n    \"num_params (tm_poly t2) \\<le> length I\"\n    \"develops_at_within e a I\"\n  shows \"min x y \\<in>\\<^sub>i range_tm e (tm_min prec I a t1 t2)\"", "lemma tm_max_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t1\"\n  assumes \"y \\<in>\\<^sub>i range_tm e t2\"\n    \"num_params (tm_poly t1) \\<le> length I\"\n    \"num_params (tm_poly t2) \\<le> length I\"\n    \"develops_at_within e a I\"\n  shows \"max x y \\<in>\\<^sub>i range_tm e (tm_max prec I a t1 t2)\"", "lemma mid_in_real_interval: \"mid i \\<in>\\<^sub>r i\"", "lemma set_of_real_interval_mono:\"set_of (real_interval x) \\<subseteq> set_of (real_interval y)\"\n  if \"set_of x \\<subseteq> set_of y\"", "lemmas [simp del] = compute_bound_poly.simps tm_floatarith.simps", "lemmas [simp del] = tmf_ivl_cs.simps compute_bound_tm.simps tmf_polys.simps", "lemma tm_floatarith_eq_Some_num_params:\n  \"tm_floatarith prec ord a b f = Some tf \\<Longrightarrow> num_params (tm_poly tf) \\<le> 1\"", "lemma compute_tm_by_comp_range:\n  assumes \"max_Var_floatarith f \\<le> 1\"\n  assumes a: \"a all_subset I\"\n  assumes tx_range: \"x \\<in>\\<^sub>i range_tm e tg\"\n  assumes t_def: \"compute_tm_by_comp prec ord I a f (Some tg) c = Some t\"\n  assumes f_deriv:\n    \"\\<And>x. x \\<in>\\<^sub>r compute_bound_tm prec I a tg \\<Longrightarrow> c (compute_bound_tm prec I a tg) \\<Longrightarrow> isDERIV 0 f [x]\"\n  assumes params: \"num_params (tm_poly tg) \\<le> length I\"\n    and dev: \"develops_at_within e a I\"\n  shows \"interpret_floatarith f [x] \\<in>\\<^sub>i range_tm e t\"", "lemmas [simp del] = compute_tm_by_comp.simps", "lemma compute_tm_by_comp_num_params_le:\n  assumes \"compute_tm_by_comp prec ord I a f (Some t0) i = Some t\"\n  assumes \"1 \\<le> X\" \"num_params (tm_poly t0) \\<le> X\"\n  shows \"num_params (tm_poly t) \\<le> X\"", "lemma compute_tm_by_comp_eq_Some_iff: \"compute_tm_by_comp prec ord I a f t0 i = Some t \\<longleftrightarrow>\n  (\\<exists>z x2. t0 = Some x2 \\<and>\n    tm_floatarith prec ord [compute_bound_tm prec I a x2]\n      [mid (compute_bound_tm prec a a x2)] f =\n      Some z\n   \\<and> tm_comp prec ord I a\n      (mid (compute_bound_tm prec a a x2)) z x2 = t\n   \\<and> i (compute_bound_tm prec I a x2))\"", "lemma num_params_approx_tm:\n  assumes \"approx_tm prec ord I a f env = Some t\"\n  assumes \"\\<And>tm. tm \\<in> set env \\<Longrightarrow> num_params (tm_poly tm) \\<le> length I\"\n  shows \"num_params (tm_poly t) \\<le> length I\"", "lemma in_interval_realI: \"a \\<in>\\<^sub>i I\" if \"a \\<in>\\<^sub>r I\"", "lemma all_subset_all_inI: \"map interval_of a all_subset I\" if \"a all_in I\"", "lemma compute_tm_by_comp_None: \"compute_tm_by_comp p ord I a x None k = None\"", "lemma approx_tm_num_Vars_None:\n  assumes \"max_Var_floatarith f > length env\"\n  shows \"approx_tm p ord I a f env = None\"", "lemma approx_tm_num_Vars:\n  assumes \"approx_tm prec ord I a f env = Some t\"\n  shows \"max_Var_floatarith f \\<le> length env\"", "lemma approx_tm_range:\n  assumes a: \"a all_subset I\"\n  assumes t_def: \"approx_tm prec ord I a f env = Some t\"\n  assumes allin: \"xs all_in\\<^sub>i range_tms e env\"\n  assumes devs: \"develops_at_within e a I\"\n  assumes env: \"\\<And>tm. tm \\<in> set env \\<Longrightarrow> num_params (tm_poly tm) \\<le> length I\"\n  shows \"interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t\"", "lemma mem_range_tms_Cons_iff[simp]: \"x#xs all_in\\<^sub>i range_tms e (X#XS) \\<longleftrightarrow> x \\<in>\\<^sub>i range_tm e X \\<and> xs all_in\\<^sub>i range_tms e XS\"", "lemma approx_slp'_range:\n  assumes i: \"i all_subset I\"\n  assumes dev: \"develops_at_within e i I\"\n  assumes vs: \"vs all_in\\<^sub>i range_tms e VS\" \"(\\<And>tm. tm \\<in> set VS \\<Longrightarrow> num_params (tm_poly tm) \\<le> length I)\"\n  assumes appr: \"approx_slp' p ord I i ra VS = Some X\"\n  shows \"interpret_slp ra vs all_in\\<^sub>i range_tms e X\"", "lemma length_range_tms[simp]: \"length (range_tms e VS) = length VS\"", "lemma set_of_Ivl: \"set_of (Ivl a b) = {a .. b}\" if \"a \\<le> b\"", "lemma set_of_zero[simp]: \"set_of 0 = {0::'a::ordered_comm_monoid_add}\"", "theorem approx_slp_range_tms:\n  assumes \"approx_slp p ord d slp VS = Some X\"\n  assumes slp_def: \"slp = slp_of_fas fas\"\n  assumes d_def: \"d = length fas\"\n  assumes e: \"e \\<in> UNIV \\<rightarrow> {-1 .. 1}\"\n  assumes vs: \"vs all_in\\<^sub>i range_tms e VS\"\n  assumes lens: \"\\<And>tm. tm \\<in> set VS \\<Longrightarrow> num_params (tm_poly tm) \\<le> length vs\"\n  shows \"interpret_floatariths fas vs all_in\\<^sub>i range_tms e X\""], "translations": [["", "lemma compute_bound_fa_correct:\n  \"interpret_floatarith f i \\<in>\\<^sub>r ivl\"\n  if \"compute_bound_fa prec f I = Some ivl\"\n    \"i all_in I\"\n  for i::\"real list\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith f i \\<in>\\<^sub>r ivl", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. interpret_floatarith f i \\<in>\\<^sub>r ivl", "have bounded: \"bounded_by i (map Some I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_by i (map Some I)", "using that(2)"], ["proof (prove)\nusing this:\n  i all_in I\n\ngoal (1 subgoal):\n 1. bounded_by i (map Some I)", "unfolding bounded_by_def"], ["proof (prove)\nusing this:\n  i all_in I\n\ngoal (1 subgoal):\n 1. \\<forall>ia<length (map Some I).\n       case map Some I ! ia of None \\<Rightarrow> True\n       | Some ivl \\<Rightarrow> i ! ia \\<in>\\<^sub>r ivl", "by (auto simp: bounds_of_interval_eq_lower_upper set_of_eq)"], ["proof (state)\nthis:\n  bounded_by i (map Some I)\n\ngoal (1 subgoal):\n 1. interpret_floatarith f i \\<in>\\<^sub>r ivl", "from that"], ["proof (chain)\npicking this:\n  compute_bound_fa prec f I = Some ivl\n  i all_in I", "have Some: \"approx prec f (map Some I) = Some ivl\""], ["proof (prove)\nusing this:\n  compute_bound_fa prec f I = Some ivl\n  i all_in I\n\ngoal (1 subgoal):\n 1. approx prec f (map Some I) = Some ivl", "by (auto simp: lower_Interval upper_Interval min_def split: option.splits if_splits)"], ["proof (state)\nthis:\n  approx prec f (map Some I) = Some ivl\n\ngoal (1 subgoal):\n 1. interpret_floatarith f i \\<in>\\<^sub>r ivl", "from approx[OF bounded Some]"], ["proof (chain)\npicking this:\n  interpret_floatarith f i \\<in>\\<^sub>r ivl", "show ?thesis"], ["proof (prove)\nusing this:\n  interpret_floatarith f i \\<in>\\<^sub>r ivl\n\ngoal (1 subgoal):\n 1. interpret_floatarith f i \\<in>\\<^sub>r ivl", "by (auto simp: set_of_eq)"], ["proof (state)\nthis:\n  interpret_floatarith f i \\<in>\\<^sub>r ivl\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Definition of Taylor models and notion of rangeity\\<close>"], ["", "text \\<open>Taylor models are a pair of a polynomial and an absolute error bound.\\<close>"], ["", "datatype taylor_model = TaylorModel (tm_poly: \"float poly\") (tm_bound: \"float interval\")"], ["", "text \\<open>Taylor model for a real valuation of variables\\<close>"], ["", "primrec insertion :: \"(nat \\<Rightarrow> 'a) \\<Rightarrow> 'a poly \\<Rightarrow> 'a::{plus,zero,minus,uminus,times,one,power}\"\nwhere\n  \"insertion bs (C c) = c\"\n| \"insertion bs (poly.Bound n) = bs n\"\n| \"insertion bs (Neg a) = - insertion bs a\"\n| \"insertion bs (poly.Add a b) = insertion bs a + insertion bs b\"\n| \"insertion bs (Sub a b) = insertion bs a - insertion bs b\"\n| \"insertion bs (Mul a b) = insertion bs a * insertion bs b\"\n| \"insertion bs (Pw t n) = insertion bs t ^ n\"\n| \"insertion bs (CN c n p) = insertion bs c + (bs n) * insertion bs p\""], ["", "definition range_tm :: \"(nat \\<Rightarrow> real) \\<Rightarrow> taylor_model \\<Rightarrow> real interval\" where\n\"range_tm e tm = interval_of (insertion e (tm_poly tm)) + real_interval (tm_bound tm)\""], ["", "lemma Ipoly_num_params_cong: \"Ipoly xs p = Ipoly ys p\"\n  if \"\\<And>i. i < num_params p \\<Longrightarrow> xs ! i = ys ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly xs p = Ipoly ys p", "using that"], ["proof (prove)\nusing this:\n  ?i < num_params p \\<Longrightarrow> xs ! ?i = ys ! ?i\n\ngoal (1 subgoal):\n 1. Ipoly xs p = Ipoly ys p", "by (induction p; auto)"], ["", "lemma insertion_num_params_cong: \"insertion e p = insertion f p\"\n  if \"\\<And>i. i < num_params p \\<Longrightarrow> e i = f i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insertion e p = insertion f p", "using that"], ["proof (prove)\nusing this:\n  ?i < num_params p \\<Longrightarrow> e ?i = f ?i\n\ngoal (1 subgoal):\n 1. insertion e p = insertion f p", "by (induction p; auto)"], ["", "lemma insertion_eq_IpolyI: \"insertion xs p = Ipoly ys p\"\n  if \"\\<And>i. i < num_params p \\<Longrightarrow> xs i = ys ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insertion xs p = Ipoly ys p", "using that"], ["proof (prove)\nusing this:\n  ?i < num_params p \\<Longrightarrow> xs ?i = ys ! ?i\n\ngoal (1 subgoal):\n 1. insertion xs p = Ipoly ys p", "by (induction p; auto)"], ["", "lemma Ipoly_eq_insertionI: \"Ipoly ys p = insertion xs p\"\n  if \"\\<And>i. i < num_params p \\<Longrightarrow> xs i = ys ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly ys p = insertion xs p", "using that"], ["proof (prove)\nusing this:\n  ?i < num_params p \\<Longrightarrow> xs ?i = ys ! ?i\n\ngoal (1 subgoal):\n 1. Ipoly ys p = insertion xs p", "by (induction p; auto)"], ["", "lemma range_tmI:\n  \"x \\<in>\\<^sub>i range_tm e tm\"\n  if x: \"x \\<in>\\<^sub>i interval_of (insertion e ((tm_poly tm))) + real_interval (tm_bound tm)\"\n  for e::\"nat\\<Rightarrow>real\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e tm", "by (auto simp: range_tm_def x)"], ["", "lemma range_tmD:\n  \"x \\<in>\\<^sub>i interval_of (insertion e (tm_poly tm)) + real_interval (tm_bound tm)\"\n  if \"x \\<in>\\<^sub>i range_tm e tm\"\n  for e::\"nat\\<Rightarrow>real\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i interval_of\n                     (insertion e (map_poly real_of_float (tm_poly tm))) +\n                    real_interval (tm_bound tm)", "using that"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>i range_tm e tm\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i interval_of\n                     (insertion e (map_poly real_of_float (tm_poly tm))) +\n                    real_interval (tm_bound tm)", "by (auto simp: range_tm_def)"], ["", "subsection \\<open>Interval bounds for Taylor models\\<close>"], ["", "text \\<open>Bound a polynomial by simply approximating it with interval arguments.\\<close>"], ["", "fun compute_bound_poly :: \"nat \\<Rightarrow> float interval poly \\<Rightarrow> (float interval list) \\<Rightarrow> (float interval list) \\<Rightarrow> float interval\" where\n  \"compute_bound_poly prec (poly.C f) I a = f\"\n| \"compute_bound_poly prec (poly.Bound n) I a = round_interval prec (I ! n - (a ! n))\"\n| \"compute_bound_poly prec (poly.Add p q) I a =\n    round_interval prec (compute_bound_poly prec p I a + compute_bound_poly prec q I a)\"\n| \"compute_bound_poly prec (poly.Sub p q) I a =\n    round_interval prec (compute_bound_poly prec p I a - compute_bound_poly prec q I a)\"\n| \"compute_bound_poly prec (poly.Mul p q) I a =\n    mult_float_interval prec (compute_bound_poly prec p I a) (compute_bound_poly prec q I a)\"\n| \"compute_bound_poly prec (poly.Neg p) I a = -compute_bound_poly prec p I a\"\n| \"compute_bound_poly prec (poly.Pw p n) I a = power_float_interval prec n (compute_bound_poly prec p I a)\"\n| \"compute_bound_poly prec (poly.CN p n q) I a =\n    round_interval prec (compute_bound_poly prec p I a +\n      mult_float_interval prec (round_interval prec (I ! n - (a ! n))) (compute_bound_poly prec q I a))\""], ["", "text \\<open>Bounds on Taylor models are simply a bound on its polynomial, widened by the approximation error.\\<close>"], ["", "fun compute_bound_tm :: \"nat \\<Rightarrow> float interval list \\<Rightarrow> float interval list \\<Rightarrow> taylor_model \\<Rightarrow> float interval\"\n  where \"compute_bound_tm prec I a (TaylorModel p e) = compute_bound_poly prec p I a + e\""], ["", "lemma compute_bound_tm_def:\n  \"compute_bound_tm prec I a tm = compute_bound_poly prec (tm_poly tm) I a + (tm_bound tm)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compute_bound_tm prec I a tm =\n    compute_bound_poly prec (map_poly interval_of (tm_poly tm)) I a +\n    tm_bound tm", "by (cases tm) auto"], ["", "lemma real_of_float_in_real_interval_of[intro, simp]: \"real_of_float x \\<in>\\<^sub>r X\" if \"x \\<in>\\<^sub>i X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_float x \\<in>\\<^sub>r X", "using that"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>i X\n\ngoal (1 subgoal):\n 1. real_of_float x \\<in>\\<^sub>r X", "by (auto simp: set_of_eq)"], ["", "lemma in_set_of_round_interval[intro, simp]:\n  \"x \\<in>\\<^sub>r round_interval prec X\" if \"x \\<in>\\<^sub>r X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>r round_interval prec X", "using round_ivl_correct[of X prec] that"], ["proof (prove)\nusing this:\n  set_of X \\<subseteq> set_of (round_interval prec X)\n  x \\<in>\\<^sub>r X\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>r round_interval prec X", "by (auto simp: set_of_eq)"], ["", "lemma in_set_real_minus_interval[intro, simp]:\n  \"x - y \\<in>\\<^sub>r X - Y\" if \"x \\<in>\\<^sub>r X\" \"y \\<in>\\<^sub>r Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x - y \\<in>\\<^sub>r X - Y", "using that"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>r X\n  y \\<in>\\<^sub>r Y\n\ngoal (1 subgoal):\n 1. x - y \\<in>\\<^sub>r X - Y", "by (auto simp: set_of_eq)"], ["", "lemma real_interval_plus: \"real_interval (a + b) = real_interval a + real_interval b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_interval (a + b) = real_interval a + real_interval b", "by (simp add: interval_eqI)"], ["", "lemma real_interval_uminus: \"real_interval (- b) = - real_interval b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_interval (- b) = - real_interval b", "by (simp add: interval_eqI)"], ["", "lemma real_interval_of: \"real_interval (interval_of b) = interval_of b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_interval (interval_of b) = interval_of (real_of_float b)", "by (simp add: interval_eqI)"], ["", "lemma real_interval_minus: \"real_interval (a - b) = real_interval a - real_interval b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_interval (a - b) = real_interval a - real_interval b", "using real_interval_plus[of a \"-b\"] real_interval_uminus[of b]"], ["proof (prove)\nusing this:\n  real_interval (a + - b) = real_interval a + real_interval (- b)\n  real_interval (- b) = - real_interval b\n\ngoal (1 subgoal):\n 1. real_interval (a - b) = real_interval a - real_interval b", "by (auto simp: interval_eq_iff)"], ["", "lemma in_set_real_plus_interval[intro, simp]:\n  \"x + y \\<in>\\<^sub>r X + Y\" if \"x \\<in>\\<^sub>r X\" \"y \\<in>\\<^sub>r Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x + y \\<in>\\<^sub>r X + Y", "using that"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>r X\n  y \\<in>\\<^sub>r Y\n\ngoal (1 subgoal):\n 1. x + y \\<in>\\<^sub>r X + Y", "by (auto simp: set_of_eq)"], ["", "lemma in_set_neg_plus_interval[intro, simp]:\n  \"- y \\<in>\\<^sub>r - Y\" if \"y \\<in>\\<^sub>r Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - y \\<in>\\<^sub>r - Y", "using that"], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>r Y\n\ngoal (1 subgoal):\n 1. - y \\<in>\\<^sub>r - Y", "by (auto simp: set_of_eq)"], ["", "lemma in_set_real_times_interval[intro, simp]:\n  \"x * y \\<in>\\<^sub>r X * Y\" if \"x \\<in>\\<^sub>r X\" \"y \\<in>\\<^sub>r Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * y \\<in>\\<^sub>r X * Y", "using that"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>r X\n  y \\<in>\\<^sub>r Y\n\ngoal (1 subgoal):\n 1. x * y \\<in>\\<^sub>r X * Y", "by (auto simp: real_interval_times intro!: times_in_intervalI)"], ["", "lemma real_interval_one: \"real_interval 1 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_interval 1 = 1", "by (simp add: interval_eqI)"], ["", "lemma real_interval_zero: \"real_interval 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_interval 0 = 0", "by (simp add: interval_eqI)"], ["", "lemma real_interval_power: \"real_interval (a ^ b) = real_interval a ^ b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_interval (a ^ b) = real_interval a ^ b", "by (induction b arbitrary: a)\n    (auto simp: real_interval_times real_interval_one)"], ["", "lemma in_set_real_power_interval[intro, simp]:\n  \"x ^ n \\<in>\\<^sub>r X ^ n\" if \"x \\<in>\\<^sub>r X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ^ n \\<in>\\<^sub>r X ^ n", "using that"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>r X\n\ngoal (1 subgoal):\n 1. x ^ n \\<in>\\<^sub>r X ^ n", "by (auto simp: real_interval_power intro!: set_of_power_mono)"], ["", "lemma power_float_interval_real_interval[intro, simp]:\n  \"x ^ n \\<in>\\<^sub>r power_float_interval prec n X\" if \"x \\<in>\\<^sub>r X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ^ n \\<in>\\<^sub>r power_float_interval prec n X", "by (auto simp: real_interval_power that intro!: power_float_intervalI)"], ["", "lemma in_set_mult_float_interval[intro, simp]:\n  \"x * y \\<in>\\<^sub>r mult_float_interval prec X Y\" if \"x \\<in>\\<^sub>r X\" \"y \\<in>\\<^sub>r Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * y \\<in>\\<^sub>r mult_float_interval prec X Y", "using mult_float_interval[of X Y] in_set_real_times_interval[OF that] that(1) that(2)"], ["proof (prove)\nusing this:\n  set_of (real_interval X) * set_of (real_interval Y)\n  \\<subseteq> set_of (real_interval (mult_float_interval ?prec X Y))\n  x * y \\<in>\\<^sub>r X * Y\n  x \\<in>\\<^sub>r X\n  y \\<in>\\<^sub>r Y\n\ngoal (1 subgoal):\n 1. x * y \\<in>\\<^sub>r mult_float_interval prec X Y", "by blast"], ["", "lemma in_set_real_minus_swapI: \"e i \\<in>\\<^sub>r I ! i - a ! i\"\n  if \"x - e i \\<in>\\<^sub>r a ! i\" \"x \\<in>\\<^sub>r I ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e i \\<in>\\<^sub>r I ! i - a ! i", "using that"], ["proof (prove)\nusing this:\n  x - e i \\<in>\\<^sub>r a ! i\n  x \\<in>\\<^sub>r I ! i\n\ngoal (1 subgoal):\n 1. e i \\<in>\\<^sub>r I ! i - a ! i", "by (auto simp: set_of_eq)"], ["", "definition develops_at_within::\"(nat \\<Rightarrow> real) \\<Rightarrow> float interval list \\<Rightarrow> float interval list \\<Rightarrow> bool\"\n  where \"develops_at_within e a I \\<longleftrightarrow> (a all_subset I) \\<and> (\\<forall>i < length I. e i \\<in>\\<^sub>r I ! i - a ! i)\""], ["", "lemma develops_at_withinI:\n  assumes all_in: \"a all_subset I\"\n  assumes e: \"\\<And>i. i < length I \\<Longrightarrow> e i \\<in>\\<^sub>r I ! i - a ! i\"\n  shows \"develops_at_within e a I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. develops_at_within e a I", "using assms"], ["proof (prove)\nusing this:\n  a all_subset I\n  ?i < length I \\<Longrightarrow> e ?i \\<in>\\<^sub>r I ! ?i - a ! ?i\n\ngoal (1 subgoal):\n 1. develops_at_within e a I", "by (auto simp: develops_at_within_def)"], ["", "lemma develops_at_withinD:\n  assumes \"develops_at_within e a I\"\n  shows \"a all_subset I\"\n    \"\\<And>i. i < length I \\<Longrightarrow> e i \\<in>\\<^sub>r I ! i - a ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a all_subset I &&&\n    (\\<And>i.\n        i < length I \\<Longrightarrow> e i \\<in>\\<^sub>r I ! i - a ! i)", "using assms"], ["proof (prove)\nusing this:\n  develops_at_within e a I\n\ngoal (1 subgoal):\n 1. a all_subset I &&&\n    (\\<And>i.\n        i < length I \\<Longrightarrow> e i \\<in>\\<^sub>r I ! i - a ! i)", "by (auto simp: develops_at_within_def)"], ["", "lemma compute_bound_poly_correct:\n  fixes p::\"float poly\"\n  assumes \"num_params p \\<le> length I\"\n  assumes dev: \"develops_at_within e a I\"\n  shows \"insertion e (p::real poly) \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p) I a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insertion e (map_poly real_of_float p)\n    \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p) I a", "using assms(1)"], ["proof (prove)\nusing this:\n  num_params p \\<le> length I\n\ngoal (1 subgoal):\n 1. insertion e (map_poly real_of_float p)\n    \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p) I a", "proof (induction p)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>x.\n       num_params (x)\\<^sub>p \\<le> length I \\<Longrightarrow>\n       insertion e (map_poly real_of_float (x)\\<^sub>p)\n       \\<in>\\<^sub>r compute_bound_poly prec\n                      (map_poly interval_of (x)\\<^sub>p) I a\n 2. \\<And>x.\n       num_params (poly.Bound x) \\<le> length I \\<Longrightarrow>\n       insertion e (map_poly real_of_float (poly.Bound x))\n       \\<in>\\<^sub>r compute_bound_poly prec\n                      (map_poly interval_of (poly.Bound x)) I a\n 3. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Add p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Add p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Add p1 p2)) I a\n 4. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Sub p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Sub p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Sub p1 p2)) I a\n 5. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Mul p1 p2)) I a\n 6. \\<And>p.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Neg p)) I a\n 7. \\<And>p x2a.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Pw p x2a)) I a\n 8. \\<And>p1 x2a p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (CN p1 x2a p2)) I a", "case (C x)"], ["proof (state)\nthis:\n  num_params (x)\\<^sub>p \\<le> length I\n\ngoal (8 subgoals):\n 1. \\<And>x.\n       num_params (x)\\<^sub>p \\<le> length I \\<Longrightarrow>\n       insertion e (map_poly real_of_float (x)\\<^sub>p)\n       \\<in>\\<^sub>r compute_bound_poly prec\n                      (map_poly interval_of (x)\\<^sub>p) I a\n 2. \\<And>x.\n       num_params (poly.Bound x) \\<le> length I \\<Longrightarrow>\n       insertion e (map_poly real_of_float (poly.Bound x))\n       \\<in>\\<^sub>r compute_bound_poly prec\n                      (map_poly interval_of (poly.Bound x)) I a\n 3. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Add p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Add p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Add p1 p2)) I a\n 4. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Sub p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Sub p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Sub p1 p2)) I a\n 5. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Mul p1 p2)) I a\n 6. \\<And>p.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Neg p)) I a\n 7. \\<And>p x2a.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Pw p x2a)) I a\n 8. \\<And>p1 x2a p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (CN p1 x2a p2)) I a", "then"], ["proof (chain)\npicking this:\n  num_params (x)\\<^sub>p \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  num_params (x)\\<^sub>p \\<le> length I\n\ngoal (1 subgoal):\n 1. insertion e (map_poly real_of_float (x)\\<^sub>p)\n    \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of (x)\\<^sub>p)\n                   I a", "by auto"], ["proof (state)\nthis:\n  insertion e (map_poly real_of_float (x)\\<^sub>p)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of (x)\\<^sub>p) I\n                 a\n\ngoal (7 subgoals):\n 1. \\<And>x.\n       num_params (poly.Bound x) \\<le> length I \\<Longrightarrow>\n       insertion e (map_poly real_of_float (poly.Bound x))\n       \\<in>\\<^sub>r compute_bound_poly prec\n                      (map_poly interval_of (poly.Bound x)) I a\n 2. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Add p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Add p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Add p1 p2)) I a\n 3. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Sub p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Sub p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Sub p1 p2)) I a\n 4. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Mul p1 p2)) I a\n 5. \\<And>p.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Neg p)) I a\n 6. \\<And>p x2a.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Pw p x2a)) I a\n 7. \\<And>p1 x2a p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (CN p1 x2a p2)) I a", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>x.\n       num_params (poly.Bound x) \\<le> length I \\<Longrightarrow>\n       insertion e (map_poly real_of_float (poly.Bound x))\n       \\<in>\\<^sub>r compute_bound_poly prec\n                      (map_poly interval_of (poly.Bound x)) I a\n 2. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Add p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Add p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Add p1 p2)) I a\n 3. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Sub p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Sub p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Sub p1 p2)) I a\n 4. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Mul p1 p2)) I a\n 5. \\<And>p.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Neg p)) I a\n 6. \\<And>p x2a.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Pw p x2a)) I a\n 7. \\<And>p1 x2a p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (CN p1 x2a p2)) I a", "case (Bound i)"], ["proof (state)\nthis:\n  num_params (poly.Bound i) \\<le> length I\n\ngoal (7 subgoals):\n 1. \\<And>x.\n       num_params (poly.Bound x) \\<le> length I \\<Longrightarrow>\n       insertion e (map_poly real_of_float (poly.Bound x))\n       \\<in>\\<^sub>r compute_bound_poly prec\n                      (map_poly interval_of (poly.Bound x)) I a\n 2. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Add p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Add p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Add p1 p2)) I a\n 3. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Sub p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Sub p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Sub p1 p2)) I a\n 4. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Mul p1 p2)) I a\n 5. \\<And>p.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Neg p)) I a\n 6. \\<And>p x2a.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Pw p x2a)) I a\n 7. \\<And>p1 x2a p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (CN p1 x2a p2)) I a", "then"], ["proof (chain)\npicking this:\n  num_params (poly.Bound i) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  num_params (poly.Bound i) \\<le> length I\n\ngoal (1 subgoal):\n 1. insertion e (map_poly real_of_float (poly.Bound i))\n    \\<in>\\<^sub>r compute_bound_poly prec\n                   (map_poly interval_of (poly.Bound i)) I a", "using dev"], ["proof (prove)\nusing this:\n  num_params (poly.Bound i) \\<le> length I\n  develops_at_within e a I\n\ngoal (1 subgoal):\n 1. insertion e (map_poly real_of_float (poly.Bound i))\n    \\<in>\\<^sub>r compute_bound_poly prec\n                   (map_poly interval_of (poly.Bound i)) I a", "by (auto simp: develops_at_within_def)"], ["proof (state)\nthis:\n  insertion e (map_poly real_of_float (poly.Bound i))\n  \\<in>\\<^sub>r compute_bound_poly prec\n                 (map_poly interval_of (poly.Bound i)) I a\n\ngoal (6 subgoals):\n 1. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Add p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Add p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Add p1 p2)) I a\n 2. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Sub p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Sub p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Sub p1 p2)) I a\n 3. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Mul p1 p2)) I a\n 4. \\<And>p.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Neg p)) I a\n 5. \\<And>p x2a.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Pw p x2a)) I a\n 6. \\<And>p1 x2a p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (CN p1 x2a p2)) I a", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Add p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Add p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Add p1 p2)) I a\n 2. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Sub p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Sub p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Sub p1 p2)) I a\n 3. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Mul p1 p2)) I a\n 4. \\<And>p.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Neg p)) I a\n 5. \\<And>p x2a.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Pw p x2a)) I a\n 6. \\<And>p1 x2a p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (CN p1 x2a p2)) I a", "case (Add p1 p2)"], ["proof (state)\nthis:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p1)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p1) I a\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p2)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a\n  num_params (Add p1 p2) \\<le> length I\n\ngoal (6 subgoals):\n 1. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Add p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Add p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Add p1 p2)) I a\n 2. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Sub p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Sub p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Sub p1 p2)) I a\n 3. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Mul p1 p2)) I a\n 4. \\<And>p.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Neg p)) I a\n 5. \\<And>p x2a.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Pw p x2a)) I a\n 6. \\<And>p1 x2a p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (CN p1 x2a p2)) I a", "then"], ["proof (chain)\npicking this:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p1)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p1) I a\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p2)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a\n  num_params (Add p1 p2) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p1)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p1) I a\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p2)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a\n  num_params (Add p1 p2) \\<le> length I\n\ngoal (1 subgoal):\n 1. insertion e (map_poly real_of_float (Add p1 p2))\n    \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of (Add p1 p2))\n                   I a", "by force"], ["proof (state)\nthis:\n  insertion e (map_poly real_of_float (Add p1 p2))\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of (Add p1 p2)) I\n                 a\n\ngoal (5 subgoals):\n 1. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Sub p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Sub p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Sub p1 p2)) I a\n 2. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Mul p1 p2)) I a\n 3. \\<And>p.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Neg p)) I a\n 4. \\<And>p x2a.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Pw p x2a)) I a\n 5. \\<And>p1 x2a p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (CN p1 x2a p2)) I a", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Sub p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Sub p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Sub p1 p2)) I a\n 2. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Mul p1 p2)) I a\n 3. \\<And>p.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Neg p)) I a\n 4. \\<And>p x2a.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Pw p x2a)) I a\n 5. \\<And>p1 x2a p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (CN p1 x2a p2)) I a", "case (Sub p1 p2)"], ["proof (state)\nthis:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p1)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p1) I a\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p2)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a\n  num_params (Sub p1 p2) \\<le> length I\n\ngoal (5 subgoals):\n 1. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Sub p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Sub p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Sub p1 p2)) I a\n 2. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Mul p1 p2)) I a\n 3. \\<And>p.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Neg p)) I a\n 4. \\<And>p x2a.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Pw p x2a)) I a\n 5. \\<And>p1 x2a p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (CN p1 x2a p2)) I a", "then"], ["proof (chain)\npicking this:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p1)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p1) I a\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p2)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a\n  num_params (Sub p1 p2) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p1)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p1) I a\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p2)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a\n  num_params (Sub p1 p2) \\<le> length I\n\ngoal (1 subgoal):\n 1. insertion e (map_poly real_of_float (Sub p1 p2))\n    \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of (Sub p1 p2))\n                   I a", "by force"], ["proof (state)\nthis:\n  insertion e (map_poly real_of_float (Sub p1 p2))\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of (Sub p1 p2)) I\n                 a\n\ngoal (4 subgoals):\n 1. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Mul p1 p2)) I a\n 2. \\<And>p.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Neg p)) I a\n 3. \\<And>p x2a.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Pw p x2a)) I a\n 4. \\<And>p1 x2a p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (CN p1 x2a p2)) I a", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Mul p1 p2)) I a\n 2. \\<And>p.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Neg p)) I a\n 3. \\<And>p x2a.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Pw p x2a)) I a\n 4. \\<And>p1 x2a p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (CN p1 x2a p2)) I a", "case (Mul p1 p2)"], ["proof (state)\nthis:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p1)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p1) I a\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p2)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a\n  num_params (Mul p1 p2) \\<le> length I\n\ngoal (4 subgoals):\n 1. \\<And>p1 p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Mul p1 p2)) I a\n 2. \\<And>p.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Neg p)) I a\n 3. \\<And>p x2a.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Pw p x2a)) I a\n 4. \\<And>p1 x2a p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (CN p1 x2a p2)) I a", "then"], ["proof (chain)\npicking this:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p1)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p1) I a\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p2)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a\n  num_params (Mul p1 p2) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p1)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p1) I a\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p2)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a\n  num_params (Mul p1 p2) \\<le> length I\n\ngoal (1 subgoal):\n 1. insertion e (map_poly real_of_float (Mul p1 p2))\n    \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of (Mul p1 p2))\n                   I a", "by force"], ["proof (state)\nthis:\n  insertion e (map_poly real_of_float (Mul p1 p2))\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of (Mul p1 p2)) I\n                 a\n\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Neg p)) I a\n 2. \\<And>p x2a.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Pw p x2a)) I a\n 3. \\<And>p1 x2a p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (CN p1 x2a p2)) I a", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Neg p)) I a\n 2. \\<And>p x2a.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Pw p x2a)) I a\n 3. \\<And>p1 x2a p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (CN p1 x2a p2)) I a", "case (Neg p)"], ["proof (state)\nthis:\n  num_params p \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p) I a\n  num_params (Neg p) \\<le> length I\n\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Neg p)) I a\n 2. \\<And>p x2a.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Pw p x2a)) I a\n 3. \\<And>p1 x2a p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (CN p1 x2a p2)) I a", "then"], ["proof (chain)\npicking this:\n  num_params p \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p) I a\n  num_params (Neg p) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  num_params p \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p) I a\n  num_params (Neg p) \\<le> length I\n\ngoal (1 subgoal):\n 1. insertion e (map_poly real_of_float (Neg p))\n    \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of (Neg p)) I a", "by force"], ["proof (state)\nthis:\n  insertion e (map_poly real_of_float (Neg p))\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of (Neg p)) I a\n\ngoal (2 subgoals):\n 1. \\<And>p x2a.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Pw p x2a)) I a\n 2. \\<And>p1 x2a p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (CN p1 x2a p2)) I a", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p x2a.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Pw p x2a)) I a\n 2. \\<And>p1 x2a p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (CN p1 x2a p2)) I a", "case (Pw p x2a)"], ["proof (state)\nthis:\n  num_params p \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p) I a\n  num_params (Pw p x2a) \\<le> length I\n\ngoal (2 subgoals):\n 1. \\<And>p x2a.\n       \\<lbrakk>num_params p \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p) I a;\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (Pw p x2a)) I a\n 2. \\<And>p1 x2a p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (CN p1 x2a p2)) I a", "then"], ["proof (chain)\npicking this:\n  num_params p \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p) I a\n  num_params (Pw p x2a) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  num_params p \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p) I a\n  num_params (Pw p x2a) \\<le> length I\n\ngoal (1 subgoal):\n 1. insertion e (map_poly real_of_float (Pw p x2a))\n    \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of (Pw p x2a))\n                   I a", "by force"], ["proof (state)\nthis:\n  insertion e (map_poly real_of_float (Pw p x2a))\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of (Pw p x2a)) I\n                 a\n\ngoal (1 subgoal):\n 1. \\<And>p1 x2a p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (CN p1 x2a p2)) I a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p1 x2a p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (CN p1 x2a p2)) I a", "case (CN p1 i p2)"], ["proof (state)\nthis:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p1)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p1) I a\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p2)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a\n  num_params (CN p1 i p2) \\<le> length I\n\ngoal (1 subgoal):\n 1. \\<And>p1 x2a p2.\n       \\<lbrakk>num_params p1 \\<le> length I \\<Longrightarrow>\n                insertion e (map_poly real_of_float p1)\n                \\<in>\\<^sub>r compute_bound_poly prec\n                               (map_poly interval_of p1) I a;\n        num_params p2 \\<le> length I \\<Longrightarrow>\n        insertion e (map_poly real_of_float p2)\n        \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a;\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>r compute_bound_poly prec\n  (map_poly interval_of (CN p1 x2a p2)) I a", "then"], ["proof (chain)\npicking this:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p1)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p1) I a\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p2)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a\n  num_params (CN p1 i p2) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p1)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p1) I a\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p2)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a\n  num_params (CN p1 i p2) \\<le> length I\n\ngoal (1 subgoal):\n 1. insertion e (map_poly real_of_float (CN p1 i p2))\n    \\<in>\\<^sub>r compute_bound_poly prec\n                   (map_poly interval_of (CN p1 i p2)) I a", "using dev"], ["proof (prove)\nusing this:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p1)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p1) I a\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  insertion e (map_poly real_of_float p2)\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of p2) I a\n  num_params (CN p1 i p2) \\<le> length I\n  develops_at_within e a I\n\ngoal (1 subgoal):\n 1. insertion e (map_poly real_of_float (CN p1 i p2))\n    \\<in>\\<^sub>r compute_bound_poly prec\n                   (map_poly interval_of (CN p1 i p2)) I a", "by (auto simp: develops_at_within_def)"], ["proof (state)\nthis:\n  insertion e (map_poly real_of_float (CN p1 i p2))\n  \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of (CN p1 i p2))\n                 I a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma compute_bound_tm_correct:\n  fixes I :: \"float interval list\" and f :: \"real list \\<Rightarrow> real\"\n  assumes n: \"num_params (tm_poly t) \\<le> length I\"\n  assumes dev: \"develops_at_within e a I\"\n  assumes x0: \"x0 \\<in>\\<^sub>i range_tm e t\"\n  shows \"x0 \\<in>\\<^sub>r compute_bound_tm prec I a t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x0 \\<in>\\<^sub>r compute_bound_tm prec I a t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x0 \\<in>\\<^sub>r compute_bound_tm prec I a t", "let ?I = \"insertion e (tm_poly t)\""], ["proof (state)\ngoal (1 subgoal):\n 1. x0 \\<in>\\<^sub>r compute_bound_tm prec I a t", "have \"x0 = ?I + (x0 - ?I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x0 =\n    insertion e (map_poly real_of_float (tm_poly t)) +\n    (x0 - insertion e (map_poly real_of_float (tm_poly t)))", "by simp"], ["proof (state)\nthis:\n  x0 =\n  insertion e (map_poly real_of_float (tm_poly t)) +\n  (x0 - insertion e (map_poly real_of_float (tm_poly t)))\n\ngoal (1 subgoal):\n 1. x0 \\<in>\\<^sub>r compute_bound_tm prec I a t", "also"], ["proof (state)\nthis:\n  x0 =\n  insertion e (map_poly real_of_float (tm_poly t)) +\n  (x0 - insertion e (map_poly real_of_float (tm_poly t)))\n\ngoal (1 subgoal):\n 1. x0 \\<in>\\<^sub>r compute_bound_tm prec I a t", "have \"\\<dots> \\<in>\\<^sub>r compute_bound_tm prec I a t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insertion e (map_poly real_of_float (tm_poly t)) +\n    (x0 - insertion e (map_poly real_of_float (tm_poly t)))\n    \\<in>\\<^sub>r compute_bound_tm prec I a t", "unfolding compute_bound_tm_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. insertion e (map_poly real_of_float (tm_poly t)) +\n    (x0 - insertion e (map_poly real_of_float (tm_poly t)))\n    \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of (tm_poly t))\n                   I a +\n                  tm_bound t", "apply (rule in_set_real_plus_interval)"], ["proof (prove)\ngoal (2 subgoals):\n 1. insertion e (map_poly real_of_float (tm_poly t))\n    \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of (tm_poly t))\n                   I a\n 2. x0 - insertion e (map_poly real_of_float (tm_poly t))\n    \\<in>\\<^sub>r tm_bound t", "apply (rule compute_bound_poly_correct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. num_params (tm_poly t) \\<le> length I\n 2. develops_at_within e a I\n 3. x0 - insertion e (map_poly real_of_float (tm_poly t))\n    \\<in>\\<^sub>r tm_bound t", "apply (rule assms)"], ["proof (prove)\ngoal (2 subgoals):\n 1. develops_at_within e a I\n 2. x0 - insertion e (map_poly real_of_float (tm_poly t))\n    \\<in>\\<^sub>r tm_bound t", "apply (rule dev)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x0 - insertion e (map_poly real_of_float (tm_poly t))\n    \\<in>\\<^sub>r tm_bound t", "using range_tmD[OF x0]"], ["proof (prove)\nusing this:\n  x0 \\<in>\\<^sub>i interval_of\n                    (insertion e (map_poly real_of_float (tm_poly t))) +\n                   real_interval (tm_bound t)\n\ngoal (1 subgoal):\n 1. x0 - insertion e (map_poly real_of_float (tm_poly t))\n    \\<in>\\<^sub>r tm_bound t", "by (auto simp: set_of_eq)"], ["proof (state)\nthis:\n  insertion e (map_poly real_of_float (tm_poly t)) +\n  (x0 - insertion e (map_poly real_of_float (tm_poly t)))\n  \\<in>\\<^sub>r compute_bound_tm prec I a t\n\ngoal (1 subgoal):\n 1. x0 \\<in>\\<^sub>r compute_bound_tm prec I a t", "finally"], ["proof (chain)\npicking this:\n  x0 \\<in>\\<^sub>r compute_bound_tm prec I a t", "show \"x0 \\<in>\\<^sub>r compute_bound_tm prec I a t\""], ["proof (prove)\nusing this:\n  x0 \\<in>\\<^sub>r compute_bound_tm prec I a t\n\ngoal (1 subgoal):\n 1. x0 \\<in>\\<^sub>r compute_bound_tm prec I a t", "."], ["proof (state)\nthis:\n  x0 \\<in>\\<^sub>r compute_bound_tm prec I a t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma compute_bound_tm_correct_subset:\n  fixes I :: \"float interval list\" and f :: \"real list \\<Rightarrow> real\"\n  assumes n: \"num_params (tm_poly t) \\<le> length I\"\n  assumes dev: \"develops_at_within e a I\"\n  shows \"set_of (range_tm e t) \\<subseteq> set_of (real_interval (compute_bound_tm prec I a t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (range_tm e t)\n    \\<subseteq> set_of (real_interval (compute_bound_tm prec I a t))", "using assms"], ["proof (prove)\nusing this:\n  num_params (tm_poly t) \\<le> length I\n  develops_at_within e a I\n\ngoal (1 subgoal):\n 1. set_of (range_tm e t)\n    \\<subseteq> set_of (real_interval (compute_bound_tm prec I a t))", "by (auto intro!: compute_bound_tm_correct)"], ["", "lemma compute_bound_poly_mono:\n  assumes \"num_params p \\<le> length I\"\n  assumes mem: \"I all_subset J\" \"a all_subset I\"\n  shows \"set_of (compute_bound_poly prec p I a) \\<subseteq> set_of (compute_bound_poly prec p J a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (compute_bound_poly prec p I a)\n    \\<subseteq> set_of (compute_bound_poly prec p J a)", "using assms(1)"], ["proof (prove)\nusing this:\n  num_params p \\<le> length I\n\ngoal (1 subgoal):\n 1. set_of (compute_bound_poly prec p I a)\n    \\<subseteq> set_of (compute_bound_poly prec p J a)", "proof (induction p arbitrary: a)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>x a.\n       num_params (x)\\<^sub>p \\<le> length I \\<Longrightarrow>\n       set_of (compute_bound_poly prec (x)\\<^sub>p I a)\n       \\<subseteq> set_of (compute_bound_poly prec (x)\\<^sub>p J a)\n 2. \\<And>x a.\n       num_params (poly.Bound x) \\<le> length I \\<Longrightarrow>\n       set_of (compute_bound_poly prec (poly.Bound x) I a)\n       \\<subseteq> set_of (compute_bound_poly prec (poly.Bound x) J a)\n 3. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Add p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Add p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Add p1 p2) J a)\n 4. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Sub p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Sub p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Sub p1 p2) J a)\n 5. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Mul p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Mul p1 p2) J a)\n 6. \\<And>p a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Neg p) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Neg p) J a)\n 7. \\<And>p x2a a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Pw p x2a) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Pw p x2a) J a)\n 8. \\<And>p1 x2a p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (CN p1 x2a p2) J a)", "case (C x)"], ["proof (state)\nthis:\n  num_params (x)\\<^sub>p \\<le> length I\n\ngoal (8 subgoals):\n 1. \\<And>x a.\n       num_params (x)\\<^sub>p \\<le> length I \\<Longrightarrow>\n       set_of (compute_bound_poly prec (x)\\<^sub>p I a)\n       \\<subseteq> set_of (compute_bound_poly prec (x)\\<^sub>p J a)\n 2. \\<And>x a.\n       num_params (poly.Bound x) \\<le> length I \\<Longrightarrow>\n       set_of (compute_bound_poly prec (poly.Bound x) I a)\n       \\<subseteq> set_of (compute_bound_poly prec (poly.Bound x) J a)\n 3. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Add p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Add p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Add p1 p2) J a)\n 4. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Sub p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Sub p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Sub p1 p2) J a)\n 5. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Mul p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Mul p1 p2) J a)\n 6. \\<And>p a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Neg p) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Neg p) J a)\n 7. \\<And>p x2a a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Pw p x2a) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Pw p x2a) J a)\n 8. \\<And>p1 x2a p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (CN p1 x2a p2) J a)", "then"], ["proof (chain)\npicking this:\n  num_params (x)\\<^sub>p \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  num_params (x)\\<^sub>p \\<le> length I\n\ngoal (1 subgoal):\n 1. set_of (compute_bound_poly prec (x)\\<^sub>p I a)\n    \\<subseteq> set_of (compute_bound_poly prec (x)\\<^sub>p J a)", "by auto"], ["proof (state)\nthis:\n  set_of (compute_bound_poly prec (x)\\<^sub>p I a)\n  \\<subseteq> set_of (compute_bound_poly prec (x)\\<^sub>p J a)\n\ngoal (7 subgoals):\n 1. \\<And>x a.\n       num_params (poly.Bound x) \\<le> length I \\<Longrightarrow>\n       set_of (compute_bound_poly prec (poly.Bound x) I a)\n       \\<subseteq> set_of (compute_bound_poly prec (poly.Bound x) J a)\n 2. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Add p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Add p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Add p1 p2) J a)\n 3. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Sub p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Sub p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Sub p1 p2) J a)\n 4. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Mul p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Mul p1 p2) J a)\n 5. \\<And>p a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Neg p) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Neg p) J a)\n 6. \\<And>p x2a a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Pw p x2a) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Pw p x2a) J a)\n 7. \\<And>p1 x2a p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (CN p1 x2a p2) J a)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>x a.\n       num_params (poly.Bound x) \\<le> length I \\<Longrightarrow>\n       set_of (compute_bound_poly prec (poly.Bound x) I a)\n       \\<subseteq> set_of (compute_bound_poly prec (poly.Bound x) J a)\n 2. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Add p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Add p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Add p1 p2) J a)\n 3. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Sub p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Sub p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Sub p1 p2) J a)\n 4. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Mul p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Mul p1 p2) J a)\n 5. \\<And>p a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Neg p) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Neg p) J a)\n 6. \\<And>p x2a a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Pw p x2a) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Pw p x2a) J a)\n 7. \\<And>p1 x2a p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (CN p1 x2a p2) J a)", "case (Bound x)"], ["proof (state)\nthis:\n  num_params (poly.Bound x) \\<le> length I\n\ngoal (7 subgoals):\n 1. \\<And>x a.\n       num_params (poly.Bound x) \\<le> length I \\<Longrightarrow>\n       set_of (compute_bound_poly prec (poly.Bound x) I a)\n       \\<subseteq> set_of (compute_bound_poly prec (poly.Bound x) J a)\n 2. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Add p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Add p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Add p1 p2) J a)\n 3. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Sub p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Sub p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Sub p1 p2) J a)\n 4. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Mul p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Mul p1 p2) J a)\n 5. \\<And>p a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Neg p) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Neg p) J a)\n 6. \\<And>p x2a a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Pw p x2a) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Pw p x2a) J a)\n 7. \\<And>p1 x2a p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (CN p1 x2a p2) J a)", "then"], ["proof (chain)\npicking this:\n  num_params (poly.Bound x) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  num_params (poly.Bound x) \\<le> length I\n\ngoal (1 subgoal):\n 1. set_of (compute_bound_poly prec (poly.Bound x) I a)\n    \\<subseteq> set_of (compute_bound_poly prec (poly.Bound x) J a)", "using mem"], ["proof (prove)\nusing this:\n  num_params (poly.Bound x) \\<le> length I\n  I all_subset J\n  a all_subset I\n\ngoal (1 subgoal):\n 1. set_of (compute_bound_poly prec (poly.Bound x) I a)\n    \\<subseteq> set_of (compute_bound_poly prec (poly.Bound x) J a)", "by (simp add: round_interval_mono set_of_sub_inc)"], ["proof (state)\nthis:\n  set_of (compute_bound_poly prec (poly.Bound x) I a)\n  \\<subseteq> set_of (compute_bound_poly prec (poly.Bound x) J a)\n\ngoal (6 subgoals):\n 1. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Add p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Add p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Add p1 p2) J a)\n 2. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Sub p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Sub p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Sub p1 p2) J a)\n 3. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Mul p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Mul p1 p2) J a)\n 4. \\<And>p a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Neg p) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Neg p) J a)\n 5. \\<And>p x2a a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Pw p x2a) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Pw p x2a) J a)\n 6. \\<And>p1 x2a p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (CN p1 x2a p2) J a)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Add p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Add p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Add p1 p2) J a)\n 2. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Sub p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Sub p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Sub p1 p2) J a)\n 3. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Mul p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Mul p1 p2) J a)\n 4. \\<And>p a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Neg p) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Neg p) J a)\n 5. \\<And>p x2a a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Pw p x2a) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Pw p x2a) J a)\n 6. \\<And>p1 x2a p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (CN p1 x2a p2) J a)", "case (Add p1 p2)"], ["proof (state)\nthis:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p1 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p1 J ?a)\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p2 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p2 J ?a)\n  num_params (Add p1 p2) \\<le> length I\n\ngoal (6 subgoals):\n 1. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Add p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Add p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Add p1 p2) J a)\n 2. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Sub p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Sub p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Sub p1 p2) J a)\n 3. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Mul p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Mul p1 p2) J a)\n 4. \\<And>p a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Neg p) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Neg p) J a)\n 5. \\<And>p x2a a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Pw p x2a) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Pw p x2a) J a)\n 6. \\<And>p1 x2a p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (CN p1 x2a p2) J a)", "then"], ["proof (chain)\npicking this:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p1 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p1 J ?a)\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p2 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p2 J ?a)\n  num_params (Add p1 p2) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p1 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p1 J ?a)\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p2 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p2 J ?a)\n  num_params (Add p1 p2) \\<le> length I\n\ngoal (1 subgoal):\n 1. set_of (compute_bound_poly prec (Add p1 p2) I a)\n    \\<subseteq> set_of (compute_bound_poly prec (Add p1 p2) J a)", "using mem"], ["proof (prove)\nusing this:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p1 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p1 J ?a)\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p2 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p2 J ?a)\n  num_params (Add p1 p2) \\<le> length I\n  I all_subset J\n  a all_subset I\n\ngoal (1 subgoal):\n 1. set_of (compute_bound_poly prec (Add p1 p2) I a)\n    \\<subseteq> set_of (compute_bound_poly prec (Add p1 p2) J a)", "by (simp add: round_interval_mono set_of_add_inc)"], ["proof (state)\nthis:\n  set_of (compute_bound_poly prec (Add p1 p2) I a)\n  \\<subseteq> set_of (compute_bound_poly prec (Add p1 p2) J a)\n\ngoal (5 subgoals):\n 1. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Sub p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Sub p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Sub p1 p2) J a)\n 2. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Mul p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Mul p1 p2) J a)\n 3. \\<And>p a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Neg p) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Neg p) J a)\n 4. \\<And>p x2a a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Pw p x2a) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Pw p x2a) J a)\n 5. \\<And>p1 x2a p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (CN p1 x2a p2) J a)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Sub p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Sub p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Sub p1 p2) J a)\n 2. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Mul p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Mul p1 p2) J a)\n 3. \\<And>p a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Neg p) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Neg p) J a)\n 4. \\<And>p x2a a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Pw p x2a) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Pw p x2a) J a)\n 5. \\<And>p1 x2a p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (CN p1 x2a p2) J a)", "case (Sub p1 p2)"], ["proof (state)\nthis:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p1 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p1 J ?a)\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p2 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p2 J ?a)\n  num_params (Sub p1 p2) \\<le> length I\n\ngoal (5 subgoals):\n 1. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Sub p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Sub p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Sub p1 p2) J a)\n 2. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Mul p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Mul p1 p2) J a)\n 3. \\<And>p a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Neg p) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Neg p) J a)\n 4. \\<And>p x2a a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Pw p x2a) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Pw p x2a) J a)\n 5. \\<And>p1 x2a p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (CN p1 x2a p2) J a)", "then"], ["proof (chain)\npicking this:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p1 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p1 J ?a)\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p2 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p2 J ?a)\n  num_params (Sub p1 p2) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p1 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p1 J ?a)\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p2 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p2 J ?a)\n  num_params (Sub p1 p2) \\<le> length I\n\ngoal (1 subgoal):\n 1. set_of (compute_bound_poly prec (Sub p1 p2) I a)\n    \\<subseteq> set_of (compute_bound_poly prec (Sub p1 p2) J a)", "using mem"], ["proof (prove)\nusing this:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p1 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p1 J ?a)\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p2 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p2 J ?a)\n  num_params (Sub p1 p2) \\<le> length I\n  I all_subset J\n  a all_subset I\n\ngoal (1 subgoal):\n 1. set_of (compute_bound_poly prec (Sub p1 p2) I a)\n    \\<subseteq> set_of (compute_bound_poly prec (Sub p1 p2) J a)", "by (simp add: round_interval_mono set_of_sub_inc)"], ["proof (state)\nthis:\n  set_of (compute_bound_poly prec (Sub p1 p2) I a)\n  \\<subseteq> set_of (compute_bound_poly prec (Sub p1 p2) J a)\n\ngoal (4 subgoals):\n 1. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Mul p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Mul p1 p2) J a)\n 2. \\<And>p a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Neg p) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Neg p) J a)\n 3. \\<And>p x2a a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Pw p x2a) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Pw p x2a) J a)\n 4. \\<And>p1 x2a p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (CN p1 x2a p2) J a)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Mul p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Mul p1 p2) J a)\n 2. \\<And>p a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Neg p) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Neg p) J a)\n 3. \\<And>p x2a a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Pw p x2a) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Pw p x2a) J a)\n 4. \\<And>p1 x2a p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (CN p1 x2a p2) J a)", "case (Mul p1 p2)"], ["proof (state)\nthis:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p1 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p1 J ?a)\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p2 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p2 J ?a)\n  num_params (Mul p1 p2) \\<le> length I\n\ngoal (4 subgoals):\n 1. \\<And>p1 p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (Mul p1 p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Mul p1 p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Mul p1 p2) J a)\n 2. \\<And>p a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Neg p) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Neg p) J a)\n 3. \\<And>p x2a a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Pw p x2a) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Pw p x2a) J a)\n 4. \\<And>p1 x2a p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (CN p1 x2a p2) J a)", "then"], ["proof (chain)\npicking this:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p1 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p1 J ?a)\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p2 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p2 J ?a)\n  num_params (Mul p1 p2) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p1 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p1 J ?a)\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p2 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p2 J ?a)\n  num_params (Mul p1 p2) \\<le> length I\n\ngoal (1 subgoal):\n 1. set_of (compute_bound_poly prec (Mul p1 p2) I a)\n    \\<subseteq> set_of (compute_bound_poly prec (Mul p1 p2) J a)", "using mem"], ["proof (prove)\nusing this:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p1 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p1 J ?a)\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p2 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p2 J ?a)\n  num_params (Mul p1 p2) \\<le> length I\n  I all_subset J\n  a all_subset I\n\ngoal (1 subgoal):\n 1. set_of (compute_bound_poly prec (Mul p1 p2) I a)\n    \\<subseteq> set_of (compute_bound_poly prec (Mul p1 p2) J a)", "by (simp add: round_interval_mono mult_float_interval_mono)"], ["proof (state)\nthis:\n  set_of (compute_bound_poly prec (Mul p1 p2) I a)\n  \\<subseteq> set_of (compute_bound_poly prec (Mul p1 p2) J a)\n\ngoal (3 subgoals):\n 1. \\<And>p a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Neg p) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Neg p) J a)\n 2. \\<And>p x2a a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Pw p x2a) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Pw p x2a) J a)\n 3. \\<And>p1 x2a p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (CN p1 x2a p2) J a)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Neg p) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Neg p) J a)\n 2. \\<And>p x2a a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Pw p x2a) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Pw p x2a) J a)\n 3. \\<And>p1 x2a p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (CN p1 x2a p2) J a)", "case (Neg p)"], ["proof (state)\nthis:\n  num_params p \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p J ?a)\n  num_params (Neg p) \\<le> length I\n\ngoal (3 subgoals):\n 1. \\<And>p a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Neg p) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Neg p) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Neg p) J a)\n 2. \\<And>p x2a a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Pw p x2a) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Pw p x2a) J a)\n 3. \\<And>p1 x2a p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (CN p1 x2a p2) J a)", "then"], ["proof (chain)\npicking this:\n  num_params p \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p J ?a)\n  num_params (Neg p) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  num_params p \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p J ?a)\n  num_params (Neg p) \\<le> length I\n\ngoal (1 subgoal):\n 1. set_of (compute_bound_poly prec (Neg p) I a)\n    \\<subseteq> set_of (compute_bound_poly prec (Neg p) J a)", "using mem"], ["proof (prove)\nusing this:\n  num_params p \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p J ?a)\n  num_params (Neg p) \\<le> length I\n  I all_subset J\n  a all_subset I\n\ngoal (1 subgoal):\n 1. set_of (compute_bound_poly prec (Neg p) I a)\n    \\<subseteq> set_of (compute_bound_poly prec (Neg p) J a)", "by (simp add: round_interval_mono set_of_neg_inc)"], ["proof (state)\nthis:\n  set_of (compute_bound_poly prec (Neg p) I a)\n  \\<subseteq> set_of (compute_bound_poly prec (Neg p) J a)\n\ngoal (2 subgoals):\n 1. \\<And>p x2a a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Pw p x2a) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Pw p x2a) J a)\n 2. \\<And>p1 x2a p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (CN p1 x2a p2) J a)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p x2a a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Pw p x2a) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Pw p x2a) J a)\n 2. \\<And>p1 x2a p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (CN p1 x2a p2) J a)", "case (Pw p x2a)"], ["proof (state)\nthis:\n  num_params p \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p J ?a)\n  num_params (Pw p x2a) \\<le> length I\n\ngoal (2 subgoals):\n 1. \\<And>p x2a a.\n       \\<lbrakk>\\<And>a.\n                   num_params p \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p J a);\n        num_params (Pw p x2a) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (Pw p x2a) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (Pw p x2a) J a)\n 2. \\<And>p1 x2a p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (CN p1 x2a p2) J a)", "then"], ["proof (chain)\npicking this:\n  num_params p \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p J ?a)\n  num_params (Pw p x2a) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  num_params p \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p J ?a)\n  num_params (Pw p x2a) \\<le> length I\n\ngoal (1 subgoal):\n 1. set_of (compute_bound_poly prec (Pw p x2a) I a)\n    \\<subseteq> set_of (compute_bound_poly prec (Pw p x2a) J a)", "using mem"], ["proof (prove)\nusing this:\n  num_params p \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p J ?a)\n  num_params (Pw p x2a) \\<le> length I\n  I all_subset J\n  a all_subset I\n\ngoal (1 subgoal):\n 1. set_of (compute_bound_poly prec (Pw p x2a) I a)\n    \\<subseteq> set_of (compute_bound_poly prec (Pw p x2a) J a)", "by (simp add: power_float_interval_mono)"], ["proof (state)\nthis:\n  set_of (compute_bound_poly prec (Pw p x2a) I a)\n  \\<subseteq> set_of (compute_bound_poly prec (Pw p x2a) J a)\n\ngoal (1 subgoal):\n 1. \\<And>p1 x2a p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (CN p1 x2a p2) J a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p1 x2a p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (CN p1 x2a p2) J a)", "case (CN p1 x2a p2)"], ["proof (state)\nthis:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p1 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p1 J ?a)\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p2 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p2 J ?a)\n  num_params (CN p1 x2a p2) \\<le> length I\n\ngoal (1 subgoal):\n 1. \\<And>p1 x2a p2 a.\n       \\<lbrakk>\\<And>a.\n                   num_params p1 \\<le> length I \\<Longrightarrow>\n                   set_of (compute_bound_poly prec p1 I a)\n                   \\<subseteq> set_of (compute_bound_poly prec p1 J a);\n        \\<And>a.\n           num_params p2 \\<le> length I \\<Longrightarrow>\n           set_of (compute_bound_poly prec p2 I a)\n           \\<subseteq> set_of (compute_bound_poly prec p2 J a);\n        num_params (CN p1 x2a p2) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n                         \\<subseteq> set_of\n(compute_bound_poly prec (CN p1 x2a p2) J a)", "then"], ["proof (chain)\npicking this:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p1 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p1 J ?a)\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p2 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p2 J ?a)\n  num_params (CN p1 x2a p2) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p1 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p1 J ?a)\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p2 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p2 J ?a)\n  num_params (CN p1 x2a p2) \\<le> length I\n\ngoal (1 subgoal):\n 1. set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n    \\<subseteq> set_of (compute_bound_poly prec (CN p1 x2a p2) J a)", "using mem"], ["proof (prove)\nusing this:\n  num_params p1 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p1 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p1 J ?a)\n  num_params p2 \\<le> length I \\<Longrightarrow>\n  set_of (compute_bound_poly prec p2 I ?a)\n  \\<subseteq> set_of (compute_bound_poly prec p2 J ?a)\n  num_params (CN p1 x2a p2) \\<le> length I\n  I all_subset J\n  a all_subset I\n\ngoal (1 subgoal):\n 1. set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n    \\<subseteq> set_of (compute_bound_poly prec (CN p1 x2a p2) J a)", "by (simp add: round_interval_mono mult_float_interval_mono\n        set_of_add_inc set_of_sub_inc)"], ["proof (state)\nthis:\n  set_of (compute_bound_poly prec (CN p1 x2a p2) I a)\n  \\<subseteq> set_of (compute_bound_poly prec (CN p1 x2a p2) J a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma compute_bound_tm_mono:\n  fixes I :: \"float interval list\" and f :: \"real list \\<Rightarrow> real\"\n  assumes \"num_params (tm_poly t) \\<le> length I\"\n  assumes \"I all_subset J\"\n  assumes \"a all_subset I\"\n  shows \"set_of (compute_bound_tm prec I a t) \\<subseteq> set_of (compute_bound_tm prec J a t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (compute_bound_tm prec I a t)\n    \\<subseteq> set_of (compute_bound_tm prec J a t)", "apply (simp add: compute_bound_tm_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of\n     (compute_bound_poly prec (map_poly interval_of (tm_poly t)) I a +\n      tm_bound t)\n    \\<subseteq> set_of\n                 (compute_bound_poly prec (map_poly interval_of (tm_poly t))\n                   J a +\n                  tm_bound t)", "apply (rule set_of_add_inc_left)"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (compute_bound_poly prec (map_poly interval_of (tm_poly t)) I a)\n    \\<subseteq> set_of\n                 (compute_bound_poly prec (map_poly interval_of (tm_poly t))\n                   J a)", "apply (rule compute_bound_poly_mono)"], ["proof (prove)\ngoal (3 subgoals):\n 1. num_params (map_poly interval_of (tm_poly t)) \\<le> length I\n 2. I all_subset J\n 3. a all_subset I", "using assms"], ["proof (prove)\nusing this:\n  num_params (tm_poly t) \\<le> length I\n  I all_subset J\n  a all_subset I\n\ngoal (3 subgoals):\n 1. num_params (map_poly interval_of (tm_poly t)) \\<le> length I\n 2. I all_subset J\n 3. a all_subset I", "by (auto simp: set_of_eq)"], ["", "subsection \\<open>Computing taylor models for basic, univariate functions\\<close>"], ["", "definition tm_const :: \"float \\<Rightarrow> taylor_model\"\n  where \"tm_const c = TaylorModel (poly.C c) 0\""], ["", "context includes floatarith_notation begin"], ["", "definition tm_pi :: \"nat \\<Rightarrow> taylor_model\"\n  where \"tm_pi prec = (\n  let pi_ivl = the (compute_bound_fa prec Pi [])\n  in TaylorModel (poly.C (mid pi_ivl)) (centered pi_ivl)\n)\""], ["", "lemma zero_real_interval[intro,simp]: \"0 \\<in>\\<^sub>r 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<in>\\<^sub>r 0", "by (auto simp: set_of_eq)"], ["", "lemma range_TM_tm_const[simp]: \"range_tm e (tm_const c) = interval_of c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range_tm e (tm_const c) = interval_of (real_of_float c)", "by (auto simp: range_tm_def real_interval_zero tm_const_def)"], ["", "lemma num_params_tm_const[simp]: \"num_params (tm_poly (tm_const c)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_const c)) = 0", "by (auto simp: tm_const_def)"], ["", "lemma num_params_tm_pi[simp]: \"num_params (tm_poly (tm_pi prec)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_pi prec)) = 0", "by (auto simp: tm_pi_def Let_def)"], ["", "lemma range_tm_tm_pi: \"pi \\<in>\\<^sub>i range_tm e (tm_pi prec)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pi \\<in>\\<^sub>i range_tm e (tm_pi prec)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. pi \\<in>\\<^sub>i range_tm e (tm_pi prec)", "have \"\\<And>prec. real_of_float (lb_pi prec) \\<le> real_of_float (ub_pi prec)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prec. real_of_float (lb_pi prec) \\<le> real_of_float (ub_pi prec)", "using iffD1[OF atLeastAtMost_iff, OF pi_boundaries]"], ["proof (prove)\nusing this:\n  real_of_float (lb_pi ?n2) \\<le> pi \\<and>\n  pi \\<le> real_of_float (ub_pi ?n2)\n\ngoal (1 subgoal):\n 1. \\<And>prec. real_of_float (lb_pi prec) \\<le> real_of_float (ub_pi prec)", "using order_trans"], ["proof (prove)\nusing this:\n  real_of_float (lb_pi ?n2) \\<le> pi \\<and>\n  pi \\<le> real_of_float (ub_pi ?n2)\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?z\\<rbrakk> \\<Longrightarrow> ?x \\<le> ?z\n\ngoal (1 subgoal):\n 1. \\<And>prec. real_of_float (lb_pi prec) \\<le> real_of_float (ub_pi prec)", "by auto"], ["proof (state)\nthis:\n  real_of_float (lb_pi ?prec) \\<le> real_of_float (ub_pi ?prec)\n\ngoal (1 subgoal):\n 1. pi \\<in>\\<^sub>i range_tm e (tm_pi prec)", "then"], ["proof (chain)\npicking this:\n  real_of_float (lb_pi ?prec) \\<le> real_of_float (ub_pi ?prec)", "obtain ivl_pi where ivl_pi_def: \"compute_bound_fa prec Pi [] = Some ivl_pi\""], ["proof (prove)\nusing this:\n  real_of_float (lb_pi ?prec) \\<le> real_of_float (ub_pi ?prec)\n\ngoal (1 subgoal):\n 1. (\\<And>ivl_pi.\n        compute_bound_fa prec Pi [] = Some ivl_pi \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (simp add: approx.simps)"], ["proof (state)\nthis:\n  compute_bound_fa prec Pi [] = Some ivl_pi\n\ngoal (1 subgoal):\n 1. pi \\<in>\\<^sub>i range_tm e (tm_pi prec)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. pi \\<in>\\<^sub>i range_tm e (tm_pi prec)", "unfolding range_tm_def Let_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. pi \\<in>\\<^sub>i interval_of\n                      (insertion e\n                        (map_poly real_of_float (tm_poly (tm_pi prec)))) +\n                     real_interval (tm_bound (tm_pi prec))", "using compute_bound_fa_correct[OF ivl_pi_def, of \"[]\"]"], ["proof (prove)\nusing this:\n  [] all_in [] \\<Longrightarrow>\n  interpret_floatarith Pi [] \\<in>\\<^sub>r ivl_pi\n\ngoal (1 subgoal):\n 1. pi \\<in>\\<^sub>i interval_of\n                      (insertion e\n                        (map_poly real_of_float (tm_poly (tm_pi prec)))) +\n                     real_interval (tm_bound (tm_pi prec))", "by (auto simp: set_of_eq Let_def centered_def ivl_pi_def tm_pi_def\n        simp del: compute_bound_fa.simps)"], ["proof (state)\nthis:\n  pi \\<in>\\<^sub>i range_tm e (tm_pi prec)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Derivations of floatarith expressions\\<close>"], ["", "text \\<open>Compute the nth derivative of a floatarith expression\\<close>"], ["", "fun deriv :: \"nat \\<Rightarrow> floatarith \\<Rightarrow> nat \\<Rightarrow> floatarith\"\n  where \"deriv v f 0 = f\"\n  | \"deriv v f (Suc n) = DERIV_floatarith v (deriv v f n)\""], ["", "lemma isDERIV_DERIV_floatarith:\n  assumes \"isDERIV v f vs\"\n  shows \"isDERIV v (DERIV_floatarith v f) vs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isDERIV v (DERIV_floatarith v f) vs", "using assms"], ["proof (prove)\nusing this:\n  isDERIV v f vs\n\ngoal (1 subgoal):\n 1. isDERIV v (DERIV_floatarith v f) vs", "proof(induction f)"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>f1 f2.\n       \\<lbrakk>isDERIV v f1 vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f1) vs;\n        isDERIV v f2 vs \\<Longrightarrow>\n        isDERIV v (DERIV_floatarith v f2) vs;\n        isDERIV v (Add f1 f2) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Add f1 f2)) vs\n 2. \\<And>f.\n       \\<lbrakk>isDERIV v f vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f) vs;\n        isDERIV v (Minus f) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Minus f)) vs\n 3. \\<And>f1 f2.\n       \\<lbrakk>isDERIV v f1 vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f1) vs;\n        isDERIV v f2 vs \\<Longrightarrow>\n        isDERIV v (DERIV_floatarith v f2) vs;\n        isDERIV v (Mult f1 f2) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Mult f1 f2)) vs\n 4. \\<And>f.\n       \\<lbrakk>isDERIV v f vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f) vs;\n        isDERIV v (Inverse f) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Inverse f)) vs\n 5. \\<And>f.\n       \\<lbrakk>isDERIV v f vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f) vs;\n        isDERIV v (Cos f) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Cos f)) vs\n 6. \\<And>f.\n       \\<lbrakk>isDERIV v f vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f) vs;\n        isDERIV v (Arctan f) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Arctan f)) vs\n 7. \\<And>f.\n       \\<lbrakk>isDERIV v f vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f) vs;\n        isDERIV v (Abs f) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Abs f)) vs\n 8. \\<And>f1 f2.\n       \\<lbrakk>isDERIV v f1 vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f1) vs;\n        isDERIV v f2 vs \\<Longrightarrow>\n        isDERIV v (DERIV_floatarith v f2) vs;\n        isDERIV v (Max f1 f2) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Max f1 f2)) vs\n 9. \\<And>f1 f2.\n       \\<lbrakk>isDERIV v f1 vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f1) vs;\n        isDERIV v f2 vs \\<Longrightarrow>\n        isDERIV v (DERIV_floatarith v f2) vs;\n        isDERIV v (Min f1 f2) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Min f1 f2)) vs\n 10. isDERIV v Pi vs \\<Longrightarrow> isDERIV v (DERIV_floatarith v Pi) vs\nA total of 18 subgoals...", "case (Power f m)"], ["proof (state)\nthis:\n  isDERIV v f vs \\<Longrightarrow> isDERIV v (DERIV_floatarith v f) vs\n  isDERIV v (Power f m) vs\n\ngoal (18 subgoals):\n 1. \\<And>f1 f2.\n       \\<lbrakk>isDERIV v f1 vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f1) vs;\n        isDERIV v f2 vs \\<Longrightarrow>\n        isDERIV v (DERIV_floatarith v f2) vs;\n        isDERIV v (Add f1 f2) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Add f1 f2)) vs\n 2. \\<And>f.\n       \\<lbrakk>isDERIV v f vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f) vs;\n        isDERIV v (Minus f) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Minus f)) vs\n 3. \\<And>f1 f2.\n       \\<lbrakk>isDERIV v f1 vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f1) vs;\n        isDERIV v f2 vs \\<Longrightarrow>\n        isDERIV v (DERIV_floatarith v f2) vs;\n        isDERIV v (Mult f1 f2) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Mult f1 f2)) vs\n 4. \\<And>f.\n       \\<lbrakk>isDERIV v f vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f) vs;\n        isDERIV v (Inverse f) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Inverse f)) vs\n 5. \\<And>f.\n       \\<lbrakk>isDERIV v f vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f) vs;\n        isDERIV v (Cos f) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Cos f)) vs\n 6. \\<And>f.\n       \\<lbrakk>isDERIV v f vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f) vs;\n        isDERIV v (Arctan f) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Arctan f)) vs\n 7. \\<And>f.\n       \\<lbrakk>isDERIV v f vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f) vs;\n        isDERIV v (Abs f) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Abs f)) vs\n 8. \\<And>f1 f2.\n       \\<lbrakk>isDERIV v f1 vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f1) vs;\n        isDERIV v f2 vs \\<Longrightarrow>\n        isDERIV v (DERIV_floatarith v f2) vs;\n        isDERIV v (Max f1 f2) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Max f1 f2)) vs\n 9. \\<And>f1 f2.\n       \\<lbrakk>isDERIV v f1 vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f1) vs;\n        isDERIV v f2 vs \\<Longrightarrow>\n        isDERIV v (DERIV_floatarith v f2) vs;\n        isDERIV v (Min f1 f2) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Min f1 f2)) vs\n 10. isDERIV v Pi vs \\<Longrightarrow> isDERIV v (DERIV_floatarith v Pi) vs\nA total of 18 subgoals...", "then"], ["proof (chain)\npicking this:\n  isDERIV v f vs \\<Longrightarrow> isDERIV v (DERIV_floatarith v f) vs\n  isDERIV v (Power f m) vs", "show ?case"], ["proof (prove)\nusing this:\n  isDERIV v f vs \\<Longrightarrow> isDERIV v (DERIV_floatarith v f) vs\n  isDERIV v (Power f m) vs\n\ngoal (1 subgoal):\n 1. isDERIV v (DERIV_floatarith v (Power f m)) vs", "by (cases m) (auto simp: isDERIV_Power)"], ["proof (state)\nthis:\n  isDERIV v (DERIV_floatarith v (Power f m)) vs\n\ngoal (17 subgoals):\n 1. \\<And>f1 f2.\n       \\<lbrakk>isDERIV v f1 vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f1) vs;\n        isDERIV v f2 vs \\<Longrightarrow>\n        isDERIV v (DERIV_floatarith v f2) vs;\n        isDERIV v (Add f1 f2) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Add f1 f2)) vs\n 2. \\<And>f.\n       \\<lbrakk>isDERIV v f vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f) vs;\n        isDERIV v (Minus f) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Minus f)) vs\n 3. \\<And>f1 f2.\n       \\<lbrakk>isDERIV v f1 vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f1) vs;\n        isDERIV v f2 vs \\<Longrightarrow>\n        isDERIV v (DERIV_floatarith v f2) vs;\n        isDERIV v (Mult f1 f2) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Mult f1 f2)) vs\n 4. \\<And>f.\n       \\<lbrakk>isDERIV v f vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f) vs;\n        isDERIV v (Inverse f) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Inverse f)) vs\n 5. \\<And>f.\n       \\<lbrakk>isDERIV v f vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f) vs;\n        isDERIV v (Cos f) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Cos f)) vs\n 6. \\<And>f.\n       \\<lbrakk>isDERIV v f vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f) vs;\n        isDERIV v (Arctan f) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Arctan f)) vs\n 7. \\<And>f.\n       \\<lbrakk>isDERIV v f vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f) vs;\n        isDERIV v (Abs f) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Abs f)) vs\n 8. \\<And>f1 f2.\n       \\<lbrakk>isDERIV v f1 vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f1) vs;\n        isDERIV v f2 vs \\<Longrightarrow>\n        isDERIV v (DERIV_floatarith v f2) vs;\n        isDERIV v (Max f1 f2) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Max f1 f2)) vs\n 9. \\<And>f1 f2.\n       \\<lbrakk>isDERIV v f1 vs \\<Longrightarrow>\n                isDERIV v (DERIV_floatarith v f1) vs;\n        isDERIV v f2 vs \\<Longrightarrow>\n        isDERIV v (DERIV_floatarith v f2) vs;\n        isDERIV v (Min f1 f2) vs\\<rbrakk>\n       \\<Longrightarrow> isDERIV v (DERIV_floatarith v (Min f1 f2)) vs\n 10. isDERIV v Pi vs \\<Longrightarrow> isDERIV v (DERIV_floatarith v Pi) vs\nA total of 17 subgoals...", "qed (simp_all add: numeral_eq_Suc add_nonneg_eq_0_iff )"], ["", "lemma isDERIV_is_analytic:\n  \"isDERIV i (Taylor_Models.deriv i f n) xs\"\n  if \"isDERIV i f xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isDERIV i (local.deriv i f n) xs", "using isDERIV_DERIV_floatarith that"], ["proof (prove)\nusing this:\n  isDERIV ?v ?f ?vs \\<Longrightarrow>\n  isDERIV ?v (DERIV_floatarith ?v ?f) ?vs\n  isDERIV i f xs\n\ngoal (1 subgoal):\n 1. isDERIV i (local.deriv i f n) xs", "by(induction n) auto"], ["", "lemma deriv_correct:\n  assumes \"isDERIV i f (xs[i:=t])\" \"i < length xs\"\n  shows \"((\\<lambda>x. interpret_floatarith (deriv i f n) (xs[i:=x])) has_real_derivative interpret_floatarith (deriv i f (Suc n)) (xs[i:=t]))\n    (at t within S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         interpret_floatarith (local.deriv i f n)\n          (xs[i := x])) has_real_derivative\n     interpret_floatarith (local.deriv i f (Suc n)) (xs[i := t]))\n     (at t within S)", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         interpret_floatarith (local.deriv i f n)\n          (xs[i := x])) has_real_derivative\n     interpret_floatarith (DERIV_floatarith i (local.deriv i f n))\n      (xs[i := t]))\n     (at t within S)", "apply (rule has_field_derivative_at_within)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         interpret_floatarith (local.deriv i f n)\n          (xs[i := x])) has_real_derivative\n     interpret_floatarith (DERIV_floatarith i (local.deriv i f n))\n      (xs[i := t]))\n     (at t)", "apply(rule DERIV_floatarith)"], ["proof (prove)\ngoal (2 subgoals):\n 1. i < length xs\n 2. isDERIV i (local.deriv i f n) (xs[i := t])", "apply fact"], ["proof (prove)\ngoal (1 subgoal):\n 1. isDERIV i (local.deriv i f n) (xs[i := t])", "apply (rule isDERIV_is_analytic)"], ["proof (prove)\ngoal (1 subgoal):\n 1. isDERIV i f (xs[i := t])", "apply fact"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>Faster derivation for univariate functions, producing smaller terms and thus less over-approximation.\\<close>"], ["", "text \\<open>TODO: Extend to Arctan, Log!\\<close>"], ["", "fun deriv_rec :: \"floatarith \\<Rightarrow> nat \\<Rightarrow> floatarith\"\n  where \"deriv_rec (Exp (Var 0)) _ = Exp (Var 0)\"\n  | \"deriv_rec (Cos (Var 0)) n = (case n mod 4\n         of 0 \\<Rightarrow> Cos (Var 0)\n         | Suc 0 \\<Rightarrow> Minus (Sin (Var 0))\n         | Suc (Suc 0) \\<Rightarrow> Minus (Cos (Var 0))\n         | Suc (Suc (Suc 0)) \\<Rightarrow> Sin (Var 0))\"\n  | \"deriv_rec (Inverse (Var 0)) n = (if n = 0 then Inverse (Var 0) else Mult (Num (fact n * (if n mod 2 = 0 then 1 else -1))) (Inverse (Power (Var 0) (Suc n))))\"\n  | \"deriv_rec f n = deriv 0 f n\""], ["", "lemma deriv_rec_correct:\n  assumes \"isDERIV 0 f (xs[0:=t])\" \"0 < length xs\"\n  shows \"((\\<lambda>x. interpret_floatarith (deriv_rec f n) (xs[0:=x])) has_real_derivative interpret_floatarith (deriv_rec f (Suc n)) (xs[0:=t])) (at t within S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         interpret_floatarith (deriv_rec f n)\n          (xs[0 := x])) has_real_derivative\n     interpret_floatarith (deriv_rec f (Suc n)) (xs[0 := t]))\n     (at t within S)", "apply(cases \"(f, n)\" rule: deriv_rec.cases)"], ["proof (prove)\ngoal (72 subgoals):\n 1. \\<And>uu_.\n       (f, n) = (Exp (Var 0), uu_) \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec f n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec f (Suc n)) (xs[0 := t]))\n        (at t within S)\n 2. \\<And>na.\n       (f, n) = (Cos (Var 0), na) \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec f n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec f (Suc n)) (xs[0 := t]))\n        (at t within S)\n 3. \\<And>na.\n       (f, n) = (Inverse (Var 0), na) \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec f n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec f (Suc n)) (xs[0 := t]))\n        (at t within S)\n 4. \\<And>v va na.\n       (f, n) = (Add v va, na) \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec f n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec f (Suc n)) (xs[0 := t]))\n        (at t within S)\n 5. \\<And>v na.\n       (f, n) = (Minus v, na) \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec f n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec f (Suc n)) (xs[0 := t]))\n        (at t within S)\n 6. \\<And>v va na.\n       (f, n) = (Mult v va, na) \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec f n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec f (Suc n)) (xs[0 := t]))\n        (at t within S)\n 7. \\<And>va vb na.\n       (f, n) = (Inverse (Add va vb), na) \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec f n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec f (Suc n)) (xs[0 := t]))\n        (at t within S)\n 8. \\<And>va na.\n       (f, n) = (Inverse (Minus va), na) \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec f n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec f (Suc n)) (xs[0 := t]))\n        (at t within S)\n 9. \\<And>va vb na.\n       (f, n) = (Inverse (Mult va vb), na) \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec f n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec f (Suc n)) (xs[0 := t]))\n        (at t within S)\n 10. \\<And>va na.\n        (f, n) = (Inverse (Inverse va), na) \\<Longrightarrow>\n        ((\\<lambda>x.\n             interpret_floatarith (deriv_rec f n)\n              (xs[0 := x])) has_real_derivative\n         interpret_floatarith (deriv_rec f (Suc n)) (xs[0 := t]))\n         (at t within S)\nA total of 72 subgoals...", "apply(safe)"], ["proof (prove)\ngoal (72 subgoals):\n 1. \\<And>_.\n       f = Exp (Var 0) \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec (Exp (Var 0)) n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec (Exp (Var 0)) (Suc n)) (xs[0 := t]))\n        (at t within S)\n 2. \\<And>na.\n       f = Cos (Var 0) \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec (Cos (Var 0)) n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec (Cos (Var 0)) (Suc n)) (xs[0 := t]))\n        (at t within S)\n 3. \\<And>na.\n       f = Inverse (Var 0) \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec (Inverse (Var 0)) n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec (Inverse (Var 0)) (Suc n))\n         (xs[0 := t]))\n        (at t within S)\n 4. \\<And>v va na.\n       f = Add v va \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec (Add v va) n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec (Add v va) (Suc n)) (xs[0 := t]))\n        (at t within S)\n 5. \\<And>v na.\n       f = Minus v \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec (Minus v) n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec (Minus v) (Suc n)) (xs[0 := t]))\n        (at t within S)\n 6. \\<And>v va na.\n       f = Mult v va \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec (Mult v va) n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec (Mult v va) (Suc n)) (xs[0 := t]))\n        (at t within S)\n 7. \\<And>va vb na.\n       f = Inverse (Add va vb) \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec (Inverse (Add va vb)) n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec (Inverse (Add va vb)) (Suc n))\n         (xs[0 := t]))\n        (at t within S)\n 8. \\<And>va na.\n       f = Inverse (Minus va) \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec (Inverse (Minus va)) n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec (Inverse (Minus va)) (Suc n))\n         (xs[0 := t]))\n        (at t within S)\n 9. \\<And>va vb na.\n       f = Inverse (Mult va vb) \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec (Inverse (Mult va vb)) n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec (Inverse (Mult va vb)) (Suc n))\n         (xs[0 := t]))\n        (at t within S)\n 10. \\<And>va na.\n        f = Inverse (Inverse va) \\<Longrightarrow>\n        ((\\<lambda>x.\n             interpret_floatarith (deriv_rec (Inverse (Inverse va)) n)\n              (xs[0 := x])) has_real_derivative\n         interpret_floatarith (deriv_rec (Inverse (Inverse va)) (Suc n))\n          (xs[0 := t]))\n         (at t within S)\nA total of 72 subgoals...", "using assms deriv_correct[OF assms]"], ["proof (prove)\nusing this:\n  isDERIV 0 f (xs[0 := t])\n  0 < length xs\n  ((\\<lambda>x.\n       interpret_floatarith (local.deriv 0 f ?n)\n        (xs[0 := x])) has_real_derivative\n   interpret_floatarith (local.deriv 0 f (Suc ?n)) (xs[0 := t]))\n   (at t within ?S)\n\ngoal (72 subgoals):\n 1. \\<And>_.\n       f = Exp (Var 0) \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec (Exp (Var 0)) n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec (Exp (Var 0)) (Suc n)) (xs[0 := t]))\n        (at t within S)\n 2. \\<And>na.\n       f = Cos (Var 0) \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec (Cos (Var 0)) n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec (Cos (Var 0)) (Suc n)) (xs[0 := t]))\n        (at t within S)\n 3. \\<And>na.\n       f = Inverse (Var 0) \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec (Inverse (Var 0)) n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec (Inverse (Var 0)) (Suc n))\n         (xs[0 := t]))\n        (at t within S)\n 4. \\<And>v va na.\n       f = Add v va \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec (Add v va) n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec (Add v va) (Suc n)) (xs[0 := t]))\n        (at t within S)\n 5. \\<And>v na.\n       f = Minus v \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec (Minus v) n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec (Minus v) (Suc n)) (xs[0 := t]))\n        (at t within S)\n 6. \\<And>v va na.\n       f = Mult v va \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec (Mult v va) n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec (Mult v va) (Suc n)) (xs[0 := t]))\n        (at t within S)\n 7. \\<And>va vb na.\n       f = Inverse (Add va vb) \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec (Inverse (Add va vb)) n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec (Inverse (Add va vb)) (Suc n))\n         (xs[0 := t]))\n        (at t within S)\n 8. \\<And>va na.\n       f = Inverse (Minus va) \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec (Inverse (Minus va)) n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec (Inverse (Minus va)) (Suc n))\n         (xs[0 := t]))\n        (at t within S)\n 9. \\<And>va vb na.\n       f = Inverse (Mult va vb) \\<Longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec (Inverse (Mult va vb)) n)\n             (xs[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec (Inverse (Mult va vb)) (Suc n))\n         (xs[0 := t]))\n        (at t within S)\n 10. \\<And>va na.\n        f = Inverse (Inverse va) \\<Longrightarrow>\n        ((\\<lambda>x.\n             interpret_floatarith (deriv_rec (Inverse (Inverse va)) n)\n              (xs[0 := x])) has_real_derivative\n         interpret_floatarith (deriv_rec (Inverse (Inverse va)) (Suc n))\n          (xs[0 := t]))\n         (at t within S)\nA total of 72 subgoals...", "proof-"], ["proof (state)\ngoal (72 subgoals):\n 1. \\<And>_.\n       \\<lbrakk>f = Exp (Var 0); isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Exp (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Exp (Var 0)) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 2. \\<And>na.\n       \\<lbrakk>f = Cos (Var 0); isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Cos (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Cos (Var 0)) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 3. \\<And>na.\n       \\<lbrakk>f = Inverse (Var 0); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Var 0)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 4. \\<And>v va na.\n       \\<lbrakk>f = Add v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Add v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Add v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 5. \\<And>v na.\n       \\<lbrakk>f = Minus v; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Minus v) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith (deriv_rec (Minus v) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 6. \\<And>v va na.\n       \\<lbrakk>f = Mult v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Mult v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Mult v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 7. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Add va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Add va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Add va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 8. \\<And>va na.\n       \\<lbrakk>f = Inverse (Minus va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Minus va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Minus va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 9. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Mult va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Mult va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Mult va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 10. \\<And>va na.\n        \\<lbrakk>f = Inverse (Inverse va); isDERIV 0 f (xs[0 := t]);\n         0 < length xs;\n         \\<And>n S.\n            ((\\<lambda>x.\n                 interpret_floatarith (local.deriv 0 f n)\n                  (xs[0 := x])) has_real_derivative\n             interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n             (at t within S)\\<rbrakk>\n        \\<Longrightarrow> ((\\<lambda>x.\n                               interpret_floatarith\n                                (deriv_rec (Inverse (Inverse va)) n)\n                                (xs[0 := x])) has_real_derivative\n                           interpret_floatarith\n                            (deriv_rec (Inverse (Inverse va)) (Suc n))\n                            (xs[0 := t]))\n                           (at t within S)\nA total of 72 subgoals...", "assume \"f = Cos (Var 0)\""], ["proof (state)\nthis:\n  f = Cos (Var 0)\n\ngoal (72 subgoals):\n 1. \\<And>_.\n       \\<lbrakk>f = Exp (Var 0); isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Exp (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Exp (Var 0)) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 2. \\<And>na.\n       \\<lbrakk>f = Cos (Var 0); isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Cos (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Cos (Var 0)) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 3. \\<And>na.\n       \\<lbrakk>f = Inverse (Var 0); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Var 0)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 4. \\<And>v va na.\n       \\<lbrakk>f = Add v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Add v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Add v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 5. \\<And>v na.\n       \\<lbrakk>f = Minus v; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Minus v) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith (deriv_rec (Minus v) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 6. \\<And>v va na.\n       \\<lbrakk>f = Mult v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Mult v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Mult v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 7. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Add va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Add va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Add va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 8. \\<And>va na.\n       \\<lbrakk>f = Inverse (Minus va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Minus va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Minus va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 9. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Mult va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Mult va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Mult va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 10. \\<And>va na.\n        \\<lbrakk>f = Inverse (Inverse va); isDERIV 0 f (xs[0 := t]);\n         0 < length xs;\n         \\<And>n S.\n            ((\\<lambda>x.\n                 interpret_floatarith (local.deriv 0 f n)\n                  (xs[0 := x])) has_real_derivative\n             interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n             (at t within S)\\<rbrakk>\n        \\<Longrightarrow> ((\\<lambda>x.\n                               interpret_floatarith\n                                (deriv_rec (Inverse (Inverse va)) n)\n                                (xs[0 := x])) has_real_derivative\n                           interpret_floatarith\n                            (deriv_rec (Inverse (Inverse va)) (Suc n))\n                            (xs[0 := t]))\n                           (at t within S)\nA total of 72 subgoals...", "have n_mod_4_cases: \"n mod 4 = 0 | n mod 4 = 1 | n mod 4 = 2 | n mod 4 = 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n mod 4 = 0 \\<or> n mod 4 = 1 \\<or> n mod 4 = 2 \\<or> n mod 4 = 3", "by auto"], ["proof (state)\nthis:\n  n mod 4 = 0 \\<or> n mod 4 = 1 \\<or> n mod 4 = 2 \\<or> n mod 4 = 3\n\ngoal (72 subgoals):\n 1. \\<And>_.\n       \\<lbrakk>f = Exp (Var 0); isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Exp (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Exp (Var 0)) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 2. \\<And>na.\n       \\<lbrakk>f = Cos (Var 0); isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Cos (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Cos (Var 0)) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 3. \\<And>na.\n       \\<lbrakk>f = Inverse (Var 0); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Var 0)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 4. \\<And>v va na.\n       \\<lbrakk>f = Add v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Add v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Add v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 5. \\<And>v na.\n       \\<lbrakk>f = Minus v; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Minus v) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith (deriv_rec (Minus v) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 6. \\<And>v va na.\n       \\<lbrakk>f = Mult v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Mult v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Mult v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 7. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Add va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Add va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Add va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 8. \\<And>va na.\n       \\<lbrakk>f = Inverse (Minus va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Minus va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Minus va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 9. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Mult va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Mult va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Mult va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 10. \\<And>va na.\n        \\<lbrakk>f = Inverse (Inverse va); isDERIV 0 f (xs[0 := t]);\n         0 < length xs;\n         \\<And>n S.\n            ((\\<lambda>x.\n                 interpret_floatarith (local.deriv 0 f n)\n                  (xs[0 := x])) has_real_derivative\n             interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n             (at t within S)\\<rbrakk>\n        \\<Longrightarrow> ((\\<lambda>x.\n                               interpret_floatarith\n                                (deriv_rec (Inverse (Inverse va)) n)\n                                (xs[0 := x])) has_real_derivative\n                           interpret_floatarith\n                            (deriv_rec (Inverse (Inverse va)) (Suc n))\n                            (xs[0 := t]))\n                           (at t within S)\nA total of 72 subgoals...", "have Sin_sin: \"(\\<lambda>xs. interpret_floatarith (Sin (Var 0)) xs) = (\\<lambda>xs. sin (xs!0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith (Sin (Var 0)) = (\\<lambda>xs. sin (xs ! 0))", "by (simp add: )"], ["proof (state)\nthis:\n  interpret_floatarith (Sin (Var 0)) = (\\<lambda>xs. sin (xs ! 0))\n\ngoal (72 subgoals):\n 1. \\<And>_.\n       \\<lbrakk>f = Exp (Var 0); isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Exp (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Exp (Var 0)) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 2. \\<And>na.\n       \\<lbrakk>f = Cos (Var 0); isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Cos (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Cos (Var 0)) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 3. \\<And>na.\n       \\<lbrakk>f = Inverse (Var 0); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Var 0)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 4. \\<And>v va na.\n       \\<lbrakk>f = Add v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Add v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Add v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 5. \\<And>v na.\n       \\<lbrakk>f = Minus v; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Minus v) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith (deriv_rec (Minus v) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 6. \\<And>v va na.\n       \\<lbrakk>f = Mult v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Mult v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Mult v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 7. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Add va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Add va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Add va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 8. \\<And>va na.\n       \\<lbrakk>f = Inverse (Minus va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Minus va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Minus va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 9. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Mult va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Mult va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Mult va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 10. \\<And>va na.\n        \\<lbrakk>f = Inverse (Inverse va); isDERIV 0 f (xs[0 := t]);\n         0 < length xs;\n         \\<And>n S.\n            ((\\<lambda>x.\n                 interpret_floatarith (local.deriv 0 f n)\n                  (xs[0 := x])) has_real_derivative\n             interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n             (at t within S)\\<rbrakk>\n        \\<Longrightarrow> ((\\<lambda>x.\n                               interpret_floatarith\n                                (deriv_rec (Inverse (Inverse va)) n)\n                                (xs[0 := x])) has_real_derivative\n                           interpret_floatarith\n                            (deriv_rec (Inverse (Inverse va)) (Suc n))\n                            (xs[0 := t]))\n                           (at t within S)\nA total of 72 subgoals...", "show \"((\\<lambda>x. interpret_floatarith (deriv_rec (Cos (Var 0)) n) (xs[0:=x])) has_real_derivative\n         interpret_floatarith (deriv_rec (Cos (Var 0)) (Suc n)) (xs[0:=t]))\n         (at t within S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         interpret_floatarith (deriv_rec (Cos (Var 0)) n)\n          (xs[0 := x])) has_real_derivative\n     interpret_floatarith (deriv_rec (Cos (Var 0)) (Suc n)) (xs[0 := t]))\n     (at t within S)", "using n_mod_4_cases assms"], ["proof (prove)\nusing this:\n  n mod 4 = 0 \\<or> n mod 4 = 1 \\<or> n mod 4 = 2 \\<or> n mod 4 = 3\n  isDERIV 0 f (xs[0 := t])\n  0 < length xs\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         interpret_floatarith (deriv_rec (Cos (Var 0)) n)\n          (xs[0 := x])) has_real_derivative\n     interpret_floatarith (deriv_rec (Cos (Var 0)) (Suc n)) (xs[0 := t]))\n     (at t within S)", "by (auto simp add: mod_Suc Sin_sin field_differentiable_minus\n        intro!: derivative_eq_intros)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       interpret_floatarith (deriv_rec (Cos (Var 0)) n)\n        (xs[0 := x])) has_real_derivative\n   interpret_floatarith (deriv_rec (Cos (Var 0)) (Suc n)) (xs[0 := t]))\n   (at t within S)\n\ngoal (71 subgoals):\n 1. \\<And>_.\n       \\<lbrakk>f = Exp (Var 0); isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Exp (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Exp (Var 0)) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 2. \\<And>na.\n       \\<lbrakk>f = Inverse (Var 0); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Var 0)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 3. \\<And>v va na.\n       \\<lbrakk>f = Add v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Add v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Add v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 4. \\<And>v na.\n       \\<lbrakk>f = Minus v; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Minus v) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith (deriv_rec (Minus v) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 5. \\<And>v va na.\n       \\<lbrakk>f = Mult v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Mult v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Mult v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 6. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Add va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Add va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Add va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 7. \\<And>va na.\n       \\<lbrakk>f = Inverse (Minus va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Minus va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Minus va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 8. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Mult va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Mult va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Mult va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 9. \\<And>va na.\n       \\<lbrakk>f = Inverse (Inverse va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Inverse va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Inverse va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 10. \\<And>va na.\n        \\<lbrakk>f = Inverse (Cos va); isDERIV 0 f (xs[0 := t]);\n         0 < length xs;\n         \\<And>n S.\n            ((\\<lambda>x.\n                 interpret_floatarith (local.deriv 0 f n)\n                  (xs[0 := x])) has_real_derivative\n             interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n             (at t within S)\\<rbrakk>\n        \\<Longrightarrow> ((\\<lambda>x.\n                               interpret_floatarith\n                                (deriv_rec (Inverse (Cos va)) n)\n                                (xs[0 := x])) has_real_derivative\n                           interpret_floatarith\n                            (deriv_rec (Inverse (Cos va)) (Suc n))\n                            (xs[0 := t]))\n                           (at t within S)\nA total of 71 subgoals...", "next"], ["proof (state)\ngoal (71 subgoals):\n 1. \\<And>_.\n       \\<lbrakk>f = Exp (Var 0); isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Exp (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Exp (Var 0)) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 2. \\<And>na.\n       \\<lbrakk>f = Inverse (Var 0); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Var 0)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 3. \\<And>v va na.\n       \\<lbrakk>f = Add v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Add v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Add v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 4. \\<And>v na.\n       \\<lbrakk>f = Minus v; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Minus v) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith (deriv_rec (Minus v) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 5. \\<And>v va na.\n       \\<lbrakk>f = Mult v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Mult v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Mult v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 6. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Add va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Add va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Add va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 7. \\<And>va na.\n       \\<lbrakk>f = Inverse (Minus va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Minus va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Minus va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 8. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Mult va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Mult va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Mult va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 9. \\<And>va na.\n       \\<lbrakk>f = Inverse (Inverse va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Inverse va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Inverse va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 10. \\<And>va na.\n        \\<lbrakk>f = Inverse (Cos va); isDERIV 0 f (xs[0 := t]);\n         0 < length xs;\n         \\<And>n S.\n            ((\\<lambda>x.\n                 interpret_floatarith (local.deriv 0 f n)\n                  (xs[0 := x])) has_real_derivative\n             interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n             (at t within S)\\<rbrakk>\n        \\<Longrightarrow> ((\\<lambda>x.\n                               interpret_floatarith\n                                (deriv_rec (Inverse (Cos va)) n)\n                                (xs[0 := x])) has_real_derivative\n                           interpret_floatarith\n                            (deriv_rec (Inverse (Cos va)) (Suc n))\n                            (xs[0 := t]))\n                           (at t within S)\nA total of 71 subgoals...", "assume f_def: \"f = Inverse (Var 0)\" and \"isDERIV 0 f (xs[0:=t])\""], ["proof (state)\nthis:\n  f = Inverse (Var 0)\n  isDERIV 0 f (xs[0 := t])\n\ngoal (71 subgoals):\n 1. \\<And>_.\n       \\<lbrakk>f = Exp (Var 0); isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Exp (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Exp (Var 0)) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 2. \\<And>na.\n       \\<lbrakk>f = Inverse (Var 0); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Var 0)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 3. \\<And>v va na.\n       \\<lbrakk>f = Add v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Add v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Add v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 4. \\<And>v na.\n       \\<lbrakk>f = Minus v; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Minus v) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith (deriv_rec (Minus v) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 5. \\<And>v va na.\n       \\<lbrakk>f = Mult v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Mult v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Mult v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 6. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Add va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Add va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Add va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 7. \\<And>va na.\n       \\<lbrakk>f = Inverse (Minus va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Minus va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Minus va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 8. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Mult va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Mult va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Mult va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 9. \\<And>va na.\n       \\<lbrakk>f = Inverse (Inverse va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Inverse va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Inverse va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 10. \\<And>va na.\n        \\<lbrakk>f = Inverse (Cos va); isDERIV 0 f (xs[0 := t]);\n         0 < length xs;\n         \\<And>n S.\n            ((\\<lambda>x.\n                 interpret_floatarith (local.deriv 0 f n)\n                  (xs[0 := x])) has_real_derivative\n             interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n             (at t within S)\\<rbrakk>\n        \\<Longrightarrow> ((\\<lambda>x.\n                               interpret_floatarith\n                                (deriv_rec (Inverse (Cos va)) n)\n                                (xs[0 := x])) has_real_derivative\n                           interpret_floatarith\n                            (deriv_rec (Inverse (Cos va)) (Suc n))\n                            (xs[0 := t]))\n                           (at t within S)\nA total of 71 subgoals...", "hence \"t \\<noteq> 0\""], ["proof (prove)\nusing this:\n  f = Inverse (Var 0)\n  isDERIV 0 f (xs[0 := t])\n\ngoal (1 subgoal):\n 1. t \\<noteq> 0", "using assms"], ["proof (prove)\nusing this:\n  f = Inverse (Var 0)\n  isDERIV 0 f (xs[0 := t])\n  isDERIV 0 f (xs[0 := t])\n  0 < length xs\n\ngoal (1 subgoal):\n 1. t \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  t \\<noteq> 0\n\ngoal (71 subgoals):\n 1. \\<And>_.\n       \\<lbrakk>f = Exp (Var 0); isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Exp (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Exp (Var 0)) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 2. \\<And>na.\n       \\<lbrakk>f = Inverse (Var 0); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Var 0)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 3. \\<And>v va na.\n       \\<lbrakk>f = Add v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Add v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Add v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 4. \\<And>v na.\n       \\<lbrakk>f = Minus v; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Minus v) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith (deriv_rec (Minus v) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 5. \\<And>v va na.\n       \\<lbrakk>f = Mult v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Mult v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Mult v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 6. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Add va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Add va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Add va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 7. \\<And>va na.\n       \\<lbrakk>f = Inverse (Minus va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Minus va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Minus va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 8. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Mult va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Mult va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Mult va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 9. \\<And>va na.\n       \\<lbrakk>f = Inverse (Inverse va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Inverse va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Inverse va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 10. \\<And>va na.\n        \\<lbrakk>f = Inverse (Cos va); isDERIV 0 f (xs[0 := t]);\n         0 < length xs;\n         \\<And>n S.\n            ((\\<lambda>x.\n                 interpret_floatarith (local.deriv 0 f n)\n                  (xs[0 := x])) has_real_derivative\n             interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n             (at t within S)\\<rbrakk>\n        \\<Longrightarrow> ((\\<lambda>x.\n                               interpret_floatarith\n                                (deriv_rec (Inverse (Cos va)) n)\n                                (xs[0 := x])) has_real_derivative\n                           interpret_floatarith\n                            (deriv_rec (Inverse (Cos va)) (Suc n))\n                            (xs[0 := t]))\n                           (at t within S)\nA total of 71 subgoals...", "{"], ["proof (state)\nthis:\n  t \\<noteq> 0\n\ngoal (71 subgoals):\n 1. \\<And>_.\n       \\<lbrakk>f = Exp (Var 0); isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Exp (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Exp (Var 0)) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 2. \\<And>na.\n       \\<lbrakk>f = Inverse (Var 0); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Var 0)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 3. \\<And>v va na.\n       \\<lbrakk>f = Add v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Add v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Add v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 4. \\<And>v na.\n       \\<lbrakk>f = Minus v; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Minus v) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith (deriv_rec (Minus v) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 5. \\<And>v va na.\n       \\<lbrakk>f = Mult v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Mult v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Mult v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 6. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Add va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Add va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Add va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 7. \\<And>va na.\n       \\<lbrakk>f = Inverse (Minus va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Minus va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Minus va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 8. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Mult va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Mult va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Mult va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 9. \\<And>va na.\n       \\<lbrakk>f = Inverse (Inverse va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Inverse va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Inverse va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 10. \\<And>va na.\n        \\<lbrakk>f = Inverse (Cos va); isDERIV 0 f (xs[0 := t]);\n         0 < length xs;\n         \\<And>n S.\n            ((\\<lambda>x.\n                 interpret_floatarith (local.deriv 0 f n)\n                  (xs[0 := x])) has_real_derivative\n             interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n             (at t within S)\\<rbrakk>\n        \\<Longrightarrow> ((\\<lambda>x.\n                               interpret_floatarith\n                                (deriv_rec (Inverse (Cos va)) n)\n                                (xs[0 := x])) has_real_derivative\n                           interpret_floatarith\n                            (deriv_rec (Inverse (Cos va)) (Suc n))\n                            (xs[0 := t]))\n                           (at t within S)\nA total of 71 subgoals...", "fix n::nat and x::real"], ["proof (state)\ngoal (71 subgoals):\n 1. \\<And>_.\n       \\<lbrakk>f = Exp (Var 0); isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Exp (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Exp (Var 0)) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 2. \\<And>na.\n       \\<lbrakk>f = Inverse (Var 0); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Var 0)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 3. \\<And>v va na.\n       \\<lbrakk>f = Add v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Add v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Add v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 4. \\<And>v na.\n       \\<lbrakk>f = Minus v; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Minus v) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith (deriv_rec (Minus v) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 5. \\<And>v va na.\n       \\<lbrakk>f = Mult v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Mult v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Mult v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 6. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Add va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Add va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Add va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 7. \\<And>va na.\n       \\<lbrakk>f = Inverse (Minus va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Minus va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Minus va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 8. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Mult va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Mult va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Mult va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 9. \\<And>va na.\n       \\<lbrakk>f = Inverse (Inverse va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Inverse va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Inverse va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 10. \\<And>va na.\n        \\<lbrakk>f = Inverse (Cos va); isDERIV 0 f (xs[0 := t]);\n         0 < length xs;\n         \\<And>n S.\n            ((\\<lambda>x.\n                 interpret_floatarith (local.deriv 0 f n)\n                  (xs[0 := x])) has_real_derivative\n             interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n             (at t within S)\\<rbrakk>\n        \\<Longrightarrow> ((\\<lambda>x.\n                               interpret_floatarith\n                                (deriv_rec (Inverse (Cos va)) n)\n                                (xs[0 := x])) has_real_derivative\n                           interpret_floatarith\n                            (deriv_rec (Inverse (Cos va)) (Suc n))\n                            (xs[0 := t]))\n                           (at t within S)\nA total of 71 subgoals...", "assume \"x \\<noteq> 0\""], ["proof (state)\nthis:\n  x \\<noteq> 0\n\ngoal (71 subgoals):\n 1. \\<And>_.\n       \\<lbrakk>f = Exp (Var 0); isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Exp (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Exp (Var 0)) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 2. \\<And>na.\n       \\<lbrakk>f = Inverse (Var 0); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Var 0)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 3. \\<And>v va na.\n       \\<lbrakk>f = Add v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Add v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Add v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 4. \\<And>v na.\n       \\<lbrakk>f = Minus v; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Minus v) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith (deriv_rec (Minus v) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 5. \\<And>v va na.\n       \\<lbrakk>f = Mult v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Mult v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Mult v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 6. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Add va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Add va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Add va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 7. \\<And>va na.\n       \\<lbrakk>f = Inverse (Minus va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Minus va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Minus va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 8. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Mult va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Mult va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Mult va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 9. \\<And>va na.\n       \\<lbrakk>f = Inverse (Inverse va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Inverse va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Inverse va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 10. \\<And>va na.\n        \\<lbrakk>f = Inverse (Cos va); isDERIV 0 f (xs[0 := t]);\n         0 < length xs;\n         \\<And>n S.\n            ((\\<lambda>x.\n                 interpret_floatarith (local.deriv 0 f n)\n                  (xs[0 := x])) has_real_derivative\n             interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n             (at t within S)\\<rbrakk>\n        \\<Longrightarrow> ((\\<lambda>x.\n                               interpret_floatarith\n                                (deriv_rec (Inverse (Cos va)) n)\n                                (xs[0 := x])) has_real_derivative\n                           interpret_floatarith\n                            (deriv_rec (Inverse (Cos va)) (Suc n))\n                            (xs[0 := t]))\n                           (at t within S)\nA total of 71 subgoals...", "moreover"], ["proof (state)\nthis:\n  x \\<noteq> 0\n\ngoal (71 subgoals):\n 1. \\<And>_.\n       \\<lbrakk>f = Exp (Var 0); isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Exp (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Exp (Var 0)) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 2. \\<And>na.\n       \\<lbrakk>f = Inverse (Var 0); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Var 0)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 3. \\<And>v va na.\n       \\<lbrakk>f = Add v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Add v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Add v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 4. \\<And>v na.\n       \\<lbrakk>f = Minus v; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Minus v) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith (deriv_rec (Minus v) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 5. \\<And>v va na.\n       \\<lbrakk>f = Mult v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Mult v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Mult v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 6. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Add va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Add va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Add va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 7. \\<And>va na.\n       \\<lbrakk>f = Inverse (Minus va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Minus va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Minus va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 8. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Mult va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Mult va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Mult va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 9. \\<And>va na.\n       \\<lbrakk>f = Inverse (Inverse va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Inverse va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Inverse va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 10. \\<And>va na.\n        \\<lbrakk>f = Inverse (Cos va); isDERIV 0 f (xs[0 := t]);\n         0 < length xs;\n         \\<And>n S.\n            ((\\<lambda>x.\n                 interpret_floatarith (local.deriv 0 f n)\n                  (xs[0 := x])) has_real_derivative\n             interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n             (at t within S)\\<rbrakk>\n        \\<Longrightarrow> ((\\<lambda>x.\n                               interpret_floatarith\n                                (deriv_rec (Inverse (Cos va)) n)\n                                (xs[0 := x])) has_real_derivative\n                           interpret_floatarith\n                            (deriv_rec (Inverse (Cos va)) (Suc n))\n                            (xs[0 := t]))\n                           (at t within S)\nA total of 71 subgoals...", "have \"(n mod 2 = 0 \\<and> Suc n mod 2 = 1) \\<or> (n mod 2 = 1 \\<and> Suc n mod 2 = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n mod 2 = 0 \\<and> Suc n mod 2 = 1 \\<or>\n    n mod 2 = 1 \\<and> Suc n mod 2 = 0", "by (cases n rule: parity_cases) auto"], ["proof (state)\nthis:\n  n mod 2 = 0 \\<and> Suc n mod 2 = 1 \\<or>\n  n mod 2 = 1 \\<and> Suc n mod 2 = 0\n\ngoal (71 subgoals):\n 1. \\<And>_.\n       \\<lbrakk>f = Exp (Var 0); isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Exp (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Exp (Var 0)) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 2. \\<And>na.\n       \\<lbrakk>f = Inverse (Var 0); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Var 0)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 3. \\<And>v va na.\n       \\<lbrakk>f = Add v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Add v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Add v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 4. \\<And>v na.\n       \\<lbrakk>f = Minus v; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Minus v) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith (deriv_rec (Minus v) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 5. \\<And>v va na.\n       \\<lbrakk>f = Mult v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Mult v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Mult v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 6. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Add va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Add va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Add va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 7. \\<And>va na.\n       \\<lbrakk>f = Inverse (Minus va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Minus va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Minus va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 8. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Mult va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Mult va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Mult va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 9. \\<And>va na.\n       \\<lbrakk>f = Inverse (Inverse va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Inverse va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Inverse va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 10. \\<And>va na.\n        \\<lbrakk>f = Inverse (Cos va); isDERIV 0 f (xs[0 := t]);\n         0 < length xs;\n         \\<And>n S.\n            ((\\<lambda>x.\n                 interpret_floatarith (local.deriv 0 f n)\n                  (xs[0 := x])) has_real_derivative\n             interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n             (at t within S)\\<rbrakk>\n        \\<Longrightarrow> ((\\<lambda>x.\n                               interpret_floatarith\n                                (deriv_rec (Inverse (Cos va)) n)\n                                (xs[0 := x])) has_real_derivative\n                           interpret_floatarith\n                            (deriv_rec (Inverse (Cos va)) (Suc n))\n                            (xs[0 := t]))\n                           (at t within S)\nA total of 71 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  x \\<noteq> 0\n  n mod 2 = 0 \\<and> Suc n mod 2 = 1 \\<or>\n  n mod 2 = 1 \\<and> Suc n mod 2 = 0", "have \"interpret_floatarith (deriv_rec f n) (xs[0:=x]) = fact n * (-1::real)^n / (x^Suc n)\""], ["proof (prove)\nusing this:\n  x \\<noteq> 0\n  n mod 2 = 0 \\<and> Suc n mod 2 = 1 \\<or>\n  n mod 2 = 1 \\<and> Suc n mod 2 = 0\n\ngoal (1 subgoal):\n 1. interpret_floatarith (deriv_rec f n) (xs[0 := x]) =\n    fact n * (- 1) ^ n / x ^ Suc n", "using assms"], ["proof (prove)\nusing this:\n  x \\<noteq> 0\n  n mod 2 = 0 \\<and> Suc n mod 2 = 1 \\<or>\n  n mod 2 = 1 \\<and> Suc n mod 2 = 0\n  isDERIV 0 f (xs[0 := t])\n  0 < length xs\n\ngoal (1 subgoal):\n 1. interpret_floatarith (deriv_rec f n) (xs[0 := x]) =\n    fact n * (- 1) ^ n / x ^ Suc n", "by (auto simp add: f_def field_simps fact_real_float_equiv)"], ["proof (state)\nthis:\n  interpret_floatarith (deriv_rec f n) (xs[0 := x]) =\n  fact n * (- 1) ^ n / x ^ Suc n\n\ngoal (71 subgoals):\n 1. \\<And>_.\n       \\<lbrakk>f = Exp (Var 0); isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Exp (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Exp (Var 0)) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 2. \\<And>na.\n       \\<lbrakk>f = Inverse (Var 0); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Var 0)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 3. \\<And>v va na.\n       \\<lbrakk>f = Add v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Add v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Add v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 4. \\<And>v na.\n       \\<lbrakk>f = Minus v; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Minus v) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith (deriv_rec (Minus v) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 5. \\<And>v va na.\n       \\<lbrakk>f = Mult v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Mult v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Mult v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 6. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Add va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Add va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Add va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 7. \\<And>va na.\n       \\<lbrakk>f = Inverse (Minus va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Minus va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Minus va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 8. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Mult va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Mult va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Mult va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 9. \\<And>va na.\n       \\<lbrakk>f = Inverse (Inverse va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Inverse va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Inverse va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 10. \\<And>va na.\n        \\<lbrakk>f = Inverse (Cos va); isDERIV 0 f (xs[0 := t]);\n         0 < length xs;\n         \\<And>n S.\n            ((\\<lambda>x.\n                 interpret_floatarith (local.deriv 0 f n)\n                  (xs[0 := x])) has_real_derivative\n             interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n             (at t within S)\\<rbrakk>\n        \\<Longrightarrow> ((\\<lambda>x.\n                               interpret_floatarith\n                                (deriv_rec (Inverse (Cos va)) n)\n                                (xs[0 := x])) has_real_derivative\n                           interpret_floatarith\n                            (deriv_rec (Inverse (Cos va)) (Suc n))\n                            (xs[0 := t]))\n                           (at t within S)\nA total of 71 subgoals...", "}"], ["proof (state)\nthis:\n  ?x2 \\<noteq> 0 \\<Longrightarrow>\n  interpret_floatarith (deriv_rec f ?na2) (xs[0 := ?x2]) =\n  fact ?na2 * (- 1) ^ ?na2 / ?x2 ^ Suc ?na2\n\ngoal (71 subgoals):\n 1. \\<And>_.\n       \\<lbrakk>f = Exp (Var 0); isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Exp (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Exp (Var 0)) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 2. \\<And>na.\n       \\<lbrakk>f = Inverse (Var 0); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Var 0)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 3. \\<And>v va na.\n       \\<lbrakk>f = Add v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Add v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Add v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 4. \\<And>v na.\n       \\<lbrakk>f = Minus v; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Minus v) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith (deriv_rec (Minus v) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 5. \\<And>v va na.\n       \\<lbrakk>f = Mult v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Mult v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Mult v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 6. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Add va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Add va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Add va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 7. \\<And>va na.\n       \\<lbrakk>f = Inverse (Minus va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Minus va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Minus va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 8. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Mult va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Mult va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Mult va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 9. \\<And>va na.\n       \\<lbrakk>f = Inverse (Inverse va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Inverse va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Inverse va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 10. \\<And>va na.\n        \\<lbrakk>f = Inverse (Cos va); isDERIV 0 f (xs[0 := t]);\n         0 < length xs;\n         \\<And>n S.\n            ((\\<lambda>x.\n                 interpret_floatarith (local.deriv 0 f n)\n                  (xs[0 := x])) has_real_derivative\n             interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n             (at t within S)\\<rbrakk>\n        \\<Longrightarrow> ((\\<lambda>x.\n                               interpret_floatarith\n                                (deriv_rec (Inverse (Cos va)) n)\n                                (xs[0 := x])) has_real_derivative\n                           interpret_floatarith\n                            (deriv_rec (Inverse (Cos va)) (Suc n))\n                            (xs[0 := t]))\n                           (at t within S)\nA total of 71 subgoals...", "note closed_formula = this"], ["proof (state)\nthis:\n  ?x2 \\<noteq> 0 \\<Longrightarrow>\n  interpret_floatarith (deriv_rec f ?na2) (xs[0 := ?x2]) =\n  fact ?na2 * (- 1) ^ ?na2 / ?x2 ^ Suc ?na2\n\ngoal (71 subgoals):\n 1. \\<And>_.\n       \\<lbrakk>f = Exp (Var 0); isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Exp (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Exp (Var 0)) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 2. \\<And>na.\n       \\<lbrakk>f = Inverse (Var 0); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Var 0)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 3. \\<And>v va na.\n       \\<lbrakk>f = Add v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Add v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Add v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 4. \\<And>v na.\n       \\<lbrakk>f = Minus v; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Minus v) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith (deriv_rec (Minus v) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 5. \\<And>v va na.\n       \\<lbrakk>f = Mult v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Mult v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Mult v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 6. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Add va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Add va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Add va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 7. \\<And>va na.\n       \\<lbrakk>f = Inverse (Minus va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Minus va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Minus va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 8. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Mult va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Mult va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Mult va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 9. \\<And>va na.\n       \\<lbrakk>f = Inverse (Inverse va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Inverse va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Inverse va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 10. \\<And>va na.\n        \\<lbrakk>f = Inverse (Cos va); isDERIV 0 f (xs[0 := t]);\n         0 < length xs;\n         \\<And>n S.\n            ((\\<lambda>x.\n                 interpret_floatarith (local.deriv 0 f n)\n                  (xs[0 := x])) has_real_derivative\n             interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n             (at t within S)\\<rbrakk>\n        \\<Longrightarrow> ((\\<lambda>x.\n                               interpret_floatarith\n                                (deriv_rec (Inverse (Cos va)) n)\n                                (xs[0 := x])) has_real_derivative\n                           interpret_floatarith\n                            (deriv_rec (Inverse (Cos va)) (Suc n))\n                            (xs[0 := t]))\n                           (at t within S)\nA total of 71 subgoals...", "have \"((\\<lambda>x. inverse (x ^ Suc n)) has_real_derivative -real (Suc n) * inverse (t ^ Suc (Suc n))) (at t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. inverse (x ^ Suc n)) has_real_derivative\n     - real (Suc n) * inverse (t ^ Suc (Suc n)))\n     (at t)", "using DERIV_inverse_fun[OF DERIV_pow[where n=\"Suc n\"], where s=UNIV]"], ["proof (prove)\nusing this:\n  ?x ^ Suc n \\<noteq> 0 \\<Longrightarrow>\n  ((\\<lambda>x. inverse (x ^ Suc n)) has_real_derivative\n   - (real (Suc n) * ?x ^ (Suc n - Suc 0) *\n      inverse ((?x ^ Suc n) ^ Suc (Suc 0))))\n   (at ?x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. inverse (x ^ Suc n)) has_real_derivative\n     - real (Suc n) * inverse (t ^ Suc (Suc n)))\n     (at t)", "apply(rule iffD1[OF DERIV_cong_ev[OF refl], rotated 2])"], ["proof (prove)\ngoal (3 subgoals):\n 1. t ^ Suc n \\<noteq> 0\n 2. \\<forall>\\<^sub>F x in nhds t. inverse (x ^ Suc n) = inverse (x ^ Suc n)\n 3. - (real (Suc n) * t ^ (Suc n - Suc 0) *\n       inverse ((t ^ Suc n) ^ Suc (Suc 0))) =\n    - real (Suc n) * inverse (t ^ Suc (Suc n))", "using \\<open>t \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  t \\<noteq> 0\n\ngoal (3 subgoals):\n 1. t ^ Suc n \\<noteq> 0\n 2. \\<forall>\\<^sub>F x in nhds t. inverse (x ^ Suc n) = inverse (x ^ Suc n)\n 3. - (real (Suc n) * t ^ (Suc n - Suc 0) *\n       inverse ((t ^ Suc n) ^ Suc (Suc 0))) =\n    - real (Suc n) * inverse (t ^ Suc (Suc n))", "by (simp_all add: divide_simps)"], ["proof (state)\nthis:\n  ((\\<lambda>x. inverse (x ^ Suc n)) has_real_derivative\n   - real (Suc n) * inverse (t ^ Suc (Suc n)))\n   (at t)\n\ngoal (71 subgoals):\n 1. \\<And>_.\n       \\<lbrakk>f = Exp (Var 0); isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Exp (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Exp (Var 0)) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 2. \\<And>na.\n       \\<lbrakk>f = Inverse (Var 0); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Var 0)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 3. \\<And>v va na.\n       \\<lbrakk>f = Add v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Add v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Add v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 4. \\<And>v na.\n       \\<lbrakk>f = Minus v; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Minus v) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith (deriv_rec (Minus v) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 5. \\<And>v va na.\n       \\<lbrakk>f = Mult v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Mult v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Mult v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 6. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Add va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Add va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Add va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 7. \\<And>va na.\n       \\<lbrakk>f = Inverse (Minus va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Minus va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Minus va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 8. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Mult va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Mult va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Mult va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 9. \\<And>va na.\n       \\<lbrakk>f = Inverse (Inverse va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Inverse va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Inverse va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 10. \\<And>va na.\n        \\<lbrakk>f = Inverse (Cos va); isDERIV 0 f (xs[0 := t]);\n         0 < length xs;\n         \\<And>n S.\n            ((\\<lambda>x.\n                 interpret_floatarith (local.deriv 0 f n)\n                  (xs[0 := x])) has_real_derivative\n             interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n             (at t within S)\\<rbrakk>\n        \\<Longrightarrow> ((\\<lambda>x.\n                               interpret_floatarith\n                                (deriv_rec (Inverse (Cos va)) n)\n                                (xs[0 := x])) has_real_derivative\n                           interpret_floatarith\n                            (deriv_rec (Inverse (Cos va)) (Suc n))\n                            (xs[0 := t]))\n                           (at t within S)\nA total of 71 subgoals...", "hence \"((\\<lambda>x. fact n * (-1::real)^n * inverse (x ^ Suc n)) has_real_derivative fact (Suc n) * (- 1) ^ Suc n / t ^ Suc (Suc n)) (at t)\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x. inverse (x ^ Suc n)) has_real_derivative\n   - real (Suc n) * inverse (t ^ Suc (Suc n)))\n   (at t)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         fact n * (- 1) ^ n * inverse (x ^ Suc n)) has_real_derivative\n     fact (Suc n) * (- 1) ^ Suc n / t ^ Suc (Suc n))\n     (at t)", "apply(rule iffD1[OF DERIV_cong_ev, OF refl _ _ DERIV_cmult[where c=\"fact n * (-1::real)^n\"], rotated 2])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in nhds t.\n       fact n * (- 1) ^ n * inverse (x ^ Suc n) =\n       fact n * (- 1) ^ n * inverse (x ^ Suc n)\n 2. fact n * (- 1) ^ n * (- real (Suc n) * inverse (t ^ Suc (Suc n))) =\n    fact (Suc n) * (- 1) ^ Suc n / t ^ Suc (Suc n)", "using \\<open>t \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  t \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in nhds t.\n       fact n * (- 1) ^ n * inverse (x ^ Suc n) =\n       fact n * (- 1) ^ n * inverse (x ^ Suc n)\n 2. fact n * (- 1) ^ n * (- real (Suc n) * inverse (t ^ Suc (Suc n))) =\n    fact (Suc n) * (- 1) ^ Suc n / t ^ Suc (Suc n)", "by (simp_all add: field_simps distrib_left)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       fact n * (- 1) ^ n * inverse (x ^ Suc n)) has_real_derivative\n   fact (Suc n) * (- 1) ^ Suc n / t ^ Suc (Suc n))\n   (at t)\n\ngoal (71 subgoals):\n 1. \\<And>_.\n       \\<lbrakk>f = Exp (Var 0); isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Exp (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Exp (Var 0)) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 2. \\<And>na.\n       \\<lbrakk>f = Inverse (Var 0); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Var 0)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 3. \\<And>v va na.\n       \\<lbrakk>f = Add v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Add v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Add v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 4. \\<And>v na.\n       \\<lbrakk>f = Minus v; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Minus v) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith (deriv_rec (Minus v) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 5. \\<And>v va na.\n       \\<lbrakk>f = Mult v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Mult v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Mult v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 6. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Add va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Add va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Add va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 7. \\<And>va na.\n       \\<lbrakk>f = Inverse (Minus va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Minus va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Minus va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 8. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Mult va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Mult va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Mult va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 9. \\<And>va na.\n       \\<lbrakk>f = Inverse (Inverse va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Inverse va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Inverse va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 10. \\<And>va na.\n        \\<lbrakk>f = Inverse (Cos va); isDERIV 0 f (xs[0 := t]);\n         0 < length xs;\n         \\<And>n S.\n            ((\\<lambda>x.\n                 interpret_floatarith (local.deriv 0 f n)\n                  (xs[0 := x])) has_real_derivative\n             interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n             (at t within S)\\<rbrakk>\n        \\<Longrightarrow> ((\\<lambda>x.\n                               interpret_floatarith\n                                (deriv_rec (Inverse (Cos va)) n)\n                                (xs[0 := x])) has_real_derivative\n                           interpret_floatarith\n                            (deriv_rec (Inverse (Cos va)) (Suc n))\n                            (xs[0 := t]))\n                           (at t within S)\nA total of 71 subgoals...", "then"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       fact n * (- 1) ^ n * inverse (x ^ Suc n)) has_real_derivative\n   fact (Suc n) * (- 1) ^ Suc n / t ^ Suc (Suc n))\n   (at t)", "show \"((\\<lambda>x. interpret_floatarith (deriv_rec (Inverse (Var 0)) n) (xs[0:=x])) has_real_derivative\n         interpret_floatarith (deriv_rec (Inverse (Var 0)) (Suc n)) (xs[0:=t]))\n         (at t within S)\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       fact n * (- 1) ^ n * inverse (x ^ Suc n)) has_real_derivative\n   fact (Suc n) * (- 1) ^ Suc n / t ^ Suc (Suc n))\n   (at t)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         interpret_floatarith (deriv_rec (Inverse (Var 0)) n)\n          (xs[0 := x])) has_real_derivative\n     interpret_floatarith (deriv_rec (Inverse (Var 0)) (Suc n))\n      (xs[0 := t]))\n     (at t within S)", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         fact n * (- 1) ^ n * inverse (x ^ Suc n)) has_real_derivative\n     fact (Suc n) * (- 1) ^ Suc n / t ^ Suc (Suc n))\n     (at t) \\<Longrightarrow>\n    ((\\<lambda>x.\n         interpret_floatarith (deriv_rec (Inverse (Var 0)) n)\n          (xs[0 := x])) has_real_derivative\n     interpret_floatarith (deriv_rec (Inverse (Var 0)) (Suc n))\n      (xs[0 := t]))\n     (at t within S)", "apply (rule has_field_derivative_at_within)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         fact n * (- 1) ^ n * inverse (x ^ Suc n)) has_real_derivative\n     fact (Suc n) * (- 1) ^ Suc n / t ^ Suc (Suc n))\n     (at t) \\<Longrightarrow>\n    ((\\<lambda>x.\n         interpret_floatarith (deriv_rec (Inverse (Var 0)) n)\n          (xs[0 := x])) has_real_derivative\n     interpret_floatarith (deriv_rec (Inverse (Var 0)) (Suc n))\n      (xs[0 := t]))\n     (at t)", "apply(rule iffD1[OF DERIV_cong_ev[OF refl _ closed_formula[OF \\<open>t \\<noteq> 0\\<close>, symmetric]], unfolded f_def, rotated 1])"], ["proof (prove)\ngoal (2 subgoals):\n 1. ((\\<lambda>x.\n         fact n * (- 1) ^ n * inverse (x ^ Suc n)) has_real_derivative\n     fact (Suc n) * (- 1) ^ Suc n / t ^ Suc (Suc n))\n     (at t) \\<Longrightarrow>\n    (?f4 has_real_derivative fact (Suc n) * (- 1) ^ Suc n / t ^ Suc (Suc n))\n     (at t)\n 2. ((\\<lambda>x.\n         fact n * (- 1) ^ n * inverse (x ^ Suc n)) has_real_derivative\n     fact (Suc n) * (- 1) ^ Suc n / t ^ Suc (Suc n))\n     (at t) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in nhds t.\n       ?f4 x =\n       interpret_floatarith (deriv_rec (Inverse (Var 0)) n) (xs[0 := x])", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         fact n * (- 1) ^ n * inverse (x ^ Suc n)) has_real_derivative\n     fact (Suc n) * (- 1) ^ Suc n / t ^ Suc (Suc n))\n     (at t) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in nhds t.\n       fact n * (- 1) ^ n * (inverse x * inverse (x ^ n)) =\n       interpret_floatarith (deriv_rec (Inverse (Var 0)) n) (xs[0 := x])", "using assms"], ["proof (prove)\nusing this:\n  isDERIV 0 f (xs[0 := t])\n  0 < length xs\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         fact n * (- 1) ^ n * inverse (x ^ Suc n)) has_real_derivative\n     fact (Suc n) * (- 1) ^ Suc n / t ^ Suc (Suc n))\n     (at t) \\<Longrightarrow>\n    \\<forall>\\<^sub>F x in nhds t.\n       fact n * (- 1) ^ n * (inverse x * inverse (x ^ n)) =\n       interpret_floatarith (deriv_rec (Inverse (Var 0)) n) (xs[0 := x])", "by (simp, safe, simp_all add: fact_real_float_equiv inverse_eq_divide even_iff_mod_2_eq_zero)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       interpret_floatarith (deriv_rec (Inverse (Var 0)) n)\n        (xs[0 := x])) has_real_derivative\n   interpret_floatarith (deriv_rec (Inverse (Var 0)) (Suc n)) (xs[0 := t]))\n   (at t within S)\n\ngoal (70 subgoals):\n 1. \\<And>_.\n       \\<lbrakk>f = Exp (Var 0); isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Exp (Var 0)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Exp (Var 0)) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 2. \\<And>v va na.\n       \\<lbrakk>f = Add v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Add v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Add v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 3. \\<And>v na.\n       \\<lbrakk>f = Minus v; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Minus v) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith (deriv_rec (Minus v) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 4. \\<And>v va na.\n       \\<lbrakk>f = Mult v va; isDERIV 0 f (xs[0 := t]); 0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith (deriv_rec (Mult v va) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Mult v va) (Suc n)) (xs[0 := t]))\n                          (at t within S)\n 5. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Add va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Add va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Add va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 6. \\<And>va na.\n       \\<lbrakk>f = Inverse (Minus va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Minus va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Minus va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 7. \\<And>va vb na.\n       \\<lbrakk>f = Inverse (Mult va vb); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Mult va vb)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Mult va vb)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 8. \\<And>va na.\n       \\<lbrakk>f = Inverse (Inverse va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Inverse va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Inverse va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 9. \\<And>va na.\n       \\<lbrakk>f = Inverse (Cos va); isDERIV 0 f (xs[0 := t]);\n        0 < length xs;\n        \\<And>n S.\n           ((\\<lambda>x.\n                interpret_floatarith (local.deriv 0 f n)\n                 (xs[0 := x])) has_real_derivative\n            interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n            (at t within S)\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>x.\n                              interpret_floatarith\n                               (deriv_rec (Inverse (Cos va)) n)\n                               (xs[0 := x])) has_real_derivative\n                          interpret_floatarith\n                           (deriv_rec (Inverse (Cos va)) (Suc n))\n                           (xs[0 := t]))\n                          (at t within S)\n 10. \\<And>va na.\n        \\<lbrakk>f = Inverse (Arctan va); isDERIV 0 f (xs[0 := t]);\n         0 < length xs;\n         \\<And>n S.\n            ((\\<lambda>x.\n                 interpret_floatarith (local.deriv 0 f n)\n                  (xs[0 := x])) has_real_derivative\n             interpret_floatarith (local.deriv 0 f (Suc n)) (xs[0 := t]))\n             (at t within S)\\<rbrakk>\n        \\<Longrightarrow> ((\\<lambda>x.\n                               interpret_floatarith\n                                (deriv_rec (Inverse (Arctan va)) n)\n                                (xs[0 := x])) has_real_derivative\n                           interpret_floatarith\n                            (deriv_rec (Inverse (Arctan va)) (Suc n))\n                            (xs[0 := t]))\n                           (at t within S)\nA total of 70 subgoals...", "qed (use assms in \\<open>simp_all add: has_field_derivative_subset[OF DERIV_exp subset_UNIV]\\<close>)"], ["", "lemma deriv_rec_0_idem[simp]:\n  shows \"deriv_rec f 0 = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. deriv_rec f 0 = f", "by (cases \"(f, 0::nat)\" rule: deriv_rec.cases, simp_all)"], ["", "subsubsection \\<open>Computing Taylor models for arbitrary univariate expressions\\<close>"], ["", "fun tmf_c :: \"nat \\<Rightarrow> float interval list \\<Rightarrow> floatarith \\<Rightarrow> nat \\<Rightarrow> float interval option\"\n  where \"tmf_c prec I f i = compute_bound_fa prec (Mult (deriv_rec f i) (Inverse (Num (fact i)))) I\"\n    \\<comment> \\<open>The interval coefficients of the Taylor polynomial,\n   i.e. the real coefficients approximated by a float interval.\\<close>"], ["", "fun tmf_ivl_cs :: \"nat \\<Rightarrow> nat \\<Rightarrow> float interval list \\<Rightarrow> float list \\<Rightarrow> floatarith \\<Rightarrow> float interval list option\"\n  where \"tmf_ivl_cs prec ord I a f = those (map (tmf_c prec a f) [0..<ord] @ [tmf_c prec I f ord])\"\n    \\<comment> \\<open>Make a list of bounds on the n+1 coefficients, with the n+1-th coefficient bounding\n   the remainder term of the Taylor-Lagrange formula.\\<close>"], ["", "fun tmf_polys :: \"float interval list \\<Rightarrow> float poly \\<times> float interval poly\"\n  where \"tmf_polys [] = (poly.C 0, poly.C 0)\"\n  | \"tmf_polys (c # cs) = (\n         let (pf, pi) = tmf_polys cs\n         in (poly.CN (poly.C (mid c)) 0 pf, poly.CN (poly.C (centered c)) 0 pi)\n       )\""], ["", "fun tm_floatarith :: \"nat \\<Rightarrow> nat \\<Rightarrow> float interval list \\<Rightarrow> float list \\<Rightarrow> floatarith \\<Rightarrow> taylor_model option\"\n  where \"tm_floatarith prec ord I a f = (\n  map_option (\\<lambda>cs. \n    let (pf, pi) = tmf_polys cs;\n        _ = compute_bound_tm prec (List.map2 (-) I a);\n        e = round_interval prec (Ipoly (List.map2 (-) I a) pi) \\<comment> \\<open>TODO: use \\<open>compute_bound_tm\\<close> here?!\\<close>\n    in TaylorModel pf e\n  ) (tmf_ivl_cs prec ord I a f)\n)\" \\<comment> \\<open>Compute a Taylor model from an arbitrary, univariate floatarith expression, if possible.\n   This is used to compute Taylor models for elemental functions like sin, cos, exp, etc.\\<close>"], ["", "term compute_bound_poly"], ["", "lemma tmf_c_correct:\n  fixes A::\"float interval list\" and I::\"float interval\" and f::floatarith and a::\"real list\"\n  assumes \"a all_in A\"\n  assumes \"tmf_c prec A f i = Some I\"\n  shows \"interpret_floatarith (deriv_rec f i) a / fact i \\<in>\\<^sub>r I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith (deriv_rec f i) a / fact i \\<in>\\<^sub>r I", "using compute_bound_fa_correct[OF assms(2)[unfolded tmf_c.simps], where i=\"a\"] assms(1)"], ["proof (prove)\nusing this:\n  a all_in A \\<Longrightarrow>\n  interpret_floatarith (Mult (deriv_rec f i) (Inverse (Num (fact i)))) a\n  \\<in>\\<^sub>r I\n  a all_in A\n\ngoal (1 subgoal):\n 1. interpret_floatarith (deriv_rec f i) a / fact i \\<in>\\<^sub>r I", "by (simp add: divide_real_def fact_real_float_equiv)"], ["", "lemma tmf_ivl_cs_length:\n  assumes \"tmf_ivl_cs prec n A a f = Some cs\"\n  shows \"length cs = n + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length cs = n + 1", "by (simp add: Some_those_length[OF assms[unfolded tmf_ivl_cs.simps]])"], ["", "lemma tmf_ivl_cs_correct:\n  fixes A::\"float interval list\" and f::floatarith\n  assumes \"a all_in I\"\n  assumes \"tmf_ivl_cs prec ord I a f = Some cs\"\n  shows \"\\<And>i. i < ord \\<Longrightarrow> tmf_c prec (map interval_of a) f i = Some (cs!i)\"\n    and \"tmf_c prec I f ord = Some (cs!ord)\"\n    and \"length cs = Suc ord\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        i < ord \\<Longrightarrow>\n        tmf_c prec (map interval_of a) f i = Some (cs ! i)) &&&\n    tmf_c prec I f ord = Some (cs ! ord) &&& length cs = Suc ord", "proof-"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i.\n       i < ord \\<Longrightarrow>\n       tmf_c prec (map interval_of a) f i = Some (cs ! i)\n 2. tmf_c prec I f ord = Some (cs ! ord)\n 3. length cs = Suc ord", "from tmf_ivl_cs_length[OF assms(2)]"], ["proof (chain)\npicking this:\n  length cs = ord + 1", "show \"tmf_c prec I f ord = Some (cs!ord)\""], ["proof (prove)\nusing this:\n  length cs = ord + 1\n\ngoal (1 subgoal):\n 1. tmf_c prec I f ord = Some (cs ! ord)", "by (metis Some_those_nth assms(2) diff_zero length_map length_upt less_add_one\n        nth_append_length tmf_ivl_cs.simps)"], ["proof (state)\nthis:\n  tmf_c prec I f ord = Some (cs ! ord)\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < ord \\<Longrightarrow>\n       tmf_c prec (map interval_of a) f i = Some (cs ! i)\n 2. length cs = Suc ord", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < ord \\<Longrightarrow>\n       tmf_c prec (map interval_of a) f i = Some (cs ! i)\n 2. length cs = Suc ord", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < ord \\<Longrightarrow>\n       tmf_c prec (map interval_of a) f i = Some (cs ! i)\n 2. length cs = Suc ord", "assume \"i < ord\""], ["proof (state)\nthis:\n  i < ord\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < ord \\<Longrightarrow>\n       tmf_c prec (map interval_of a) f i = Some (cs ! i)\n 2. length cs = Suc ord", "have \"Some (cs!i) = (map (tmf_c prec a f) [0..<ord] @ [tmf_c prec I f ord]) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Some (cs ! i) =\n    (map (tmf_c prec (map interval_of a) f) [0..<ord] @\n     [tmf_c prec I f ord]) !\n    i", "apply(rule Some_those_nth)"], ["proof (prove)\ngoal (2 subgoals):\n 1. those\n     (map (tmf_c prec (map interval_of a) f) [0..<ord] @\n      [tmf_c prec I f ord]) =\n    Some cs\n 2. i < length cs", "using assms(2) tmf_ivl_cs_length \\<open>i < ord\\<close>"], ["proof (prove)\nusing this:\n  tmf_ivl_cs prec ord I a f = Some cs\n  tmf_ivl_cs ?prec ?n ?A ?a ?f = Some ?cs \\<Longrightarrow>\n  length ?cs = ?n + 1\n  i < ord\n\ngoal (2 subgoals):\n 1. those\n     (map (tmf_c prec (map interval_of a) f) [0..<ord] @\n      [tmf_c prec I f ord]) =\n    Some cs\n 2. i < length cs", "by simp_all"], ["proof (state)\nthis:\n  Some (cs ! i) =\n  (map (tmf_c prec (map interval_of a) f) [0..<ord] @\n   [tmf_c prec I f ord]) !\n  i\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < ord \\<Longrightarrow>\n       tmf_c prec (map interval_of a) f i = Some (cs ! i)\n 2. length cs = Suc ord", "then"], ["proof (chain)\npicking this:\n  Some (cs ! i) =\n  (map (tmf_c prec (map interval_of a) f) [0..<ord] @\n   [tmf_c prec I f ord]) !\n  i", "show \"tmf_c prec a f i = Some (cs!i)\""], ["proof (prove)\nusing this:\n  Some (cs ! i) =\n  (map (tmf_c prec (map interval_of a) f) [0..<ord] @\n   [tmf_c prec I f ord]) !\n  i\n\ngoal (1 subgoal):\n 1. tmf_c prec (map interval_of a) f i = Some (cs ! i)", "using \\<open>i < ord\\<close>"], ["proof (prove)\nusing this:\n  Some (cs ! i) =\n  (map (tmf_c prec (map interval_of a) f) [0..<ord] @\n   [tmf_c prec I f ord]) !\n  i\n  i < ord\n\ngoal (1 subgoal):\n 1. tmf_c prec (map interval_of a) f i = Some (cs ! i)", "by (simp add: nth_append)"], ["proof (state)\nthis:\n  tmf_c prec (map interval_of a) f i = Some (cs ! i)\n\ngoal (1 subgoal):\n 1. length cs = Suc ord", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. length cs = Suc ord", "show \"length cs = Suc ord\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length cs = Suc ord", "using assms"], ["proof (prove)\nusing this:\n  map real_of_float a all_in I\n  tmf_ivl_cs prec ord I a f = Some cs\n\ngoal (1 subgoal):\n 1. length cs = Suc ord", "by (auto simp: split_beta' those_eq_Some_iff list_eq_iff_nth_eq)"], ["proof (state)\nthis:\n  length cs = Suc ord\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Ipoly_fst_tmf_polys:\n  \"Ipoly xs (fst (tmf_polys z)) = (\\<Sum>i<length z. xs ! 0 ^ i * (mid (z ! i)))\"\n  for xs::\"real list\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly xs (map_poly real_of_float (fst (tmf_polys z))) =\n    (\\<Sum>i<length z. xs ! 0 ^ i * real_of_float (mid (z ! i)))", "proof (induction z)"], ["proof (state)\ngoal (2 subgoals):\n 1. Ipoly xs (map_poly real_of_float (fst (tmf_polys []))) =\n    (\\<Sum>i<length []. xs ! 0 ^ i * real_of_float (mid ([] ! i)))\n 2. \\<And>a z.\n       Ipoly xs (map_poly real_of_float (fst (tmf_polys z))) =\n       (\\<Sum>i<length z.\n           xs ! 0 ^ i * real_of_float (mid (z ! i))) \\<Longrightarrow>\n       Ipoly xs (map_poly real_of_float (fst (tmf_polys (a # z)))) =\n       (\\<Sum>i<length (a # z).\n           xs ! 0 ^ i * real_of_float (mid ((a # z) ! i)))", "case (Cons z zs)"], ["proof (state)\nthis:\n  Ipoly xs (map_poly real_of_float (fst (tmf_polys zs))) =\n  (\\<Sum>i<length zs. xs ! 0 ^ i * real_of_float (mid (zs ! i)))\n\ngoal (2 subgoals):\n 1. Ipoly xs (map_poly real_of_float (fst (tmf_polys []))) =\n    (\\<Sum>i<length []. xs ! 0 ^ i * real_of_float (mid ([] ! i)))\n 2. \\<And>a z.\n       Ipoly xs (map_poly real_of_float (fst (tmf_polys z))) =\n       (\\<Sum>i<length z.\n           xs ! 0 ^ i * real_of_float (mid (z ! i))) \\<Longrightarrow>\n       Ipoly xs (map_poly real_of_float (fst (tmf_polys (a # z)))) =\n       (\\<Sum>i<length (a # z).\n           xs ! 0 ^ i * real_of_float (mid ((a # z) ! i)))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly xs (map_poly real_of_float (fst (tmf_polys (z # zs)))) =\n    (\\<Sum>i<length (z # zs).\n        xs ! 0 ^ i * real_of_float (mid ((z # zs) ! i)))", "unfolding list.size add_Suc_right sum.lessThan_Suc_shift"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly xs (map_poly real_of_float (fst (tmf_polys (z # zs)))) =\n    xs ! 0 ^ 0 * real_of_float (mid ((z # zs) ! 0)) +\n    (\\<Sum>i<length zs + 0.\n        xs ! 0 ^ Suc i * real_of_float (mid ((z # zs) ! Suc i)))", "by (auto simp: split_beta' Let_def nth_Cons Cons sum_distrib_left ac_simps)"], ["proof (state)\nthis:\n  Ipoly xs (map_poly real_of_float (fst (tmf_polys (z # zs)))) =\n  (\\<Sum>i<length (z # zs). xs ! 0 ^ i * real_of_float (mid ((z # zs) ! i)))\n\ngoal (1 subgoal):\n 1. Ipoly xs (map_poly real_of_float (fst (tmf_polys []))) =\n    (\\<Sum>i<length []. xs ! 0 ^ i * real_of_float (mid ([] ! i)))", "qed simp"], ["", "lemma insertion_fst_tmf_polys:\n  \"insertion e (fst (tmf_polys z)) = (\\<Sum>i<length z. e 0 ^ i * (mid (z ! i)))\"\n  for e::\"nat \\<Rightarrow> real\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insertion e (map_poly real_of_float (fst (tmf_polys z))) =\n    (\\<Sum>i<length z. e 0 ^ i * real_of_float (mid (z ! i)))", "proof (induction z)"], ["proof (state)\ngoal (2 subgoals):\n 1. insertion e (map_poly real_of_float (fst (tmf_polys []))) =\n    (\\<Sum>i<length []. e 0 ^ i * real_of_float (mid ([] ! i)))\n 2. \\<And>a z.\n       insertion e (map_poly real_of_float (fst (tmf_polys z))) =\n       (\\<Sum>i<length z.\n           e 0 ^ i * real_of_float (mid (z ! i))) \\<Longrightarrow>\n       insertion e (map_poly real_of_float (fst (tmf_polys (a # z)))) =\n       (\\<Sum>i<length (a # z). e 0 ^ i * real_of_float (mid ((a # z) ! i)))", "case (Cons z zs)"], ["proof (state)\nthis:\n  insertion e (map_poly real_of_float (fst (tmf_polys zs))) =\n  (\\<Sum>i<length zs. e 0 ^ i * real_of_float (mid (zs ! i)))\n\ngoal (2 subgoals):\n 1. insertion e (map_poly real_of_float (fst (tmf_polys []))) =\n    (\\<Sum>i<length []. e 0 ^ i * real_of_float (mid ([] ! i)))\n 2. \\<And>a z.\n       insertion e (map_poly real_of_float (fst (tmf_polys z))) =\n       (\\<Sum>i<length z.\n           e 0 ^ i * real_of_float (mid (z ! i))) \\<Longrightarrow>\n       insertion e (map_poly real_of_float (fst (tmf_polys (a # z)))) =\n       (\\<Sum>i<length (a # z). e 0 ^ i * real_of_float (mid ((a # z) ! i)))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. insertion e (map_poly real_of_float (fst (tmf_polys (z # zs)))) =\n    (\\<Sum>i<length (z # zs). e 0 ^ i * real_of_float (mid ((z # zs) ! i)))", "unfolding list.size add_Suc_right sum.lessThan_Suc_shift"], ["proof (prove)\ngoal (1 subgoal):\n 1. insertion e (map_poly real_of_float (fst (tmf_polys (z # zs)))) =\n    e 0 ^ 0 * real_of_float (mid ((z # zs) ! 0)) +\n    (\\<Sum>i<length zs + 0.\n        e 0 ^ Suc i * real_of_float (mid ((z # zs) ! Suc i)))", "by (auto simp: split_beta' Let_def nth_Cons Cons sum_distrib_left ac_simps)"], ["proof (state)\nthis:\n  insertion e (map_poly real_of_float (fst (tmf_polys (z # zs)))) =\n  (\\<Sum>i<length (z # zs). e 0 ^ i * real_of_float (mid ((z # zs) ! i)))\n\ngoal (1 subgoal):\n 1. insertion e (map_poly real_of_float (fst (tmf_polys []))) =\n    (\\<Sum>i<length []. e 0 ^ i * real_of_float (mid ([] ! i)))", "qed simp"], ["", "lemma Ipoly_snd_tmf_polys:\n  \"set_of (horner_eval (real_interval o centered o nth z) x (length z)) \\<subseteq> set_of (Ipoly [x] (map_poly real_interval (snd (tmf_polys z))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of\n     (horner_eval (real_interval \\<circ> centered \\<circ> (!) z) x\n       (length z))\n    \\<subseteq> set_of\n                 (Ipoly [x] (map_poly real_interval (snd (tmf_polys z))))", "proof (induction z)"], ["proof (state)\ngoal (2 subgoals):\n 1. set_of\n     (horner_eval (real_interval \\<circ> centered \\<circ> (!) []) x\n       (length []))\n    \\<subseteq> set_of\n                 (Ipoly [x] (map_poly real_interval (snd (tmf_polys []))))\n 2. \\<And>a z.\n       set_of\n        (horner_eval (real_interval \\<circ> centered \\<circ> (!) z) x\n          (length z))\n       \\<subseteq> set_of\n                    (Ipoly [x]\n                      (map_poly real_interval\n                        (snd (tmf_polys z)))) \\<Longrightarrow>\n       set_of\n        (horner_eval (real_interval \\<circ> centered \\<circ> (!) (a # z)) x\n          (length (a # z)))\n       \\<subseteq> set_of\n                    (Ipoly [x]\n                      (map_poly real_interval (snd (tmf_polys (a # z)))))", "case (Cons z zs)"], ["proof (state)\nthis:\n  set_of\n   (horner_eval (real_interval \\<circ> centered \\<circ> (!) zs) x\n     (length zs))\n  \\<subseteq> set_of\n               (Ipoly [x] (map_poly real_interval (snd (tmf_polys zs))))\n\ngoal (2 subgoals):\n 1. set_of\n     (horner_eval (real_interval \\<circ> centered \\<circ> (!) []) x\n       (length []))\n    \\<subseteq> set_of\n                 (Ipoly [x] (map_poly real_interval (snd (tmf_polys []))))\n 2. \\<And>a z.\n       set_of\n        (horner_eval (real_interval \\<circ> centered \\<circ> (!) z) x\n          (length z))\n       \\<subseteq> set_of\n                    (Ipoly [x]\n                      (map_poly real_interval\n                        (snd (tmf_polys z)))) \\<Longrightarrow>\n       set_of\n        (horner_eval (real_interval \\<circ> centered \\<circ> (!) (a # z)) x\n          (length (a # z)))\n       \\<subseteq> set_of\n                    (Ipoly [x]\n                      (map_poly real_interval (snd (tmf_polys (a # z)))))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of\n     (horner_eval (real_interval \\<circ> centered \\<circ> (!) (z # zs)) x\n       (length (z # zs)))\n    \\<subseteq> set_of\n                 (Ipoly [x]\n                   (map_poly real_interval (snd (tmf_polys (z # zs)))))", "using Cons[THEN set_of_mul_inc_right]"], ["proof (prove)\nusing this:\n  set_of\n   (?A *\n    horner_eval (real_interval \\<circ> centered \\<circ> (!) zs) x\n     (length zs))\n  \\<subseteq> set_of\n               (?A *\n                Ipoly [x] (map_poly real_interval (snd (tmf_polys zs))))\n\ngoal (1 subgoal):\n 1. set_of\n     (horner_eval (real_interval \\<circ> centered \\<circ> (!) (z # zs)) x\n       (length (z # zs)))\n    \\<subseteq> set_of\n                 (Ipoly [x]\n                   (map_poly real_interval (snd (tmf_polys (z # zs)))))", "unfolding list.size add_Suc_right sum.lessThan_Suc_shift"], ["proof (prove)\nusing this:\n  set_of\n   (?A *\n    horner_eval (real_interval \\<circ> centered \\<circ> (!) zs) x\n     (length zs))\n  \\<subseteq> set_of\n               (?A *\n                Ipoly [x] (map_poly real_interval (snd (tmf_polys zs))))\n\ngoal (1 subgoal):\n 1. set_of\n     (horner_eval (real_interval \\<circ> centered \\<circ> (!) (z # zs)) x\n       (Suc (length zs + 0)))\n    \\<subseteq> set_of\n                 (Ipoly [x]\n                   (map_poly real_interval (snd (tmf_polys (z # zs)))))", "by (auto simp: split_beta' Let_def nth_Cons sum_distrib_left ac_simps\n        elim!: plus_in_intervalE intro!: plus_in_intervalI)"], ["proof (state)\nthis:\n  set_of\n   (horner_eval (real_interval \\<circ> centered \\<circ> (!) (z # zs)) x\n     (length (z # zs)))\n  \\<subseteq> set_of\n               (Ipoly [x]\n                 (map_poly real_interval (snd (tmf_polys (z # zs)))))\n\ngoal (1 subgoal):\n 1. set_of\n     (horner_eval (real_interval \\<circ> centered \\<circ> (!) []) x\n       (length []))\n    \\<subseteq> set_of\n                 (Ipoly [x] (map_poly real_interval (snd (tmf_polys []))))", "qed (auto simp: real_interval_zero)"], ["", "lemma zero_interval[intro,simp]: \"0 \\<in>\\<^sub>i 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<in>\\<^sub>i 0", "by (simp add: set_of_eq)"], ["", "lemma sum_in_intervalI: \"sum f X \\<in>\\<^sub>i sum g X\" if \"\\<And>x. x \\<in> X \\<Longrightarrow> f x \\<in>\\<^sub>i g x\"\n  for f :: \"_ \\<Rightarrow> 'a :: ordered_comm_monoid_add\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f X \\<in>\\<^sub>i sum g X", "using that"], ["proof (prove)\nusing this:\n  ?x \\<in> X \\<Longrightarrow> f ?x \\<in>\\<^sub>i g ?x\n\ngoal (1 subgoal):\n 1. sum f X \\<in>\\<^sub>i sum g X", "proof (induction X rule: infinite_finite_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A;\n        \\<And>x. x \\<in> A \\<Longrightarrow> f x \\<in>\\<^sub>i g x\\<rbrakk>\n       \\<Longrightarrow> sum f A \\<in>\\<^sub>i sum g A\n 2. (\\<And>x.\n        x \\<in> {} \\<Longrightarrow>\n        f x \\<in>\\<^sub>i g x) \\<Longrightarrow>\n    sum f {} \\<in>\\<^sub>i sum g {}\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow>\n            f x \\<in>\\<^sub>i g x) \\<Longrightarrow>\n        sum f F \\<in>\\<^sub>i sum g F;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow>\n           f xa \\<in>\\<^sub>i g xa\\<rbrakk>\n       \\<Longrightarrow> sum f (insert x F) \\<in>\\<^sub>i sum g (insert x F)", "case (insert x F)"], ["proof (state)\nthis:\n  finite F\n  x \\<notin> F\n  (\\<And>x.\n      x \\<in> F \\<Longrightarrow> f x \\<in>\\<^sub>i g x) \\<Longrightarrow>\n  sum f F \\<in>\\<^sub>i sum g F\n  ?x \\<in> insert x F \\<Longrightarrow> f ?x \\<in>\\<^sub>i g ?x\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A;\n        \\<And>x. x \\<in> A \\<Longrightarrow> f x \\<in>\\<^sub>i g x\\<rbrakk>\n       \\<Longrightarrow> sum f A \\<in>\\<^sub>i sum g A\n 2. (\\<And>x.\n        x \\<in> {} \\<Longrightarrow>\n        f x \\<in>\\<^sub>i g x) \\<Longrightarrow>\n    sum f {} \\<in>\\<^sub>i sum g {}\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>x.\n            x \\<in> F \\<Longrightarrow>\n            f x \\<in>\\<^sub>i g x) \\<Longrightarrow>\n        sum f F \\<in>\\<^sub>i sum g F;\n        \\<And>xa.\n           xa \\<in> insert x F \\<Longrightarrow>\n           f xa \\<in>\\<^sub>i g xa\\<rbrakk>\n       \\<Longrightarrow> sum f (insert x F) \\<in>\\<^sub>i sum g (insert x F)", "then"], ["proof (chain)\npicking this:\n  finite F\n  x \\<notin> F\n  (\\<And>x.\n      x \\<in> F \\<Longrightarrow> f x \\<in>\\<^sub>i g x) \\<Longrightarrow>\n  sum f F \\<in>\\<^sub>i sum g F\n  ?x \\<in> insert x F \\<Longrightarrow> f ?x \\<in>\\<^sub>i g ?x", "show ?case"], ["proof (prove)\nusing this:\n  finite F\n  x \\<notin> F\n  (\\<And>x.\n      x \\<in> F \\<Longrightarrow> f x \\<in>\\<^sub>i g x) \\<Longrightarrow>\n  sum f F \\<in>\\<^sub>i sum g F\n  ?x \\<in> insert x F \\<Longrightarrow> f ?x \\<in>\\<^sub>i g ?x\n\ngoal (1 subgoal):\n 1. sum f (insert x F) \\<in>\\<^sub>i sum g (insert x F)", "by (auto intro!: plus_in_intervalI)"], ["proof (state)\nthis:\n  sum f (insert x F) \\<in>\\<^sub>i sum g (insert x F)\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A;\n        \\<And>x. x \\<in> A \\<Longrightarrow> f x \\<in>\\<^sub>i g x\\<rbrakk>\n       \\<Longrightarrow> sum f A \\<in>\\<^sub>i sum g A\n 2. (\\<And>x.\n        x \\<in> {} \\<Longrightarrow>\n        f x \\<in>\\<^sub>i g x) \\<Longrightarrow>\n    sum f {} \\<in>\\<^sub>i sum g {}", "qed simp_all"], ["", "lemma set_of_sum_subset: \"set_of (sum f X) \\<subseteq> set_of (sum g X)\"\n  if \"\\<And>x. x \\<in> X \\<Longrightarrow> set_of (f x) \\<subseteq> set_of (g x)\"\n  for f :: \"_\\<Rightarrow>'a::linordered_ab_group_add interval\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (sum f X) \\<subseteq> set_of (sum g X)", "using that"], ["proof (prove)\nusing this:\n  ?x \\<in> X \\<Longrightarrow> set_of (f ?x) \\<subseteq> set_of (g ?x)\n\ngoal (1 subgoal):\n 1. set_of (sum f X) \\<subseteq> set_of (sum g X)", "by (induction X rule: infinite_finite_induct) (simp_all add: set_of_add_inc)"], ["", "lemma interval_of_plus: \"interval_of (a + b) = interval_of a + interval_of b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interval_of (a + b) = interval_of a + interval_of b", "by (simp add: interval_eqI)"], ["", "lemma interval_of_uminus: \"interval_of (- a) = - interval_of a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interval_of (- a) = - interval_of a", "by (simp add: interval_eqI)"], ["", "lemma interval_of_zero: \"interval_of 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interval_of (0::'a) = 0", "by (simp add: interval_eqI)"], ["", "lemma interval_of_sum: \"interval_of (sum f X) = sum (\\<lambda>x. interval_of (f x)) X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interval_of (sum f X) = (\\<Sum>x\\<in>X. interval_of (f x))", "by (induction X rule: infinite_finite_induct) (auto simp: interval_of_plus interval_of_zero)"], ["", "lemma interval_of_prod: \"interval_of (a * b) = interval_of a * interval_of b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interval_of (a * b) = interval_of a * interval_of b", "by (simp add: lower_times upper_times interval_eqI)"], ["", "lemma in_set_of_interval_of[simp]: \"x \\<in>\\<^sub>i (interval_of y) \\<longleftrightarrow> x = y\" for x y::\"'a::order\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in>\\<^sub>i interval_of y) = (x = y)", "by (auto simp: set_of_eq)"], ["", "lemma real_interval_Ipoly: \"real_interval (Ipoly xs p) = Ipoly (map real_interval xs) (map_poly real_interval p)\"\n  if \"num_params p \\<le> length xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_interval (Ipoly xs p) =\n    Ipoly (map real_interval xs) (map_poly real_interval p)", "using that"], ["proof (prove)\nusing this:\n  num_params p \\<le> length xs\n\ngoal (1 subgoal):\n 1. real_interval (Ipoly xs p) =\n    Ipoly (map real_interval xs) (map_poly real_interval p)", "by (induction p)\n    (auto simp: real_interval_plus real_interval_minus real_interval_times\n      real_interval_uminus real_interval_power)"], ["", "lemma num_params_tmf_polys1: \"num_params (fst (tmf_polys z)) \\<le> Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (fst (tmf_polys z)) \\<le> Suc 0", "by (induction z) (auto simp: split_beta' Let_def)"], ["", "lemma num_params_tmf_polys2: \"num_params (snd (tmf_polys z)) \\<le> Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (snd (tmf_polys z)) \\<le> Suc 0", "by (induction z) (auto simp: split_beta' Let_def)"], ["", "lemma set_of_real_interval_subset: \"set_of (real_interval x) \\<subseteq> set_of (real_interval y)\"\n  if \"set_of x \\<subseteq> set_of y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (real_interval x) \\<subseteq> set_of (real_interval y)", "using that"], ["proof (prove)\nusing this:\n  set_of x \\<subseteq> set_of y\n\ngoal (1 subgoal):\n 1. set_of (real_interval x) \\<subseteq> set_of (real_interval y)", "by (auto simp: set_of_eq)"], ["", "theorem tm_floatarith:\n  assumes t: \"tm_floatarith prec ord I xs f = Some t\"\n  assumes a: \"xs all_in I\" and x: \"x \\<in>\\<^sub>r I ! 0\"\n  assumes xs_ne: \"xs \\<noteq> []\"\n  assumes deriv: \"\\<And>x. x \\<in>\\<^sub>r I ! 0 \\<Longrightarrow> isDERIV 0 f (xs[0 := x])\"\n  assumes \"\\<And>i. 0 < i \\<Longrightarrow> i < length xs \\<Longrightarrow> e i = real_of_float (xs ! i)\"\n  assumes diff_e: \"(x - real_of_float (xs ! 0)) = e 0\"\n  shows \"interpret_floatarith f (xs[0:=x]) \\<in>\\<^sub>i range_tm e t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "from xs_ne a"], ["proof (chain)\npicking this:\n  xs \\<noteq> []\n  map real_of_float xs all_in I", "have I_ne[simp]: \"I \\<noteq> []\""], ["proof (prove)\nusing this:\n  xs \\<noteq> []\n  map real_of_float xs all_in I\n\ngoal (1 subgoal):\n 1. I \\<noteq> []", "by auto"], ["proof (state)\nthis:\n  I \\<noteq> []\n\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "have xs'_in: \"xs[0 := x] all_in I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (map real_of_float xs)[0 := x] all_in I", "using a"], ["proof (prove)\nusing this:\n  map real_of_float xs all_in I\n\ngoal (1 subgoal):\n 1. (map real_of_float xs)[0 := x] all_in I", "by (auto simp: nth_list_update x)"], ["proof (state)\nthis:\n  (map real_of_float xs)[0 := x] all_in I\n\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "from t"], ["proof (chain)\npicking this:\n  tm_floatarith prec ord I xs f = Some t", "obtain z where z: \"tmf_ivl_cs prec ord I xs f = Some z\"\n    and tz: \"tm_poly t = fst (tmf_polys z)\"\n    and tb: \"tm_bound t = round_interval prec (Ipoly (List.map2 (-) I xs) (snd (tmf_polys z)))\""], ["proof (prove)\nusing this:\n  tm_floatarith prec ord I xs f = Some t\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>tmf_ivl_cs prec ord I xs f = Some z;\n         tm_poly t = fst (tmf_polys z);\n         tm_bound t =\n         round_interval prec\n          (Ipoly (map2 (-) I (map interval_of xs))\n            (snd (tmf_polys z)))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(1)"], ["proof (prove)\nusing this:\n  tm_floatarith prec ord I xs f = Some t\n  tm_floatarith prec ord I xs f = Some t\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>tmf_ivl_cs prec ord I xs f = Some z;\n         tm_poly t = fst (tmf_polys z);\n         tm_bound t =\n         round_interval prec\n          (Ipoly (map2 (-) I (map interval_of xs))\n            (snd (tmf_polys z)))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases t) (auto simp: those_eq_Some_iff split_beta' Let_def simp del: tmf_ivl_cs.simps)"], ["proof (state)\nthis:\n  tmf_ivl_cs prec ord I xs f = Some z\n  tm_poly t = fst (tmf_polys z)\n  tm_bound t =\n  round_interval prec\n   (Ipoly (map2 (-) I (map interval_of xs)) (snd (tmf_polys z)))\n\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "from tmf_ivl_cs_correct[OF a z(1)]"], ["proof (chain)\npicking this:\n  ?i < ord \\<Longrightarrow>\n  tmf_c prec (map interval_of xs) f ?i = Some (z ! ?i)\n  tmf_c prec I f ord = Some (z ! ord)\n  length z = Suc ord", "have z_less: \"i < ord \\<Longrightarrow> tmf_c prec (map interval_of xs) f i = Some (z ! i)\"\n    and lz: \"length z = Suc ord\" \"length z - 1 = ord\"\n    and z_ord: \"tmf_c prec I f ord = Some (z ! ord)\" for i"], ["proof (prove)\nusing this:\n  ?i < ord \\<Longrightarrow>\n  tmf_c prec (map interval_of xs) f ?i = Some (z ! ?i)\n  tmf_c prec I f ord = Some (z ! ord)\n  length z = Suc ord\n\ngoal (1 subgoal):\n 1. (i < ord \\<Longrightarrow>\n     tmf_c prec (map interval_of xs) f i = Some (z ! i)) &&&\n    (length z = Suc ord &&& length z - 1 = ord) &&&\n    tmf_c prec I f ord = Some (z ! ord)", "by auto"], ["proof (state)\nthis:\n  ?i < ord \\<Longrightarrow>\n  tmf_c prec (map interval_of xs) f ?i = Some (z ! ?i)\n  length z = Suc ord\n  length z - 1 = ord\n  tmf_c prec I f ord = Some (z ! ord)\n\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "have rewr: \"{..ord} = insert ord {..<ord}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {..ord} = insert ord {..<ord}", "by auto"], ["proof (state)\nthis:\n  {..ord} = insert ord {..<ord}\n\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "let ?diff = \"\\<lambda>(i::nat) (x::real). interpret_floatarith (deriv_rec f i) (xs[0:=x])\""], ["proof (state)\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "let ?c = \"real_of_float (xs ! 0)\""], ["proof (state)\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "let ?n = \"ord\""], ["proof (state)\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "let ?a = \"real_of_float (lower (I!0))\""], ["proof (state)\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "let ?b = \"real_of_float (upper (I!0))\""], ["proof (state)\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "let ?x = \"x::real\""], ["proof (state)\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "let ?f = \"\\<lambda>x::real. interpret_floatarith f (xs[0 := x])\""], ["proof (state)\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "have 2: \"?diff 0 = ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        interpret_floatarith (deriv_rec f 0)\n         ((map real_of_float xs)[0 := x])) =\n    (\\<lambda>x. interpret_floatarith f ((map real_of_float xs)[0 := x]))", "using \\<open>xs \\<noteq> []\\<close>"], ["proof (prove)\nusing this:\n  xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        interpret_floatarith (deriv_rec f 0)\n         ((map real_of_float xs)[0 := x])) =\n    (\\<lambda>x. interpret_floatarith f ((map real_of_float xs)[0 := x]))", "by (simp add: map_update)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      interpret_floatarith (deriv_rec f 0)\n       ((map real_of_float xs)[0 := x])) =\n  (\\<lambda>x. interpret_floatarith f ((map real_of_float xs)[0 := x]))\n\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "have 3: \"\\<forall>m t. m < ?n \\<and> ?a \\<le> t \\<and> t \\<le> ?b \\<longrightarrow> (?diff m has_real_derivative ?diff (Suc m) t) (at t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m t.\n       m < ord \\<and>\n       real_of_float (lower (I ! 0)) \\<le> t \\<and>\n       t \\<le> real_of_float (upper (I ! 0)) \\<longrightarrow>\n       ((\\<lambda>x.\n            interpret_floatarith (deriv_rec f m)\n             ((map real_of_float xs)[0 := x])) has_real_derivative\n        interpret_floatarith (deriv_rec f (Suc m))\n         ((map real_of_float xs)[0 := t]))\n        (at t)", "by (auto intro!: derivative_eq_intros deriv_rec_correct deriv simp: set_of_eq xs_ne)"], ["proof (state)\nthis:\n  \\<forall>m t.\n     m < ord \\<and>\n     real_of_float (lower (I ! 0)) \\<le> t \\<and>\n     t \\<le> real_of_float (upper (I ! 0)) \\<longrightarrow>\n     ((\\<lambda>x.\n          interpret_floatarith (deriv_rec f m)\n           ((map real_of_float xs)[0 := x])) has_real_derivative\n      interpret_floatarith (deriv_rec f (Suc m))\n       ((map real_of_float xs)[0 := t]))\n      (at t)\n\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "have 4: \"?a \\<le> ?c\" \"?c \\<le> ?b\"  \"?a \\<le> ?x\" \"?x \\<le> ?b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (real_of_float (lower (I ! 0)) \\<le> real_of_float (xs ! 0) &&&\n     real_of_float (xs ! 0) \\<le> real_of_float (upper (I ! 0))) &&&\n    real_of_float (lower (I ! 0)) \\<le> x &&&\n    x \\<le> real_of_float (upper (I ! 0))", "using a xs_ne x"], ["proof (prove)\nusing this:\n  map real_of_float xs all_in I\n  xs \\<noteq> []\n  x \\<in>\\<^sub>r I ! 0\n\ngoal (1 subgoal):\n 1. (real_of_float (lower (I ! 0)) \\<le> real_of_float (xs ! 0) &&&\n     real_of_float (xs ! 0) \\<le> real_of_float (upper (I ! 0))) &&&\n    real_of_float (lower (I ! 0)) \\<le> x &&&\n    x \\<le> real_of_float (upper (I ! 0))", "by (force simp: set_of_eq)+"], ["proof (state)\nthis:\n  real_of_float (lower (I ! 0)) \\<le> real_of_float (xs ! 0)\n  real_of_float (xs ! 0) \\<le> real_of_float (upper (I ! 0))\n  real_of_float (lower (I ! 0)) \\<le> x\n  x \\<le> real_of_float (upper (I ! 0))\n\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "define cr where \"cr \\<equiv> \\<lambda>s m. if m < ord then ?diff m ?c / fact m - mid (z ! m)\n                           else ?diff m s / fact ord - mid (z ! ord)\""], ["proof (state)\nthis:\n  cr \\<equiv>\n  \\<lambda>s m.\n     if m < ord\n     then interpret_floatarith (deriv_rec f m)\n           ((map real_of_float xs)[0 := real_of_float (xs ! 0)]) /\n          fact m -\n          real_of_float (mid (z ! m))\n     else interpret_floatarith (deriv_rec f m)\n           ((map real_of_float xs)[0 := s]) /\n          fact ord -\n          real_of_float (mid (z ! ord))\n\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "define ci where \"ci \\<equiv> \\<lambda>i. real_interval (z ! i) - interval_of (real_of_float (mid (z ! i)))\""], ["proof (state)\nthis:\n  ci \\<equiv>\n  \\<lambda>i.\n     real_interval (z ! i) - interval_of (real_of_float (mid (z ! i)))\n\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "have cr_ord: \"cr x ord \\<in>\\<^sub>i ci ord\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cr x ord \\<in>\\<^sub>i ci ord", "using tmf_c_correct[OF xs'_in z_ord]"], ["proof (prove)\nusing this:\n  interpret_floatarith (deriv_rec f ord) ((map real_of_float xs)[0 := x]) /\n  fact ord\n  \\<in>\\<^sub>r z ! ord\n\ngoal (1 subgoal):\n 1. cr x ord \\<in>\\<^sub>i ci ord", "by (auto simp: ci_def set_of_eq cr_def)"], ["proof (state)\nthis:\n  cr x ord \\<in>\\<^sub>i ci ord\n\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "have enclosure: \"(\\<Sum>m<ord. cr s m * (x - (xs ! 0)) ^ m) + cr s ord * (x - (xs ! 0)) ^ ord\n      \\<in>\\<^sub>r round_interval prec (Ipoly (List.map2 (-) I (map interval_of xs)) (snd (tmf_polys z)))\"\n    if cr_ord: \"cr s ord \\<in>\\<^sub>i ci ord\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n    cr s ord * (x - real_of_float (xs ! 0)) ^ ord\n    \\<in>\\<^sub>r round_interval prec\n                   (Ipoly (map2 (-) I (map interval_of xs))\n                     (snd (tmf_polys z)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n    cr s ord * (x - real_of_float (xs ! 0)) ^ ord\n    \\<in>\\<^sub>r round_interval prec\n                   (Ipoly (map2 (-) I (map interval_of xs))\n                     (snd (tmf_polys z)))", "have \"(\\<Sum>m<ord. cr s m  * (x - xs!0) ^ m) + cr s ord * (x - xs!0) ^ ord =\n        horner_eval (cr s) (x - xs!0) (Suc ord)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n    cr s ord * (x - real_of_float (xs ! 0)) ^ ord =\n    horner_eval (cr s) (x - real_of_float (xs ! 0)) (Suc ord)", "by (simp add: horner_eval_eq_setsum)"], ["proof (state)\nthis:\n  (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n  cr s ord * (x - real_of_float (xs ! 0)) ^ ord =\n  horner_eval (cr s) (x - real_of_float (xs ! 0)) (Suc ord)\n\ngoal (1 subgoal):\n 1. (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n    cr s ord * (x - real_of_float (xs ! 0)) ^ ord\n    \\<in>\\<^sub>r round_interval prec\n                   (Ipoly (map2 (-) I (map interval_of xs))\n                     (snd (tmf_polys z)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n  cr s ord * (x - real_of_float (xs ! 0)) ^ ord =\n  horner_eval (cr s) (x - real_of_float (xs ! 0)) (Suc ord)\n\ngoal (1 subgoal):\n 1. (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n    cr s ord * (x - real_of_float (xs ! 0)) ^ ord\n    \\<in>\\<^sub>r round_interval prec\n                   (Ipoly (map2 (-) I (map interval_of xs))\n                     (snd (tmf_polys z)))", "have \"\\<dots> \\<in>\\<^sub>i horner_eval ci (real_interval (I ! 0 - xs ! 0)) (Suc ord)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. horner_eval (cr s) (x - real_of_float (xs ! 0)) (Suc ord)\n    \\<in>\\<^sub>i horner_eval ci\n                   (real_interval (I ! 0 - interval_of (xs ! 0))) (Suc ord)", "proof (rule horner_eval_interval)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i. i < Suc ord \\<Longrightarrow> cr s i \\<in>\\<^sub>i ci i\n 2. x - real_of_float (xs ! 0) \\<in>\\<^sub>r I ! 0 - interval_of (xs ! 0)", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i. i < Suc ord \\<Longrightarrow> cr s i \\<in>\\<^sub>i ci i\n 2. x - real_of_float (xs ! 0) \\<in>\\<^sub>r I ! 0 - interval_of (xs ! 0)", "assume \"i < Suc ord\""], ["proof (state)\nthis:\n  i < Suc ord\n\ngoal (2 subgoals):\n 1. \\<And>i. i < Suc ord \\<Longrightarrow> cr s i \\<in>\\<^sub>i ci i\n 2. x - real_of_float (xs ! 0) \\<in>\\<^sub>r I ! 0 - interval_of (xs ! 0)", "then"], ["proof (chain)\npicking this:\n  i < Suc ord", "consider \"i < ord\" | \"i = ord\""], ["proof (prove)\nusing this:\n  i < Suc ord\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < ord \\<Longrightarrow> thesis;\n     i = ord \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by arith"], ["proof (state)\nthis:\n  \\<lbrakk>i < ord \\<Longrightarrow> ?thesis;\n   i = ord \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. \\<And>i. i < Suc ord \\<Longrightarrow> cr s i \\<in>\\<^sub>i ci i\n 2. x - real_of_float (xs ! 0) \\<in>\\<^sub>r I ! 0 - interval_of (xs ! 0)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>i < ord \\<Longrightarrow> ?thesis;\n   i = ord \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"cr s i \\<in>\\<^sub>i ci i\""], ["proof (prove)\nusing this:\n  \\<lbrakk>i < ord \\<Longrightarrow> ?thesis;\n   i = ord \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. cr s i \\<in>\\<^sub>i ci i", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. i < ord \\<Longrightarrow> cr s i \\<in>\\<^sub>i ci i\n 2. i = ord \\<Longrightarrow> cr s i \\<in>\\<^sub>i ci i", "case 1"], ["proof (state)\nthis:\n  i < ord\n\ngoal (2 subgoals):\n 1. i < ord \\<Longrightarrow> cr s i \\<in>\\<^sub>i ci i\n 2. i = ord \\<Longrightarrow> cr s i \\<in>\\<^sub>i ci i", "then"], ["proof (chain)\npicking this:\n  i < ord", "show ?thesis"], ["proof (prove)\nusing this:\n  i < ord\n\ngoal (1 subgoal):\n 1. cr s i \\<in>\\<^sub>i ci i", "by (auto simp: cr_def ci_def not_less less_Suc_eq_le\n              intro!: minus_in_intervalI tmf_c_correct[OF _ z_less])\n            (metis in_set_of_interval_of list_update_id map_update nth_map real_interval_of)"], ["proof (state)\nthis:\n  cr s i \\<in>\\<^sub>i ci i\n\ngoal (1 subgoal):\n 1. i = ord \\<Longrightarrow> cr s i \\<in>\\<^sub>i ci i", "qed (simp add: cr_ord)"], ["proof (state)\nthis:\n  cr s i \\<in>\\<^sub>i ci i\n\ngoal (1 subgoal):\n 1. x - real_of_float (xs ! 0) \\<in>\\<^sub>r I ! 0 - interval_of (xs ! 0)", "qed (auto intro!: minus_in_intervalI simp: real_interval_minus x)"], ["proof (state)\nthis:\n  horner_eval (cr s) (x - real_of_float (xs ! 0)) (Suc ord)\n  \\<in>\\<^sub>i horner_eval ci\n                 (real_interval (I ! 0 - interval_of (xs ! 0))) (Suc ord)\n\ngoal (1 subgoal):\n 1. (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n    cr s ord * (x - real_of_float (xs ! 0)) ^ ord\n    \\<in>\\<^sub>r round_interval prec\n                   (Ipoly (map2 (-) I (map interval_of xs))\n                     (snd (tmf_polys z)))", "also"], ["proof (state)\nthis:\n  horner_eval (cr s) (x - real_of_float (xs ! 0)) (Suc ord)\n  \\<in>\\<^sub>i horner_eval ci\n                 (real_interval (I ! 0 - interval_of (xs ! 0))) (Suc ord)\n\ngoal (1 subgoal):\n 1. (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n    cr s ord * (x - real_of_float (xs ! 0)) ^ ord\n    \\<in>\\<^sub>r round_interval prec\n                   (Ipoly (map2 (-) I (map interval_of xs))\n                     (snd (tmf_polys z)))", "have \"\\<dots> = set_of (horner_eval (real_interval o centered \\<circ> (!) z)\n      (real_interval (I ! 0 - xs ! 0)) (length z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of\n     (horner_eval ci (real_interval (I ! 0 - interval_of (xs ! 0)))\n       (Suc ord)) =\n    set_of\n     (horner_eval (real_interval \\<circ> centered \\<circ> (!) z)\n       (real_interval (I ! 0 - interval_of (xs ! 0))) (length z))", "by (auto simp: ci_def centered_def real_interval_minus real_interval_of lz)"], ["proof (state)\nthis:\n  set_of\n   (horner_eval ci (real_interval (I ! 0 - interval_of (xs ! 0)))\n     (Suc ord)) =\n  set_of\n   (horner_eval (real_interval \\<circ> centered \\<circ> (!) z)\n     (real_interval (I ! 0 - interval_of (xs ! 0))) (length z))\n\ngoal (1 subgoal):\n 1. (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n    cr s ord * (x - real_of_float (xs ! 0)) ^ ord\n    \\<in>\\<^sub>r round_interval prec\n                   (Ipoly (map2 (-) I (map interval_of xs))\n                     (snd (tmf_polys z)))", "also"], ["proof (state)\nthis:\n  set_of\n   (horner_eval ci (real_interval (I ! 0 - interval_of (xs ! 0)))\n     (Suc ord)) =\n  set_of\n   (horner_eval (real_interval \\<circ> centered \\<circ> (!) z)\n     (real_interval (I ! 0 - interval_of (xs ! 0))) (length z))\n\ngoal (1 subgoal):\n 1. (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n    cr s ord * (x - real_of_float (xs ! 0)) ^ ord\n    \\<in>\\<^sub>r round_interval prec\n                   (Ipoly (map2 (-) I (map interval_of xs))\n                     (snd (tmf_polys z)))", "have \"\\<dots> \\<subseteq> set_of (Ipoly [real_interval (I ! 0 - xs ! 0)]\n        (map_poly real_interval (snd (tmf_polys z))))\"\n      (is \"_ \\<subseteq> set_of ?x\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of\n     (horner_eval (real_interval \\<circ> centered \\<circ> (!) z)\n       (real_interval (I ! 0 - interval_of (xs ! 0))) (length z))\n    \\<subseteq> set_of\n                 (Ipoly [real_interval (I ! 0 - interval_of (xs ! 0))]\n                   (map_poly real_interval (snd (tmf_polys z))))", "by (rule Ipoly_snd_tmf_polys)"], ["proof (state)\nthis:\n  set_of\n   (horner_eval (real_interval \\<circ> centered \\<circ> (!) z)\n     (real_interval (I ! 0 - interval_of (xs ! 0))) (length z))\n  \\<subseteq> set_of\n               (Ipoly [real_interval (I ! 0 - interval_of (xs ! 0))]\n                 (map_poly real_interval (snd (tmf_polys z))))\n\ngoal (1 subgoal):\n 1. (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n    cr s ord * (x - real_of_float (xs ! 0)) ^ ord\n    \\<in>\\<^sub>r round_interval prec\n                   (Ipoly (map2 (-) I (map interval_of xs))\n                     (snd (tmf_polys z)))", "also"], ["proof (state)\nthis:\n  set_of\n   (horner_eval (real_interval \\<circ> centered \\<circ> (!) z)\n     (real_interval (I ! 0 - interval_of (xs ! 0))) (length z))\n  \\<subseteq> set_of\n               (Ipoly [real_interval (I ! 0 - interval_of (xs ! 0))]\n                 (map_poly real_interval (snd (tmf_polys z))))\n\ngoal (1 subgoal):\n 1. (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n    cr s ord * (x - real_of_float (xs ! 0)) ^ ord\n    \\<in>\\<^sub>r round_interval prec\n                   (Ipoly (map2 (-) I (map interval_of xs))\n                     (snd (tmf_polys z)))", "have \"\\<dots> = set_of (real_interval (Ipoly [(I ! 0 - xs ! 0)] (snd (tmf_polys z))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of\n     (Ipoly [real_interval (I ! 0 - interval_of (xs ! 0))]\n       (map_poly real_interval (snd (tmf_polys z)))) =\n    set_of\n     (real_interval\n       (Ipoly [I ! 0 - interval_of (xs ! 0)] (snd (tmf_polys z))))", "by (auto simp: real_interval_Ipoly num_params_tmf_polys2)"], ["proof (state)\nthis:\n  set_of\n   (Ipoly [real_interval (I ! 0 - interval_of (xs ! 0))]\n     (map_poly real_interval (snd (tmf_polys z)))) =\n  set_of\n   (real_interval\n     (Ipoly [I ! 0 - interval_of (xs ! 0)] (snd (tmf_polys z))))\n\ngoal (1 subgoal):\n 1. (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n    cr s ord * (x - real_of_float (xs ! 0)) ^ ord\n    \\<in>\\<^sub>r round_interval prec\n                   (Ipoly (map2 (-) I (map interval_of xs))\n                     (snd (tmf_polys z)))", "also"], ["proof (state)\nthis:\n  set_of\n   (Ipoly [real_interval (I ! 0 - interval_of (xs ! 0))]\n     (map_poly real_interval (snd (tmf_polys z)))) =\n  set_of\n   (real_interval\n     (Ipoly [I ! 0 - interval_of (xs ! 0)] (snd (tmf_polys z))))\n\ngoal (1 subgoal):\n 1. (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n    cr s ord * (x - real_of_float (xs ! 0)) ^ ord\n    \\<in>\\<^sub>r round_interval prec\n                   (Ipoly (map2 (-) I (map interval_of xs))\n                     (snd (tmf_polys z)))", "have \"\\<dots> \\<subseteq> set_of (real_interval (round_interval prec (Ipoly [(I ! 0 - xs ! 0)] (snd (tmf_polys z)))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of\n     (real_interval\n       (Ipoly [I ! 0 - interval_of (xs ! 0)] (snd (tmf_polys z))))\n    \\<subseteq> set_of\n                 (real_interval\n                   (round_interval prec\n                     (Ipoly [I ! 0 - interval_of (xs ! 0)]\n                       (snd (tmf_polys z)))))", "by (rule set_of_real_interval_subset) (rule round_ivl_correct)"], ["proof (state)\nthis:\n  set_of\n   (real_interval\n     (Ipoly [I ! 0 - interval_of (xs ! 0)] (snd (tmf_polys z))))\n  \\<subseteq> set_of\n               (real_interval\n                 (round_interval prec\n                   (Ipoly [I ! 0 - interval_of (xs ! 0)]\n                     (snd (tmf_polys z)))))\n\ngoal (1 subgoal):\n 1. (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n    cr s ord * (x - real_of_float (xs ! 0)) ^ ord\n    \\<in>\\<^sub>r round_interval prec\n                   (Ipoly (map2 (-) I (map interval_of xs))\n                     (snd (tmf_polys z)))", "also"], ["proof (state)\nthis:\n  set_of\n   (real_interval\n     (Ipoly [I ! 0 - interval_of (xs ! 0)] (snd (tmf_polys z))))\n  \\<subseteq> set_of\n               (real_interval\n                 (round_interval prec\n                   (Ipoly [I ! 0 - interval_of (xs ! 0)]\n                     (snd (tmf_polys z)))))\n\ngoal (1 subgoal):\n 1. (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n    cr s ord * (x - real_of_float (xs ! 0)) ^ ord\n    \\<in>\\<^sub>r round_interval prec\n                   (Ipoly (map2 (-) I (map interval_of xs))\n                     (snd (tmf_polys z)))", "have \"Ipoly [I ! 0 - interval_of (xs ! 0)] (snd (tmf_polys z)) = Ipoly (List.map2 (-) I (map interval_of xs)) (snd (tmf_polys z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly [I ! 0 - interval_of (xs ! 0)] (snd (tmf_polys z)) =\n    Ipoly (map2 (-) I (map interval_of xs)) (snd (tmf_polys z))", "using  a"], ["proof (prove)\nusing this:\n  map real_of_float xs all_in I\n\ngoal (1 subgoal):\n 1. Ipoly [I ! 0 - interval_of (xs ! 0)] (snd (tmf_polys z)) =\n    Ipoly (map2 (-) I (map interval_of xs)) (snd (tmf_polys z))", "apply (auto intro!: Ipoly_num_params_cong nth_equalityI\n          simp: nth_Cons  simp del:length_greater_0_conv split: nat.splits dest!: less_le_trans[OF _ num_params_tmf_polys2[of z]])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs = length I;\n     \\<forall>i<length I.\n        real_of_float (xs ! i) \\<in>\\<^sub>r I ! i\\<rbrakk>\n    \\<Longrightarrow> I ! 0 - interval_of (xs ! 0) =\n                      map2 (-) I (map interval_of xs) ! 0", "apply (subst map2_nth)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>length xs = length I;\n     \\<forall>i<length I.\n        real_of_float (xs ! i) \\<in>\\<^sub>r I ! i\\<rbrakk>\n    \\<Longrightarrow> 0 < length I\n 2. \\<lbrakk>length xs = length I;\n     \\<forall>i<length I.\n        real_of_float (xs ! i) \\<in>\\<^sub>r I ! i\\<rbrakk>\n    \\<Longrightarrow> 0 < length (map interval_of xs)\n 3. \\<lbrakk>length xs = length I;\n     \\<forall>i<length I.\n        real_of_float (xs ! i) \\<in>\\<^sub>r I ! i\\<rbrakk>\n    \\<Longrightarrow> I ! 0 - interval_of (xs ! 0) =\n                      I ! 0 - map interval_of xs ! 0", "by simp_all"], ["proof (state)\nthis:\n  Ipoly [I ! 0 - interval_of (xs ! 0)] (snd (tmf_polys z)) =\n  Ipoly (map2 (-) I (map interval_of xs)) (snd (tmf_polys z))\n\ngoal (1 subgoal):\n 1. (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n    cr s ord * (x - real_of_float (xs ! 0)) ^ ord\n    \\<in>\\<^sub>r round_interval prec\n                   (Ipoly (map2 (-) I (map interval_of xs))\n                     (snd (tmf_polys z)))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n  cr s ord * (x - real_of_float (xs ! 0)) ^ ord\n  \\<in>\\<^sub>r round_interval prec\n                 (Ipoly (map2 (-) I (map interval_of xs))\n                   (snd (tmf_polys z)))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n  cr s ord * (x - real_of_float (xs ! 0)) ^ ord\n  \\<in>\\<^sub>r round_interval prec\n                 (Ipoly (map2 (-) I (map interval_of xs))\n                   (snd (tmf_polys z)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n    cr s ord * (x - real_of_float (xs ! 0)) ^ ord\n    \\<in>\\<^sub>r round_interval prec\n                   (Ipoly (map2 (-) I (map interval_of xs))\n                     (snd (tmf_polys z)))", "."], ["proof (state)\nthis:\n  (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n  cr s ord * (x - real_of_float (xs ! 0)) ^ ord\n  \\<in>\\<^sub>r round_interval prec\n                 (Ipoly (map2 (-) I (map interval_of xs))\n                   (snd (tmf_polys z)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cr ?s ord \\<in>\\<^sub>i ci ord \\<Longrightarrow>\n  (\\<Sum>m<ord. cr ?s m * (x - real_of_float (xs ! 0)) ^ m) +\n  cr ?s ord * (x - real_of_float (xs ! 0)) ^ ord\n  \\<in>\\<^sub>r round_interval prec\n                 (Ipoly (map2 (-) I (map interval_of xs))\n                   (snd (tmf_polys z)))\n\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "consider \"0 < ord\" \"x \\<noteq> xs ! 0\" | \"0 < ord\" \"x = xs ! 0\" | \"ord = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>0 < ord; x \\<noteq> real_of_float (xs ! 0)\\<rbrakk>\n             \\<Longrightarrow> thesis;\n     \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n     \\<Longrightarrow> thesis;\n     ord = 0 \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by arith"], ["proof (state)\nthis:\n  \\<lbrakk>\\<lbrakk>0 < ord; x \\<noteq> real_of_float (xs ! 0)\\<rbrakk>\n           \\<Longrightarrow> ?thesis;\n   \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n   \\<Longrightarrow> ?thesis;\n   ord = 0 \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<lbrakk>0 < ord; x \\<noteq> real_of_float (xs ! 0)\\<rbrakk>\n           \\<Longrightarrow> ?thesis;\n   \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n   \\<Longrightarrow> ?thesis;\n   ord = 0 \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<lbrakk>0 < ord; x \\<noteq> real_of_float (xs ! 0)\\<rbrakk>\n           \\<Longrightarrow> ?thesis;\n   \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n   \\<Longrightarrow> ?thesis;\n   ord = 0 \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>0 < ord; x \\<noteq> real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 2. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 3. ord = 0 \\<Longrightarrow>\n    interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "case hyps: 1"], ["proof (state)\nthis:\n  0 < ord\n  x \\<noteq> real_of_float (xs ! 0)\n\ngoal (3 subgoals):\n 1. \\<lbrakk>0 < ord; x \\<noteq> real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 2. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 3. ord = 0 \\<Longrightarrow>\n    interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "then"], ["proof (chain)\npicking this:\n  0 < ord\n  x \\<noteq> real_of_float (xs ! 0)", "have 1: \"0 < ord\" and 5: \"x \\<noteq> xs ! 0\""], ["proof (prove)\nusing this:\n  0 < ord\n  x \\<noteq> real_of_float (xs ! 0)\n\ngoal (1 subgoal):\n 1. 0 < ord &&& x \\<noteq> real_of_float (xs ! 0)", "by simp_all"], ["proof (state)\nthis:\n  0 < ord\n  x \\<noteq> real_of_float (xs ! 0)\n\ngoal (3 subgoals):\n 1. \\<lbrakk>0 < ord; x \\<noteq> real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 2. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 3. ord = 0 \\<Longrightarrow>\n    interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "from Taylor[OF 1 2 3 4 5]"], ["proof (chain)\npicking this:\n  \\<exists>t.\n     (if x < real_of_float (xs ! 0)\n      then x < t \\<and> t < real_of_float (xs ! 0)\n      else real_of_float (xs ! 0) < t \\<and> t < x) \\<and>\n     interpret_floatarith f ((map real_of_float xs)[0 := x]) =\n     (\\<Sum>m<ord.\n         interpret_floatarith (deriv_rec f m)\n          ((map real_of_float xs)[0 := real_of_float (xs ! 0)]) /\n         fact m *\n         (x - real_of_float (xs ! 0)) ^ m) +\n     interpret_floatarith (deriv_rec f ord)\n      ((map real_of_float xs)[0 := t]) /\n     fact ord *\n     (x - real_of_float (xs ! 0)) ^ ord", "obtain s where s: \"(if ?x < ?c then ?x < s \\<and> s < ?c else ?c < s \\<and> s < ?x)\"\n      and tse: \"?f ?x = (\\<Sum>m<?n. ?diff m ?c / fact m * (?x - ?c) ^ m) + ?diff ?n s / fact ?n * (?x - ?c) ^ ?n\""], ["proof (prove)\nusing this:\n  \\<exists>t.\n     (if x < real_of_float (xs ! 0)\n      then x < t \\<and> t < real_of_float (xs ! 0)\n      else real_of_float (xs ! 0) < t \\<and> t < x) \\<and>\n     interpret_floatarith f ((map real_of_float xs)[0 := x]) =\n     (\\<Sum>m<ord.\n         interpret_floatarith (deriv_rec f m)\n          ((map real_of_float xs)[0 := real_of_float (xs ! 0)]) /\n         fact m *\n         (x - real_of_float (xs ! 0)) ^ m) +\n     interpret_floatarith (deriv_rec f ord)\n      ((map real_of_float xs)[0 := t]) /\n     fact ord *\n     (x - real_of_float (xs ! 0)) ^ ord\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>if x < real_of_float (xs ! 0)\n                 then x < s \\<and> s < real_of_float (xs ! 0)\n                 else real_of_float (xs ! 0) < s \\<and> s < x;\n         interpret_floatarith f ((map real_of_float xs)[0 := x]) =\n         (\\<Sum>m<ord.\n             interpret_floatarith (deriv_rec f m)\n              ((map real_of_float xs)[0 := real_of_float (xs ! 0)]) /\n             fact m *\n             (x - real_of_float (xs ! 0)) ^ m) +\n         interpret_floatarith (deriv_rec f ord)\n          ((map real_of_float xs)[0 := s]) /\n         fact ord *\n         (x - real_of_float (xs ! 0)) ^ ord\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  if x < real_of_float (xs ! 0) then x < s \\<and> s < real_of_float (xs ! 0)\n  else real_of_float (xs ! 0) < s \\<and> s < x\n  interpret_floatarith f ((map real_of_float xs)[0 := x]) =\n  (\\<Sum>m<ord.\n      interpret_floatarith (deriv_rec f m)\n       ((map real_of_float xs)[0 := real_of_float (xs ! 0)]) /\n      fact m *\n      (x - real_of_float (xs ! 0)) ^ m) +\n  interpret_floatarith (deriv_rec f ord) ((map real_of_float xs)[0 := s]) /\n  fact ord *\n  (x - real_of_float (xs ! 0)) ^ ord\n\ngoal (3 subgoals):\n 1. \\<lbrakk>0 < ord; x \\<noteq> real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 2. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 3. ord = 0 \\<Longrightarrow>\n    interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "have \"interpret_floatarith f ((map real_of_float xs)[0 := x]) -\n    Ipoly (List.map2 (-) [x] [xs!0]) (fst (tmf_polys z)) =\n    (\\<Sum>m<?n. ?diff m ?c / fact m * (?x - ?c) ^ m) + ?diff ?n s / fact ?n * (?x - ?c) ^ ?n -\n    (\\<Sum>m\\<le>?n. (x - xs!0) ^ m * mid (z ! m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x]) -\n    Ipoly (map2 (-) [x] (map real_of_float [xs ! 0]))\n     (map_poly real_of_float (fst (tmf_polys z))) =\n    (\\<Sum>m<ord.\n        interpret_floatarith (deriv_rec f m)\n         ((map real_of_float xs)[0 := real_of_float (xs ! 0)]) /\n        fact m *\n        (x - real_of_float (xs ! 0)) ^ m) +\n    interpret_floatarith (deriv_rec f ord)\n     ((map real_of_float xs)[0 := s]) /\n    fact ord *\n    (x - real_of_float (xs ! 0)) ^ ord -\n    (\\<Sum>m\\<le>ord.\n        (x - real_of_float (xs ! 0)) ^ m * real_of_float (mid (z ! m)))", "unfolding tse"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m<ord.\n        interpret_floatarith (deriv_rec f m)\n         ((map real_of_float xs)[0 := real_of_float (xs ! 0)]) /\n        fact m *\n        (x - real_of_float (xs ! 0)) ^ m) +\n    interpret_floatarith (deriv_rec f ord)\n     ((map real_of_float xs)[0 := s]) /\n    fact ord *\n    (x - real_of_float (xs ! 0)) ^ ord -\n    Ipoly (map2 (-) [x] (map real_of_float [xs ! 0]))\n     (map_poly real_of_float (fst (tmf_polys z))) =\n    (\\<Sum>m<ord.\n        interpret_floatarith (deriv_rec f m)\n         ((map real_of_float xs)[0 := real_of_float (xs ! 0)]) /\n        fact m *\n        (x - real_of_float (xs ! 0)) ^ m) +\n    interpret_floatarith (deriv_rec f ord)\n     ((map real_of_float xs)[0 := s]) /\n    fact ord *\n    (x - real_of_float (xs ! 0)) ^ ord -\n    (\\<Sum>m\\<le>ord.\n        (x - real_of_float (xs ! 0)) ^ m * real_of_float (mid (z ! m)))", "by (simp add: Ipoly_fst_tmf_polys rewr lz)"], ["proof (state)\nthis:\n  interpret_floatarith f ((map real_of_float xs)[0 := x]) -\n  Ipoly (map2 (-) [x] (map real_of_float [xs ! 0]))\n   (map_poly real_of_float (fst (tmf_polys z))) =\n  (\\<Sum>m<ord.\n      interpret_floatarith (deriv_rec f m)\n       ((map real_of_float xs)[0 := real_of_float (xs ! 0)]) /\n      fact m *\n      (x - real_of_float (xs ! 0)) ^ m) +\n  interpret_floatarith (deriv_rec f ord) ((map real_of_float xs)[0 := s]) /\n  fact ord *\n  (x - real_of_float (xs ! 0)) ^ ord -\n  (\\<Sum>m\\<le>ord.\n      (x - real_of_float (xs ! 0)) ^ m * real_of_float (mid (z ! m)))\n\ngoal (3 subgoals):\n 1. \\<lbrakk>0 < ord; x \\<noteq> real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 2. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 3. ord = 0 \\<Longrightarrow>\n    interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "also"], ["proof (state)\nthis:\n  interpret_floatarith f ((map real_of_float xs)[0 := x]) -\n  Ipoly (map2 (-) [x] (map real_of_float [xs ! 0]))\n   (map_poly real_of_float (fst (tmf_polys z))) =\n  (\\<Sum>m<ord.\n      interpret_floatarith (deriv_rec f m)\n       ((map real_of_float xs)[0 := real_of_float (xs ! 0)]) /\n      fact m *\n      (x - real_of_float (xs ! 0)) ^ m) +\n  interpret_floatarith (deriv_rec f ord) ((map real_of_float xs)[0 := s]) /\n  fact ord *\n  (x - real_of_float (xs ! 0)) ^ ord -\n  (\\<Sum>m\\<le>ord.\n      (x - real_of_float (xs ! 0)) ^ m * real_of_float (mid (z ! m)))\n\ngoal (3 subgoals):\n 1. \\<lbrakk>0 < ord; x \\<noteq> real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 2. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 3. ord = 0 \\<Longrightarrow>\n    interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "have \"\\<dots> = (\\<Sum>m<ord. cr s m  * (x - xs!0) ^ m) + cr s ord * (x - xs!0) ^ ord\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m<ord.\n        interpret_floatarith (deriv_rec f m)\n         ((map real_of_float xs)[0 := real_of_float (xs ! 0)]) /\n        fact m *\n        (x - real_of_float (xs ! 0)) ^ m) +\n    interpret_floatarith (deriv_rec f ord)\n     ((map real_of_float xs)[0 := s]) /\n    fact ord *\n    (x - real_of_float (xs ! 0)) ^ ord -\n    (\\<Sum>m\\<le>ord.\n        (x - real_of_float (xs ! 0)) ^ m * real_of_float (mid (z ! m))) =\n    (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n    cr s ord * (x - real_of_float (xs ! 0)) ^ ord", "unfolding rewr"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>m<ord.\n        interpret_floatarith (deriv_rec f m)\n         ((map real_of_float xs)[0 := real_of_float (xs ! 0)]) /\n        fact m *\n        (x - real_of_float (xs ! 0)) ^ m) +\n    interpret_floatarith (deriv_rec f ord)\n     ((map real_of_float xs)[0 := s]) /\n    fact ord *\n    (x - real_of_float (xs ! 0)) ^ ord -\n    (\\<Sum>m\\<in>insert ord {..<ord}.\n       (x - real_of_float (xs ! 0)) ^ m * real_of_float (mid (z ! m))) =\n    (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n    cr s ord * (x - real_of_float (xs ! 0)) ^ ord", "by (simp add: algebra_simps cr_def sum.distrib sum_subtractf)"], ["proof (state)\nthis:\n  (\\<Sum>m<ord.\n      interpret_floatarith (deriv_rec f m)\n       ((map real_of_float xs)[0 := real_of_float (xs ! 0)]) /\n      fact m *\n      (x - real_of_float (xs ! 0)) ^ m) +\n  interpret_floatarith (deriv_rec f ord) ((map real_of_float xs)[0 := s]) /\n  fact ord *\n  (x - real_of_float (xs ! 0)) ^ ord -\n  (\\<Sum>m\\<le>ord.\n      (x - real_of_float (xs ! 0)) ^ m * real_of_float (mid (z ! m))) =\n  (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n  cr s ord * (x - real_of_float (xs ! 0)) ^ ord\n\ngoal (3 subgoals):\n 1. \\<lbrakk>0 < ord; x \\<noteq> real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 2. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 3. ord = 0 \\<Longrightarrow>\n    interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "also"], ["proof (state)\nthis:\n  (\\<Sum>m<ord.\n      interpret_floatarith (deriv_rec f m)\n       ((map real_of_float xs)[0 := real_of_float (xs ! 0)]) /\n      fact m *\n      (x - real_of_float (xs ! 0)) ^ m) +\n  interpret_floatarith (deriv_rec f ord) ((map real_of_float xs)[0 := s]) /\n  fact ord *\n  (x - real_of_float (xs ! 0)) ^ ord -\n  (\\<Sum>m\\<le>ord.\n      (x - real_of_float (xs ! 0)) ^ m * real_of_float (mid (z ! m))) =\n  (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n  cr s ord * (x - real_of_float (xs ! 0)) ^ ord\n\ngoal (3 subgoals):\n 1. \\<lbrakk>0 < ord; x \\<noteq> real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 2. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 3. ord = 0 \\<Longrightarrow>\n    interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "have \"cr s ord \\<in>\\<^sub>i ci ord\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cr s ord \\<in>\\<^sub>i ci ord", "using a"], ["proof (prove)\nusing this:\n  map real_of_float xs all_in I\n\ngoal (1 subgoal):\n 1. cr s ord \\<in>\\<^sub>i ci ord", "apply (auto simp: cr_def ci_def intro!: minus_in_intervalI\n          tmf_c_correct[OF _ z_ord])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>length xs = length I;\n        \\<forall>i<length I. real_of_float (xs ! i) \\<in>\\<^sub>r I ! i;\n        i < length I\\<rbrakk>\n       \\<Longrightarrow> (map real_of_float xs)[0 := s] ! i\n                         \\<in>\\<^sub>r I ! i", "by (smt \"4\"(1) \"4\"(2) \"4\"(3) \"4\"(4) a all_in_def in_real_intervalI length_greater_0_conv nth_list_update s xs_ne)"], ["proof (state)\nthis:\n  cr s ord \\<in>\\<^sub>i ci ord\n\ngoal (3 subgoals):\n 1. \\<lbrakk>0 < ord; x \\<noteq> real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 2. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 3. ord = 0 \\<Longrightarrow>\n    interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "note enclosure[OF this]"], ["proof (state)\nthis:\n  (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n  cr s ord * (x - real_of_float (xs ! 0)) ^ ord\n  \\<in>\\<^sub>r round_interval prec\n                 (Ipoly (map2 (-) I (map interval_of xs))\n                   (snd (tmf_polys z)))\n\ngoal (3 subgoals):\n 1. \\<lbrakk>0 < ord; x \\<noteq> real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 2. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 3. ord = 0 \\<Longrightarrow>\n    interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "also"], ["proof (state)\nthis:\n  (\\<Sum>m<ord. cr s m * (x - real_of_float (xs ! 0)) ^ m) +\n  cr s ord * (x - real_of_float (xs ! 0)) ^ ord\n  \\<in>\\<^sub>r round_interval prec\n                 (Ipoly (map2 (-) I (map interval_of xs))\n                   (snd (tmf_polys z)))\n\ngoal (3 subgoals):\n 1. \\<lbrakk>0 < ord; x \\<noteq> real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 2. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 3. ord = 0 \\<Longrightarrow>\n    interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "have \"Ipoly (List.map2 (-) [x] (map real_of_float [xs ! 0])) (map_poly real_of_float (fst (tmf_polys z))) =\n        insertion e (map_poly real_of_float (fst (tmf_polys z)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly (map2 (-) [x] (map real_of_float [xs ! 0]))\n     (map_poly real_of_float (fst (tmf_polys z))) =\n    insertion e (map_poly real_of_float (fst (tmf_polys z)))", "using diff_e"], ["proof (prove)\nusing this:\n  x - real_of_float (xs ! 0) = e 0\n\ngoal (1 subgoal):\n 1. Ipoly (map2 (-) [x] (map real_of_float [xs ! 0]))\n     (map_poly real_of_float (fst (tmf_polys z))) =\n    insertion e (map_poly real_of_float (fst (tmf_polys z)))", "by (auto intro!: Ipoly_eq_insertionI simp: nth_Cons split: nat.splits dest: less_le_trans[OF _ num_params_tmf_polys1[of z]])"], ["proof (state)\nthis:\n  Ipoly (map2 (-) [x] (map real_of_float [xs ! 0]))\n   (map_poly real_of_float (fst (tmf_polys z))) =\n  insertion e (map_poly real_of_float (fst (tmf_polys z)))\n\ngoal (3 subgoals):\n 1. \\<lbrakk>0 < ord; x \\<noteq> real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 2. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 3. ord = 0 \\<Longrightarrow>\n    interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "finally"], ["proof (chain)\npicking this:\n  interpret_floatarith f ((map real_of_float xs)[0 := x]) -\n  insertion e (map_poly real_of_float (fst (tmf_polys z)))\n  \\<in>\\<^sub>r round_interval prec\n                 (Ipoly (map2 (-) I (map interval_of xs))\n                   (snd (tmf_polys z)))", "show ?thesis"], ["proof (prove)\nusing this:\n  interpret_floatarith f ((map real_of_float xs)[0 := x]) -\n  insertion e (map_poly real_of_float (fst (tmf_polys z)))\n  \\<in>\\<^sub>r round_interval prec\n                 (Ipoly (map2 (-) I (map interval_of xs))\n                   (snd (tmf_polys z)))\n\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "by (simp add: tz tb range_tm_def set_of_eq)"], ["proof (state)\nthis:\n  interpret_floatarith f ((map real_of_float xs)[0 := x])\n  \\<in>\\<^sub>i range_tm e t\n\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 2. ord = 0 \\<Longrightarrow>\n    interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 2. ord = 0 \\<Longrightarrow>\n    interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "case 3"], ["proof (state)\nthis:\n  ord = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 2. ord = 0 \\<Longrightarrow>\n    interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "with 3"], ["proof (chain)\npicking this:\n  ord = 0\n  ord = 0", "have \"length z = Suc 0\""], ["proof (prove)\nusing this:\n  ord = 0\n  ord = 0\n\ngoal (1 subgoal):\n 1. length z = Suc 0", "by (simp add: lz)"], ["proof (state)\nthis:\n  length z = Suc 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 2. ord = 0 \\<Longrightarrow>\n    interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "then"], ["proof (chain)\npicking this:\n  length z = Suc 0", "have \"fst (tmf_polys z) = fst (tmf_polys [z ! 0])\""], ["proof (prove)\nusing this:\n  length z = Suc 0\n\ngoal (1 subgoal):\n 1. fst (tmf_polys z) = fst (tmf_polys [z ! 0])", "by (cases z) auto"], ["proof (state)\nthis:\n  fst (tmf_polys z) = fst (tmf_polys [z ! 0])\n\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 2. ord = 0 \\<Longrightarrow>\n    interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "also"], ["proof (state)\nthis:\n  fst (tmf_polys z) = fst (tmf_polys [z ! 0])\n\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 2. ord = 0 \\<Longrightarrow>\n    interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "have \"\\<dots> = CN (mid (z ! 0))\\<^sub>p 0 0\\<^sub>p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (tmf_polys [z ! 0]) = CN (mid (z ! 0))\\<^sub>p 0 0\\<^sub>p", "by simp"], ["proof (state)\nthis:\n  fst (tmf_polys [z ! 0]) = CN (mid (z ! 0))\\<^sub>p 0 0\\<^sub>p\n\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 2. ord = 0 \\<Longrightarrow>\n    interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "finally"], ["proof (chain)\npicking this:\n  fst (tmf_polys z) = CN (mid (z ! 0))\\<^sub>p 0 0\\<^sub>p", "have \"fst (tmf_polys z) = CN (mid (z ! 0))\\<^sub>p 0 0\\<^sub>p\""], ["proof (prove)\nusing this:\n  fst (tmf_polys z) = CN (mid (z ! 0))\\<^sub>p 0 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. fst (tmf_polys z) = CN (mid (z ! 0))\\<^sub>p 0 0\\<^sub>p", "."], ["proof (state)\nthis:\n  fst (tmf_polys z) = CN (mid (z ! 0))\\<^sub>p 0 0\\<^sub>p\n\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t\n 2. ord = 0 \\<Longrightarrow>\n    interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "with enclosure[OF cr_ord]"], ["proof (chain)\npicking this:\n  (\\<Sum>m<ord. cr x m * (x - real_of_float (xs ! 0)) ^ m) +\n  cr x ord * (x - real_of_float (xs ! 0)) ^ ord\n  \\<in>\\<^sub>r round_interval prec\n                 (Ipoly (map2 (-) I (map interval_of xs))\n                   (snd (tmf_polys z)))\n  fst (tmf_polys z) = CN (mid (z ! 0))\\<^sub>p 0 0\\<^sub>p", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>m<ord. cr x m * (x - real_of_float (xs ! 0)) ^ m) +\n  cr x ord * (x - real_of_float (xs ! 0)) ^ ord\n  \\<in>\\<^sub>r round_interval prec\n                 (Ipoly (map2 (-) I (map interval_of xs))\n                   (snd (tmf_polys z)))\n  fst (tmf_polys z) = CN (mid (z ! 0))\\<^sub>p 0 0\\<^sub>p\n\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "by (simp add: cr_def 3 range_tm_def tz tb set_of_eq)"], ["proof (state)\nthis:\n  interpret_floatarith f ((map real_of_float xs)[0 := x])\n  \\<in>\\<^sub>i range_tm e t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t", "case 2"], ["proof (state)\nthis:\n  0 < ord\n  x = real_of_float (xs ! 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t", "have rewr: \"{..<length z} = insert 0 {1..<length z}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {..<length z} = insert 0 {1..<length z}", "by (auto simp: lz)"], ["proof (state)\nthis:\n  {..<length z} = insert 0 {1..<length z}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < ord; x = real_of_float (xs ! 0)\\<rbrakk>\n    \\<Longrightarrow> interpret_floatarith f\n                       ((map real_of_float xs)[0 := x])\n                      \\<in>\\<^sub>i range_tm e t", "from 2 enclosure[OF cr_ord]"], ["proof (chain)\npicking this:\n  0 < ord\n  x = real_of_float (xs ! 0)\n  (\\<Sum>m<ord. cr x m * (x - real_of_float (xs ! 0)) ^ m) +\n  cr x ord * (x - real_of_float (xs ! 0)) ^ ord\n  \\<in>\\<^sub>r round_interval prec\n                 (Ipoly (map2 (-) I (map interval_of xs))\n                   (snd (tmf_polys z)))", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < ord\n  x = real_of_float (xs ! 0)\n  (\\<Sum>m<ord. cr x m * (x - real_of_float (xs ! 0)) ^ m) +\n  cr x ord * (x - real_of_float (xs ! 0)) ^ ord\n  \\<in>\\<^sub>r round_interval prec\n                 (Ipoly (map2 (-) I (map interval_of xs))\n                   (snd (tmf_polys z)))\n\ngoal (1 subgoal):\n 1. interpret_floatarith f ((map real_of_float xs)[0 := x])\n    \\<in>\\<^sub>i range_tm e t", "by (auto simp: zero_power 2 cr_def range_tm_def tz tb insertion_fst_tmf_polys\n          diff_e[symmetric] rewr set_of_eq)"], ["proof (state)\nthis:\n  interpret_floatarith f ((map real_of_float xs)[0 := x])\n  \\<in>\\<^sub>i range_tm e t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  interpret_floatarith f ((map real_of_float xs)[0 := x])\n  \\<in>\\<^sub>i range_tm e t\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Operations on Taylor models\\<close>"], ["", "fun tm_norm_poly :: \"taylor_model \\<Rightarrow> taylor_model\"\n  where \"tm_norm_poly (TaylorModel p e) = TaylorModel (polynate p) e\"\n\\<comment> \\<open>Normalizes the Taylor model by transforming its polynomial into horner form.\\<close>"], ["", "fun tm_lower_order tm_lower_order_of_normed :: \"nat \\<Rightarrow> nat \\<Rightarrow> float interval list \\<Rightarrow> float interval list \\<Rightarrow> taylor_model \\<Rightarrow> taylor_model\"\n  where \"tm_lower_order prec ord I a t = tm_lower_order_of_normed prec ord I a (tm_norm_poly t)\"\n  |  \"tm_lower_order_of_normed prec ord I a (TaylorModel p e) = (\n         let (l, r) = split_by_degree ord p\n         in TaylorModel l (round_interval prec (e + compute_bound_poly prec r I a))\n       )\"\n\\<comment> \\<open>Reduces the degree of a Taylor model's polynomial to n and keeps it range by increasing the error bound.\\<close>"], ["", "fun tm_round_floats tm_round_floats_of_normed :: \"nat \\<Rightarrow> float interval list \\<Rightarrow> float interval list \\<Rightarrow> taylor_model \\<Rightarrow> taylor_model\"\n  where \"tm_round_floats prec I a t = tm_round_floats_of_normed prec I a (tm_norm_poly t)\"\n  | \"tm_round_floats_of_normed prec I a (TaylorModel p e) = (\n         let (l, r) = split_by_prec prec p\n         in TaylorModel l (round_interval prec (e + compute_bound_poly prec r I a))\n       )\"\n\\<comment> \\<open>Rounding of Taylor models. Rounds both the coefficients of the polynomial and the floats in the error bound.\\<close>"], ["", "fun tm_norm tm_norm' :: \"nat \\<Rightarrow> nat \\<Rightarrow> float interval list \\<Rightarrow> float interval list \\<Rightarrow> taylor_model \\<Rightarrow> taylor_model\"\n  where \"tm_norm prec ord I a t = tm_norm' prec ord I a (tm_norm_poly t)\"\n  | \"tm_norm' prec ord I a t = tm_round_floats_of_normed prec I a (tm_lower_order_of_normed prec ord I a t)\" \n\\<comment> \\<open>Normalization of taylor models. Performs order lowering and rounding on tayor models,\n   also converts the polynomial into horner form.\\<close>"], ["", "fun tm_neg :: \"taylor_model \\<Rightarrow> taylor_model\"\n  where \"tm_neg (TaylorModel p e) = TaylorModel (~\\<^sub>p p) (-e)\""], ["", "fun tm_add :: \"taylor_model \\<Rightarrow> taylor_model \\<Rightarrow> taylor_model\"\n  where \"tm_add (TaylorModel p1 e1) (TaylorModel p2 e2) = TaylorModel (p1 +\\<^sub>p p2) (e1 + e2)\""], ["", "fun tm_sub :: \"taylor_model \\<Rightarrow> taylor_model \\<Rightarrow> taylor_model\"\n  where \"tm_sub t1 t2 = tm_add t1 (tm_neg t2)\""], ["", "fun tm_mul :: \"nat \\<Rightarrow> nat \\<Rightarrow> float interval list \\<Rightarrow> float interval list \\<Rightarrow> taylor_model \\<Rightarrow> taylor_model \\<Rightarrow> taylor_model\"\n  where \"tm_mul prec ord I a (TaylorModel p1 e1) (TaylorModel p2 e2) = (\n         let d1 = compute_bound_poly prec p1 I a;\n             d2 = compute_bound_poly prec p2 I a;\n             p = p1 *\\<^sub>p p2;\n             e = e1*d2 + d1*e2 + e1*e2\n         in tm_norm' prec ord I a (TaylorModel p e)\n       )\""], ["", "lemmas [simp del] = tm_norm'.simps"], ["", "fun tm_pow :: \"nat \\<Rightarrow> nat \\<Rightarrow> float interval list \\<Rightarrow> float interval list \\<Rightarrow> taylor_model \\<Rightarrow> nat \\<Rightarrow> taylor_model\"\n  where \"tm_pow prec ord I a t 0 = tm_const 1\"\n  | \"tm_pow prec ord I a t (Suc n) = (\n         if odd (Suc n)\n         then tm_mul prec ord I a t (tm_pow prec ord I a t n)\n         else let t' = tm_pow prec ord I a t ((Suc n) div 2)\n              in tm_mul prec ord I a t' t'\n       )\""], ["", "text \\<open>Evaluates a float polynomial, using a Taylor model as the parameter. This is used to compose Taylor models.\\<close>"], ["", "fun eval_poly_at_tm :: \"nat \\<Rightarrow> nat \\<Rightarrow> float interval list \\<Rightarrow> float interval list \\<Rightarrow> float poly \\<Rightarrow> taylor_model \\<Rightarrow> taylor_model\"\n  where \"eval_poly_at_tm prec ord I a (poly.C c) t = tm_const c\"\n  | \"eval_poly_at_tm prec ord I a (poly.Bound n) t = t\"\n  | \"eval_poly_at_tm prec ord I a (poly.Add p1 p2) t\n         = tm_add (eval_poly_at_tm prec ord I a p1 t)\n                  (eval_poly_at_tm prec ord I a p2 t)\"\n  | \"eval_poly_at_tm prec ord I a (poly.Sub p1 p2) t\n         = tm_sub (eval_poly_at_tm prec ord I a p1 t)\n                  (eval_poly_at_tm prec ord I a p2 t)\"\n  | \"eval_poly_at_tm prec ord I a (poly.Mul p1 p2) t\n         = tm_mul prec ord I a (eval_poly_at_tm prec ord I a  p1 t)\n                               (eval_poly_at_tm prec ord I a p2 t)\"\n  | \"eval_poly_at_tm prec ord I a (poly.Neg p) t\n         = tm_neg (eval_poly_at_tm prec ord I a p t)\"\n  | \"eval_poly_at_tm prec ord I a (poly.Pw p n) t\n         = tm_pow prec ord I a (eval_poly_at_tm prec ord I a p t) n\"\n  | \"eval_poly_at_tm prec ord I a (poly.CN c n p) t = (\n         let pt = eval_poly_at_tm prec ord I a p t;\n             t_mul_pt = tm_mul prec ord I a t pt \n         in tm_add (eval_poly_at_tm prec ord I a c t) t_mul_pt\n       )\""], ["", "fun tm_inc_err :: \"float interval \\<Rightarrow> taylor_model \\<Rightarrow> taylor_model\"\n  where \"tm_inc_err i (TaylorModel p e) = TaylorModel p (e + i)\""], ["", "fun tm_comp :: \"nat \\<Rightarrow> nat \\<Rightarrow> float interval list \\<Rightarrow> float interval list \\<Rightarrow> float \\<Rightarrow> taylor_model \\<Rightarrow> taylor_model \\<Rightarrow> taylor_model\"\n  where \"tm_comp prec ord I a ta (TaylorModel p e) t = (\n         let t_sub_ta = tm_sub t (tm_const ta);\n             pt = eval_poly_at_tm prec ord I a p t_sub_ta\n         in tm_inc_err e pt\n       )\""], ["", "text \\<open>\\<open>tm_max\\<close>, \\<open>tm_min\\<close> and \\<open>tm_abs\\<close> are implemented extremely naively, because I don't expect them to be very useful.\n   But the implementation is fairly modular, i.e. \\<open>tm_{abs,min,max}\\<close> all can easily be swapped out,\n   as long as the corresponding correctness lemmas \\<open>tm_{abs,min,max}_range\\<close> are updated as well.\\<close>"], ["", "fun tm_abs :: \"nat \\<Rightarrow> float interval list \\<Rightarrow> float interval list \\<Rightarrow> taylor_model \\<Rightarrow> taylor_model\"\n  where \"tm_abs prec I a t = (\n  let bound = compute_bound_tm prec I a t; abs_bound=Ivl (0::float) (max (abs (lower bound)) (abs (upper bound)))\n  in TaylorModel (poly.C (mid abs_bound)) (centered abs_bound))\""], ["", "fun tm_union :: \"nat \\<Rightarrow> float interval list \\<Rightarrow> float interval list \\<Rightarrow> taylor_model \\<Rightarrow> taylor_model \\<Rightarrow> taylor_model\"\n  where \"tm_union prec I a t1 t2 = (\n  let b1 = compute_bound_tm prec I a t1; b2 = compute_bound_tm prec I a t2;\n      b_combined = sup b1 b2\n  in TaylorModel (poly.C (mid b_combined)) (centered b_combined))\""], ["", "fun tm_min :: \"nat \\<Rightarrow> float interval list \\<Rightarrow> float interval list \\<Rightarrow> taylor_model \\<Rightarrow> taylor_model \\<Rightarrow> taylor_model\"\n  where \"tm_min prec I a t1 t2 = tm_union prec I a t1 t2\""], ["", "fun tm_max :: \"nat \\<Rightarrow> float interval list \\<Rightarrow> float interval list \\<Rightarrow> taylor_model \\<Rightarrow> taylor_model \\<Rightarrow> taylor_model\"\n  where \"tm_max  prec I a t1 t2 = tm_union prec I a t1 t2\""], ["", "text \\<open>Rangeity of is preserved by our operations on Taylor models.\\<close>"], ["", "lemma insertion_polyadd[simp]: \"insertion e (a +\\<^sub>p b) = insertion e a + insertion e b\"\n  for a b::\"'a::ring_1 poly\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insertion e (a +\\<^sub>p b) = insertion e a + insertion e b", "apply (induction a b rule: polyadd.induct)"], ["proof (prove)\ngoal (28 subgoals):\n 1. \\<And>c c'.\n       insertion e ((c)\\<^sub>p +\\<^sub>p (c')\\<^sub>p) =\n       insertion e (c)\\<^sub>p + insertion e (c')\\<^sub>p\n 2. \\<And>c c' n' p'.\n       insertion e ((c)\\<^sub>p +\\<^sub>p c') =\n       insertion e (c)\\<^sub>p + insertion e c' \\<Longrightarrow>\n       insertion e ((c)\\<^sub>p +\\<^sub>p CN c' n' p') =\n       insertion e (c)\\<^sub>p + insertion e (CN c' n' p')\n 3. \\<And>c n p c'.\n       insertion e (c +\\<^sub>p (c')\\<^sub>p) =\n       insertion e c + insertion e (c')\\<^sub>p \\<Longrightarrow>\n       insertion e (CN c n p +\\<^sub>p (c')\\<^sub>p) =\n       insertion e (CN c n p) + insertion e (c')\\<^sub>p\n 4. \\<And>c n p c' n' p'.\n       \\<lbrakk>insertion e (c +\\<^sub>p CN c' n' p') =\n                insertion e c + insertion e (CN c' n' p');\n        insertion e (CN c n p +\\<^sub>p c') =\n        insertion e (CN c n p) + insertion e c';\n        insertion e (c +\\<^sub>p c') = insertion e c + insertion e c';\n        \\<And>x.\n           insertion e (p +\\<^sub>p p') =\n           insertion e p + insertion e p'\\<rbrakk>\n       \\<Longrightarrow> insertion e (CN c n p +\\<^sub>p CN c' n' p') =\n                         insertion e (CN c n p) + insertion e (CN c' n' p')\n 5. \\<And>v b.\n       insertion e (poly.Bound v +\\<^sub>p b) =\n       insertion e (poly.Bound v) + insertion e b\n 6. \\<And>v va b.\n       insertion e (Add v va +\\<^sub>p b) =\n       insertion e (Add v va) + insertion e b\n 7. \\<And>v va b.\n       insertion e (Sub v va +\\<^sub>p b) =\n       insertion e (Sub v va) + insertion e b\n 8. \\<And>v va b.\n       insertion e (Mul v va +\\<^sub>p b) =\n       insertion e (Mul v va) + insertion e b\n 9. \\<And>v b.\n       insertion e (Neg v +\\<^sub>p b) = insertion e (Neg v) + insertion e b\n 10. \\<And>v va b.\n        insertion e (Pw v va +\\<^sub>p b) =\n        insertion e (Pw v va) + insertion e b\nA total of 28 subgoals...", "apply (auto simp: algebra_simps Let_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c p c' n' p'.\n       \\<lbrakk>insertion e (c +\\<^sub>p CN c' n' p') =\n                insertion e c + (insertion e c' + e n' * insertion e p');\n        insertion e (CN c n' p +\\<^sub>p c') =\n        insertion e c + (insertion e c' + e n' * insertion e p);\n        insertion e (c +\\<^sub>p c') = insertion e c + insertion e c';\n        insertion e p + insertion e p' = (0::'a);\n        p +\\<^sub>p p' = 0\\<^sub>p\\<rbrakk>\n       \\<Longrightarrow> e n' * insertion e p + e n' * insertion e p' =\n                         (0::'a)", "by (metis (no_types) mult_zero_right ring_class.ring_distribs(1))"], ["", "lemma insertion_polyneg[simp]: \"insertion e (~\\<^sub>p b) =  - insertion e b\"\n  for b::\"'a::ring_1 poly\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insertion e (~\\<^sub>p b) = - insertion e b", "by (induction b rule: polyneg.induct) (auto simp: algebra_simps Let_def)"], ["", "lemma insertion_polysub[simp]: \"insertion e (a -\\<^sub>p b) = insertion e a - insertion e b\"\n  for a b::\"'a::ring_1 poly\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insertion e (a -\\<^sub>p b) = insertion e a - insertion e b", "by (simp add: polysub_def)"], ["", "lemma insertion_polymul[simp]: \"insertion e (a *\\<^sub>p b) = insertion e a * insertion e b\"\n  for a b::\"'a::comm_ring_1 poly\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insertion e (a *\\<^sub>p b) = insertion e a * insertion e b", "by (induction a b rule: polymul.induct)\n    (auto simp: algebra_simps Let_def)"], ["", "lemma insertion_polypow[simp]: \"insertion e (a ^\\<^sub>p b) = insertion e a ^ b\"\n  for a::\"'a::comm_ring_1 poly\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insertion e (a ^\\<^sub>p b) = insertion e a ^ b", "proof (induction b rule: nat_less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>m<n.\n          insertion e (a ^\\<^sub>p m) = insertion e a ^ m \\<Longrightarrow>\n       insertion e (a ^\\<^sub>p n) = insertion e a ^ n", "case (1 n)"], ["proof (state)\nthis:\n  \\<forall>m<n. insertion e (a ^\\<^sub>p m) = insertion e a ^ m\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>m<n.\n          insertion e (a ^\\<^sub>p m) = insertion e a ^ m \\<Longrightarrow>\n       insertion e (a ^\\<^sub>p n) = insertion e a ^ n", "then"], ["proof (chain)\npicking this:\n  \\<forall>m<n. insertion e (a ^\\<^sub>p m) = insertion e a ^ m", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>m<n. insertion e (a ^\\<^sub>p m) = insertion e a ^ m\n\ngoal (1 subgoal):\n 1. insertion e (a ^\\<^sub>p n) = insertion e a ^ n", "proof (cases n)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>m<n. insertion e (a ^\\<^sub>p m) = insertion e a ^ m;\n     n = 0\\<rbrakk>\n    \\<Longrightarrow> insertion e (a ^\\<^sub>p n) = insertion e a ^ n\n 2. \\<And>nat.\n       \\<lbrakk>\\<forall>m<n.\n                   insertion e (a ^\\<^sub>p m) = insertion e a ^ m;\n        n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> insertion e (a ^\\<^sub>p n) = insertion e a ^ n", "case (Suc nat)"], ["proof (state)\nthis:\n  n = Suc nat\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>m<n. insertion e (a ^\\<^sub>p m) = insertion e a ^ m;\n     n = 0\\<rbrakk>\n    \\<Longrightarrow> insertion e (a ^\\<^sub>p n) = insertion e a ^ n\n 2. \\<And>nat.\n       \\<lbrakk>\\<forall>m<n.\n                   insertion e (a ^\\<^sub>p m) = insertion e a ^ m;\n        n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> insertion e (a ^\\<^sub>p n) = insertion e a ^ n", "then"], ["proof (chain)\npicking this:\n  n = Suc nat", "show ?thesis"], ["proof (prove)\nusing this:\n  n = Suc nat\n\ngoal (1 subgoal):\n 1. insertion e (a ^\\<^sub>p n) = insertion e a ^ n", "apply (auto simp: )"], ["proof (prove)\ngoal (1 subgoal):\n 1. n = Suc nat \\<Longrightarrow>\n    insertion e\n     (let q = a ^\\<^sub>p Suc nat div 2; d = q *\\<^sub>p q\n      in if odd nat then d else a *\\<^sub>p d) =\n    insertion e a * insertion e a ^ nat", "apply (auto simp: Let_def div2_less_self 1 simp del: polypow.simps)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = Suc nat; odd nat\\<rbrakk>\n    \\<Longrightarrow> insertion e a * insertion e a ^ (nat div 2) *\n                      (insertion e a * insertion e a ^ (nat div 2)) =\n                      insertion e a * insertion e a ^ nat\n 2. \\<lbrakk>n = Suc nat; even nat\\<rbrakk>\n    \\<Longrightarrow> insertion e a *\n                      (insertion e a ^ (nat div 2) *\n                       insertion e a ^ (nat div 2)) =\n                      insertion e a * insertion e a ^ nat", "apply (metis even_Suc even_two_times_div_two odd_Suc_div_two semiring_normalization_rules(27) semiring_normalization_rules(36))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc nat; even nat\\<rbrakk>\n    \\<Longrightarrow> insertion e a *\n                      (insertion e a ^ (nat div 2) *\n                       insertion e a ^ (nat div 2)) =\n                      insertion e a * insertion e a ^ nat", "apply (metis even_two_times_div_two semiring_normalization_rules(36))"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  insertion e (a ^\\<^sub>p n) = insertion e a ^ n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>m<n. insertion e (a ^\\<^sub>p m) = insertion e a ^ m;\n     n = 0\\<rbrakk>\n    \\<Longrightarrow> insertion e (a ^\\<^sub>p n) = insertion e a ^ n", "qed simp"], ["proof (state)\nthis:\n  insertion e (a ^\\<^sub>p n) = insertion e a ^ n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma insertion_polynate [simp]:\n  \"insertion bs (polynate p) = (insertion bs p :: 'a::comm_ring_1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insertion bs (polynate p) = insertion bs p", "by (induct p rule: polynate.induct) (auto simp: )"], ["", "lemma tm_norm_poly_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t\"\n  shows \"x \\<in>\\<^sub>i range_tm e (tm_norm_poly t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_norm_poly t)", "using assms"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>i range_tm e t\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_norm_poly t)", "by (cases t) (simp add: range_tm_def)"], ["", "lemma split_by_degree_correct_insertion:\n  fixes x :: \"nat \\<Rightarrow> real\" and p :: \"float poly\"\n  assumes \"split_by_degree ord p = (l, r)\"\n  shows \"maxdegree l \\<le> ord\" (is ?P1)\n    and   \"insertion x p = insertion x l + insertion x r\" (is ?P2)\n    and   \"num_params l \\<le> num_params p\" (is ?P3)\n    and   \"num_params r \\<le> num_params p\" (is ?P4)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (maxdegree l \\<le> ord &&&\n     insertion x (map_poly real_of_float p) =\n     insertion x (map_poly real_of_float l) +\n     insertion x (map_poly real_of_float r)) &&&\n    num_params l \\<le> num_params p &&& num_params r \\<le> num_params p", "proof -"], ["proof (state)\ngoal (4 subgoals):\n 1. maxdegree l \\<le> ord\n 2. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)\n 3. num_params l \\<le> num_params p\n 4. num_params r \\<le> num_params p", "define xs where \"xs = map x [0..<num_params p]\""], ["proof (state)\nthis:\n  xs = map x [0..<num_params p]\n\ngoal (4 subgoals):\n 1. maxdegree l \\<le> ord\n 2. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)\n 3. num_params l \\<le> num_params p\n 4. num_params r \\<le> num_params p", "have xs: \"i < num_params p \\<Longrightarrow> x i = xs ! i\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. i < num_params p \\<Longrightarrow> x i = xs ! i", "by (auto simp: xs_def)"], ["proof (state)\nthis:\n  ?i < num_params p \\<Longrightarrow> x ?i = xs ! ?i\n\ngoal (4 subgoals):\n 1. maxdegree l \\<le> ord\n 2. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)\n 3. num_params l \\<le> num_params p\n 4. num_params r \\<le> num_params p", "have \"insertion x p = Ipoly xs p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insertion x (map_poly real_of_float p) =\n    Ipoly xs (map_poly real_of_float p)", "by (auto intro!: insertion_eq_IpolyI xs)"], ["proof (state)\nthis:\n  insertion x (map_poly real_of_float p) =\n  Ipoly xs (map_poly real_of_float p)\n\ngoal (4 subgoals):\n 1. maxdegree l \\<le> ord\n 2. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)\n 3. num_params l \\<le> num_params p\n 4. num_params r \\<le> num_params p", "also"], ["proof (state)\nthis:\n  insertion x (map_poly real_of_float p) =\n  Ipoly xs (map_poly real_of_float p)\n\ngoal (4 subgoals):\n 1. maxdegree l \\<le> ord\n 2. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)\n 3. num_params l \\<le> num_params p\n 4. num_params r \\<le> num_params p", "from split_by_degree_correct[OF assms(1)[symmetric]]"], ["proof (chain)\npicking this:\n  maxdegree l \\<le> ord\n  Ipoly ?x (map_poly real_of_float p) =\n  Ipoly ?x (map_poly real_of_float l) + Ipoly ?x (map_poly real_of_float r)\n  num_params l \\<le> num_params p\n  num_params r \\<le> num_params p", "have \"maxdegree l \\<le> ord\"\n    and p: \"Ipoly xs (map_poly real_of_float p) =\n    Ipoly xs (map_poly real_of_float l) + Ipoly xs (map_poly real_of_float r)\"\n   and l: \"num_params l \\<le> num_params p\"\n   and r: \"num_params r \\<le> num_params p\""], ["proof (prove)\nusing this:\n  maxdegree l \\<le> ord\n  Ipoly ?x (map_poly real_of_float p) =\n  Ipoly ?x (map_poly real_of_float l) + Ipoly ?x (map_poly real_of_float r)\n  num_params l \\<le> num_params p\n  num_params r \\<le> num_params p\n\ngoal (1 subgoal):\n 1. (maxdegree l \\<le> ord &&&\n     Ipoly xs (map_poly real_of_float p) =\n     Ipoly xs (map_poly real_of_float l) +\n     Ipoly xs (map_poly real_of_float r)) &&&\n    num_params l \\<le> num_params p &&& num_params r \\<le> num_params p", "by auto"], ["proof (state)\nthis:\n  maxdegree l \\<le> ord\n  Ipoly xs (map_poly real_of_float p) =\n  Ipoly xs (map_poly real_of_float l) + Ipoly xs (map_poly real_of_float r)\n  num_params l \\<le> num_params p\n  num_params r \\<le> num_params p\n\ngoal (4 subgoals):\n 1. maxdegree l \\<le> ord\n 2. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)\n 3. num_params l \\<le> num_params p\n 4. num_params r \\<le> num_params p", "show ?P1 ?P3 ?P4"], ["proof (prove)\ngoal (1 subgoal):\n 1. maxdegree l \\<le> ord &&&\n    num_params l \\<le> num_params p &&& num_params r \\<le> num_params p", "by fact+"], ["proof (state)\nthis:\n  maxdegree l \\<le> ord\n  num_params l \\<le> num_params p\n  num_params r \\<le> num_params p\n\ngoal (1 subgoal):\n 1. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)", "note p"], ["proof (state)\nthis:\n  Ipoly xs (map_poly real_of_float p) =\n  Ipoly xs (map_poly real_of_float l) + Ipoly xs (map_poly real_of_float r)\n\ngoal (1 subgoal):\n 1. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)", "also"], ["proof (state)\nthis:\n  Ipoly xs (map_poly real_of_float p) =\n  Ipoly xs (map_poly real_of_float l) + Ipoly xs (map_poly real_of_float r)\n\ngoal (1 subgoal):\n 1. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)", "have \"Ipoly xs (map_poly real_of_float l) = insertion x l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly xs (map_poly real_of_float l) =\n    insertion x (map_poly real_of_float l)", "using l"], ["proof (prove)\nusing this:\n  num_params l \\<le> num_params p\n\ngoal (1 subgoal):\n 1. Ipoly xs (map_poly real_of_float l) =\n    insertion x (map_poly real_of_float l)", "by (auto intro!: xs Ipoly_eq_insertionI)"], ["proof (state)\nthis:\n  Ipoly xs (map_poly real_of_float l) =\n  insertion x (map_poly real_of_float l)\n\ngoal (1 subgoal):\n 1. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)", "also"], ["proof (state)\nthis:\n  Ipoly xs (map_poly real_of_float l) =\n  insertion x (map_poly real_of_float l)\n\ngoal (1 subgoal):\n 1. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)", "have \"Ipoly xs (map_poly real_of_float r) = insertion x r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly xs (map_poly real_of_float r) =\n    insertion x (map_poly real_of_float r)", "using r"], ["proof (prove)\nusing this:\n  num_params r \\<le> num_params p\n\ngoal (1 subgoal):\n 1. Ipoly xs (map_poly real_of_float r) =\n    insertion x (map_poly real_of_float r)", "by (auto intro!: xs Ipoly_eq_insertionI)"], ["proof (state)\nthis:\n  Ipoly xs (map_poly real_of_float r) =\n  insertion x (map_poly real_of_float r)\n\ngoal (1 subgoal):\n 1. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)", "finally"], ["proof (chain)\npicking this:\n  insertion x (map_poly real_of_float p) =\n  insertion x (map_poly real_of_float l) +\n  insertion x (map_poly real_of_float r)", "show ?P2"], ["proof (prove)\nusing this:\n  insertion x (map_poly real_of_float p) =\n  insertion x (map_poly real_of_float l) +\n  insertion x (map_poly real_of_float r)\n\ngoal (1 subgoal):\n 1. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)", "."], ["proof (state)\nthis:\n  insertion x (map_poly real_of_float p) =\n  insertion x (map_poly real_of_float l) +\n  insertion x (map_poly real_of_float r)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma split_by_prec_correct_insertion:\n  fixes x :: \"nat \\<Rightarrow> real\" and p :: \"float poly\"\n  assumes \"split_by_prec ord p = (l, r)\"\n  shows \"insertion x p = insertion x l + insertion x r\" (is ?P1)\n    and \"num_params l \\<le> num_params p\" (is ?P2)\n    and \"num_params r \\<le> num_params p\" (is ?P3)"], ["proof (prove)\ngoal (1 subgoal):\n 1. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r) &&&\n    num_params l \\<le> num_params p &&& num_params r \\<le> num_params p", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)\n 2. num_params l \\<le> num_params p\n 3. num_params r \\<le> num_params p", "define xs where \"xs = map x [0..<num_params p]\""], ["proof (state)\nthis:\n  xs = map x [0..<num_params p]\n\ngoal (3 subgoals):\n 1. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)\n 2. num_params l \\<le> num_params p\n 3. num_params r \\<le> num_params p", "have xs: \"i < num_params p \\<Longrightarrow> x i = xs ! i\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. i < num_params p \\<Longrightarrow> x i = xs ! i", "by (auto simp: xs_def)"], ["proof (state)\nthis:\n  ?i < num_params p \\<Longrightarrow> x ?i = xs ! ?i\n\ngoal (3 subgoals):\n 1. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)\n 2. num_params l \\<le> num_params p\n 3. num_params r \\<le> num_params p", "have \"insertion x p = Ipoly xs p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insertion x (map_poly real_of_float p) =\n    Ipoly xs (map_poly real_of_float p)", "by (auto intro!: insertion_eq_IpolyI xs)"], ["proof (state)\nthis:\n  insertion x (map_poly real_of_float p) =\n  Ipoly xs (map_poly real_of_float p)\n\ngoal (3 subgoals):\n 1. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)\n 2. num_params l \\<le> num_params p\n 3. num_params r \\<le> num_params p", "also"], ["proof (state)\nthis:\n  insertion x (map_poly real_of_float p) =\n  Ipoly xs (map_poly real_of_float p)\n\ngoal (3 subgoals):\n 1. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)\n 2. num_params l \\<le> num_params p\n 3. num_params r \\<le> num_params p", "from split_by_prec_correct[OF assms(1)[symmetric]]"], ["proof (chain)\npicking this:\n  Ipoly ?args (map_poly real_of_float p) =\n  Ipoly ?args (map_poly real_of_float l) +\n  Ipoly ?args (map_poly real_of_float r)\n  num_params l \\<le> num_params p\n  num_params r \\<le> num_params p", "have p: \"Ipoly xs (map_poly real_of_float p) =\n    Ipoly xs (map_poly real_of_float l) + Ipoly xs (map_poly real_of_float r)\"\n   and l: \"num_params l \\<le> num_params p\"\n   and r: \"num_params r \\<le> num_params p\""], ["proof (prove)\nusing this:\n  Ipoly ?args (map_poly real_of_float p) =\n  Ipoly ?args (map_poly real_of_float l) +\n  Ipoly ?args (map_poly real_of_float r)\n  num_params l \\<le> num_params p\n  num_params r \\<le> num_params p\n\ngoal (1 subgoal):\n 1. Ipoly xs (map_poly real_of_float p) =\n    Ipoly xs (map_poly real_of_float l) +\n    Ipoly xs (map_poly real_of_float r) &&&\n    num_params l \\<le> num_params p &&& num_params r \\<le> num_params p", "by auto"], ["proof (state)\nthis:\n  Ipoly xs (map_poly real_of_float p) =\n  Ipoly xs (map_poly real_of_float l) + Ipoly xs (map_poly real_of_float r)\n  num_params l \\<le> num_params p\n  num_params r \\<le> num_params p\n\ngoal (3 subgoals):\n 1. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)\n 2. num_params l \\<le> num_params p\n 3. num_params r \\<le> num_params p", "show ?P2 ?P3"], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params l \\<le> num_params p &&& num_params r \\<le> num_params p", "by fact+"], ["proof (state)\nthis:\n  num_params l \\<le> num_params p\n  num_params r \\<le> num_params p\n\ngoal (1 subgoal):\n 1. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)", "note p"], ["proof (state)\nthis:\n  Ipoly xs (map_poly real_of_float p) =\n  Ipoly xs (map_poly real_of_float l) + Ipoly xs (map_poly real_of_float r)\n\ngoal (1 subgoal):\n 1. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)", "also"], ["proof (state)\nthis:\n  Ipoly xs (map_poly real_of_float p) =\n  Ipoly xs (map_poly real_of_float l) + Ipoly xs (map_poly real_of_float r)\n\ngoal (1 subgoal):\n 1. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)", "have \"Ipoly xs (map_poly real_of_float l) = insertion x l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly xs (map_poly real_of_float l) =\n    insertion x (map_poly real_of_float l)", "using l"], ["proof (prove)\nusing this:\n  num_params l \\<le> num_params p\n\ngoal (1 subgoal):\n 1. Ipoly xs (map_poly real_of_float l) =\n    insertion x (map_poly real_of_float l)", "by (auto intro!: xs Ipoly_eq_insertionI)"], ["proof (state)\nthis:\n  Ipoly xs (map_poly real_of_float l) =\n  insertion x (map_poly real_of_float l)\n\ngoal (1 subgoal):\n 1. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)", "also"], ["proof (state)\nthis:\n  Ipoly xs (map_poly real_of_float l) =\n  insertion x (map_poly real_of_float l)\n\ngoal (1 subgoal):\n 1. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)", "have \"Ipoly xs (map_poly real_of_float r) = insertion x r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ipoly xs (map_poly real_of_float r) =\n    insertion x (map_poly real_of_float r)", "using r"], ["proof (prove)\nusing this:\n  num_params r \\<le> num_params p\n\ngoal (1 subgoal):\n 1. Ipoly xs (map_poly real_of_float r) =\n    insertion x (map_poly real_of_float r)", "by (auto intro!: xs Ipoly_eq_insertionI)"], ["proof (state)\nthis:\n  Ipoly xs (map_poly real_of_float r) =\n  insertion x (map_poly real_of_float r)\n\ngoal (1 subgoal):\n 1. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)", "finally"], ["proof (chain)\npicking this:\n  insertion x (map_poly real_of_float p) =\n  insertion x (map_poly real_of_float l) +\n  insertion x (map_poly real_of_float r)", "show ?P1"], ["proof (prove)\nusing this:\n  insertion x (map_poly real_of_float p) =\n  insertion x (map_poly real_of_float l) +\n  insertion x (map_poly real_of_float r)\n\ngoal (1 subgoal):\n 1. insertion x (map_poly real_of_float p) =\n    insertion x (map_poly real_of_float l) +\n    insertion x (map_poly real_of_float r)", "."], ["proof (state)\nthis:\n  insertion x (map_poly real_of_float p) =\n  insertion x (map_poly real_of_float l) +\n  insertion x (map_poly real_of_float r)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tm_lower_order_of_normed_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t\"\n  assumes dev: \"develops_at_within e a I\"\n  assumes \"num_params (tm_poly t) \\<le> length I\"\n  shows \"x \\<in>\\<^sub>i range_tm e (tm_lower_order_of_normed prec ord I a t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_lower_order_of_normed prec ord I a t)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_lower_order_of_normed prec ord I a t)", "obtain p err where t_decomp: \"t = TaylorModel p err\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p err.\n        t = TaylorModel p err \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases t) simp"], ["proof (state)\nthis:\n  t = TaylorModel p err\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_lower_order_of_normed prec ord I a t)", "obtain pl pr where p_split: \"split_by_degree ord p = (pl, pr)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>pl pr.\n        split_by_degree ord p = (pl, pr) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"split_by_degree ord p\", simp)"], ["proof (state)\nthis:\n  split_by_degree ord p = (pl, pr)\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_lower_order_of_normed prec ord I a t)", "from split_by_degree_correct_insertion[OF p_split]"], ["proof (chain)\npicking this:\n  maxdegree pl \\<le> ord\n  insertion ?x (map_poly real_of_float p) =\n  insertion ?x (map_poly real_of_float pl) +\n  insertion ?x (map_poly real_of_float pr)\n  num_params pl \\<le> num_params p\n  num_params pr \\<le> num_params p", "have params: \"maxdegree pl \\<le> ord\" \"num_params pl \\<le> num_params p\" \"num_params pr \\<le> num_params p\"\n    and ins: \"insertion e (map_poly real_of_float p) =\n      insertion e (map_poly real_of_float pl) + insertion e (map_poly real_of_float pr)\""], ["proof (prove)\nusing this:\n  maxdegree pl \\<le> ord\n  insertion ?x (map_poly real_of_float p) =\n  insertion ?x (map_poly real_of_float pl) +\n  insertion ?x (map_poly real_of_float pr)\n  num_params pl \\<le> num_params p\n  num_params pr \\<le> num_params p\n\ngoal (1 subgoal):\n 1. (maxdegree pl \\<le> ord &&&\n     num_params pl \\<le> num_params p &&&\n     num_params pr \\<le> num_params p) &&&\n    insertion e (map_poly real_of_float p) =\n    insertion e (map_poly real_of_float pl) +\n    insertion e (map_poly real_of_float pr)", "by auto"], ["proof (state)\nthis:\n  maxdegree pl \\<le> ord\n  num_params pl \\<le> num_params p\n  num_params pr \\<le> num_params p\n  insertion e (map_poly real_of_float p) =\n  insertion e (map_poly real_of_float pl) +\n  insertion e (map_poly real_of_float pr)\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_lower_order_of_normed prec ord I a t)", "from assms params"], ["proof (chain)\npicking this:\n  x \\<in>\\<^sub>i range_tm e t\n  develops_at_within e a I\n  num_params (tm_poly t) \\<le> length I\n  maxdegree pl \\<le> ord\n  num_params pl \\<le> num_params p\n  num_params pr \\<le> num_params p", "have params_pr: \"num_params pr \\<le> length I\""], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>i range_tm e t\n  develops_at_within e a I\n  num_params (tm_poly t) \\<le> length I\n  maxdegree pl \\<le> ord\n  num_params pl \\<le> num_params p\n  num_params pr \\<le> num_params p\n\ngoal (1 subgoal):\n 1. num_params pr \\<le> length I", "by (auto simp: t_decomp)"], ["proof (state)\nthis:\n  num_params pr \\<le> length I\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_lower_order_of_normed prec ord I a t)", "have \"range_tm e t =\n    interval_of (insertion e (map_poly real_of_float pl)) +\n    (interval_of (insertion e (map_poly real_of_float pr)) + real_interval err)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range_tm e t =\n    interval_of (insertion e (map_poly real_of_float pl)) +\n    (interval_of (insertion e (map_poly real_of_float pr)) +\n     real_interval err)", "by (auto simp: t_decomp range_tm_def ins ac_simps interval_of_plus)"], ["proof (state)\nthis:\n  range_tm e t =\n  interval_of (insertion e (map_poly real_of_float pl)) +\n  (interval_of (insertion e (map_poly real_of_float pr)) +\n   real_interval err)\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_lower_order_of_normed prec ord I a t)", "term round_interval"], ["proof (state)\nthis:\n  range_tm e t =\n  interval_of (insertion e (map_poly real_of_float pl)) +\n  (interval_of (insertion e (map_poly real_of_float pr)) +\n   real_interval err)\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_lower_order_of_normed prec ord I a t)", "also"], ["proof (state)\nthis:\n  range_tm e t =\n  interval_of (insertion e (map_poly real_of_float pl)) +\n  (interval_of (insertion e (map_poly real_of_float pr)) +\n   real_interval err)\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_lower_order_of_normed prec ord I a t)", "have \"set_of \\<dots> \\<subseteq> set_of (interval_of (insertion e pl)) +\n    set_of (real_interval (round_interval prec (err + compute_bound_poly prec pr I a)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of\n     (interval_of (insertion e (map_poly real_of_float pl)) +\n      (interval_of (insertion e (map_poly real_of_float pr)) +\n       real_interval err))\n    \\<subseteq> set_of\n                 (interval_of (insertion e (map_poly real_of_float pl))) +\n                set_of\n                 (real_interval\n                   (round_interval prec\n                     (err +\n                      compute_bound_poly prec (map_poly interval_of pr) I\n                       a)))", "unfolding set_of_plus real_interval_plus add.commute[of err]"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (interval_of (insertion e (map_poly real_of_float pl))) +\n    (set_of (interval_of (insertion e (map_poly real_of_float pr))) +\n     set_of (real_interval err))\n    \\<subseteq> set_of\n                 (interval_of (insertion e (map_poly real_of_float pl))) +\n                set_of\n                 (real_interval\n                   (round_interval prec\n                     (compute_bound_poly prec (map_poly interval_of pr) I\n                       a +\n                      err)))", "apply (rule set_plus_mono2[OF order_refl])"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (interval_of (insertion e (map_poly real_of_float pr))) +\n    set_of (real_interval err)\n    \\<subseteq> set_of\n                 (real_interval\n                   (round_interval prec\n                     (compute_bound_poly prec (map_poly interval_of pr) I\n                       a +\n                      err)))", "apply (rule order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. set_of (interval_of (insertion e (map_poly real_of_float pr))) +\n    set_of (real_interval err)\n    \\<subseteq> ?y3\n 2. ?y3\n    \\<subseteq> set_of\n                 (real_interval\n                   (round_interval prec\n                     (compute_bound_poly prec (map_poly interval_of pr) I\n                       a +\n                      err)))", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. ?y3\n    \\<subseteq> set_of\n                 (real_interval\n                   (round_interval prec\n                     (compute_bound_poly prec (map_poly interval_of pr) I\n                       a +\n                      err)))\n 2. set_of (interval_of (insertion e (map_poly real_of_float pr))) +\n    set_of (real_interval err)\n    \\<subseteq> ?y3", "apply (rule set_of_real_interval_subset)"], ["proof (prove)\ngoal (2 subgoals):\n 1. set_of ?x6\n    \\<subseteq> set_of\n                 (round_interval prec\n                   (compute_bound_poly prec (map_poly interval_of pr) I a +\n                    err))\n 2. set_of (interval_of (insertion e (map_poly real_of_float pr))) +\n    set_of (real_interval err)\n    \\<subseteq> set_of (real_interval ?x6)", "apply (rule round_ivl_correct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (interval_of (insertion e (map_poly real_of_float pr))) +\n    set_of (real_interval err)\n    \\<subseteq> set_of\n                 (real_interval\n                   (compute_bound_poly prec (map_poly interval_of pr) I a +\n                    err))", "unfolding set_of_plus real_interval_plus"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (interval_of (insertion e (map_poly real_of_float pr))) +\n    set_of (real_interval err)\n    \\<subseteq> set_of\n                 (real_interval\n                   (compute_bound_poly prec (map_poly interval_of pr) I\n                     a)) +\n                set_of (real_interval err)", "apply (rule set_plus_mono2[OF _ order_refl])"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (interval_of (insertion e (map_poly real_of_float pr)))\n    \\<subseteq> set_of\n                 (real_interval\n                   (compute_bound_poly prec (map_poly interval_of pr) I a))", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>i interval_of\n                        (insertion e\n                          (map_poly real_of_float pr)) \\<Longrightarrow>\n       x \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of pr) I a", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. insertion e (map_poly real_of_float pr)\n    \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of pr) I a", "apply (rule compute_bound_poly_correct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. num_params pr \\<le> length I\n 2. develops_at_within e a I", "apply (rule params_pr)"], ["proof (prove)\ngoal (1 subgoal):\n 1. develops_at_within e a I", "by (rule assms)"], ["proof (state)\nthis:\n  set_of\n   (interval_of (insertion e (map_poly real_of_float pl)) +\n    (interval_of (insertion e (map_poly real_of_float pr)) +\n     real_interval err))\n  \\<subseteq> set_of\n               (interval_of (insertion e (map_poly real_of_float pl))) +\n              set_of\n               (real_interval\n                 (round_interval prec\n                   (err +\n                    compute_bound_poly prec (map_poly interval_of pr) I a)))\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_lower_order_of_normed prec ord I a t)", "also"], ["proof (state)\nthis:\n  set_of\n   (interval_of (insertion e (map_poly real_of_float pl)) +\n    (interval_of (insertion e (map_poly real_of_float pr)) +\n     real_interval err))\n  \\<subseteq> set_of\n               (interval_of (insertion e (map_poly real_of_float pl))) +\n              set_of\n               (real_interval\n                 (round_interval prec\n                   (err +\n                    compute_bound_poly prec (map_poly interval_of pr) I a)))\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_lower_order_of_normed prec ord I a t)", "have \"\\<dots> = set_of (range_tm e (tm_lower_order_of_normed prec ord I a t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (interval_of (insertion e (map_poly real_of_float pl))) +\n    set_of\n     (real_interval\n       (round_interval prec\n         (err + compute_bound_poly prec (map_poly interval_of pr) I a))) =\n    set_of (range_tm e (tm_lower_order_of_normed prec ord I a t))", "by (simp add: t_decomp split_beta' Let_def p_split range_tm_def set_of_plus)"], ["proof (state)\nthis:\n  set_of (interval_of (insertion e (map_poly real_of_float pl))) +\n  set_of\n   (real_interval\n     (round_interval prec\n       (err + compute_bound_poly prec (map_poly interval_of pr) I a))) =\n  set_of (range_tm e (tm_lower_order_of_normed prec ord I a t))\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_lower_order_of_normed prec ord I a t)", "finally"], ["proof (chain)\npicking this:\n  set_of (range_tm e t)\n  \\<subseteq> set_of (range_tm e (tm_lower_order_of_normed prec ord I a t))", "show ?thesis"], ["proof (prove)\nusing this:\n  set_of (range_tm e t)\n  \\<subseteq> set_of (range_tm e (tm_lower_order_of_normed prec ord I a t))\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_lower_order_of_normed prec ord I a t)", "using assms"], ["proof (prove)\nusing this:\n  set_of (range_tm e t)\n  \\<subseteq> set_of (range_tm e (tm_lower_order_of_normed prec ord I a t))\n  x \\<in>\\<^sub>i range_tm e t\n  develops_at_within e a I\n  num_params (tm_poly t) \\<le> length I\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_lower_order_of_normed prec ord I a t)", "by auto"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>i range_tm e (tm_lower_order_of_normed prec ord I a t)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma num_params_tm_norm_poly_le: \"num_params (tm_poly (tm_norm_poly t)) \\<le> X\"\n  if \"num_params (tm_poly t) \\<le> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_norm_poly t)) \\<le> X", "using that"], ["proof (prove)\nusing this:\n  num_params (tm_poly t) \\<le> X\n\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_norm_poly t)) \\<le> X", "by (cases t) (auto simp: intro!: num_params_polynate[THEN order_trans])"], ["", "lemma tm_lower_order_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t\"\n  assumes dev: \"develops_at_within e a I\"\n  assumes \"num_params (tm_poly t) \\<le> length I\"\n  shows \"x \\<in>\\<^sub>i range_tm e (tm_lower_order prec ord I a t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_lower_order prec ord I a t)", "by (auto simp add: intro!: tm_lower_order_of_normed_range tm_norm_poly_range assms\n      num_params_tm_norm_poly_le)"], ["", "lemma tm_round_floats_of_normed_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t\"\n  assumes dev: \"develops_at_within e a I\"\n  assumes \"num_params (tm_poly t) \\<le> length I\"\n  shows \"x \\<in>\\<^sub>i range_tm e (tm_round_floats_of_normed prec I a t)\"\n    \\<comment> \\<open>TODO: this is a clone of @{thm tm_lower_order_of_normed_range} -> general sweeping method!\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_round_floats_of_normed prec I a t)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_round_floats_of_normed prec I a t)", "obtain p err where t_decomp: \"t = TaylorModel p err\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p err.\n        t = TaylorModel p err \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases t) simp"], ["proof (state)\nthis:\n  t = TaylorModel p err\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_round_floats_of_normed prec I a t)", "obtain pl pr where p_prec: \"split_by_prec prec p = (pl, pr)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>pl pr.\n        split_by_prec prec p = (pl, pr) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"split_by_prec prec p\", simp)"], ["proof (state)\nthis:\n  split_by_prec prec p = (pl, pr)\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_round_floats_of_normed prec I a t)", "from split_by_prec_correct_insertion[OF p_prec]"], ["proof (chain)\npicking this:\n  insertion ?x (map_poly real_of_float p) =\n  insertion ?x (map_poly real_of_float pl) +\n  insertion ?x (map_poly real_of_float pr)\n  num_params pl \\<le> num_params p\n  num_params pr \\<le> num_params p", "have params: \"num_params pl \\<le> num_params p\" \"num_params pr \\<le> num_params p\"\n    and ins: \"insertion e (map_poly real_of_float p) =\n      insertion e (map_poly real_of_float pl) + insertion e (map_poly real_of_float pr)\""], ["proof (prove)\nusing this:\n  insertion ?x (map_poly real_of_float p) =\n  insertion ?x (map_poly real_of_float pl) +\n  insertion ?x (map_poly real_of_float pr)\n  num_params pl \\<le> num_params p\n  num_params pr \\<le> num_params p\n\ngoal (1 subgoal):\n 1. (num_params pl \\<le> num_params p &&&\n     num_params pr \\<le> num_params p) &&&\n    insertion e (map_poly real_of_float p) =\n    insertion e (map_poly real_of_float pl) +\n    insertion e (map_poly real_of_float pr)", "by auto"], ["proof (state)\nthis:\n  num_params pl \\<le> num_params p\n  num_params pr \\<le> num_params p\n  insertion e (map_poly real_of_float p) =\n  insertion e (map_poly real_of_float pl) +\n  insertion e (map_poly real_of_float pr)\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_round_floats_of_normed prec I a t)", "from assms params"], ["proof (chain)\npicking this:\n  x \\<in>\\<^sub>i range_tm e t\n  develops_at_within e a I\n  num_params (tm_poly t) \\<le> length I\n  num_params pl \\<le> num_params p\n  num_params pr \\<le> num_params p", "have params_pr: \"num_params pr \\<le> length I\""], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>i range_tm e t\n  develops_at_within e a I\n  num_params (tm_poly t) \\<le> length I\n  num_params pl \\<le> num_params p\n  num_params pr \\<le> num_params p\n\ngoal (1 subgoal):\n 1. num_params pr \\<le> length I", "by (auto simp: t_decomp)"], ["proof (state)\nthis:\n  num_params pr \\<le> length I\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_round_floats_of_normed prec I a t)", "have \"range_tm e t =\n    interval_of (insertion e (map_poly real_of_float pl)) +\n    (interval_of (insertion e (map_poly real_of_float pr)) + real_interval err)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range_tm e t =\n    interval_of (insertion e (map_poly real_of_float pl)) +\n    (interval_of (insertion e (map_poly real_of_float pr)) +\n     real_interval err)", "by (auto simp: t_decomp range_tm_def ins ac_simps interval_of_plus)"], ["proof (state)\nthis:\n  range_tm e t =\n  interval_of (insertion e (map_poly real_of_float pl)) +\n  (interval_of (insertion e (map_poly real_of_float pr)) +\n   real_interval err)\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_round_floats_of_normed prec I a t)", "also"], ["proof (state)\nthis:\n  range_tm e t =\n  interval_of (insertion e (map_poly real_of_float pl)) +\n  (interval_of (insertion e (map_poly real_of_float pr)) +\n   real_interval err)\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_round_floats_of_normed prec I a t)", "have \"set_of \\<dots> \\<subseteq> set_of (interval_of (insertion e pl)) +\n    set_of (real_interval (round_interval prec (err + compute_bound_poly prec pr I a)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of\n     (interval_of (insertion e (map_poly real_of_float pl)) +\n      (interval_of (insertion e (map_poly real_of_float pr)) +\n       real_interval err))\n    \\<subseteq> set_of\n                 (interval_of (insertion e (map_poly real_of_float pl))) +\n                set_of\n                 (real_interval\n                   (round_interval prec\n                     (err +\n                      compute_bound_poly prec (map_poly interval_of pr) I\n                       a)))", "unfolding set_of_plus real_interval_plus add.commute[of err]"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (interval_of (insertion e (map_poly real_of_float pl))) +\n    (set_of (interval_of (insertion e (map_poly real_of_float pr))) +\n     set_of (real_interval err))\n    \\<subseteq> set_of\n                 (interval_of (insertion e (map_poly real_of_float pl))) +\n                set_of\n                 (real_interval\n                   (round_interval prec\n                     (compute_bound_poly prec (map_poly interval_of pr) I\n                       a +\n                      err)))", "apply (rule set_plus_mono2[OF order_refl])"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (interval_of (insertion e (map_poly real_of_float pr))) +\n    set_of (real_interval err)\n    \\<subseteq> set_of\n                 (real_interval\n                   (round_interval prec\n                     (compute_bound_poly prec (map_poly interval_of pr) I\n                       a +\n                      err)))", "apply (rule order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. set_of (interval_of (insertion e (map_poly real_of_float pr))) +\n    set_of (real_interval err)\n    \\<subseteq> ?y3\n 2. ?y3\n    \\<subseteq> set_of\n                 (real_interval\n                   (round_interval prec\n                     (compute_bound_poly prec (map_poly interval_of pr) I\n                       a +\n                      err)))", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. ?y3\n    \\<subseteq> set_of\n                 (real_interval\n                   (round_interval prec\n                     (compute_bound_poly prec (map_poly interval_of pr) I\n                       a +\n                      err)))\n 2. set_of (interval_of (insertion e (map_poly real_of_float pr))) +\n    set_of (real_interval err)\n    \\<subseteq> ?y3", "apply (rule set_of_real_interval_subset)"], ["proof (prove)\ngoal (2 subgoals):\n 1. set_of ?x6\n    \\<subseteq> set_of\n                 (round_interval prec\n                   (compute_bound_poly prec (map_poly interval_of pr) I a +\n                    err))\n 2. set_of (interval_of (insertion e (map_poly real_of_float pr))) +\n    set_of (real_interval err)\n    \\<subseteq> set_of (real_interval ?x6)", "apply (rule round_ivl_correct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (interval_of (insertion e (map_poly real_of_float pr))) +\n    set_of (real_interval err)\n    \\<subseteq> set_of\n                 (real_interval\n                   (compute_bound_poly prec (map_poly interval_of pr) I a +\n                    err))", "unfolding set_of_plus real_interval_plus"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (interval_of (insertion e (map_poly real_of_float pr))) +\n    set_of (real_interval err)\n    \\<subseteq> set_of\n                 (real_interval\n                   (compute_bound_poly prec (map_poly interval_of pr) I\n                     a)) +\n                set_of (real_interval err)", "apply (rule set_plus_mono2[OF _ order_refl])"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (interval_of (insertion e (map_poly real_of_float pr)))\n    \\<subseteq> set_of\n                 (real_interval\n                   (compute_bound_poly prec (map_poly interval_of pr) I a))", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in>\\<^sub>i interval_of\n                        (insertion e\n                          (map_poly real_of_float pr)) \\<Longrightarrow>\n       x \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of pr) I a", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. insertion e (map_poly real_of_float pr)\n    \\<in>\\<^sub>r compute_bound_poly prec (map_poly interval_of pr) I a", "apply (rule compute_bound_poly_correct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. num_params pr \\<le> length I\n 2. develops_at_within e a I", "apply (rule params_pr)"], ["proof (prove)\ngoal (1 subgoal):\n 1. develops_at_within e a I", "by (rule assms)"], ["proof (state)\nthis:\n  set_of\n   (interval_of (insertion e (map_poly real_of_float pl)) +\n    (interval_of (insertion e (map_poly real_of_float pr)) +\n     real_interval err))\n  \\<subseteq> set_of\n               (interval_of (insertion e (map_poly real_of_float pl))) +\n              set_of\n               (real_interval\n                 (round_interval prec\n                   (err +\n                    compute_bound_poly prec (map_poly interval_of pr) I a)))\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_round_floats_of_normed prec I a t)", "also"], ["proof (state)\nthis:\n  set_of\n   (interval_of (insertion e (map_poly real_of_float pl)) +\n    (interval_of (insertion e (map_poly real_of_float pr)) +\n     real_interval err))\n  \\<subseteq> set_of\n               (interval_of (insertion e (map_poly real_of_float pl))) +\n              set_of\n               (real_interval\n                 (round_interval prec\n                   (err +\n                    compute_bound_poly prec (map_poly interval_of pr) I a)))\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_round_floats_of_normed prec I a t)", "have \"\\<dots> = set_of (range_tm e (tm_round_floats_of_normed prec I a t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (interval_of (insertion e (map_poly real_of_float pl))) +\n    set_of\n     (real_interval\n       (round_interval prec\n         (err + compute_bound_poly prec (map_poly interval_of pr) I a))) =\n    set_of (range_tm e (tm_round_floats_of_normed prec I a t))", "by (simp add: t_decomp split_beta' Let_def p_prec range_tm_def set_of_plus)"], ["proof (state)\nthis:\n  set_of (interval_of (insertion e (map_poly real_of_float pl))) +\n  set_of\n   (real_interval\n     (round_interval prec\n       (err + compute_bound_poly prec (map_poly interval_of pr) I a))) =\n  set_of (range_tm e (tm_round_floats_of_normed prec I a t))\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_round_floats_of_normed prec I a t)", "finally"], ["proof (chain)\npicking this:\n  set_of (range_tm e t)\n  \\<subseteq> set_of (range_tm e (tm_round_floats_of_normed prec I a t))", "show ?thesis"], ["proof (prove)\nusing this:\n  set_of (range_tm e t)\n  \\<subseteq> set_of (range_tm e (tm_round_floats_of_normed prec I a t))\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_round_floats_of_normed prec I a t)", "using assms"], ["proof (prove)\nusing this:\n  set_of (range_tm e t)\n  \\<subseteq> set_of (range_tm e (tm_round_floats_of_normed prec I a t))\n  x \\<in>\\<^sub>i range_tm e t\n  develops_at_within e a I\n  num_params (tm_poly t) \\<le> length I\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_round_floats_of_normed prec I a t)", "by auto"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>i range_tm e (tm_round_floats_of_normed prec I a t)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma num_params_split_by_degree_le: \"num_params (fst (split_by_degree ord x)) \\<le> K\"\n  \"num_params (snd (split_by_degree ord x)) \\<le> K\"\n  if \"num_params x \\<le> K\" for x::\"float poly\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (fst (split_by_degree ord x)) \\<le> K &&&\n    num_params (snd (split_by_degree ord x)) \\<le> K", "using split_by_degree_correct_insertion(3,4)[of ord x, OF surjective_pairing] that"], ["proof (prove)\nusing this:\n  num_params (fst (split_by_degree ord x)) \\<le> num_params x\n  num_params (snd (split_by_degree ord x)) \\<le> num_params x\n  num_params x \\<le> K\n\ngoal (1 subgoal):\n 1. num_params (fst (split_by_degree ord x)) \\<le> K &&&\n    num_params (snd (split_by_degree ord x)) \\<le> K", "by auto"], ["", "lemma num_params_split_by_prec_le: \"num_params (fst (split_by_prec ord x)) \\<le> K\"\n  \"num_params (snd (split_by_prec ord x)) \\<le> K\"\n  if \"num_params x \\<le> K\" for x::\"float poly\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (fst (split_by_prec ord x)) \\<le> K &&&\n    num_params (snd (split_by_prec ord x)) \\<le> K", "using split_by_prec_correct_insertion(2,3)[of ord x, OF surjective_pairing] that"], ["proof (prove)\nusing this:\n  num_params (fst (split_by_prec ord x)) \\<le> num_params x\n  num_params (snd (split_by_prec ord x)) \\<le> num_params x\n  num_params x \\<le> K\n\ngoal (1 subgoal):\n 1. num_params (fst (split_by_prec ord x)) \\<le> K &&&\n    num_params (snd (split_by_prec ord x)) \\<le> K", "by auto"], ["", "lemma num_params_tm_norm'_le:\n  \"num_params (tm_poly (tm_round_floats_of_normed prec I a t)) \\<le> X\"\n  if \"num_params (tm_poly t) \\<le> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_round_floats_of_normed prec I a t)) \\<le> X", "using that"], ["proof (prove)\nusing this:\n  num_params (tm_poly t) \\<le> X\n\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_round_floats_of_normed prec I a t)) \\<le> X", "by (cases t) (auto simp: tm_norm'.simps split_beta' Let_def intro!: num_params_split_by_prec_le)"], ["", "lemma tm_round_floats_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t\" \"develops_at_within e a I\" \"num_params (tm_poly t) \\<le> length I\"\n  shows \"x \\<in>\\<^sub>i range_tm e (tm_round_floats prec I a t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_round_floats prec I a t)", "by (auto intro!: tm_round_floats_of_normed_range assms tm_norm_poly_range num_params_tm_norm_poly_le)"], ["", "lemma num_params_tm_lower_order_of_normed_le: \"num_params (tm_poly (tm_lower_order_of_normed prec ord I a t)) \\<le> X\"\n  if \"num_params (tm_poly t) \\<le> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_lower_order_of_normed prec ord I a t)) \\<le> X", "using that"], ["proof (prove)\nusing this:\n  num_params (tm_poly t) \\<le> X\n\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_lower_order_of_normed prec ord I a t)) \\<le> X", "apply (cases t)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>num_params (tm_poly t) \\<le> X;\n        t = TaylorModel x1 x2\\<rbrakk>\n       \\<Longrightarrow> num_params\n                          (tm_poly\n                            (tm_lower_order_of_normed prec ord I a t))\n                         \\<le> X", "apply (auto simp: split_beta' Let_def intro!: num_params_polynate[THEN order_trans])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>num_params x1 \\<le> X; t = TaylorModel x1 x2\\<rbrakk>\n       \\<Longrightarrow> num_params (fst (split_by_degree ord x1)) \\<le> X", "apply (rule order_trans[OF split_by_degree_correct(3)])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 x2.\n       \\<lbrakk>num_params x1 \\<le> X; t = TaylorModel x1 x2\\<rbrakk>\n       \\<Longrightarrow> (fst (split_by_degree ord x1), ?r3 x1 x2) =\n                         split_by_degree (?ord3 x1 x2) (?p3 x1 x2)\n 2. \\<And>x1 x2.\n       \\<lbrakk>num_params x1 \\<le> X; t = TaylorModel x1 x2\\<rbrakk>\n       \\<Longrightarrow> num_params (?p3 x1 x2) \\<le> X", "by (auto simp: prod_eq_iff)"], ["", "lemma tm_norm'_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t\" \"develops_at_within e a I\" \"num_params (tm_poly t) \\<le> length I\"\n  shows \"x \\<in>\\<^sub>i range_tm e (tm_norm' prec ord I a t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_norm' prec ord I a t)", "by (auto intro!: tm_round_floats_of_normed_range tm_lower_order_of_normed_range assms\n      num_params_tm_norm_poly_le num_params_tm_lower_order_of_normed_le\n      simp: tm_norm'.simps)"], ["", "lemma num_params_tm_norm':\n  \"num_params (tm_poly (tm_norm' prec ord I a t)) \\<le> X\"\n  if \"num_params (tm_poly t) \\<le> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_norm' prec ord I a t)) \\<le> X", "using that"], ["proof (prove)\nusing this:\n  num_params (tm_poly t) \\<le> X\n\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_norm' prec ord I a t)) \\<le> X", "by (cases t) (auto simp: tm_norm'.simps split_beta' Let_def\n      intro!: num_params_tm_norm'_le num_params_split_by_prec_le num_params_split_by_degree_le)"], ["", "lemma tm_norm_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t\" \"develops_at_within e a I\" \"num_params (tm_poly t) \\<le> length I\"\n  shows \"x \\<in>\\<^sub>i range_tm e (tm_norm prec ord I a t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_norm prec ord I a t)", "by (auto intro!: assms tm_norm'_range tm_norm_poly_range num_params_tm_norm_poly_le)"], ["", "lemmas [simp del] = tm_norm.simps"], ["", "lemma tm_neg_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t\"\n  shows \"- x \\<in>\\<^sub>i range_tm e (tm_neg t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - x \\<in>\\<^sub>i range_tm e (tm_neg t)", "using assms"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>i range_tm e t\n\ngoal (1 subgoal):\n 1. - x \\<in>\\<^sub>i range_tm e (tm_neg t)", "by (cases t)\n    (auto simp: set_of_eq range_tm_def interval_of_plus interval_of_uminus map_poly_homo_polyneg)"], ["", "lemmas [simp del] = tm_neg.simps"], ["", "lemma tm_bound_tm_add[simp]: \"tm_bound (tm_add t1 t2) = tm_bound t1 + tm_bound t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tm_bound (tm_add t1 t2) = tm_bound t1 + tm_bound t2", "by (cases t1; cases t2) (auto simp: )"], ["", "lemma interval_of_add: \"interval_of (a + b) = interval_of a + interval_of b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interval_of (a + b) = interval_of a + interval_of b", "by (auto intro!: interval_eqI)"], ["", "lemma tm_add_range:\n  \"x + y \\<in>\\<^sub>i range_tm e (tm_add t1 t2)\"\n  if \"x \\<in>\\<^sub>i range_tm e t1\"\n    \"y \\<in>\\<^sub>i range_tm e t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x + y \\<in>\\<^sub>i range_tm e (tm_add t1 t2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x + y \\<in>\\<^sub>i range_tm e (tm_add t1 t2)", "from range_tmD[OF that(1)] range_tmD[OF that(2)]"], ["proof (chain)\npicking this:\n  x \\<in>\\<^sub>i interval_of\n                   (insertion e (map_poly real_of_float (tm_poly t1))) +\n                  real_interval (tm_bound t1)\n  y \\<in>\\<^sub>i interval_of\n                   (insertion e (map_poly real_of_float (tm_poly t2))) +\n                  real_interval (tm_bound t2)", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>i interval_of\n                   (insertion e (map_poly real_of_float (tm_poly t1))) +\n                  real_interval (tm_bound t1)\n  y \\<in>\\<^sub>i interval_of\n                   (insertion e (map_poly real_of_float (tm_poly t2))) +\n                  real_interval (tm_bound t2)\n\ngoal (1 subgoal):\n 1. x + y \\<in>\\<^sub>i range_tm e (tm_add t1 t2)", "apply (cases t1; cases t2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 x1a x2a.\n       \\<lbrakk>x \\<in>\\<^sub>i interval_of\n                                 (insertion e\n                                   (map_poly real_of_float (tm_poly t1))) +\n                                real_interval (tm_bound t1);\n        y \\<in>\\<^sub>i interval_of\n                         (insertion e\n                           (map_poly real_of_float (tm_poly t2))) +\n                        real_interval (tm_bound t2);\n        t1 = TaylorModel x1 x2;\n        x \\<in>\\<^sub>i interval_of\n                         (insertion e\n                           (map_poly real_of_float (tm_poly t1))) +\n                        real_interval (tm_bound t1);\n        y \\<in>\\<^sub>i interval_of\n                         (insertion e\n                           (map_poly real_of_float (tm_poly t2))) +\n                        real_interval (tm_bound t2);\n        t2 = TaylorModel x1a x2a\\<rbrakk>\n       \\<Longrightarrow> x + y \\<in>\\<^sub>i range_tm e (tm_add t1 t2)", "apply (rule range_tmI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 x1a x2a.\n       \\<lbrakk>x \\<in>\\<^sub>i interval_of\n                                 (insertion e\n                                   (map_poly real_of_float (tm_poly t1))) +\n                                real_interval (tm_bound t1);\n        y \\<in>\\<^sub>i interval_of\n                         (insertion e\n                           (map_poly real_of_float (tm_poly t2))) +\n                        real_interval (tm_bound t2);\n        t1 = TaylorModel x1 x2;\n        x \\<in>\\<^sub>i interval_of\n                         (insertion e\n                           (map_poly real_of_float (tm_poly t1))) +\n                        real_interval (tm_bound t1);\n        y \\<in>\\<^sub>i interval_of\n                         (insertion e\n                           (map_poly real_of_float (tm_poly t2))) +\n                        real_interval (tm_bound t2);\n        t2 = TaylorModel x1a x2a\\<rbrakk>\n       \\<Longrightarrow> x + y\n                         \\<in>\\<^sub>i interval_of\n  (insertion e (map_poly real_of_float (tm_poly (tm_add t1 t2)))) +\n real_interval (tm_bound (tm_add t1 t2))", "by (auto simp: map_poly_homo_polyadd real_interval_plus ac_simps interval_of_add\n        num_params_polyadd insertion_polyadd set_of_eq\n        dest: less_le_trans[OF _ num_params_polyadd])"], ["proof (state)\nthis:\n  x + y \\<in>\\<^sub>i range_tm e (tm_add t1 t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [simp del] = tm_add.simps"], ["", "lemma tm_sub_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t1\"\n  assumes \"y \\<in>\\<^sub>i range_tm e t2\"\n  shows \"x - y \\<in>\\<^sub>i range_tm e (tm_sub t1 t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x - y \\<in>\\<^sub>i range_tm e (tm_sub t1 t2)", "using tm_add_range[OF assms(1) tm_neg_range[OF assms(2)]]"], ["proof (prove)\nusing this:\n  x + - y \\<in>\\<^sub>i range_tm e (tm_add t1 (tm_neg t2))\n\ngoal (1 subgoal):\n 1. x - y \\<in>\\<^sub>i range_tm e (tm_sub t1 t2)", "by simp"], ["", "lemmas [simp del] = tm_sub.simps"], ["", "lemma set_of_intervalI: \"set_of (interval_of y) \\<subseteq> set_of Y\" if \"y \\<in>\\<^sub>i Y\" for y::\"'a::order\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (interval_of y) \\<subseteq> set_of Y", "using that"], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>i Y\n\ngoal (1 subgoal):\n 1. set_of (interval_of y) \\<subseteq> set_of Y", "by (auto simp: set_of_eq)"], ["", "lemma set_of_real_intervalI: \"set_of (interval_of y) \\<subseteq> set_of (real_interval Y)\" if \"y \\<in>\\<^sub>r Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (interval_of y) \\<subseteq> set_of (real_interval Y)", "using that"], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>r Y\n\ngoal (1 subgoal):\n 1. set_of (interval_of y) \\<subseteq> set_of (real_interval Y)", "by (auto simp: set_of_eq)"], ["", "lemma tm_mul_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t1\"\n  assumes \"y \\<in>\\<^sub>i range_tm e t2\"\n  assumes dev: \"develops_at_within e a I\"\n  assumes params: \"num_params (tm_poly t1) \\<le> length I\" \"num_params (tm_poly t2) \\<le> length I\"\n  shows \"x * y \\<in>\\<^sub>i range_tm e (tm_mul prec ord I a t1 t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * y \\<in>\\<^sub>i range_tm e (tm_mul prec ord I a t1 t2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x * y \\<in>\\<^sub>i range_tm e (tm_mul prec ord I a t1 t2)", "define p1 where \"p1 = tm_poly t1\""], ["proof (state)\nthis:\n  p1 = tm_poly t1\n\ngoal (1 subgoal):\n 1. x * y \\<in>\\<^sub>i range_tm e (tm_mul prec ord I a t1 t2)", "define p2 where \"p2 = tm_poly t2\""], ["proof (state)\nthis:\n  p2 = tm_poly t2\n\ngoal (1 subgoal):\n 1. x * y \\<in>\\<^sub>i range_tm e (tm_mul prec ord I a t1 t2)", "define e1 where \"e1 = tm_bound t1\""], ["proof (state)\nthis:\n  e1 = tm_bound t1\n\ngoal (1 subgoal):\n 1. x * y \\<in>\\<^sub>i range_tm e (tm_mul prec ord I a t1 t2)", "define e2 where \"e2 = tm_bound t2\""], ["proof (state)\nthis:\n  e2 = tm_bound t2\n\ngoal (1 subgoal):\n 1. x * y \\<in>\\<^sub>i range_tm e (tm_mul prec ord I a t1 t2)", "have t1_def: \"t1 = TaylorModel p1 e1\" and t2_def: \"t2 = TaylorModel p2 e2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t1 = TaylorModel p1 e1 &&& t2 = TaylorModel p2 e2", "by (auto simp: p1_def e1_def p2_def e2_def)"], ["proof (state)\nthis:\n  t1 = TaylorModel p1 e1\n  t2 = TaylorModel p2 e2\n\ngoal (1 subgoal):\n 1. x * y \\<in>\\<^sub>i range_tm e (tm_mul prec ord I a t1 t2)", "from params"], ["proof (chain)\npicking this:\n  num_params (tm_poly t1) \\<le> length I\n  num_params (tm_poly t2) \\<le> length I", "have params: \"num_params p1 \\<le> length I\" \"num_params p2 \\<le> length I\""], ["proof (prove)\nusing this:\n  num_params (tm_poly t1) \\<le> length I\n  num_params (tm_poly t2) \\<le> length I\n\ngoal (1 subgoal):\n 1. num_params p1 \\<le> length I &&& num_params p2 \\<le> length I", "by (auto simp: p1_def p2_def)"], ["proof (state)\nthis:\n  num_params p1 \\<le> length I\n  num_params p2 \\<le> length I\n\ngoal (1 subgoal):\n 1. x * y \\<in>\\<^sub>i range_tm e (tm_mul prec ord I a t1 t2)", "from range_tmD[OF assms(1)]"], ["proof (chain)\npicking this:\n  x \\<in>\\<^sub>i interval_of\n                   (insertion e (map_poly real_of_float (tm_poly t1))) +\n                  real_interval (tm_bound t1)", "obtain xe where x: \"x = insertion e p1 + xe\"\n    (is \"_ = ?x' + _\")\n    and xe: \"xe \\<in>\\<^sub>r e1\""], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>i interval_of\n                   (insertion e (map_poly real_of_float (tm_poly t1))) +\n                  real_interval (tm_bound t1)\n\ngoal (1 subgoal):\n 1. (\\<And>xe.\n        \\<lbrakk>x = insertion e (map_poly real_of_float p1) + xe;\n         xe \\<in>\\<^sub>r e1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: p1_def e1_def elim!: plus_in_intervalE)"], ["proof (state)\nthis:\n  x = insertion e (map_poly real_of_float p1) + xe\n  xe \\<in>\\<^sub>r e1\n\ngoal (1 subgoal):\n 1. x * y \\<in>\\<^sub>i range_tm e (tm_mul prec ord I a t1 t2)", "from range_tmD[OF assms(2)]"], ["proof (chain)\npicking this:\n  y \\<in>\\<^sub>i interval_of\n                   (insertion e (map_poly real_of_float (tm_poly t2))) +\n                  real_interval (tm_bound t2)", "obtain ye where y: \"y = insertion e p2 + ye\"\n    (is \"_ = ?y' + _\")\n    and ye: \"ye \\<in>\\<^sub>r e2\""], ["proof (prove)\nusing this:\n  y \\<in>\\<^sub>i interval_of\n                   (insertion e (map_poly real_of_float (tm_poly t2))) +\n                  real_interval (tm_bound t2)\n\ngoal (1 subgoal):\n 1. (\\<And>ye.\n        \\<lbrakk>y = insertion e (map_poly real_of_float p2) + ye;\n         ye \\<in>\\<^sub>r e2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: p2_def e2_def elim!: plus_in_intervalE)"], ["proof (state)\nthis:\n  y = insertion e (map_poly real_of_float p2) + ye\n  ye \\<in>\\<^sub>r e2\n\ngoal (1 subgoal):\n 1. x * y \\<in>\\<^sub>i range_tm e (tm_mul prec ord I a t1 t2)", "have \"x * y = insertion e (p1 *\\<^sub>p p2) + (xe * ?y' + ?x' * ye + xe * ye)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * y =\n    insertion e (map_poly real_of_float (p1 *\\<^sub>p p2)) +\n    (xe * insertion e (map_poly real_of_float p2) +\n     insertion e (map_poly real_of_float p1) * ye +\n     xe * ye)", "by (simp add: algebra_simps x y map_poly_homo_polymul)"], ["proof (state)\nthis:\n  x * y =\n  insertion e (map_poly real_of_float (p1 *\\<^sub>p p2)) +\n  (xe * insertion e (map_poly real_of_float p2) +\n   insertion e (map_poly real_of_float p1) * ye +\n   xe * ye)\n\ngoal (1 subgoal):\n 1. x * y \\<in>\\<^sub>i range_tm e (tm_mul prec ord I a t1 t2)", "also"], ["proof (state)\nthis:\n  x * y =\n  insertion e (map_poly real_of_float (p1 *\\<^sub>p p2)) +\n  (xe * insertion e (map_poly real_of_float p2) +\n   insertion e (map_poly real_of_float p1) * ye +\n   xe * ye)\n\ngoal (1 subgoal):\n 1. x * y \\<in>\\<^sub>i range_tm e (tm_mul prec ord I a t1 t2)", "have \"\\<dots> \\<in>\\<^sub>i range_tm e (tm_mul prec ord I a t1 t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insertion e (map_poly real_of_float (p1 *\\<^sub>p p2)) +\n    (xe * insertion e (map_poly real_of_float p2) +\n     insertion e (map_poly real_of_float p1) * ye +\n     xe * ye)\n    \\<in>\\<^sub>i range_tm e (tm_mul prec ord I a t1 t2)", "by (auto intro!: tm_round_floats_of_normed_range assms tm_norm'_range\n        simp: split_beta' Let_def t1_def t2_def)\n     (auto simp: range_tm_def real_interval_plus real_interval_times intro!: plus_in_intervalI\n        times_in_intervalI xe ye params compute_bound_poly_correct dev\n        num_params_polymul[THEN order_trans])"], ["proof (state)\nthis:\n  insertion e (map_poly real_of_float (p1 *\\<^sub>p p2)) +\n  (xe * insertion e (map_poly real_of_float p2) +\n   insertion e (map_poly real_of_float p1) * ye +\n   xe * ye)\n  \\<in>\\<^sub>i range_tm e (tm_mul prec ord I a t1 t2)\n\ngoal (1 subgoal):\n 1. x * y \\<in>\\<^sub>i range_tm e (tm_mul prec ord I a t1 t2)", "finally"], ["proof (chain)\npicking this:\n  x * y \\<in>\\<^sub>i range_tm e (tm_mul prec ord I a t1 t2)", "show ?thesis"], ["proof (prove)\nusing this:\n  x * y \\<in>\\<^sub>i range_tm e (tm_mul prec ord I a t1 t2)\n\ngoal (1 subgoal):\n 1. x * y \\<in>\\<^sub>i range_tm e (tm_mul prec ord I a t1 t2)", "."], ["proof (state)\nthis:\n  x * y \\<in>\\<^sub>i range_tm e (tm_mul prec ord I a t1 t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma num_params_tm_mul_le:\n  \"num_params (tm_poly (tm_mul prec ord I a t1 t2)) \\<le> X\"\n  if \"num_params (tm_poly t1) \\<le> X\"\n    \"num_params (tm_poly t2) \\<le> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_mul prec ord I a t1 t2)) \\<le> X", "using that"], ["proof (prove)\nusing this:\n  num_params (tm_poly t1) \\<le> X\n  num_params (tm_poly t2) \\<le> X\n\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_mul prec ord I a t1 t2)) \\<le> X", "by (cases t1; cases t2)\n     (auto simp: intro!: num_params_tm_norm' num_params_polymul[THEN order_trans])"], ["", "lemmas [simp del] = tm_pow.simps\\<comment> \\<open>TODO: make a systematic decision\\<close>"], ["", "lemma\n  shows tm_pow_range: \"num_params (tm_poly t) \\<le> length I \\<Longrightarrow>\n      develops_at_within e a I \\<Longrightarrow>\n      x \\<in>\\<^sub>i range_tm e t \\<Longrightarrow>\n      x ^ n \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a t n)\"\n    and num_params_tm_pow_le[THEN order_trans]:\n      \"num_params (tm_poly (tm_pow prec ord I a t n)) \\<le> num_params (tm_poly t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>num_params (tm_poly t) \\<le> length I;\n      develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n     \\<Longrightarrow> x ^ n\n                       \\<in>\\<^sub>i range_tm e\n(tm_pow prec ord I a t n)) &&&\n    num_params (tm_poly (tm_pow prec ord I a t n))\n    \\<le> num_params (tm_poly t)", "unfolding atomize_conj atomize_imp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (num_params (tm_poly t) \\<le> length I \\<longrightarrow>\n     develops_at_within e a I \\<longrightarrow>\n     x \\<in>\\<^sub>i range_tm e t \\<longrightarrow>\n     x ^ n \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a t n)) \\<and>\n    num_params (tm_poly (tm_pow prec ord I a t n))\n    \\<le> num_params (tm_poly t)", "proof(induction n arbitrary: x t rule: nat_less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n x t.\n       \\<forall>m<n.\n          \\<forall>x xa.\n             (num_params (tm_poly xa) \\<le> length I \\<longrightarrow>\n              develops_at_within e a I \\<longrightarrow>\n              x \\<in>\\<^sub>i range_tm e xa \\<longrightarrow>\n              x ^ m\n              \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a xa m)) \\<and>\n             num_params (tm_poly (tm_pow prec ord I a xa m))\n             \\<le> num_params (tm_poly xa) \\<Longrightarrow>\n       (num_params (tm_poly t) \\<le> length I \\<longrightarrow>\n        develops_at_within e a I \\<longrightarrow>\n        x \\<in>\\<^sub>i range_tm e t \\<longrightarrow>\n        x ^ n \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a t n)) \\<and>\n       num_params (tm_poly (tm_pow prec ord I a t n))\n       \\<le> num_params (tm_poly t)", "case (1 n)"], ["proof (state)\nthis:\n  \\<forall>m<n.\n     \\<forall>x xa.\n        (num_params (tm_poly xa) \\<le> length I \\<longrightarrow>\n         develops_at_within e a I \\<longrightarrow>\n         x \\<in>\\<^sub>i range_tm e xa \\<longrightarrow>\n         x ^ m \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a xa m)) \\<and>\n        num_params (tm_poly (tm_pow prec ord I a xa m))\n        \\<le> num_params (tm_poly xa)\n\ngoal (1 subgoal):\n 1. \\<And>n x t.\n       \\<forall>m<n.\n          \\<forall>x xa.\n             (num_params (tm_poly xa) \\<le> length I \\<longrightarrow>\n              develops_at_within e a I \\<longrightarrow>\n              x \\<in>\\<^sub>i range_tm e xa \\<longrightarrow>\n              x ^ m\n              \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a xa m)) \\<and>\n             num_params (tm_poly (tm_pow prec ord I a xa m))\n             \\<le> num_params (tm_poly xa) \\<Longrightarrow>\n       (num_params (tm_poly t) \\<le> length I \\<longrightarrow>\n        develops_at_within e a I \\<longrightarrow>\n        x \\<in>\\<^sub>i range_tm e t \\<longrightarrow>\n        x ^ n \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a t n)) \\<and>\n       num_params (tm_poly (tm_pow prec ord I a t n))\n       \\<le> num_params (tm_poly t)", "note IH1 = 1(1)[rule_format, THEN conjunct1, rule_format]"], ["proof (state)\nthis:\n  \\<lbrakk>?m < n; num_params (tm_poly ?xa) \\<le> length I;\n   develops_at_within e a I; ?x \\<in>\\<^sub>i range_tm e ?xa\\<rbrakk>\n  \\<Longrightarrow> ?x ^ ?m\n                    \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a ?xa ?m)\n\ngoal (1 subgoal):\n 1. \\<And>n x t.\n       \\<forall>m<n.\n          \\<forall>x xa.\n             (num_params (tm_poly xa) \\<le> length I \\<longrightarrow>\n              develops_at_within e a I \\<longrightarrow>\n              x \\<in>\\<^sub>i range_tm e xa \\<longrightarrow>\n              x ^ m\n              \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a xa m)) \\<and>\n             num_params (tm_poly (tm_pow prec ord I a xa m))\n             \\<le> num_params (tm_poly xa) \\<Longrightarrow>\n       (num_params (tm_poly t) \\<le> length I \\<longrightarrow>\n        develops_at_within e a I \\<longrightarrow>\n        x \\<in>\\<^sub>i range_tm e t \\<longrightarrow>\n        x ^ n \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a t n)) \\<and>\n       num_params (tm_poly (tm_pow prec ord I a t n))\n       \\<le> num_params (tm_poly t)", "note IH2 = 1(1)[rule_format, THEN conjunct2, THEN order_trans]"], ["proof (state)\nthis:\n  \\<lbrakk>?m2 < n; num_params (tm_poly ?xa2) \\<le> ?z\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly (tm_pow prec ord I a ?xa2 ?m2))\n                    \\<le> ?z\n\ngoal (1 subgoal):\n 1. \\<And>n x t.\n       \\<forall>m<n.\n          \\<forall>x xa.\n             (num_params (tm_poly xa) \\<le> length I \\<longrightarrow>\n              develops_at_within e a I \\<longrightarrow>\n              x \\<in>\\<^sub>i range_tm e xa \\<longrightarrow>\n              x ^ m\n              \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a xa m)) \\<and>\n             num_params (tm_poly (tm_pow prec ord I a xa m))\n             \\<le> num_params (tm_poly xa) \\<Longrightarrow>\n       (num_params (tm_poly t) \\<le> length I \\<longrightarrow>\n        develops_at_within e a I \\<longrightarrow>\n        x \\<in>\\<^sub>i range_tm e t \\<longrightarrow>\n        x ^ n \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a t n)) \\<and>\n       num_params (tm_poly (tm_pow prec ord I a t n))\n       \\<le> num_params (tm_poly t)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (num_params (tm_poly t) \\<le> length I \\<longrightarrow>\n     develops_at_within e a I \\<longrightarrow>\n     x \\<in>\\<^sub>i range_tm e t \\<longrightarrow>\n     x ^ n \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a t n)) \\<and>\n    num_params (tm_poly (tm_pow prec ord I a t n))\n    \\<le> num_params (tm_poly t)", "proof (cases n)"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    (num_params (tm_poly t) \\<le> length I \\<longrightarrow>\n     develops_at_within e a I \\<longrightarrow>\n     x \\<in>\\<^sub>i range_tm e t \\<longrightarrow>\n     x ^ n \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a t n)) \\<and>\n    num_params (tm_poly (tm_pow prec ord I a t n))\n    \\<le> num_params (tm_poly t)\n 2. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       (num_params (tm_poly t) \\<le> length I \\<longrightarrow>\n        develops_at_within e a I \\<longrightarrow>\n        x \\<in>\\<^sub>i range_tm e t \\<longrightarrow>\n        x ^ n \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a t n)) \\<and>\n       num_params (tm_poly (tm_pow prec ord I a t n))\n       \\<le> num_params (tm_poly t)", "case 0"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    (num_params (tm_poly t) \\<le> length I \\<longrightarrow>\n     develops_at_within e a I \\<longrightarrow>\n     x \\<in>\\<^sub>i range_tm e t \\<longrightarrow>\n     x ^ n \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a t n)) \\<and>\n    num_params (tm_poly (tm_pow prec ord I a t n))\n    \\<le> num_params (tm_poly t)\n 2. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       (num_params (tm_poly t) \\<le> length I \\<longrightarrow>\n        develops_at_within e a I \\<longrightarrow>\n        x \\<in>\\<^sub>i range_tm e t \\<longrightarrow>\n        x ^ n \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a t n)) \\<and>\n       num_params (tm_poly (tm_pow prec ord I a t n))\n       \\<le> num_params (tm_poly t)", "then"], ["proof (chain)\npicking this:\n  n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. (num_params (tm_poly t) \\<le> length I \\<longrightarrow>\n     develops_at_within e a I \\<longrightarrow>\n     x \\<in>\\<^sub>i range_tm e t \\<longrightarrow>\n     x ^ n \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a t n)) \\<and>\n    num_params (tm_poly (tm_pow prec ord I a t n))\n    \\<le> num_params (tm_poly t)", "by (auto simp: tm_const_def range_tm_def set_of_eq tm_pow.simps)"], ["proof (state)\nthis:\n  (num_params (tm_poly t) \\<le> length I \\<longrightarrow>\n   develops_at_within e a I \\<longrightarrow>\n   x \\<in>\\<^sub>i range_tm e t \\<longrightarrow>\n   x ^ n \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a t n)) \\<and>\n  num_params (tm_poly (tm_pow prec ord I a t n))\n  \\<le> num_params (tm_poly t)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       (num_params (tm_poly t) \\<le> length I \\<longrightarrow>\n        develops_at_within e a I \\<longrightarrow>\n        x \\<in>\\<^sub>i range_tm e t \\<longrightarrow>\n        x ^ n \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a t n)) \\<and>\n       num_params (tm_poly (tm_pow prec ord I a t n))\n       \\<le> num_params (tm_poly t)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       (num_params (tm_poly t) \\<le> length I \\<longrightarrow>\n        develops_at_within e a I \\<longrightarrow>\n        x \\<in>\\<^sub>i range_tm e t \\<longrightarrow>\n        x ^ n \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a t n)) \\<and>\n       num_params (tm_poly (tm_pow prec ord I a t n))\n       \\<le> num_params (tm_poly t)", "case (Suc nat)"], ["proof (state)\nthis:\n  n = Suc nat\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       (num_params (tm_poly t) \\<le> length I \\<longrightarrow>\n        develops_at_within e a I \\<longrightarrow>\n        x \\<in>\\<^sub>i range_tm e t \\<longrightarrow>\n        x ^ n \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a t n)) \\<and>\n       num_params (tm_poly (tm_pow prec ord I a t n))\n       \\<le> num_params (tm_poly t)", "have eq: \"odd nat \\<Longrightarrow> x * x ^ nat = x ^ ((Suc nat) div 2) * x ^ ((Suc nat) div 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. odd nat \\<Longrightarrow>\n    x * x ^ nat = x ^ (Suc nat div 2) * x ^ (Suc nat div 2)", "apply (subst power_add[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. odd nat \\<Longrightarrow>\n    x * x ^ nat = x ^ (Suc nat div 2 + Suc nat div 2)", "unfolding div2_plus_div2"], ["proof (prove)\ngoal (1 subgoal):\n 1. odd nat \\<Longrightarrow> x * x ^ nat = x ^ (Suc nat - Suc nat mod 2)", "by simp"], ["proof (state)\nthis:\n  odd nat \\<Longrightarrow>\n  x * x ^ nat = x ^ (Suc nat div 2) * x ^ (Suc nat div 2)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       (num_params (tm_poly t) \\<le> length I \\<longrightarrow>\n        develops_at_within e a I \\<longrightarrow>\n        x \\<in>\\<^sub>i range_tm e t \\<longrightarrow>\n        x ^ n \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a t n)) \\<and>\n       num_params (tm_poly (tm_pow prec ord I a t n))\n       \\<le> num_params (tm_poly t)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (num_params (tm_poly t) \\<le> length I \\<longrightarrow>\n     develops_at_within e a I \\<longrightarrow>\n     x \\<in>\\<^sub>i range_tm e t \\<longrightarrow>\n     x ^ n \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a t n)) \\<and>\n    num_params (tm_poly (tm_pow prec ord I a t n))\n    \\<le> num_params (tm_poly t)", "unfolding tm_pow.simps Suc"], ["proof (prove)\ngoal (1 subgoal):\n 1. (num_params (tm_poly t) \\<le> length I \\<longrightarrow>\n     develops_at_within e a I \\<longrightarrow>\n     x \\<in>\\<^sub>i range_tm e t \\<longrightarrow>\n     x ^ Suc nat\n     \\<in>\\<^sub>i range_tm e\n                    (if odd (Suc nat)\n                     then tm_mul prec ord I a t (tm_pow prec ord I a t nat)\n                     else let t' = tm_pow prec ord I a t (Suc nat div 2)\n                          in tm_mul prec ord I a t' t')) \\<and>\n    num_params\n     (tm_poly\n       (if odd (Suc nat)\n        then tm_mul prec ord I a t (tm_pow prec ord I a t nat)\n        else let t' = tm_pow prec ord I a t (Suc nat div 2)\n             in tm_mul prec ord I a t' t'))\n    \\<le> num_params (tm_poly t)", "using Suc"], ["proof (prove)\nusing this:\n  n = Suc nat\n\ngoal (1 subgoal):\n 1. (num_params (tm_poly t) \\<le> length I \\<longrightarrow>\n     develops_at_within e a I \\<longrightarrow>\n     x \\<in>\\<^sub>i range_tm e t \\<longrightarrow>\n     x ^ Suc nat\n     \\<in>\\<^sub>i range_tm e\n                    (if odd (Suc nat)\n                     then tm_mul prec ord I a t (tm_pow prec ord I a t nat)\n                     else let t' = tm_pow prec ord I a t (Suc nat div 2)\n                          in tm_mul prec ord I a t' t')) \\<and>\n    num_params\n     (tm_poly\n       (if odd (Suc nat)\n        then tm_mul prec ord I a t (tm_pow prec ord I a t nat)\n        else let t' = tm_pow prec ord I a t (Suc nat div 2)\n             in tm_mul prec ord I a t' t'))\n    \\<le> num_params (tm_poly t)", "apply (auto )"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> x * x ^ nat\n                      \\<in>\\<^sub>i range_tm e\n                                     (tm_mul prec ord I a t\n (tm_pow prec ord I a t nat))\n 2. \\<lbrakk>n = Suc nat; even nat\\<rbrakk>\n    \\<Longrightarrow> num_params\n                       (tm_poly\n                         (tm_mul prec ord I a t\n                           (tm_pow prec ord I a t nat)))\n                      \\<le> num_params (tm_poly t)\n 3. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> x * x ^ nat\n                      \\<in>\\<^sub>i range_tm e\n                                     (let t' =\n      tm_pow prec ord I a t (Suc (nat div 2))\nin tm_mul prec ord I a t' t')\n 4. \\<lbrakk>n = Suc nat; odd nat\\<rbrakk>\n    \\<Longrightarrow> num_params\n                       (tm_poly\n                         (let t' = tm_pow prec ord I a t (Suc (nat div 2))\n                          in tm_mul prec ord I a t' t'))\n                      \\<le> num_params (tm_poly t)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> x * x ^ nat\n                      \\<in>\\<^sub>i range_tm e\n                                     (tm_mul prec ord I a t\n (tm_pow prec ord I a t nat))", "apply (rule tm_mul_range)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> x \\<in>\\<^sub>i range_tm e t\n 2. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> x ^ nat\n                      \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a t nat)\n 3. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> develops_at_within e a I\n 4. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params (tm_poly (tm_pow prec ord I a t nat))\n                      \\<le> length I", "apply (assumption)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> x ^ nat\n                      \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a t nat)\n 2. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> develops_at_within e a I\n 3. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params (tm_poly (tm_pow prec ord I a t nat))\n                      \\<le> length I", "apply (rule IH1)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> nat < n\n 2. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> develops_at_within e a I\n 4. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> x \\<in>\\<^sub>i range_tm e t\n 5. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> develops_at_within e a I\n 6. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params (tm_poly (tm_pow prec ord I a t nat))\n                      \\<le> length I", "apply force"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> develops_at_within e a I\n 3. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> x \\<in>\\<^sub>i range_tm e t\n 4. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> develops_at_within e a I\n 5. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params (tm_poly (tm_pow prec ord I a t nat))\n                      \\<le> length I", "apply assumption+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params (tm_poly (tm_pow prec ord I a t nat))\n                      \\<le> length I", "apply (rule IH2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> nat < n\n 2. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc nat; even nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>n = Suc nat; even nat\\<rbrakk>\n    \\<Longrightarrow> num_params\n                       (tm_poly\n                         (tm_mul prec ord I a t\n                           (tm_pow prec ord I a t nat)))\n                      \\<le> num_params (tm_poly t)\n 2. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> x * x ^ nat\n                      \\<in>\\<^sub>i range_tm e\n                                     (let t' =\n      tm_pow prec ord I a t (Suc (nat div 2))\nin tm_mul prec ord I a t' t')\n 3. \\<lbrakk>n = Suc nat; odd nat\\<rbrakk>\n    \\<Longrightarrow> num_params\n                       (tm_poly\n                         (let t' = tm_pow prec ord I a t (Suc (nat div 2))\n                          in tm_mul prec ord I a t' t'))\n                      \\<le> num_params (tm_poly t)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc nat; even nat\\<rbrakk>\n    \\<Longrightarrow> num_params\n                       (tm_poly\n                         (tm_mul prec ord I a t\n                           (tm_pow prec ord I a t nat)))\n                      \\<le> num_params (tm_poly t)", "apply (rule num_params_tm_mul_le)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = Suc nat; even nat\\<rbrakk>\n    \\<Longrightarrow> num_params (tm_poly t) \\<le> num_params (tm_poly t)\n 2. \\<lbrakk>n = Suc nat; even nat\\<rbrakk>\n    \\<Longrightarrow> num_params (tm_poly (tm_pow prec ord I a t nat))\n                      \\<le> num_params (tm_poly t)", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc nat; even nat\\<rbrakk>\n    \\<Longrightarrow> num_params (tm_poly (tm_pow prec ord I a t nat))\n                      \\<le> num_params (tm_poly t)", "apply (rule IH2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = Suc nat; even nat\\<rbrakk> \\<Longrightarrow> nat < n\n 2. \\<lbrakk>n = Suc nat; even nat\\<rbrakk>\n    \\<Longrightarrow> num_params (tm_poly t) \\<le> num_params (tm_poly t)", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc nat; even nat\\<rbrakk>\n    \\<Longrightarrow> num_params (tm_poly t) \\<le> num_params (tm_poly t)", "apply force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> x * x ^ nat\n                      \\<in>\\<^sub>i range_tm e\n                                     (let t' =\n      tm_pow prec ord I a t (Suc (nat div 2))\nin tm_mul prec ord I a t' t')\n 2. \\<lbrakk>n = Suc nat; odd nat\\<rbrakk>\n    \\<Longrightarrow> num_params\n                       (tm_poly\n                         (let t' = tm_pow prec ord I a t (Suc (nat div 2))\n                          in tm_mul prec ord I a t' t'))\n                      \\<le> num_params (tm_poly t)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> x * x ^ nat\n                      \\<in>\\<^sub>i range_tm e\n                                     (let t' =\n      tm_pow prec ord I a t (Suc (nat div 2))\nin tm_mul prec ord I a t' t')", "apply (auto simp: Let_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> x * x ^ nat\n                      \\<in>\\<^sub>i range_tm e\n                                     (tm_mul prec ord I a\n (tm_pow prec ord I a t (Suc (nat div 2)))\n (tm_pow prec ord I a t (Suc (nat div 2))))", "unfolding eq odd_Suc_div_two"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> x ^ Suc (nat div 2) * x ^ Suc (nat div 2)\n                      \\<in>\\<^sub>i range_tm e\n                                     (tm_mul prec ord I a\n (tm_pow prec ord I a t (Suc (nat div 2)))\n (tm_pow prec ord I a t (Suc (nat div 2))))", "apply (rule tm_mul_range)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> x ^ Suc (nat div 2)\n                      \\<in>\\<^sub>i range_tm e\n                                     (tm_pow prec ord I a t\n (Suc (nat div 2)))\n 2. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> x ^ Suc (nat div 2)\n                      \\<in>\\<^sub>i range_tm e\n                                     (tm_pow prec ord I a t\n (Suc (nat div 2)))\n 3. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> develops_at_within e a I\n 4. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params\n                       (tm_poly (tm_pow prec ord I a t (Suc (nat div 2))))\n                      \\<le> length I\n 5. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params\n                       (tm_poly (tm_pow prec ord I a t (Suc (nat div 2))))\n                      \\<le> length I", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> x ^ Suc (nat div 2)\n                      \\<in>\\<^sub>i range_tm e\n                                     (tm_pow prec ord I a t\n (Suc (nat div 2)))", "by (rule IH1) (auto intro!: tm_mul_range num_params_tm_mul_le IH1 IH2 1\n              simp: Let_def div2_less_self)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> x ^ Suc (nat div 2)\n                      \\<in>\\<^sub>i range_tm e\n                                     (tm_pow prec ord I a t\n (Suc (nat div 2)))\n 2. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> develops_at_within e a I\n 3. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params\n                       (tm_poly (tm_pow prec ord I a t (Suc (nat div 2))))\n                      \\<le> length I\n 4. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params\n                       (tm_poly (tm_pow prec ord I a t (Suc (nat div 2))))\n                      \\<le> length I", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> x ^ Suc (nat div 2)\n                      \\<in>\\<^sub>i range_tm e\n                                     (tm_pow prec ord I a t\n (Suc (nat div 2)))", "by (rule IH1) (auto intro!: tm_mul_range num_params_tm_mul_le IH1 IH2 1\n              simp: Let_def div2_less_self)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> develops_at_within e a I\n 2. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params\n                       (tm_poly (tm_pow prec ord I a t (Suc (nat div 2))))\n                      \\<le> length I\n 3. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params\n                       (tm_poly (tm_pow prec ord I a t (Suc (nat div 2))))\n                      \\<le> length I", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> develops_at_within e a I", "by assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params\n                       (tm_poly (tm_pow prec ord I a t (Suc (nat div 2))))\n                      \\<le> length I\n 2. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params\n                       (tm_poly (tm_pow prec ord I a t (Suc (nat div 2))))\n                      \\<le> length I", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params\n                       (tm_poly (tm_pow prec ord I a t (Suc (nat div 2))))\n                      \\<le> length I", "by (rule IH2) (auto simp: div2_less_self 1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params\n                       (tm_poly (tm_pow prec ord I a t (Suc (nat div 2))))\n                      \\<le> length I", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc nat; odd nat; num_params (tm_poly t) \\<le> length I;\n     develops_at_within e a I; x \\<in>\\<^sub>i range_tm e t\\<rbrakk>\n    \\<Longrightarrow> num_params\n                       (tm_poly (tm_pow prec ord I a t (Suc (nat div 2))))\n                      \\<le> length I", "by (rule IH2) (auto simp: div2_less_self 1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc nat; odd nat\\<rbrakk>\n    \\<Longrightarrow> num_params\n                       (tm_poly\n                         (let t' = tm_pow prec ord I a t (Suc (nat div 2))\n                          in tm_mul prec ord I a t' t'))\n                      \\<le> num_params (tm_poly t)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n = Suc nat; odd nat\\<rbrakk>\n    \\<Longrightarrow> num_params\n                       (tm_poly\n                         (let t' = tm_pow prec ord I a t (Suc (nat div 2))\n                          in tm_mul prec ord I a t' t'))\n                      \\<le> num_params (tm_poly t)", "by (auto simp: Let_def div2_less_self 1 intro!: IH2 num_params_tm_mul_le)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (num_params (tm_poly t) \\<le> length I \\<longrightarrow>\n   develops_at_within e a I \\<longrightarrow>\n   x \\<in>\\<^sub>i range_tm e t \\<longrightarrow>\n   x ^ n \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a t n)) \\<and>\n  num_params (tm_poly (tm_pow prec ord I a t n))\n  \\<le> num_params (tm_poly t)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (num_params (tm_poly t) \\<le> length I \\<longrightarrow>\n   develops_at_within e a I \\<longrightarrow>\n   x \\<in>\\<^sub>i range_tm e t \\<longrightarrow>\n   x ^ n \\<in>\\<^sub>i range_tm e (tm_pow prec ord I a t n)) \\<and>\n  num_params (tm_poly (tm_pow prec ord I a t n))\n  \\<le> num_params (tm_poly t)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma num_params_tm_add_le:\n  \"num_params (tm_poly (tm_add t1 t2)) \\<le> X\"\n  if \"num_params (tm_poly t1) \\<le> X\"\n    \"num_params (tm_poly t2) \\<le> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_add t1 t2)) \\<le> X", "using that"], ["proof (prove)\nusing this:\n  num_params (tm_poly t1) \\<le> X\n  num_params (tm_poly t2) \\<le> X\n\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_add t1 t2)) \\<le> X", "by (cases t1; cases t2)\n     (auto simp: tm_add.simps\n       intro!: num_params_tm_norm' num_params_polymul[THEN order_trans]\n       num_params_polyadd[THEN order_trans])"], ["", "lemma num_params_tm_neg_eq[simp]:\n  \"num_params (tm_poly (tm_neg t1)) = num_params (tm_poly t1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_neg t1)) = num_params (tm_poly t1)", "by (cases t1) (auto simp: tm_neg.simps num_params_polyneg)"], ["", "lemma num_params_tm_sub_le:\n  \"num_params (tm_poly (tm_sub t1 t2)) \\<le> X\"\n  if \"num_params (tm_poly t1) \\<le> X\"\n    \"num_params (tm_poly t2) \\<le> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_sub t1 t2)) \\<le> X", "using that"], ["proof (prove)\nusing this:\n  num_params (tm_poly t1) \\<le> X\n  num_params (tm_poly t2) \\<le> X\n\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_sub t1 t2)) \\<le> X", "by (cases t1; cases t2) (auto simp: tm_sub.simps intro!: num_params_tm_add_le)"], ["", "lemma num_params_eval_poly_le: \"num_params (tm_poly (eval_poly_at_tm prec ord I a p t)) \\<le> x\"\n  if \"num_params (tm_poly t) \\<le> x\" \"num_params p \\<le> max 1 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly (eval_poly_at_tm prec ord I a p t)) \\<le> x", "using that"], ["proof (prove)\nusing this:\n  num_params (tm_poly t) \\<le> x\n  num_params p \\<le> max 1 x\n\ngoal (1 subgoal):\n 1. num_params (tm_poly (eval_poly_at_tm prec ord I a p t)) \\<le> x", "by (induction prec ord I a p t rule: eval_poly_at_tm.induct)\n    (auto intro!: num_params_tm_add_le num_params_tm_sub_le num_params_tm_mul_le\n      num_params_tm_pow_le)"], ["", "lemma eval_poly_at_tm_range:\n  assumes \"num_params p \\<le> 1\"\n  assumes tg_def: \"e' 0 \\<in>\\<^sub>i range_tm e tg\"\n  assumes dev: \"develops_at_within e a I\" and params: \"num_params (tm_poly tg) \\<le> length I\"\n  shows \"insertion e' p \\<in>\\<^sub>i range_tm e (eval_poly_at_tm prec ord I a p tg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insertion e' (map_poly real_of_float p)\n    \\<in>\\<^sub>i range_tm e (eval_poly_at_tm prec ord I a p tg)", "using assms(1) params"], ["proof (prove)\nusing this:\n  num_params p \\<le> 1\n  num_params (tm_poly tg) \\<le> length I\n\ngoal (1 subgoal):\n 1. insertion e' (map_poly real_of_float p)\n    \\<in>\\<^sub>i range_tm e (eval_poly_at_tm prec ord I a p tg)", "proof(induction p)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>num_params (x)\\<^sub>p \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (x)\\<^sub>p)\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (x)\\<^sub>p tg)\n 2. \\<And>x.\n       \\<lbrakk>num_params (poly.Bound x) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (poly.Bound x))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (poly.Bound x) tg)\n 3. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Add p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Add p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Add p1 p2) tg)\n 4. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Sub p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Sub p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Sub p1 p2) tg)\n 5. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Mul p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Mul p1 p2) tg)\n 6. \\<And>p.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Neg p) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Neg p) tg)\n 7. \\<And>p x2a.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Pw p x2a) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Pw p x2a) tg)\n 8. \\<And>p1 x2a p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (CN p1 x2a p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (CN p1 x2a p2) tg)", "case (C c)"], ["proof (state)\nthis:\n  num_params (c)\\<^sub>p \\<le> 1\n  num_params (tm_poly tg) \\<le> length I\n\ngoal (8 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>num_params (x)\\<^sub>p \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (x)\\<^sub>p)\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (x)\\<^sub>p tg)\n 2. \\<And>x.\n       \\<lbrakk>num_params (poly.Bound x) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (poly.Bound x))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (poly.Bound x) tg)\n 3. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Add p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Add p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Add p1 p2) tg)\n 4. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Sub p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Sub p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Sub p1 p2) tg)\n 5. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Mul p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Mul p1 p2) tg)\n 6. \\<And>p.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Neg p) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Neg p) tg)\n 7. \\<And>p x2a.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Pw p x2a) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Pw p x2a) tg)\n 8. \\<And>p1 x2a p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (CN p1 x2a p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (CN p1 x2a p2) tg)", "thus ?case"], ["proof (prove)\nusing this:\n  num_params (c)\\<^sub>p \\<le> 1\n  num_params (tm_poly tg) \\<le> length I\n\ngoal (1 subgoal):\n 1. insertion e' (map_poly real_of_float (c)\\<^sub>p)\n    \\<in>\\<^sub>i range_tm e (eval_poly_at_tm prec ord I a (c)\\<^sub>p tg)", "using tg_def"], ["proof (prove)\nusing this:\n  num_params (c)\\<^sub>p \\<le> 1\n  num_params (tm_poly tg) \\<le> length I\n  e' 0 \\<in>\\<^sub>i range_tm e tg\n\ngoal (1 subgoal):\n 1. insertion e' (map_poly real_of_float (c)\\<^sub>p)\n    \\<in>\\<^sub>i range_tm e (eval_poly_at_tm prec ord I a (c)\\<^sub>p tg)", "by (cases tg) (auto simp: tm_const_def range_tm_def real_interval_zero)"], ["proof (state)\nthis:\n  insertion e' (map_poly real_of_float (c)\\<^sub>p)\n  \\<in>\\<^sub>i range_tm e (eval_poly_at_tm prec ord I a (c)\\<^sub>p tg)\n\ngoal (7 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>num_params (poly.Bound x) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (poly.Bound x))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (poly.Bound x) tg)\n 2. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Add p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Add p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Add p1 p2) tg)\n 3. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Sub p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Sub p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Sub p1 p2) tg)\n 4. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Mul p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Mul p1 p2) tg)\n 5. \\<And>p.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Neg p) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Neg p) tg)\n 6. \\<And>p x2a.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Pw p x2a) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Pw p x2a) tg)\n 7. \\<And>p1 x2a p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (CN p1 x2a p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (CN p1 x2a p2) tg)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>num_params (poly.Bound x) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (poly.Bound x))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (poly.Bound x) tg)\n 2. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Add p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Add p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Add p1 p2) tg)\n 3. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Sub p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Sub p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Sub p1 p2) tg)\n 4. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Mul p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Mul p1 p2) tg)\n 5. \\<And>p.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Neg p) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Neg p) tg)\n 6. \\<And>p x2a.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Pw p x2a) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Pw p x2a) tg)\n 7. \\<And>p1 x2a p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (CN p1 x2a p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (CN p1 x2a p2) tg)", "case (Bound n)"], ["proof (state)\nthis:\n  num_params (poly.Bound n) \\<le> 1\n  num_params (tm_poly tg) \\<le> length I\n\ngoal (7 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>num_params (poly.Bound x) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (poly.Bound x))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (poly.Bound x) tg)\n 2. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Add p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Add p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Add p1 p2) tg)\n 3. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Sub p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Sub p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Sub p1 p2) tg)\n 4. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Mul p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Mul p1 p2) tg)\n 5. \\<And>p.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Neg p) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Neg p) tg)\n 6. \\<And>p x2a.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Pw p x2a) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Pw p x2a) tg)\n 7. \\<And>p1 x2a p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (CN p1 x2a p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (CN p1 x2a p2) tg)", "thus ?case"], ["proof (prove)\nusing this:\n  num_params (poly.Bound n) \\<le> 1\n  num_params (tm_poly tg) \\<le> length I\n\ngoal (1 subgoal):\n 1. insertion e' (map_poly real_of_float (poly.Bound n))\n    \\<in>\\<^sub>i range_tm e\n                   (eval_poly_at_tm prec ord I a (poly.Bound n) tg)", "using tg_def"], ["proof (prove)\nusing this:\n  num_params (poly.Bound n) \\<le> 1\n  num_params (tm_poly tg) \\<le> length I\n  e' 0 \\<in>\\<^sub>i range_tm e tg\n\ngoal (1 subgoal):\n 1. insertion e' (map_poly real_of_float (poly.Bound n))\n    \\<in>\\<^sub>i range_tm e\n                   (eval_poly_at_tm prec ord I a (poly.Bound n) tg)", "by simp"], ["proof (state)\nthis:\n  insertion e' (map_poly real_of_float (poly.Bound n))\n  \\<in>\\<^sub>i range_tm e (eval_poly_at_tm prec ord I a (poly.Bound n) tg)\n\ngoal (6 subgoals):\n 1. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Add p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Add p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Add p1 p2) tg)\n 2. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Sub p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Sub p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Sub p1 p2) tg)\n 3. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Mul p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Mul p1 p2) tg)\n 4. \\<And>p.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Neg p) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Neg p) tg)\n 5. \\<And>p x2a.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Pw p x2a) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Pw p x2a) tg)\n 6. \\<And>p1 x2a p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (CN p1 x2a p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (CN p1 x2a p2) tg)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Add p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Add p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Add p1 p2) tg)\n 2. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Sub p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Sub p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Sub p1 p2) tg)\n 3. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Mul p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Mul p1 p2) tg)\n 4. \\<And>p.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Neg p) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Neg p) tg)\n 5. \\<And>p x2a.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Pw p x2a) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Pw p x2a) tg)\n 6. \\<And>p1 x2a p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (CN p1 x2a p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (CN p1 x2a p2) tg)", "case (Add p1l p1r)"], ["proof (state)\nthis:\n  \\<lbrakk>num_params p1l \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1l)\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1l tg)\n  \\<lbrakk>num_params p1r \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1r)\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1r tg)\n  num_params (Add p1l p1r) \\<le> 1\n  num_params (tm_poly tg) \\<le> length I\n\ngoal (6 subgoals):\n 1. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Add p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Add p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Add p1 p2) tg)\n 2. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Sub p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Sub p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Sub p1 p2) tg)\n 3. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Mul p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Mul p1 p2) tg)\n 4. \\<And>p.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Neg p) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Neg p) tg)\n 5. \\<And>p x2a.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Pw p x2a) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Pw p x2a) tg)\n 6. \\<And>p1 x2a p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (CN p1 x2a p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (CN p1 x2a p2) tg)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>num_params p1l \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1l)\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1l tg)\n  \\<lbrakk>num_params p1r \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1r)\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1r tg)\n  num_params (Add p1l p1r) \\<le> 1\n  num_params (tm_poly tg) \\<le> length I\n\ngoal (1 subgoal):\n 1. insertion e' (map_poly real_of_float (Add p1l p1r))\n    \\<in>\\<^sub>i range_tm e (eval_poly_at_tm prec ord I a (Add p1l p1r) tg)", "using tm_add_range"], ["proof (prove)\nusing this:\n  \\<lbrakk>num_params p1l \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1l)\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1l tg)\n  \\<lbrakk>num_params p1r \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1r)\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1r tg)\n  num_params (Add p1l p1r) \\<le> 1\n  num_params (tm_poly tg) \\<le> length I\n  \\<lbrakk>?x \\<in>\\<^sub>i range_tm ?e ?t1.0;\n   ?y \\<in>\\<^sub>i range_tm ?e ?t2.0\\<rbrakk>\n  \\<Longrightarrow> ?x + ?y \\<in>\\<^sub>i range_tm ?e (tm_add ?t1.0 ?t2.0)\n\ngoal (1 subgoal):\n 1. insertion e' (map_poly real_of_float (Add p1l p1r))\n    \\<in>\\<^sub>i range_tm e (eval_poly_at_tm prec ord I a (Add p1l p1r) tg)", "by (simp add: func_plus)"], ["proof (state)\nthis:\n  insertion e' (map_poly real_of_float (Add p1l p1r))\n  \\<in>\\<^sub>i range_tm e (eval_poly_at_tm prec ord I a (Add p1l p1r) tg)\n\ngoal (5 subgoals):\n 1. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Sub p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Sub p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Sub p1 p2) tg)\n 2. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Mul p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Mul p1 p2) tg)\n 3. \\<And>p.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Neg p) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Neg p) tg)\n 4. \\<And>p x2a.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Pw p x2a) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Pw p x2a) tg)\n 5. \\<And>p1 x2a p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (CN p1 x2a p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (CN p1 x2a p2) tg)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Sub p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Sub p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Sub p1 p2) tg)\n 2. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Mul p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Mul p1 p2) tg)\n 3. \\<And>p.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Neg p) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Neg p) tg)\n 4. \\<And>p x2a.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Pw p x2a) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Pw p x2a) tg)\n 5. \\<And>p1 x2a p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (CN p1 x2a p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (CN p1 x2a p2) tg)", "case (Sub p1l p1r)"], ["proof (state)\nthis:\n  \\<lbrakk>num_params p1l \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1l)\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1l tg)\n  \\<lbrakk>num_params p1r \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1r)\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1r tg)\n  num_params (Sub p1l p1r) \\<le> 1\n  num_params (tm_poly tg) \\<le> length I\n\ngoal (5 subgoals):\n 1. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Sub p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Sub p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Sub p1 p2) tg)\n 2. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Mul p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Mul p1 p2) tg)\n 3. \\<And>p.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Neg p) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Neg p) tg)\n 4. \\<And>p x2a.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Pw p x2a) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Pw p x2a) tg)\n 5. \\<And>p1 x2a p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (CN p1 x2a p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (CN p1 x2a p2) tg)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>num_params p1l \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1l)\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1l tg)\n  \\<lbrakk>num_params p1r \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1r)\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1r tg)\n  num_params (Sub p1l p1r) \\<le> 1\n  num_params (tm_poly tg) \\<le> length I\n\ngoal (1 subgoal):\n 1. insertion e' (map_poly real_of_float (Sub p1l p1r))\n    \\<in>\\<^sub>i range_tm e (eval_poly_at_tm prec ord I a (Sub p1l p1r) tg)", "using tm_sub_range"], ["proof (prove)\nusing this:\n  \\<lbrakk>num_params p1l \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1l)\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1l tg)\n  \\<lbrakk>num_params p1r \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1r)\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1r tg)\n  num_params (Sub p1l p1r) \\<le> 1\n  num_params (tm_poly tg) \\<le> length I\n  \\<lbrakk>?x \\<in>\\<^sub>i range_tm ?e ?t1.0;\n   ?y \\<in>\\<^sub>i range_tm ?e ?t2.0\\<rbrakk>\n  \\<Longrightarrow> ?x - ?y \\<in>\\<^sub>i range_tm ?e (tm_sub ?t1.0 ?t2.0)\n\ngoal (1 subgoal):\n 1. insertion e' (map_poly real_of_float (Sub p1l p1r))\n    \\<in>\\<^sub>i range_tm e (eval_poly_at_tm prec ord I a (Sub p1l p1r) tg)", "by (simp add: fun_diff_def)"], ["proof (state)\nthis:\n  insertion e' (map_poly real_of_float (Sub p1l p1r))\n  \\<in>\\<^sub>i range_tm e (eval_poly_at_tm prec ord I a (Sub p1l p1r) tg)\n\ngoal (4 subgoals):\n 1. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Mul p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Mul p1 p2) tg)\n 2. \\<And>p.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Neg p) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Neg p) tg)\n 3. \\<And>p x2a.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Pw p x2a) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Pw p x2a) tg)\n 4. \\<And>p1 x2a p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (CN p1 x2a p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (CN p1 x2a p2) tg)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Mul p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Mul p1 p2) tg)\n 2. \\<And>p.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Neg p) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Neg p) tg)\n 3. \\<And>p x2a.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Pw p x2a) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Pw p x2a) tg)\n 4. \\<And>p1 x2a p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (CN p1 x2a p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (CN p1 x2a p2) tg)", "case (Mul p1l p1r)"], ["proof (state)\nthis:\n  \\<lbrakk>num_params p1l \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1l)\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1l tg)\n  \\<lbrakk>num_params p1r \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1r)\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1r tg)\n  num_params (Mul p1l p1r) \\<le> 1\n  num_params (tm_poly tg) \\<le> length I\n\ngoal (4 subgoals):\n 1. \\<And>p1 p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (Mul p1 p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Mul p1 p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Mul p1 p2) tg)\n 2. \\<And>p.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Neg p) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Neg p) tg)\n 3. \\<And>p x2a.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Pw p x2a) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Pw p x2a) tg)\n 4. \\<And>p1 x2a p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (CN p1 x2a p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (CN p1 x2a p2) tg)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>num_params p1l \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1l)\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1l tg)\n  \\<lbrakk>num_params p1r \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1r)\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1r tg)\n  num_params (Mul p1l p1r) \\<le> 1\n  num_params (tm_poly tg) \\<le> length I\n\ngoal (1 subgoal):\n 1. insertion e' (map_poly real_of_float (Mul p1l p1r))\n    \\<in>\\<^sub>i range_tm e (eval_poly_at_tm prec ord I a (Mul p1l p1r) tg)", "by (auto intro!: tm_mul_range Mul dev num_params_eval_poly_le)"], ["proof (state)\nthis:\n  insertion e' (map_poly real_of_float (Mul p1l p1r))\n  \\<in>\\<^sub>i range_tm e (eval_poly_at_tm prec ord I a (Mul p1l p1r) tg)\n\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Neg p) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Neg p) tg)\n 2. \\<And>p x2a.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Pw p x2a) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Pw p x2a) tg)\n 3. \\<And>p1 x2a p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (CN p1 x2a p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (CN p1 x2a p2) tg)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Neg p) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Neg p) tg)\n 2. \\<And>p x2a.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Pw p x2a) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Pw p x2a) tg)\n 3. \\<And>p1 x2a p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (CN p1 x2a p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (CN p1 x2a p2) tg)", "case (Neg p1')"], ["proof (state)\nthis:\n  \\<lbrakk>num_params p1' \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1')\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1' tg)\n  num_params (Neg p1') \\<le> 1\n  num_params (tm_poly tg) \\<le> length I\n\ngoal (3 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Neg p) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Neg p))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Neg p) tg)\n 2. \\<And>p x2a.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Pw p x2a) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Pw p x2a) tg)\n 3. \\<And>p1 x2a p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (CN p1 x2a p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (CN p1 x2a p2) tg)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>num_params p1' \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1')\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1' tg)\n  num_params (Neg p1') \\<le> 1\n  num_params (tm_poly tg) \\<le> length I\n\ngoal (1 subgoal):\n 1. insertion e' (map_poly real_of_float (Neg p1'))\n    \\<in>\\<^sub>i range_tm e (eval_poly_at_tm prec ord I a (Neg p1') tg)", "using tm_neg_range"], ["proof (prove)\nusing this:\n  \\<lbrakk>num_params p1' \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1')\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1' tg)\n  num_params (Neg p1') \\<le> 1\n  num_params (tm_poly tg) \\<le> length I\n  ?x \\<in>\\<^sub>i range_tm ?e ?t \\<Longrightarrow>\n  - ?x \\<in>\\<^sub>i range_tm ?e (tm_neg ?t)\n\ngoal (1 subgoal):\n 1. insertion e' (map_poly real_of_float (Neg p1'))\n    \\<in>\\<^sub>i range_tm e (eval_poly_at_tm prec ord I a (Neg p1') tg)", "by (simp add: fun_Compl_def)"], ["proof (state)\nthis:\n  insertion e' (map_poly real_of_float (Neg p1'))\n  \\<in>\\<^sub>i range_tm e (eval_poly_at_tm prec ord I a (Neg p1') tg)\n\ngoal (2 subgoals):\n 1. \\<And>p x2a.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Pw p x2a) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Pw p x2a) tg)\n 2. \\<And>p1 x2a p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (CN p1 x2a p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (CN p1 x2a p2) tg)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p x2a.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Pw p x2a) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Pw p x2a) tg)\n 2. \\<And>p1 x2a p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (CN p1 x2a p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (CN p1 x2a p2) tg)", "case (Pw p1' n)"], ["proof (state)\nthis:\n  \\<lbrakk>num_params p1' \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1')\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1' tg)\n  num_params (Pw p1' n) \\<le> 1\n  num_params (tm_poly tg) \\<le> length I\n\ngoal (2 subgoals):\n 1. \\<And>p x2a.\n       \\<lbrakk>\\<lbrakk>num_params p \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p tg);\n        num_params (Pw p x2a) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e' (map_poly real_of_float (Pw p x2a))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (Pw p x2a) tg)\n 2. \\<And>p1 x2a p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (CN p1 x2a p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (CN p1 x2a p2) tg)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>num_params p1' \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1')\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1' tg)\n  num_params (Pw p1' n) \\<le> 1\n  num_params (tm_poly tg) \\<le> length I\n\ngoal (1 subgoal):\n 1. insertion e' (map_poly real_of_float (Pw p1' n))\n    \\<in>\\<^sub>i range_tm e (eval_poly_at_tm prec ord I a (Pw p1' n) tg)", "by (auto intro!: tm_pow_range Pw dev num_params_eval_poly_le)"], ["proof (state)\nthis:\n  insertion e' (map_poly real_of_float (Pw p1' n))\n  \\<in>\\<^sub>i range_tm e (eval_poly_at_tm prec ord I a (Pw p1' n) tg)\n\ngoal (1 subgoal):\n 1. \\<And>p1 x2a p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (CN p1 x2a p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (CN p1 x2a p2) tg)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p1 x2a p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (CN p1 x2a p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (CN p1 x2a p2) tg)", "case (CN p1l n p1r)"], ["proof (state)\nthis:\n  \\<lbrakk>num_params p1l \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1l)\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1l tg)\n  \\<lbrakk>num_params p1r \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1r)\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1r tg)\n  num_params (CN p1l n p1r) \\<le> 1\n  num_params (tm_poly tg) \\<le> length I\n\ngoal (1 subgoal):\n 1. \\<And>p1 x2a p2.\n       \\<lbrakk>\\<lbrakk>num_params p1 \\<le> 1;\n                 num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n                \\<Longrightarrow> insertion e' (map_poly real_of_float p1)\n                                  \\<in>\\<^sub>i range_tm e\n           (eval_poly_at_tm prec ord I a p1 tg);\n        \\<lbrakk>num_params p2 \\<le> 1;\n         num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> insertion e' (map_poly real_of_float p2)\n                          \\<in>\\<^sub>i range_tm e\n   (eval_poly_at_tm prec ord I a p2 tg);\n        num_params (CN p1 x2a p2) \\<le> 1;\n        num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> insertion e'\n                          (map_poly real_of_float (CN p1 x2a p2))\n                         \\<in>\\<^sub>i range_tm e\n  (eval_poly_at_tm prec ord I a (CN p1 x2a p2) tg)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>num_params p1l \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1l)\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1l tg)\n  \\<lbrakk>num_params p1r \\<le> 1;\n   num_params (tm_poly tg) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> insertion e' (map_poly real_of_float p1r)\n                    \\<in>\\<^sub>i range_tm e\n                                   (eval_poly_at_tm prec ord I a p1r tg)\n  num_params (CN p1l n p1r) \\<le> 1\n  num_params (tm_poly tg) \\<le> length I\n\ngoal (1 subgoal):\n 1. insertion e' (map_poly real_of_float (CN p1l n p1r))\n    \\<in>\\<^sub>i range_tm e\n                   (eval_poly_at_tm prec ord I a (CN p1l n p1r) tg)", "by (auto intro!: tm_mul_range tm_pow_range CN dev num_params_eval_poly_le tm_add_range tg_def)"], ["proof (state)\nthis:\n  insertion e' (map_poly real_of_float (CN p1l n p1r))\n  \\<in>\\<^sub>i range_tm e (eval_poly_at_tm prec ord I a (CN p1l n p1r) tg)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tm_inc_err_range: \"x \\<in>\\<^sub>i range_tm e (tm_inc_err i t)\"\n  if \"x \\<in>\\<^sub>i range_tm e t + real_interval i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_inc_err i t)", "using that"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>i range_tm e t + real_interval i\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_inc_err i t)", "by (cases t) (auto simp: range_tm_def real_interval_plus ac_simps)"], ["", "lemma num_params_tm_inc_err: \"num_params (tm_poly (tm_inc_err i t)) \\<le> X\"\n  if \"num_params (tm_poly t) \\<le> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_inc_err i t)) \\<le> X", "using that"], ["proof (prove)\nusing this:\n  num_params (tm_poly t) \\<le> X\n\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_inc_err i t)) \\<le> X", "by (cases t) auto"], ["", "lemma num_params_tm_comp_le: \"num_params (tm_poly (tm_comp prec ord I a ga tf tg)) \\<le> X\"\n  if \"num_params (tm_poly tf) \\<le> max 1 X\" \"num_params (tm_poly tg) \\<le> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_comp prec ord I a ga tf tg)) \\<le> X", "using that"], ["proof (prove)\nusing this:\n  num_params (tm_poly tf) \\<le> max 1 X\n  num_params (tm_poly tg) \\<le> X\n\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_comp prec ord I a ga tf tg)) \\<le> X", "by (cases tf) (auto intro!: num_params_tm_inc_err num_params_eval_poly_le num_params_tm_sub_le)"], ["", "lemma tm_comp_range:\n  assumes tf_def: \"x \\<in>\\<^sub>i range_tm e' tf\"\n  assumes tg_def: \"e' 0 \\<in>\\<^sub>i range_tm e (tm_sub tg (tm_const ga))\"\n  assumes params: \"num_params (tm_poly tf) \\<le> 1\" \"num_params (tm_poly tg) \\<le> length I\"\n  assumes dev: \"develops_at_within e a I\"\n  shows \"x \\<in>\\<^sub>i range_tm e (tm_comp prec ord I a ga tf tg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_comp prec ord I a ga tf tg)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_comp prec ord I a ga tf tg)", "obtain pf ef where tf_decomp: \"tf = TaylorModel pf ef\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>pf ef.\n        tf = TaylorModel pf ef \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using taylor_model.exhaust"], ["proof (prove)\nusing this:\n  (\\<And>x1 x2.\n      ?y = TaylorModel x1 x2 \\<Longrightarrow> ?P) \\<Longrightarrow>\n  ?P\n\ngoal (1 subgoal):\n 1. (\\<And>pf ef.\n        tf = TaylorModel pf ef \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  tf = TaylorModel pf ef\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_comp prec ord I a ga tf tg)", "obtain pg eg where tg_decomp: \"tg = TaylorModel pg eg\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>pg eg.\n        tg = TaylorModel pg eg \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using taylor_model.exhaust"], ["proof (prove)\nusing this:\n  (\\<And>x1 x2.\n      ?y = TaylorModel x1 x2 \\<Longrightarrow> ?P) \\<Longrightarrow>\n  ?P\n\ngoal (1 subgoal):\n 1. (\\<And>pg eg.\n        tg = TaylorModel pg eg \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  tg = TaylorModel pg eg\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_comp prec ord I a ga tf tg)", "from params"], ["proof (chain)\npicking this:\n  num_params (tm_poly tf) \\<le> 1\n  num_params (tm_poly tg) \\<le> length I", "have params: \"num_params pf \\<le> Suc 0\" \"num_params pg \\<le> length I\""], ["proof (prove)\nusing this:\n  num_params (tm_poly tf) \\<le> 1\n  num_params (tm_poly tg) \\<le> length I\n\ngoal (1 subgoal):\n 1. num_params pf \\<le> Suc 0 &&& num_params pg \\<le> length I", "by (auto simp: tf_decomp tg_decomp)"], ["proof (state)\nthis:\n  num_params pf \\<le> Suc 0\n  num_params pg \\<le> length I\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_comp prec ord I a ga tf tg)", "from tf_def"], ["proof (chain)\npicking this:\n  x \\<in>\\<^sub>i range_tm e' tf", "obtain xe where x_def: \"x = insertion e' pf + xe\" \"xe \\<in>\\<^sub>r ef\""], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>i range_tm e' tf\n\ngoal (1 subgoal):\n 1. (\\<And>xe.\n        \\<lbrakk>x = insertion e' (map_poly real_of_float pf) + xe;\n         xe \\<in>\\<^sub>r ef\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: tf_decomp range_tm_def elim!: plus_in_intervalE)"], ["proof (state)\nthis:\n  x = insertion e' (map_poly real_of_float pf) + xe\n  xe \\<in>\\<^sub>r ef\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_comp prec ord I a ga tf tg)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_comp prec ord I a ga tf tg)", "using tg_def"], ["proof (prove)\nusing this:\n  e' 0 \\<in>\\<^sub>i range_tm e (tm_sub tg (tm_const ga))\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_comp prec ord I a ga tf tg)", "by (auto simp: tf_decomp tg_decomp x_def params dev\n        intro!: tm_inc_err_range eval_poly_at_tm_range plus_in_intervalI num_params_tm_sub_le)"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>i range_tm e (tm_comp prec ord I a ga tf tg)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mid_centered_collapse:\n  \"interval_of (real_of_float (mid abs_bound)) + real_interval (centered abs_bound) =\n    real_interval abs_bound\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interval_of (real_of_float (mid abs_bound)) +\n    real_interval (centered abs_bound) =\n    real_interval abs_bound", "by (auto simp: centered_def interval_eq_iff)"], ["", "lemmas [simp del] = tm_abs.simps"], ["", "lemma tm_abs_range:\n  assumes x: \"x \\<in>\\<^sub>i range_tm e t\"\n  assumes n: \"num_params (tm_poly t) \\<le> length I\" and d: \"develops_at_within e a I\"\n  shows \"abs x \\<in>\\<^sub>i range_tm e (tm_abs prec I a t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>x\\<bar> \\<in>\\<^sub>i range_tm e (tm_abs prec I a t)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>x\\<bar> \\<in>\\<^sub>i range_tm e (tm_abs prec I a t)", "obtain p e where t_def[simp]: \"t = TaylorModel p e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p e.\n        t = TaylorModel p e \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using taylor_model.exhaust"], ["proof (prove)\nusing this:\n  (\\<And>x1 x2.\n      ?y = TaylorModel x1 x2 \\<Longrightarrow> ?P) \\<Longrightarrow>\n  ?P\n\ngoal (1 subgoal):\n 1. (\\<And>p e.\n        t = TaylorModel p e \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t = TaylorModel p e\n\ngoal (1 subgoal):\n 1. \\<bar>x\\<bar> \\<in>\\<^sub>i range_tm e (tm_abs prec I a t)", "define bound where \"bound = compute_bound_tm prec I a t\""], ["proof (state)\nthis:\n  bound = compute_bound_tm prec I a t\n\ngoal (1 subgoal):\n 1. \\<bar>x\\<bar> \\<in>\\<^sub>i range_tm e (tm_abs prec I a t)", "have bound: \"x \\<in>\\<^sub>r bound\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>r bound", "unfolding bound_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>r compute_bound_tm prec I a t", "using n d x"], ["proof (prove)\nusing this:\n  num_params (tm_poly t) \\<le> length I\n  develops_at_within e a I\n  x \\<in>\\<^sub>i range_tm e t\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>r compute_bound_tm prec I a t", "by (rule compute_bound_tm_correct)"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>r bound\n\ngoal (1 subgoal):\n 1. \\<bar>x\\<bar> \\<in>\\<^sub>i range_tm e (tm_abs prec I a t)", "define abs_bound where \"abs_bound \\<equiv> Ivl 0 (max \\<bar>lower bound\\<bar> \\<bar>upper bound\\<bar>)\""], ["proof (state)\nthis:\n  abs_bound \\<equiv>\n  Ivl 0 (max \\<bar>lower bound\\<bar> \\<bar>upper bound\\<bar>)\n\ngoal (1 subgoal):\n 1. \\<bar>x\\<bar> \\<in>\\<^sub>i range_tm e (tm_abs prec I a t)", "have abs_bound: \"\\<bar>x\\<bar> \\<in>\\<^sub>r abs_bound\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>x\\<bar> \\<in>\\<^sub>r abs_bound", "using bound"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>r bound\n\ngoal (1 subgoal):\n 1. \\<bar>x\\<bar> \\<in>\\<^sub>r abs_bound", "by (auto simp: abs_bound_def set_of_eq abs_real_def max_def min_def)"], ["proof (state)\nthis:\n  \\<bar>x\\<bar> \\<in>\\<^sub>r abs_bound\n\ngoal (1 subgoal):\n 1. \\<bar>x\\<bar> \\<in>\\<^sub>i range_tm e (tm_abs prec I a t)", "have tm_abs_decomp: \"tm_abs prec I a t = TaylorModel (poly.C (mid abs_bound)) (centered abs_bound)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tm_abs prec I a t =\n    TaylorModel (mid abs_bound)\\<^sub>p (centered abs_bound)", "by (simp add: bound_def abs_bound_def Let_def tm_abs.simps)"], ["proof (state)\nthis:\n  tm_abs prec I a t =\n  TaylorModel (mid abs_bound)\\<^sub>p (centered abs_bound)\n\ngoal (1 subgoal):\n 1. \\<bar>x\\<bar> \\<in>\\<^sub>i range_tm e (tm_abs prec I a t)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>x\\<bar> \\<in>\\<^sub>i range_tm e (tm_abs prec I a t)", "unfolding tm_abs_decomp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>x\\<bar>\n    \\<in>\\<^sub>i range_tm e\n                   (TaylorModel (mid abs_bound)\\<^sub>p\n                     (centered abs_bound))", "by (rule range_tmI) (auto simp: mid_centered_collapse abs_bound)"], ["proof (state)\nthis:\n  \\<bar>x\\<bar> \\<in>\\<^sub>i range_tm e (tm_abs prec I a t)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma num_params_tm_abs_le: \"num_params (tm_poly (tm_abs prec I a t)) \\<le> X\" if \"num_params (tm_poly t) \\<le> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_abs prec I a t)) \\<le> X", "using that"], ["proof (prove)\nusing this:\n  num_params (tm_poly t) \\<le> X\n\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_abs prec I a t)) \\<le> X", "by (auto simp: tm_abs.simps Let_def)"], ["", "lemma real_interval_sup: \"real_interval (sup a b) = sup (real_interval a) (real_interval b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_interval (sup a b) = sup (real_interval a) (real_interval b)", "by (auto simp: interval_eq_iff inf_real_def inf_float_def sup_float_def sup_real_def min_def max_def)"], ["", "lemma in_interval_supI1: \"x \\<in>\\<^sub>i a \\<Longrightarrow> x \\<in>\\<^sub>i sup a b\"\n  and in_interval_supI2: \"x \\<in>\\<^sub>i b \\<Longrightarrow> x \\<in>\\<^sub>i sup a b\"\n  for x::\"'a::lattice\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in>\\<^sub>i a \\<Longrightarrow> x \\<in>\\<^sub>i sup a b) &&&\n    (x \\<in>\\<^sub>i b \\<Longrightarrow> x \\<in>\\<^sub>i sup a b)", "by (auto simp: set_of_eq le_infI1 le_infI2 le_supI1 le_supI2)"], ["", "lemma tm_union_range_left:\n  assumes \"x \\<in>\\<^sub>i range_tm e t1\"\n    \"num_params (tm_poly t1) \\<le> length I\" \"develops_at_within e a I\"\n  shows \"x \\<in>\\<^sub>i range_tm e (tm_union prec I a t1 t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_union prec I a t1 t2)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_union prec I a t1 t2)", "define b1 where \"b1 \\<equiv> compute_bound_tm prec I a t1\""], ["proof (state)\nthis:\n  b1 \\<equiv> compute_bound_tm prec I a t1\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_union prec I a t1 t2)", "define b2 where \"b2 \\<equiv> compute_bound_tm prec I a t2\""], ["proof (state)\nthis:\n  b2 \\<equiv> compute_bound_tm prec I a t2\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_union prec I a t1 t2)", "define b_combined where \"b_combined \\<equiv> sup b1 b2\""], ["proof (state)\nthis:\n  b_combined \\<equiv> sup b1 b2\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_union prec I a t1 t2)", "obtain p e where tm_union_decomp: \"tm_union prec I a t1 t2 = TaylorModel p e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p e.\n        tm_union prec I a t1 t2 = TaylorModel p e \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using taylor_model.exhaust"], ["proof (prove)\nusing this:\n  (\\<And>x1 x2.\n      ?y = TaylorModel x1 x2 \\<Longrightarrow> ?P) \\<Longrightarrow>\n  ?P\n\ngoal (1 subgoal):\n 1. (\\<And>p e.\n        tm_union prec I a t1 t2 = TaylorModel p e \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  tm_union prec I a t1 t2 = TaylorModel p e\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_union prec I a t1 t2)", "then"], ["proof (chain)\npicking this:\n  tm_union prec I a t1 t2 = TaylorModel p e", "have p_def: \"p = (mid b_combined)\\<^sub>p\"\n    and e_def: \"e = centered b_combined\""], ["proof (prove)\nusing this:\n  tm_union prec I a t1 t2 = TaylorModel p e\n\ngoal (1 subgoal):\n 1. p = (mid b_combined)\\<^sub>p &&& e = centered b_combined", "by (auto simp: Let_def b1_def b2_def b_combined_def interval_eq_iff)"], ["proof (state)\nthis:\n  p = (mid b_combined)\\<^sub>p\n  e = centered b_combined\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_union prec I a t1 t2)", "have \"x \\<in>\\<^sub>r b1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>r b1", "by (auto simp : b1_def intro!: compute_bound_tm_correct assms)"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>r b1\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_union prec I a t1 t2)", "then"], ["proof (chain)\npicking this:\n  x \\<in>\\<^sub>r b1", "have \"x \\<in>\\<^sub>r b_combined\""], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>r b1\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>r b_combined", "by (auto simp: b_combined_def real_interval_sup in_interval_supI1)"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>r b_combined\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_union prec I a t1 t2)", "then"], ["proof (chain)\npicking this:\n  x \\<in>\\<^sub>r b_combined", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>r b_combined\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_union prec I a t1 t2)", "unfolding tm_union_decomp"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>r b_combined\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (TaylorModel p e)", "by (auto simp: range_tm_def p_def e_def mid_centered_collapse)"], ["proof (state)\nthis:\n  x \\<in>\\<^sub>i range_tm e (tm_union prec I a t1 t2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tm_union_range_right:\n  assumes \"x \\<in>\\<^sub>i range_tm e t2\"\n    \"num_params (tm_poly t2) \\<le> length I\" \"develops_at_within e a I\"\n  shows \"x \\<in>\\<^sub>i range_tm e (tm_union prec I a t1 t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_union prec I a t1 t2)", "using tm_union_range_left[OF assms]"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>i range_tm e (tm_union ?prec I a t2 ?t2.0)\n\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>i range_tm e (tm_union prec I a t1 t2)", "by (simp add: interval_union_commute)"], ["", "lemma num_params_tm_union_le:\n  \"num_params (tm_poly (tm_union prec I a t1 t2)) \\<le> X\"\n  if \"num_params (tm_poly t1) \\<le> X\" \"num_params (tm_poly t2) \\<le> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_union prec I a t1 t2)) \\<le> X", "using that"], ["proof (prove)\nusing this:\n  num_params (tm_poly t1) \\<le> X\n  num_params (tm_poly t2) \\<le> X\n\ngoal (1 subgoal):\n 1. num_params (tm_poly (tm_union prec I a t1 t2)) \\<le> X", "by (auto simp: Let_def)"], ["", "lemmas [simp del] = tm_union.simps tm_min.simps tm_max.simps"], ["", "lemma tm_min_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t1\"\n  assumes \"y \\<in>\\<^sub>i range_tm e t2\"\n    \"num_params (tm_poly t1) \\<le> length I\"\n    \"num_params (tm_poly t2) \\<le> length I\"\n    \"develops_at_within e a I\"\n  shows \"min x y \\<in>\\<^sub>i range_tm e (tm_min prec I a t1 t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min x y \\<in>\\<^sub>i range_tm e (tm_min prec I a t1 t2)", "using assms"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>i range_tm e t1\n  y \\<in>\\<^sub>i range_tm e t2\n  num_params (tm_poly t1) \\<le> length I\n  num_params (tm_poly t2) \\<le> length I\n  develops_at_within e a I\n\ngoal (1 subgoal):\n 1. min x y \\<in>\\<^sub>i range_tm e (tm_min prec I a t1 t2)", "by (auto simp: Let_def tm_min.simps min_def intro: tm_union_range_left tm_union_range_right)"], ["", "lemma tm_max_range:\n  assumes \"x \\<in>\\<^sub>i range_tm e t1\"\n  assumes \"y \\<in>\\<^sub>i range_tm e t2\"\n    \"num_params (tm_poly t1) \\<le> length I\"\n    \"num_params (tm_poly t2) \\<le> length I\"\n    \"develops_at_within e a I\"\n  shows \"max x y \\<in>\\<^sub>i range_tm e (tm_max prec I a t1 t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max x y \\<in>\\<^sub>i range_tm e (tm_max prec I a t1 t2)", "using assms"], ["proof (prove)\nusing this:\n  x \\<in>\\<^sub>i range_tm e t1\n  y \\<in>\\<^sub>i range_tm e t2\n  num_params (tm_poly t1) \\<le> length I\n  num_params (tm_poly t2) \\<le> length I\n  develops_at_within e a I\n\ngoal (1 subgoal):\n 1. max x y \\<in>\\<^sub>i range_tm e (tm_max prec I a t1 t2)", "by (auto simp: Let_def tm_max.simps max_def intro: tm_union_range_left tm_union_range_right)"], ["", "subsection \\<open>Computing Taylor models for multivariate expressions\\<close>"], ["", "text \\<open>Compute Taylor models for expressions of the form \"f (g x)\", where f is an elementary function like exp or cos,\n   by composing Taylor models for f and g. For our correctness proof, we need to make it explicit that the range\n   of g on I is inside the domain of f, by introducing the \\<open>f_exists_on\\<close> predicate.\\<close>"], ["", "fun compute_tm_by_comp :: \"nat \\<Rightarrow> nat \\<Rightarrow> float interval list \\<Rightarrow> float interval list \\<Rightarrow> floatarith \\<Rightarrow> taylor_model option \\<Rightarrow> (float interval \\<Rightarrow> bool) \\<Rightarrow> taylor_model option\"\n  where \"compute_tm_by_comp prec ord I a f g f_exists_on = (\n         case g\n         of Some tg \\<Rightarrow> (\n           let gI = compute_bound_tm prec I a tg;\n               ga = mid (compute_bound_tm prec a a tg)\n           in if f_exists_on gI\n              then map_option (\\<lambda>tf. tm_comp prec ord I a ga tf tg ) (tm_floatarith prec ord [gI] [ga] f)\n              else None)\n         | _ \\<Rightarrow> None\n       )\""], ["", "text \\<open>Compute Taylor models with numerical precision \\<open>prec\\<close> of degree \\<open>ord\\<close>,\n  with Taylor models in the environment \\<open>env\\<close> whose variables are jointly interpreted with domain\n  \\<open>I\\<close> and expanded around point \\<open>a\\<close>.\n  from floatarith expressions on a rectangular domain.\\<close>"], ["", "fun approx_tm :: \"nat \\<Rightarrow> nat \\<Rightarrow> float interval list \\<Rightarrow> float interval list \\<Rightarrow> floatarith \\<Rightarrow> taylor_model list \\<Rightarrow>\n    taylor_model option\"\n  where \"approx_tm _ _ I _ (Num c) env = Some (tm_const c)\"\n  | \"approx_tm _ _ I a (Var n) env = (if n < length env then Some (env ! n) else None)\"\n  | \"approx_tm prec ord I a (Add l r) env = (\n         case (approx_tm prec ord I a l env, approx_tm prec ord I a r env) \n         of (Some t1, Some t2) \\<Rightarrow> Some (tm_add t1 t2)\n          | _ \\<Rightarrow> None)\"\n  | \"approx_tm prec ord I a (Minus f) env\n         = map_option tm_neg (approx_tm prec ord I a f env)\"\n  | \"approx_tm prec ord I a (Mult l r) env = (\n         case (approx_tm prec ord I a l env, approx_tm prec ord I a r env) \n         of (Some t1, Some t2) \\<Rightarrow> Some (tm_mul prec ord I a t1 t2)\n          | _ \\<Rightarrow> None)\"     \n  | \"approx_tm prec ord I a (Power f k) env\n         = map_option (\\<lambda>t. tm_pow prec ord I a t k)\n                      (approx_tm prec ord I a f env)\"\n  | \"approx_tm prec ord I a (Inverse f) env\n         = compute_tm_by_comp prec ord I a (Inverse (Var 0)) (approx_tm prec ord I a f env) (\\<lambda>x. 0 < lower x \\<or> upper x < 0)\"\n  | \"approx_tm prec ord I a (Cos f) env\n         = compute_tm_by_comp prec ord I a (Cos (Var 0)) (approx_tm prec ord I a f env) (\\<lambda>x. True)\"\n  | \"approx_tm prec ord I a (Arctan f) env\n         = compute_tm_by_comp prec ord I a (Arctan (Var 0)) (approx_tm prec ord I a f env) (\\<lambda>x. True)\"\n  | \"approx_tm prec ord I a (Exp f) env\n         = compute_tm_by_comp prec ord I a (Exp (Var 0)) (approx_tm prec ord I a f env) (\\<lambda>x. True)\"\n  | \"approx_tm prec ord I a (Ln f) env\n         = compute_tm_by_comp prec ord I a (Ln (Var 0)) (approx_tm prec ord I a f env) (\\<lambda>x. 0 < lower x)\"\n  | \"approx_tm prec ord I a (Sqrt f) env\n         = compute_tm_by_comp prec ord I a (Sqrt (Var 0)) (approx_tm prec ord I a f env) (\\<lambda>x. 0 < lower x)\"\n  | \"approx_tm prec ord I a Pi env = Some (tm_pi prec)\"\n  | \"approx_tm prec ord I a (Abs f) env\n         = map_option (tm_abs prec I a) (approx_tm prec ord I a f env)\"\n  | \"approx_tm prec ord I a (Min l r) env = (\n         case (approx_tm prec ord I a l env, approx_tm prec ord I a r env) \n         of (Some t1, Some t2) \\<Rightarrow> Some (tm_min prec I a t1 t2)\n          | _ \\<Rightarrow> None)\"\n  | \"approx_tm prec ord I a (Max l r) env = (\n         case (approx_tm prec ord I a l env, approx_tm prec ord I a r env)\n         of (Some t1, Some t2) \\<Rightarrow> Some (tm_max prec I a t1 t2)\n          | _ \\<Rightarrow> None)\"\n  | \"approx_tm prec ord I a (Powr l r) env = None\" \\<comment> \\<open>TODO\\<close>\n  | \"approx_tm prec ord I a (Floor l) env = None\" \\<comment> \\<open>TODO\\<close>"], ["", "lemma mid_in_real_interval: \"mid i \\<in>\\<^sub>r i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_float (mid i) \\<in>\\<^sub>r i", "using lower_le_upper[of i]"], ["proof (prove)\nusing this:\n  lower i \\<le> upper i\n\ngoal (1 subgoal):\n 1. real_of_float (mid i) \\<in>\\<^sub>r i", "by (auto simp: mid_def set_of_eq powr_minus)"], ["", "lemma set_of_real_interval_mono:\"set_of (real_interval x) \\<subseteq> set_of (real_interval y)\"\n  if \"set_of x \\<subseteq> set_of y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (real_interval x) \\<subseteq> set_of (real_interval y)", "using that"], ["proof (prove)\nusing this:\n  set_of x \\<subseteq> set_of y\n\ngoal (1 subgoal):\n 1. set_of (real_interval x) \\<subseteq> set_of (real_interval y)", "by (auto simp: set_of_eq)"], ["", "lemmas [simp del] = compute_bound_poly.simps tm_floatarith.simps"], ["", "(*\n  assumes tx_valid: \"valid_tm I a (interpret_floatarith g) tg\"\n  assumes t_def: \"compute_tm_on_ivl_by_comp prec ord I a f (Some tg) c = Some t\"\n  assumes f_deriv: \"\\<And>x. x \\<in>\\<^sub>r (compute_bound_tm prec I a tg) \\<Longrightarrow> c (compute_bound_tm prec I a tg) \\<Longrightarrow> isDERIV 0 f [x]\"\n  shows \"valid_tm I a ((\\<lambda>x. interpret_floatarith f [x]) o interpret_floatarith g) t\"\n*)"], ["", "lemmas [simp del] = tmf_ivl_cs.simps compute_bound_tm.simps tmf_polys.simps"], ["", "lemma tm_floatarith_eq_Some_num_params:\n  \"tm_floatarith prec ord a b f = Some tf \\<Longrightarrow> num_params (tm_poly tf) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tm_floatarith prec ord a b f = Some tf \\<Longrightarrow>\n    num_params (tm_poly tf) \\<le> 1", "by (auto simp: tm_floatarith.simps split_beta' Let_def those_eq_Some_iff num_params_tmf_polys1)"], ["", "lemma compute_tm_by_comp_range:\n  assumes \"max_Var_floatarith f \\<le> 1\"\n  assumes a: \"a all_subset I\"\n  assumes tx_range: \"x \\<in>\\<^sub>i range_tm e tg\"\n  assumes t_def: \"compute_tm_by_comp prec ord I a f (Some tg) c = Some t\"\n  assumes f_deriv:\n    \"\\<And>x. x \\<in>\\<^sub>r compute_bound_tm prec I a tg \\<Longrightarrow> c (compute_bound_tm prec I a tg) \\<Longrightarrow> isDERIV 0 f [x]\"\n  assumes params: \"num_params (tm_poly tg) \\<le> length I\"\n    and dev: \"develops_at_within e a I\"\n  shows \"interpret_floatarith f [x] \\<in>\\<^sub>i range_tm e t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith f [x] \\<in>\\<^sub>i range_tm e t", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. interpret_floatarith f [x] \\<in>\\<^sub>i range_tm e t", "from t_def[simplified, simplified Let_def]"], ["proof (chain)\npicking this:\n  (if c (compute_bound_tm prec I a tg)\n   then map_option\n         (\\<lambda>tf.\n             tm_comp prec ord I a (mid (compute_bound_tm prec a a tg)) tf\n              tg)\n         (tm_floatarith prec ord [compute_bound_tm prec I a tg]\n           [mid (compute_bound_tm prec a a tg)] f)\n   else None) =\n  Some t", "obtain tf\n    where t1_def: \"tm_floatarith prec ord [compute_bound_tm prec I (a) tg]\n          [mid (compute_bound_tm prec a a tg)] f =\n         Some tf\"\n      and t_decomp: \"t = tm_comp prec ord I a (mid (compute_bound_tm prec a a tg)) tf tg \"\n      and c_true:   \"c (compute_bound_tm prec I a tg)\""], ["proof (prove)\nusing this:\n  (if c (compute_bound_tm prec I a tg)\n   then map_option\n         (\\<lambda>tf.\n             tm_comp prec ord I a (mid (compute_bound_tm prec a a tg)) tf\n              tg)\n         (tm_floatarith prec ord [compute_bound_tm prec I a tg]\n           [mid (compute_bound_tm prec a a tg)] f)\n   else None) =\n  Some t\n\ngoal (1 subgoal):\n 1. (\\<And>tf.\n        \\<lbrakk>tm_floatarith prec ord [compute_bound_tm prec I a tg]\n                  [mid (compute_bound_tm prec a a tg)] f =\n                 Some tf;\n         t =\n         tm_comp prec ord I a (mid (compute_bound_tm prec a a tg)) tf tg;\n         c (compute_bound_tm prec I a tg)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: split_beta' Let_def split: if_splits)"], ["proof (state)\nthis:\n  tm_floatarith prec ord [compute_bound_tm prec I a tg]\n   [mid (compute_bound_tm prec a a tg)] f =\n  Some tf\n  t = tm_comp prec ord I a (mid (compute_bound_tm prec a a tg)) tf tg\n  c (compute_bound_tm prec I a tg)\n\ngoal (1 subgoal):\n 1. interpret_floatarith f [x] \\<in>\\<^sub>i range_tm e t", "have a1: \"mid (compute_bound_tm prec a a tg) \\<in>\\<^sub>r (compute_bound_tm prec I a tg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_float (mid (compute_bound_tm prec a a tg))\n    \\<in>\\<^sub>r compute_bound_tm prec I a tg", "apply(rule rev_subsetD[OF mid_in_real_interval])"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (real_interval (compute_bound_tm prec a a tg))\n    \\<subseteq> set_of (real_interval (compute_bound_tm prec I a tg))", "apply (rule set_of_real_interval_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (compute_bound_tm prec a a tg)\n    \\<subseteq> set_of (compute_bound_tm prec I a tg)", "apply (rule compute_bound_tm_mono)"], ["proof (prove)\ngoal (3 subgoals):\n 1. num_params (tm_poly tg) \\<le> length a\n 2. a all_subset I\n 3. a all_subset a", "using params a"], ["proof (prove)\nusing this:\n  num_params (tm_poly tg) \\<le> length I\n  a all_subset I\n\ngoal (3 subgoals):\n 1. num_params (tm_poly tg) \\<le> length a\n 2. a all_subset I\n 3. a all_subset a", "by (auto simp add: set_of_eq elim!: range_tmD)"], ["proof (state)\nthis:\n  real_of_float (mid (compute_bound_tm prec a a tg))\n  \\<in>\\<^sub>r compute_bound_tm prec I a tg\n\ngoal (1 subgoal):\n 1. interpret_floatarith f [x] \\<in>\\<^sub>i range_tm e t", "from \\<open>max_Var_floatarith f \\<le> 1\\<close>"], ["proof (chain)\npicking this:\n  max_Var_floatarith f \\<le> 1", "have [simp]: \"\\<And>x. 0 \\<le> length x \\<Longrightarrow> (\\<lambda>x. interpret_floatarith f [x ! 0]) x = interpret_floatarith f x\""], ["proof (prove)\nusing this:\n  max_Var_floatarith f \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> length x \\<Longrightarrow>\n       interpret_floatarith f [x ! 0] = interpret_floatarith f x", "by (induction f, simp_all)"], ["proof (state)\nthis:\n  0 \\<le> length ?x \\<Longrightarrow>\n  interpret_floatarith f [?x ! 0] = interpret_floatarith f ?x\n\ngoal (1 subgoal):\n 1. interpret_floatarith f [x] \\<in>\\<^sub>i range_tm e t", "let ?mid = \"real_of_float (mid (compute_bound_tm prec a a tg))\""], ["proof (state)\ngoal (1 subgoal):\n 1. interpret_floatarith f [x] \\<in>\\<^sub>i range_tm e t", "have 1: \"interpret_floatarith f [x] \\<in>\\<^sub>i range_tm (\\<lambda>_. x - ?mid) tf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith f [x]\n    \\<in>\\<^sub>i range_tm\n                   (\\<lambda>_.\n                       x -\n                       real_of_float (mid (compute_bound_tm prec a a tg)))\n                   tf", "apply (rule tm_floatarith[OF t1_def, simplified])"], ["proof (prove)\ngoal (4 subgoals):\n 1. real_of_float (mid (compute_bound_tm prec a a tg))\n    \\<in>\\<^sub>r compute_bound_tm prec I a tg\n 2. x \\<in>\\<^sub>r compute_bound_tm prec I a tg\n 3. \\<And>x.\n       x \\<in>\\<^sub>r compute_bound_tm prec I a tg \\<Longrightarrow>\n       isDERIV 0 f [x]\n 4. x - real_of_float (mid (compute_bound_tm prec a a tg)) =\n    x - real_of_float (mid (compute_bound_tm prec a a tg))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_float (mid (compute_bound_tm prec a a tg))\n    \\<in>\\<^sub>r compute_bound_tm prec I a tg", "apply (rule rev_subsetD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. real_of_float (mid (compute_bound_tm prec a a tg)) \\<in> ?A\n 2. ?A \\<subseteq> set_of (real_interval (compute_bound_tm prec I a tg))", "apply (rule mid_in_real_interval)"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (real_interval (compute_bound_tm prec a a tg))\n    \\<subseteq> set_of (real_interval (compute_bound_tm prec I a tg))", "apply (rule set_of_real_interval_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (compute_bound_tm prec a a tg)\n    \\<subseteq> set_of (compute_bound_tm prec I a tg)", "apply (rule compute_bound_tm_mono)"], ["proof (prove)\ngoal (3 subgoals):\n 1. num_params (tm_poly tg) \\<le> length a\n 2. a all_subset I\n 3. a all_subset a", "using assms"], ["proof (prove)\nusing this:\n  max_Var_floatarith f \\<le> 1\n  a all_subset I\n  x \\<in>\\<^sub>i range_tm e tg\n  compute_tm_by_comp prec ord I a f (Some tg) c = Some t\n  \\<lbrakk>?x \\<in>\\<^sub>r compute_bound_tm prec I a tg;\n   c (compute_bound_tm prec I a tg)\\<rbrakk>\n  \\<Longrightarrow> isDERIV 0 f [?x]\n  num_params (tm_poly tg) \\<le> length I\n  develops_at_within e a I\n\ngoal (3 subgoals):\n 1. num_params (tm_poly tg) \\<le> length a\n 2. a all_subset I\n 3. a all_subset a", "by (auto)"], ["proof (prove)\ngoal (3 subgoals):\n 1. x \\<in>\\<^sub>r compute_bound_tm prec I a tg\n 2. \\<And>x.\n       x \\<in>\\<^sub>r compute_bound_tm prec I a tg \\<Longrightarrow>\n       isDERIV 0 f [x]\n 3. x - real_of_float (mid (compute_bound_tm prec a a tg)) =\n    x - real_of_float (mid (compute_bound_tm prec a a tg))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in>\\<^sub>r compute_bound_tm prec I a tg", "by (rule compute_bound_tm_correct assms)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in>\\<^sub>r compute_bound_tm prec I a tg \\<Longrightarrow>\n       isDERIV 0 f [x]\n 2. x - real_of_float (mid (compute_bound_tm prec a a tg)) =\n    x - real_of_float (mid (compute_bound_tm prec a a tg))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in>\\<^sub>r compute_bound_tm prec I a tg \\<Longrightarrow>\n    isDERIV 0 f [x_]", "by (auto intro!: assms c_true)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x - real_of_float (mid (compute_bound_tm prec a a tg)) =\n    x - real_of_float (mid (compute_bound_tm prec a a tg))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x - real_of_float (mid (compute_bound_tm prec a a tg)) =\n    x - real_of_float (mid (compute_bound_tm prec a a tg))", "by (auto simp: )"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  interpret_floatarith f [x]\n  \\<in>\\<^sub>i range_tm\n                 (\\<lambda>_.\n                     x - real_of_float (mid (compute_bound_tm prec a a tg)))\n                 tf\n\ngoal (1 subgoal):\n 1. interpret_floatarith f [x] \\<in>\\<^sub>i range_tm e t", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith f [x] \\<in>\\<^sub>i range_tm e t", "unfolding t_decomp"], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith f [x]\n    \\<in>\\<^sub>i range_tm e\n                   (tm_comp prec ord I a\n                     (mid (compute_bound_tm prec a a tg)) tf tg)", "apply (rule tm_comp_range)"], ["proof (prove)\ngoal (5 subgoals):\n 1. interpret_floatarith f [x] \\<in>\\<^sub>i range_tm ?e' tf\n 2. ?e' 0\n    \\<in>\\<^sub>i range_tm e\n                   (tm_sub tg\n                     (tm_const (mid (compute_bound_tm prec a a tg))))\n 3. num_params (tm_poly tf) \\<le> 1\n 4. num_params (tm_poly tg) \\<le> length I\n 5. develops_at_within e a I", "apply (rule 1)"], ["proof (prove)\ngoal (4 subgoals):\n 1. x - real_of_float (mid (compute_bound_tm prec a a tg))\n    \\<in>\\<^sub>i range_tm e\n                   (tm_sub tg\n                     (tm_const (mid (compute_bound_tm prec a a tg))))\n 2. num_params (tm_poly tf) \\<le> 1\n 3. num_params (tm_poly tg) \\<le> length I\n 4. develops_at_within e a I", "using tm_floatarith_eq_Some_num_params[OF t1_def]"], ["proof (prove)\nusing this:\n  num_params (tm_poly tf) \\<le> 1\n\ngoal (4 subgoals):\n 1. x - real_of_float (mid (compute_bound_tm prec a a tg))\n    \\<in>\\<^sub>i range_tm e\n                   (tm_sub tg\n                     (tm_const (mid (compute_bound_tm prec a a tg))))\n 2. num_params (tm_poly tf) \\<le> 1\n 3. num_params (tm_poly tg) \\<le> length I\n 4. develops_at_within e a I", "by (auto simp: intro!: tm_sub_range assms )"], ["proof (state)\nthis:\n  interpret_floatarith f [x] \\<in>\\<^sub>i range_tm e t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas [simp del] = compute_tm_by_comp.simps"], ["", "lemma compute_tm_by_comp_num_params_le:\n  assumes \"compute_tm_by_comp prec ord I a f (Some t0) i = Some t\"\n  assumes \"1 \\<le> X\" \"num_params (tm_poly t0) \\<le> X\"\n  shows \"num_params (tm_poly t) \\<le> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly t) \\<le> X", "using assms"], ["proof (prove)\nusing this:\n  compute_tm_by_comp prec ord I a f (Some t0) i = Some t\n  1 \\<le> X\n  num_params (tm_poly t0) \\<le> X\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t) \\<le> X", "by (auto simp: compute_tm_by_comp.simps Let_def intro!: num_params_tm_comp_le\n      dest!: tm_floatarith_eq_Some_num_params\n      split: option.splits if_splits)"], ["", "lemma compute_tm_by_comp_eq_Some_iff: \"compute_tm_by_comp prec ord I a f t0 i = Some t \\<longleftrightarrow>\n  (\\<exists>z x2. t0 = Some x2 \\<and>\n    tm_floatarith prec ord [compute_bound_tm prec I a x2]\n      [mid (compute_bound_tm prec a a x2)] f =\n      Some z\n   \\<and> tm_comp prec ord I a\n      (mid (compute_bound_tm prec a a x2)) z x2 = t\n   \\<and> i (compute_bound_tm prec I a x2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (compute_tm_by_comp prec ord I a f t0 i = Some t) =\n    (\\<exists>z x2.\n        t0 = Some x2 \\<and>\n        tm_floatarith prec ord [compute_bound_tm prec I a x2]\n         [mid (compute_bound_tm prec a a x2)] f =\n        Some z \\<and>\n        tm_comp prec ord I a (mid (compute_bound_tm prec a a x2)) z x2 =\n        t \\<and>\n        i (compute_bound_tm prec I a x2))", "by (auto simp: compute_tm_by_comp.simps Let_def split: option.splits)"], ["", "lemma num_params_approx_tm:\n  assumes \"approx_tm prec ord I a f env = Some t\"\n  assumes \"\\<And>tm. tm \\<in> set env \\<Longrightarrow> num_params (tm_poly tm) \\<le> length I\"\n  shows \"num_params (tm_poly t) \\<le> length I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly t) \\<le> length I", "using assms"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a f env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t) \\<le> length I", "proof (induction f arbitrary: t)"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Add f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Minus f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Inverse f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Cos f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Arctan f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Abs f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Max f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>t.\n        \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\nA total of 18 subgoals...", "case (Add f1 f2)"], ["proof (state)\nthis:\n  \\<lbrakk>approx_tm prec ord I a f1 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  \\<lbrakk>approx_tm prec ord I a f2 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Add f1 f2) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (18 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Add f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Minus f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Inverse f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Cos f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Arctan f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Abs f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Max f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>t.\n        \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\nA total of 18 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>approx_tm prec ord I a f1 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  \\<lbrakk>approx_tm prec ord I a f2 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Add f1 f2) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>approx_tm prec ord I a f1 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  \\<lbrakk>approx_tm prec ord I a f2 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Add f1 f2) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t) \\<le> length I", "by (auto split: option.splits intro!: num_params_tm_add_le)"], ["proof (state)\nthis:\n  num_params (tm_poly t) \\<le> length I\n\ngoal (17 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Minus f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Inverse f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Cos f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Arctan f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Abs f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Max f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                     \\<And>tm.\n                        tm \\<in> set env \\<Longrightarrow>\n                        num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n         approx_tm prec ord I a (Sqrt f) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Minus f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Inverse f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Cos f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Arctan f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Abs f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Max f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                     \\<And>tm.\n                        tm \\<in> set env \\<Longrightarrow>\n                        num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n         approx_tm prec ord I a (Sqrt f) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\nA total of 17 subgoals...", "case (Minus f)"], ["proof (state)\nthis:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Minus f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (17 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Minus f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Inverse f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Cos f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Arctan f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Abs f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Max f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                     \\<And>tm.\n                        tm \\<in> set env \\<Longrightarrow>\n                        num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n         approx_tm prec ord I a (Sqrt f) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\nA total of 17 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Minus f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Minus f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t) \\<le> length I", "by (auto split: option.splits)"], ["proof (state)\nthis:\n  num_params (tm_poly t) \\<le> length I\n\ngoal (16 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Inverse f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Cos f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Arctan f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Abs f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Max f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                     \\<And>tm.\n                        tm \\<in> set env \\<Longrightarrow>\n                        num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n         approx_tm prec ord I a (Exp f) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\nA total of 16 subgoals...", "next"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Inverse f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Cos f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Arctan f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Abs f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Max f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                     \\<And>tm.\n                        tm \\<in> set env \\<Longrightarrow>\n                        num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n         approx_tm prec ord I a (Exp f) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\nA total of 16 subgoals...", "case (Mult f1 f2)"], ["proof (state)\nthis:\n  \\<lbrakk>approx_tm prec ord I a f1 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  \\<lbrakk>approx_tm prec ord I a f2 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Mult f1 f2) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (16 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Inverse f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Cos f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Arctan f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Abs f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Max f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                     \\<And>tm.\n                        tm \\<in> set env \\<Longrightarrow>\n                        num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n         approx_tm prec ord I a (Exp f) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\nA total of 16 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>approx_tm prec ord I a f1 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  \\<lbrakk>approx_tm prec ord I a f2 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Mult f1 f2) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>approx_tm prec ord I a f1 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  \\<lbrakk>approx_tm prec ord I a f2 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Mult f1 f2) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t) \\<le> length I", "by (auto split: option.splits intro!: num_params_tm_mul_le)"], ["proof (state)\nthis:\n  num_params (tm_poly t) \\<le> length I\n\ngoal (15 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Inverse f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Cos f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Arctan f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Abs f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Max f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>f1 f2 t.\n        \\<lbrakk>\\<And>t.\n                    \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                     \\<And>tm.\n                        tm \\<in> set env \\<Longrightarrow>\n                        num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n         \\<And>t.\n            \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n             \\<And>tm.\n                tm \\<in> set env \\<Longrightarrow>\n                num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n            \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n         approx_tm prec ord I a (Powr f1 f2) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Inverse f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Cos f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Arctan f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Abs f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Max f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>f1 f2 t.\n        \\<lbrakk>\\<And>t.\n                    \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                     \\<And>tm.\n                        tm \\<in> set env \\<Longrightarrow>\n                        num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n         \\<And>t.\n            \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n             \\<And>tm.\n                tm \\<in> set env \\<Longrightarrow>\n                num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n            \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n         approx_tm prec ord I a (Powr f1 f2) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\nA total of 15 subgoals...", "case (Inverse f)"], ["proof (state)\nthis:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Inverse f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (15 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Inverse f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Cos f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Arctan f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Abs f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Max f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>f1 f2 t.\n        \\<lbrakk>\\<And>t.\n                    \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                     \\<And>tm.\n                        tm \\<in> set env \\<Longrightarrow>\n                        num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n         \\<And>t.\n            \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n             \\<And>tm.\n                tm \\<in> set env \\<Longrightarrow>\n                num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n            \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n         approx_tm prec ord I a (Powr f1 f2) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\nA total of 15 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Inverse f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Inverse f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t) \\<le> length I", "by (auto split: option.splits simp: Let_def compute_tm_by_comp_eq_Some_iff\n        intro!: num_params_tm_comp_le dest!: tm_floatarith_eq_Some_num_params)"], ["proof (state)\nthis:\n  num_params (tm_poly t) \\<le> length I\n\ngoal (14 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Cos f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Arctan f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Abs f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Max f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                     \\<And>tm.\n                        tm \\<in> set env \\<Longrightarrow>\n                        num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n         approx_tm prec ord I a (Ln f) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\nA total of 14 subgoals...", "next"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Cos f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Arctan f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Abs f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Max f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                     \\<And>tm.\n                        tm \\<in> set env \\<Longrightarrow>\n                        num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n         approx_tm prec ord I a (Ln f) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\nA total of 14 subgoals...", "case (Cos f)"], ["proof (state)\nthis:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Cos f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (14 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Cos f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Arctan f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Abs f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Max f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                     \\<And>tm.\n                        tm \\<in> set env \\<Longrightarrow>\n                        num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n         approx_tm prec ord I a (Ln f) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\nA total of 14 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Cos f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Cos f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t) \\<le> length I", "by (auto split: option.splits simp: Let_def compute_tm_by_comp_eq_Some_iff\n        intro!: num_params_tm_comp_le dest!: tm_floatarith_eq_Some_num_params)"], ["proof (state)\nthis:\n  num_params (tm_poly t) \\<le> length I\n\ngoal (13 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Arctan f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Abs f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Max f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>f x2a t.\n        \\<lbrakk>\\<And>t.\n                    \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                     \\<And>tm.\n                        tm \\<in> set env \\<Longrightarrow>\n                        num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n         approx_tm prec ord I a (Power f x2a) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\nA total of 13 subgoals...", "next"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Arctan f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Abs f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Max f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>f x2a t.\n        \\<lbrakk>\\<And>t.\n                    \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                     \\<And>tm.\n                        tm \\<in> set env \\<Longrightarrow>\n                        num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n         approx_tm prec ord I a (Power f x2a) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\nA total of 13 subgoals...", "case (Arctan f)"], ["proof (state)\nthis:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Arctan f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (13 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Arctan f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Abs f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Max f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>f x2a t.\n        \\<lbrakk>\\<And>t.\n                    \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                     \\<And>tm.\n                        tm \\<in> set env \\<Longrightarrow>\n                        num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n         approx_tm prec ord I a (Power f x2a) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\nA total of 13 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Arctan f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Arctan f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t) \\<le> length I", "by (auto split: option.splits simp: Let_def compute_tm_by_comp_eq_Some_iff\n        intro!: num_params_tm_comp_le dest!: tm_floatarith_eq_Some_num_params)"], ["proof (state)\nthis:\n  num_params (tm_poly t) \\<le> length I\n\ngoal (12 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Abs f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Max f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                     \\<And>tm.\n                        tm \\<in> set env \\<Longrightarrow>\n                        num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n         approx_tm prec ord I a (Floor f) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\nA total of 12 subgoals...", "next"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Abs f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Max f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                     \\<And>tm.\n                        tm \\<in> set env \\<Longrightarrow>\n                        num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n         approx_tm prec ord I a (Floor f) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\nA total of 12 subgoals...", "case (Abs f)"], ["proof (state)\nthis:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Abs f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (12 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Abs f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Max f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                     \\<And>tm.\n                        tm \\<in> set env \\<Longrightarrow>\n                        num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                    \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n         approx_tm prec ord I a (Floor f) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\nA total of 12 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Abs f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Abs f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t) \\<le> length I", "by (auto simp: tm_abs.simps Let_def intro!: num_params_tm_union_le)"], ["proof (state)\nthis:\n  num_params (tm_poly t) \\<le> length I\n\ngoal (11 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Max f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>x t.\n        \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Max f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>x t.\n        \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\nA total of 11 subgoals...", "case (Max f1 f2)"], ["proof (state)\nthis:\n  \\<lbrakk>approx_tm prec ord I a f1 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  \\<lbrakk>approx_tm prec ord I a f2 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Max f1 f2) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (11 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Max f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>x t.\n        \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\nA total of 11 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>approx_tm prec ord I a f1 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  \\<lbrakk>approx_tm prec ord I a f2 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Max f1 f2) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>approx_tm prec ord I a f1 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  \\<lbrakk>approx_tm prec ord I a f2 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Max f1 f2) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t) \\<le> length I", "by (auto simp: tm_max.simps Let_def intro!: num_params_tm_union_le split: option.splits)"], ["proof (state)\nthis:\n  num_params (tm_poly t) \\<le> length I\n\ngoal (10 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>x t.\n        \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>x t.\n        \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "case (Min f1 f2)"], ["proof (state)\nthis:\n  \\<lbrakk>approx_tm prec ord I a f1 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  \\<lbrakk>approx_tm prec ord I a f2 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Min f1 f2) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (10 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Min f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 10. \\<And>x t.\n        \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n         \\<And>tm.\n            tm \\<in> set env \\<Longrightarrow>\n            num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n        \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>approx_tm prec ord I a f1 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  \\<lbrakk>approx_tm prec ord I a f2 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Min f1 f2) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>approx_tm prec ord I a f1 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  \\<lbrakk>approx_tm prec ord I a f2 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Min f1 f2) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t) \\<le> length I", "by (auto simp: tm_min.simps Let_def intro!: num_params_tm_union_le split: option.splits)"], ["proof (state)\nthis:\n  num_params (tm_poly t) \\<le> length I\n\ngoal (9 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "case Pi"], ["proof (state)\nthis:\n  approx_tm prec ord I a Pi env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (9 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>approx_tm prec ord I a Pi env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 9. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "then"], ["proof (chain)\npicking this:\n  approx_tm prec ord I a Pi env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a Pi env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t) \\<le> length I", "by (auto )"], ["proof (state)\nthis:\n  num_params (tm_poly t) \\<le> length I\n\ngoal (8 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "case (Sqrt f)"], ["proof (state)\nthis:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Sqrt f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (8 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Sqrt f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 8. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Sqrt f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Sqrt f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t) \\<le> length I", "by (auto split: option.splits simp: Let_def compute_tm_by_comp_eq_Some_iff\n        intro!: num_params_tm_comp_le dest!: tm_floatarith_eq_Some_num_params)"], ["proof (state)\nthis:\n  num_params (tm_poly t) \\<le> length I\n\ngoal (7 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "case (Exp f)"], ["proof (state)\nthis:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Exp f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (7 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Exp f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 7. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Exp f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Exp f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t) \\<le> length I", "by (auto split: option.splits simp: Let_def compute_tm_by_comp_eq_Some_iff\n        intro!: num_params_tm_comp_le dest!: tm_floatarith_eq_Some_num_params)"], ["proof (state)\nthis:\n  num_params (tm_poly t) \\<le> length I\n\ngoal (6 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "case (Powr f1 f2)"], ["proof (state)\nthis:\n  \\<lbrakk>approx_tm prec ord I a f1 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  \\<lbrakk>approx_tm prec ord I a f2 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Powr f1 f2) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (6 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f1 env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        \\<And>t.\n           \\<lbrakk>approx_tm prec ord I a f2 env = Some t;\n            \\<And>tm.\n               tm \\<in> set env \\<Longrightarrow>\n               num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n           \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 6. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>approx_tm prec ord I a f1 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  \\<lbrakk>approx_tm prec ord I a f2 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Powr f1 f2) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>approx_tm prec ord I a f1 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  \\<lbrakk>approx_tm prec ord I a f2 env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Powr f1 f2) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t) \\<le> length I", "by (auto split: option.splits simp: Let_def compute_tm_by_comp_eq_Some_iff\n        intro!: num_params_tm_comp_le dest!: tm_floatarith_eq_Some_num_params)"], ["proof (state)\nthis:\n  num_params (tm_poly t) \\<le> length I\n\ngoal (5 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "case (Ln f)"], ["proof (state)\nthis:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Ln f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (5 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Ln f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 5. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Ln f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Ln f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t) \\<le> length I", "by (auto split: option.splits simp: Let_def compute_tm_by_comp_eq_Some_iff\n        intro!: num_params_tm_comp_le dest!: tm_floatarith_eq_Some_num_params)"], ["proof (state)\nthis:\n  num_params (tm_poly t) \\<le> length I\n\ngoal (4 subgoals):\n 1. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "case (Power f x2a)"], ["proof (state)\nthis:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Power f x2a) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (4 subgoals):\n 1. \\<And>f x2a t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Power f x2a) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 4. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Power f x2a) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Power f x2a) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t) \\<le> length I", "by (auto split: option.splits simp: Let_def compute_tm_by_comp_eq_Some_iff\n        intro!: num_params_tm_pow_le dest!: tm_floatarith_eq_Some_num_params)"], ["proof (state)\nthis:\n  num_params (tm_poly t) \\<le> length I\n\ngoal (3 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "case (Floor f)"], ["proof (state)\nthis:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Floor f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (3 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   \\<lbrakk>approx_tm prec ord I a f env = Some t;\n                    \\<And>tm.\n                       tm \\<in> set env \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> num_params (tm_poly t) \\<le> length I;\n        approx_tm prec ord I a (Floor f) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 3. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Floor f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>approx_tm prec ord I a f env = Some ?t;\n   \\<And>tm.\n      tm \\<in> set env \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> num_params (tm_poly ?t) \\<le> length I\n  approx_tm prec ord I a (Floor f) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t) \\<le> length I", "by (auto split: option.splits simp: Let_def compute_tm_by_comp_eq_Some_iff\n        intro!: num_params_tm_comp_le dest!: tm_floatarith_eq_Some_num_params)"], ["proof (state)\nthis:\n  num_params (tm_poly t) \\<le> length I\n\ngoal (2 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "case (Var x)"], ["proof (state)\nthis:\n  approx_tm prec ord I a (Var x) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (2 subgoals):\n 1. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Var x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I\n 2. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "then"], ["proof (chain)\npicking this:\n  approx_tm prec ord I a (Var x) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a (Var x) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t) \\<le> length I", "by (auto split: if_splits)"], ["proof (state)\nthis:\n  num_params (tm_poly t) \\<le> length I\n\ngoal (1 subgoal):\n 1. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "case (Num x)"], ["proof (state)\nthis:\n  approx_tm prec ord I a (Num x) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. \\<And>x t.\n       \\<lbrakk>approx_tm prec ord I a (Num x) env = Some t;\n        \\<And>tm.\n           tm \\<in> set env \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> num_params (tm_poly t) \\<le> length I", "then"], ["proof (chain)\npicking this:\n  approx_tm prec ord I a (Num x) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I", "show ?case"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a (Num x) env = Some t\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t) \\<le> length I", "by auto"], ["proof (state)\nthis:\n  num_params (tm_poly t) \\<le> length I\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma in_interval_realI: \"a \\<in>\\<^sub>i I\" if \"a \\<in>\\<^sub>r I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>i I", "using that"], ["proof (prove)\nusing this:\n  real_of_float a \\<in>\\<^sub>r I\n\ngoal (1 subgoal):\n 1. a \\<in>\\<^sub>i I", "by (auto simp: set_of_eq)"], ["", "lemma all_subset_all_inI: \"map interval_of a all_subset I\" if \"a all_in I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map interval_of a all_subset I", "using that"], ["proof (prove)\nusing this:\n  map real_of_float a all_in I\n\ngoal (1 subgoal):\n 1. map interval_of a all_subset I", "by (auto simp: in_interval_realI)"], ["", "lemma compute_tm_by_comp_None: \"compute_tm_by_comp p ord I a x None k = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compute_tm_by_comp p ord I a x None k = None", "by (rule ccontr) (auto simp: compute_tm_by_comp_eq_Some_iff)"], ["", "lemma approx_tm_num_Vars_None:\n  assumes \"max_Var_floatarith f > length env\"\n  shows \"approx_tm p ord I a f env = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. approx_tm p ord I a f env = None", "using assms"], ["proof (prove)\nusing this:\n  length env < max_Var_floatarith f\n\ngoal (1 subgoal):\n 1. approx_tm p ord I a f env = None", "by (induction f) (auto split: option.splits if_splits simp: max_def compute_tm_by_comp_None)"], ["", "lemma approx_tm_num_Vars:\n  assumes \"approx_tm prec ord I a f env = Some t\"\n  shows \"max_Var_floatarith f \\<le> length env\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_Var_floatarith f \\<le> length env", "apply (rule ccontr)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> max_Var_floatarith f \\<le> length env \\<Longrightarrow> False", "using approx_tm_num_Vars_None[of env f prec ord I a] assms"], ["proof (prove)\nusing this:\n  length env < max_Var_floatarith f \\<Longrightarrow>\n  approx_tm prec ord I a f env = None\n  approx_tm prec ord I a f env = Some t\n\ngoal (1 subgoal):\n 1. \\<not> max_Var_floatarith f \\<le> length env \\<Longrightarrow> False", "by auto"], ["", "definition \"range_tms e xs = map (range_tm e) xs\""], ["", "lemma approx_tm_range:\n  assumes a: \"a all_subset I\"\n  assumes t_def: \"approx_tm prec ord I a f env = Some t\"\n  assumes allin: \"xs all_in\\<^sub>i range_tms e env\"\n  assumes devs: \"develops_at_within e a I\"\n  assumes env: \"\\<And>tm. tm \\<in> set env \\<Longrightarrow> num_params (tm_poly tm) \\<le> length I\"\n  shows \"interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t", "using t_def"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a f env = Some t\n\ngoal (1 subgoal):\n 1. interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t", "proof(induct f arbitrary: t)"], ["proof (state)\ngoal (18 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Add f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Add f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Minus f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Minus f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>t.\n        approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n        interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\nA total of 18 subgoals...", "case (Var n)"], ["proof (state)\nthis:\n  approx_tm prec ord I a (Var n) env = Some t\n\ngoal (18 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Add f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Add f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Minus f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Minus f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>t.\n        approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n        interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\nA total of 18 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a (Var n) env = Some t\n\ngoal (1 subgoal):\n 1. interpret_floatarith (Var n) xs \\<in>\\<^sub>i range_tm e t", "using assms(2) allin approx_tm_num_Vars[of prec ord I a \"Var n\" env t]"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a (Var n) env = Some t\n  approx_tm prec ord I a f env = Some t\n  xs all_in\\<^sub>i range_tms e env\n  approx_tm prec ord I a (Var n) env = Some t \\<Longrightarrow>\n  max_Var_floatarith (Var n) \\<le> length env\n\ngoal (1 subgoal):\n 1. interpret_floatarith (Var n) xs \\<in>\\<^sub>i range_tm e t", "by (auto simp: all_in_i_def range_tms_def)"], ["proof (state)\nthis:\n  interpret_floatarith (Var n) xs \\<in>\\<^sub>i range_tm e t\n\ngoal (17 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Add f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Add f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Minus f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Minus f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>t.\n        approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n        interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\nA total of 17 subgoals...", "next"], ["proof (state)\ngoal (17 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Add f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Add f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Minus f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Minus f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>t.\n        approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n        interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\nA total of 17 subgoals...", "case (Num c)"], ["proof (state)\nthis:\n  approx_tm prec ord I a (Num c) env = Some t\n\ngoal (17 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Add f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Add f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Minus f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Minus f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>t.\n        approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n        interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\nA total of 17 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a (Num c) env = Some t\n\ngoal (1 subgoal):\n 1. interpret_floatarith (Num c) xs \\<in>\\<^sub>i range_tm e t", "using assms(2)"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a (Num c) env = Some t\n  approx_tm prec ord I a f env = Some t\n\ngoal (1 subgoal):\n 1. interpret_floatarith (Num c) xs \\<in>\\<^sub>i range_tm e t", "by (auto simp add: assms(3))"], ["proof (state)\nthis:\n  interpret_floatarith (Num c) xs \\<in>\\<^sub>i range_tm e t\n\ngoal (16 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Add f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Add f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Minus f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Minus f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>t.\n        approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n        interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\nA total of 16 subgoals...", "next"], ["proof (state)\ngoal (16 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Add f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Add f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Minus f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Minus f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>t.\n        approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n        interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\nA total of 16 subgoals...", "case (Add l r t)"], ["proof (state)\nthis:\n  approx_tm prec ord I a l env = Some ?t \\<Longrightarrow>\n  interpret_floatarith l xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a r env = Some ?t \\<Longrightarrow>\n  interpret_floatarith r xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Add l r) env = Some t\n\ngoal (16 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Add f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Add f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Minus f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Minus f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>t.\n        approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n        interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\nA total of 16 subgoals...", "obtain t1 where t1_def: \"approx_tm prec ord I a l env = Some t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t1.\n        approx_tm prec ord I a l env = Some t1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis (no_types, lifting) Add(3) approx_tm.simps(3) option.case_eq_if option.collapse prod.case)"], ["proof (state)\nthis:\n  approx_tm prec ord I a l env = Some t1\n\ngoal (16 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Add f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Add f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Minus f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Minus f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>t.\n        approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n        interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\nA total of 16 subgoals...", "obtain t2 where t2_def: \"approx_tm prec ord I a r env = Some t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t2.\n        approx_tm prec ord I a r env = Some t2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (smt Add(3) approx_tm.simps(3) option.case_eq_if option.collapse prod.case)"], ["proof (state)\nthis:\n  approx_tm prec ord I a r env = Some t2\n\ngoal (16 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Add f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Add f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Minus f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Minus f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>t.\n        approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n        interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\nA total of 16 subgoals...", "have t_def: \"t = tm_add t1 t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t = tm_add t1 t2", "using Add(3) t1_def t2_def"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a (Add l r) env = Some t\n  approx_tm prec ord I a l env = Some t1\n  approx_tm prec ord I a r env = Some t2\n\ngoal (1 subgoal):\n 1. t = tm_add t1 t2", "by (metis approx_tm.simps(3) option.case(2) option.inject prod.case)"], ["proof (state)\nthis:\n  t = tm_add t1 t2\n\ngoal (16 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Add f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Add f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Minus f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Minus f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>t.\n        approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n        interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\nA total of 16 subgoals...", "have [simp]: \"interpret_floatarith (floatarith.Add l r) = interpret_floatarith l + interpret_floatarith r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith (Add l r) =\n    interpret_floatarith l + interpret_floatarith r", "by auto"], ["proof (state)\nthis:\n  interpret_floatarith (Add l r) =\n  interpret_floatarith l + interpret_floatarith r\n\ngoal (16 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Add f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Add f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Minus f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Minus f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>t.\n        approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n        interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\nA total of 16 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith (Add l r) xs \\<in>\\<^sub>i range_tm e t", "using Add"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a l env = Some ?t \\<Longrightarrow>\n  interpret_floatarith l xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a r env = Some ?t \\<Longrightarrow>\n  interpret_floatarith r xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Add l r) env = Some t\n\ngoal (1 subgoal):\n 1. interpret_floatarith (Add l r) xs \\<in>\\<^sub>i range_tm e t", "by (auto simp: t_def intro!: tm_add_range Add t1_def t2_def)"], ["proof (state)\nthis:\n  interpret_floatarith (Add l r) xs \\<in>\\<^sub>i range_tm e t\n\ngoal (15 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Minus f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Minus f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                    interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 15 subgoals...", "next"], ["proof (state)\ngoal (15 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Minus f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Minus f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                    interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 15 subgoals...", "case (Minus f t)"], ["proof (state)\nthis:\n  approx_tm prec ord I a f env = Some ?t \\<Longrightarrow>\n  interpret_floatarith f xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Minus f) env = Some t\n\ngoal (15 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Minus f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Minus f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                    interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 15 subgoals...", "have [simp]: \"interpret_floatarith (Minus f) = -interpret_floatarith f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith (Minus f) = - interpret_floatarith f", "by auto"], ["proof (state)\nthis:\n  interpret_floatarith (Minus f) = - interpret_floatarith f\n\ngoal (15 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Minus f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Minus f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                    interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 15 subgoals...", "obtain t1 where t1_def: \"approx_tm prec ord I a f env = Some t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t1.\n        approx_tm prec ord I a f env = Some t1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis Minus.prems(1) approx_tm.simps(4) map_option_eq_Some)"], ["proof (state)\nthis:\n  approx_tm prec ord I a f env = Some t1\n\ngoal (15 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Minus f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Minus f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                    interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 15 subgoals...", "have t_def: \"t = tm_neg t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t = tm_neg t1", "by (metis Minus.prems(1) approx_tm.simps(4) option.inject option.simps(9) t1_def)"], ["proof (state)\nthis:\n  t = tm_neg t1\n\ngoal (15 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Minus f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Minus f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                    interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 15 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith (Minus f) xs \\<in>\\<^sub>i range_tm e t", "by (auto simp: t_def intro!: tm_neg_range t1_def Minus)"], ["proof (state)\nthis:\n  interpret_floatarith (Minus f) xs \\<in>\\<^sub>i range_tm e t\n\ngoal (14 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                    interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 14 subgoals...", "next"], ["proof (state)\ngoal (14 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                    interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 14 subgoals...", "case (Mult l r t)"], ["proof (state)\nthis:\n  approx_tm prec ord I a l env = Some ?t \\<Longrightarrow>\n  interpret_floatarith l xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a r env = Some ?t \\<Longrightarrow>\n  interpret_floatarith r xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Mult l r) env = Some t\n\ngoal (14 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                    interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 14 subgoals...", "obtain t1 where t1_def: \"approx_tm prec ord I a l env = Some t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t1.\n        approx_tm prec ord I a l env = Some t1 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis (no_types, lifting) Mult(3) approx_tm.simps(5) option.case_eq_if option.collapse prod.case)"], ["proof (state)\nthis:\n  approx_tm prec ord I a l env = Some t1\n\ngoal (14 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                    interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 14 subgoals...", "obtain t2 where t2_def: \"approx_tm prec ord I a r env = Some t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t2.\n        approx_tm prec ord I a r env = Some t2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (smt Mult(3) approx_tm.simps(5) option.case_eq_if option.collapse prod.case)"], ["proof (state)\nthis:\n  approx_tm prec ord I a r env = Some t2\n\ngoal (14 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                    interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 14 subgoals...", "have t_def: \"t = tm_mul prec ord I a t1 t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t = tm_mul prec ord I a t1 t2", "using Mult(3) t1_def t2_def"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a (Mult l r) env = Some t\n  approx_tm prec ord I a l env = Some t1\n  approx_tm prec ord I a r env = Some t2\n\ngoal (1 subgoal):\n 1. t = tm_mul prec ord I a t1 t2", "by (metis approx_tm.simps(5) option.case(2) option.inject prod.case)"], ["proof (state)\nthis:\n  t = tm_mul prec ord I a t1 t2\n\ngoal (14 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                    interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 14 subgoals...", "have [simp]: \"interpret_floatarith (floatarith.Mult l r) = interpret_floatarith l * interpret_floatarith r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith (Mult l r) =\n    interpret_floatarith l * interpret_floatarith r", "by auto"], ["proof (state)\nthis:\n  interpret_floatarith (Mult l r) =\n  interpret_floatarith l * interpret_floatarith r\n\ngoal (14 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Mult f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Mult f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                    interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 14 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith (Mult l r) xs \\<in>\\<^sub>i range_tm e t", "using env Mult"], ["proof (prove)\nusing this:\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n  approx_tm prec ord I a l env = Some ?t \\<Longrightarrow>\n  interpret_floatarith l xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a r env = Some ?t \\<Longrightarrow>\n  interpret_floatarith r xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Mult l r) env = Some t\n\ngoal (1 subgoal):\n 1. interpret_floatarith (Mult l r) xs \\<in>\\<^sub>i range_tm e t", "by (auto simp add: t_def intro!: tm_mul_range Mult t1_def t2_def devs\n        num_params_approx_tm[OF t1_def] num_params_approx_tm[OF t2_def])"], ["proof (state)\nthis:\n  interpret_floatarith (Mult l r) xs \\<in>\\<^sub>i range_tm e t\n\ngoal (13 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f1 f2 t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                    interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n         \\<And>t.\n            approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n            interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 13 subgoals...", "next"], ["proof (state)\ngoal (13 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f1 f2 t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                    interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n         \\<And>t.\n            approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n            interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 13 subgoals...", "case (Power f k t)"], ["proof (state)\nthis:\n  approx_tm prec ord I a f env = Some ?t \\<Longrightarrow>\n  interpret_floatarith f xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Power f k) env = Some t\n\ngoal (13 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f1 f2 t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                    interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n         \\<And>t.\n            approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n            interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 13 subgoals...", "from Power(2)"], ["proof (chain)\npicking this:\n  approx_tm prec ord I a (Power f k) env = Some t", "obtain tm_f where tm_f_def: \"approx_tm prec ord I a f env = Some tm_f\""], ["proof (prove)\nusing this:\n  approx_tm prec ord I a (Power f k) env = Some t\n\ngoal (1 subgoal):\n 1. (\\<And>tm_f.\n        approx_tm prec ord I a f env = Some tm_f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>tm_f.\n                approx_tm prec ord I a f env = Some tm_f \\<Longrightarrow>\n                thesis;\n     \\<exists>z.\n        approx_tm prec ord I a f env = Some z \\<and>\n        tm_pow prec ord I a z k = t\\<rbrakk>\n    \\<Longrightarrow> thesis", "by metis"], ["proof (state)\nthis:\n  approx_tm prec ord I a f env = Some tm_f\n\ngoal (13 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f1 f2 t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                    interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n         \\<And>t.\n            approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n            interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 13 subgoals...", "have t_decomp: \"t = tm_pow prec ord I a tm_f k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t = tm_pow prec ord I a tm_f k", "using Power(2)"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a (Power f k) env = Some t\n\ngoal (1 subgoal):\n 1. t = tm_pow prec ord I a tm_f k", "by (simp add: tm_f_def)"], ["proof (state)\nthis:\n  t = tm_pow prec ord I a tm_f k\n\ngoal (13 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f1 f2 t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                    interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n         \\<And>t.\n            approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n            interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 13 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith (Power f k) xs \\<in>\\<^sub>i range_tm e t", "using env Power"], ["proof (prove)\nusing this:\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n  approx_tm prec ord I a f env = Some ?t \\<Longrightarrow>\n  interpret_floatarith f xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Power f k) env = Some t\n\ngoal (1 subgoal):\n 1. interpret_floatarith (Power f k) xs \\<in>\\<^sub>i range_tm e t", "by (auto simp add: t_def tm_f_def intro!: tm_pow_range Power  devs\n        num_params_approx_tm[OF tm_f_def])"], ["proof (state)\nthis:\n  interpret_floatarith (Power f k) xs \\<in>\\<^sub>i range_tm e t\n\ngoal (12 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f1 f2 t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                    interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n         \\<And>t.\n            approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n            interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 12 subgoals...", "next"], ["proof (state)\ngoal (12 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f1 f2 t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                    interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n         \\<And>t.\n            approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n            interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 12 subgoals...", "case (Inverse f t)"], ["proof (state)\nthis:\n  approx_tm prec ord I a f env = Some ?t \\<Longrightarrow>\n  interpret_floatarith f xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Inverse f) env = Some t\n\ngoal (12 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f1 f2 t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                    interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n         \\<And>t.\n            approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n            interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 12 subgoals...", "from Inverse"], ["proof (chain)\npicking this:\n  approx_tm prec ord I a f env = Some ?t \\<Longrightarrow>\n  interpret_floatarith f xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Inverse f) env = Some t", "obtain tf where tf_def: \"approx_tm prec ord I a f env = Some tf\""], ["proof (prove)\nusing this:\n  approx_tm prec ord I a f env = Some ?t \\<Longrightarrow>\n  interpret_floatarith f xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Inverse f) env = Some t\n\ngoal (1 subgoal):\n 1. (\\<And>tf.\n        approx_tm prec ord I a f env = Some tf \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: compute_tm_by_comp_eq_Some_iff)"], ["proof (state)\nthis:\n  approx_tm prec ord I a f env = Some tf\n\ngoal (12 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f1 f2 t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                    interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n         \\<And>t.\n            approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n            interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 12 subgoals...", "have safe: \"\\<And>x. x \\<in>\\<^sub>r (compute_bound_tm prec I a tf) \\<Longrightarrow>\n          0 < lower (compute_bound_tm prec I a tf) \\<or> upper (compute_bound_tm prec I a tf) < 0 \\<Longrightarrow>\n          isDERIV 0 (Inverse (Var 0)) [x]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n        0 < lower (compute_bound_tm prec I a tf) \\<or>\n        upper (compute_bound_tm prec I a tf) < 0\\<rbrakk>\n       \\<Longrightarrow> isDERIV 0 (Inverse (Var 0)) [x]", "by (simp add: set_of_eq , safe, simp_all)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n   0 < lower (compute_bound_tm prec I a tf) \\<or>\n   upper (compute_bound_tm prec I a tf) < 0\\<rbrakk>\n  \\<Longrightarrow> isDERIV 0 (Inverse (Var 0)) [?x]\n\ngoal (12 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f1 f2 t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                    interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n         \\<And>t.\n            approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n            interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 12 subgoals...", "have np: \"num_params (tm_poly tf) \\<le> length I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly tf) \\<le> length I", "using tf_def"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a f env = Some tf\n\ngoal (1 subgoal):\n 1. num_params (tm_poly tf) \\<le> length I", "apply (rule num_params_approx_tm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>tm.\n       tm \\<in> set env \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "using assms"], ["proof (prove)\nusing this:\n  a all_subset I\n  approx_tm prec ord I a f env = Some t\n  xs all_in\\<^sub>i range_tms e env\n  develops_at_within e a I\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. \\<And>tm.\n       tm \\<in> set env \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "by auto"], ["proof (state)\nthis:\n  num_params (tm_poly tf) \\<le> length I\n\ngoal (12 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Inverse f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Inverse f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f1 f2 t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                    interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n         \\<And>t.\n            approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n            interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 12 subgoals...", "from compute_tm_by_comp_range[OF _ a\n      Inverse(1)[OF tf_def]\n      Inverse(2)[unfolded approx_tm.simps tf_def]\n      safe np devs]"], ["proof (chain)\npicking this:\n  \\<lbrakk>max_Var_floatarith (Inverse (Var 0)) \\<le> 1;\n   \\<And>x.\n      \\<lbrakk>x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n       0 < lower (compute_bound_tm prec I a tf) \\<or>\n       upper (compute_bound_tm prec I a tf) < 0\\<rbrakk>\n      \\<Longrightarrow> x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n   \\<And>x.\n      \\<lbrakk>x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n       0 < lower (compute_bound_tm prec I a tf) \\<or>\n       upper (compute_bound_tm prec I a tf) < 0\\<rbrakk>\n      \\<Longrightarrow> 0 < lower (compute_bound_tm prec I a tf) \\<or>\n                        upper (compute_bound_tm prec I a tf) < 0\\<rbrakk>\n  \\<Longrightarrow> interpret_floatarith (Inverse (Var 0))\n                     [interpret_floatarith f xs]\n                    \\<in>\\<^sub>i range_tm e t", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>max_Var_floatarith (Inverse (Var 0)) \\<le> 1;\n   \\<And>x.\n      \\<lbrakk>x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n       0 < lower (compute_bound_tm prec I a tf) \\<or>\n       upper (compute_bound_tm prec I a tf) < 0\\<rbrakk>\n      \\<Longrightarrow> x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n   \\<And>x.\n      \\<lbrakk>x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n       0 < lower (compute_bound_tm prec I a tf) \\<or>\n       upper (compute_bound_tm prec I a tf) < 0\\<rbrakk>\n      \\<Longrightarrow> 0 < lower (compute_bound_tm prec I a tf) \\<or>\n                        upper (compute_bound_tm prec I a tf) < 0\\<rbrakk>\n  \\<Longrightarrow> interpret_floatarith (Inverse (Var 0))\n                     [interpret_floatarith f xs]\n                    \\<in>\\<^sub>i range_tm e t\n\ngoal (1 subgoal):\n 1. interpret_floatarith (Inverse f) xs \\<in>\\<^sub>i range_tm e t", "by simp"], ["proof (state)\nthis:\n  interpret_floatarith (Inverse f) xs \\<in>\\<^sub>i range_tm e t\n\ngoal (11 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                    interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Ln f) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Ln f) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 11 subgoals...", "next"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                    interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Ln f) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Ln f) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 11 subgoals...", "case hyps: (Cos f t)"], ["proof (state)\nthis:\n  approx_tm prec ord I a f env = Some ?t \\<Longrightarrow>\n  interpret_floatarith f xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Cos f) env = Some t\n\ngoal (11 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                    interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Ln f) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Ln f) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 11 subgoals...", "from hyps"], ["proof (chain)\npicking this:\n  approx_tm prec ord I a f env = Some ?t \\<Longrightarrow>\n  interpret_floatarith f xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Cos f) env = Some t", "obtain tf where tf_def: \"approx_tm prec ord I a f env = Some tf\""], ["proof (prove)\nusing this:\n  approx_tm prec ord I a f env = Some ?t \\<Longrightarrow>\n  interpret_floatarith f xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Cos f) env = Some t\n\ngoal (1 subgoal):\n 1. (\\<And>tf.\n        approx_tm prec ord I a f env = Some tf \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: compute_tm_by_comp_eq_Some_iff)"], ["proof (state)\nthis:\n  approx_tm prec ord I a f env = Some tf\n\ngoal (11 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                    interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Ln f) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Ln f) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 11 subgoals...", "have np: \"num_params (tm_poly tf) \\<le> length I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly tf) \\<le> length I", "using tf_def"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a f env = Some tf\n\ngoal (1 subgoal):\n 1. num_params (tm_poly tf) \\<le> length I", "apply (rule num_params_approx_tm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>tm.\n       tm \\<in> set env \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "using assms"], ["proof (prove)\nusing this:\n  a all_subset I\n  approx_tm prec ord I a f env = Some t\n  xs all_in\\<^sub>i range_tms e env\n  develops_at_within e a I\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. \\<And>tm.\n       tm \\<in> set env \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "by auto"], ["proof (state)\nthis:\n  num_params (tm_poly tf) \\<le> length I\n\ngoal (11 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Cos f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Cos f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                    interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Ln f) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Ln f) xs\n                          \\<in>\\<^sub>i range_tm e t\nA total of 11 subgoals...", "from compute_tm_by_comp_range[OF _ a\n      hyps(1)[OF tf_def]\n      hyps(2)[unfolded approx_tm.simps tf_def]\n      _ np devs]"], ["proof (chain)\npicking this:\n  \\<lbrakk>max_Var_floatarith (Cos (Var 0)) \\<le> 1;\n   \\<And>x.\n      \\<lbrakk>x \\<in>\\<^sub>r compute_bound_tm prec I a tf; True\\<rbrakk>\n      \\<Longrightarrow> isDERIV 0 (Cos (Var 0)) [x]\\<rbrakk>\n  \\<Longrightarrow> interpret_floatarith (Cos (Var 0))\n                     [interpret_floatarith f xs]\n                    \\<in>\\<^sub>i range_tm e t", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>max_Var_floatarith (Cos (Var 0)) \\<le> 1;\n   \\<And>x.\n      \\<lbrakk>x \\<in>\\<^sub>r compute_bound_tm prec I a tf; True\\<rbrakk>\n      \\<Longrightarrow> isDERIV 0 (Cos (Var 0)) [x]\\<rbrakk>\n  \\<Longrightarrow> interpret_floatarith (Cos (Var 0))\n                     [interpret_floatarith f xs]\n                    \\<in>\\<^sub>i range_tm e t\n\ngoal (1 subgoal):\n 1. interpret_floatarith (Cos f) xs \\<in>\\<^sub>i range_tm e t", "by simp"], ["proof (state)\nthis:\n  interpret_floatarith (Cos f) xs \\<in>\\<^sub>i range_tm e t\n\ngoal (10 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Ln f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Ln f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                    interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                          \\<in>\\<^sub>i range_tm e t", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Ln f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Ln f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                    interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                          \\<in>\\<^sub>i range_tm e t", "case hyps: (Arctan f t)"], ["proof (state)\nthis:\n  approx_tm prec ord I a f env = Some ?t \\<Longrightarrow>\n  interpret_floatarith f xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Arctan f) env = Some t\n\ngoal (10 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Ln f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Ln f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                    interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                          \\<in>\\<^sub>i range_tm e t", "from hyps"], ["proof (chain)\npicking this:\n  approx_tm prec ord I a f env = Some ?t \\<Longrightarrow>\n  interpret_floatarith f xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Arctan f) env = Some t", "obtain tf where tf_def: \"approx_tm prec ord I a f env = Some tf\""], ["proof (prove)\nusing this:\n  approx_tm prec ord I a f env = Some ?t \\<Longrightarrow>\n  interpret_floatarith f xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Arctan f) env = Some t\n\ngoal (1 subgoal):\n 1. (\\<And>tf.\n        approx_tm prec ord I a f env = Some tf \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: compute_tm_by_comp_eq_Some_iff)"], ["proof (state)\nthis:\n  approx_tm prec ord I a f env = Some tf\n\ngoal (10 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Ln f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Ln f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                    interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                          \\<in>\\<^sub>i range_tm e t", "have np: \"num_params (tm_poly tf) \\<le> length I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly tf) \\<le> length I", "using tf_def"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a f env = Some tf\n\ngoal (1 subgoal):\n 1. num_params (tm_poly tf) \\<le> length I", "apply (rule num_params_approx_tm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>tm.\n       tm \\<in> set env \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "using assms"], ["proof (prove)\nusing this:\n  a all_subset I\n  approx_tm prec ord I a f env = Some t\n  xs all_in\\<^sub>i range_tms e env\n  develops_at_within e a I\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. \\<And>tm.\n       tm \\<in> set env \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "by auto"], ["proof (state)\nthis:\n  num_params (tm_poly tf) \\<le> length I\n\ngoal (10 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Arctan f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Arctan f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Ln f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Ln f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 10. \\<And>f t.\n        \\<lbrakk>\\<And>t.\n                    approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                    interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n         approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n        \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                          \\<in>\\<^sub>i range_tm e t", "from compute_tm_by_comp_range[OF _ a\n      hyps(1)[OF tf_def]\n      hyps(2)[unfolded approx_tm.simps tf_def]\n      _ np devs]"], ["proof (chain)\npicking this:\n  \\<lbrakk>max_Var_floatarith (Arctan (Var 0)) \\<le> 1;\n   \\<And>x.\n      \\<lbrakk>x \\<in>\\<^sub>r compute_bound_tm prec I a tf; True\\<rbrakk>\n      \\<Longrightarrow> isDERIV 0 (Arctan (Var 0)) [x]\\<rbrakk>\n  \\<Longrightarrow> interpret_floatarith (Arctan (Var 0))\n                     [interpret_floatarith f xs]\n                    \\<in>\\<^sub>i range_tm e t", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>max_Var_floatarith (Arctan (Var 0)) \\<le> 1;\n   \\<And>x.\n      \\<lbrakk>x \\<in>\\<^sub>r compute_bound_tm prec I a tf; True\\<rbrakk>\n      \\<Longrightarrow> isDERIV 0 (Arctan (Var 0)) [x]\\<rbrakk>\n  \\<Longrightarrow> interpret_floatarith (Arctan (Var 0))\n                     [interpret_floatarith f xs]\n                    \\<in>\\<^sub>i range_tm e t\n\ngoal (1 subgoal):\n 1. interpret_floatarith (Arctan f) xs \\<in>\\<^sub>i range_tm e t", "by simp"], ["proof (state)\nthis:\n  interpret_floatarith (Arctan f) xs \\<in>\\<^sub>i range_tm e t\n\ngoal (9 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Ln f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Ln f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Ln f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Ln f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "case hyps: (Exp f t)"], ["proof (state)\nthis:\n  approx_tm prec ord I a f env = Some ?t \\<Longrightarrow>\n  interpret_floatarith f xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Exp f) env = Some t\n\ngoal (9 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Ln f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Ln f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "from hyps"], ["proof (chain)\npicking this:\n  approx_tm prec ord I a f env = Some ?t \\<Longrightarrow>\n  interpret_floatarith f xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Exp f) env = Some t", "obtain tf where tf_def: \"approx_tm prec ord I a f env = Some tf\""], ["proof (prove)\nusing this:\n  approx_tm prec ord I a f env = Some ?t \\<Longrightarrow>\n  interpret_floatarith f xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Exp f) env = Some t\n\ngoal (1 subgoal):\n 1. (\\<And>tf.\n        approx_tm prec ord I a f env = Some tf \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: compute_tm_by_comp_eq_Some_iff)"], ["proof (state)\nthis:\n  approx_tm prec ord I a f env = Some tf\n\ngoal (9 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Ln f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Ln f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "have np: \"num_params (tm_poly tf) \\<le> length I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly tf) \\<le> length I", "using tf_def"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a f env = Some tf\n\ngoal (1 subgoal):\n 1. num_params (tm_poly tf) \\<le> length I", "apply (rule num_params_approx_tm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>tm.\n       tm \\<in> set env \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "using assms"], ["proof (prove)\nusing this:\n  a all_subset I\n  approx_tm prec ord I a f env = Some t\n  xs all_in\\<^sub>i range_tms e env\n  develops_at_within e a I\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. \\<And>tm.\n       tm \\<in> set env \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "by auto"], ["proof (state)\nthis:\n  num_params (tm_poly tf) \\<le> length I\n\ngoal (9 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Exp f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Exp f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Ln f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Ln f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 9. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "from compute_tm_by_comp_range[OF _ a\n      hyps(1)[OF tf_def]\n      hyps(2)[unfolded approx_tm.simps tf_def]\n      _ np devs]"], ["proof (chain)\npicking this:\n  \\<lbrakk>max_Var_floatarith (Exp (Var 0)) \\<le> 1;\n   \\<And>x.\n      \\<lbrakk>x \\<in>\\<^sub>r compute_bound_tm prec I a tf; True\\<rbrakk>\n      \\<Longrightarrow> isDERIV 0 (Exp (Var 0)) [x]\\<rbrakk>\n  \\<Longrightarrow> interpret_floatarith (Exp (Var 0))\n                     [interpret_floatarith f xs]\n                    \\<in>\\<^sub>i range_tm e t", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>max_Var_floatarith (Exp (Var 0)) \\<le> 1;\n   \\<And>x.\n      \\<lbrakk>x \\<in>\\<^sub>r compute_bound_tm prec I a tf; True\\<rbrakk>\n      \\<Longrightarrow> isDERIV 0 (Exp (Var 0)) [x]\\<rbrakk>\n  \\<Longrightarrow> interpret_floatarith (Exp (Var 0))\n                     [interpret_floatarith f xs]\n                    \\<in>\\<^sub>i range_tm e t\n\ngoal (1 subgoal):\n 1. interpret_floatarith (Exp f) xs \\<in>\\<^sub>i range_tm e t", "by simp"], ["proof (state)\nthis:\n  interpret_floatarith (Exp f) xs \\<in>\\<^sub>i range_tm e t\n\ngoal (8 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Ln f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Ln f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Ln f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Ln f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "case hyps: (Ln f t)"], ["proof (state)\nthis:\n  approx_tm prec ord I a f env = Some ?t \\<Longrightarrow>\n  interpret_floatarith f xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Ln f) env = Some t\n\ngoal (8 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Ln f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Ln f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "from hyps"], ["proof (chain)\npicking this:\n  approx_tm prec ord I a f env = Some ?t \\<Longrightarrow>\n  interpret_floatarith f xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Ln f) env = Some t", "obtain tf where tf_def: \"approx_tm prec ord I a f env = Some tf\""], ["proof (prove)\nusing this:\n  approx_tm prec ord I a f env = Some ?t \\<Longrightarrow>\n  interpret_floatarith f xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Ln f) env = Some t\n\ngoal (1 subgoal):\n 1. (\\<And>tf.\n        approx_tm prec ord I a f env = Some tf \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: compute_tm_by_comp_eq_Some_iff)"], ["proof (state)\nthis:\n  approx_tm prec ord I a f env = Some tf\n\ngoal (8 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Ln f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Ln f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "have safe: \"\\<And>x. x \\<in>\\<^sub>r compute_bound_tm prec I a tf \\<Longrightarrow>\n        0 < lower (compute_bound_tm prec I a tf) \\<Longrightarrow> isDERIV 0 (Ln (Var 0)) [x]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n        0 < lower (compute_bound_tm prec I a tf)\\<rbrakk>\n       \\<Longrightarrow> isDERIV 0 (Ln (Var 0)) [x]", "by (auto simp: set_of_eq)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n   0 < lower (compute_bound_tm prec I a tf)\\<rbrakk>\n  \\<Longrightarrow> isDERIV 0 (Ln (Var 0)) [?x]\n\ngoal (8 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Ln f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Ln f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "have np: \"num_params (tm_poly tf) \\<le> length I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly tf) \\<le> length I", "using tf_def"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a f env = Some tf\n\ngoal (1 subgoal):\n 1. num_params (tm_poly tf) \\<le> length I", "apply (rule num_params_approx_tm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>tm.\n       tm \\<in> set env \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "using assms"], ["proof (prove)\nusing this:\n  a all_subset I\n  approx_tm prec ord I a f env = Some t\n  xs all_in\\<^sub>i range_tms e env\n  develops_at_within e a I\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. \\<And>tm.\n       tm \\<in> set env \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "by auto"], ["proof (state)\nthis:\n  num_params (tm_poly tf) \\<le> length I\n\ngoal (8 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Ln f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Ln f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 8. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "from compute_tm_by_comp_range[OF _ a\n      hyps(1)[OF tf_def]\n      hyps(2)[unfolded approx_tm.simps tf_def]\n      safe np devs]"], ["proof (chain)\npicking this:\n  \\<lbrakk>max_Var_floatarith (Ln (Var 0)) \\<le> 1;\n   \\<And>x.\n      \\<lbrakk>x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n       0 < lower (compute_bound_tm prec I a tf)\\<rbrakk>\n      \\<Longrightarrow> x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n   \\<And>x.\n      \\<lbrakk>x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n       0 < lower (compute_bound_tm prec I a tf)\\<rbrakk>\n      \\<Longrightarrow> 0 < lower (compute_bound_tm prec I a tf)\\<rbrakk>\n  \\<Longrightarrow> interpret_floatarith (Ln (Var 0))\n                     [interpret_floatarith f xs]\n                    \\<in>\\<^sub>i range_tm e t", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>max_Var_floatarith (Ln (Var 0)) \\<le> 1;\n   \\<And>x.\n      \\<lbrakk>x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n       0 < lower (compute_bound_tm prec I a tf)\\<rbrakk>\n      \\<Longrightarrow> x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n   \\<And>x.\n      \\<lbrakk>x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n       0 < lower (compute_bound_tm prec I a tf)\\<rbrakk>\n      \\<Longrightarrow> 0 < lower (compute_bound_tm prec I a tf)\\<rbrakk>\n  \\<Longrightarrow> interpret_floatarith (Ln (Var 0))\n                     [interpret_floatarith f xs]\n                    \\<in>\\<^sub>i range_tm e t\n\ngoal (1 subgoal):\n 1. interpret_floatarith (Ln f) xs \\<in>\\<^sub>i range_tm e t", "by simp"], ["proof (state)\nthis:\n  interpret_floatarith (Ln f) xs \\<in>\\<^sub>i range_tm e t\n\ngoal (7 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "case hyps: (Sqrt f t)"], ["proof (state)\nthis:\n  approx_tm prec ord I a f env = Some ?t \\<Longrightarrow>\n  interpret_floatarith f xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Sqrt f) env = Some t\n\ngoal (7 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "from hyps"], ["proof (chain)\npicking this:\n  approx_tm prec ord I a f env = Some ?t \\<Longrightarrow>\n  interpret_floatarith f xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Sqrt f) env = Some t", "obtain tf where tf_def: \"approx_tm prec ord I a f env = Some tf\""], ["proof (prove)\nusing this:\n  approx_tm prec ord I a f env = Some ?t \\<Longrightarrow>\n  interpret_floatarith f xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Sqrt f) env = Some t\n\ngoal (1 subgoal):\n 1. (\\<And>tf.\n        approx_tm prec ord I a f env = Some tf \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: compute_tm_by_comp_eq_Some_iff)"], ["proof (state)\nthis:\n  approx_tm prec ord I a f env = Some tf\n\ngoal (7 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "have safe: \"\\<And>x. x \\<in>\\<^sub>r compute_bound_tm prec I a tf \\<Longrightarrow>\n        0 < lower (compute_bound_tm prec I a tf) \\<Longrightarrow> isDERIV 0 (Sqrt (Var 0)) [x]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n        0 < lower (compute_bound_tm prec I a tf)\\<rbrakk>\n       \\<Longrightarrow> isDERIV 0 (Sqrt (Var 0)) [x]", "by (auto simp: set_of_eq)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n   0 < lower (compute_bound_tm prec I a tf)\\<rbrakk>\n  \\<Longrightarrow> isDERIV 0 (Sqrt (Var 0)) [?x]\n\ngoal (7 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "have np: \"num_params (tm_poly tf) \\<le> length I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly tf) \\<le> length I", "using tf_def"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a f env = Some tf\n\ngoal (1 subgoal):\n 1. num_params (tm_poly tf) \\<le> length I", "apply (rule num_params_approx_tm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>tm.\n       tm \\<in> set env \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "using assms"], ["proof (prove)\nusing this:\n  a all_subset I\n  approx_tm prec ord I a f env = Some t\n  xs all_in\\<^sub>i range_tms e env\n  develops_at_within e a I\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. \\<And>tm.\n       tm \\<in> set env \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "by auto"], ["proof (state)\nthis:\n  num_params (tm_poly tf) \\<le> length I\n\ngoal (7 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Sqrt f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Sqrt f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 7. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "from compute_tm_by_comp_range[OF _ a\n      hyps(1)[OF tf_def]\n      hyps(2)[unfolded approx_tm.simps tf_def]\n      safe np devs]"], ["proof (chain)\npicking this:\n  \\<lbrakk>max_Var_floatarith (Sqrt (Var 0)) \\<le> 1;\n   \\<And>x.\n      \\<lbrakk>x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n       0 < lower (compute_bound_tm prec I a tf)\\<rbrakk>\n      \\<Longrightarrow> x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n   \\<And>x.\n      \\<lbrakk>x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n       0 < lower (compute_bound_tm prec I a tf)\\<rbrakk>\n      \\<Longrightarrow> 0 < lower (compute_bound_tm prec I a tf)\\<rbrakk>\n  \\<Longrightarrow> interpret_floatarith (Sqrt (Var 0))\n                     [interpret_floatarith f xs]\n                    \\<in>\\<^sub>i range_tm e t", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>max_Var_floatarith (Sqrt (Var 0)) \\<le> 1;\n   \\<And>x.\n      \\<lbrakk>x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n       0 < lower (compute_bound_tm prec I a tf)\\<rbrakk>\n      \\<Longrightarrow> x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n   \\<And>x.\n      \\<lbrakk>x \\<in>\\<^sub>r compute_bound_tm prec I a tf;\n       0 < lower (compute_bound_tm prec I a tf)\\<rbrakk>\n      \\<Longrightarrow> 0 < lower (compute_bound_tm prec I a tf)\\<rbrakk>\n  \\<Longrightarrow> interpret_floatarith (Sqrt (Var 0))\n                     [interpret_floatarith f xs]\n                    \\<in>\\<^sub>i range_tm e t\n\ngoal (1 subgoal):\n 1. interpret_floatarith (Sqrt f) xs \\<in>\\<^sub>i range_tm e t", "by simp"], ["proof (state)\nthis:\n  interpret_floatarith (Sqrt f) xs \\<in>\\<^sub>i range_tm e t\n\ngoal (6 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "case (Pi t)"], ["proof (state)\nthis:\n  approx_tm prec ord I a Pi env = Some t\n\ngoal (6 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "hence \"t = tm_pi prec\""], ["proof (prove)\nusing this:\n  approx_tm prec ord I a Pi env = Some t\n\ngoal (1 subgoal):\n 1. t = tm_pi prec", "by simp"], ["proof (state)\nthis:\n  t = tm_pi prec\n\ngoal (6 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>t.\n       approx_tm prec ord I a Pi env = Some t \\<Longrightarrow>\n       interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 6. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "then"], ["proof (chain)\npicking this:\n  t = tm_pi prec", "show ?case"], ["proof (prove)\nusing this:\n  t = tm_pi prec\n\ngoal (1 subgoal):\n 1. interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t", "by (auto intro!: range_tm_tm_pi)"], ["proof (state)\nthis:\n  interpret_floatarith Pi xs \\<in>\\<^sub>i range_tm e t\n\ngoal (5 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "case (Abs f t)"], ["proof (state)\nthis:\n  approx_tm prec ord I a f env = Some ?t \\<Longrightarrow>\n  interpret_floatarith f xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Abs f) env = Some t\n\ngoal (5 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "from Abs(2)"], ["proof (chain)\npicking this:\n  approx_tm prec ord I a (Abs f) env = Some t", "obtain tf where tf_def: \"approx_tm prec ord I a f env = Some tf\"\n    and  t_def: \"t = tm_abs prec I a tf\""], ["proof (prove)\nusing this:\n  approx_tm prec ord I a (Abs f) env = Some t\n\ngoal (1 subgoal):\n 1. (\\<And>tf.\n        \\<lbrakk>approx_tm prec ord I a f env = Some tf;\n         t = tm_abs prec I a tf\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (no_types, lifting) approx_tm.simps(14) map_option_eq_Some)"], ["proof (state)\nthis:\n  approx_tm prec ord I a f env = Some tf\n  t = tm_abs prec I a tf\n\ngoal (5 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "have np: \"num_params (tm_poly tf) \\<le> length I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly tf) \\<le> length I", "using tf_def"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a f env = Some tf\n\ngoal (1 subgoal):\n 1. num_params (tm_poly tf) \\<le> length I", "apply (rule num_params_approx_tm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>tm.\n       tm \\<in> set env \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "using assms"], ["proof (prove)\nusing this:\n  a all_subset I\n  approx_tm prec ord I a f env = Some t\n  xs all_in\\<^sub>i range_tms e env\n  develops_at_within e a I\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. \\<And>tm.\n       tm \\<in> set env \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "by auto"], ["proof (state)\nthis:\n  num_params (tm_poly tf) \\<le> length I\n\ngoal (5 subgoals):\n 1. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Abs f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Abs f) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 5. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "from tm_abs_range[OF Abs(1)[OF tf_def] np devs]"], ["proof (chain)\npicking this:\n  \\<bar>interpret_floatarith f xs\\<bar>\n  \\<in>\\<^sub>i range_tm e (tm_abs ?prec I a tf)", "show ?case"], ["proof (prove)\nusing this:\n  \\<bar>interpret_floatarith f xs\\<bar>\n  \\<in>\\<^sub>i range_tm e (tm_abs ?prec I a tf)\n\ngoal (1 subgoal):\n 1. interpret_floatarith (Abs f) xs \\<in>\\<^sub>i range_tm e t", "unfolding t_def interpret_floatarith.simps(9) comp_def"], ["proof (prove)\nusing this:\n  \\<bar>interpret_floatarith f xs\\<bar>\n  \\<in>\\<^sub>i range_tm e (tm_abs ?prec I a tf)\n\ngoal (1 subgoal):\n 1. \\<bar>interpret_floatarith f xs\\<bar>\n    \\<in>\\<^sub>i range_tm e (tm_abs prec I a tf)", "by assumption"], ["proof (state)\nthis:\n  interpret_floatarith (Abs f) xs \\<in>\\<^sub>i range_tm e t\n\ngoal (4 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "case hyps: (Min l r t)"], ["proof (state)\nthis:\n  approx_tm prec ord I a l env = Some ?t \\<Longrightarrow>\n  interpret_floatarith l xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a r env = Some ?t \\<Longrightarrow>\n  interpret_floatarith r xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Min l r) env = Some t\n\ngoal (4 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "from hyps(3)"], ["proof (chain)\npicking this:\n  approx_tm prec ord I a (Min l r) env = Some t", "obtain t1 t2 where t_decomp: \"t = tm_min prec I a t1 t2\"\n    and t1_def: \"Some t1 = approx_tm prec ord I a l env\"\n    and t2_def: \"approx_tm prec ord I a r env = Some t2\""], ["proof (prove)\nusing this:\n  approx_tm prec ord I a (Min l r) env = Some t\n\ngoal (1 subgoal):\n 1. (\\<And>t1 t2.\n        \\<lbrakk>t = tm_min prec I a t1 t2;\n         Some t1 = approx_tm prec ord I a l env;\n         approx_tm prec ord I a r env = Some t2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (smt approx_tm.simps(15) option.case_eq_if option.collapse option.distinct(2) option.inject split_conv)"], ["proof (state)\nthis:\n  t = tm_min prec I a t1 t2\n  Some t1 = approx_tm prec ord I a l env\n  approx_tm prec ord I a r env = Some t2\n\ngoal (4 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "from this(2,3) hyps(1-3)"], ["proof (chain)\npicking this:\n  Some t1 = approx_tm prec ord I a l env\n  approx_tm prec ord I a r env = Some t2\n  approx_tm prec ord I a l env = Some ?t \\<Longrightarrow>\n  interpret_floatarith l xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a r env = Some ?t \\<Longrightarrow>\n  interpret_floatarith r xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Min l r) env = Some t", "have t1_range: \"(interpret_floatarith l xs) \\<in>\\<^sub>i range_tm e t1\"\n    and  t2_range: \"(interpret_floatarith r xs) \\<in>\\<^sub>i range_tm e t2\""], ["proof (prove)\nusing this:\n  Some t1 = approx_tm prec ord I a l env\n  approx_tm prec ord I a r env = Some t2\n  approx_tm prec ord I a l env = Some ?t \\<Longrightarrow>\n  interpret_floatarith l xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a r env = Some ?t \\<Longrightarrow>\n  interpret_floatarith r xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Min l r) env = Some t\n\ngoal (1 subgoal):\n 1. interpret_floatarith l xs \\<in>\\<^sub>i range_tm e t1 &&&\n    interpret_floatarith r xs \\<in>\\<^sub>i range_tm e t2", "by auto"], ["proof (state)\nthis:\n  interpret_floatarith l xs \\<in>\\<^sub>i range_tm e t1\n  interpret_floatarith r xs \\<in>\\<^sub>i range_tm e t2\n\ngoal (4 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "have [simp]: \"interpret_floatarith (floatarith.Min l r) = (\\<lambda>vs. min (interpret_floatarith l vs) (interpret_floatarith r vs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith (Min l r) =\n    (\\<lambda>vs.\n        min (interpret_floatarith l vs) (interpret_floatarith r vs))", "by auto"], ["proof (state)\nthis:\n  interpret_floatarith (Min l r) =\n  (\\<lambda>vs. min (interpret_floatarith l vs) (interpret_floatarith r vs))\n\ngoal (4 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "have np1: \"num_params (tm_poly t1) \\<le> length I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly t1) \\<le> length I", "using t1_def[symmetric]"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a l env = Some t1\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t1) \\<le> length I", "apply (rule num_params_approx_tm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>tm.\n       tm \\<in> set env \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "using assms"], ["proof (prove)\nusing this:\n  a all_subset I\n  approx_tm prec ord I a f env = Some t\n  xs all_in\\<^sub>i range_tms e env\n  develops_at_within e a I\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. \\<And>tm.\n       tm \\<in> set env \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "by auto"], ["proof (state)\nthis:\n  num_params (tm_poly t1) \\<le> length I\n\ngoal (4 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "have np2: \"num_params (tm_poly t2) \\<le> length I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly t2) \\<le> length I", "using t2_def"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a r env = Some t2\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t2) \\<le> length I", "apply (rule num_params_approx_tm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>tm.\n       tm \\<in> set env \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "using assms"], ["proof (prove)\nusing this:\n  a all_subset I\n  approx_tm prec ord I a f env = Some t\n  xs all_in\\<^sub>i range_tms e env\n  develops_at_within e a I\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. \\<And>tm.\n       tm \\<in> set env \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "by auto"], ["proof (state)\nthis:\n  num_params (tm_poly t2) \\<le> length I\n\ngoal (4 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Min f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Min f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 4. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith (Min l r) xs \\<in>\\<^sub>i range_tm e t", "unfolding t_decomp(1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith (Min l r) xs\n    \\<in>\\<^sub>i range_tm e (tm_min prec I a t1 t2)", "apply(simp del: tm_min.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. min (interpret_floatarith l xs) (interpret_floatarith r xs)\n    \\<in>\\<^sub>i range_tm e (tm_min prec I a t1 t2)", "using t1_range t2_range np1 np2"], ["proof (prove)\nusing this:\n  interpret_floatarith l xs \\<in>\\<^sub>i range_tm e t1\n  interpret_floatarith r xs \\<in>\\<^sub>i range_tm e t2\n  num_params (tm_poly t1) \\<le> length I\n  num_params (tm_poly t2) \\<le> length I\n\ngoal (1 subgoal):\n 1. min (interpret_floatarith l xs) (interpret_floatarith r xs)\n    \\<in>\\<^sub>i range_tm e (tm_min prec I a t1 t2)", "by (auto intro!: tm_min_range devs)"], ["proof (state)\nthis:\n  interpret_floatarith (Min l r) xs \\<in>\\<^sub>i range_tm e t\n\ngoal (3 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "case hyps: (Max l r t)"], ["proof (state)\nthis:\n  approx_tm prec ord I a l env = Some ?t \\<Longrightarrow>\n  interpret_floatarith l xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a r env = Some ?t \\<Longrightarrow>\n  interpret_floatarith r xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Max l r) env = Some t\n\ngoal (3 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "from hyps(3)"], ["proof (chain)\npicking this:\n  approx_tm prec ord I a (Max l r) env = Some t", "obtain t1 t2 where t_decomp: \"t = tm_max prec I a t1 t2\"\n    and t1_def: \"Some t1 = approx_tm prec ord I a l env\"\n    and t2_def: \"approx_tm prec ord I a r env = Some t2\""], ["proof (prove)\nusing this:\n  approx_tm prec ord I a (Max l r) env = Some t\n\ngoal (1 subgoal):\n 1. (\\<And>t1 t2.\n        \\<lbrakk>t = tm_max prec I a t1 t2;\n         Some t1 = approx_tm prec ord I a l env;\n         approx_tm prec ord I a r env = Some t2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (smt approx_tm.simps(16) option.case_eq_if option.collapse option.distinct(2) option.inject split_conv)"], ["proof (state)\nthis:\n  t = tm_max prec I a t1 t2\n  Some t1 = approx_tm prec ord I a l env\n  approx_tm prec ord I a r env = Some t2\n\ngoal (3 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "from this(2,3) hyps(1-3)"], ["proof (chain)\npicking this:\n  Some t1 = approx_tm prec ord I a l env\n  approx_tm prec ord I a r env = Some t2\n  approx_tm prec ord I a l env = Some ?t \\<Longrightarrow>\n  interpret_floatarith l xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a r env = Some ?t \\<Longrightarrow>\n  interpret_floatarith r xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Max l r) env = Some t", "have t1_range: \"(interpret_floatarith l xs) \\<in>\\<^sub>i range_tm e t1\"\n    and  t2_range: \"(interpret_floatarith r xs) \\<in>\\<^sub>i range_tm e t2\""], ["proof (prove)\nusing this:\n  Some t1 = approx_tm prec ord I a l env\n  approx_tm prec ord I a r env = Some t2\n  approx_tm prec ord I a l env = Some ?t \\<Longrightarrow>\n  interpret_floatarith l xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a r env = Some ?t \\<Longrightarrow>\n  interpret_floatarith r xs \\<in>\\<^sub>i range_tm e ?t\n  approx_tm prec ord I a (Max l r) env = Some t\n\ngoal (1 subgoal):\n 1. interpret_floatarith l xs \\<in>\\<^sub>i range_tm e t1 &&&\n    interpret_floatarith r xs \\<in>\\<^sub>i range_tm e t2", "by auto"], ["proof (state)\nthis:\n  interpret_floatarith l xs \\<in>\\<^sub>i range_tm e t1\n  interpret_floatarith r xs \\<in>\\<^sub>i range_tm e t2\n\ngoal (3 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "have [simp]: \"interpret_floatarith (floatarith.Min l r) = (\\<lambda>vs. min (interpret_floatarith l vs) (interpret_floatarith r vs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith (Min l r) =\n    (\\<lambda>vs.\n        min (interpret_floatarith l vs) (interpret_floatarith r vs))", "by auto"], ["proof (state)\nthis:\n  interpret_floatarith (Min l r) =\n  (\\<lambda>vs. min (interpret_floatarith l vs) (interpret_floatarith r vs))\n\ngoal (3 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "have np1: \"num_params (tm_poly t1) \\<le> length I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly t1) \\<le> length I", "using t1_def[symmetric]"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a l env = Some t1\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t1) \\<le> length I", "apply (rule num_params_approx_tm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>tm.\n       tm \\<in> set env \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "using assms"], ["proof (prove)\nusing this:\n  a all_subset I\n  approx_tm prec ord I a f env = Some t\n  xs all_in\\<^sub>i range_tms e env\n  develops_at_within e a I\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. \\<And>tm.\n       tm \\<in> set env \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "by auto"], ["proof (state)\nthis:\n  num_params (tm_poly t1) \\<le> length I\n\ngoal (3 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "have np2: \"num_params (tm_poly t2) \\<le> length I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_params (tm_poly t2) \\<le> length I", "using t2_def"], ["proof (prove)\nusing this:\n  approx_tm prec ord I a r env = Some t2\n\ngoal (1 subgoal):\n 1. num_params (tm_poly t2) \\<le> length I", "apply (rule num_params_approx_tm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>tm.\n       tm \\<in> set env \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "using assms"], ["proof (prove)\nusing this:\n  a all_subset I\n  approx_tm prec ord I a f env = Some t\n  xs all_in\\<^sub>i range_tms e env\n  develops_at_within e a I\n  ?tm \\<in> set env \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. \\<And>tm.\n       tm \\<in> set env \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "by auto"], ["proof (state)\nthis:\n  num_params (tm_poly t2) \\<le> length I\n\ngoal (3 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Max f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Max f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 3. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith (Max l r) xs \\<in>\\<^sub>i range_tm e t", "unfolding t_decomp(1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatarith (Max l r) xs\n    \\<in>\\<^sub>i range_tm e (tm_max prec I a t1 t2)", "apply(simp del: tm_min.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. max (interpret_floatarith l xs) (interpret_floatarith r xs)\n    \\<in>\\<^sub>i range_tm e (tm_max prec I a t1 t2)", "using t1_range t2_range np1 np2"], ["proof (prove)\nusing this:\n  interpret_floatarith l xs \\<in>\\<^sub>i range_tm e t1\n  interpret_floatarith r xs \\<in>\\<^sub>i range_tm e t2\n  num_params (tm_poly t1) \\<le> length I\n  num_params (tm_poly t2) \\<le> length I\n\ngoal (1 subgoal):\n 1. max (interpret_floatarith l xs) (interpret_floatarith r xs)\n    \\<in>\\<^sub>i range_tm e (tm_max prec I a t1 t2)", "by (auto intro!: tm_max_range devs)"], ["proof (state)\nthis:\n  interpret_floatarith (Max l r) xs \\<in>\\<^sub>i range_tm e t\n\ngoal (2 subgoals):\n 1. \\<And>f1 f2 t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f1 env = Some t \\<Longrightarrow>\n                   interpret_floatarith f1 xs \\<in>\\<^sub>i range_tm e t;\n        \\<And>t.\n           approx_tm prec ord I a f2 env = Some t \\<Longrightarrow>\n           interpret_floatarith f2 xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Powr f1 f2) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Powr f1 f2) xs\n                         \\<in>\\<^sub>i range_tm e t\n 2. \\<And>f t.\n       \\<lbrakk>\\<And>t.\n                   approx_tm prec ord I a f env = Some t \\<Longrightarrow>\n                   interpret_floatarith f xs \\<in>\\<^sub>i range_tm e t;\n        approx_tm prec ord I a (Floor f) env = Some t\\<rbrakk>\n       \\<Longrightarrow> interpret_floatarith (Floor f) xs\n                         \\<in>\\<^sub>i range_tm e t", "qed simp_all"], ["", "text \\<open>Evaluate expression with Taylor models in environment.\\<close>"], ["", "subsection \\<open>Computing bounds for floatarith expressions\\<close>"], ["", "text \\<open>TODO: compare parametrization of input vs. uncertainty for input...\\<close>"], ["", "definition \"tm_of_ivl_par n ivl = TaylorModel (CN (C ((upper ivl + lower ivl)*Float 1 (-1))) n\n  (C ((upper ivl - lower ivl)*Float 1 (-1)))) 0\"\n  \\<comment> \\<open>track uncertainty in parameter \\<open>n\\<close>, which is to be interpreted over standardized domain \\<open>[-1, 1]\\<close>.\\<close>"], ["", "value \"tm_of_ivl_par 3 (Ivl (-1) 1)\""], ["", "definition \"tms_of_ivls ivls = map (\\<lambda>(i, ivl). tm_of_ivl_par i ivl) (zip [0..<length ivls] ivls)\""], ["", "value \"tms_of_ivls [Ivl 1 2, Ivl 4 5]\""], ["", "primrec approx_slp'::\"nat \\<Rightarrow> nat \\<Rightarrow> float interval list \\<Rightarrow> float interval list \\<Rightarrow> slp \\<Rightarrow>\n  taylor_model list \\<Rightarrow> taylor_model list option\"\nwhere\n  \"approx_slp' p ord I a [] xs = Some xs\"\n| \"approx_slp' p ord I a (ea # eas) xs =\n    do {\n      r \\<leftarrow> approx_tm p ord I a ea xs;\n      approx_slp' p ord I a eas (r#xs)\n    }\""], ["", "lemma mem_range_tms_Cons_iff[simp]: \"x#xs all_in\\<^sub>i range_tms e (X#XS) \\<longleftrightarrow> x \\<in>\\<^sub>i range_tm e X \\<and> xs all_in\\<^sub>i range_tms e XS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x # xs all_in\\<^sub>i range_tms e (X # XS)) =\n    (x \\<in>\\<^sub>i range_tm e X \\<and> xs all_in\\<^sub>i range_tms e XS)", "by (auto simp: range_tms_def all_in_i_def nth_Cons split: nat.splits)"], ["", "lemma approx_slp'_range:\n  assumes i: \"i all_subset I\"\n  assumes dev: \"develops_at_within e i I\"\n  assumes vs: \"vs all_in\\<^sub>i range_tms e VS\" \"(\\<And>tm. tm \\<in> set VS \\<Longrightarrow> num_params (tm_poly tm) \\<le> length I)\"\n  assumes appr: \"approx_slp' p ord I i ra VS = Some X\"\n  shows \"interpret_slp ra vs all_in\\<^sub>i range_tms e X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_slp ra vs all_in\\<^sub>i range_tms e X", "using appr vs"], ["proof (prove)\nusing this:\n  approx_slp' p ord I i ra VS = Some X\n  vs all_in\\<^sub>i range_tms e VS\n  ?tm \\<in> set VS \\<Longrightarrow> num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. interpret_slp ra vs all_in\\<^sub>i range_tms e X", "proof (induction ra arbitrary: X vs VS)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>X vs VS.\n       \\<lbrakk>approx_slp' p ord I i [] VS = Some X;\n        vs all_in\\<^sub>i range_tms e VS;\n        \\<And>tm.\n           tm \\<in> set VS \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> interpret_slp [] vs all_in\\<^sub>i range_tms e X\n 2. \\<And>a ra X vs VS.\n       \\<lbrakk>\\<And>X vs VS.\n                   \\<lbrakk>approx_slp' p ord I i ra VS = Some X;\n                    vs all_in\\<^sub>i range_tms e VS;\n                    \\<And>tm.\n                       tm \\<in> set VS \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> interpret_slp ra vs all_in\\<^sub>i\n                                     range_tms e X;\n        approx_slp' p ord I i (a # ra) VS = Some X;\n        vs all_in\\<^sub>i range_tms e VS;\n        \\<And>tm.\n           tm \\<in> set VS \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> interpret_slp (a # ra) vs all_in\\<^sub>i\n                         range_tms e X", "case (Cons ra ras)"], ["proof (state)\nthis:\n  \\<lbrakk>approx_slp' p ord I i ras ?VS = Some ?X;\n   ?vs all_in\\<^sub>i range_tms e ?VS;\n   \\<And>tm.\n      tm \\<in> set ?VS \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n  \\<Longrightarrow> interpret_slp ras ?vs all_in\\<^sub>i range_tms e ?X\n  approx_slp' p ord I i (ra # ras) VS = Some X\n  vs all_in\\<^sub>i range_tms e VS\n  ?tm \\<in> set VS \\<Longrightarrow> num_params (tm_poly ?tm) \\<le> length I\n\ngoal (2 subgoals):\n 1. \\<And>X vs VS.\n       \\<lbrakk>approx_slp' p ord I i [] VS = Some X;\n        vs all_in\\<^sub>i range_tms e VS;\n        \\<And>tm.\n           tm \\<in> set VS \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> interpret_slp [] vs all_in\\<^sub>i range_tms e X\n 2. \\<And>a ra X vs VS.\n       \\<lbrakk>\\<And>X vs VS.\n                   \\<lbrakk>approx_slp' p ord I i ra VS = Some X;\n                    vs all_in\\<^sub>i range_tms e VS;\n                    \\<And>tm.\n                       tm \\<in> set VS \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> interpret_slp ra vs all_in\\<^sub>i\n                                     range_tms e X;\n        approx_slp' p ord I i (a # ra) VS = Some X;\n        vs all_in\\<^sub>i range_tms e VS;\n        \\<And>tm.\n           tm \\<in> set VS \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> interpret_slp (a # ra) vs all_in\\<^sub>i\n                         range_tms e X", "from Cons.prems"], ["proof (chain)\npicking this:\n  approx_slp' p ord I i (ra # ras) VS = Some X\n  vs all_in\\<^sub>i range_tms e VS\n  ?tm \\<in> set VS \\<Longrightarrow> num_params (tm_poly ?tm) \\<le> length I", "obtain a where a: \"approx_tm p ord I i ra VS = Some a\"\n    and r: \"approx_slp' p ord I i ras (a # VS) = Some X\""], ["proof (prove)\nusing this:\n  approx_slp' p ord I i (ra # ras) VS = Some X\n  vs all_in\\<^sub>i range_tms e VS\n  ?tm \\<in> set VS \\<Longrightarrow> num_params (tm_poly ?tm) \\<le> length I\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>approx_tm p ord I i ra VS = Some a;\n         approx_slp' p ord I i ras (a # VS) = Some X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: bind_eq_Some_conv)"], ["proof (state)\nthis:\n  approx_tm p ord I i ra VS = Some a\n  approx_slp' p ord I i ras (a # VS) = Some X\n\ngoal (2 subgoals):\n 1. \\<And>X vs VS.\n       \\<lbrakk>approx_slp' p ord I i [] VS = Some X;\n        vs all_in\\<^sub>i range_tms e VS;\n        \\<And>tm.\n           tm \\<in> set VS \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> interpret_slp [] vs all_in\\<^sub>i range_tms e X\n 2. \\<And>a ra X vs VS.\n       \\<lbrakk>\\<And>X vs VS.\n                   \\<lbrakk>approx_slp' p ord I i ra VS = Some X;\n                    vs all_in\\<^sub>i range_tms e VS;\n                    \\<And>tm.\n                       tm \\<in> set VS \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> interpret_slp ra vs all_in\\<^sub>i\n                                     range_tms e X;\n        approx_slp' p ord I i (a # ra) VS = Some X;\n        vs all_in\\<^sub>i range_tms e VS;\n        \\<And>tm.\n           tm \\<in> set VS \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> interpret_slp (a # ra) vs all_in\\<^sub>i\n                         range_tms e X", "from approx_tm_range[OF i a Cons.prems(2) dev Cons.prems(3)]"], ["proof (chain)\npicking this:\n  (\\<And>tm.\n      tm \\<in> set VS \\<Longrightarrow> tm \\<in> set VS) \\<Longrightarrow>\n  interpret_floatarith ra vs \\<in>\\<^sub>i range_tm e a", "have \"interpret_floatarith ra vs \\<in>\\<^sub>i range_tm e a\""], ["proof (prove)\nusing this:\n  (\\<And>tm.\n      tm \\<in> set VS \\<Longrightarrow> tm \\<in> set VS) \\<Longrightarrow>\n  interpret_floatarith ra vs \\<in>\\<^sub>i range_tm e a\n\ngoal (1 subgoal):\n 1. interpret_floatarith ra vs \\<in>\\<^sub>i range_tm e a", "by auto"], ["proof (state)\nthis:\n  interpret_floatarith ra vs \\<in>\\<^sub>i range_tm e a\n\ngoal (2 subgoals):\n 1. \\<And>X vs VS.\n       \\<lbrakk>approx_slp' p ord I i [] VS = Some X;\n        vs all_in\\<^sub>i range_tms e VS;\n        \\<And>tm.\n           tm \\<in> set VS \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> interpret_slp [] vs all_in\\<^sub>i range_tms e X\n 2. \\<And>a ra X vs VS.\n       \\<lbrakk>\\<And>X vs VS.\n                   \\<lbrakk>approx_slp' p ord I i ra VS = Some X;\n                    vs all_in\\<^sub>i range_tms e VS;\n                    \\<And>tm.\n                       tm \\<in> set VS \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> interpret_slp ra vs all_in\\<^sub>i\n                                     range_tms e X;\n        approx_slp' p ord I i (a # ra) VS = Some X;\n        vs all_in\\<^sub>i range_tms e VS;\n        \\<And>tm.\n           tm \\<in> set VS \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> interpret_slp (a # ra) vs all_in\\<^sub>i\n                         range_tms e X", "then"], ["proof (chain)\npicking this:\n  interpret_floatarith ra vs \\<in>\\<^sub>i range_tm e a", "have 1: \"interpret_floatarith ra vs#vs all_in\\<^sub>i range_tms e (a#VS)\""], ["proof (prove)\nusing this:\n  interpret_floatarith ra vs \\<in>\\<^sub>i range_tm e a\n\ngoal (1 subgoal):\n 1. interpret_floatarith ra vs # vs all_in\\<^sub>i range_tms e (a # VS)", "using Cons.prems(2)"], ["proof (prove)\nusing this:\n  interpret_floatarith ra vs \\<in>\\<^sub>i range_tm e a\n  vs all_in\\<^sub>i range_tms e VS\n\ngoal (1 subgoal):\n 1. interpret_floatarith ra vs # vs all_in\\<^sub>i range_tms e (a # VS)", "by auto"], ["proof (state)\nthis:\n  interpret_floatarith ra vs # vs all_in\\<^sub>i range_tms e (a # VS)\n\ngoal (2 subgoals):\n 1. \\<And>X vs VS.\n       \\<lbrakk>approx_slp' p ord I i [] VS = Some X;\n        vs all_in\\<^sub>i range_tms e VS;\n        \\<And>tm.\n           tm \\<in> set VS \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> interpret_slp [] vs all_in\\<^sub>i range_tms e X\n 2. \\<And>a ra X vs VS.\n       \\<lbrakk>\\<And>X vs VS.\n                   \\<lbrakk>approx_slp' p ord I i ra VS = Some X;\n                    vs all_in\\<^sub>i range_tms e VS;\n                    \\<And>tm.\n                       tm \\<in> set VS \\<Longrightarrow>\n                       num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n                   \\<Longrightarrow> interpret_slp ra vs all_in\\<^sub>i\n                                     range_tms e X;\n        approx_slp' p ord I i (a # ra) VS = Some X;\n        vs all_in\\<^sub>i range_tms e VS;\n        \\<And>tm.\n           tm \\<in> set VS \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> interpret_slp (a # ra) vs all_in\\<^sub>i\n                         range_tms e X", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_slp (ra # ras) vs all_in\\<^sub>i range_tms e X", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_slp ras (interpret_floatarith ra vs # vs) all_in\\<^sub>i\n    range_tms e X", "apply (rule Cons.IH)"], ["proof (prove)\ngoal (3 subgoals):\n 1. approx_slp' p ord I i ras ?VS = Some X\n 2. interpret_floatarith ra vs # vs all_in\\<^sub>i range_tms e ?VS\n 3. \\<And>tm.\n       tm \\<in> set ?VS \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "apply (rule r)"], ["proof (prove)\ngoal (2 subgoals):\n 1. interpret_floatarith ra vs # vs all_in\\<^sub>i range_tms e (a # VS)\n 2. \\<And>tm.\n       tm \\<in> set (a # VS) \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "apply (rule 1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>tm.\n       tm \\<in> set (a # VS) \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. num_params (tm_poly a) \\<le> length I\n 2. \\<And>tm.\n       tm \\<in> set VS \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "apply (rule num_params_approx_tm)"], ["proof (prove)\ngoal (3 subgoals):\n 1. approx_tm ?prec6 ?ord6 I ?a6 ?f6 ?env6 = Some a\n 2. \\<And>tm.\n       tm \\<in> set ?env6 \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I\n 3. \\<And>tm.\n       tm \\<in> set VS \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "apply (rule a)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>tm.\n       tm \\<in> set VS \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I\n 2. \\<And>tm.\n       tm \\<in> set VS \\<Longrightarrow>\n       num_params (tm_poly tm) \\<le> length I", "by (auto intro!: Cons.prems)"], ["proof (state)\nthis:\n  interpret_slp (ra # ras) vs all_in\\<^sub>i range_tms e X\n\ngoal (1 subgoal):\n 1. \\<And>X vs VS.\n       \\<lbrakk>approx_slp' p ord I i [] VS = Some X;\n        vs all_in\\<^sub>i range_tms e VS;\n        \\<And>tm.\n           tm \\<in> set VS \\<Longrightarrow>\n           num_params (tm_poly tm) \\<le> length I\\<rbrakk>\n       \\<Longrightarrow> interpret_slp [] vs all_in\\<^sub>i range_tms e X", "qed auto"], ["", "definition approx_slp::\"nat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> slp \\<Rightarrow> taylor_model list \\<Rightarrow> taylor_model list option\"\n  where\n    \"approx_slp p ord d slp tms =\n      map_option (take d)\n        (approx_slp' p ord (replicate (length tms) (Ivl (-1) 1)) (replicate (length tms) 0) slp tms)\""], ["", "lemma length_range_tms[simp]: \"length (range_tms e VS) = length VS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (range_tms e VS) = length VS", "by (auto simp: range_tms_def)"], ["", "lemma set_of_Ivl: \"set_of (Ivl a b) = {a .. b}\" if \"a \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (Ivl a b) = {a..b}", "by (auto simp: set_of_eq that min_def)"], ["", "lemma set_of_zero[simp]: \"set_of 0 = {0::'a::ordered_comm_monoid_add}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of 0 = {0::'a}", "by (auto simp: set_of_eq)"], ["", "theorem approx_slp_range_tms:\n  assumes \"approx_slp p ord d slp VS = Some X\"\n  assumes slp_def: \"slp = slp_of_fas fas\"\n  assumes d_def: \"d = length fas\"\n  assumes e: \"e \\<in> UNIV \\<rightarrow> {-1 .. 1}\"\n  assumes vs: \"vs all_in\\<^sub>i range_tms e VS\"\n  assumes lens: \"\\<And>tm. tm \\<in> set VS \\<Longrightarrow> num_params (tm_poly tm) \\<le> length vs\"\n  shows \"interpret_floatariths fas vs all_in\\<^sub>i range_tms e X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatariths fas vs all_in\\<^sub>i range_tms e X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. interpret_floatariths fas vs all_in\\<^sub>i range_tms e X", "have \"interpret_floatariths fas vs = take d (interpret_slp slp vs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interpret_floatariths fas vs = take d (interpret_slp slp vs)", "by (simp add: slp_of_fas slp_def d_def)"], ["proof (state)\nthis:\n  interpret_floatariths fas vs = take d (interpret_slp slp vs)\n\ngoal (1 subgoal):\n 1. interpret_floatariths fas vs all_in\\<^sub>i range_tms e X", "also"], ["proof (state)\nthis:\n  interpret_floatariths fas vs = take d (interpret_slp slp vs)\n\ngoal (1 subgoal):\n 1. interpret_floatariths fas vs all_in\\<^sub>i range_tms e X", "have lvs: \"length vs = length VS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length vs = length VS", "using assms"], ["proof (prove)\nusing this:\n  local.approx_slp p ord d slp VS = Some X\n  slp = slp_of_fas fas\n  d = length fas\n  e \\<in> UNIV \\<rightarrow> {- 1..1}\n  vs all_in\\<^sub>i range_tms e VS\n  ?tm \\<in> set VS \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length vs\n\ngoal (1 subgoal):\n 1. length vs = length VS", "by (auto simp: all_in_i_def)"], ["proof (state)\nthis:\n  length vs = length VS\n\ngoal (1 subgoal):\n 1. interpret_floatariths fas vs all_in\\<^sub>i range_tms e X", "define i where \"i = replicate (length vs) (0::float interval)\""], ["proof (state)\nthis:\n  i = replicate (length vs) 0\n\ngoal (1 subgoal):\n 1. interpret_floatariths fas vs all_in\\<^sub>i range_tms e X", "define I where \"I = replicate (length vs) (Ivl (-1) 1::float interval)\""], ["proof (state)\nthis:\n  I = replicate (length vs) (Ivl (- 1) 1)\n\ngoal (1 subgoal):\n 1. interpret_floatariths fas vs all_in\\<^sub>i range_tms e X", "from assms"], ["proof (chain)\npicking this:\n  local.approx_slp p ord d slp VS = Some X\n  slp = slp_of_fas fas\n  d = length fas\n  e \\<in> UNIV \\<rightarrow> {- 1..1}\n  vs all_in\\<^sub>i range_tms e VS\n  ?tm \\<in> set VS \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length vs", "obtain XS where\n    XS: \"approx_slp' p ord I i slp VS = Some XS\"\n    and X: \"take d XS = X\""], ["proof (prove)\nusing this:\n  local.approx_slp p ord d slp VS = Some X\n  slp = slp_of_fas fas\n  d = length fas\n  e \\<in> UNIV \\<rightarrow> {- 1..1}\n  vs all_in\\<^sub>i range_tms e VS\n  ?tm \\<in> set VS \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length vs\n\ngoal (1 subgoal):\n 1. (\\<And>XS.\n        \\<lbrakk>approx_slp' p ord I i slp VS = Some XS;\n         take d XS = X\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: approx_slp_def lvs i_def I_def)"], ["proof (state)\nthis:\n  approx_slp' p ord I i slp VS = Some XS\n  take d XS = X\n\ngoal (1 subgoal):\n 1. interpret_floatariths fas vs all_in\\<^sub>i range_tms e X", "have iI: \"i all_subset I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i all_subset I", "by (auto simp: i_def I_def set_of_Ivl)"], ["proof (state)\nthis:\n  i all_subset I\n\ngoal (1 subgoal):\n 1. interpret_floatariths fas vs all_in\\<^sub>i range_tms e X", "have dev: \"develops_at_within e i I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. develops_at_within e i I", "using e"], ["proof (prove)\nusing this:\n  e \\<in> UNIV \\<rightarrow> {- 1..1}\n\ngoal (1 subgoal):\n 1. develops_at_within e i I", "by (auto simp: develops_at_within_def i_def I_def set_of_Ivl real_interval_Ivl\n        real_interval_minus real_interval_zero set_of_eq Pi_iff min_def)"], ["proof (state)\nthis:\n  develops_at_within e i I\n\ngoal (1 subgoal):\n 1. interpret_floatariths fas vs all_in\\<^sub>i range_tms e X", "from approx_slp'_range[OF iI dev vs _ XS] lens"], ["proof (chain)\npicking this:\n  (\\<And>tm.\n      tm \\<in> set VS \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I) \\<Longrightarrow>\n  interpret_slp slp vs all_in\\<^sub>i range_tms e XS\n  ?tm \\<in> set VS \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length vs", "have \"interpret_slp slp vs all_in\\<^sub>i range_tms e XS\""], ["proof (prove)\nusing this:\n  (\\<And>tm.\n      tm \\<in> set VS \\<Longrightarrow>\n      num_params (tm_poly tm) \\<le> length I) \\<Longrightarrow>\n  interpret_slp slp vs all_in\\<^sub>i range_tms e XS\n  ?tm \\<in> set VS \\<Longrightarrow>\n  num_params (tm_poly ?tm) \\<le> length vs\n\ngoal (1 subgoal):\n 1. interpret_slp slp vs all_in\\<^sub>i range_tms e XS", "by (auto simp: I_def)"], ["proof (state)\nthis:\n  interpret_slp slp vs all_in\\<^sub>i range_tms e XS\n\ngoal (1 subgoal):\n 1. interpret_floatariths fas vs all_in\\<^sub>i range_tms e X", "then"], ["proof (chain)\npicking this:\n  interpret_slp slp vs all_in\\<^sub>i range_tms e XS", "have \"take d (interpret_slp slp vs) all_in\\<^sub>i range_tms e (take d XS)\""], ["proof (prove)\nusing this:\n  interpret_slp slp vs all_in\\<^sub>i range_tms e XS\n\ngoal (1 subgoal):\n 1. take d (interpret_slp slp vs) all_in\\<^sub>i range_tms e (take d XS)", "by (auto simp: all_in_i_def range_tms_def)"], ["proof (state)\nthis:\n  take d (interpret_slp slp vs) all_in\\<^sub>i range_tms e (take d XS)\n\ngoal (1 subgoal):\n 1. interpret_floatariths fas vs all_in\\<^sub>i range_tms e X", "also"], ["proof (state)\nthis:\n  take d (interpret_slp slp vs) all_in\\<^sub>i range_tms e (take d XS)\n\ngoal (1 subgoal):\n 1. interpret_floatariths fas vs all_in\\<^sub>i range_tms e X", "note \\<open>take d XS = X\\<close>"], ["proof (state)\nthis:\n  take d XS = X\n\ngoal (1 subgoal):\n 1. interpret_floatariths fas vs all_in\\<^sub>i range_tms e X", "finally"], ["proof (chain)\npicking this:\n  interpret_floatariths fas vs all_in\\<^sub>i range_tms e X", "show ?thesis"], ["proof (prove)\nusing this:\n  interpret_floatariths fas vs all_in\\<^sub>i range_tms e X\n\ngoal (1 subgoal):\n 1. interpret_floatariths fas vs all_in\\<^sub>i range_tms e X", "."], ["proof (state)\nthis:\n  interpret_floatariths fas vs all_in\\<^sub>i range_tms e X\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}