{"file_name": "/home/qj213/afp-2021-10-22/thys/Knot_Theory/Computations.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Knot_Theory", "problem_names": ["lemma unlink_computation:\n \"rat_poly_plus (rat_poly_times (rat_poly_times A A) (rat_poly_times A A))\n     (rat_poly_plus\n       (rat_poly_times 2 (rat_poly_times A (rat_poly_times A (rat_poly_times B B))))\n       (rat_poly_times (rat_poly_times B B) (rat_poly_times B B))) =\n             ((A^4)+(B^4)+2)\"", "lemma computation_swingpos:\n\" rat_poly_plus (rat_poly_times B (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)\" (is \"?l = ?r\")", "lemma computation2:\n\" rat_poly_plus (rat_poly_times A (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)\" (is \"?l = ?r\")", "lemma computation_swingneg:\"rat_poly_times B (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_plus\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A)))\n     (rat_poly_times A (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\"", "lemma computation_toppos:\"rat_poly_inv (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B\"(is \"?l = ?r\")", "lemma computation_downpos_prelim:\n\"rat_poly_inv (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A\"(is \"?l = ?r\")", "lemma computation_downpos:\"rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B) =\n    rat_poly_inv (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\"", "lemma computatition_positive_flip:\"rat_poly_plus\n     (rat_poly_inv (rat_poly_times A (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))\" (is \"?l = ?r\")", "lemma computation_negative_flip:\"rat_poly_plus\n     (rat_poly_inv (rat_poly_times B (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))\" (is \"?l = ?r\")", "lemma computation_pull_pos_neg:\n\"rat_poly_plus (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) = 0\"", "lemma aux1:\"(A - rat_poly_times (rat_poly_times B B) B)\n         = A - (B^3)\"", "lemma square_subtract:\"(((p::rat_poly) - (q::rat_poly))^2)\n         = (p^2) - (2*p*q) + (q^2)\"", "lemma cube_minus:\"\\<forall>p q.((((p::rat_poly) - (q::rat_poly))^3) \n                = (p^3) - 3*(p^2)*(q) + 3*(p)*(q^2) - (q^3))\"", "lemma power_mult: \"((p::rat_poly)^m)^n= (p)^(m*(n::nat))\"", "lemma cube_minus2:\nfixes p q\nshows \"(((p::rat_poly) - (q::rat_poly))^3) \n                = (p^3) - 3*(p^2)*(q) + 3*(p)*(q^2) - (q^3)\"", "lemma subst_poly:assumes \"a = b\" shows \"(p::rat_poly)*a = p*b\"", "lemma sub1: \n assumes \"p*q = 1\"\n shows \"r*(p*q) = r*1\"", "lemma n_distrib:\"(A^(n::nat))*(B^n) = (A*B)^n\"", "lemma rat_poly_id_pow:\"(1::rat_poly)^n = 1\"", "lemma power_prod:\"(A^(n::nat))*(B^n) = (1::rat_poly)\"", "lemma \"(pCons 0 1) \\<noteq> 0\""], "translations": [["", "lemma unlink_computation:\n \"rat_poly_plus (rat_poly_times (rat_poly_times A A) (rat_poly_times A A))\n     (rat_poly_plus\n       (rat_poly_times 2 (rat_poly_times A (rat_poly_times A (rat_poly_times B B))))\n       (rat_poly_times (rat_poly_times B B) (rat_poly_times B B))) =\n             ((A^4)+(B^4)+2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_plus (rat_poly_times (rat_poly_times A A) (rat_poly_times A A))\n     (rat_poly_plus\n       (rat_poly_times 2\n         (rat_poly_times A (rat_poly_times A (rat_poly_times B B))))\n       (rat_poly_times (rat_poly_times B B) (rat_poly_times B B))) =\n    rat_poly_plus (rat_poly_plus (A ^ 4) (B ^ 4)) 2", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. rat_poly_plus (rat_poly_times (rat_poly_times A A) (rat_poly_times A A))\n     (rat_poly_plus\n       (rat_poly_times 2\n         (rat_poly_times A (rat_poly_times A (rat_poly_times B B))))\n       (rat_poly_times (rat_poly_times B B) (rat_poly_times B B))) =\n    rat_poly_plus (rat_poly_plus (A ^ 4) (B ^ 4)) 2", "have \"(rat_poly_times (rat_poly_times A A) (rat_poly_times A A)) = A^4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (rat_poly_times A A) (rat_poly_times A A) = A ^ 4", "by (simp add: numeral_Bit0)"], ["proof (state)\nthis:\n  rat_poly_times (rat_poly_times A A) (rat_poly_times A A) = A ^ 4\n\ngoal (1 subgoal):\n 1. rat_poly_plus (rat_poly_times (rat_poly_times A A) (rat_poly_times A A))\n     (rat_poly_plus\n       (rat_poly_times 2\n         (rat_poly_times A (rat_poly_times A (rat_poly_times B B))))\n       (rat_poly_times (rat_poly_times B B) (rat_poly_times B B))) =\n    rat_poly_plus (rat_poly_plus (A ^ 4) (B ^ 4)) 2", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (rat_poly_times A A) (rat_poly_times A A) = A ^ 4\n\ngoal (1 subgoal):\n 1. rat_poly_plus (rat_poly_times (rat_poly_times A A) (rat_poly_times A A))\n     (rat_poly_plus\n       (rat_poly_times 2\n         (rat_poly_times A (rat_poly_times A (rat_poly_times B B))))\n       (rat_poly_times (rat_poly_times B B) (rat_poly_times B B))) =\n    rat_poly_plus (rat_poly_plus (A ^ 4) (B ^ 4)) 2", "have \"(rat_poly_times (rat_poly_times B B) (rat_poly_times B B))\n             = B^4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (rat_poly_times B B) (rat_poly_times B B) = B ^ 4", "by (simp add: numeral_Bit0)"], ["proof (state)\nthis:\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B B) = B ^ 4\n\ngoal (1 subgoal):\n 1. rat_poly_plus (rat_poly_times (rat_poly_times A A) (rat_poly_times A A))\n     (rat_poly_plus\n       (rat_poly_times 2\n         (rat_poly_times A (rat_poly_times A (rat_poly_times B B))))\n       (rat_poly_times (rat_poly_times B B) (rat_poly_times B B))) =\n    rat_poly_plus (rat_poly_plus (A ^ 4) (B ^ 4)) 2", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B B) = B ^ 4\n\ngoal (1 subgoal):\n 1. rat_poly_plus (rat_poly_times (rat_poly_times A A) (rat_poly_times A A))\n     (rat_poly_plus\n       (rat_poly_times 2\n         (rat_poly_times A (rat_poly_times A (rat_poly_times B B))))\n       (rat_poly_times (rat_poly_times B B) (rat_poly_times B B))) =\n    rat_poly_plus (rat_poly_plus (A ^ 4) (B ^ 4)) 2", "have \"(rat_poly_times 2 (rat_poly_times A (rat_poly_times A (rat_poly_times B B))))\n               = 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times 2\n     (rat_poly_times A (rat_poly_times A (rat_poly_times B B))) =\n    2", "using inverse1"], ["proof (prove)\nusing this:\n  rat_poly_times A B = 1\n\ngoal (1 subgoal):\n 1. rat_poly_times 2\n     (rat_poly_times A (rat_poly_times A (rat_poly_times B B))) =\n    2", "by (metis mult_2_right one_add_one rat_poly.assoc rat_poly.comm)"], ["proof (state)\nthis:\n  rat_poly_times 2\n   (rat_poly_times A (rat_poly_times A (rat_poly_times B B))) =\n  2\n\ngoal (1 subgoal):\n 1. rat_poly_plus (rat_poly_times (rat_poly_times A A) (rat_poly_times A A))\n     (rat_poly_plus\n       (rat_poly_times 2\n         (rat_poly_times A (rat_poly_times A (rat_poly_times B B))))\n       (rat_poly_times (rat_poly_times B B) (rat_poly_times B B))) =\n    rat_poly_plus (rat_poly_plus (A ^ 4) (B ^ 4)) 2", "ultimately"], ["proof (chain)\npicking this:\n  rat_poly_times (rat_poly_times A A) (rat_poly_times A A) = A ^ 4\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B B) = B ^ 4\n  rat_poly_times 2\n   (rat_poly_times A (rat_poly_times A (rat_poly_times B B))) =\n  2", "show ?thesis"], ["proof (prove)\nusing this:\n  rat_poly_times (rat_poly_times A A) (rat_poly_times A A) = A ^ 4\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B B) = B ^ 4\n  rat_poly_times 2\n   (rat_poly_times A (rat_poly_times A (rat_poly_times B B))) =\n  2\n\ngoal (1 subgoal):\n 1. rat_poly_plus (rat_poly_times (rat_poly_times A A) (rat_poly_times A A))\n     (rat_poly_plus\n       (rat_poly_times 2\n         (rat_poly_times A (rat_poly_times A (rat_poly_times B B))))\n       (rat_poly_times (rat_poly_times B B) (rat_poly_times B B))) =\n    rat_poly_plus (rat_poly_plus (A ^ 4) (B ^ 4)) 2", "by auto"], ["proof (state)\nthis:\n  rat_poly_plus (rat_poly_times (rat_poly_times A A) (rat_poly_times A A))\n   (rat_poly_plus\n     (rat_poly_times 2\n       (rat_poly_times A (rat_poly_times A (rat_poly_times B B))))\n     (rat_poly_times (rat_poly_times B B) (rat_poly_times B B))) =\n  rat_poly_plus (rat_poly_plus (A ^ 4) (B ^ 4)) 2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma computation_swingpos:\n\" rat_poly_plus (rat_poly_times B (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)\" (is \"?l = ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "have 1:\"(A - rat_poly_times (rat_poly_times B B) B)\n               = A - (B^3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A - rat_poly_times (rat_poly_times B B) B = A - B ^ 3", "by (metis power3_eq_cube)"], ["proof (state)\nthis:\n  A - rat_poly_times (rat_poly_times B B) B = A - B ^ 3\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "then"], ["proof (chain)\npicking this:\n  A - rat_poly_times (rat_poly_times B B) B = A - B ^ 3", "have 2:\"(rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B)\n                 = A*B - (B^3)*B\""], ["proof (prove)\nusing this:\n  A - rat_poly_times (rat_poly_times B B) B = A - B ^ 3\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B =\n    rat_poly_times A B - rat_poly_times (B ^ 3) B", "by (metis minus_right_distributivity)"], ["proof (state)\nthis:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B =\n  rat_poly_times A B - rat_poly_times (B ^ 3) B\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B =\n  rat_poly_times A B - rat_poly_times (B ^ 3) B", "have \"... = 1 - (B^4)\""], ["proof (prove)\nusing this:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B =\n  rat_poly_times A B - rat_poly_times (B ^ 3) B\n\ngoal (1 subgoal):\n 1. rat_poly_times A B - rat_poly_times (B ^ 3) B = 1 - B ^ 4", "by (simp add: inverse1 numeral_Bit0 power3_eq_cube)"], ["proof (state)\nthis:\n  rat_poly_times A B - rat_poly_times (B ^ 3) B = 1 - B ^ 4\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times A B - rat_poly_times (B ^ 3) B = 1 - B ^ 4", "have \"(rat_poly_times B (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n                      = B - (B^4)*B\""], ["proof (prove)\nusing this:\n  rat_poly_times A B - rat_poly_times (B ^ 3) B = 1 - B ^ 4\n\ngoal (1 subgoal):\n 1. rat_poly_times B\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B) =\n    B - rat_poly_times (B ^ 4) B", "using 2"], ["proof (prove)\nusing this:\n  rat_poly_times A B - rat_poly_times (B ^ 3) B = 1 - B ^ 4\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B =\n  rat_poly_times A B - rat_poly_times (B ^ 3) B\n\ngoal (1 subgoal):\n 1. rat_poly_times B\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B) =\n    B - rat_poly_times (B ^ 4) B", "by (metis minus_right_distributivity mult.commute mult.right_neutral)"], ["proof (state)\nthis:\n  rat_poly_times B\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B) =\n  B - rat_poly_times (B ^ 4) B\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times B\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B) =\n  B - rat_poly_times (B ^ 4) B", "have 3:\"(rat_poly_times B (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n                  = B - (B^5)\""], ["proof (prove)\nusing this:\n  rat_poly_times B\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B) =\n  B - rat_poly_times (B ^ 4) B\n\ngoal (1 subgoal):\n 1. rat_poly_times B\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B) =\n    B - B ^ 5", "by (metis (no_types, lifting) inverse1 minus_right_distributivity \n             mult.left_commute mult.right_neutral power2_eq_square power_numeral_odd)"], ["proof (state)\nthis:\n  rat_poly_times B\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B) =\n  B - B ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "have \"(rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B)))\n                 =  (A - (B^3))*(A*( A - (B^3)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n     (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B)) =\n    rat_poly_times (A - B ^ 3) (rat_poly_times A (A - B ^ 3))", "using 1"], ["proof (prove)\nusing this:\n  A - rat_poly_times (rat_poly_times B B) B = A - B ^ 3\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n     (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B)) =\n    rat_poly_times (A - B ^ 3) (rat_poly_times A (A - B ^ 3))", "by auto"], ["proof (state)\nthis:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n   (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B)) =\n  rat_poly_times (A - B ^ 3) (rat_poly_times A (A - B ^ 3))\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n   (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B)) =\n  rat_poly_times (A - B ^ 3) (rat_poly_times A (A - B ^ 3))\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n   (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B)) =\n  rat_poly_times (A - B ^ 3) (rat_poly_times A (A - B ^ 3))", "have \"... =  (A - (B^3))*(A*A - (A*(B^3)))\""], ["proof (prove)\nusing this:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n   (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B)) =\n  rat_poly_times (A - B ^ 3) (rat_poly_times A (A - B ^ 3))\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A (A - B ^ 3)) =\n    rat_poly_times (A - B ^ 3)\n     (rat_poly_times A A - rat_poly_times A (B ^ 3))", "by (metis minus_left_distributivity)"], ["proof (state)\nthis:\n  rat_poly_times (A - B ^ 3) (rat_poly_times A (A - B ^ 3)) =\n  rat_poly_times (A - B ^ 3) (rat_poly_times A A - rat_poly_times A (B ^ 3))\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (A - B ^ 3) (rat_poly_times A (A - B ^ 3)) =\n  rat_poly_times (A - B ^ 3) (rat_poly_times A A - rat_poly_times A (B ^ 3))\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (A - B ^ 3) (rat_poly_times A (A - B ^ 3)) =\n  rat_poly_times (A - B ^ 3) (rat_poly_times A A - rat_poly_times A (B ^ 3))", "have \"... = (A - (B^3))*(A*A - (B^2))\""], ["proof (prove)\nusing this:\n  rat_poly_times (A - B ^ 3) (rat_poly_times A (A - B ^ 3)) =\n  rat_poly_times (A - B ^ 3) (rat_poly_times A A - rat_poly_times A (B ^ 3))\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3)\n     (rat_poly_times A A - rat_poly_times A (B ^ 3)) =\n    rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2)", "using inverse1"], ["proof (prove)\nusing this:\n  rat_poly_times (A - B ^ 3) (rat_poly_times A (A - B ^ 3)) =\n  rat_poly_times (A - B ^ 3) (rat_poly_times A A - rat_poly_times A (B ^ 3))\n  rat_poly_times A B = 1\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3)\n     (rat_poly_times A A - rat_poly_times A (B ^ 3)) =\n    rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2)", "by (simp add: power2_eq_square power3_eq_cube)"], ["proof (state)\nthis:\n  rat_poly_times (A - B ^ 3)\n   (rat_poly_times A A - rat_poly_times A (B ^ 3)) =\n  rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (A - B ^ 3)\n   (rat_poly_times A A - rat_poly_times A (B ^ 3)) =\n  rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (A - B ^ 3)\n   (rat_poly_times A A - rat_poly_times A (B ^ 3)) =\n  rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2)", "have \"... = A*(A*A - (B^2)) - (B^3)*(A*A - (B^2))\""], ["proof (prove)\nusing this:\n  rat_poly_times (A - B ^ 3)\n   (rat_poly_times A A - rat_poly_times A (B ^ 3)) =\n  rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2)\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2)", "by (metis minus_right_distributivity)"], ["proof (state)\nthis:\n  rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n  rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n  rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n  rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2)", "have \"... = ((A^3) - B) - B + (B^5)\""], ["proof (prove)\nusing this:\n  rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n  rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2)\n\ngoal (1 subgoal):\n 1. rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "have \"A*(A*A - (B^2)) = (A*A*A - A*(B^2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A * (A * A - B\\<^sup>2) = A * A * A - A * B\\<^sup>2", "by (simp add: right_diff_distrib)"], ["proof (state)\nthis:\n  A * (A * A - B\\<^sup>2) = A * A * A - A * B\\<^sup>2\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "moreover"], ["proof (state)\nthis:\n  A * (A * A - B\\<^sup>2) = A * A * A - A * B\\<^sup>2\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "have \"... = (A*A*A - A*(B*B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A * A * A - A * B\\<^sup>2 = A * A * A - A * (B * B)", "by (metis power2_eq_square)"], ["proof (state)\nthis:\n  A * A * A - A * B\\<^sup>2 = A * A * A - A * (B * B)\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "moreover"], ["proof (state)\nthis:\n  A * A * A - A * B\\<^sup>2 = A * A * A - A * (B * B)\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "have \"...  = ((A^3) - ((A::rat_poly)*B)*B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (rat_poly_times A A) A -\n    rat_poly_times A (rat_poly_times B B) =\n    A ^ 3 - rat_poly_times (rat_poly_times A B) B", "by (simp add: power3_eq_cube)"], ["proof (state)\nthis:\n  rat_poly_times (rat_poly_times A A) A -\n  rat_poly_times A (rat_poly_times B B) =\n  A ^ 3 - rat_poly_times (rat_poly_times A B) B\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (rat_poly_times A A) A -\n  rat_poly_times A (rat_poly_times B B) =\n  A ^ 3 - rat_poly_times (rat_poly_times A B) B\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "have \"... = ((A^3) - ((1::rat_poly)*B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A ^ 3 - rat_poly_times (rat_poly_times A B) B =\n    A ^ 3 - rat_poly_times 1 B", "by (metis inverse1)"], ["proof (state)\nthis:\n  A ^ 3 - rat_poly_times (rat_poly_times A B) B = A ^ 3 - rat_poly_times 1 B\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "moreover"], ["proof (state)\nthis:\n  A ^ 3 - rat_poly_times (rat_poly_times A B) B = A ^ 3 - rat_poly_times 1 B\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "have \"... = (A^3) - B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A ^ 3 - rat_poly_times 1 B = A ^ 3 - B", "by auto"], ["proof (state)\nthis:\n  A ^ 3 - rat_poly_times 1 B = A ^ 3 - B\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "ultimately"], ["proof (chain)\npicking this:\n  A * (A * A - B\\<^sup>2) = A * A * A - A * B\\<^sup>2\n  A * A * A - A * B\\<^sup>2 = A * A * A - A * (B * B)\n  rat_poly_times (rat_poly_times A A) A -\n  rat_poly_times A (rat_poly_times B B) =\n  A ^ 3 - rat_poly_times (rat_poly_times A B) B\n  A ^ 3 - rat_poly_times (rat_poly_times A B) B = A ^ 3 - rat_poly_times 1 B\n  A ^ 3 - rat_poly_times 1 B = A ^ 3 - B", "have s1:\"(A::rat_poly)*(A*A - (B^2)) = (A^3) - (B::rat_poly)\""], ["proof (prove)\nusing this:\n  A * (A * A - B\\<^sup>2) = A * A * A - A * B\\<^sup>2\n  A * A * A - A * B\\<^sup>2 = A * A * A - A * (B * B)\n  rat_poly_times (rat_poly_times A A) A -\n  rat_poly_times A (rat_poly_times B B) =\n  A ^ 3 - rat_poly_times (rat_poly_times A B) B\n  A ^ 3 - rat_poly_times (rat_poly_times A B) B = A ^ 3 - rat_poly_times 1 B\n  A ^ 3 - rat_poly_times 1 B = A ^ 3 - B\n\ngoal (1 subgoal):\n 1. rat_poly_times A (rat_poly_times A A - B\\<^sup>2) = A ^ 3 - B", "by metis"], ["proof (state)\nthis:\n  rat_poly_times A (rat_poly_times A A - B\\<^sup>2) = A ^ 3 - B\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "have s2:\"((B::rat_poly)^3)*(A*A - (B^2)) = (B^3)*(A*A) - (B^(3::nat))*(B^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times (B ^ 3) (rat_poly_times A A) -\n    rat_poly_times (B ^ 3) (B\\<^sup>2)", "by (metis minus_left_distributivity power3_eq_cube)"], ["proof (state)\nthis:\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n  rat_poly_times (B ^ 3) (rat_poly_times A A) -\n  rat_poly_times (B ^ 3) (B\\<^sup>2)\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n  rat_poly_times (B ^ 3) (rat_poly_times A A) -\n  rat_poly_times (B ^ 3) (B\\<^sup>2)\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n  rat_poly_times (B ^ 3) (rat_poly_times A A) -\n  rat_poly_times (B ^ 3) (B\\<^sup>2)", "have \"... = (((B::rat_poly)^3)*(A*A) - (B^5))\""], ["proof (prove)\nusing this:\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n  rat_poly_times (B ^ 3) (rat_poly_times A A) -\n  rat_poly_times (B ^ 3) (B\\<^sup>2)\n\ngoal (1 subgoal):\n 1. rat_poly_times (B ^ 3) (rat_poly_times A A) -\n    rat_poly_times (B ^ 3) (B\\<^sup>2) =\n    rat_poly_times (B ^ 3) (rat_poly_times A A) - B ^ 5", "using power_add"], ["proof (prove)\nusing this:\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n  rat_poly_times (B ^ 3) (rat_poly_times A A) -\n  rat_poly_times (B ^ 3) (B\\<^sup>2)\n  ?a ^ (?m + ?n) = ?a ^ ?m * ?a ^ ?n\n\ngoal (1 subgoal):\n 1. rat_poly_times (B ^ 3) (rat_poly_times A A) -\n    rat_poly_times (B ^ 3) (B\\<^sup>2) =\n    rat_poly_times (B ^ 3) (rat_poly_times A A) - B ^ 5", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n             rat_poly_times (B ^ 3) (rat_poly_times A A) -\n             rat_poly_times (B ^ 3) (B\\<^sup>2);\n     \\<And>a m n. a ^ (m + n) = a ^ m * a ^ n\\<rbrakk>\n    \\<Longrightarrow> rat_poly_times (B ^ 3) (rat_poly_times A A) -\n                      rat_poly_times (B ^ 3) (B\\<^sup>2) =\n                      rat_poly_times (B ^ 3) (rat_poly_times A A) - B ^ 5", "have \"(B^(3::nat))*(B^2) =  (B^5)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B ^ 3 * B\\<^sup>2 = B ^ 5", "by (metis One_nat_def Suc_1 numeral_3_eq_3 power_Suc power_numeral_odd)"], ["proof (state)\nthis:\n  B ^ 3 * B\\<^sup>2 = B ^ 5\n\ngoal (1 subgoal):\n 1. \\<lbrakk>rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n             rat_poly_times (B ^ 3) (rat_poly_times A A) -\n             rat_poly_times (B ^ 3) (B\\<^sup>2);\n     \\<And>a m n. a ^ (m + n) = a ^ m * a ^ n\\<rbrakk>\n    \\<Longrightarrow> rat_poly_times (B ^ 3) (rat_poly_times A A) -\n                      rat_poly_times (B ^ 3) (B\\<^sup>2) =\n                      rat_poly_times (B ^ 3) (rat_poly_times A A) - B ^ 5", "then"], ["proof (chain)\npicking this:\n  B ^ 3 * B\\<^sup>2 = B ^ 5", "show ?thesis"], ["proof (prove)\nusing this:\n  B ^ 3 * B\\<^sup>2 = B ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (B ^ 3) (rat_poly_times A A) -\n    rat_poly_times (B ^ 3) (B\\<^sup>2) =\n    rat_poly_times (B ^ 3) (rat_poly_times A A) - B ^ 5", "using s2"], ["proof (prove)\nusing this:\n  B ^ 3 * B\\<^sup>2 = B ^ 5\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n  rat_poly_times (B ^ 3) (rat_poly_times A A) -\n  rat_poly_times (B ^ 3) (B\\<^sup>2)\n\ngoal (1 subgoal):\n 1. rat_poly_times (B ^ 3) (rat_poly_times A A) -\n    rat_poly_times (B ^ 3) (B\\<^sup>2) =\n    rat_poly_times (B ^ 3) (rat_poly_times A A) - B ^ 5", "by auto"], ["proof (state)\nthis:\n  rat_poly_times (B ^ 3) (rat_poly_times A A) -\n  rat_poly_times (B ^ 3) (B\\<^sup>2) =\n  rat_poly_times (B ^ 3) (rat_poly_times A A) - B ^ 5\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rat_poly_times (B ^ 3) (rat_poly_times A A) -\n  rat_poly_times (B ^ 3) (B\\<^sup>2) =\n  rat_poly_times (B ^ 3) (rat_poly_times A A) - B ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (B ^ 3) (rat_poly_times A A) -\n  rat_poly_times (B ^ 3) (B\\<^sup>2) =\n  rat_poly_times (B ^ 3) (rat_poly_times A A) - B ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (B ^ 3) (rat_poly_times A A) -\n  rat_poly_times (B ^ 3) (B\\<^sup>2) =\n  rat_poly_times (B ^ 3) (rat_poly_times A A) - B ^ 5", "have \"... =  ((((B::rat_poly)*B*B)*(A*A)) - (B^5))\""], ["proof (prove)\nusing this:\n  rat_poly_times (B ^ 3) (rat_poly_times A A) -\n  rat_poly_times (B ^ 3) (B\\<^sup>2) =\n  rat_poly_times (B ^ 3) (rat_poly_times A A) - B ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (B ^ 3) (rat_poly_times A A) - B ^ 5 =\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B)\n     (rat_poly_times A A) -\n    B ^ 5", "by (metis power3_eq_cube)"], ["proof (state)\nthis:\n  rat_poly_times (B ^ 3) (rat_poly_times A A) - B ^ 5 =\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B)\n   (rat_poly_times A A) -\n  B ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (B ^ 3) (rat_poly_times A A) - B ^ 5 =\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B)\n   (rat_poly_times A A) -\n  B ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (B ^ 3) (rat_poly_times A A) - B ^ 5 =\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B)\n   (rat_poly_times A A) -\n  B ^ 5", "have \"... = ((((B::rat_poly)*(B*(B*A)*A))) - (B^5))\""], ["proof (prove)\nusing this:\n  rat_poly_times (B ^ 3) (rat_poly_times A A) - B ^ 5 =\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B)\n   (rat_poly_times A A) -\n  B ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (rat_poly_times (rat_poly_times B B) B)\n     (rat_poly_times A A) -\n    B ^ 5 =\n    rat_poly_times B\n     (rat_poly_times (rat_poly_times B (rat_poly_times B A)) A) -\n    B ^ 5", "by auto"], ["proof (state)\nthis:\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B)\n   (rat_poly_times A A) -\n  B ^ 5 =\n  rat_poly_times B\n   (rat_poly_times (rat_poly_times B (rat_poly_times B A)) A) -\n  B ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B)\n   (rat_poly_times A A) -\n  B ^ 5 =\n  rat_poly_times B\n   (rat_poly_times (rat_poly_times B (rat_poly_times B A)) A) -\n  B ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B)\n   (rat_poly_times A A) -\n  B ^ 5 =\n  rat_poly_times B\n   (rat_poly_times (rat_poly_times B (rat_poly_times B A)) A) -\n  B ^ 5", "have \"... = ((((B::rat_poly)*(B*(1)*A))) - (B^5))\""], ["proof (prove)\nusing this:\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B)\n   (rat_poly_times A A) -\n  B ^ 5 =\n  rat_poly_times B\n   (rat_poly_times (rat_poly_times B (rat_poly_times B A)) A) -\n  B ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times B\n     (rat_poly_times (rat_poly_times B (rat_poly_times B A)) A) -\n    B ^ 5 =\n    rat_poly_times B (rat_poly_times (rat_poly_times B 1) A) - B ^ 5", "using inverse2"], ["proof (prove)\nusing this:\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B)\n   (rat_poly_times A A) -\n  B ^ 5 =\n  rat_poly_times B\n   (rat_poly_times (rat_poly_times B (rat_poly_times B A)) A) -\n  B ^ 5\n  rat_poly_times B A = 1\n\ngoal (1 subgoal):\n 1. rat_poly_times B\n     (rat_poly_times (rat_poly_times B (rat_poly_times B A)) A) -\n    B ^ 5 =\n    rat_poly_times B (rat_poly_times (rat_poly_times B 1) A) - B ^ 5", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B\n   (rat_poly_times (rat_poly_times B (rat_poly_times B A)) A) -\n  B ^ 5 =\n  rat_poly_times B (rat_poly_times (rat_poly_times B 1) A) - B ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times B\n   (rat_poly_times (rat_poly_times B (rat_poly_times B A)) A) -\n  B ^ 5 =\n  rat_poly_times B (rat_poly_times (rat_poly_times B 1) A) - B ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times B\n   (rat_poly_times (rat_poly_times B (rat_poly_times B A)) A) -\n  B ^ 5 =\n  rat_poly_times B (rat_poly_times (rat_poly_times B 1) A) - B ^ 5", "have \"... =  ((((B::rat_poly)*(B*A))) - (B^5))\""], ["proof (prove)\nusing this:\n  rat_poly_times B\n   (rat_poly_times (rat_poly_times B (rat_poly_times B A)) A) -\n  B ^ 5 =\n  rat_poly_times B (rat_poly_times (rat_poly_times B 1) A) - B ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times B (rat_poly_times (rat_poly_times B 1) A) - B ^ 5 =\n    rat_poly_times B (rat_poly_times B A) - B ^ 5", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B (rat_poly_times (rat_poly_times B 1) A) - B ^ 5 =\n  rat_poly_times B (rat_poly_times B A) - B ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times B (rat_poly_times (rat_poly_times B 1) A) - B ^ 5 =\n  rat_poly_times B (rat_poly_times B A) - B ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times B (rat_poly_times (rat_poly_times B 1) A) - B ^ 5 =\n  rat_poly_times B (rat_poly_times B A) - B ^ 5", "have \"... = ((((B::rat_poly))) - (B^5))\""], ["proof (prove)\nusing this:\n  rat_poly_times B (rat_poly_times (rat_poly_times B 1) A) - B ^ 5 =\n  rat_poly_times B (rat_poly_times B A) - B ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times B (rat_poly_times B A) - B ^ 5 = B - B ^ 5", "using inverse2"], ["proof (prove)\nusing this:\n  rat_poly_times B (rat_poly_times (rat_poly_times B 1) A) - B ^ 5 =\n  rat_poly_times B (rat_poly_times B A) - B ^ 5\n  rat_poly_times B A = 1\n\ngoal (1 subgoal):\n 1. rat_poly_times B (rat_poly_times B A) - B ^ 5 = B - B ^ 5", "by simp"], ["proof (state)\nthis:\n  rat_poly_times B (rat_poly_times B A) - B ^ 5 = B - B ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "ultimately"], ["proof (chain)\npicking this:\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n  rat_poly_times (B ^ 3) (rat_poly_times A A) -\n  rat_poly_times (B ^ 3) (B\\<^sup>2)\n  rat_poly_times (B ^ 3) (rat_poly_times A A) -\n  rat_poly_times (B ^ 3) (B\\<^sup>2) =\n  rat_poly_times (B ^ 3) (rat_poly_times A A) - B ^ 5\n  rat_poly_times (B ^ 3) (rat_poly_times A A) - B ^ 5 =\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B)\n   (rat_poly_times A A) -\n  B ^ 5\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B)\n   (rat_poly_times A A) -\n  B ^ 5 =\n  rat_poly_times B\n   (rat_poly_times (rat_poly_times B (rat_poly_times B A)) A) -\n  B ^ 5\n  rat_poly_times B\n   (rat_poly_times (rat_poly_times B (rat_poly_times B A)) A) -\n  B ^ 5 =\n  rat_poly_times B (rat_poly_times (rat_poly_times B 1) A) - B ^ 5\n  rat_poly_times B (rat_poly_times (rat_poly_times B 1) A) - B ^ 5 =\n  rat_poly_times B (rat_poly_times B A) - B ^ 5\n  rat_poly_times B (rat_poly_times B A) - B ^ 5 = B - B ^ 5", "have \"((B::rat_poly)^3)*(A*A - (B^2)) = ((B::rat_poly) - (B^5))\""], ["proof (prove)\nusing this:\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n  rat_poly_times (B ^ 3) (rat_poly_times A A) -\n  rat_poly_times (B ^ 3) (B\\<^sup>2)\n  rat_poly_times (B ^ 3) (rat_poly_times A A) -\n  rat_poly_times (B ^ 3) (B\\<^sup>2) =\n  rat_poly_times (B ^ 3) (rat_poly_times A A) - B ^ 5\n  rat_poly_times (B ^ 3) (rat_poly_times A A) - B ^ 5 =\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B)\n   (rat_poly_times A A) -\n  B ^ 5\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B)\n   (rat_poly_times A A) -\n  B ^ 5 =\n  rat_poly_times B\n   (rat_poly_times (rat_poly_times B (rat_poly_times B A)) A) -\n  B ^ 5\n  rat_poly_times B\n   (rat_poly_times (rat_poly_times B (rat_poly_times B A)) A) -\n  B ^ 5 =\n  rat_poly_times B (rat_poly_times (rat_poly_times B 1) A) - B ^ 5\n  rat_poly_times B (rat_poly_times (rat_poly_times B 1) A) - B ^ 5 =\n  rat_poly_times B (rat_poly_times B A) - B ^ 5\n  rat_poly_times B (rat_poly_times B A) - B ^ 5 = B - B ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) = B - B ^ 5", "by auto"], ["proof (state)\nthis:\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) = B - B ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) = B - B ^ 5", "have \"A*(A*A - (B^2)) - (B^3)*(A*A - (B^2))\n                       = (A^3) - (B::rat_poly) - ((B::rat_poly) - (B^5))\""], ["proof (prove)\nusing this:\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) = B - B ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    A ^ 3 - B - (B - B ^ 5)", "using s1"], ["proof (prove)\nusing this:\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) = B - B ^ 5\n  rat_poly_times A (rat_poly_times A A - B\\<^sup>2) = A ^ 3 - B\n\ngoal (1 subgoal):\n 1. rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    A ^ 3 - B - (B - B ^ 5)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n  A ^ 3 - B - (B - B ^ 5)\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3)\n     (rat_poly_times A A - B\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n  A ^ 3 - B - (B - B ^ 5)", "show ?thesis"], ["proof (prove)\nusing this:\n  rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n  A ^ 3 - B - (B - B ^ 5)\n\ngoal (1 subgoal):\n 1. rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n    rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n  rat_poly_plus (A ^ 3 - B - B) (B ^ 5)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n  rat_poly_plus (A ^ 3 - B - B) (B ^ 5)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "ultimately"], ["proof (chain)\npicking this:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n   (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B)) =\n  rat_poly_times (A - B ^ 3) (rat_poly_times A (A - B ^ 3))\n  rat_poly_times (A - B ^ 3) (rat_poly_times A (A - B ^ 3)) =\n  rat_poly_times (A - B ^ 3) (rat_poly_times A A - rat_poly_times A (B ^ 3))\n  rat_poly_times (A - B ^ 3)\n   (rat_poly_times A A - rat_poly_times A (B ^ 3)) =\n  rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2)\n  rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n  rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2)\n  rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n  rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "have \"(rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B)))\n             = ((A^3) - B) - B + (B^5)\""], ["proof (prove)\nusing this:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n   (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B)) =\n  rat_poly_times (A - B ^ 3) (rat_poly_times A (A - B ^ 3))\n  rat_poly_times (A - B ^ 3) (rat_poly_times A (A - B ^ 3)) =\n  rat_poly_times (A - B ^ 3) (rat_poly_times A A - rat_poly_times A (B ^ 3))\n  rat_poly_times (A - B ^ 3)\n   (rat_poly_times A A - rat_poly_times A (B ^ 3)) =\n  rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2)\n  rat_poly_times (A - B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n  rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2)\n  rat_poly_times A (rat_poly_times A A - B\\<^sup>2) -\n  rat_poly_times (B ^ 3) (rat_poly_times A A - B\\<^sup>2) =\n  rat_poly_plus (A ^ 3 - B - B) (B ^ 5)\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n     (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B)) =\n    rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n   (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B)) =\n  rat_poly_plus (A ^ 3 - B - B) (B ^ 5)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n   (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B)) =\n  rat_poly_plus (A ^ 3 - B - B) (B ^ 5)", "have \"?l =  B - (B^5) +  ((A^3) - B) - B + (B^5)\""], ["proof (prove)\nusing this:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n   (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B)) =\n  rat_poly_plus (A ^ 3 - B - B) (B ^ 5)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_plus (rat_poly_plus (B - B ^ 5) (A ^ 3 - B) - B) (B ^ 5)", "using 3"], ["proof (prove)\nusing this:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n   (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B)) =\n  rat_poly_plus (A ^ 3 - B - B) (B ^ 5)\n  rat_poly_times B\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B) =\n  B - B ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_plus (rat_poly_plus (B - B ^ 5) (A ^ 3 - B) - B) (B ^ 5)", "by auto"], ["proof (state)\nthis:\n  rat_poly_plus\n   (rat_poly_times B\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n     (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n  rat_poly_plus (rat_poly_plus (B - B ^ 5) (A ^ 3 - B) - B) (B ^ 5)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "then"], ["proof (chain)\npicking this:\n  rat_poly_plus\n   (rat_poly_times B\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n     (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n  rat_poly_plus (rat_poly_plus (B - B ^ 5) (A ^ 3 - B) - B) (B ^ 5)", "have 4:\"?l = (A^3) - B\""], ["proof (prove)\nusing this:\n  rat_poly_plus\n   (rat_poly_times B\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n     (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n  rat_poly_plus (rat_poly_plus (B - B ^ 5) (A ^ 3 - B) - B) (B ^ 5)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    A ^ 3 - B", "by auto"], ["proof (state)\nthis:\n  rat_poly_plus\n   (rat_poly_times B\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n     (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n  A ^ 3 - B\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "have \"?r =  A*((A - rat_poly_times (rat_poly_times B B) B)*A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "have \"... = A*(A - (B^3))*A\""], ["proof (prove)\nusing this:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)\n\ngoal (1 subgoal):\n 1. rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (rat_poly_times A (A - B ^ 3)) A", "using 1"], ["proof (prove)\nusing this:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)\n  A - rat_poly_times (rat_poly_times B B) B = A - B ^ 3\n\ngoal (1 subgoal):\n 1. rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (rat_poly_times A (A - B ^ 3)) A", "by auto"], ["proof (state)\nthis:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times (rat_poly_times A (A - B ^ 3)) A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times (rat_poly_times A (A - B ^ 3)) A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "have \"... = A*(A*A - (B^3)*A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (rat_poly_times A (A - B ^ 3)) A =\n    rat_poly_times A (rat_poly_times A A - rat_poly_times (B ^ 3) A)", "by (simp add: minus_left_distributivity mult.commute)"], ["proof (state)\nthis:\n  rat_poly_times (rat_poly_times A (A - B ^ 3)) A =\n  rat_poly_times A (rat_poly_times A A - rat_poly_times (B ^ 3) A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (rat_poly_times A (A - B ^ 3)) A =\n  rat_poly_times A (rat_poly_times A A - rat_poly_times (B ^ 3) A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "have \"... = A*(A*A - (B*B*B)*A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times A (rat_poly_times A A - rat_poly_times (B ^ 3) A) =\n    rat_poly_times A\n     (rat_poly_times A A -\n      rat_poly_times (rat_poly_times (rat_poly_times B B) B) A)", "by (metis power3_eq_cube)"], ["proof (state)\nthis:\n  rat_poly_times A (rat_poly_times A A - rat_poly_times (B ^ 3) A) =\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times A (rat_poly_times A A - rat_poly_times (B ^ 3) A) =\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "have \"... = A*(A*A - (B*B*(B*A)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times A\n     (rat_poly_times A A -\n      rat_poly_times (rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times A\n     (rat_poly_times A A -\n      rat_poly_times (rat_poly_times B B) (rat_poly_times B A))", "by auto"], ["proof (state)\nthis:\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times B B) (rat_poly_times B A))\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times B B) (rat_poly_times B A))\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "have \"... = A*(A*A - B*B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times A\n     (rat_poly_times A A -\n      rat_poly_times (rat_poly_times B B) (rat_poly_times B A)) =\n    rat_poly_times A (rat_poly_times A A - rat_poly_times B B)", "using inverse2 minus_left_distributivity"], ["proof (prove)\nusing this:\n  rat_poly_times B A = 1\n  rat_poly_times ?p (?q - ?r) = rat_poly_times ?p ?q - rat_poly_times ?p ?r\n\ngoal (1 subgoal):\n 1. rat_poly_times A\n     (rat_poly_times A A -\n      rat_poly_times (rat_poly_times B B) (rat_poly_times B A)) =\n    rat_poly_times A (rat_poly_times A A - rat_poly_times B B)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times B B) (rat_poly_times B A)) =\n  rat_poly_times A (rat_poly_times A A - rat_poly_times B B)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times B B) (rat_poly_times B A)) =\n  rat_poly_times A (rat_poly_times A A - rat_poly_times B B)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "have \"... = A*A*A - A*(B*B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times A (rat_poly_times A A - rat_poly_times B B) =\n    rat_poly_times (rat_poly_times A A) A -\n    rat_poly_times A (rat_poly_times B B)", "by (metis minus_left_distributivity rat_poly.comm)"], ["proof (state)\nthis:\n  rat_poly_times A (rat_poly_times A A - rat_poly_times B B) =\n  rat_poly_times (rat_poly_times A A) A -\n  rat_poly_times A (rat_poly_times B B)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times A (rat_poly_times A A - rat_poly_times B B) =\n  rat_poly_times (rat_poly_times A A) A -\n  rat_poly_times A (rat_poly_times B B)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "have \"... = A^3 - (A*B)*B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (rat_poly_times A A) A -\n    rat_poly_times A (rat_poly_times B B) =\n    A ^ 3 - rat_poly_times (rat_poly_times A B) B", "by (metis ab_semigroup_mult_class.mult_ac(1) power3_eq_cube)"], ["proof (state)\nthis:\n  rat_poly_times (rat_poly_times A A) A -\n  rat_poly_times A (rat_poly_times B B) =\n  A ^ 3 - rat_poly_times (rat_poly_times A B) B\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (rat_poly_times A A) A -\n  rat_poly_times A (rat_poly_times B B) =\n  A ^ 3 - rat_poly_times (rat_poly_times A B) B\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "have \"... = A^3 - B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A ^ 3 - rat_poly_times (rat_poly_times A B) B = A ^ 3 - B", "using inverse1"], ["proof (prove)\nusing this:\n  rat_poly_times A B = 1\n\ngoal (1 subgoal):\n 1. A ^ 3 - rat_poly_times (rat_poly_times A B) B = A ^ 3 - B", "by (metis monoid_mult_class.mult.left_neutral)"], ["proof (state)\nthis:\n  A ^ 3 - rat_poly_times (rat_poly_times A B) B = A ^ 3 - B\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "ultimately"], ["proof (chain)\npicking this:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times (rat_poly_times A (A - B ^ 3)) A\n  rat_poly_times (rat_poly_times A (A - B ^ 3)) A =\n  rat_poly_times A (rat_poly_times A A - rat_poly_times (B ^ 3) A)\n  rat_poly_times A (rat_poly_times A A - rat_poly_times (B ^ 3) A) =\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A)\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times B B) (rat_poly_times B A))\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times B B) (rat_poly_times B A)) =\n  rat_poly_times A (rat_poly_times A A - rat_poly_times B B)\n  rat_poly_times A (rat_poly_times A A - rat_poly_times B B) =\n  rat_poly_times (rat_poly_times A A) A -\n  rat_poly_times A (rat_poly_times B B)\n  rat_poly_times (rat_poly_times A A) A -\n  rat_poly_times A (rat_poly_times B B) =\n  A ^ 3 - rat_poly_times (rat_poly_times A B) B\n  A ^ 3 - rat_poly_times (rat_poly_times A B) B = A ^ 3 - B", "have \"?r =  A^3 - B\""], ["proof (prove)\nusing this:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times (rat_poly_times A (A - B ^ 3)) A\n  rat_poly_times (rat_poly_times A (A - B ^ 3)) A =\n  rat_poly_times A (rat_poly_times A A - rat_poly_times (B ^ 3) A)\n  rat_poly_times A (rat_poly_times A A - rat_poly_times (B ^ 3) A) =\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A)\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times B B) (rat_poly_times B A))\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times B B) (rat_poly_times B A)) =\n  rat_poly_times A (rat_poly_times A A - rat_poly_times B B)\n  rat_poly_times A (rat_poly_times A A - rat_poly_times B B) =\n  rat_poly_times (rat_poly_times A A) A -\n  rat_poly_times A (rat_poly_times B B)\n  rat_poly_times (rat_poly_times A A) A -\n  rat_poly_times A (rat_poly_times B B) =\n  A ^ 3 - rat_poly_times (rat_poly_times A B) B\n  A ^ 3 - rat_poly_times (rat_poly_times A B) B = A ^ 3 - B\n\ngoal (1 subgoal):\n 1. rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    A ^ 3 - B", "by auto"], ["proof (state)\nthis:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  A ^ 3 - B\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  A ^ 3 - B", "show ?thesis"], ["proof (prove)\nusing this:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  A ^ 3 - B\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "using 4"], ["proof (prove)\nusing this:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  A ^ 3 - B\n  rat_poly_plus\n   (rat_poly_times B\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n     (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n  A ^ 3 - B\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n       (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "by auto"], ["proof (state)\nthis:\n  rat_poly_plus\n   (rat_poly_times B\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) B))\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B)\n     (rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B))) =\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma computation2:\n\" rat_poly_plus (rat_poly_times A (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)\" (is \"?l = ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "have 1:\"(B - rat_poly_times (rat_poly_times A A) A)\n               = B - (A^3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B - rat_poly_times (rat_poly_times A A) A = B - A ^ 3", "by (metis power3_eq_cube)"], ["proof (state)\nthis:\n  B - rat_poly_times (rat_poly_times A A) A = B - A ^ 3\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "then"], ["proof (chain)\npicking this:\n  B - rat_poly_times (rat_poly_times A A) A = B - A ^ 3", "have 2:\"(rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A)\n                 = B*A - (A^3)*A\""], ["proof (prove)\nusing this:\n  B - rat_poly_times (rat_poly_times A A) A = B - A ^ 3\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A =\n    rat_poly_times B A - rat_poly_times (A ^ 3) A", "by (metis minus_right_distributivity)"], ["proof (state)\nthis:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A =\n  rat_poly_times B A - rat_poly_times (A ^ 3) A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A =\n  rat_poly_times B A - rat_poly_times (A ^ 3) A", "have \"... = 1 - (A^4)\""], ["proof (prove)\nusing this:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A =\n  rat_poly_times B A - rat_poly_times (A ^ 3) A\n\ngoal (1 subgoal):\n 1. rat_poly_times B A - rat_poly_times (A ^ 3) A = 1 - A ^ 4", "using inverse2"], ["proof (prove)\nusing this:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A =\n  rat_poly_times B A - rat_poly_times (A ^ 3) A\n  rat_poly_times B A = 1\n\ngoal (1 subgoal):\n 1. rat_poly_times B A - rat_poly_times (A ^ 3) A = 1 - A ^ 4", "by (metis mult.commute one_plus_numeral power_add power_one_right semiring_norm(2)\n              semiring_norm(4))"], ["proof (state)\nthis:\n  rat_poly_times B A - rat_poly_times (A ^ 3) A = 1 - A ^ 4\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times B A - rat_poly_times (A ^ 3) A = 1 - A ^ 4", "have \"(rat_poly_times A (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n                      = A - (A^4)*A\""], ["proof (prove)\nusing this:\n  rat_poly_times B A - rat_poly_times (A ^ 3) A = 1 - A ^ 4\n\ngoal (1 subgoal):\n 1. rat_poly_times A\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A) =\n    A - rat_poly_times (A ^ 4) A", "using 2"], ["proof (prove)\nusing this:\n  rat_poly_times B A - rat_poly_times (A ^ 3) A = 1 - A ^ 4\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A =\n  rat_poly_times B A - rat_poly_times (A ^ 3) A\n\ngoal (1 subgoal):\n 1. rat_poly_times A\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A) =\n    A - rat_poly_times (A ^ 4) A", "by (simp add: minus_left_distributivity)"], ["proof (state)\nthis:\n  rat_poly_times A\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A) =\n  A - rat_poly_times (A ^ 4) A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times A\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A) =\n  A - rat_poly_times (A ^ 4) A", "have 3:\"(rat_poly_times A (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n                  = A - (A^5)\""], ["proof (prove)\nusing this:\n  rat_poly_times A\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A) =\n  A - rat_poly_times (A ^ 4) A\n\ngoal (1 subgoal):\n 1. rat_poly_times A\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A) =\n    A - A ^ 5", "by (simp add: numeral_Bit0 numeral_Bit1)"], ["proof (state)\nthis:\n  rat_poly_times A\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A) =\n  A - A ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "have \"(rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A)))\n                 =  (B - (A^3))*(B*( B - (A^3)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A)) =\n    rat_poly_times (B - A ^ 3) (rat_poly_times B (B - A ^ 3))", "using 1"], ["proof (prove)\nusing this:\n  B - rat_poly_times (rat_poly_times A A) A = B - A ^ 3\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A)) =\n    rat_poly_times (B - A ^ 3) (rat_poly_times B (B - A ^ 3))", "by auto"], ["proof (state)\nthis:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n   (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A)) =\n  rat_poly_times (B - A ^ 3) (rat_poly_times B (B - A ^ 3))\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n   (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A)) =\n  rat_poly_times (B - A ^ 3) (rat_poly_times B (B - A ^ 3))\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n   (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A)) =\n  rat_poly_times (B - A ^ 3) (rat_poly_times B (B - A ^ 3))", "have \"... =  (B - (A^3))*(B*B - (B*(A^3)))\""], ["proof (prove)\nusing this:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n   (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A)) =\n  rat_poly_times (B - A ^ 3) (rat_poly_times B (B - A ^ 3))\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B (B - A ^ 3)) =\n    rat_poly_times (B - A ^ 3)\n     (rat_poly_times B B - rat_poly_times B (A ^ 3))", "by (metis minus_left_distributivity)"], ["proof (state)\nthis:\n  rat_poly_times (B - A ^ 3) (rat_poly_times B (B - A ^ 3)) =\n  rat_poly_times (B - A ^ 3) (rat_poly_times B B - rat_poly_times B (A ^ 3))\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (B - A ^ 3) (rat_poly_times B (B - A ^ 3)) =\n  rat_poly_times (B - A ^ 3) (rat_poly_times B B - rat_poly_times B (A ^ 3))\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (B - A ^ 3) (rat_poly_times B (B - A ^ 3)) =\n  rat_poly_times (B - A ^ 3) (rat_poly_times B B - rat_poly_times B (A ^ 3))", "have \"... = (B - (A^3))*(B*B - (A^2))\""], ["proof (prove)\nusing this:\n  rat_poly_times (B - A ^ 3) (rat_poly_times B (B - A ^ 3)) =\n  rat_poly_times (B - A ^ 3) (rat_poly_times B B - rat_poly_times B (A ^ 3))\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3)\n     (rat_poly_times B B - rat_poly_times B (A ^ 3)) =\n    rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2)", "using inverse2"], ["proof (prove)\nusing this:\n  rat_poly_times (B - A ^ 3) (rat_poly_times B (B - A ^ 3)) =\n  rat_poly_times (B - A ^ 3) (rat_poly_times B B - rat_poly_times B (A ^ 3))\n  rat_poly_times B A = 1\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3)\n     (rat_poly_times B B - rat_poly_times B (A ^ 3)) =\n    rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2)", "by (simp add: power2_eq_square power3_eq_cube)"], ["proof (state)\nthis:\n  rat_poly_times (B - A ^ 3)\n   (rat_poly_times B B - rat_poly_times B (A ^ 3)) =\n  rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (B - A ^ 3)\n   (rat_poly_times B B - rat_poly_times B (A ^ 3)) =\n  rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (B - A ^ 3)\n   (rat_poly_times B B - rat_poly_times B (A ^ 3)) =\n  rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2)", "have \"... = B*(B*B - (A^2)) - (A^3)*(B*B - (A^2))\""], ["proof (prove)\nusing this:\n  rat_poly_times (B - A ^ 3)\n   (rat_poly_times B B - rat_poly_times B (A ^ 3)) =\n  rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2)\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2)", "by (metis minus_right_distributivity)"], ["proof (state)\nthis:\n  rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n  rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n  rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n  rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2)", "have \"... = ((B^3) - A) - A + (A^5)\""], ["proof (prove)\nusing this:\n  rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n  rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2)\n\ngoal (1 subgoal):\n 1. rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "have \"B*(B*B - (A^2)) = (B*B*B - B*(A^2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B * (B * B - A\\<^sup>2) = B * B * B - B * A\\<^sup>2", "by (simp add: right_diff_distrib)"], ["proof (state)\nthis:\n  B * (B * B - A\\<^sup>2) = B * B * B - B * A\\<^sup>2\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "moreover"], ["proof (state)\nthis:\n  B * (B * B - A\\<^sup>2) = B * B * B - B * A\\<^sup>2\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "have \"... = (B*B*B - B*(A*A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B * B * B - B * A\\<^sup>2 = B * B * B - B * (A * A)", "by (metis power2_eq_square)"], ["proof (state)\nthis:\n  B * B * B - B * A\\<^sup>2 = B * B * B - B * (A * A)\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "moreover"], ["proof (state)\nthis:\n  B * B * B - B * A\\<^sup>2 = B * B * B - B * (A * A)\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "have \"...  = ((B^3) - ((B::rat_poly)*A)*A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (rat_poly_times B B) B -\n    rat_poly_times B (rat_poly_times A A) =\n    B ^ 3 - rat_poly_times (rat_poly_times B A) A", "by (simp add: power3_eq_cube)"], ["proof (state)\nthis:\n  rat_poly_times (rat_poly_times B B) B -\n  rat_poly_times B (rat_poly_times A A) =\n  B ^ 3 - rat_poly_times (rat_poly_times B A) A\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (rat_poly_times B B) B -\n  rat_poly_times B (rat_poly_times A A) =\n  B ^ 3 - rat_poly_times (rat_poly_times B A) A\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "have \"... = ((B^3) - ((1::rat_poly)*A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B ^ 3 - rat_poly_times (rat_poly_times B A) A =\n    B ^ 3 - rat_poly_times 1 A", "by (metis inverse2)"], ["proof (state)\nthis:\n  B ^ 3 - rat_poly_times (rat_poly_times B A) A = B ^ 3 - rat_poly_times 1 A\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "moreover"], ["proof (state)\nthis:\n  B ^ 3 - rat_poly_times (rat_poly_times B A) A = B ^ 3 - rat_poly_times 1 A\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "have \"... = (B^3) - A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B ^ 3 - rat_poly_times 1 A = B ^ 3 - A", "by auto"], ["proof (state)\nthis:\n  B ^ 3 - rat_poly_times 1 A = B ^ 3 - A\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "ultimately"], ["proof (chain)\npicking this:\n  B * (B * B - A\\<^sup>2) = B * B * B - B * A\\<^sup>2\n  B * B * B - B * A\\<^sup>2 = B * B * B - B * (A * A)\n  rat_poly_times (rat_poly_times B B) B -\n  rat_poly_times B (rat_poly_times A A) =\n  B ^ 3 - rat_poly_times (rat_poly_times B A) A\n  B ^ 3 - rat_poly_times (rat_poly_times B A) A = B ^ 3 - rat_poly_times 1 A\n  B ^ 3 - rat_poly_times 1 A = B ^ 3 - A", "have s1:\"(B::rat_poly)*(B*B - (A^2)) = (B^3) - (A::rat_poly)\""], ["proof (prove)\nusing this:\n  B * (B * B - A\\<^sup>2) = B * B * B - B * A\\<^sup>2\n  B * B * B - B * A\\<^sup>2 = B * B * B - B * (A * A)\n  rat_poly_times (rat_poly_times B B) B -\n  rat_poly_times B (rat_poly_times A A) =\n  B ^ 3 - rat_poly_times (rat_poly_times B A) A\n  B ^ 3 - rat_poly_times (rat_poly_times B A) A = B ^ 3 - rat_poly_times 1 A\n  B ^ 3 - rat_poly_times 1 A = B ^ 3 - A\n\ngoal (1 subgoal):\n 1. rat_poly_times B (rat_poly_times B B - A\\<^sup>2) = B ^ 3 - A", "by metis"], ["proof (state)\nthis:\n  rat_poly_times B (rat_poly_times B B - A\\<^sup>2) = B ^ 3 - A\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "have s2:\"((A::rat_poly)^3)*(B*B - (A^2)) = (A^3)*(B*B) - (A^(3::nat))*(A^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times (A ^ 3) (rat_poly_times B B) -\n    rat_poly_times (A ^ 3) (A\\<^sup>2)", "by (metis minus_left_distributivity power3_eq_cube)"], ["proof (state)\nthis:\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n  rat_poly_times (A ^ 3) (rat_poly_times B B) -\n  rat_poly_times (A ^ 3) (A\\<^sup>2)\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n  rat_poly_times (A ^ 3) (rat_poly_times B B) -\n  rat_poly_times (A ^ 3) (A\\<^sup>2)\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n  rat_poly_times (A ^ 3) (rat_poly_times B B) -\n  rat_poly_times (A ^ 3) (A\\<^sup>2)", "have \"... = (((A::rat_poly)^3)*(B*B) - (A^5))\""], ["proof (prove)\nusing this:\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n  rat_poly_times (A ^ 3) (rat_poly_times B B) -\n  rat_poly_times (A ^ 3) (A\\<^sup>2)\n\ngoal (1 subgoal):\n 1. rat_poly_times (A ^ 3) (rat_poly_times B B) -\n    rat_poly_times (A ^ 3) (A\\<^sup>2) =\n    rat_poly_times (A ^ 3) (rat_poly_times B B) - A ^ 5", "using power_add"], ["proof (prove)\nusing this:\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n  rat_poly_times (A ^ 3) (rat_poly_times B B) -\n  rat_poly_times (A ^ 3) (A\\<^sup>2)\n  ?a ^ (?m + ?n) = ?a ^ ?m * ?a ^ ?n\n\ngoal (1 subgoal):\n 1. rat_poly_times (A ^ 3) (rat_poly_times B B) -\n    rat_poly_times (A ^ 3) (A\\<^sup>2) =\n    rat_poly_times (A ^ 3) (rat_poly_times B B) - A ^ 5", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n             rat_poly_times (A ^ 3) (rat_poly_times B B) -\n             rat_poly_times (A ^ 3) (A\\<^sup>2);\n     \\<And>a m n. a ^ (m + n) = a ^ m * a ^ n\\<rbrakk>\n    \\<Longrightarrow> rat_poly_times (A ^ 3) (rat_poly_times B B) -\n                      rat_poly_times (A ^ 3) (A\\<^sup>2) =\n                      rat_poly_times (A ^ 3) (rat_poly_times B B) - A ^ 5", "have \"(A^(3::nat))*(A^2) = A^5\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A ^ 3 * A\\<^sup>2 = A ^ 5", "by (metis One_nat_def Suc_1 numeral_3_eq_3 power_Suc power_numeral_odd)"], ["proof (state)\nthis:\n  A ^ 3 * A\\<^sup>2 = A ^ 5\n\ngoal (1 subgoal):\n 1. \\<lbrakk>rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n             rat_poly_times (A ^ 3) (rat_poly_times B B) -\n             rat_poly_times (A ^ 3) (A\\<^sup>2);\n     \\<And>a m n. a ^ (m + n) = a ^ m * a ^ n\\<rbrakk>\n    \\<Longrightarrow> rat_poly_times (A ^ 3) (rat_poly_times B B) -\n                      rat_poly_times (A ^ 3) (A\\<^sup>2) =\n                      rat_poly_times (A ^ 3) (rat_poly_times B B) - A ^ 5", "then"], ["proof (chain)\npicking this:\n  A ^ 3 * A\\<^sup>2 = A ^ 5", "show ?thesis"], ["proof (prove)\nusing this:\n  A ^ 3 * A\\<^sup>2 = A ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (A ^ 3) (rat_poly_times B B) -\n    rat_poly_times (A ^ 3) (A\\<^sup>2) =\n    rat_poly_times (A ^ 3) (rat_poly_times B B) - A ^ 5", "using s2"], ["proof (prove)\nusing this:\n  A ^ 3 * A\\<^sup>2 = A ^ 5\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n  rat_poly_times (A ^ 3) (rat_poly_times B B) -\n  rat_poly_times (A ^ 3) (A\\<^sup>2)\n\ngoal (1 subgoal):\n 1. rat_poly_times (A ^ 3) (rat_poly_times B B) -\n    rat_poly_times (A ^ 3) (A\\<^sup>2) =\n    rat_poly_times (A ^ 3) (rat_poly_times B B) - A ^ 5", "by auto"], ["proof (state)\nthis:\n  rat_poly_times (A ^ 3) (rat_poly_times B B) -\n  rat_poly_times (A ^ 3) (A\\<^sup>2) =\n  rat_poly_times (A ^ 3) (rat_poly_times B B) - A ^ 5\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rat_poly_times (A ^ 3) (rat_poly_times B B) -\n  rat_poly_times (A ^ 3) (A\\<^sup>2) =\n  rat_poly_times (A ^ 3) (rat_poly_times B B) - A ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (A ^ 3) (rat_poly_times B B) -\n  rat_poly_times (A ^ 3) (A\\<^sup>2) =\n  rat_poly_times (A ^ 3) (rat_poly_times B B) - A ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (A ^ 3) (rat_poly_times B B) -\n  rat_poly_times (A ^ 3) (A\\<^sup>2) =\n  rat_poly_times (A ^ 3) (rat_poly_times B B) - A ^ 5", "have \"... =  ((((A::rat_poly)*A*A)*(B*B)) - (A^5))\""], ["proof (prove)\nusing this:\n  rat_poly_times (A ^ 3) (rat_poly_times B B) -\n  rat_poly_times (A ^ 3) (A\\<^sup>2) =\n  rat_poly_times (A ^ 3) (rat_poly_times B B) - A ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (A ^ 3) (rat_poly_times B B) - A ^ 5 =\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A)\n     (rat_poly_times B B) -\n    A ^ 5", "by (metis power3_eq_cube)"], ["proof (state)\nthis:\n  rat_poly_times (A ^ 3) (rat_poly_times B B) - A ^ 5 =\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A)\n   (rat_poly_times B B) -\n  A ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (A ^ 3) (rat_poly_times B B) - A ^ 5 =\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A)\n   (rat_poly_times B B) -\n  A ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (A ^ 3) (rat_poly_times B B) - A ^ 5 =\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A)\n   (rat_poly_times B B) -\n  A ^ 5", "have \"... = ((((A::rat_poly)*(A*(A*B)*B))) - (A^5))\""], ["proof (prove)\nusing this:\n  rat_poly_times (A ^ 3) (rat_poly_times B B) - A ^ 5 =\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A)\n   (rat_poly_times B B) -\n  A ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (rat_poly_times (rat_poly_times A A) A)\n     (rat_poly_times B B) -\n    A ^ 5 =\n    rat_poly_times A\n     (rat_poly_times (rat_poly_times A (rat_poly_times A B)) B) -\n    A ^ 5", "by auto"], ["proof (state)\nthis:\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A)\n   (rat_poly_times B B) -\n  A ^ 5 =\n  rat_poly_times A\n   (rat_poly_times (rat_poly_times A (rat_poly_times A B)) B) -\n  A ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A)\n   (rat_poly_times B B) -\n  A ^ 5 =\n  rat_poly_times A\n   (rat_poly_times (rat_poly_times A (rat_poly_times A B)) B) -\n  A ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A)\n   (rat_poly_times B B) -\n  A ^ 5 =\n  rat_poly_times A\n   (rat_poly_times (rat_poly_times A (rat_poly_times A B)) B) -\n  A ^ 5", "have \"... = ((((A::rat_poly)*(A*(1)*B))) - (A^5))\""], ["proof (prove)\nusing this:\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A)\n   (rat_poly_times B B) -\n  A ^ 5 =\n  rat_poly_times A\n   (rat_poly_times (rat_poly_times A (rat_poly_times A B)) B) -\n  A ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times A\n     (rat_poly_times (rat_poly_times A (rat_poly_times A B)) B) -\n    A ^ 5 =\n    rat_poly_times A (rat_poly_times (rat_poly_times A 1) B) - A ^ 5", "using inverse1"], ["proof (prove)\nusing this:\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A)\n   (rat_poly_times B B) -\n  A ^ 5 =\n  rat_poly_times A\n   (rat_poly_times (rat_poly_times A (rat_poly_times A B)) B) -\n  A ^ 5\n  rat_poly_times A B = 1\n\ngoal (1 subgoal):\n 1. rat_poly_times A\n     (rat_poly_times (rat_poly_times A (rat_poly_times A B)) B) -\n    A ^ 5 =\n    rat_poly_times A (rat_poly_times (rat_poly_times A 1) B) - A ^ 5", "by auto"], ["proof (state)\nthis:\n  rat_poly_times A\n   (rat_poly_times (rat_poly_times A (rat_poly_times A B)) B) -\n  A ^ 5 =\n  rat_poly_times A (rat_poly_times (rat_poly_times A 1) B) - A ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times A\n   (rat_poly_times (rat_poly_times A (rat_poly_times A B)) B) -\n  A ^ 5 =\n  rat_poly_times A (rat_poly_times (rat_poly_times A 1) B) - A ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times A\n   (rat_poly_times (rat_poly_times A (rat_poly_times A B)) B) -\n  A ^ 5 =\n  rat_poly_times A (rat_poly_times (rat_poly_times A 1) B) - A ^ 5", "have \"... =  ((((A::rat_poly)*(A*B))) - (A^5))\""], ["proof (prove)\nusing this:\n  rat_poly_times A\n   (rat_poly_times (rat_poly_times A (rat_poly_times A B)) B) -\n  A ^ 5 =\n  rat_poly_times A (rat_poly_times (rat_poly_times A 1) B) - A ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times A (rat_poly_times (rat_poly_times A 1) B) - A ^ 5 =\n    rat_poly_times A (rat_poly_times A B) - A ^ 5", "by auto"], ["proof (state)\nthis:\n  rat_poly_times A (rat_poly_times (rat_poly_times A 1) B) - A ^ 5 =\n  rat_poly_times A (rat_poly_times A B) - A ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times A (rat_poly_times (rat_poly_times A 1) B) - A ^ 5 =\n  rat_poly_times A (rat_poly_times A B) - A ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times A (rat_poly_times (rat_poly_times A 1) B) - A ^ 5 =\n  rat_poly_times A (rat_poly_times A B) - A ^ 5", "have \"... = ((((A::rat_poly))) - (A^5))\""], ["proof (prove)\nusing this:\n  rat_poly_times A (rat_poly_times (rat_poly_times A 1) B) - A ^ 5 =\n  rat_poly_times A (rat_poly_times A B) - A ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times A (rat_poly_times A B) - A ^ 5 = A - A ^ 5", "using inverse1"], ["proof (prove)\nusing this:\n  rat_poly_times A (rat_poly_times (rat_poly_times A 1) B) - A ^ 5 =\n  rat_poly_times A (rat_poly_times A B) - A ^ 5\n  rat_poly_times A B = 1\n\ngoal (1 subgoal):\n 1. rat_poly_times A (rat_poly_times A B) - A ^ 5 = A - A ^ 5", "by auto"], ["proof (state)\nthis:\n  rat_poly_times A (rat_poly_times A B) - A ^ 5 = A - A ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "ultimately"], ["proof (chain)\npicking this:\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n  rat_poly_times (A ^ 3) (rat_poly_times B B) -\n  rat_poly_times (A ^ 3) (A\\<^sup>2)\n  rat_poly_times (A ^ 3) (rat_poly_times B B) -\n  rat_poly_times (A ^ 3) (A\\<^sup>2) =\n  rat_poly_times (A ^ 3) (rat_poly_times B B) - A ^ 5\n  rat_poly_times (A ^ 3) (rat_poly_times B B) - A ^ 5 =\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A)\n   (rat_poly_times B B) -\n  A ^ 5\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A)\n   (rat_poly_times B B) -\n  A ^ 5 =\n  rat_poly_times A\n   (rat_poly_times (rat_poly_times A (rat_poly_times A B)) B) -\n  A ^ 5\n  rat_poly_times A\n   (rat_poly_times (rat_poly_times A (rat_poly_times A B)) B) -\n  A ^ 5 =\n  rat_poly_times A (rat_poly_times (rat_poly_times A 1) B) - A ^ 5\n  rat_poly_times A (rat_poly_times (rat_poly_times A 1) B) - A ^ 5 =\n  rat_poly_times A (rat_poly_times A B) - A ^ 5\n  rat_poly_times A (rat_poly_times A B) - A ^ 5 = A - A ^ 5", "have \"((A::rat_poly)^3)*(B*B - (A^2)) = ((A::rat_poly) - (A^5))\""], ["proof (prove)\nusing this:\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n  rat_poly_times (A ^ 3) (rat_poly_times B B) -\n  rat_poly_times (A ^ 3) (A\\<^sup>2)\n  rat_poly_times (A ^ 3) (rat_poly_times B B) -\n  rat_poly_times (A ^ 3) (A\\<^sup>2) =\n  rat_poly_times (A ^ 3) (rat_poly_times B B) - A ^ 5\n  rat_poly_times (A ^ 3) (rat_poly_times B B) - A ^ 5 =\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A)\n   (rat_poly_times B B) -\n  A ^ 5\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A)\n   (rat_poly_times B B) -\n  A ^ 5 =\n  rat_poly_times A\n   (rat_poly_times (rat_poly_times A (rat_poly_times A B)) B) -\n  A ^ 5\n  rat_poly_times A\n   (rat_poly_times (rat_poly_times A (rat_poly_times A B)) B) -\n  A ^ 5 =\n  rat_poly_times A (rat_poly_times (rat_poly_times A 1) B) - A ^ 5\n  rat_poly_times A (rat_poly_times (rat_poly_times A 1) B) - A ^ 5 =\n  rat_poly_times A (rat_poly_times A B) - A ^ 5\n  rat_poly_times A (rat_poly_times A B) - A ^ 5 = A - A ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) = A - A ^ 5", "by auto"], ["proof (state)\nthis:\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) = A - A ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) = A - A ^ 5", "have \"B*(B*B - (A^2)) - (A^3)*(B*B - (A^2))\n                       = (B^3) - (A::rat_poly) - ((A::rat_poly) - (A^5))\""], ["proof (prove)\nusing this:\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) = A - A ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    B ^ 3 - A - (A - A ^ 5)", "using s1"], ["proof (prove)\nusing this:\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) = A - A ^ 5\n  rat_poly_times B (rat_poly_times B B - A\\<^sup>2) = B ^ 3 - A\n\ngoal (1 subgoal):\n 1. rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    B ^ 3 - A - (A - A ^ 5)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n  B ^ 3 - A - (A - A ^ 5)\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3)\n     (rat_poly_times B B - A\\<^sup>2) \\<Longrightarrow>\n    rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n  B ^ 3 - A - (A - A ^ 5)", "show ?thesis"], ["proof (prove)\nusing this:\n  rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n  B ^ 3 - A - (A - A ^ 5)\n\ngoal (1 subgoal):\n 1. rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n    rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n  rat_poly_plus (B ^ 3 - A - A) (A ^ 5)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n  rat_poly_plus (B ^ 3 - A - A) (A ^ 5)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "ultimately"], ["proof (chain)\npicking this:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n   (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A)) =\n  rat_poly_times (B - A ^ 3) (rat_poly_times B (B - A ^ 3))\n  rat_poly_times (B - A ^ 3) (rat_poly_times B (B - A ^ 3)) =\n  rat_poly_times (B - A ^ 3) (rat_poly_times B B - rat_poly_times B (A ^ 3))\n  rat_poly_times (B - A ^ 3)\n   (rat_poly_times B B - rat_poly_times B (A ^ 3)) =\n  rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2)\n  rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n  rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2)\n  rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n  rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "have \"(rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A)))\n             = ((B^3) - A) - A + (A^5)\""], ["proof (prove)\nusing this:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n   (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A)) =\n  rat_poly_times (B - A ^ 3) (rat_poly_times B (B - A ^ 3))\n  rat_poly_times (B - A ^ 3) (rat_poly_times B (B - A ^ 3)) =\n  rat_poly_times (B - A ^ 3) (rat_poly_times B B - rat_poly_times B (A ^ 3))\n  rat_poly_times (B - A ^ 3)\n   (rat_poly_times B B - rat_poly_times B (A ^ 3)) =\n  rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2)\n  rat_poly_times (B - A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n  rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2)\n  rat_poly_times B (rat_poly_times B B - A\\<^sup>2) -\n  rat_poly_times (A ^ 3) (rat_poly_times B B - A\\<^sup>2) =\n  rat_poly_plus (B ^ 3 - A - A) (A ^ 5)\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A)) =\n    rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n   (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A)) =\n  rat_poly_plus (B ^ 3 - A - A) (A ^ 5)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n   (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A)) =\n  rat_poly_plus (B ^ 3 - A - A) (A ^ 5)", "have \"?l =  A - (A^5) +  ((B^3) - A) - A + (A^5)\""], ["proof (prove)\nusing this:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n   (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A)) =\n  rat_poly_plus (B ^ 3 - A - A) (A ^ 5)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_plus (rat_poly_plus (A - A ^ 5) (B ^ 3 - A) - A) (A ^ 5)", "using 3"], ["proof (prove)\nusing this:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n   (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A)) =\n  rat_poly_plus (B ^ 3 - A - A) (A ^ 5)\n  rat_poly_times A\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A) =\n  A - A ^ 5\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_plus (rat_poly_plus (A - A ^ 5) (B ^ 3 - A) - A) (A ^ 5)", "by auto"], ["proof (state)\nthis:\n  rat_poly_plus\n   (rat_poly_times A\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n  rat_poly_plus (rat_poly_plus (A - A ^ 5) (B ^ 3 - A) - A) (A ^ 5)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "then"], ["proof (chain)\npicking this:\n  rat_poly_plus\n   (rat_poly_times A\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n  rat_poly_plus (rat_poly_plus (A - A ^ 5) (B ^ 3 - A) - A) (A ^ 5)", "have 4:\"?l = (B^3) - A\""], ["proof (prove)\nusing this:\n  rat_poly_plus\n   (rat_poly_times A\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n  rat_poly_plus (rat_poly_plus (A - A ^ 5) (B ^ 3 - A) - A) (A ^ 5)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    B ^ 3 - A", "by auto"], ["proof (state)\nthis:\n  rat_poly_plus\n   (rat_poly_times A\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n  B ^ 3 - A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "have \"?r =  B*((B - rat_poly_times (rat_poly_times A A) A)*B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "have \"... = B*(B - (A^3))*B\""], ["proof (prove)\nusing this:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)\n\ngoal (1 subgoal):\n 1. rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (rat_poly_times B (B - A ^ 3)) B", "using 1"], ["proof (prove)\nusing this:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)\n  B - rat_poly_times (rat_poly_times A A) A = B - A ^ 3\n\ngoal (1 subgoal):\n 1. rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (rat_poly_times B (B - A ^ 3)) B", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times (rat_poly_times B (B - A ^ 3)) B\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times (rat_poly_times B (B - A ^ 3)) B\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "have \"... = B*(B*B - (A^3)*B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (rat_poly_times B (B - A ^ 3)) B =\n    rat_poly_times B (rat_poly_times B B - rat_poly_times (A ^ 3) B)", "using minus_left_distributivity"], ["proof (prove)\nusing this:\n  rat_poly_times ?p (?q - ?r) = rat_poly_times ?p ?q - rat_poly_times ?p ?r\n\ngoal (1 subgoal):\n 1. rat_poly_times (rat_poly_times B (B - A ^ 3)) B =\n    rat_poly_times B (rat_poly_times B B - rat_poly_times (A ^ 3) B)", "by (simp add: minus_left_distributivity mult.commute)"], ["proof (state)\nthis:\n  rat_poly_times (rat_poly_times B (B - A ^ 3)) B =\n  rat_poly_times B (rat_poly_times B B - rat_poly_times (A ^ 3) B)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (rat_poly_times B (B - A ^ 3)) B =\n  rat_poly_times B (rat_poly_times B B - rat_poly_times (A ^ 3) B)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "have \"... = B*(B*B - (A*A*A)*B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times B (rat_poly_times B B - rat_poly_times (A ^ 3) B) =\n    rat_poly_times B\n     (rat_poly_times B B -\n      rat_poly_times (rat_poly_times (rat_poly_times A A) A) B)", "by (metis power3_eq_cube)"], ["proof (state)\nthis:\n  rat_poly_times B (rat_poly_times B B - rat_poly_times (A ^ 3) B) =\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times B (rat_poly_times B B - rat_poly_times (A ^ 3) B) =\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "have \"... = B*(B*B - (A*A*(A*B)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times B\n     (rat_poly_times B B -\n      rat_poly_times (rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times B\n     (rat_poly_times B B -\n      rat_poly_times (rat_poly_times A A) (rat_poly_times A B))", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times A A) (rat_poly_times A B))\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times A A) (rat_poly_times A B))\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "have \"... = B*(B*B - A*A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times B\n     (rat_poly_times B B -\n      rat_poly_times (rat_poly_times A A) (rat_poly_times A B)) =\n    rat_poly_times B (rat_poly_times B B - rat_poly_times A A)", "using  inverse1"], ["proof (prove)\nusing this:\n  rat_poly_times A B = 1\n\ngoal (1 subgoal):\n 1. rat_poly_times B\n     (rat_poly_times B B -\n      rat_poly_times (rat_poly_times A A) (rat_poly_times A B)) =\n    rat_poly_times B (rat_poly_times B B - rat_poly_times A A)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times A A) (rat_poly_times A B)) =\n  rat_poly_times B (rat_poly_times B B - rat_poly_times A A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times A A) (rat_poly_times A B)) =\n  rat_poly_times B (rat_poly_times B B - rat_poly_times A A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "have \"... = B*B*B - B*(A*A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times B (rat_poly_times B B - rat_poly_times A A) =\n    rat_poly_times (rat_poly_times B B) B -\n    rat_poly_times B (rat_poly_times A A)", "by (metis minus_left_distributivity rat_poly.comm)"], ["proof (state)\nthis:\n  rat_poly_times B (rat_poly_times B B - rat_poly_times A A) =\n  rat_poly_times (rat_poly_times B B) B -\n  rat_poly_times B (rat_poly_times A A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times B (rat_poly_times B B - rat_poly_times A A) =\n  rat_poly_times (rat_poly_times B B) B -\n  rat_poly_times B (rat_poly_times A A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "have \"... = B^3 - (B*A)*A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (rat_poly_times B B) B -\n    rat_poly_times B (rat_poly_times A A) =\n    B ^ 3 - rat_poly_times (rat_poly_times B A) A", "by (metis ab_semigroup_mult_class.mult_ac(1) power3_eq_cube)"], ["proof (state)\nthis:\n  rat_poly_times (rat_poly_times B B) B -\n  rat_poly_times B (rat_poly_times A A) =\n  B ^ 3 - rat_poly_times (rat_poly_times B A) A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (rat_poly_times B B) B -\n  rat_poly_times B (rat_poly_times A A) =\n  B ^ 3 - rat_poly_times (rat_poly_times B A) A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "have \"... = B^3 - A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B ^ 3 - rat_poly_times (rat_poly_times B A) A = B ^ 3 - A", "using inverse2"], ["proof (prove)\nusing this:\n  rat_poly_times B A = 1\n\ngoal (1 subgoal):\n 1. B ^ 3 - rat_poly_times (rat_poly_times B A) A = B ^ 3 - A", "by (metis monoid_mult_class.mult.left_neutral)"], ["proof (state)\nthis:\n  B ^ 3 - rat_poly_times (rat_poly_times B A) A = B ^ 3 - A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "ultimately"], ["proof (chain)\npicking this:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times (rat_poly_times B (B - A ^ 3)) B\n  rat_poly_times (rat_poly_times B (B - A ^ 3)) B =\n  rat_poly_times B (rat_poly_times B B - rat_poly_times (A ^ 3) B)\n  rat_poly_times B (rat_poly_times B B - rat_poly_times (A ^ 3) B) =\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B)\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times A A) (rat_poly_times A B))\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times A A) (rat_poly_times A B)) =\n  rat_poly_times B (rat_poly_times B B - rat_poly_times A A)\n  rat_poly_times B (rat_poly_times B B - rat_poly_times A A) =\n  rat_poly_times (rat_poly_times B B) B -\n  rat_poly_times B (rat_poly_times A A)\n  rat_poly_times (rat_poly_times B B) B -\n  rat_poly_times B (rat_poly_times A A) =\n  B ^ 3 - rat_poly_times (rat_poly_times B A) A\n  B ^ 3 - rat_poly_times (rat_poly_times B A) A = B ^ 3 - A", "have \"?r =  B^3 - A\""], ["proof (prove)\nusing this:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times (rat_poly_times B (B - A ^ 3)) B\n  rat_poly_times (rat_poly_times B (B - A ^ 3)) B =\n  rat_poly_times B (rat_poly_times B B - rat_poly_times (A ^ 3) B)\n  rat_poly_times B (rat_poly_times B B - rat_poly_times (A ^ 3) B) =\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B)\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times A A) (rat_poly_times A B))\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times A A) (rat_poly_times A B)) =\n  rat_poly_times B (rat_poly_times B B - rat_poly_times A A)\n  rat_poly_times B (rat_poly_times B B - rat_poly_times A A) =\n  rat_poly_times (rat_poly_times B B) B -\n  rat_poly_times B (rat_poly_times A A)\n  rat_poly_times (rat_poly_times B B) B -\n  rat_poly_times B (rat_poly_times A A) =\n  B ^ 3 - rat_poly_times (rat_poly_times B A) A\n  B ^ 3 - rat_poly_times (rat_poly_times B A) A = B ^ 3 - A\n\ngoal (1 subgoal):\n 1. rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    B ^ 3 - A", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  B ^ 3 - A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "then"], ["proof (chain)\npicking this:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  B ^ 3 - A", "show ?thesis"], ["proof (prove)\nusing this:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  B ^ 3 - A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "using 4"], ["proof (prove)\nusing this:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  B ^ 3 - A\n  rat_poly_plus\n   (rat_poly_times A\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n  B ^ 3 - A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "by auto"], ["proof (state)\nthis:\n  rat_poly_plus\n   (rat_poly_times A\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma computation_swingneg:\"rat_poly_times B (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_plus\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A)))\n     (rat_poly_times A (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_plus\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A)))\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))", "using computation2"], ["proof (prove)\nusing this:\n  rat_poly_plus\n   (rat_poly_times A\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))) =\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)\n\ngoal (1 subgoal):\n 1. rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_plus\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A)\n       (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A)))\n     (rat_poly_times A\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) A))", "by auto"], ["", "lemma computation_toppos:\"rat_poly_inv (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B\"(is \"?l = ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "have \"(rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)\n                = ((A - ((B*B)*B))*A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "by auto"], ["proof (state)\nthis:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "have \"... = (A*A) - ((B*B)*B)*A\""], ["proof (prove)\nusing this:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n    rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A", "by (metis minus_left_distributivity rat_poly.comm)"], ["proof (state)\nthis:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A", "have \"... = (A*A) - (B*B)*(B*A)\""], ["proof (prove)\nusing this:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A\n\ngoal (1 subgoal):\n 1. rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A =\n    rat_poly_times A A -\n    rat_poly_times (rat_poly_times B B) (rat_poly_times B A)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A)\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "moreover"], ["proof (state)\nthis:\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A)\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "then"], ["proof (chain)\npicking this:\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A)", "have \"... = (A*A) - (B*B)\""], ["proof (prove)\nusing this:\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A)\n\ngoal (1 subgoal):\n 1. rat_poly_times A A -\n    rat_poly_times (rat_poly_times B B) (rat_poly_times B A) =\n    rat_poly_times A A - rat_poly_times B B", "using inverse2"], ["proof (prove)\nusing this:\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A)\n  rat_poly_times B A = 1\n\ngoal (1 subgoal):\n 1. rat_poly_times A A -\n    rat_poly_times (rat_poly_times B B) (rat_poly_times B A) =\n    rat_poly_times A A - rat_poly_times B B", "by auto"], ["proof (state)\nthis:\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A) =\n  rat_poly_times A A - rat_poly_times B B\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "ultimately"], ["proof (chain)\npicking this:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A)\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A) =\n  rat_poly_times A A - rat_poly_times B B", "have \"?l = rat_poly_inv ((A*A) - (B*B))\""], ["proof (prove)\nusing this:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A)\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A) =\n  rat_poly_times A A - rat_poly_times B B\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_inv (rat_poly_times A A - rat_poly_times B B)", "by auto"], ["proof (state)\nthis:\n  rat_poly_inv\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_inv (rat_poly_times A A - rat_poly_times B B)\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "then"], ["proof (chain)\npicking this:\n  rat_poly_inv\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_inv (rat_poly_times A A - rat_poly_times B B)", "have 1:\"?l = (B*B) - (A*A)\""], ["proof (prove)\nusing this:\n  rat_poly_inv\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_inv (rat_poly_times A A - rat_poly_times B B)\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times B B - rat_poly_times A A", "by auto"], ["proof (state)\nthis:\n  rat_poly_inv\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times B B - rat_poly_times A A\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "have \"?r =(B - ((A*A) *A))*B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "by auto"], ["proof (state)\nthis:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "have \"... = B*B - ((A*A)*A)*B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n    rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B", "by (metis minus_left_distributivity rat_poly.comm)"], ["proof (state)\nthis:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A) B\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A) B\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "have \"... = (B*B) - ((A*A)*(A*B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B =\n    rat_poly_times B B -\n    rat_poly_times (rat_poly_times A A) (rat_poly_times A B)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times A A) (rat_poly_times A B)\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "moreover"], ["proof (state)\nthis:\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times A A) (rat_poly_times A B)\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "have \"... = ((B::rat_poly)*B) - (A*A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times B B -\n    rat_poly_times (rat_poly_times A A) (rat_poly_times A B) =\n    rat_poly_times B B - rat_poly_times A A", "using inverse1"], ["proof (prove)\nusing this:\n  rat_poly_times A B = 1\n\ngoal (1 subgoal):\n 1. rat_poly_times B B -\n    rat_poly_times (rat_poly_times A A) (rat_poly_times A B) =\n    rat_poly_times B B - rat_poly_times A A", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times A A) (rat_poly_times A B) =\n  rat_poly_times B B - rat_poly_times A A\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "ultimately"], ["proof (chain)\npicking this:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A) B\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times A A) (rat_poly_times A B)\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times A A) (rat_poly_times A B) =\n  rat_poly_times B B - rat_poly_times A A", "have \"?r = (B*B) - (A*A)\""], ["proof (prove)\nusing this:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A) B\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times A A) (rat_poly_times A B)\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times A A) (rat_poly_times A B) =\n  rat_poly_times B B - rat_poly_times A A\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n    rat_poly_times B B - rat_poly_times A A", "by auto"], ["proof (state)\nthis:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B - rat_poly_times A A\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B - rat_poly_times A A", "show ?thesis"], ["proof (prove)\nusing this:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B - rat_poly_times A A\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "using 1"], ["proof (prove)\nusing this:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B - rat_poly_times A A\n  rat_poly_inv\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times B B - rat_poly_times A A\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "by auto"], ["proof (state)\nthis:\n  rat_poly_inv\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B\n\ngoal:\nNo subgoals!", "qed"], ["", "(*rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B) =\n    rat_poly_inv (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))*)"], ["", "lemma computation_downpos_prelim:\n\"rat_poly_inv (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A\"(is \"?l = ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "have \"(rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)\n                = ((B - ((A*A)*A))*B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n    rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "by auto"], ["proof (state)\nthis:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B", "have \"... = (B*B) - ((A*A)*A)*B\""], ["proof (prove)\nusing this:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B\n\ngoal (1 subgoal):\n 1. rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n    rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B", "by (metis minus_left_distributivity rat_poly.comm)"], ["proof (state)\nthis:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A) B\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A) B\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A) B", "have \"... = (B*B) - (A*A)*(A*B)\""], ["proof (prove)\nusing this:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A) B\n\ngoal (1 subgoal):\n 1. rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B =\n    rat_poly_times B B -\n    rat_poly_times (rat_poly_times A A) (rat_poly_times A B)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times A A) (rat_poly_times A B)\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "moreover"], ["proof (state)\nthis:\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times A A) (rat_poly_times A B)\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "then"], ["proof (chain)\npicking this:\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times A A) (rat_poly_times A B)", "have \"... = (B*B) - (A*A)\""], ["proof (prove)\nusing this:\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times A A) (rat_poly_times A B)\n\ngoal (1 subgoal):\n 1. rat_poly_times B B -\n    rat_poly_times (rat_poly_times A A) (rat_poly_times A B) =\n    rat_poly_times B B - rat_poly_times A A", "using inverse1"], ["proof (prove)\nusing this:\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times A A) (rat_poly_times A B)\n  rat_poly_times A B = 1\n\ngoal (1 subgoal):\n 1. rat_poly_times B B -\n    rat_poly_times (rat_poly_times A A) (rat_poly_times A B) =\n    rat_poly_times B B - rat_poly_times A A", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times A A) (rat_poly_times A B) =\n  rat_poly_times B B - rat_poly_times A A\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "ultimately"], ["proof (chain)\npicking this:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A) B\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times A A) (rat_poly_times A B)\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times A A) (rat_poly_times A B) =\n  rat_poly_times B B - rat_poly_times A A", "have \"?l = rat_poly_inv ((B*B) - (A*A))\""], ["proof (prove)\nusing this:\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B\n  rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A) B\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times (rat_poly_times A A) A) B =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times A A) (rat_poly_times A B)\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times A A) (rat_poly_times A B) =\n  rat_poly_times B B - rat_poly_times A A\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_inv (rat_poly_times B B - rat_poly_times A A)", "by auto"], ["proof (state)\nthis:\n  rat_poly_inv\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_inv (rat_poly_times B B - rat_poly_times A A)\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "then"], ["proof (chain)\npicking this:\n  rat_poly_inv\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_inv (rat_poly_times B B - rat_poly_times A A)", "have 1:\"?l = (A*A) - (B*B)\""], ["proof (prove)\nusing this:\n  rat_poly_inv\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_inv (rat_poly_times B B - rat_poly_times A A)\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times A A - rat_poly_times B B", "by auto"], ["proof (state)\nthis:\n  rat_poly_inv\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times A A - rat_poly_times B B\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "have \"?r =(A - ((B*B) *B))*A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "by auto"], ["proof (state)\nthis:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "have \"... = A*A - ((B*B)*B)*A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n    rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A", "by (metis minus_left_distributivity rat_poly.comm)"], ["proof (state)\nthis:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "have \"... = (A*A) - ((B*B)*(B*A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A =\n    rat_poly_times A A -\n    rat_poly_times (rat_poly_times B B) (rat_poly_times B A)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A)\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "moreover"], ["proof (state)\nthis:\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A)\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "have \"... = ((A::rat_poly)*A) - (B*B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times A A -\n    rat_poly_times (rat_poly_times B B) (rat_poly_times B A) =\n    rat_poly_times A A - rat_poly_times B B", "using inverse2"], ["proof (prove)\nusing this:\n  rat_poly_times B A = 1\n\ngoal (1 subgoal):\n 1. rat_poly_times A A -\n    rat_poly_times (rat_poly_times B B) (rat_poly_times B A) =\n    rat_poly_times A A - rat_poly_times B B", "by auto"], ["proof (state)\nthis:\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A) =\n  rat_poly_times A A - rat_poly_times B B\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "ultimately"], ["proof (chain)\npicking this:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A)\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A) =\n  rat_poly_times A A - rat_poly_times B B", "have \"?r = (A*A) - (B*B)\""], ["proof (prove)\nusing this:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A)\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A) =\n  rat_poly_times A A - rat_poly_times B B\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n    rat_poly_times A A - rat_poly_times B B", "by auto"], ["proof (state)\nthis:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A - rat_poly_times B B\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A - rat_poly_times B B", "show ?thesis"], ["proof (prove)\nusing this:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A - rat_poly_times B B\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "using 1"], ["proof (prove)\nusing this:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A - rat_poly_times B B\n  rat_poly_inv\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times A A - rat_poly_times B B\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A", "by auto"], ["proof (state)\nthis:\n  rat_poly_inv\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma computation_downpos:\"rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B) =\n    rat_poly_inv (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B) =\n    rat_poly_inv\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))", "using computation_downpos_prelim"], ["proof (prove)\nusing this:\n  rat_poly_inv\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A\n\ngoal (1 subgoal):\n 1. rat_poly_times A (A - rat_poly_times (rat_poly_times B B) B) =\n    rat_poly_inv\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))", "by (metis rat_poly.comm)"], ["", "lemma computatition_positive_flip:\"rat_poly_plus\n     (rat_poly_inv (rat_poly_times A (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))\" (is \"?l = ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "have \"(rat_poly_inv (rat_poly_times B (rat_poly_times A B)))\n                 = (rat_poly_inv (rat_poly_times B 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_inv (rat_poly_times B (rat_poly_times A B)) =\n    rat_poly_inv (rat_poly_times B 1)", "using inverse1"], ["proof (prove)\nusing this:\n  rat_poly_times A B = 1\n\ngoal (1 subgoal):\n 1. rat_poly_inv (rat_poly_times B (rat_poly_times A B)) =\n    rat_poly_inv (rat_poly_times B 1)", "by auto"], ["proof (state)\nthis:\n  rat_poly_inv (rat_poly_times B (rat_poly_times A B)) =\n  rat_poly_inv (rat_poly_times B 1)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "moreover"], ["proof (state)\nthis:\n  rat_poly_inv (rat_poly_times B (rat_poly_times A B)) =\n  rat_poly_inv (rat_poly_times B 1)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "have \"... = - B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_inv (rat_poly_times B 1) = rat_poly_inv B", "by auto"], ["proof (state)\nthis:\n  rat_poly_inv (rat_poly_times B 1) = rat_poly_inv B\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "ultimately"], ["proof (chain)\npicking this:\n  rat_poly_inv (rat_poly_times B (rat_poly_times A B)) =\n  rat_poly_inv (rat_poly_times B 1)\n  rat_poly_inv (rat_poly_times B 1) = rat_poly_inv B", "have 1:\"(rat_poly_inv (rat_poly_times B (rat_poly_times A B))) = - B\""], ["proof (prove)\nusing this:\n  rat_poly_inv (rat_poly_times B (rat_poly_times A B)) =\n  rat_poly_inv (rat_poly_times B 1)\n  rat_poly_inv (rat_poly_times B 1) = rat_poly_inv B\n\ngoal (1 subgoal):\n 1. rat_poly_inv (rat_poly_times B (rat_poly_times A B)) = rat_poly_inv B", "by auto"], ["proof (state)\nthis:\n  rat_poly_inv (rat_poly_times B (rat_poly_times A B)) = rat_poly_inv B\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "have \" (rat_poly_times A (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A))\n         = A*((A - ((B*B)*B))*A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "moreover"], ["proof (state)\nthis:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "then"], ["proof (chain)\npicking this:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)", "have \"... = A*((A*A) - ((B*B)*B*A))\""], ["proof (prove)\nusing this:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)\n\ngoal (1 subgoal):\n 1. rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times A\n     (rat_poly_times A A -\n      rat_poly_times (rat_poly_times (rat_poly_times B B) B) A)", "by (metis minus_left_distributivity rat_poly.comm)"], ["proof (state)\nthis:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "moreover"], ["proof (state)\nthis:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "then"], ["proof (chain)\npicking this:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A)", "have \"... = A*((A*A) - ((B*B)*1))\""], ["proof (prove)\nusing this:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A)\n\ngoal (1 subgoal):\n 1. rat_poly_times A\n     (rat_poly_times A A -\n      rat_poly_times (rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times A\n     (rat_poly_times A A - rat_poly_times (rat_poly_times B B) 1)", "using inverse2"], ["proof (prove)\nusing this:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A)\n  rat_poly_times B A = 1\n\ngoal (1 subgoal):\n 1. rat_poly_times A\n     (rat_poly_times A A -\n      rat_poly_times (rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times A\n     (rat_poly_times A A - rat_poly_times (rat_poly_times B B) 1)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times A A - rat_poly_times (rat_poly_times B B) 1)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "moreover"], ["proof (state)\nthis:\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times A A - rat_poly_times (rat_poly_times B B) 1)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "then"], ["proof (chain)\npicking this:\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times A A - rat_poly_times (rat_poly_times B B) 1)", "have \"... = A*((A*A) - (B*B))\""], ["proof (prove)\nusing this:\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times A A - rat_poly_times (rat_poly_times B B) 1)\n\ngoal (1 subgoal):\n 1. rat_poly_times A\n     (rat_poly_times A A - rat_poly_times (rat_poly_times B B) 1) =\n    rat_poly_times A (rat_poly_times A A - rat_poly_times B B)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times A\n   (rat_poly_times A A - rat_poly_times (rat_poly_times B B) 1) =\n  rat_poly_times A (rat_poly_times A A - rat_poly_times B B)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "moreover"], ["proof (state)\nthis:\n  rat_poly_times A\n   (rat_poly_times A A - rat_poly_times (rat_poly_times B B) 1) =\n  rat_poly_times A (rat_poly_times A A - rat_poly_times B B)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "then"], ["proof (chain)\npicking this:\n  rat_poly_times A\n   (rat_poly_times A A - rat_poly_times (rat_poly_times B B) 1) =\n  rat_poly_times A (rat_poly_times A A - rat_poly_times B B)", "have \"... = A*(A*A) - (A*(B*B))\""], ["proof (prove)\nusing this:\n  rat_poly_times A\n   (rat_poly_times A A - rat_poly_times (rat_poly_times B B) 1) =\n  rat_poly_times A (rat_poly_times A A - rat_poly_times B B)\n\ngoal (1 subgoal):\n 1. rat_poly_times A (rat_poly_times A A - rat_poly_times B B) =\n    rat_poly_times A (rat_poly_times A A) -\n    rat_poly_times A (rat_poly_times B B)", "by (metis minus_left_distributivity)"], ["proof (state)\nthis:\n  rat_poly_times A (rat_poly_times A A - rat_poly_times B B) =\n  rat_poly_times A (rat_poly_times A A) -\n  rat_poly_times A (rat_poly_times B B)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "moreover"], ["proof (state)\nthis:\n  rat_poly_times A (rat_poly_times A A - rat_poly_times B B) =\n  rat_poly_times A (rat_poly_times A A) -\n  rat_poly_times A (rat_poly_times B B)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "then"], ["proof (chain)\npicking this:\n  rat_poly_times A (rat_poly_times A A - rat_poly_times B B) =\n  rat_poly_times A (rat_poly_times A A) -\n  rat_poly_times A (rat_poly_times B B)", "have \"... = (A*(A*A)) - (1*B)\""], ["proof (prove)\nusing this:\n  rat_poly_times A (rat_poly_times A A - rat_poly_times B B) =\n  rat_poly_times A (rat_poly_times A A) -\n  rat_poly_times A (rat_poly_times B B)\n\ngoal (1 subgoal):\n 1. rat_poly_times A (rat_poly_times A A) -\n    rat_poly_times A (rat_poly_times B B) =\n    rat_poly_times A (rat_poly_times A A) - rat_poly_times 1 B", "using inverse1"], ["proof (prove)\nusing this:\n  rat_poly_times A (rat_poly_times A A - rat_poly_times B B) =\n  rat_poly_times A (rat_poly_times A A) -\n  rat_poly_times A (rat_poly_times B B)\n  rat_poly_times A B = 1\n\ngoal (1 subgoal):\n 1. rat_poly_times A (rat_poly_times A A) -\n    rat_poly_times A (rat_poly_times B B) =\n    rat_poly_times A (rat_poly_times A A) - rat_poly_times 1 B", "by auto"], ["proof (state)\nthis:\n  rat_poly_times A (rat_poly_times A A) -\n  rat_poly_times A (rat_poly_times B B) =\n  rat_poly_times A (rat_poly_times A A) - rat_poly_times 1 B\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "moreover"], ["proof (state)\nthis:\n  rat_poly_times A (rat_poly_times A A) -\n  rat_poly_times A (rat_poly_times B B) =\n  rat_poly_times A (rat_poly_times A A) - rat_poly_times 1 B\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "then"], ["proof (chain)\npicking this:\n  rat_poly_times A (rat_poly_times A A) -\n  rat_poly_times A (rat_poly_times B B) =\n  rat_poly_times A (rat_poly_times A A) - rat_poly_times 1 B", "have \"... =  (A*(A*A)) - B\""], ["proof (prove)\nusing this:\n  rat_poly_times A (rat_poly_times A A) -\n  rat_poly_times A (rat_poly_times B B) =\n  rat_poly_times A (rat_poly_times A A) - rat_poly_times 1 B\n\ngoal (1 subgoal):\n 1. rat_poly_times A (rat_poly_times A A) - rat_poly_times 1 B =\n    rat_poly_times A (rat_poly_times A A) - B", "by auto"], ["proof (state)\nthis:\n  rat_poly_times A (rat_poly_times A A) - rat_poly_times 1 B =\n  rat_poly_times A (rat_poly_times A A) - B\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "ultimately"], ["proof (chain)\npicking this:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A)\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times A A - rat_poly_times (rat_poly_times B B) 1)\n  rat_poly_times A\n   (rat_poly_times A A - rat_poly_times (rat_poly_times B B) 1) =\n  rat_poly_times A (rat_poly_times A A - rat_poly_times B B)\n  rat_poly_times A (rat_poly_times A A - rat_poly_times B B) =\n  rat_poly_times A (rat_poly_times A A) -\n  rat_poly_times A (rat_poly_times B B)\n  rat_poly_times A (rat_poly_times A A) -\n  rat_poly_times A (rat_poly_times B B) =\n  rat_poly_times A (rat_poly_times A A) - rat_poly_times 1 B\n  rat_poly_times A (rat_poly_times A A) - rat_poly_times 1 B =\n  rat_poly_times A (rat_poly_times A A) - B", "have \"(rat_poly_times A (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A))\n                     = (A*(A*A)) - B\""], ["proof (prove)\nusing this:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A)\n  rat_poly_times A\n   (rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A\n   (rat_poly_times A A - rat_poly_times (rat_poly_times B B) 1)\n  rat_poly_times A\n   (rat_poly_times A A - rat_poly_times (rat_poly_times B B) 1) =\n  rat_poly_times A (rat_poly_times A A - rat_poly_times B B)\n  rat_poly_times A (rat_poly_times A A - rat_poly_times B B) =\n  rat_poly_times A (rat_poly_times A A) -\n  rat_poly_times A (rat_poly_times B B)\n  rat_poly_times A (rat_poly_times A A) -\n  rat_poly_times A (rat_poly_times B B) =\n  rat_poly_times A (rat_poly_times A A) - rat_poly_times 1 B\n  rat_poly_times A (rat_poly_times A A) - rat_poly_times 1 B =\n  rat_poly_times A (rat_poly_times A A) - B\n\ngoal (1 subgoal):\n 1. rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    rat_poly_times A (rat_poly_times A A) - B", "by auto"], ["proof (state)\nthis:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A (rat_poly_times A A) - B\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "then"], ["proof (chain)\npicking this:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A (rat_poly_times A A) - B", "have \"rat_poly_inv (rat_poly_times A (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A))\n                  = B - (A*A*A)\""], ["proof (prove)\nusing this:\n  rat_poly_times A\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  rat_poly_times A (rat_poly_times A A) - B\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times A\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)) =\n    B - rat_poly_times (rat_poly_times A A) A", "by auto"], ["proof (state)\nthis:\n  rat_poly_inv\n   (rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)) =\n  B - rat_poly_times (rat_poly_times A A) A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "then"], ["proof (chain)\npicking this:\n  rat_poly_inv\n   (rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)) =\n  B - rat_poly_times (rat_poly_times A A) A", "have 3:\"?l = - (A*A*A)\""], ["proof (prove)\nusing this:\n  rat_poly_inv\n   (rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)) =\n  B - rat_poly_times (rat_poly_times A A) A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times (rat_poly_times A A) A)", "using 1"], ["proof (prove)\nusing this:\n  rat_poly_inv\n   (rat_poly_times A\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)) =\n  B - rat_poly_times (rat_poly_times A A) A\n  rat_poly_inv (rat_poly_times B (rat_poly_times A B)) = rat_poly_inv B\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times (rat_poly_times A A) A)", "by auto"], ["proof (state)\nthis:\n  rat_poly_plus\n   (rat_poly_inv\n     (rat_poly_times A\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n   (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n  rat_poly_inv (rat_poly_times (rat_poly_times A A) A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "moreover"], ["proof (state)\nthis:\n  rat_poly_plus\n   (rat_poly_inv\n     (rat_poly_times A\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n   (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n  rat_poly_inv (rat_poly_times (rat_poly_times A A) A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "have \"?r = - (A*A*A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_inv (rat_poly_times A (rat_poly_times A A)) =\n    rat_poly_inv (rat_poly_times (rat_poly_times A A) A)", "by auto"], ["proof (state)\nthis:\n  rat_poly_inv (rat_poly_times A (rat_poly_times A A)) =\n  rat_poly_inv (rat_poly_times (rat_poly_times A A) A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "ultimately"], ["proof (chain)\npicking this:\n  rat_poly_plus\n   (rat_poly_inv\n     (rat_poly_times A\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n   (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n  rat_poly_inv (rat_poly_times (rat_poly_times A A) A)\n  rat_poly_inv (rat_poly_times A (rat_poly_times A A)) =\n  rat_poly_inv (rat_poly_times (rat_poly_times A A) A)", "show ?thesis"], ["proof (prove)\nusing this:\n  rat_poly_plus\n   (rat_poly_inv\n     (rat_poly_times A\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n   (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n  rat_poly_inv (rat_poly_times (rat_poly_times A A) A)\n  rat_poly_inv (rat_poly_times A (rat_poly_times A A)) =\n  rat_poly_inv (rat_poly_times (rat_poly_times A A) A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times A\n         (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n     (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n    rat_poly_inv (rat_poly_times A (rat_poly_times A A))", "by auto"], ["proof (state)\nthis:\n  rat_poly_plus\n   (rat_poly_inv\n     (rat_poly_times A\n       (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)))\n   (rat_poly_inv (rat_poly_times B (rat_poly_times A B))) =\n  rat_poly_inv (rat_poly_times A (rat_poly_times A A))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma computation_negative_flip:\"rat_poly_plus\n     (rat_poly_inv (rat_poly_times B (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))\" (is \"?l = ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "have \"(rat_poly_inv (rat_poly_times A (rat_poly_times B A)))\n                 = (rat_poly_inv (rat_poly_times A 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_inv (rat_poly_times A (rat_poly_times B A)) =\n    rat_poly_inv (rat_poly_times A 1)", "using inverse2"], ["proof (prove)\nusing this:\n  rat_poly_times B A = 1\n\ngoal (1 subgoal):\n 1. rat_poly_inv (rat_poly_times A (rat_poly_times B A)) =\n    rat_poly_inv (rat_poly_times A 1)", "by auto"], ["proof (state)\nthis:\n  rat_poly_inv (rat_poly_times A (rat_poly_times B A)) =\n  rat_poly_inv (rat_poly_times A 1)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "moreover"], ["proof (state)\nthis:\n  rat_poly_inv (rat_poly_times A (rat_poly_times B A)) =\n  rat_poly_inv (rat_poly_times A 1)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "have \"... = - A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_inv (rat_poly_times A 1) = rat_poly_inv A", "by auto"], ["proof (state)\nthis:\n  rat_poly_inv (rat_poly_times A 1) = rat_poly_inv A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "ultimately"], ["proof (chain)\npicking this:\n  rat_poly_inv (rat_poly_times A (rat_poly_times B A)) =\n  rat_poly_inv (rat_poly_times A 1)\n  rat_poly_inv (rat_poly_times A 1) = rat_poly_inv A", "have 1:\"(rat_poly_inv (rat_poly_times A (rat_poly_times B A))) = - A\""], ["proof (prove)\nusing this:\n  rat_poly_inv (rat_poly_times A (rat_poly_times B A)) =\n  rat_poly_inv (rat_poly_times A 1)\n  rat_poly_inv (rat_poly_times A 1) = rat_poly_inv A\n\ngoal (1 subgoal):\n 1. rat_poly_inv (rat_poly_times A (rat_poly_times B A)) = rat_poly_inv A", "by auto"], ["proof (state)\nthis:\n  rat_poly_inv (rat_poly_times A (rat_poly_times B A)) = rat_poly_inv A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "have \" (rat_poly_times B (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B))\n         = B*((B - ((A*A)*A))*B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "moreover"], ["proof (state)\nthis:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "then"], ["proof (chain)\npicking this:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)", "have \"... = B*((B*B) - ((A*A)*A*B))\""], ["proof (prove)\nusing this:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)\n\ngoal (1 subgoal):\n 1. rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times B\n     (rat_poly_times B B -\n      rat_poly_times (rat_poly_times (rat_poly_times A A) A) B)", "by (metis minus_left_distributivity rat_poly.comm)"], ["proof (state)\nthis:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "moreover"], ["proof (state)\nthis:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "then"], ["proof (chain)\npicking this:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B)", "have \"... = B*((B*B) - ((A*A)*1))\""], ["proof (prove)\nusing this:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B)\n\ngoal (1 subgoal):\n 1. rat_poly_times B\n     (rat_poly_times B B -\n      rat_poly_times (rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times B\n     (rat_poly_times B B - rat_poly_times (rat_poly_times A A) 1)", "using inverse1"], ["proof (prove)\nusing this:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B)\n  rat_poly_times A B = 1\n\ngoal (1 subgoal):\n 1. rat_poly_times B\n     (rat_poly_times B B -\n      rat_poly_times (rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times B\n     (rat_poly_times B B - rat_poly_times (rat_poly_times A A) 1)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times B B - rat_poly_times (rat_poly_times A A) 1)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "moreover"], ["proof (state)\nthis:\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times B B - rat_poly_times (rat_poly_times A A) 1)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "then"], ["proof (chain)\npicking this:\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times B B - rat_poly_times (rat_poly_times A A) 1)", "have \"... = B*((B*B) - (A*A))\""], ["proof (prove)\nusing this:\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times B B - rat_poly_times (rat_poly_times A A) 1)\n\ngoal (1 subgoal):\n 1. rat_poly_times B\n     (rat_poly_times B B - rat_poly_times (rat_poly_times A A) 1) =\n    rat_poly_times B (rat_poly_times B B - rat_poly_times A A)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B\n   (rat_poly_times B B - rat_poly_times (rat_poly_times A A) 1) =\n  rat_poly_times B (rat_poly_times B B - rat_poly_times A A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "moreover"], ["proof (state)\nthis:\n  rat_poly_times B\n   (rat_poly_times B B - rat_poly_times (rat_poly_times A A) 1) =\n  rat_poly_times B (rat_poly_times B B - rat_poly_times A A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "then"], ["proof (chain)\npicking this:\n  rat_poly_times B\n   (rat_poly_times B B - rat_poly_times (rat_poly_times A A) 1) =\n  rat_poly_times B (rat_poly_times B B - rat_poly_times A A)", "have \"... = B*(B*B) - (B*(A*A))\""], ["proof (prove)\nusing this:\n  rat_poly_times B\n   (rat_poly_times B B - rat_poly_times (rat_poly_times A A) 1) =\n  rat_poly_times B (rat_poly_times B B - rat_poly_times A A)\n\ngoal (1 subgoal):\n 1. rat_poly_times B (rat_poly_times B B - rat_poly_times A A) =\n    rat_poly_times B (rat_poly_times B B) -\n    rat_poly_times B (rat_poly_times A A)", "by (metis minus_left_distributivity)"], ["proof (state)\nthis:\n  rat_poly_times B (rat_poly_times B B - rat_poly_times A A) =\n  rat_poly_times B (rat_poly_times B B) -\n  rat_poly_times B (rat_poly_times A A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "moreover"], ["proof (state)\nthis:\n  rat_poly_times B (rat_poly_times B B - rat_poly_times A A) =\n  rat_poly_times B (rat_poly_times B B) -\n  rat_poly_times B (rat_poly_times A A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "then"], ["proof (chain)\npicking this:\n  rat_poly_times B (rat_poly_times B B - rat_poly_times A A) =\n  rat_poly_times B (rat_poly_times B B) -\n  rat_poly_times B (rat_poly_times A A)", "have \"... = (B*(B*B)) - (1*A)\""], ["proof (prove)\nusing this:\n  rat_poly_times B (rat_poly_times B B - rat_poly_times A A) =\n  rat_poly_times B (rat_poly_times B B) -\n  rat_poly_times B (rat_poly_times A A)\n\ngoal (1 subgoal):\n 1. rat_poly_times B (rat_poly_times B B) -\n    rat_poly_times B (rat_poly_times A A) =\n    rat_poly_times B (rat_poly_times B B) - rat_poly_times 1 A", "using inverse2"], ["proof (prove)\nusing this:\n  rat_poly_times B (rat_poly_times B B - rat_poly_times A A) =\n  rat_poly_times B (rat_poly_times B B) -\n  rat_poly_times B (rat_poly_times A A)\n  rat_poly_times B A = 1\n\ngoal (1 subgoal):\n 1. rat_poly_times B (rat_poly_times B B) -\n    rat_poly_times B (rat_poly_times A A) =\n    rat_poly_times B (rat_poly_times B B) - rat_poly_times 1 A", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B (rat_poly_times B B) -\n  rat_poly_times B (rat_poly_times A A) =\n  rat_poly_times B (rat_poly_times B B) - rat_poly_times 1 A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "moreover"], ["proof (state)\nthis:\n  rat_poly_times B (rat_poly_times B B) -\n  rat_poly_times B (rat_poly_times A A) =\n  rat_poly_times B (rat_poly_times B B) - rat_poly_times 1 A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "then"], ["proof (chain)\npicking this:\n  rat_poly_times B (rat_poly_times B B) -\n  rat_poly_times B (rat_poly_times A A) =\n  rat_poly_times B (rat_poly_times B B) - rat_poly_times 1 A", "have \"... =  (B*(B*B)) - A\""], ["proof (prove)\nusing this:\n  rat_poly_times B (rat_poly_times B B) -\n  rat_poly_times B (rat_poly_times A A) =\n  rat_poly_times B (rat_poly_times B B) - rat_poly_times 1 A\n\ngoal (1 subgoal):\n 1. rat_poly_times B (rat_poly_times B B) - rat_poly_times 1 A =\n    rat_poly_times B (rat_poly_times B B) - A", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B (rat_poly_times B B) - rat_poly_times 1 A =\n  rat_poly_times B (rat_poly_times B B) - A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "ultimately"], ["proof (chain)\npicking this:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B)\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times B B - rat_poly_times (rat_poly_times A A) 1)\n  rat_poly_times B\n   (rat_poly_times B B - rat_poly_times (rat_poly_times A A) 1) =\n  rat_poly_times B (rat_poly_times B B - rat_poly_times A A)\n  rat_poly_times B (rat_poly_times B B - rat_poly_times A A) =\n  rat_poly_times B (rat_poly_times B B) -\n  rat_poly_times B (rat_poly_times A A)\n  rat_poly_times B (rat_poly_times B B) -\n  rat_poly_times B (rat_poly_times A A) =\n  rat_poly_times B (rat_poly_times B B) - rat_poly_times 1 A\n  rat_poly_times B (rat_poly_times B B) - rat_poly_times 1 A =\n  rat_poly_times B (rat_poly_times B B) - A", "have \"(rat_poly_times B (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B))\n                     = (B*(B*B)) - A\""], ["proof (prove)\nusing this:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B)\n  rat_poly_times B\n   (rat_poly_times B B -\n    rat_poly_times (rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B\n   (rat_poly_times B B - rat_poly_times (rat_poly_times A A) 1)\n  rat_poly_times B\n   (rat_poly_times B B - rat_poly_times (rat_poly_times A A) 1) =\n  rat_poly_times B (rat_poly_times B B - rat_poly_times A A)\n  rat_poly_times B (rat_poly_times B B - rat_poly_times A A) =\n  rat_poly_times B (rat_poly_times B B) -\n  rat_poly_times B (rat_poly_times A A)\n  rat_poly_times B (rat_poly_times B B) -\n  rat_poly_times B (rat_poly_times A A) =\n  rat_poly_times B (rat_poly_times B B) - rat_poly_times 1 A\n  rat_poly_times B (rat_poly_times B B) - rat_poly_times 1 A =\n  rat_poly_times B (rat_poly_times B B) - A\n\ngoal (1 subgoal):\n 1. rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n    rat_poly_times B (rat_poly_times B B) - A", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B (rat_poly_times B B) - A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "then"], ["proof (chain)\npicking this:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B (rat_poly_times B B) - A", "have \"rat_poly_inv (rat_poly_times B (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B))\n                  = A - (B*B*B)\""], ["proof (prove)\nusing this:\n  rat_poly_times B\n   (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B) =\n  rat_poly_times B (rat_poly_times B B) - A\n\ngoal (1 subgoal):\n 1. rat_poly_inv\n     (rat_poly_times B\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)) =\n    A - rat_poly_times (rat_poly_times B B) B", "by auto"], ["proof (state)\nthis:\n  rat_poly_inv\n   (rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)) =\n  A - rat_poly_times (rat_poly_times B B) B\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "then"], ["proof (chain)\npicking this:\n  rat_poly_inv\n   (rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)) =\n  A - rat_poly_times (rat_poly_times B B) B", "have 3:\"?l = - (B*B*B)\""], ["proof (prove)\nusing this:\n  rat_poly_inv\n   (rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)) =\n  A - rat_poly_times (rat_poly_times B B) B\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times (rat_poly_times B B) B)", "using 1"], ["proof (prove)\nusing this:\n  rat_poly_inv\n   (rat_poly_times B\n     (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)) =\n  A - rat_poly_times (rat_poly_times B B) B\n  rat_poly_inv (rat_poly_times A (rat_poly_times B A)) = rat_poly_inv A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times (rat_poly_times B B) B)", "by auto"], ["proof (state)\nthis:\n  rat_poly_plus\n   (rat_poly_inv\n     (rat_poly_times B\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n   (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n  rat_poly_inv (rat_poly_times (rat_poly_times B B) B)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "moreover"], ["proof (state)\nthis:\n  rat_poly_plus\n   (rat_poly_inv\n     (rat_poly_times B\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n   (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n  rat_poly_inv (rat_poly_times (rat_poly_times B B) B)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "have \"?r = - (B*B*B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_inv (rat_poly_times B (rat_poly_times B B)) =\n    rat_poly_inv (rat_poly_times (rat_poly_times B B) B)", "by auto"], ["proof (state)\nthis:\n  rat_poly_inv (rat_poly_times B (rat_poly_times B B)) =\n  rat_poly_inv (rat_poly_times (rat_poly_times B B) B)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "ultimately"], ["proof (chain)\npicking this:\n  rat_poly_plus\n   (rat_poly_inv\n     (rat_poly_times B\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n   (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n  rat_poly_inv (rat_poly_times (rat_poly_times B B) B)\n  rat_poly_inv (rat_poly_times B (rat_poly_times B B)) =\n  rat_poly_inv (rat_poly_times (rat_poly_times B B) B)", "show ?thesis"], ["proof (prove)\nusing this:\n  rat_poly_plus\n   (rat_poly_inv\n     (rat_poly_times B\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n   (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n  rat_poly_inv (rat_poly_times (rat_poly_times B B) B)\n  rat_poly_inv (rat_poly_times B (rat_poly_times B B)) =\n  rat_poly_inv (rat_poly_times (rat_poly_times B B) B)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_inv\n       (rat_poly_times B\n         (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n     (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n    rat_poly_inv (rat_poly_times B (rat_poly_times B B))", "by auto"], ["proof (state)\nthis:\n  rat_poly_plus\n   (rat_poly_inv\n     (rat_poly_times B\n       (rat_poly_times (B - rat_poly_times (rat_poly_times A A) A) B)))\n   (rat_poly_inv (rat_poly_times A (rat_poly_times B A))) =\n  rat_poly_inv (rat_poly_times B (rat_poly_times B B))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma computation_pull_pos_neg:\n\"rat_poly_plus (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    0", "have \" rat_poly_times (rat_poly_times A A) A\n                       = ((A*A)*A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (rat_poly_times A A) A =\n    rat_poly_times (rat_poly_times A A) A", "by auto"], ["proof (state)\nthis:\n  rat_poly_times (rat_poly_times A A) A =\n  rat_poly_times (rat_poly_times A A) A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    0", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (rat_poly_times A A) A =\n  rat_poly_times (rat_poly_times A A) A", "have \"rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A)\n                     = B*B - B*((A*A)*A)\""], ["proof (prove)\nusing this:\n  rat_poly_times (rat_poly_times A A) A =\n  rat_poly_times (rat_poly_times A A) A\n\ngoal (1 subgoal):\n 1. rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A) =\n    rat_poly_times B B -\n    rat_poly_times B (rat_poly_times (rat_poly_times A A) A)", "using minus_left_distributivity"], ["proof (prove)\nusing this:\n  rat_poly_times (rat_poly_times A A) A =\n  rat_poly_times (rat_poly_times A A) A\n  rat_poly_times ?p (?q - ?r) = rat_poly_times ?p ?q - rat_poly_times ?p ?r\n\ngoal (1 subgoal):\n 1. rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A) =\n    rat_poly_times B B -\n    rat_poly_times B (rat_poly_times (rat_poly_times A A) A)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A) =\n  rat_poly_times B B -\n  rat_poly_times B (rat_poly_times (rat_poly_times A A) A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    0", "moreover"], ["proof (state)\nthis:\n  rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A) =\n  rat_poly_times B B -\n  rat_poly_times B (rat_poly_times (rat_poly_times A A) A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    0", "have \"... = B*B - (B*(A*(A*A)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times B B -\n    rat_poly_times B (rat_poly_times (rat_poly_times A A) A) =\n    rat_poly_times B B -\n    rat_poly_times B (rat_poly_times A (rat_poly_times A A))", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B B -\n  rat_poly_times B (rat_poly_times (rat_poly_times A A) A) =\n  rat_poly_times B B -\n  rat_poly_times B (rat_poly_times A (rat_poly_times A A))\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    0", "moreover"], ["proof (state)\nthis:\n  rat_poly_times B B -\n  rat_poly_times B (rat_poly_times (rat_poly_times A A) A) =\n  rat_poly_times B B -\n  rat_poly_times B (rat_poly_times A (rat_poly_times A A))\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    0", "have \"... = B*B - ((B*A)*(A*A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times B B -\n    rat_poly_times B (rat_poly_times A (rat_poly_times A A)) =\n    rat_poly_times B B -\n    rat_poly_times (rat_poly_times B A) (rat_poly_times A A)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B B -\n  rat_poly_times B (rat_poly_times A (rat_poly_times A A)) =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times B A) (rat_poly_times A A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    0", "moreover"], ["proof (state)\nthis:\n  rat_poly_times B B -\n  rat_poly_times B (rat_poly_times A (rat_poly_times A A)) =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times B A) (rat_poly_times A A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    0", "have \"... = B*B - A*A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times B B -\n    rat_poly_times (rat_poly_times B A) (rat_poly_times A A) =\n    rat_poly_times B B - rat_poly_times A A", "using inverse2"], ["proof (prove)\nusing this:\n  rat_poly_times B A = 1\n\ngoal (1 subgoal):\n 1. rat_poly_times B B -\n    rat_poly_times (rat_poly_times B A) (rat_poly_times A A) =\n    rat_poly_times B B - rat_poly_times A A", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times B A) (rat_poly_times A A) =\n  rat_poly_times B B - rat_poly_times A A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    0", "ultimately"], ["proof (chain)\npicking this:\n  rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A) =\n  rat_poly_times B B -\n  rat_poly_times B (rat_poly_times (rat_poly_times A A) A)\n  rat_poly_times B B -\n  rat_poly_times B (rat_poly_times (rat_poly_times A A) A) =\n  rat_poly_times B B -\n  rat_poly_times B (rat_poly_times A (rat_poly_times A A))\n  rat_poly_times B B -\n  rat_poly_times B (rat_poly_times A (rat_poly_times A A)) =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times B A) (rat_poly_times A A)\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times B A) (rat_poly_times A A) =\n  rat_poly_times B B - rat_poly_times A A", "have 1:\"rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A)\n                               =  B*B - A*A\""], ["proof (prove)\nusing this:\n  rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A) =\n  rat_poly_times B B -\n  rat_poly_times B (rat_poly_times (rat_poly_times A A) A)\n  rat_poly_times B B -\n  rat_poly_times B (rat_poly_times (rat_poly_times A A) A) =\n  rat_poly_times B B -\n  rat_poly_times B (rat_poly_times A (rat_poly_times A A))\n  rat_poly_times B B -\n  rat_poly_times B (rat_poly_times A (rat_poly_times A A)) =\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times B A) (rat_poly_times A A)\n  rat_poly_times B B -\n  rat_poly_times (rat_poly_times B A) (rat_poly_times A A) =\n  rat_poly_times B B - rat_poly_times A A\n\ngoal (1 subgoal):\n 1. rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A) =\n    rat_poly_times B B - rat_poly_times A A", "by auto"], ["proof (state)\nthis:\n  rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A) =\n  rat_poly_times B B - rat_poly_times A A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    0", "have \"rat_poly_times (rat_poly_times B B) B = (B*B)*B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (rat_poly_times B B) B =\n    rat_poly_times (rat_poly_times B B) B", "by auto"], ["proof (state)\nthis:\n  rat_poly_times (rat_poly_times B B) B =\n  rat_poly_times (rat_poly_times B B) B\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    0", "then"], ["proof (chain)\npicking this:\n  rat_poly_times (rat_poly_times B B) B =\n  rat_poly_times (rat_poly_times B B) B", "have \"(rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)\n                  = (A*A) - ((B*B)*B)*A\""], ["proof (prove)\nusing this:\n  rat_poly_times (rat_poly_times B B) B =\n  rat_poly_times (rat_poly_times B B) B\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n    rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A", "using minus_right_distributivity"], ["proof (prove)\nusing this:\n  rat_poly_times (rat_poly_times B B) B =\n  rat_poly_times (rat_poly_times B B) B\n  rat_poly_times (?p - ?q) ?r = rat_poly_times ?p ?r - rat_poly_times ?q ?r\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n    rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A", "by auto"], ["proof (state)\nthis:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    0", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    0", "have \"... = (A*A) - ((B*B)*(B*A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times A A -\n    rat_poly_times (rat_poly_times (rat_poly_times B B) B) A =\n    rat_poly_times A A -\n    rat_poly_times (rat_poly_times B B) (rat_poly_times B A)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    0", "moreover"], ["proof (state)\nthis:\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A)\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    0", "have \"... = (A*A) - (B*B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times A A -\n    rat_poly_times (rat_poly_times B B) (rat_poly_times B A) =\n    rat_poly_times A A - rat_poly_times B B", "using inverse2"], ["proof (prove)\nusing this:\n  rat_poly_times B A = 1\n\ngoal (1 subgoal):\n 1. rat_poly_times A A -\n    rat_poly_times (rat_poly_times B B) (rat_poly_times B A) =\n    rat_poly_times A A - rat_poly_times B B", "by auto"], ["proof (state)\nthis:\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A) =\n  rat_poly_times A A - rat_poly_times B B\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    0", "ultimately"], ["proof (chain)\npicking this:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A)\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A) =\n  rat_poly_times A A - rat_poly_times B B", "have 2:\"(rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A)\n                  = (A*A) - (B*B)\""], ["proof (prove)\nusing this:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A)\n  rat_poly_times A A -\n  rat_poly_times (rat_poly_times B B) (rat_poly_times B A) =\n  rat_poly_times A A - rat_poly_times B B\n\ngoal (1 subgoal):\n 1. rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n    rat_poly_times A A - rat_poly_times B B", "by auto"], ["proof (state)\nthis:\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A - rat_poly_times B B\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    0", "have \"B*B - A*A + (A*A) - (B*B) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B * B - A * A + A * A - B * B = 0", "by auto"], ["proof (state)\nthis:\n  B * B - A * A + A * A - B * B = 0\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    0", "with 1 2"], ["proof (chain)\npicking this:\n  rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A) =\n  rat_poly_times B B - rat_poly_times A A\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A - rat_poly_times B B\n  B * B - A * A + A * A - B * B = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A) =\n  rat_poly_times B B - rat_poly_times A A\n  rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A =\n  rat_poly_times A A - rat_poly_times B B\n  B * B - A * A + A * A - B * B = 0\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\n     (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n    0", "by auto"], ["proof (state)\nthis:\n  rat_poly_plus\n   (rat_poly_times B (B - rat_poly_times (rat_poly_times A A) A))\n   (rat_poly_times (A - rat_poly_times (rat_poly_times B B) B) A) =\n  0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma aux1:\"(A - rat_poly_times (rat_poly_times B B) B)\n         = A - (B^3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A - rat_poly_times (rat_poly_times B B) B = A - B ^ 3", "using power3_eq_cube"], ["proof (prove)\nusing this:\n  ?a ^ 3 = ?a * ?a * ?a\n\ngoal (1 subgoal):\n 1. A - rat_poly_times (rat_poly_times B B) B = A - B ^ 3", "by (metis)"], ["", "lemma square_subtract:\"(((p::rat_poly) - (q::rat_poly))^2)\n         = (p^2) - (2*p*q) + (q^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p - q)\\<^sup>2 =\n    rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (p - q)\\<^sup>2 =\n    rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)", "have 1:\"(((p::rat_poly) - (q::rat_poly))^2)\n             = (p- q)*(p - q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p - q)\\<^sup>2 = rat_poly_times (p - q) (p - q)", "by (metis power2_eq_square)"], ["proof (state)\nthis:\n  (p - q)\\<^sup>2 = rat_poly_times (p - q) (p - q)\n\ngoal (1 subgoal):\n 1. (p - q)\\<^sup>2 =\n    rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)", "then"], ["proof (chain)\npicking this:\n  (p - q)\\<^sup>2 = rat_poly_times (p - q) (p - q)", "have \"(p - q)*(p - q) = (p - q)*p - (p - q)*q\""], ["proof (prove)\nusing this:\n  (p - q)\\<^sup>2 = rat_poly_times (p - q) (p - q)\n\ngoal (1 subgoal):\n 1. rat_poly_times (p - q) (p - q) =\n    rat_poly_times (p - q) p - rat_poly_times (p - q) q", "by (metis minus_right_distributivity rat_poly.comm)"], ["proof (state)\nthis:\n  rat_poly_times (p - q) (p - q) =\n  rat_poly_times (p - q) p - rat_poly_times (p - q) q\n\ngoal (1 subgoal):\n 1. (p - q)\\<^sup>2 =\n    rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (p - q) (p - q) =\n  rat_poly_times (p - q) p - rat_poly_times (p - q) q\n\ngoal (1 subgoal):\n 1. (p - q)\\<^sup>2 =\n    rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)", "have \"(p - q)*p = p*p - q*p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (p - q) p = rat_poly_times p p - rat_poly_times q p", "by (metis minus_left_distributivity rat_poly.comm)"], ["proof (state)\nthis:\n  rat_poly_times (p - q) p = rat_poly_times p p - rat_poly_times q p\n\ngoal (1 subgoal):\n 1. (p - q)\\<^sup>2 =\n    rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (p - q) p = rat_poly_times p p - rat_poly_times q p\n\ngoal (1 subgoal):\n 1. (p - q)\\<^sup>2 =\n    rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)", "have \"(p - q)*q = p*q - q*q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (p - q) q = rat_poly_times p q - rat_poly_times q q", "by (metis minus_left_distributivity rat_poly.comm)"], ["proof (state)\nthis:\n  rat_poly_times (p - q) q = rat_poly_times p q - rat_poly_times q q\n\ngoal (1 subgoal):\n 1. (p - q)\\<^sup>2 =\n    rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)", "ultimately"], ["proof (chain)\npicking this:\n  rat_poly_times (p - q) (p - q) =\n  rat_poly_times (p - q) p - rat_poly_times (p - q) q\n  rat_poly_times (p - q) p = rat_poly_times p p - rat_poly_times q p\n  rat_poly_times (p - q) q = rat_poly_times p q - rat_poly_times q q", "have \"(p - q)*(p - q) = p*p - q*p - (p*q - q*q)\""], ["proof (prove)\nusing this:\n  rat_poly_times (p - q) (p - q) =\n  rat_poly_times (p - q) p - rat_poly_times (p - q) q\n  rat_poly_times (p - q) p = rat_poly_times p p - rat_poly_times q p\n  rat_poly_times (p - q) q = rat_poly_times p q - rat_poly_times q q\n\ngoal (1 subgoal):\n 1. rat_poly_times (p - q) (p - q) =\n    rat_poly_times p p - rat_poly_times q p -\n    (rat_poly_times p q - rat_poly_times q q)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times (p - q) (p - q) =\n  rat_poly_times p p - rat_poly_times q p -\n  (rat_poly_times p q - rat_poly_times q q)\n\ngoal (1 subgoal):\n 1. (p - q)\\<^sup>2 =\n    rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (p - q) (p - q) =\n  rat_poly_times p p - rat_poly_times q p -\n  (rat_poly_times p q - rat_poly_times q q)\n\ngoal (1 subgoal):\n 1. (p - q)\\<^sup>2 =\n    rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)", "have \"... = (p*p) - q*p - p*q + q*q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times p p - rat_poly_times q p -\n    (rat_poly_times p q - rat_poly_times q q) =\n    rat_poly_plus\n     (rat_poly_times p p - rat_poly_times q p - rat_poly_times p q)\n     (rat_poly_times q q)", "by auto"], ["proof (state)\nthis:\n  rat_poly_times p p - rat_poly_times q p -\n  (rat_poly_times p q - rat_poly_times q q) =\n  rat_poly_plus\n   (rat_poly_times p p - rat_poly_times q p - rat_poly_times p q)\n   (rat_poly_times q q)\n\ngoal (1 subgoal):\n 1. (p - q)\\<^sup>2 =\n    rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)", "moreover"], ["proof (state)\nthis:\n  rat_poly_times p p - rat_poly_times q p -\n  (rat_poly_times p q - rat_poly_times q q) =\n  rat_poly_plus\n   (rat_poly_times p p - rat_poly_times q p - rat_poly_times p q)\n   (rat_poly_times q q)\n\ngoal (1 subgoal):\n 1. (p - q)\\<^sup>2 =\n    rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)", "have \"... = (p^2) -p*q - p*q + (q^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times p p - rat_poly_times q p - rat_poly_times p q)\n     (rat_poly_times q q) =\n    rat_poly_plus (p\\<^sup>2 - rat_poly_times p q - rat_poly_times p q)\n     (q\\<^sup>2)", "using power2_eq_square"], ["proof (prove)\nusing this:\n  ?a\\<^sup>2 = ?a * ?a\n\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_times p p - rat_poly_times q p - rat_poly_times p q)\n     (rat_poly_times q q) =\n    rat_poly_plus (p\\<^sup>2 - rat_poly_times p q - rat_poly_times p q)\n     (q\\<^sup>2)", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  rat_poly_plus\n   (rat_poly_times p p - rat_poly_times q p - rat_poly_times p q)\n   (rat_poly_times q q) =\n  rat_poly_plus (p\\<^sup>2 - rat_poly_times p q - rat_poly_times p q)\n   (q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (p - q)\\<^sup>2 =\n    rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)", "ultimately"], ["proof (chain)\npicking this:\n  rat_poly_times (p - q) (p - q) =\n  rat_poly_times p p - rat_poly_times q p -\n  (rat_poly_times p q - rat_poly_times q q)\n  rat_poly_times p p - rat_poly_times q p -\n  (rat_poly_times p q - rat_poly_times q q) =\n  rat_poly_plus\n   (rat_poly_times p p - rat_poly_times q p - rat_poly_times p q)\n   (rat_poly_times q q)\n  rat_poly_plus\n   (rat_poly_times p p - rat_poly_times q p - rat_poly_times p q)\n   (rat_poly_times q q) =\n  rat_poly_plus (p\\<^sup>2 - rat_poly_times p q - rat_poly_times p q)\n   (q\\<^sup>2)", "show ?thesis"], ["proof (prove)\nusing this:\n  rat_poly_times (p - q) (p - q) =\n  rat_poly_times p p - rat_poly_times q p -\n  (rat_poly_times p q - rat_poly_times q q)\n  rat_poly_times p p - rat_poly_times q p -\n  (rat_poly_times p q - rat_poly_times q q) =\n  rat_poly_plus\n   (rat_poly_times p p - rat_poly_times q p - rat_poly_times p q)\n   (rat_poly_times q q)\n  rat_poly_plus\n   (rat_poly_times p p - rat_poly_times q p - rat_poly_times p q)\n   (rat_poly_times q q) =\n  rat_poly_plus (p\\<^sup>2 - rat_poly_times p q - rat_poly_times p q)\n   (q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (p - q)\\<^sup>2 =\n    rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)", "using 1"], ["proof (prove)\nusing this:\n  rat_poly_times (p - q) (p - q) =\n  rat_poly_times p p - rat_poly_times q p -\n  (rat_poly_times p q - rat_poly_times q q)\n  rat_poly_times p p - rat_poly_times q p -\n  (rat_poly_times p q - rat_poly_times q q) =\n  rat_poly_plus\n   (rat_poly_times p p - rat_poly_times q p - rat_poly_times p q)\n   (rat_poly_times q q)\n  rat_poly_plus\n   (rat_poly_times p p - rat_poly_times q p - rat_poly_times p q)\n   (rat_poly_times q q) =\n  rat_poly_plus (p\\<^sup>2 - rat_poly_times p q - rat_poly_times p q)\n   (q\\<^sup>2)\n  (p - q)\\<^sup>2 = rat_poly_times (p - q) (p - q)\n\ngoal (1 subgoal):\n 1. (p - q)\\<^sup>2 =\n    rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)", "by auto"], ["proof (state)\nthis:\n  (p - q)\\<^sup>2 =\n  rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n   (q\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cube_minus:\"\\<forall>p q.((((p::rat_poly) - (q::rat_poly))^3) \n                = (p^3) - 3*(p^2)*(q) + 3*(p)*(q^2) - (q^3))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "apply(rule allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<forall>q.\n          (p - q) ^ 3 =\n          rat_poly_plus\n           (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n           (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n          q ^ 3", "apply(rule allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "fix p q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "have 1:\"(((p::rat_poly) - (q::rat_poly))^3) = (p - q)*(p-q)^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p - q) ^ 3 = rat_poly_times (p - q) ((p - q)\\<^sup>2)", "by (metis One_nat_def Suc_1 numeral_3_eq_3 power_Suc)"], ["proof (state)\nthis:\n  (p - q) ^ 3 = rat_poly_times (p - q) ((p - q)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "then"], ["proof (chain)\npicking this:\n  (p - q) ^ 3 = rat_poly_times (p - q) ((p - q)\\<^sup>2)", "have \"(p-q)^2 = (p^2) - (2*p*q) + (q^2)\""], ["proof (prove)\nusing this:\n  (p - q) ^ 3 = rat_poly_times (p - q) ((p - q)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (p - q)\\<^sup>2 =\n    rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)", "using square_subtract"], ["proof (prove)\nusing this:\n  (p - q) ^ 3 = rat_poly_times (p - q) ((p - q)\\<^sup>2)\n  (?p - ?q)\\<^sup>2 =\n  rat_poly_plus (?p\\<^sup>2 - rat_poly_times (rat_poly_times 2 ?p) ?q)\n   (?q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (p - q)\\<^sup>2 =\n    rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)", "by auto"], ["proof (state)\nthis:\n  (p - q)\\<^sup>2 =\n  rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n   (q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "then"], ["proof (chain)\npicking this:\n  (p - q)\\<^sup>2 =\n  rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n   (q\\<^sup>2)", "have 2:\"(p - q)*(p-q)^2 = (p - q)*((p^2) - (2*p*q) + (q^2))\""], ["proof (prove)\nusing this:\n  (p - q)\\<^sup>2 =\n  rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n   (q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. rat_poly_times (p - q) ((p - q)\\<^sup>2) =\n    rat_poly_times (p - q)\n     (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n       (q\\<^sup>2))", "by auto"], ["proof (state)\nthis:\n  rat_poly_times (p - q) ((p - q)\\<^sup>2) =\n  rat_poly_times (p - q)\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (p - q) ((p - q)\\<^sup>2) =\n  rat_poly_times (p - q)\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "have 3:\"(p - q)*((p^2) - (2*p*q) + (q^2))\n                   = p*((p^2) - (2*p*q) + (q^2)) \n               - (q*((p^2) - (2*p*q) + (q^2)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (p - q)\n     (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n       (q\\<^sup>2)) =\n    rat_poly_times p\n     (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n       (q\\<^sup>2)) -\n    rat_poly_times q\n     (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n       (q\\<^sup>2))", "by (metis minus_right_distributivity)"], ["proof (state)\nthis:\n  rat_poly_times (p - q)\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) =\n  rat_poly_times p\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) -\n  rat_poly_times q\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "moreover"], ["proof (state)\nthis:\n  rat_poly_times (p - q)\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) =\n  rat_poly_times p\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) -\n  rat_poly_times q\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "have \"p*((p^2) - (2*p*q) + (q^2)) \n                   = p*(p^2) - p*(2*p*q) + (p*(q^2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times p\n     (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n       (q\\<^sup>2)) =\n    rat_poly_plus\n     (rat_poly_times p (p\\<^sup>2) -\n      rat_poly_times p (rat_poly_times (rat_poly_times 2 p) q))\n     (rat_poly_times p (q\\<^sup>2))", "using minus_left_distributivity"], ["proof (prove)\nusing this:\n  rat_poly_times ?p (?q - ?r) = rat_poly_times ?p ?q - rat_poly_times ?p ?r\n\ngoal (1 subgoal):\n 1. rat_poly_times p\n     (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n       (q\\<^sup>2)) =\n    rat_poly_plus\n     (rat_poly_times p (p\\<^sup>2) -\n      rat_poly_times p (rat_poly_times (rat_poly_times 2 p) q))\n     (rat_poly_times p (q\\<^sup>2))", "by (simp add: distrib_left)"], ["proof (state)\nthis:\n  rat_poly_times p\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) =\n  rat_poly_plus\n   (rat_poly_times p (p\\<^sup>2) -\n    rat_poly_times p (rat_poly_times (rat_poly_times 2 p) q))\n   (rat_poly_times p (q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "moreover"], ["proof (state)\nthis:\n  rat_poly_times p\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) =\n  rat_poly_plus\n   (rat_poly_times p (p\\<^sup>2) -\n    rat_poly_times p (rat_poly_times (rat_poly_times 2 p) q))\n   (rat_poly_times p (q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "have \"p*(p^2) = p^3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times p (p\\<^sup>2) = p ^ 3", "by (metis One_nat_def Suc_1 numeral_3_eq_3 power_Suc)"], ["proof (state)\nthis:\n  rat_poly_times p (p\\<^sup>2) = p ^ 3\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "moreover"], ["proof (state)\nthis:\n  rat_poly_times p (p\\<^sup>2) = p ^ 3\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "have \"p*(2*p*q) = 2*(p^2)*q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times p (rat_poly_times (rat_poly_times 2 p) q) =\n    rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q", "by (metis (no_types, lifting) distrib_left mult_2 power2_eq_square \n               semigroup_mult_class.mult.assoc)"], ["proof (state)\nthis:\n  rat_poly_times p (rat_poly_times (rat_poly_times 2 p) q) =\n  rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "ultimately"], ["proof (chain)\npicking this:\n  rat_poly_times (p - q) ((p - q)\\<^sup>2) =\n  rat_poly_times (p - q)\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2))\n  rat_poly_times (p - q)\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) =\n  rat_poly_times p\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) -\n  rat_poly_times q\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2))\n  rat_poly_times p\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) =\n  rat_poly_plus\n   (rat_poly_times p (p\\<^sup>2) -\n    rat_poly_times p (rat_poly_times (rat_poly_times 2 p) q))\n   (rat_poly_times p (q\\<^sup>2))\n  rat_poly_times p (p\\<^sup>2) = p ^ 3\n  rat_poly_times p (rat_poly_times (rat_poly_times 2 p) q) =\n  rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q", "have 4:\"p*((p^2) - (2*p*q) + (q^2)) \n                   = (p^3) - (2*(p^2)*q) + (p*(q^2))\""], ["proof (prove)\nusing this:\n  rat_poly_times (p - q) ((p - q)\\<^sup>2) =\n  rat_poly_times (p - q)\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2))\n  rat_poly_times (p - q)\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) =\n  rat_poly_times p\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) -\n  rat_poly_times q\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2))\n  rat_poly_times p\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) =\n  rat_poly_plus\n   (rat_poly_times p (p\\<^sup>2) -\n    rat_poly_times p (rat_poly_times (rat_poly_times 2 p) q))\n   (rat_poly_times p (q\\<^sup>2))\n  rat_poly_times p (p\\<^sup>2) = p ^ 3\n  rat_poly_times p (rat_poly_times (rat_poly_times 2 p) q) =\n  rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q\n\ngoal (1 subgoal):\n 1. rat_poly_times p\n     (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n       (q\\<^sup>2)) =\n    rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q)\n     (rat_poly_times p (q\\<^sup>2))", "by auto"], ["proof (state)\nthis:\n  rat_poly_times p\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) =\n  rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q)\n   (rat_poly_times p (q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "have \"q*((p^2) - (2*p*q) + (q^2)) \n                   = q*(p^2) - q*(2*p*q) + (q*(q^2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times q\n     (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n       (q\\<^sup>2)) =\n    rat_poly_plus\n     (rat_poly_times q (p\\<^sup>2) -\n      rat_poly_times q (rat_poly_times (rat_poly_times 2 p) q))\n     (rat_poly_times q (q\\<^sup>2))", "by (simp add: distrib_left minus_left_distributivity)"], ["proof (state)\nthis:\n  rat_poly_times q\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) =\n  rat_poly_plus\n   (rat_poly_times q (p\\<^sup>2) -\n    rat_poly_times q (rat_poly_times (rat_poly_times 2 p) q))\n   (rat_poly_times q (q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "moreover"], ["proof (state)\nthis:\n  rat_poly_times q\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) =\n  rat_poly_plus\n   (rat_poly_times q (p\\<^sup>2) -\n    rat_poly_times q (rat_poly_times (rat_poly_times 2 p) q))\n   (rat_poly_times q (q\\<^sup>2))\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "have \"q*(p^2) = (p^2)*q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times q (p\\<^sup>2) = rat_poly_times (p\\<^sup>2) q", "by simp"], ["proof (state)\nthis:\n  rat_poly_times q (p\\<^sup>2) = rat_poly_times (p\\<^sup>2) q\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "moreover"], ["proof (state)\nthis:\n  rat_poly_times q (p\\<^sup>2) = rat_poly_times (p\\<^sup>2) q\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "have \"q*(2*p*q) = 2*p*(q^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times q (rat_poly_times (rat_poly_times 2 p) q) =\n    rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2)", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  rat_poly_times q (rat_poly_times (rat_poly_times 2 p) q) =\n  rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "ultimately"], ["proof (chain)\npicking this:\n  rat_poly_times q\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) =\n  rat_poly_plus\n   (rat_poly_times q (p\\<^sup>2) -\n    rat_poly_times q (rat_poly_times (rat_poly_times 2 p) q))\n   (rat_poly_times q (q\\<^sup>2))\n  rat_poly_times q (p\\<^sup>2) = rat_poly_times (p\\<^sup>2) q\n  rat_poly_times q (rat_poly_times (rat_poly_times 2 p) q) =\n  rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2)", "have 5:\"q*((p^2) - (2*p*q) + (q^2)) \n                   = (p^2)*q - 2*p*(q^2) + (q^3)\""], ["proof (prove)\nusing this:\n  rat_poly_times q\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) =\n  rat_poly_plus\n   (rat_poly_times q (p\\<^sup>2) -\n    rat_poly_times q (rat_poly_times (rat_poly_times 2 p) q))\n   (rat_poly_times q (q\\<^sup>2))\n  rat_poly_times q (p\\<^sup>2) = rat_poly_times (p\\<^sup>2) q\n  rat_poly_times q (rat_poly_times (rat_poly_times 2 p) q) =\n  rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2)\n\ngoal (1 subgoal):\n 1. rat_poly_times q\n     (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n       (q\\<^sup>2)) =\n    rat_poly_plus\n     (rat_poly_times (p\\<^sup>2) q -\n      rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2))\n     (q ^ 3)", "by (metis One_nat_def Suc_1 numeral_3_eq_3 power_Suc)"], ["proof (state)\nthis:\n  rat_poly_times q\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) =\n  rat_poly_plus\n   (rat_poly_times (p\\<^sup>2) q -\n    rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2))\n   (q ^ 3)\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "with 1 2 3 4"], ["proof (chain)\npicking this:\n  (p - q) ^ 3 = rat_poly_times (p - q) ((p - q)\\<^sup>2)\n  rat_poly_times (p - q) ((p - q)\\<^sup>2) =\n  rat_poly_times (p - q)\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2))\n  rat_poly_times (p - q)\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) =\n  rat_poly_times p\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) -\n  rat_poly_times q\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2))\n  rat_poly_times p\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) =\n  rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q)\n   (rat_poly_times p (q\\<^sup>2))\n  rat_poly_times q\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) =\n  rat_poly_plus\n   (rat_poly_times (p\\<^sup>2) q -\n    rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2))\n   (q ^ 3)", "have \"(p - q)^3\n                      = (p^3) - (2*(p^2)*q) + (p*(q^2)) \n                          - ((p^2)*q - 2*p*(q^2) + (q^3))\""], ["proof (prove)\nusing this:\n  (p - q) ^ 3 = rat_poly_times (p - q) ((p - q)\\<^sup>2)\n  rat_poly_times (p - q) ((p - q)\\<^sup>2) =\n  rat_poly_times (p - q)\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2))\n  rat_poly_times (p - q)\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) =\n  rat_poly_times p\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) -\n  rat_poly_times q\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2))\n  rat_poly_times p\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) =\n  rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q)\n   (rat_poly_times p (q\\<^sup>2))\n  rat_poly_times q\n   (rat_poly_plus (p\\<^sup>2 - rat_poly_times (rat_poly_times 2 p) q)\n     (q\\<^sup>2)) =\n  rat_poly_plus\n   (rat_poly_times (p\\<^sup>2) q -\n    rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2))\n   (q ^ 3)\n\ngoal (1 subgoal):\n 1. (p - q) ^ 3 =\n    rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q)\n     (rat_poly_times p (q\\<^sup>2)) -\n    rat_poly_plus\n     (rat_poly_times (p\\<^sup>2) q -\n      rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2))\n     (q ^ 3)", "by auto"], ["proof (state)\nthis:\n  (p - q) ^ 3 =\n  rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q)\n   (rat_poly_times p (q\\<^sup>2)) -\n  rat_poly_plus\n   (rat_poly_times (p\\<^sup>2) q -\n    rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2))\n   (q ^ 3)\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "moreover"], ["proof (state)\nthis:\n  (p - q) ^ 3 =\n  rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q)\n   (rat_poly_times p (q\\<^sup>2)) -\n  rat_poly_plus\n   (rat_poly_times (p\\<^sup>2) q -\n    rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2))\n   (q ^ 3)\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "have \"... = (p^3) - (2*(p^2)*q) + (p*(q^2)) \n                     - (p^2)*q + 2*p*(q^2) - (q^3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q)\n     (rat_poly_times p (q\\<^sup>2)) -\n    rat_poly_plus\n     (rat_poly_times (p\\<^sup>2) q -\n      rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2))\n     (q ^ 3) =\n    rat_poly_plus\n     (rat_poly_plus\n       (p ^ 3 - rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q)\n       (rat_poly_times p (q\\<^sup>2)) -\n      rat_poly_times (p\\<^sup>2) q)\n     (rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2)) -\n    q ^ 3", "by auto"], ["proof (state)\nthis:\n  rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q)\n   (rat_poly_times p (q\\<^sup>2)) -\n  rat_poly_plus\n   (rat_poly_times (p\\<^sup>2) q -\n    rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2))\n   (q ^ 3) =\n  rat_poly_plus\n   (rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q)\n     (rat_poly_times p (q\\<^sup>2)) -\n    rat_poly_times (p\\<^sup>2) q)\n   (rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2)) -\n  q ^ 3\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "moreover"], ["proof (state)\nthis:\n  rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q)\n   (rat_poly_times p (q\\<^sup>2)) -\n  rat_poly_plus\n   (rat_poly_times (p\\<^sup>2) q -\n    rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2))\n   (q ^ 3) =\n  rat_poly_plus\n   (rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q)\n     (rat_poly_times p (q\\<^sup>2)) -\n    rat_poly_times (p\\<^sup>2) q)\n   (rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2)) -\n  q ^ 3\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "have \"... = (p^3) - 3*(p^2)*(q) + 3*(p)*(q^2) - (q^3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_plus\n     (rat_poly_plus\n       (p ^ 3 - rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q)\n       (rat_poly_times p (q\\<^sup>2)) -\n      rat_poly_times (p\\<^sup>2) q)\n     (rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2)) -\n    q ^ 3 =\n    rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n     (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n    q ^ 3", "by auto"], ["proof (state)\nthis:\n  rat_poly_plus\n   (rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q)\n     (rat_poly_times p (q\\<^sup>2)) -\n    rat_poly_times (p\\<^sup>2) q)\n   (rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2)) -\n  q ^ 3 =\n  rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n   (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n  q ^ 3\n\ngoal (1 subgoal):\n 1. \\<And>p q.\n       (p - q) ^ 3 =\n       rat_poly_plus\n        (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n        (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n       q ^ 3", "ultimately"], ["proof (chain)\npicking this:\n  (p - q) ^ 3 =\n  rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q)\n   (rat_poly_times p (q\\<^sup>2)) -\n  rat_poly_plus\n   (rat_poly_times (p\\<^sup>2) q -\n    rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2))\n   (q ^ 3)\n  rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q)\n   (rat_poly_times p (q\\<^sup>2)) -\n  rat_poly_plus\n   (rat_poly_times (p\\<^sup>2) q -\n    rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2))\n   (q ^ 3) =\n  rat_poly_plus\n   (rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q)\n     (rat_poly_times p (q\\<^sup>2)) -\n    rat_poly_times (p\\<^sup>2) q)\n   (rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2)) -\n  q ^ 3\n  rat_poly_plus\n   (rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q)\n     (rat_poly_times p (q\\<^sup>2)) -\n    rat_poly_times (p\\<^sup>2) q)\n   (rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2)) -\n  q ^ 3 =\n  rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n   (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n  q ^ 3", "show \n    \"(p - q) ^ 3 \n        = rat_poly_plus (p ^ 3 - \n                          rat_poly_times \n                              (rat_poly_times 3 (p\\<^sup>2)) q) \n                              (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) \n                                                               - q ^ 3\""], ["proof (prove)\nusing this:\n  (p - q) ^ 3 =\n  rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q)\n   (rat_poly_times p (q\\<^sup>2)) -\n  rat_poly_plus\n   (rat_poly_times (p\\<^sup>2) q -\n    rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2))\n   (q ^ 3)\n  rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q)\n   (rat_poly_times p (q\\<^sup>2)) -\n  rat_poly_plus\n   (rat_poly_times (p\\<^sup>2) q -\n    rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2))\n   (q ^ 3) =\n  rat_poly_plus\n   (rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q)\n     (rat_poly_times p (q\\<^sup>2)) -\n    rat_poly_times (p\\<^sup>2) q)\n   (rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2)) -\n  q ^ 3\n  rat_poly_plus\n   (rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 2 (p\\<^sup>2)) q)\n     (rat_poly_times p (q\\<^sup>2)) -\n    rat_poly_times (p\\<^sup>2) q)\n   (rat_poly_times (rat_poly_times 2 p) (q\\<^sup>2)) -\n  q ^ 3 =\n  rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n   (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n  q ^ 3\n\ngoal (1 subgoal):\n 1. (p - q) ^ 3 =\n    rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n     (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n    q ^ 3", "by auto"], ["proof (state)\nthis:\n  (p - q) ^ 3 =\n  rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n   (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n  q ^ 3\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma power_mult: \"((p::rat_poly)^m)^n= (p)^(m*(n::nat))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p ^ m) ^ n = p ^ (m *n n)", "by (metis power_mult)"], ["", "lemma cube_minus2:\nfixes p q\nshows \"(((p::rat_poly) - (q::rat_poly))^3) \n                = (p^3) - 3*(p^2)*(q) + 3*(p)*(q^2) - (q^3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p - q) ^ 3 =\n    rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n     (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n    q ^ 3", "using cube_minus"], ["proof (prove)\nusing this:\n  \\<forall>p q.\n     (p - q) ^ 3 =\n     rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n      (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n     q ^ 3\n\ngoal (1 subgoal):\n 1. (p - q) ^ 3 =\n    rat_poly_plus (p ^ 3 - rat_poly_times (rat_poly_times 3 (p\\<^sup>2)) q)\n     (rat_poly_times (rat_poly_times 3 p) (q\\<^sup>2)) -\n    q ^ 3", "by auto"], ["", "lemma subst_poly:assumes \"a = b\" shows \"(p::rat_poly)*a = p*b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times p a = rat_poly_times p b", "using assms"], ["proof (prove)\nusing this:\n  a = b\n\ngoal (1 subgoal):\n 1. rat_poly_times p a = rat_poly_times p b", "by auto"], ["", "lemma sub1: \n assumes \"p*q = 1\"\n shows \"r*(p*q) = r*1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r * (p * q) = r * (1::'a)", "using assms"], ["proof (prove)\nusing this:\n  p * q = (1::'a)\n\ngoal (1 subgoal):\n 1. r * (p * q) = r * (1::'a)", "by metis"], ["", "lemma n_distrib:\"(A^(n::nat))*(B^n) = (A*B)^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A ^ n * B ^ n = (A * B) ^ n", "by (induct n)(auto)"], ["", "lemma rat_poly_id_pow:\"(1::rat_poly)^n = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 ^ n = 1", "by (induct n)(auto)"], ["", "lemma power_prod:\"(A^(n::nat))*(B^n) = (1::rat_poly)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times (A ^ n) (B ^ n) = 1", "apply(simp add:n_distrib)"], ["proof (prove)\ngoal (1 subgoal):\n 1. rat_poly_times A B ^ n = 1", "apply(simp add:inverse1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma \"(pCons 0 1) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pCons (0::'a) 1 \\<noteq> 0", "by (metis non_zero var_def)"], ["", "end"]]}