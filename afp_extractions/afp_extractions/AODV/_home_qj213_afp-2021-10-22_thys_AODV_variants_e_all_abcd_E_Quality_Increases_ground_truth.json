{"file_name": "/home/qj213/afp-2021-10-22/thys/AODV/variants/e_all_abcd/E_Quality_Increases.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/AODV", "problem_names": ["lemma quality_increasesI [intro!]:\n  assumes \"\\<And>dip. dip \\<in> kD(rt \\<xi>) \\<Longrightarrow> dip \\<in> kD(rt \\<xi>')\"\n      and \"\\<And>dip. \\<lbrakk> dip \\<in> kD(rt \\<xi>); dip \\<in> kD(rt \\<xi>') \\<rbrakk> \\<Longrightarrow> rt \\<xi> \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt \\<xi>'\"          \n      and \"\\<And>dip. sqn (rt \\<xi>) dip \\<le> sqn (rt \\<xi>') dip\"\n    shows \"quality_increases \\<xi> \\<xi>'\"", "lemma quality_increasesE [elim]:\n    fixes dip\n  assumes \"quality_increases \\<xi> \\<xi>'\"\n      and \"dip\\<in>kD(rt \\<xi>)\"\n      and \"\\<lbrakk> dip \\<in> kD(rt \\<xi>'); rt \\<xi> \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt \\<xi>'; sqn (rt \\<xi>) dip \\<le> sqn (rt \\<xi>') dip \\<rbrakk> \\<Longrightarrow> R dip \\<xi> \\<xi>'\"\n    shows \"R dip \\<xi> \\<xi>'\"", "lemma quality_increases_rt_fresherD [dest]:\n    fixes ip\n  assumes \"quality_increases \\<xi> \\<xi>'\"\n      and \"ip\\<in>kD(rt \\<xi>)\"\n    shows \"rt \\<xi> \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt \\<xi>'\"", "lemma quality_increases_sqnE [elim]:\n    fixes dip\n  assumes \"quality_increases \\<xi> \\<xi>'\"\n      and \"sqn (rt \\<xi>) dip \\<le> sqn (rt \\<xi>') dip \\<Longrightarrow> R dip \\<xi> \\<xi>'\"\n    shows \"R dip \\<xi> \\<xi>'\"", "lemma quality_increases_refl [intro, simp]: \"quality_increases \\<xi> \\<xi>\"", "lemma strictly_fresher_quality_increases_right [elim]:\n    fixes \\<sigma> \\<sigma>' dip\n  assumes \"rt (\\<sigma> i) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip)\"                       \n      and qinc: \"quality_increases (\\<sigma> nhip) (\\<sigma>' nhip)\"\n      and \"dip\\<in>kD(rt (\\<sigma> nhip))\"\n    shows \"rt (\\<sigma> i) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma>' nhip)\"", "lemma kD_quality_increases [elim]:\n  assumes \"i\\<in>kD(rt \\<xi>)\"\n      and \"quality_increases \\<xi> \\<xi>'\"\n    shows \"i\\<in>kD(rt \\<xi>')\"", "lemma kD_nsqn_quality_increases [elim]:\n  assumes \"i\\<in>kD(rt \\<xi>)\"\n      and \"quality_increases \\<xi> \\<xi>'\"\n    shows \"i\\<in>kD(rt \\<xi>') \\<and> nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i\"", "lemma nsqn_quality_increases [elim]:\n  assumes \"i\\<in>kD(rt \\<xi>)\"\n      and \"quality_increases \\<xi> \\<xi>'\"\n    shows \"nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i\"", "lemma kD_nsqn_quality_increases_trans [elim]:\n  assumes \"i\\<in>kD(rt \\<xi>)\"\n      and \"s \\<le> nsqn (rt \\<xi>) i\"\n      and \"quality_increases \\<xi> \\<xi>'\"\n    shows \"i\\<in>kD(rt \\<xi>') \\<and> s \\<le> nsqn (rt \\<xi>') i\"", "lemma nsqn_quality_increases_nsqn_lt_lt [elim]:\n  assumes \"i\\<in>kD(rt \\<xi>)\"\n      and \"quality_increases \\<xi> \\<xi>'\"\n     and \"s < nsqn (rt \\<xi>) i\"\n    shows \"s < nsqn (rt \\<xi>') i\"", "lemma nsqn_quality_increases_dhops [elim]:\n  assumes \"i\\<in>kD(rt \\<xi>)\"\n      and \"quality_increases \\<xi> \\<xi>'\"\n      and \"nsqn (rt \\<xi>) i = nsqn (rt \\<xi>') i\"\n    shows \"the (dhops (rt \\<xi>) i) \\<ge> the (dhops (rt \\<xi>') i)\"", "lemma nsqn_quality_increases_nsqn_eq_le [elim]:\n  assumes \"i\\<in>kD(rt \\<xi>)\"\n      and \"quality_increases \\<xi> \\<xi>'\"\n      and \"s = nsqn (rt \\<xi>) i\"\n    shows \"s < nsqn (rt \\<xi>') i \\<or> (s = nsqn (rt \\<xi>') i \\<and> the (dhops (rt \\<xi>) i) \\<ge> the (dhops (rt \\<xi>') i))\"", "lemma quality_increases_rreq_rrep_props [elim]:\n    fixes sn ip hops sip\n  assumes qinc: \"quality_increases (\\<sigma> sip) (\\<sigma>' sip)\"\n      and \"1 \\<le> sn\"\n      and *: \"ip\\<in>kD(rt (\\<sigma> sip)) \\<and> sn \\<le> nsqn (rt (\\<sigma> sip)) ip\n                                \\<and> (nsqn (rt (\\<sigma> sip)) ip = sn\n                                    \\<longrightarrow> (the (dhops (rt (\\<sigma> sip)) ip) \\<le> hops\n                                          \\<or> the (flag (rt (\\<sigma> sip)) ip) = inv))\"\n    shows \"ip\\<in>kD(rt (\\<sigma>' sip)) \\<and> sn \\<le> nsqn (rt (\\<sigma>' sip)) ip\n                              \\<and> (nsqn (rt (\\<sigma>' sip)) ip = sn\n                                  \\<longrightarrow> (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops\n                                        \\<or> the (flag (rt (\\<sigma>' sip)) ip) = inv))\"\n      (is \"_ \\<and> ?nsqnafter\")", "lemma quality_increases_rreq_rrep_props':\n    fixes sn ip hops sip\n  assumes \"\\<forall>j. quality_increases (\\<sigma> j) (\\<sigma>' j)\"\n      and \"1 \\<le> sn\"\n      and *: \"ip\\<in>kD(rt (\\<sigma> sip)) \\<and> sn \\<le> nsqn (rt (\\<sigma> sip)) ip\n                                \\<and> (nsqn (rt (\\<sigma> sip)) ip = sn\n                                    \\<longrightarrow> (the (dhops (rt (\\<sigma> sip)) ip) \\<le> hops\n                                          \\<or> the (flag (rt (\\<sigma> sip)) ip) = inv))\"\n    shows \"ip\\<in>kD(rt (\\<sigma>' sip)) \\<and> sn \\<le> nsqn (rt (\\<sigma>' sip)) ip\n                              \\<and> (nsqn (rt (\\<sigma>' sip)) ip = sn\n                                  \\<longrightarrow> (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops\n                                        \\<or> the (flag (rt (\\<sigma>' sip)) ip) = inv))\"", "lemma rteq_quality_increases:\n  assumes \"\\<forall>j. j \\<noteq> i \\<longrightarrow> quality_increases (\\<sigma> j) (\\<sigma>' j)\"\n      and \"rt (\\<sigma>' i) = rt (\\<sigma> i)\"\n    shows \"\\<forall>j. quality_increases (\\<sigma> j) (\\<sigma>' j)\"", "lemma msg_fresh [simp]:\n  \"\\<And>hops dip dsn dsk oip osn sip handled.\n           msg_fresh \\<sigma> (Rreq hops dip dsn dsk oip osn sip handled) =\n                            (osn \\<ge> 1 \\<and> (sip \\<noteq> oip \\<longrightarrow> oip\\<in>kD(rt (\\<sigma> sip))\n                                     \\<and> nsqn (rt (\\<sigma> sip)) oip \\<ge> osn\n                                     \\<and> (nsqn (rt (\\<sigma> sip)) oip = osn\n                                           \\<longrightarrow> (hops \\<ge> the (dhops (rt (\\<sigma> sip)) oip)\n                                                \\<or> the (flag (rt (\\<sigma> sip)) oip) = inv))))\"\n  \"\\<And>hops dip dsn oip sip. msg_fresh \\<sigma> (Rrep hops dip dsn oip sip) =\n                            (dsn \\<ge> 1 \\<and> (sip \\<noteq> dip \\<longrightarrow> dip\\<in>kD(rt (\\<sigma> sip))\n                                     \\<and> nsqn (rt (\\<sigma> sip)) dip \\<ge> dsn\n                                     \\<and> (nsqn (rt (\\<sigma> sip)) dip = dsn\n                                           \\<longrightarrow> (hops \\<ge> the (dhops (rt (\\<sigma> sip)) dip))\n                                                 \\<or> the (flag (rt (\\<sigma> sip)) dip) = inv)))\"\n  \"\\<And>dests sip.            msg_fresh \\<sigma> (Rerr dests sip) =\n                            (\\<forall>ripc\\<in>dom(dests). (ripc\\<in>kD(rt (\\<sigma> sip))\n                                     \\<and> the (dests ripc) - 1 \\<le> nsqn (rt (\\<sigma> sip)) ripc))\"\n  \"\\<And>d dip.                msg_fresh \\<sigma> (Newpkt d dip)   = True\"\n  \"\\<And>d dip sip.            msg_fresh \\<sigma> (Pkt d dip sip)  = True\"", "lemma msg_fresh_inc_sn [simp, elim]:\n  \"msg_fresh \\<sigma> m \\<Longrightarrow> rreq_rrep_sn m\"", "lemma recv_msg_fresh_inc_sn [simp, elim]:\n  \"orecvmsg (msg_fresh) \\<sigma> m \\<Longrightarrow> recvmsg rreq_rrep_sn m\"", "lemma rreq_nsqn_is_fresh [simp]:\n  fixes \\<sigma> msg hops dip dsn dsk oip osn sip handled\n  assumes \"rreq_rrep_fresh (rt (\\<sigma> sip)) (Rreq hops dip dsn dsk oip osn sip handled)\"\n      and \"rreq_rrep_sn (Rreq hops dip dsn dsk oip osn sip handled)\"\n  shows \"msg_fresh \\<sigma> (Rreq hops dip dsn dsk oip osn sip handled)\"\n        (is \"msg_fresh \\<sigma> ?msg\")", "lemma rrep_nsqn_is_fresh [simp]:\n  fixes \\<sigma> msg hops dip dsn oip sip\n  assumes \"rreq_rrep_fresh (rt (\\<sigma> sip)) (Rrep hops dip dsn oip sip)\"\n      and \"rreq_rrep_sn (Rrep hops dip dsn oip sip)\"\n  shows \"msg_fresh \\<sigma> (Rrep hops dip dsn oip sip)\"\n        (is \"msg_fresh \\<sigma> ?msg\")", "lemma rerr_nsqn_is_fresh [simp]:\n  fixes \\<sigma> msg dests sip\n  assumes \"rerr_invalid (rt (\\<sigma> sip)) (Rerr dests sip)\"\n  shows \"msg_fresh \\<sigma> (Rerr dests sip)\"\n        (is \"msg_fresh \\<sigma> ?msg\")", "lemma quality_increases_msg_fresh [elim]:\n  assumes qinc: \"\\<forall>j. quality_increases (\\<sigma> j) (\\<sigma>' j)\"\n      and \"msg_fresh \\<sigma> m\"\n    shows \"msg_fresh \\<sigma>' m\""], "translations": [["", "lemma quality_increasesI [intro!]:\n  assumes \"\\<And>dip. dip \\<in> kD(rt \\<xi>) \\<Longrightarrow> dip \\<in> kD(rt \\<xi>')\"\n      and \"\\<And>dip. \\<lbrakk> dip \\<in> kD(rt \\<xi>); dip \\<in> kD(rt \\<xi>') \\<rbrakk> \\<Longrightarrow> rt \\<xi> \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt \\<xi>'\"          \n      and \"\\<And>dip. sqn (rt \\<xi>) dip \\<le> sqn (rt \\<xi>') dip\"\n    shows \"quality_increases \\<xi> \\<xi>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. quality_increases \\<xi> \\<xi>'", "unfolding quality_increases_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>dip\\<in>kD (rt \\<xi>).\n        dip \\<in> kD (rt \\<xi>') \\<and>\n        rt \\<xi> \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt \\<xi>') \\<and>\n    (\\<forall>dip. sqn (rt \\<xi>) dip \\<le> sqn (rt \\<xi>') dip)", "using assms"], ["proof (prove)\nusing this:\n  ?dip \\<in> kD (rt \\<xi>) \\<Longrightarrow> ?dip \\<in> kD (rt \\<xi>')\n  \\<lbrakk>?dip \\<in> kD (rt \\<xi>); ?dip \\<in> kD (rt \\<xi>')\\<rbrakk>\n  \\<Longrightarrow> rt \\<xi> \\<sqsubseteq>\\<^bsub>?dip\\<^esub> rt \\<xi>'\n  sqn (rt \\<xi>) ?dip \\<le> sqn (rt \\<xi>') ?dip\n\ngoal (1 subgoal):\n 1. (\\<forall>dip\\<in>kD (rt \\<xi>).\n        dip \\<in> kD (rt \\<xi>') \\<and>\n        rt \\<xi> \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt \\<xi>') \\<and>\n    (\\<forall>dip. sqn (rt \\<xi>) dip \\<le> sqn (rt \\<xi>') dip)", "by clarsimp"], ["", "lemma quality_increasesE [elim]:\n    fixes dip\n  assumes \"quality_increases \\<xi> \\<xi>'\"\n      and \"dip\\<in>kD(rt \\<xi>)\"\n      and \"\\<lbrakk> dip \\<in> kD(rt \\<xi>'); rt \\<xi> \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt \\<xi>'; sqn (rt \\<xi>) dip \\<le> sqn (rt \\<xi>') dip \\<rbrakk> \\<Longrightarrow> R dip \\<xi> \\<xi>'\"\n    shows \"R dip \\<xi> \\<xi>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R dip \\<xi> \\<xi>'", "using assms"], ["proof (prove)\nusing this:\n  quality_increases \\<xi> \\<xi>'\n  dip \\<in> kD (rt \\<xi>)\n  \\<lbrakk>dip \\<in> kD (rt \\<xi>');\n   rt \\<xi> \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt \\<xi>';\n   sqn (rt \\<xi>) dip \\<le> sqn (rt \\<xi>') dip\\<rbrakk>\n  \\<Longrightarrow> R dip \\<xi> \\<xi>'\n\ngoal (1 subgoal):\n 1. R dip \\<xi> \\<xi>'", "unfolding quality_increases_def"], ["proof (prove)\nusing this:\n  (\\<forall>dip\\<in>kD (rt \\<xi>).\n      dip \\<in> kD (rt \\<xi>') \\<and>\n      rt \\<xi> \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt \\<xi>') \\<and>\n  (\\<forall>dip. sqn (rt \\<xi>) dip \\<le> sqn (rt \\<xi>') dip)\n  dip \\<in> kD (rt \\<xi>)\n  \\<lbrakk>dip \\<in> kD (rt \\<xi>');\n   rt \\<xi> \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt \\<xi>';\n   sqn (rt \\<xi>) dip \\<le> sqn (rt \\<xi>') dip\\<rbrakk>\n  \\<Longrightarrow> R dip \\<xi> \\<xi>'\n\ngoal (1 subgoal):\n 1. R dip \\<xi> \\<xi>'", "by clarsimp"], ["", "lemma quality_increases_rt_fresherD [dest]:\n    fixes ip\n  assumes \"quality_increases \\<xi> \\<xi>'\"\n      and \"ip\\<in>kD(rt \\<xi>)\"\n    shows \"rt \\<xi> \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt \\<xi>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt \\<xi> \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt \\<xi>'", "using assms"], ["proof (prove)\nusing this:\n  quality_increases \\<xi> \\<xi>'\n  ip \\<in> kD (rt \\<xi>)\n\ngoal (1 subgoal):\n 1. rt \\<xi> \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt \\<xi>'", "by auto"], ["", "lemma quality_increases_sqnE [elim]:\n    fixes dip\n  assumes \"quality_increases \\<xi> \\<xi>'\"\n      and \"sqn (rt \\<xi>) dip \\<le> sqn (rt \\<xi>') dip \\<Longrightarrow> R dip \\<xi> \\<xi>'\"\n    shows \"R dip \\<xi> \\<xi>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R dip \\<xi> \\<xi>'", "using assms"], ["proof (prove)\nusing this:\n  quality_increases \\<xi> \\<xi>'\n  sqn (rt \\<xi>) dip \\<le> sqn (rt \\<xi>') dip \\<Longrightarrow>\n  R dip \\<xi> \\<xi>'\n\ngoal (1 subgoal):\n 1. R dip \\<xi> \\<xi>'", "unfolding quality_increases_def"], ["proof (prove)\nusing this:\n  (\\<forall>dip\\<in>kD (rt \\<xi>).\n      dip \\<in> kD (rt \\<xi>') \\<and>\n      rt \\<xi> \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt \\<xi>') \\<and>\n  (\\<forall>dip. sqn (rt \\<xi>) dip \\<le> sqn (rt \\<xi>') dip)\n  sqn (rt \\<xi>) dip \\<le> sqn (rt \\<xi>') dip \\<Longrightarrow>\n  R dip \\<xi> \\<xi>'\n\ngoal (1 subgoal):\n 1. R dip \\<xi> \\<xi>'", "by clarsimp"], ["", "lemma quality_increases_refl [intro, simp]: \"quality_increases \\<xi> \\<xi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. quality_increases \\<xi> \\<xi>", "by rule simp_all"], ["", "lemma strictly_fresher_quality_increases_right [elim]:\n    fixes \\<sigma> \\<sigma>' dip\n  assumes \"rt (\\<sigma> i) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip)\"                       \n      and qinc: \"quality_increases (\\<sigma> nhip) (\\<sigma>' nhip)\"\n      and \"dip\\<in>kD(rt (\\<sigma> nhip))\"\n    shows \"rt (\\<sigma> i) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma>' nhip)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt (\\<sigma> i) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma>' nhip)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rt (\\<sigma> i) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma>' nhip)", "from qinc"], ["proof (chain)\npicking this:\n  quality_increases (\\<sigma> nhip) (\\<sigma>' nhip)", "have \"rt (\\<sigma> nhip) \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt (\\<sigma>' nhip)\""], ["proof (prove)\nusing this:\n  quality_increases (\\<sigma> nhip) (\\<sigma>' nhip)\n\ngoal (1 subgoal):\n 1. rt (\\<sigma> nhip) \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt (\\<sigma>' nhip)", "using \\<open>dip\\<in>kD(rt (\\<sigma> nhip))\\<close>"], ["proof (prove)\nusing this:\n  quality_increases (\\<sigma> nhip) (\\<sigma>' nhip)\n  dip \\<in> kD (rt (\\<sigma> nhip))\n\ngoal (1 subgoal):\n 1. rt (\\<sigma> nhip) \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt (\\<sigma>' nhip)", "by auto"], ["proof (state)\nthis:\n  rt (\\<sigma> nhip) \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt (\\<sigma>' nhip)\n\ngoal (1 subgoal):\n 1. rt (\\<sigma> i) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma>' nhip)", "with \\<open>rt (\\<sigma> i) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip)\\<close>"], ["proof (chain)\npicking this:\n  rt (\\<sigma> i) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip)\n  rt (\\<sigma> nhip) \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt (\\<sigma>' nhip)", "show ?thesis"], ["proof (prove)\nusing this:\n  rt (\\<sigma> i) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip)\n  rt (\\<sigma> nhip) \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt (\\<sigma>' nhip)\n\ngoal (1 subgoal):\n 1. rt (\\<sigma> i) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma>' nhip)", ".."], ["proof (state)\nthis:\n  rt (\\<sigma> i) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma>' nhip)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma kD_quality_increases [elim]:\n  assumes \"i\\<in>kD(rt \\<xi>)\"\n      and \"quality_increases \\<xi> \\<xi>'\"\n    shows \"i\\<in>kD(rt \\<xi>')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> kD (rt \\<xi>')", "using assms"], ["proof (prove)\nusing this:\n  i \\<in> kD (rt \\<xi>)\n  quality_increases \\<xi> \\<xi>'\n\ngoal (1 subgoal):\n 1. i \\<in> kD (rt \\<xi>')", "by auto"], ["", "lemma kD_nsqn_quality_increases [elim]:\n  assumes \"i\\<in>kD(rt \\<xi>)\"\n      and \"quality_increases \\<xi> \\<xi>'\"\n    shows \"i\\<in>kD(rt \\<xi>') \\<and> nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> kD (rt \\<xi>') \\<and> nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<in> kD (rt \\<xi>') \\<and> nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i", "from assms"], ["proof (chain)\npicking this:\n  i \\<in> kD (rt \\<xi>)\n  quality_increases \\<xi> \\<xi>'", "have \"i\\<in>kD(rt \\<xi>')\""], ["proof (prove)\nusing this:\n  i \\<in> kD (rt \\<xi>)\n  quality_increases \\<xi> \\<xi>'\n\ngoal (1 subgoal):\n 1. i \\<in> kD (rt \\<xi>')", ".."], ["proof (state)\nthis:\n  i \\<in> kD (rt \\<xi>')\n\ngoal (1 subgoal):\n 1. i \\<in> kD (rt \\<xi>') \\<and> nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i", "moreover"], ["proof (state)\nthis:\n  i \\<in> kD (rt \\<xi>')\n\ngoal (1 subgoal):\n 1. i \\<in> kD (rt \\<xi>') \\<and> nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i", "with assms"], ["proof (chain)\npicking this:\n  i \\<in> kD (rt \\<xi>)\n  quality_increases \\<xi> \\<xi>'\n  i \\<in> kD (rt \\<xi>')", "have \"rt \\<xi> \\<sqsubseteq>\\<^bsub>i\\<^esub> rt \\<xi>'\""], ["proof (prove)\nusing this:\n  i \\<in> kD (rt \\<xi>)\n  quality_increases \\<xi> \\<xi>'\n  i \\<in> kD (rt \\<xi>')\n\ngoal (1 subgoal):\n 1. rt \\<xi> \\<sqsubseteq>\\<^bsub>i\\<^esub> rt \\<xi>'", "by auto"], ["proof (state)\nthis:\n  rt \\<xi> \\<sqsubseteq>\\<^bsub>i\\<^esub> rt \\<xi>'\n\ngoal (1 subgoal):\n 1. i \\<in> kD (rt \\<xi>') \\<and> nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i", "ultimately"], ["proof (chain)\npicking this:\n  i \\<in> kD (rt \\<xi>')\n  rt \\<xi> \\<sqsubseteq>\\<^bsub>i\\<^esub> rt \\<xi>'", "have \"nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i\""], ["proof (prove)\nusing this:\n  i \\<in> kD (rt \\<xi>')\n  rt \\<xi> \\<sqsubseteq>\\<^bsub>i\\<^esub> rt \\<xi>'\n\ngoal (1 subgoal):\n 1. nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i", "using \\<open>i\\<in>kD(rt \\<xi>)\\<close>"], ["proof (prove)\nusing this:\n  i \\<in> kD (rt \\<xi>')\n  rt \\<xi> \\<sqsubseteq>\\<^bsub>i\\<^esub> rt \\<xi>'\n  i \\<in> kD (rt \\<xi>)\n\ngoal (1 subgoal):\n 1. nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i", "by - (erule(2) rt_fresher_imp_nsqn_le)"], ["proof (state)\nthis:\n  nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i\n\ngoal (1 subgoal):\n 1. i \\<in> kD (rt \\<xi>') \\<and> nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i", "with \\<open>i\\<in>kD(rt \\<xi>')\\<close>"], ["proof (chain)\npicking this:\n  i \\<in> kD (rt \\<xi>')\n  nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<in> kD (rt \\<xi>')\n  nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i\n\ngoal (1 subgoal):\n 1. i \\<in> kD (rt \\<xi>') \\<and> nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i", ".."], ["proof (state)\nthis:\n  i \\<in> kD (rt \\<xi>') \\<and> nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nsqn_quality_increases [elim]:\n  assumes \"i\\<in>kD(rt \\<xi>)\"\n      and \"quality_increases \\<xi> \\<xi>'\"\n    shows \"nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i", "using assms"], ["proof (prove)\nusing this:\n  i \\<in> kD (rt \\<xi>)\n  quality_increases \\<xi> \\<xi>'\n\ngoal (1 subgoal):\n 1. nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i", "by (rule kD_nsqn_quality_increases [THEN conjunct2])"], ["", "lemma kD_nsqn_quality_increases_trans [elim]:\n  assumes \"i\\<in>kD(rt \\<xi>)\"\n      and \"s \\<le> nsqn (rt \\<xi>) i\"\n      and \"quality_increases \\<xi> \\<xi>'\"\n    shows \"i\\<in>kD(rt \\<xi>') \\<and> s \\<le> nsqn (rt \\<xi>') i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> kD (rt \\<xi>') \\<and> s \\<le> nsqn (rt \\<xi>') i", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. i \\<in> kD (rt \\<xi>')\n 2. s \\<le> nsqn (rt \\<xi>') i", "from \\<open>i\\<in>kD(rt \\<xi>)\\<close> and \\<open>quality_increases \\<xi> \\<xi>'\\<close>"], ["proof (chain)\npicking this:\n  i \\<in> kD (rt \\<xi>)\n  quality_increases \\<xi> \\<xi>'", "show \"i\\<in>kD(rt \\<xi>')\""], ["proof (prove)\nusing this:\n  i \\<in> kD (rt \\<xi>)\n  quality_increases \\<xi> \\<xi>'\n\ngoal (1 subgoal):\n 1. i \\<in> kD (rt \\<xi>')", ".."], ["proof (state)\nthis:\n  i \\<in> kD (rt \\<xi>')\n\ngoal (1 subgoal):\n 1. s \\<le> nsqn (rt \\<xi>') i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<le> nsqn (rt \\<xi>') i", "from \\<open>i\\<in>kD(rt \\<xi>)\\<close> and \\<open>quality_increases \\<xi> \\<xi>'\\<close>"], ["proof (chain)\npicking this:\n  i \\<in> kD (rt \\<xi>)\n  quality_increases \\<xi> \\<xi>'", "have \"nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i\""], ["proof (prove)\nusing this:\n  i \\<in> kD (rt \\<xi>)\n  quality_increases \\<xi> \\<xi>'\n\ngoal (1 subgoal):\n 1. nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i", ".."], ["proof (state)\nthis:\n  nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i\n\ngoal (1 subgoal):\n 1. s \\<le> nsqn (rt \\<xi>') i", "with \\<open>s \\<le> nsqn (rt \\<xi>) i\\<close>"], ["proof (chain)\npicking this:\n  s \\<le> nsqn (rt \\<xi>) i\n  nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i", "show \"s \\<le> nsqn (rt \\<xi>') i\""], ["proof (prove)\nusing this:\n  s \\<le> nsqn (rt \\<xi>) i\n  nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i\n\ngoal (1 subgoal):\n 1. s \\<le> nsqn (rt \\<xi>') i", "by (rule le_trans)"], ["proof (state)\nthis:\n  s \\<le> nsqn (rt \\<xi>') i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nsqn_quality_increases_nsqn_lt_lt [elim]:\n  assumes \"i\\<in>kD(rt \\<xi>)\"\n      and \"quality_increases \\<xi> \\<xi>'\"\n     and \"s < nsqn (rt \\<xi>) i\"\n    shows \"s < nsqn (rt \\<xi>') i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s < nsqn (rt \\<xi>') i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s < nsqn (rt \\<xi>') i", "from assms(1-2)"], ["proof (chain)\npicking this:\n  i \\<in> kD (rt \\<xi>)\n  quality_increases \\<xi> \\<xi>'", "have \"nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i\""], ["proof (prove)\nusing this:\n  i \\<in> kD (rt \\<xi>)\n  quality_increases \\<xi> \\<xi>'\n\ngoal (1 subgoal):\n 1. nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i", ".."], ["proof (state)\nthis:\n  nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i\n\ngoal (1 subgoal):\n 1. s < nsqn (rt \\<xi>') i", "with \\<open>s < nsqn (rt \\<xi>) i\\<close>"], ["proof (chain)\npicking this:\n  s < nsqn (rt \\<xi>) i\n  nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i", "show \"s < nsqn (rt \\<xi>') i\""], ["proof (prove)\nusing this:\n  s < nsqn (rt \\<xi>) i\n  nsqn (rt \\<xi>) i \\<le> nsqn (rt \\<xi>') i\n\ngoal (1 subgoal):\n 1. s < nsqn (rt \\<xi>') i", "by simp"], ["proof (state)\nthis:\n  s < nsqn (rt \\<xi>') i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nsqn_quality_increases_dhops [elim]:\n  assumes \"i\\<in>kD(rt \\<xi>)\"\n      and \"quality_increases \\<xi> \\<xi>'\"\n      and \"nsqn (rt \\<xi>) i = nsqn (rt \\<xi>') i\"\n    shows \"the (dhops (rt \\<xi>) i) \\<ge> the (dhops (rt \\<xi>') i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the (dhops (rt \\<xi>') i) \\<le> the (dhops (rt \\<xi>) i)", "using assms"], ["proof (prove)\nusing this:\n  i \\<in> kD (rt \\<xi>)\n  quality_increases \\<xi> \\<xi>'\n  nsqn (rt \\<xi>) i = nsqn (rt \\<xi>') i\n\ngoal (1 subgoal):\n 1. the (dhops (rt \\<xi>') i) \\<le> the (dhops (rt \\<xi>) i)", "unfolding quality_increases_def"], ["proof (prove)\nusing this:\n  i \\<in> kD (rt \\<xi>)\n  (\\<forall>dip\\<in>kD (rt \\<xi>).\n      dip \\<in> kD (rt \\<xi>') \\<and>\n      rt \\<xi> \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt \\<xi>') \\<and>\n  (\\<forall>dip. sqn (rt \\<xi>) dip \\<le> sqn (rt \\<xi>') dip)\n  nsqn (rt \\<xi>) i = nsqn (rt \\<xi>') i\n\ngoal (1 subgoal):\n 1. the (dhops (rt \\<xi>') i) \\<le> the (dhops (rt \\<xi>) i)", "by (clarsimp) (drule(1) bspec, clarsimp simp: rt_fresher_def2)"], ["", "lemma nsqn_quality_increases_nsqn_eq_le [elim]:\n  assumes \"i\\<in>kD(rt \\<xi>)\"\n      and \"quality_increases \\<xi> \\<xi>'\"\n      and \"s = nsqn (rt \\<xi>) i\"\n    shows \"s < nsqn (rt \\<xi>') i \\<or> (s = nsqn (rt \\<xi>') i \\<and> the (dhops (rt \\<xi>) i) \\<ge> the (dhops (rt \\<xi>') i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s < nsqn (rt \\<xi>') i \\<or>\n    s = nsqn (rt \\<xi>') i \\<and>\n    the (dhops (rt \\<xi>') i) \\<le> the (dhops (rt \\<xi>) i)", "using assms"], ["proof (prove)\nusing this:\n  i \\<in> kD (rt \\<xi>)\n  quality_increases \\<xi> \\<xi>'\n  s = nsqn (rt \\<xi>) i\n\ngoal (1 subgoal):\n 1. s < nsqn (rt \\<xi>') i \\<or>\n    s = nsqn (rt \\<xi>') i \\<and>\n    the (dhops (rt \\<xi>') i) \\<le> the (dhops (rt \\<xi>) i)", "by (metis nat_less_le nsqn_quality_increases nsqn_quality_increases_dhops)"], ["", "lemma quality_increases_rreq_rrep_props [elim]:\n    fixes sn ip hops sip\n  assumes qinc: \"quality_increases (\\<sigma> sip) (\\<sigma>' sip)\"\n      and \"1 \\<le> sn\"\n      and *: \"ip\\<in>kD(rt (\\<sigma> sip)) \\<and> sn \\<le> nsqn (rt (\\<sigma> sip)) ip\n                                \\<and> (nsqn (rt (\\<sigma> sip)) ip = sn\n                                    \\<longrightarrow> (the (dhops (rt (\\<sigma> sip)) ip) \\<le> hops\n                                          \\<or> the (flag (rt (\\<sigma> sip)) ip) = inv))\"\n    shows \"ip\\<in>kD(rt (\\<sigma>' sip)) \\<and> sn \\<le> nsqn (rt (\\<sigma>' sip)) ip\n                              \\<and> (nsqn (rt (\\<sigma>' sip)) ip = sn\n                                  \\<longrightarrow> (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops\n                                        \\<or> the (flag (rt (\\<sigma>' sip)) ip) = inv))\"\n      (is \"_ \\<and> ?nsqnafter\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. ip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "from *"], ["proof (chain)\npicking this:\n  ip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  sn \\<le> nsqn (rt (\\<sigma> sip)) ip \\<and>\n  (nsqn (rt (\\<sigma> sip)) ip = sn \\<longrightarrow>\n   the (dhops (rt (\\<sigma> sip)) ip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma> sip)) ip) = Aodv_Basic.inv)", "obtain \"ip\\<in>kD(rt (\\<sigma> sip))\" and \"sn \\<le> nsqn (rt (\\<sigma> sip)) ip\""], ["proof (prove)\nusing this:\n  ip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  sn \\<le> nsqn (rt (\\<sigma> sip)) ip \\<and>\n  (nsqn (rt (\\<sigma> sip)) ip = sn \\<longrightarrow>\n   the (dhops (rt (\\<sigma> sip)) ip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma> sip)) ip) = Aodv_Basic.inv)\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>ip \\<in> kD (rt (\\<sigma> sip));\n      sn \\<le> nsqn (rt (\\<sigma> sip)) ip\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ip \\<in> kD (rt (\\<sigma> sip))\n  sn \\<le> nsqn (rt (\\<sigma> sip)) ip\n\ngoal (1 subgoal):\n 1. ip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "from \\<open>quality_increases (\\<sigma> sip) (\\<sigma>' sip)\\<close>"], ["proof (chain)\npicking this:\n  quality_increases (\\<sigma> sip) (\\<sigma>' sip)", "have \"sqn (rt (\\<sigma> sip)) ip \\<le> sqn (rt (\\<sigma>' sip)) ip\""], ["proof (prove)\nusing this:\n  quality_increases (\\<sigma> sip) (\\<sigma>' sip)\n\ngoal (1 subgoal):\n 1. sqn (rt (\\<sigma> sip)) ip \\<le> sqn (rt (\\<sigma>' sip)) ip", ".."], ["proof (state)\nthis:\n  sqn (rt (\\<sigma> sip)) ip \\<le> sqn (rt (\\<sigma>' sip)) ip\n\ngoal (1 subgoal):\n 1. ip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "from \\<open>quality_increases (\\<sigma> sip) (\\<sigma>' sip)\\<close> and \\<open>ip\\<in>kD (rt (\\<sigma> sip))\\<close>"], ["proof (chain)\npicking this:\n  quality_increases (\\<sigma> sip) (\\<sigma>' sip)\n  ip \\<in> kD (rt (\\<sigma> sip))", "have \"ip\\<in>kD (rt (\\<sigma>' sip))\""], ["proof (prove)\nusing this:\n  quality_increases (\\<sigma> sip) (\\<sigma>' sip)\n  ip \\<in> kD (rt (\\<sigma> sip))\n\ngoal (1 subgoal):\n 1. ip \\<in> kD (rt (\\<sigma>' sip))", ".."], ["proof (state)\nthis:\n  ip \\<in> kD (rt (\\<sigma>' sip))\n\ngoal (1 subgoal):\n 1. ip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "from \\<open>sn \\<le> nsqn (rt (\\<sigma> sip)) ip\\<close>"], ["proof (chain)\npicking this:\n  sn \\<le> nsqn (rt (\\<sigma> sip)) ip", "have ?nsqnafter"], ["proof (prove)\nusing this:\n  sn \\<le> nsqn (rt (\\<sigma> sip)) ip\n\ngoal (1 subgoal):\n 1. sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. sn = nsqn (rt (\\<sigma> sip)) ip \\<Longrightarrow>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n 2. sn < nsqn (rt (\\<sigma> sip)) ip \\<Longrightarrow>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "assume \"sn < nsqn (rt (\\<sigma> sip)) ip\""], ["proof (state)\nthis:\n  sn < nsqn (rt (\\<sigma> sip)) ip\n\ngoal (2 subgoals):\n 1. sn = nsqn (rt (\\<sigma> sip)) ip \\<Longrightarrow>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n 2. sn < nsqn (rt (\\<sigma> sip)) ip \\<Longrightarrow>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "also"], ["proof (state)\nthis:\n  sn < nsqn (rt (\\<sigma> sip)) ip\n\ngoal (2 subgoals):\n 1. sn = nsqn (rt (\\<sigma> sip)) ip \\<Longrightarrow>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n 2. sn < nsqn (rt (\\<sigma> sip)) ip \\<Longrightarrow>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "from \\<open>ip\\<in>kD(rt (\\<sigma> sip))\\<close> and \\<open>quality_increases (\\<sigma> sip) (\\<sigma>' sip)\\<close>"], ["proof (chain)\npicking this:\n  ip \\<in> kD (rt (\\<sigma> sip))\n  quality_increases (\\<sigma> sip) (\\<sigma>' sip)", "have \"... \\<le> nsqn (rt (\\<sigma>' sip)) ip\""], ["proof (prove)\nusing this:\n  ip \\<in> kD (rt (\\<sigma> sip))\n  quality_increases (\\<sigma> sip) (\\<sigma>' sip)\n\ngoal (1 subgoal):\n 1. nsqn (rt (\\<sigma> sip)) ip \\<le> nsqn (rt (\\<sigma>' sip)) ip", ".."], ["proof (state)\nthis:\n  nsqn (rt (\\<sigma> sip)) ip \\<le> nsqn (rt (\\<sigma>' sip)) ip\n\ngoal (2 subgoals):\n 1. sn = nsqn (rt (\\<sigma> sip)) ip \\<Longrightarrow>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n 2. sn < nsqn (rt (\\<sigma> sip)) ip \\<Longrightarrow>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "finally"], ["proof (chain)\npicking this:\n  sn < nsqn (rt (\\<sigma>' sip)) ip", "have \"sn < nsqn (rt (\\<sigma>' sip)) ip\""], ["proof (prove)\nusing this:\n  sn < nsqn (rt (\\<sigma>' sip)) ip\n\ngoal (1 subgoal):\n 1. sn < nsqn (rt (\\<sigma>' sip)) ip", "."], ["proof (state)\nthis:\n  sn < nsqn (rt (\\<sigma>' sip)) ip\n\ngoal (2 subgoals):\n 1. sn = nsqn (rt (\\<sigma> sip)) ip \\<Longrightarrow>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n 2. sn < nsqn (rt (\\<sigma> sip)) ip \\<Longrightarrow>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "thus ?thesis"], ["proof (prove)\nusing this:\n  sn < nsqn (rt (\\<sigma>' sip)) ip\n\ngoal (1 subgoal):\n 1. sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "by simp"], ["proof (state)\nthis:\n  sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n  (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n   the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n\ngoal (1 subgoal):\n 1. sn = nsqn (rt (\\<sigma> sip)) ip \\<Longrightarrow>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. sn = nsqn (rt (\\<sigma> sip)) ip \\<Longrightarrow>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "assume \"sn = nsqn (rt (\\<sigma> sip)) ip\""], ["proof (state)\nthis:\n  sn = nsqn (rt (\\<sigma> sip)) ip\n\ngoal (1 subgoal):\n 1. sn = nsqn (rt (\\<sigma> sip)) ip \\<Longrightarrow>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "with \\<open>ip\\<in>kD(rt (\\<sigma> sip))\\<close> and \\<open>quality_increases (\\<sigma> sip) (\\<sigma>' sip)\\<close>"], ["proof (chain)\npicking this:\n  ip \\<in> kD (rt (\\<sigma> sip))\n  quality_increases (\\<sigma> sip) (\\<sigma>' sip)\n  sn = nsqn (rt (\\<sigma> sip)) ip", "have \"sn < nsqn (rt (\\<sigma>' sip)) ip\n              \\<or> (sn = nsqn (rt (\\<sigma>' sip)) ip\n                 \\<and> the (dhops (rt (\\<sigma>' sip)) ip) \\<le> the (dhops (rt (\\<sigma> sip)) ip))\""], ["proof (prove)\nusing this:\n  ip \\<in> kD (rt (\\<sigma> sip))\n  quality_increases (\\<sigma> sip) (\\<sigma>' sip)\n  sn = nsqn (rt (\\<sigma> sip)) ip\n\ngoal (1 subgoal):\n 1. sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    sn = nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    the (dhops (rt (\\<sigma>' sip)) ip)\n    \\<le> the (dhops (rt (\\<sigma> sip)) ip)", ".."], ["proof (state)\nthis:\n  sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n  sn = nsqn (rt (\\<sigma>' sip)) ip \\<and>\n  the (dhops (rt (\\<sigma>' sip)) ip)\n  \\<le> the (dhops (rt (\\<sigma> sip)) ip)\n\ngoal (1 subgoal):\n 1. sn = nsqn (rt (\\<sigma> sip)) ip \\<Longrightarrow>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "hence \"sn < nsqn (rt (\\<sigma>' sip)) ip\n              \\<or> (nsqn (rt (\\<sigma>' sip)) ip = sn \\<and> (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops\n                                                 \\<or> the (flag (rt (\\<sigma>' sip)) ip) = inv))\""], ["proof (prove)\nusing this:\n  sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n  sn = nsqn (rt (\\<sigma>' sip)) ip \\<and>\n  the (dhops (rt (\\<sigma>' sip)) ip)\n  \\<le> the (dhops (rt (\\<sigma> sip)) ip)\n\ngoal (1 subgoal):\n 1. sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. sn < nsqn (rt (\\<sigma>' sip)) ip \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n 2. sn = nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    the (dhops (rt (\\<sigma>' sip)) ip)\n    \\<le> the (dhops (rt (\\<sigma> sip)) ip) \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "assume \"sn < nsqn (rt (\\<sigma>' sip)) ip\""], ["proof (state)\nthis:\n  sn < nsqn (rt (\\<sigma>' sip)) ip\n\ngoal (2 subgoals):\n 1. sn < nsqn (rt (\\<sigma>' sip)) ip \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n 2. sn = nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    the (dhops (rt (\\<sigma>' sip)) ip)\n    \\<le> the (dhops (rt (\\<sigma> sip)) ip) \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "thus ?thesis"], ["proof (prove)\nusing this:\n  sn < nsqn (rt (\\<sigma>' sip)) ip\n\ngoal (1 subgoal):\n 1. sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", ".."], ["proof (state)\nthis:\n  sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n  nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n  (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n\ngoal (1 subgoal):\n 1. sn = nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    the (dhops (rt (\\<sigma>' sip)) ip)\n    \\<le> the (dhops (rt (\\<sigma> sip)) ip) \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. sn = nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    the (dhops (rt (\\<sigma>' sip)) ip)\n    \\<le> the (dhops (rt (\\<sigma> sip)) ip) \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "assume \"sn = nsqn (rt (\\<sigma>' sip)) ip\n                \\<and> the (dhops (rt (\\<sigma> sip)) ip) \\<ge> the (dhops (rt (\\<sigma>' sip)) ip)\""], ["proof (state)\nthis:\n  sn = nsqn (rt (\\<sigma>' sip)) ip \\<and>\n  the (dhops (rt (\\<sigma>' sip)) ip)\n  \\<le> the (dhops (rt (\\<sigma> sip)) ip)\n\ngoal (1 subgoal):\n 1. sn = nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    the (dhops (rt (\\<sigma>' sip)) ip)\n    \\<le> the (dhops (rt (\\<sigma> sip)) ip) \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "hence \"sn = nsqn (rt (\\<sigma>' sip)) ip\"\n          and \"the (dhops (rt (\\<sigma>' sip)) ip) \\<le> the (dhops (rt (\\<sigma> sip)) ip)\""], ["proof (prove)\nusing this:\n  sn = nsqn (rt (\\<sigma>' sip)) ip \\<and>\n  the (dhops (rt (\\<sigma>' sip)) ip)\n  \\<le> the (dhops (rt (\\<sigma> sip)) ip)\n\ngoal (1 subgoal):\n 1. sn = nsqn (rt (\\<sigma>' sip)) ip &&&\n    the (dhops (rt (\\<sigma>' sip)) ip)\n    \\<le> the (dhops (rt (\\<sigma> sip)) ip)", "by auto"], ["proof (state)\nthis:\n  sn = nsqn (rt (\\<sigma>' sip)) ip\n  the (dhops (rt (\\<sigma>' sip)) ip)\n  \\<le> the (dhops (rt (\\<sigma> sip)) ip)\n\ngoal (1 subgoal):\n 1. sn = nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    the (dhops (rt (\\<sigma>' sip)) ip)\n    \\<le> the (dhops (rt (\\<sigma> sip)) ip) \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "from * and \\<open>sn = nsqn (rt (\\<sigma> sip)) ip\\<close>"], ["proof (chain)\npicking this:\n  ip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  sn \\<le> nsqn (rt (\\<sigma> sip)) ip \\<and>\n  (nsqn (rt (\\<sigma> sip)) ip = sn \\<longrightarrow>\n   the (dhops (rt (\\<sigma> sip)) ip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma> sip)) ip) = Aodv_Basic.inv)\n  sn = nsqn (rt (\\<sigma> sip)) ip", "have \"the (dhops (rt (\\<sigma> sip)) ip) \\<le> hops\n                                                       \\<or> the (flag (rt (\\<sigma> sip)) ip) = inv\""], ["proof (prove)\nusing this:\n  ip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  sn \\<le> nsqn (rt (\\<sigma> sip)) ip \\<and>\n  (nsqn (rt (\\<sigma> sip)) ip = sn \\<longrightarrow>\n   the (dhops (rt (\\<sigma> sip)) ip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma> sip)) ip) = Aodv_Basic.inv)\n  sn = nsqn (rt (\\<sigma> sip)) ip\n\ngoal (1 subgoal):\n 1. the (dhops (rt (\\<sigma> sip)) ip) \\<le> hops \\<or>\n    the (flag (rt (\\<sigma> sip)) ip) = Aodv_Basic.inv", "by simp"], ["proof (state)\nthis:\n  the (dhops (rt (\\<sigma> sip)) ip) \\<le> hops \\<or>\n  the (flag (rt (\\<sigma> sip)) ip) = Aodv_Basic.inv\n\ngoal (1 subgoal):\n 1. sn = nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    the (dhops (rt (\\<sigma>' sip)) ip)\n    \\<le> the (dhops (rt (\\<sigma> sip)) ip) \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "thus ?thesis"], ["proof (prove)\nusing this:\n  the (dhops (rt (\\<sigma> sip)) ip) \\<le> hops \\<or>\n  the (flag (rt (\\<sigma> sip)) ip) = Aodv_Basic.inv\n\ngoal (1 subgoal):\n 1. sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. the (dhops (rt (\\<sigma> sip)) ip) \\<le> hops \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n 2. the (flag (rt (\\<sigma> sip)) ip) = Aodv_Basic.inv \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "assume \"the (dhops (rt (\\<sigma> sip)) ip) \\<le> hops\""], ["proof (state)\nthis:\n  the (dhops (rt (\\<sigma> sip)) ip) \\<le> hops\n\ngoal (2 subgoals):\n 1. the (dhops (rt (\\<sigma> sip)) ip) \\<le> hops \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n 2. the (flag (rt (\\<sigma> sip)) ip) = Aodv_Basic.inv \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "with  \\<open>the (dhops (rt (\\<sigma>' sip)) ip) \\<le> the (dhops (rt (\\<sigma> sip)) ip)\\<close>"], ["proof (chain)\npicking this:\n  the (dhops (rt (\\<sigma>' sip)) ip)\n  \\<le> the (dhops (rt (\\<sigma> sip)) ip)\n  the (dhops (rt (\\<sigma> sip)) ip) \\<le> hops", "have \"the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops\""], ["proof (prove)\nusing this:\n  the (dhops (rt (\\<sigma>' sip)) ip)\n  \\<le> the (dhops (rt (\\<sigma> sip)) ip)\n  the (dhops (rt (\\<sigma> sip)) ip) \\<le> hops\n\ngoal (1 subgoal):\n 1. the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops", "by simp"], ["proof (state)\nthis:\n  the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops\n\ngoal (2 subgoals):\n 1. the (dhops (rt (\\<sigma> sip)) ip) \\<le> hops \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n 2. the (flag (rt (\\<sigma> sip)) ip) = Aodv_Basic.inv \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "with \\<open>sn = nsqn (rt (\\<sigma>' sip)) ip\\<close>"], ["proof (chain)\npicking this:\n  sn = nsqn (rt (\\<sigma>' sip)) ip\n  the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops", "show ?thesis"], ["proof (prove)\nusing this:\n  sn = nsqn (rt (\\<sigma>' sip)) ip\n  the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops\n\ngoal (1 subgoal):\n 1. sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "by simp"], ["proof (state)\nthis:\n  sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n  nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n  (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n\ngoal (1 subgoal):\n 1. the (flag (rt (\\<sigma> sip)) ip) = Aodv_Basic.inv \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. the (flag (rt (\\<sigma> sip)) ip) = Aodv_Basic.inv \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "assume \"the (flag (rt (\\<sigma> sip)) ip) = inv\""], ["proof (state)\nthis:\n  the (flag (rt (\\<sigma> sip)) ip) = Aodv_Basic.inv\n\ngoal (1 subgoal):\n 1. the (flag (rt (\\<sigma> sip)) ip) = Aodv_Basic.inv \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "with \\<open>ip\\<in>kD(rt (\\<sigma> sip))\\<close>"], ["proof (chain)\npicking this:\n  ip \\<in> kD (rt (\\<sigma> sip))\n  the (flag (rt (\\<sigma> sip)) ip) = Aodv_Basic.inv", "have \"nsqn (rt (\\<sigma> sip)) ip = sqn (rt (\\<sigma> sip)) ip - 1\""], ["proof (prove)\nusing this:\n  ip \\<in> kD (rt (\\<sigma> sip))\n  the (flag (rt (\\<sigma> sip)) ip) = Aodv_Basic.inv\n\ngoal (1 subgoal):\n 1. nsqn (rt (\\<sigma> sip)) ip = sqn (rt (\\<sigma> sip)) ip - 1", ".."], ["proof (state)\nthis:\n  nsqn (rt (\\<sigma> sip)) ip = sqn (rt (\\<sigma> sip)) ip - 1\n\ngoal (1 subgoal):\n 1. the (flag (rt (\\<sigma> sip)) ip) = Aodv_Basic.inv \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "with \\<open>sn \\<ge> 1\\<close> and \\<open>sn = nsqn (rt (\\<sigma> sip)) ip\\<close>"], ["proof (chain)\npicking this:\n  1 \\<le> sn\n  sn = nsqn (rt (\\<sigma> sip)) ip\n  nsqn (rt (\\<sigma> sip)) ip = sqn (rt (\\<sigma> sip)) ip - 1", "have \"sqn (rt (\\<sigma> sip)) ip > 1\""], ["proof (prove)\nusing this:\n  1 \\<le> sn\n  sn = nsqn (rt (\\<sigma> sip)) ip\n  nsqn (rt (\\<sigma> sip)) ip = sqn (rt (\\<sigma> sip)) ip - 1\n\ngoal (1 subgoal):\n 1. 1 < sqn (rt (\\<sigma> sip)) ip", "by simp"], ["proof (state)\nthis:\n  1 < sqn (rt (\\<sigma> sip)) ip\n\ngoal (1 subgoal):\n 1. the (flag (rt (\\<sigma> sip)) ip) = Aodv_Basic.inv \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "from \\<open>ip\\<in>kD(rt (\\<sigma>' sip))\\<close>"], ["proof (chain)\npicking this:\n  ip \\<in> kD (rt (\\<sigma>' sip))", "show ?thesis"], ["proof (prove)\nusing this:\n  ip \\<in> kD (rt (\\<sigma>' sip))\n\ngoal (1 subgoal):\n 1. sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "proof (rule vD_or_iD)"], ["proof (state)\ngoal (2 subgoals):\n 1. ip \\<in> vD (rt (\\<sigma>' sip)) \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n 2. ip \\<in> iD (rt (\\<sigma>' sip)) \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "assume \"ip\\<in>iD(rt (\\<sigma>' sip))\""], ["proof (state)\nthis:\n  ip \\<in> iD (rt (\\<sigma>' sip))\n\ngoal (2 subgoals):\n 1. ip \\<in> vD (rt (\\<sigma>' sip)) \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n 2. ip \\<in> iD (rt (\\<sigma>' sip)) \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "hence \"the (flag (rt (\\<sigma>' sip)) ip) = inv\""], ["proof (prove)\nusing this:\n  ip \\<in> iD (rt (\\<sigma>' sip))\n\ngoal (1 subgoal):\n 1. the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv", ".."], ["proof (state)\nthis:\n  the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv\n\ngoal (2 subgoals):\n 1. ip \\<in> vD (rt (\\<sigma>' sip)) \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n 2. ip \\<in> iD (rt (\\<sigma>' sip)) \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "with \\<open>sn = nsqn (rt (\\<sigma>' sip)) ip\\<close>"], ["proof (chain)\npicking this:\n  sn = nsqn (rt (\\<sigma>' sip)) ip\n  the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv", "show ?thesis"], ["proof (prove)\nusing this:\n  sn = nsqn (rt (\\<sigma>' sip)) ip\n  the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv\n\ngoal (1 subgoal):\n 1. sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "by simp"], ["proof (state)\nthis:\n  sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n  nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n  (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n\ngoal (1 subgoal):\n 1. ip \\<in> vD (rt (\\<sigma>' sip)) \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ip \\<in> vD (rt (\\<sigma>' sip)) \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "(* the tricky case: sn = nsqn (rt (\\<sigma>' sip)) ip\n                                \\<and> ip\\<in>iD(rt (\\<sigma> sip))\n                                \\<and> ip\\<in>vD(rt (\\<sigma>' sip)) *)"], ["proof (state)\ngoal (1 subgoal):\n 1. ip \\<in> vD (rt (\\<sigma>' sip)) \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "assume \"ip\\<in>vD(rt (\\<sigma>' sip))\""], ["proof (state)\nthis:\n  ip \\<in> vD (rt (\\<sigma>' sip))\n\ngoal (1 subgoal):\n 1. ip \\<in> vD (rt (\\<sigma>' sip)) \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "hence \"nsqn (rt (\\<sigma>' sip)) ip = sqn (rt (\\<sigma>' sip)) ip\""], ["proof (prove)\nusing this:\n  ip \\<in> vD (rt (\\<sigma>' sip))\n\ngoal (1 subgoal):\n 1. nsqn (rt (\\<sigma>' sip)) ip = sqn (rt (\\<sigma>' sip)) ip", ".."], ["proof (state)\nthis:\n  nsqn (rt (\\<sigma>' sip)) ip = sqn (rt (\\<sigma>' sip)) ip\n\ngoal (1 subgoal):\n 1. ip \\<in> vD (rt (\\<sigma>' sip)) \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "with \\<open>sqn (rt (\\<sigma> sip)) ip \\<le> sqn (rt (\\<sigma>' sip)) ip\\<close>"], ["proof (chain)\npicking this:\n  sqn (rt (\\<sigma> sip)) ip \\<le> sqn (rt (\\<sigma>' sip)) ip\n  nsqn (rt (\\<sigma>' sip)) ip = sqn (rt (\\<sigma>' sip)) ip", "have \"nsqn (rt (\\<sigma>' sip)) ip \\<ge> sqn (rt (\\<sigma> sip)) ip\""], ["proof (prove)\nusing this:\n  sqn (rt (\\<sigma> sip)) ip \\<le> sqn (rt (\\<sigma>' sip)) ip\n  nsqn (rt (\\<sigma>' sip)) ip = sqn (rt (\\<sigma>' sip)) ip\n\ngoal (1 subgoal):\n 1. sqn (rt (\\<sigma> sip)) ip \\<le> nsqn (rt (\\<sigma>' sip)) ip", "by simp"], ["proof (state)\nthis:\n  sqn (rt (\\<sigma> sip)) ip \\<le> nsqn (rt (\\<sigma>' sip)) ip\n\ngoal (1 subgoal):\n 1. ip \\<in> vD (rt (\\<sigma>' sip)) \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "with \\<open>sqn (rt (\\<sigma> sip)) ip > 1\\<close>"], ["proof (chain)\npicking this:\n  1 < sqn (rt (\\<sigma> sip)) ip\n  sqn (rt (\\<sigma> sip)) ip \\<le> nsqn (rt (\\<sigma>' sip)) ip", "have \"nsqn (rt (\\<sigma>' sip)) ip > sqn (rt (\\<sigma> sip)) ip - 1\""], ["proof (prove)\nusing this:\n  1 < sqn (rt (\\<sigma> sip)) ip\n  sqn (rt (\\<sigma> sip)) ip \\<le> nsqn (rt (\\<sigma>' sip)) ip\n\ngoal (1 subgoal):\n 1. sqn (rt (\\<sigma> sip)) ip - 1 < nsqn (rt (\\<sigma>' sip)) ip", "by simp"], ["proof (state)\nthis:\n  sqn (rt (\\<sigma> sip)) ip - 1 < nsqn (rt (\\<sigma>' sip)) ip\n\ngoal (1 subgoal):\n 1. ip \\<in> vD (rt (\\<sigma>' sip)) \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "with \\<open>nsqn (rt (\\<sigma> sip)) ip = sqn (rt (\\<sigma> sip)) ip - 1\\<close>"], ["proof (chain)\npicking this:\n  nsqn (rt (\\<sigma> sip)) ip = sqn (rt (\\<sigma> sip)) ip - 1\n  sqn (rt (\\<sigma> sip)) ip - 1 < nsqn (rt (\\<sigma>' sip)) ip", "have \"nsqn (rt (\\<sigma>' sip)) ip > nsqn (rt (\\<sigma> sip)) ip\""], ["proof (prove)\nusing this:\n  nsqn (rt (\\<sigma> sip)) ip = sqn (rt (\\<sigma> sip)) ip - 1\n  sqn (rt (\\<sigma> sip)) ip - 1 < nsqn (rt (\\<sigma>' sip)) ip\n\ngoal (1 subgoal):\n 1. nsqn (rt (\\<sigma> sip)) ip < nsqn (rt (\\<sigma>' sip)) ip", "by simp"], ["proof (state)\nthis:\n  nsqn (rt (\\<sigma> sip)) ip < nsqn (rt (\\<sigma>' sip)) ip\n\ngoal (1 subgoal):\n 1. ip \\<in> vD (rt (\\<sigma>' sip)) \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "with \\<open>sn = nsqn (rt (\\<sigma> sip)) ip\\<close>"], ["proof (chain)\npicking this:\n  sn = nsqn (rt (\\<sigma> sip)) ip\n  nsqn (rt (\\<sigma> sip)) ip < nsqn (rt (\\<sigma>' sip)) ip", "have \"nsqn (rt (\\<sigma>' sip)) ip > sn\""], ["proof (prove)\nusing this:\n  sn = nsqn (rt (\\<sigma> sip)) ip\n  nsqn (rt (\\<sigma> sip)) ip < nsqn (rt (\\<sigma>' sip)) ip\n\ngoal (1 subgoal):\n 1. sn < nsqn (rt (\\<sigma>' sip)) ip", "by simp"], ["proof (state)\nthis:\n  sn < nsqn (rt (\\<sigma>' sip)) ip\n\ngoal (1 subgoal):\n 1. ip \\<in> vD (rt (\\<sigma>' sip)) \\<Longrightarrow>\n    sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "thus ?thesis"], ["proof (prove)\nusing this:\n  sn < nsqn (rt (\\<sigma>' sip)) ip\n\ngoal (1 subgoal):\n 1. sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n    nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n    (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", ".."], ["proof (state)\nthis:\n  sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n  nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n  (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n  nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n  (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n  nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n  (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n  nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n  (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n\ngoal (1 subgoal):\n 1. sn = nsqn (rt (\\<sigma> sip)) ip \\<Longrightarrow>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "thus ?thesis"], ["proof (prove)\nusing this:\n  sn < nsqn (rt (\\<sigma>' sip)) ip \\<or>\n  nsqn (rt (\\<sigma>' sip)) ip = sn \\<and>\n  (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n\ngoal (1 subgoal):\n 1. sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "by (metis (mono_tags) le_cases not_le)"], ["proof (state)\nthis:\n  sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n  (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n   the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n  (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n   the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n\ngoal (1 subgoal):\n 1. ip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "with \\<open>ip\\<in>kD (rt (\\<sigma>' sip))\\<close>"], ["proof (chain)\npicking this:\n  ip \\<in> kD (rt (\\<sigma>' sip))\n  sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n  (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n   the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "show \"ip\\<in>kD (rt (\\<sigma>' sip)) \\<and> ?nsqnafter\""], ["proof (prove)\nusing this:\n  ip \\<in> kD (rt (\\<sigma>' sip))\n  sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n  (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n   the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n\ngoal (1 subgoal):\n 1. ip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", ".."], ["proof (state)\nthis:\n  ip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n  sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n  (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n   the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma quality_increases_rreq_rrep_props':\n    fixes sn ip hops sip\n  assumes \"\\<forall>j. quality_increases (\\<sigma> j) (\\<sigma>' j)\"\n      and \"1 \\<le> sn\"\n      and *: \"ip\\<in>kD(rt (\\<sigma> sip)) \\<and> sn \\<le> nsqn (rt (\\<sigma> sip)) ip\n                                \\<and> (nsqn (rt (\\<sigma> sip)) ip = sn\n                                    \\<longrightarrow> (the (dhops (rt (\\<sigma> sip)) ip) \\<le> hops\n                                          \\<or> the (flag (rt (\\<sigma> sip)) ip) = inv))\"\n    shows \"ip\\<in>kD(rt (\\<sigma>' sip)) \\<and> sn \\<le> nsqn (rt (\\<sigma>' sip)) ip\n                              \\<and> (nsqn (rt (\\<sigma>' sip)) ip = sn\n                                  \\<longrightarrow> (the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops\n                                        \\<or> the (flag (rt (\\<sigma>' sip)) ip) = inv))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "from assms(1)"], ["proof (chain)\npicking this:\n  \\<forall>j. quality_increases (\\<sigma> j) (\\<sigma>' j)", "have \"quality_increases (\\<sigma> sip) (\\<sigma>' sip)\""], ["proof (prove)\nusing this:\n  \\<forall>j. quality_increases (\\<sigma> j) (\\<sigma>' j)\n\ngoal (1 subgoal):\n 1. quality_increases (\\<sigma> sip) (\\<sigma>' sip)", ".."], ["proof (state)\nthis:\n  quality_increases (\\<sigma> sip) (\\<sigma>' sip)\n\ngoal (1 subgoal):\n 1. ip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "thus ?thesis"], ["proof (prove)\nusing this:\n  quality_increases (\\<sigma> sip) (\\<sigma>' sip)\n\ngoal (1 subgoal):\n 1. ip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "using assms(2-3)"], ["proof (prove)\nusing this:\n  quality_increases (\\<sigma> sip) (\\<sigma>' sip)\n  1 \\<le> sn\n  ip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  sn \\<le> nsqn (rt (\\<sigma> sip)) ip \\<and>\n  (nsqn (rt (\\<sigma> sip)) ip = sn \\<longrightarrow>\n   the (dhops (rt (\\<sigma> sip)) ip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma> sip)) ip) = Aodv_Basic.inv)\n\ngoal (1 subgoal):\n 1. ip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n    sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)", "by (rule quality_increases_rreq_rrep_props)"], ["proof (state)\nthis:\n  ip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n  sn \\<le> nsqn (rt (\\<sigma>' sip)) ip \\<and>\n  (nsqn (rt (\\<sigma>' sip)) ip = sn \\<longrightarrow>\n   the (dhops (rt (\\<sigma>' sip)) ip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma>' sip)) ip) = Aodv_Basic.inv)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rteq_quality_increases:\n  assumes \"\\<forall>j. j \\<noteq> i \\<longrightarrow> quality_increases (\\<sigma> j) (\\<sigma>' j)\"\n      and \"rt (\\<sigma>' i) = rt (\\<sigma> i)\"\n    shows \"\\<forall>j. quality_increases (\\<sigma> j) (\\<sigma>' j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j. quality_increases (\\<sigma> j) (\\<sigma>' j)", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>j.\n     j \\<noteq> i \\<longrightarrow>\n     quality_increases (\\<sigma> j) (\\<sigma>' j)\n  rt (\\<sigma>' i) = rt (\\<sigma> i)\n\ngoal (1 subgoal):\n 1. \\<forall>j. quality_increases (\\<sigma> j) (\\<sigma>' j)", "by clarsimp (metis order_refl quality_increasesI rt_fresher_refl)"], ["", "definition msg_fresh :: \"(ip \\<Rightarrow> state) \\<Rightarrow> msg \\<Rightarrow> bool\"\nwhere \"msg_fresh \\<sigma> m \\<equiv>\n         case m of Rreq hopsc _ _ _ oipc osnc sipc _ \\<Rightarrow> osnc \\<ge> 1 \\<and> (sipc \\<noteq> oipc \\<longrightarrow>\n                       oipc\\<in>kD(rt (\\<sigma> sipc)) \\<and> nsqn (rt (\\<sigma> sipc)) oipc \\<ge> osnc\n                       \\<and> (nsqn (rt (\\<sigma> sipc)) oipc = osnc\n                             \\<longrightarrow> (hopsc \\<ge> the (dhops (rt (\\<sigma> sipc)) oipc)\n                                  \\<or> the (flag (rt (\\<sigma> sipc)) oipc) = inv)))\n                   | Rrep hopsc dipc dsnc _ sipc \\<Rightarrow> dsnc \\<ge> 1 \\<and> (sipc \\<noteq> dipc \\<longrightarrow>\n                       dipc\\<in>kD(rt (\\<sigma> sipc)) \\<and> nsqn (rt (\\<sigma> sipc)) dipc \\<ge> dsnc\n                       \\<and> (nsqn (rt (\\<sigma> sipc)) dipc = dsnc\n                             \\<longrightarrow> (hopsc \\<ge> the (dhops (rt (\\<sigma> sipc)) dipc)\n                                   \\<or> the (flag (rt (\\<sigma> sipc)) dipc) = inv)))\n                   | Rerr destsc sipc \\<Rightarrow> (\\<forall>ripc\\<in>dom(destsc). (ripc\\<in>kD(rt (\\<sigma> sipc))\n                                         \\<and> the (destsc ripc) - 1 \\<le> nsqn (rt (\\<sigma> sipc)) ripc))\n                   | _ \\<Rightarrow> True\""], ["", "lemma msg_fresh [simp]:\n  \"\\<And>hops dip dsn dsk oip osn sip handled.\n           msg_fresh \\<sigma> (Rreq hops dip dsn dsk oip osn sip handled) =\n                            (osn \\<ge> 1 \\<and> (sip \\<noteq> oip \\<longrightarrow> oip\\<in>kD(rt (\\<sigma> sip))\n                                     \\<and> nsqn (rt (\\<sigma> sip)) oip \\<ge> osn\n                                     \\<and> (nsqn (rt (\\<sigma> sip)) oip = osn\n                                           \\<longrightarrow> (hops \\<ge> the (dhops (rt (\\<sigma> sip)) oip)\n                                                \\<or> the (flag (rt (\\<sigma> sip)) oip) = inv))))\"\n  \"\\<And>hops dip dsn oip sip. msg_fresh \\<sigma> (Rrep hops dip dsn oip sip) =\n                            (dsn \\<ge> 1 \\<and> (sip \\<noteq> dip \\<longrightarrow> dip\\<in>kD(rt (\\<sigma> sip))\n                                     \\<and> nsqn (rt (\\<sigma> sip)) dip \\<ge> dsn\n                                     \\<and> (nsqn (rt (\\<sigma> sip)) dip = dsn\n                                           \\<longrightarrow> (hops \\<ge> the (dhops (rt (\\<sigma> sip)) dip))\n                                                 \\<or> the (flag (rt (\\<sigma> sip)) dip) = inv)))\"\n  \"\\<And>dests sip.            msg_fresh \\<sigma> (Rerr dests sip) =\n                            (\\<forall>ripc\\<in>dom(dests). (ripc\\<in>kD(rt (\\<sigma> sip))\n                                     \\<and> the (dests ripc) - 1 \\<le> nsqn (rt (\\<sigma> sip)) ripc))\"\n  \"\\<And>d dip.                msg_fresh \\<sigma> (Newpkt d dip)   = True\"\n  \"\\<And>d dip sip.            msg_fresh \\<sigma> (Pkt d dip sip)  = True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<And>hops dip dsn dsk oip osn sip handled.\n         msg_fresh \\<sigma> (Rreq hops dip dsn dsk oip osn sip handled) =\n         (1 \\<le> osn \\<and>\n          (sip \\<noteq> oip \\<longrightarrow>\n           oip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n           osn \\<le> nsqn (rt (\\<sigma> sip)) oip \\<and>\n           (nsqn (rt (\\<sigma> sip)) oip = osn \\<longrightarrow>\n            the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n            the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv)))) &&&\n     (\\<And>hops dip dsn oip sip.\n         msg_fresh \\<sigma> (Rrep hops dip dsn oip sip) =\n         (1 \\<le> dsn \\<and>\n          (sip \\<noteq> dip \\<longrightarrow>\n           dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n           dsn \\<le> nsqn (rt (\\<sigma> sip)) dip \\<and>\n           (nsqn (rt (\\<sigma> sip)) dip = dsn \\<longrightarrow>\n            the (dhops (rt (\\<sigma> sip)) dip) \\<le> hops \\<or>\n            the (flag (rt (\\<sigma> sip)) dip) = Aodv_Basic.inv))))) &&&\n    (\\<And>dests sip.\n        msg_fresh \\<sigma> (Rerr dests sip) =\n        (\\<forall>ripc\\<in>dom dests.\n            ripc \\<in> kD (rt (\\<sigma> sip)) \\<and>\n            the (dests ripc) - 1 \\<le> nsqn (rt (\\<sigma> sip)) ripc)) &&&\n    (\\<And>d dip. msg_fresh \\<sigma> (Newpkt d dip) = True) &&&\n    (\\<And>d dip sip. msg_fresh \\<sigma> (Pkt d dip sip) = True)", "unfolding msg_fresh_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<And>hops dip dsn dsk oip osn sip handled.\n         (case Rreq hops dip dsn dsk oip osn sip handled of\n          Rreq hopsc x xa xb oipc osnc sipc xc \\<Rightarrow>\n            1 \\<le> osnc \\<and>\n            (sipc \\<noteq> oipc \\<longrightarrow>\n             oipc \\<in> kD (rt (\\<sigma> sipc)) \\<and>\n             osnc \\<le> nsqn (rt (\\<sigma> sipc)) oipc \\<and>\n             (nsqn (rt (\\<sigma> sipc)) oipc = osnc \\<longrightarrow>\n              the (dhops (rt (\\<sigma> sipc)) oipc) \\<le> hopsc \\<or>\n              the (flag (rt (\\<sigma> sipc)) oipc) = Aodv_Basic.inv))\n          | Rrep hopsc dipc dsnc x sipc \\<Rightarrow>\n              1 \\<le> dsnc \\<and>\n              (sipc \\<noteq> dipc \\<longrightarrow>\n               dipc \\<in> kD (rt (\\<sigma> sipc)) \\<and>\n               dsnc \\<le> nsqn (rt (\\<sigma> sipc)) dipc \\<and>\n               (nsqn (rt (\\<sigma> sipc)) dipc = dsnc \\<longrightarrow>\n                the (dhops (rt (\\<sigma> sipc)) dipc) \\<le> hopsc \\<or>\n                the (flag (rt (\\<sigma> sipc)) dipc) = Aodv_Basic.inv))\n          | Rerr destsc sipc \\<Rightarrow>\n              \\<forall>ripc\\<in>dom destsc.\n                 ripc \\<in> kD (rt (\\<sigma> sipc)) \\<and>\n                 the (destsc ripc) - 1 \\<le> nsqn (rt (\\<sigma> sipc)) ripc\n          | _ \\<Rightarrow> True) =\n         (1 \\<le> osn \\<and>\n          (sip \\<noteq> oip \\<longrightarrow>\n           oip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n           osn \\<le> nsqn (rt (\\<sigma> sip)) oip \\<and>\n           (nsqn (rt (\\<sigma> sip)) oip = osn \\<longrightarrow>\n            the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n            the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv)))) &&&\n     (\\<And>hops dip dsn oip sip.\n         (case Rrep hops dip dsn oip sip of\n          Rreq hopsc x xa xb oipc osnc sipc xc \\<Rightarrow>\n            1 \\<le> osnc \\<and>\n            (sipc \\<noteq> oipc \\<longrightarrow>\n             oipc \\<in> kD (rt (\\<sigma> sipc)) \\<and>\n             osnc \\<le> nsqn (rt (\\<sigma> sipc)) oipc \\<and>\n             (nsqn (rt (\\<sigma> sipc)) oipc = osnc \\<longrightarrow>\n              the (dhops (rt (\\<sigma> sipc)) oipc) \\<le> hopsc \\<or>\n              the (flag (rt (\\<sigma> sipc)) oipc) = Aodv_Basic.inv))\n          | Rrep hopsc dipc dsnc x sipc \\<Rightarrow>\n              1 \\<le> dsnc \\<and>\n              (sipc \\<noteq> dipc \\<longrightarrow>\n               dipc \\<in> kD (rt (\\<sigma> sipc)) \\<and>\n               dsnc \\<le> nsqn (rt (\\<sigma> sipc)) dipc \\<and>\n               (nsqn (rt (\\<sigma> sipc)) dipc = dsnc \\<longrightarrow>\n                the (dhops (rt (\\<sigma> sipc)) dipc) \\<le> hopsc \\<or>\n                the (flag (rt (\\<sigma> sipc)) dipc) = Aodv_Basic.inv))\n          | Rerr destsc sipc \\<Rightarrow>\n              \\<forall>ripc\\<in>dom destsc.\n                 ripc \\<in> kD (rt (\\<sigma> sipc)) \\<and>\n                 the (destsc ripc) - 1 \\<le> nsqn (rt (\\<sigma> sipc)) ripc\n          | _ \\<Rightarrow> True) =\n         (1 \\<le> dsn \\<and>\n          (sip \\<noteq> dip \\<longrightarrow>\n           dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n           dsn \\<le> nsqn (rt (\\<sigma> sip)) dip \\<and>\n           (nsqn (rt (\\<sigma> sip)) dip = dsn \\<longrightarrow>\n            the (dhops (rt (\\<sigma> sip)) dip) \\<le> hops \\<or>\n            the (flag (rt (\\<sigma> sip)) dip) = Aodv_Basic.inv))))) &&&\n    (\\<And>dests sip.\n        (case Rerr dests sip of\n         Rreq hopsc x xa xb oipc osnc sipc xc \\<Rightarrow>\n           1 \\<le> osnc \\<and>\n           (sipc \\<noteq> oipc \\<longrightarrow>\n            oipc \\<in> kD (rt (\\<sigma> sipc)) \\<and>\n            osnc \\<le> nsqn (rt (\\<sigma> sipc)) oipc \\<and>\n            (nsqn (rt (\\<sigma> sipc)) oipc = osnc \\<longrightarrow>\n             the (dhops (rt (\\<sigma> sipc)) oipc) \\<le> hopsc \\<or>\n             the (flag (rt (\\<sigma> sipc)) oipc) = Aodv_Basic.inv))\n         | Rrep hopsc dipc dsnc x sipc \\<Rightarrow>\n             1 \\<le> dsnc \\<and>\n             (sipc \\<noteq> dipc \\<longrightarrow>\n              dipc \\<in> kD (rt (\\<sigma> sipc)) \\<and>\n              dsnc \\<le> nsqn (rt (\\<sigma> sipc)) dipc \\<and>\n              (nsqn (rt (\\<sigma> sipc)) dipc = dsnc \\<longrightarrow>\n               the (dhops (rt (\\<sigma> sipc)) dipc) \\<le> hopsc \\<or>\n               the (flag (rt (\\<sigma> sipc)) dipc) = Aodv_Basic.inv))\n         | Rerr destsc sipc \\<Rightarrow>\n             \\<forall>ripc\\<in>dom destsc.\n                ripc \\<in> kD (rt (\\<sigma> sipc)) \\<and>\n                the (destsc ripc) - 1 \\<le> nsqn (rt (\\<sigma> sipc)) ripc\n         | _ \\<Rightarrow> True) =\n        (\\<forall>ripc\\<in>dom dests.\n            ripc \\<in> kD (rt (\\<sigma> sip)) \\<and>\n            the (dests ripc) - 1 \\<le> nsqn (rt (\\<sigma> sip)) ripc)) &&&\n    (\\<And>d dip.\n        (case Newpkt d dip of\n         Rreq hopsc x xa xb oipc osnc sipc xc \\<Rightarrow>\n           1 \\<le> osnc \\<and>\n           (sipc \\<noteq> oipc \\<longrightarrow>\n            oipc \\<in> kD (rt (\\<sigma> sipc)) \\<and>\n            osnc \\<le> nsqn (rt (\\<sigma> sipc)) oipc \\<and>\n            (nsqn (rt (\\<sigma> sipc)) oipc = osnc \\<longrightarrow>\n             the (dhops (rt (\\<sigma> sipc)) oipc) \\<le> hopsc \\<or>\n             the (flag (rt (\\<sigma> sipc)) oipc) = Aodv_Basic.inv))\n         | Rrep hopsc dipc dsnc x sipc \\<Rightarrow>\n             1 \\<le> dsnc \\<and>\n             (sipc \\<noteq> dipc \\<longrightarrow>\n              dipc \\<in> kD (rt (\\<sigma> sipc)) \\<and>\n              dsnc \\<le> nsqn (rt (\\<sigma> sipc)) dipc \\<and>\n              (nsqn (rt (\\<sigma> sipc)) dipc = dsnc \\<longrightarrow>\n               the (dhops (rt (\\<sigma> sipc)) dipc) \\<le> hopsc \\<or>\n               the (flag (rt (\\<sigma> sipc)) dipc) = Aodv_Basic.inv))\n         | Rerr destsc sipc \\<Rightarrow>\n             \\<forall>ripc\\<in>dom destsc.\n                ripc \\<in> kD (rt (\\<sigma> sipc)) \\<and>\n                the (destsc ripc) - 1 \\<le> nsqn (rt (\\<sigma> sipc)) ripc\n         | _ \\<Rightarrow> True) =\n        True) &&&\n    (\\<And>d dip sip.\n        (case Pkt d dip sip of\n         Rreq hopsc x xa xb oipc osnc sipc xc \\<Rightarrow>\n           1 \\<le> osnc \\<and>\n           (sipc \\<noteq> oipc \\<longrightarrow>\n            oipc \\<in> kD (rt (\\<sigma> sipc)) \\<and>\n            osnc \\<le> nsqn (rt (\\<sigma> sipc)) oipc \\<and>\n            (nsqn (rt (\\<sigma> sipc)) oipc = osnc \\<longrightarrow>\n             the (dhops (rt (\\<sigma> sipc)) oipc) \\<le> hopsc \\<or>\n             the (flag (rt (\\<sigma> sipc)) oipc) = Aodv_Basic.inv))\n         | Rrep hopsc dipc dsnc x sipc \\<Rightarrow>\n             1 \\<le> dsnc \\<and>\n             (sipc \\<noteq> dipc \\<longrightarrow>\n              dipc \\<in> kD (rt (\\<sigma> sipc)) \\<and>\n              dsnc \\<le> nsqn (rt (\\<sigma> sipc)) dipc \\<and>\n              (nsqn (rt (\\<sigma> sipc)) dipc = dsnc \\<longrightarrow>\n               the (dhops (rt (\\<sigma> sipc)) dipc) \\<le> hopsc \\<or>\n               the (flag (rt (\\<sigma> sipc)) dipc) = Aodv_Basic.inv))\n         | Rerr destsc sipc \\<Rightarrow>\n             \\<forall>ripc\\<in>dom destsc.\n                ripc \\<in> kD (rt (\\<sigma> sipc)) \\<and>\n                the (destsc ripc) - 1 \\<le> nsqn (rt (\\<sigma> sipc)) ripc\n         | _ \\<Rightarrow> True) =\n        True)", "by simp_all"], ["", "lemma msg_fresh_inc_sn [simp, elim]:\n  \"msg_fresh \\<sigma> m \\<Longrightarrow> rreq_rrep_sn m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma> m \\<Longrightarrow> rreq_rrep_sn m", "by (cases m) simp_all"], ["", "lemma recv_msg_fresh_inc_sn [simp, elim]:\n  \"orecvmsg (msg_fresh) \\<sigma> m \\<Longrightarrow> recvmsg rreq_rrep_sn m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. orecvmsg msg_fresh \\<sigma> m \\<Longrightarrow> recvmsg rreq_rrep_sn m", "by (cases m) simp_all"], ["", "lemma rreq_nsqn_is_fresh [simp]:\n  fixes \\<sigma> msg hops dip dsn dsk oip osn sip handled\n  assumes \"rreq_rrep_fresh (rt (\\<sigma> sip)) (Rreq hops dip dsn dsk oip osn sip handled)\"\n      and \"rreq_rrep_sn (Rreq hops dip dsn dsk oip osn sip handled)\"\n  shows \"msg_fresh \\<sigma> (Rreq hops dip dsn dsk oip osn sip handled)\"\n        (is \"msg_fresh \\<sigma> ?msg\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma> (Rreq hops dip dsn dsk oip osn sip handled)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma> (Rreq hops dip dsn dsk oip osn sip handled)", "let ?rt = \"rt (\\<sigma> sip)\""], ["proof (state)\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma> (Rreq hops dip dsn dsk oip osn sip handled)", "from assms(2)"], ["proof (chain)\npicking this:\n  rreq_rrep_sn (Rreq hops dip dsn dsk oip osn sip handled)", "have \"1 \\<le> osn\""], ["proof (prove)\nusing this:\n  rreq_rrep_sn (Rreq hops dip dsn dsk oip osn sip handled)\n\ngoal (1 subgoal):\n 1. 1 \\<le> osn", "by simp"], ["proof (state)\nthis:\n  1 \\<le> osn\n\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma> (Rreq hops dip dsn dsk oip osn sip handled)", "thus ?thesis"], ["proof (prove)\nusing this:\n  1 \\<le> osn\n\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma> (Rreq hops dip dsn dsk oip osn sip handled)", "unfolding msg_fresh_def"], ["proof (prove)\nusing this:\n  1 \\<le> osn\n\ngoal (1 subgoal):\n 1. case Rreq hops dip dsn dsk oip osn sip handled of\n    Rreq hopsc x xa xb oipc osnc sipc xc \\<Rightarrow>\n      1 \\<le> osnc \\<and>\n      (sipc \\<noteq> oipc \\<longrightarrow>\n       oipc \\<in> kD (rt (\\<sigma> sipc)) \\<and>\n       osnc \\<le> nsqn (rt (\\<sigma> sipc)) oipc \\<and>\n       (nsqn (rt (\\<sigma> sipc)) oipc = osnc \\<longrightarrow>\n        the (dhops (rt (\\<sigma> sipc)) oipc) \\<le> hopsc \\<or>\n        the (flag (rt (\\<sigma> sipc)) oipc) = Aodv_Basic.inv))\n    | Rrep hopsc dipc dsnc x sipc \\<Rightarrow>\n        1 \\<le> dsnc \\<and>\n        (sipc \\<noteq> dipc \\<longrightarrow>\n         dipc \\<in> kD (rt (\\<sigma> sipc)) \\<and>\n         dsnc \\<le> nsqn (rt (\\<sigma> sipc)) dipc \\<and>\n         (nsqn (rt (\\<sigma> sipc)) dipc = dsnc \\<longrightarrow>\n          the (dhops (rt (\\<sigma> sipc)) dipc) \\<le> hopsc \\<or>\n          the (flag (rt (\\<sigma> sipc)) dipc) = Aodv_Basic.inv))\n    | Rerr destsc sipc \\<Rightarrow>\n        \\<forall>ripc\\<in>dom destsc.\n           ripc \\<in> kD (rt (\\<sigma> sipc)) \\<and>\n           the (destsc ripc) - 1 \\<le> nsqn (rt (\\<sigma> sipc)) ripc\n    | _ \\<Rightarrow> True", "proof (simp only: msg.case, intro conjI impI)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn\\<rbrakk> \\<Longrightarrow> True\n 2. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn; sip \\<noteq> oip\\<rbrakk>\n    \\<Longrightarrow> oip \\<in> kD (rt (\\<sigma> sip))\n 3. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn; sip \\<noteq> oip\\<rbrakk>\n    \\<Longrightarrow> osn \\<le> nsqn (rt (\\<sigma> sip)) oip\n 4. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn; sip \\<noteq> oip;\n     nsqn (rt (\\<sigma> sip)) oip = osn\\<rbrakk>\n    \\<Longrightarrow> the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n                      the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv", "assume \"sip \\<noteq> oip\""], ["proof (state)\nthis:\n  sip \\<noteq> oip\n\ngoal (4 subgoals):\n 1. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn\\<rbrakk> \\<Longrightarrow> True\n 2. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn; sip \\<noteq> oip\\<rbrakk>\n    \\<Longrightarrow> oip \\<in> kD (rt (\\<sigma> sip))\n 3. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn; sip \\<noteq> oip\\<rbrakk>\n    \\<Longrightarrow> osn \\<le> nsqn (rt (\\<sigma> sip)) oip\n 4. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn; sip \\<noteq> oip;\n     nsqn (rt (\\<sigma> sip)) oip = osn\\<rbrakk>\n    \\<Longrightarrow> the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n                      the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv", "with assms(1)"], ["proof (chain)\npicking this:\n  rreq_rrep_fresh (rt (\\<sigma> sip))\n   (Rreq hops dip dsn dsk oip osn sip handled)\n  sip \\<noteq> oip", "show \"oip \\<in> kD(?rt)\""], ["proof (prove)\nusing this:\n  rreq_rrep_fresh (rt (\\<sigma> sip))\n   (Rreq hops dip dsn dsk oip osn sip handled)\n  sip \\<noteq> oip\n\ngoal (1 subgoal):\n 1. oip \\<in> kD (rt (\\<sigma> sip))", "by simp"], ["proof (state)\nthis:\n  oip \\<in> kD (rt (\\<sigma> sip))\n\ngoal (3 subgoals):\n 1. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn\\<rbrakk> \\<Longrightarrow> True\n 2. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn; sip \\<noteq> oip\\<rbrakk>\n    \\<Longrightarrow> osn \\<le> nsqn (rt (\\<sigma> sip)) oip\n 3. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn; sip \\<noteq> oip;\n     nsqn (rt (\\<sigma> sip)) oip = osn\\<rbrakk>\n    \\<Longrightarrow> the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n                      the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn\\<rbrakk> \\<Longrightarrow> True\n 2. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn; sip \\<noteq> oip\\<rbrakk>\n    \\<Longrightarrow> osn \\<le> nsqn (rt (\\<sigma> sip)) oip\n 3. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn; sip \\<noteq> oip;\n     nsqn (rt (\\<sigma> sip)) oip = osn\\<rbrakk>\n    \\<Longrightarrow> the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n                      the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv", "assume \"sip \\<noteq> oip\"\n         and \"nsqn ?rt oip = osn\""], ["proof (state)\nthis:\n  sip \\<noteq> oip\n  nsqn (rt (\\<sigma> sip)) oip = osn\n\ngoal (3 subgoals):\n 1. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn\\<rbrakk> \\<Longrightarrow> True\n 2. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn; sip \\<noteq> oip\\<rbrakk>\n    \\<Longrightarrow> osn \\<le> nsqn (rt (\\<sigma> sip)) oip\n 3. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn; sip \\<noteq> oip;\n     nsqn (rt (\\<sigma> sip)) oip = osn\\<rbrakk>\n    \\<Longrightarrow> the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n                      the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv", "show \"the (dhops ?rt oip) \\<le> hops \\<or> the (flag ?rt oip) = inv\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n    the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv", "proof (cases \"oip\\<in>vD(?rt)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. oip \\<in> vD (rt (\\<sigma> sip)) \\<Longrightarrow>\n    the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n    the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv\n 2. oip \\<notin> vD (rt (\\<sigma> sip)) \\<Longrightarrow>\n    the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n    the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv", "assume \"oip\\<in>vD(?rt)\""], ["proof (state)\nthis:\n  oip \\<in> vD (rt (\\<sigma> sip))\n\ngoal (2 subgoals):\n 1. oip \\<in> vD (rt (\\<sigma> sip)) \\<Longrightarrow>\n    the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n    the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv\n 2. oip \\<notin> vD (rt (\\<sigma> sip)) \\<Longrightarrow>\n    the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n    the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv", "hence \"nsqn ?rt oip = sqn ?rt oip\""], ["proof (prove)\nusing this:\n  oip \\<in> vD (rt (\\<sigma> sip))\n\ngoal (1 subgoal):\n 1. nsqn (rt (\\<sigma> sip)) oip = sqn (rt (\\<sigma> sip)) oip", ".."], ["proof (state)\nthis:\n  nsqn (rt (\\<sigma> sip)) oip = sqn (rt (\\<sigma> sip)) oip\n\ngoal (2 subgoals):\n 1. oip \\<in> vD (rt (\\<sigma> sip)) \\<Longrightarrow>\n    the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n    the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv\n 2. oip \\<notin> vD (rt (\\<sigma> sip)) \\<Longrightarrow>\n    the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n    the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv", "with \\<open>nsqn ?rt oip = osn\\<close>"], ["proof (chain)\npicking this:\n  nsqn (rt (\\<sigma> sip)) oip = osn\n  nsqn (rt (\\<sigma> sip)) oip = sqn (rt (\\<sigma> sip)) oip", "have \"sqn ?rt oip = osn\""], ["proof (prove)\nusing this:\n  nsqn (rt (\\<sigma> sip)) oip = osn\n  nsqn (rt (\\<sigma> sip)) oip = sqn (rt (\\<sigma> sip)) oip\n\ngoal (1 subgoal):\n 1. sqn (rt (\\<sigma> sip)) oip = osn", "by simp"], ["proof (state)\nthis:\n  sqn (rt (\\<sigma> sip)) oip = osn\n\ngoal (2 subgoals):\n 1. oip \\<in> vD (rt (\\<sigma> sip)) \\<Longrightarrow>\n    the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n    the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv\n 2. oip \\<notin> vD (rt (\\<sigma> sip)) \\<Longrightarrow>\n    the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n    the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv", "with assms(1) and \\<open>sip \\<noteq> oip\\<close>"], ["proof (chain)\npicking this:\n  rreq_rrep_fresh (rt (\\<sigma> sip))\n   (Rreq hops dip dsn dsk oip osn sip handled)\n  sip \\<noteq> oip\n  sqn (rt (\\<sigma> sip)) oip = osn", "have \"the (dhops ?rt oip) \\<le> hops\""], ["proof (prove)\nusing this:\n  rreq_rrep_fresh (rt (\\<sigma> sip))\n   (Rreq hops dip dsn dsk oip osn sip handled)\n  sip \\<noteq> oip\n  sqn (rt (\\<sigma> sip)) oip = osn\n\ngoal (1 subgoal):\n 1. the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops", "by simp"], ["proof (state)\nthis:\n  the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops\n\ngoal (2 subgoals):\n 1. oip \\<in> vD (rt (\\<sigma> sip)) \\<Longrightarrow>\n    the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n    the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv\n 2. oip \\<notin> vD (rt (\\<sigma> sip)) \\<Longrightarrow>\n    the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n    the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv", "thus ?thesis"], ["proof (prove)\nusing this:\n  the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops\n\ngoal (1 subgoal):\n 1. the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n    the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv", ".."], ["proof (state)\nthis:\n  the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n  the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv\n\ngoal (1 subgoal):\n 1. oip \\<notin> vD (rt (\\<sigma> sip)) \\<Longrightarrow>\n    the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n    the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. oip \\<notin> vD (rt (\\<sigma> sip)) \\<Longrightarrow>\n    the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n    the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv", "assume \"oip\\<notin>vD(?rt)\""], ["proof (state)\nthis:\n  oip \\<notin> vD (rt (\\<sigma> sip))\n\ngoal (1 subgoal):\n 1. oip \\<notin> vD (rt (\\<sigma> sip)) \\<Longrightarrow>\n    the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n    the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv", "moreover"], ["proof (state)\nthis:\n  oip \\<notin> vD (rt (\\<sigma> sip))\n\ngoal (1 subgoal):\n 1. oip \\<notin> vD (rt (\\<sigma> sip)) \\<Longrightarrow>\n    the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n    the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv", "from assms(1) and \\<open>sip \\<noteq> oip\\<close>"], ["proof (chain)\npicking this:\n  rreq_rrep_fresh (rt (\\<sigma> sip))\n   (Rreq hops dip dsn dsk oip osn sip handled)\n  sip \\<noteq> oip", "have \"oip\\<in>kD(?rt)\""], ["proof (prove)\nusing this:\n  rreq_rrep_fresh (rt (\\<sigma> sip))\n   (Rreq hops dip dsn dsk oip osn sip handled)\n  sip \\<noteq> oip\n\ngoal (1 subgoal):\n 1. oip \\<in> kD (rt (\\<sigma> sip))", "by simp"], ["proof (state)\nthis:\n  oip \\<in> kD (rt (\\<sigma> sip))\n\ngoal (1 subgoal):\n 1. oip \\<notin> vD (rt (\\<sigma> sip)) \\<Longrightarrow>\n    the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n    the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv", "ultimately"], ["proof (chain)\npicking this:\n  oip \\<notin> vD (rt (\\<sigma> sip))\n  oip \\<in> kD (rt (\\<sigma> sip))", "have \"oip\\<in>iD(?rt)\""], ["proof (prove)\nusing this:\n  oip \\<notin> vD (rt (\\<sigma> sip))\n  oip \\<in> kD (rt (\\<sigma> sip))\n\ngoal (1 subgoal):\n 1. oip \\<in> iD (rt (\\<sigma> sip))", "by auto"], ["proof (state)\nthis:\n  oip \\<in> iD (rt (\\<sigma> sip))\n\ngoal (1 subgoal):\n 1. oip \\<notin> vD (rt (\\<sigma> sip)) \\<Longrightarrow>\n    the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n    the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv", "hence \"the (flag ?rt oip) = inv\""], ["proof (prove)\nusing this:\n  oip \\<in> iD (rt (\\<sigma> sip))\n\ngoal (1 subgoal):\n 1. the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv", ".."], ["proof (state)\nthis:\n  the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv\n\ngoal (1 subgoal):\n 1. oip \\<notin> vD (rt (\\<sigma> sip)) \\<Longrightarrow>\n    the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n    the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv", "thus ?thesis"], ["proof (prove)\nusing this:\n  the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv\n\ngoal (1 subgoal):\n 1. the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n    the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv", ".."], ["proof (state)\nthis:\n  the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n  the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n  the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv\n\ngoal (2 subgoals):\n 1. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn\\<rbrakk> \\<Longrightarrow> True\n 2. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn; sip \\<noteq> oip\\<rbrakk>\n    \\<Longrightarrow> osn \\<le> nsqn (rt (\\<sigma> sip)) oip", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn\\<rbrakk> \\<Longrightarrow> True\n 2. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn; sip \\<noteq> oip\\<rbrakk>\n    \\<Longrightarrow> osn \\<le> nsqn (rt (\\<sigma> sip)) oip", "assume \"sip \\<noteq> oip\""], ["proof (state)\nthis:\n  sip \\<noteq> oip\n\ngoal (2 subgoals):\n 1. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn\\<rbrakk> \\<Longrightarrow> True\n 2. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn; sip \\<noteq> oip\\<rbrakk>\n    \\<Longrightarrow> osn \\<le> nsqn (rt (\\<sigma> sip)) oip", "with assms(1)"], ["proof (chain)\npicking this:\n  rreq_rrep_fresh (rt (\\<sigma> sip))\n   (Rreq hops dip dsn dsk oip osn sip handled)\n  sip \\<noteq> oip", "have \"osn \\<le> sqn ?rt oip\""], ["proof (prove)\nusing this:\n  rreq_rrep_fresh (rt (\\<sigma> sip))\n   (Rreq hops dip dsn dsk oip osn sip handled)\n  sip \\<noteq> oip\n\ngoal (1 subgoal):\n 1. osn \\<le> sqn (rt (\\<sigma> sip)) oip", "by auto"], ["proof (state)\nthis:\n  osn \\<le> sqn (rt (\\<sigma> sip)) oip\n\ngoal (2 subgoals):\n 1. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn\\<rbrakk> \\<Longrightarrow> True\n 2. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn; sip \\<noteq> oip\\<rbrakk>\n    \\<Longrightarrow> osn \\<le> nsqn (rt (\\<sigma> sip)) oip", "thus \"osn \\<le> nsqn (rt (\\<sigma> sip)) oip\""], ["proof (prove)\nusing this:\n  osn \\<le> sqn (rt (\\<sigma> sip)) oip\n\ngoal (1 subgoal):\n 1. osn \\<le> nsqn (rt (\\<sigma> sip)) oip", "proof (rule nat_le_eq_or_lt)"], ["proof (state)\ngoal (2 subgoals):\n 1. osn = sqn (rt (\\<sigma> sip)) oip \\<Longrightarrow>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip\n 2. osn < sqn (rt (\\<sigma> sip)) oip \\<Longrightarrow>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip", "assume \"osn < sqn ?rt oip\""], ["proof (state)\nthis:\n  osn < sqn (rt (\\<sigma> sip)) oip\n\ngoal (2 subgoals):\n 1. osn = sqn (rt (\\<sigma> sip)) oip \\<Longrightarrow>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip\n 2. osn < sqn (rt (\\<sigma> sip)) oip \\<Longrightarrow>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip", "hence \"osn \\<le> sqn ?rt oip - 1\""], ["proof (prove)\nusing this:\n  osn < sqn (rt (\\<sigma> sip)) oip\n\ngoal (1 subgoal):\n 1. osn \\<le> sqn (rt (\\<sigma> sip)) oip - 1", "by simp"], ["proof (state)\nthis:\n  osn \\<le> sqn (rt (\\<sigma> sip)) oip - 1\n\ngoal (2 subgoals):\n 1. osn = sqn (rt (\\<sigma> sip)) oip \\<Longrightarrow>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip\n 2. osn < sqn (rt (\\<sigma> sip)) oip \\<Longrightarrow>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip", "also"], ["proof (state)\nthis:\n  osn \\<le> sqn (rt (\\<sigma> sip)) oip - 1\n\ngoal (2 subgoals):\n 1. osn = sqn (rt (\\<sigma> sip)) oip \\<Longrightarrow>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip\n 2. osn < sqn (rt (\\<sigma> sip)) oip \\<Longrightarrow>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip", "have \"... \\<le> nsqn ?rt oip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqn (rt (\\<sigma> sip)) oip - 1 \\<le> nsqn (rt (\\<sigma> sip)) oip", "by (rule sqn_nsqn)"], ["proof (state)\nthis:\n  sqn (rt (\\<sigma> sip)) oip - 1 \\<le> nsqn (rt (\\<sigma> sip)) oip\n\ngoal (2 subgoals):\n 1. osn = sqn (rt (\\<sigma> sip)) oip \\<Longrightarrow>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip\n 2. osn < sqn (rt (\\<sigma> sip)) oip \\<Longrightarrow>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip", "finally"], ["proof (chain)\npicking this:\n  osn \\<le> nsqn (rt (\\<sigma> sip)) oip", "show \"osn \\<le> nsqn ?rt oip\""], ["proof (prove)\nusing this:\n  osn \\<le> nsqn (rt (\\<sigma> sip)) oip\n\ngoal (1 subgoal):\n 1. osn \\<le> nsqn (rt (\\<sigma> sip)) oip", "."], ["proof (state)\nthis:\n  osn \\<le> nsqn (rt (\\<sigma> sip)) oip\n\ngoal (1 subgoal):\n 1. osn = sqn (rt (\\<sigma> sip)) oip \\<Longrightarrow>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. osn = sqn (rt (\\<sigma> sip)) oip \\<Longrightarrow>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip", "assume \"osn = sqn ?rt oip\""], ["proof (state)\nthis:\n  osn = sqn (rt (\\<sigma> sip)) oip\n\ngoal (1 subgoal):\n 1. osn = sqn (rt (\\<sigma> sip)) oip \\<Longrightarrow>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip", "with assms(1) and \\<open>sip \\<noteq> oip\\<close>"], ["proof (chain)\npicking this:\n  rreq_rrep_fresh (rt (\\<sigma> sip))\n   (Rreq hops dip dsn dsk oip osn sip handled)\n  sip \\<noteq> oip\n  osn = sqn (rt (\\<sigma> sip)) oip", "have \"oip\\<in>kD(?rt)\"\n                                       and \"the (flag ?rt oip) = val\""], ["proof (prove)\nusing this:\n  rreq_rrep_fresh (rt (\\<sigma> sip))\n   (Rreq hops dip dsn dsk oip osn sip handled)\n  sip \\<noteq> oip\n  osn = sqn (rt (\\<sigma> sip)) oip\n\ngoal (1 subgoal):\n 1. oip \\<in> kD (rt (\\<sigma> sip)) &&&\n    the (flag (rt (\\<sigma> sip)) oip) = val", "by auto"], ["proof (state)\nthis:\n  oip \\<in> kD (rt (\\<sigma> sip))\n  the (flag (rt (\\<sigma> sip)) oip) = val\n\ngoal (1 subgoal):\n 1. osn = sqn (rt (\\<sigma> sip)) oip \\<Longrightarrow>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip", "hence \"nsqn ?rt oip = sqn ?rt oip\""], ["proof (prove)\nusing this:\n  oip \\<in> kD (rt (\\<sigma> sip))\n  the (flag (rt (\\<sigma> sip)) oip) = val\n\ngoal (1 subgoal):\n 1. nsqn (rt (\\<sigma> sip)) oip = sqn (rt (\\<sigma> sip)) oip", ".."], ["proof (state)\nthis:\n  nsqn (rt (\\<sigma> sip)) oip = sqn (rt (\\<sigma> sip)) oip\n\ngoal (1 subgoal):\n 1. osn = sqn (rt (\\<sigma> sip)) oip \\<Longrightarrow>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip", "with \\<open>osn = sqn ?rt oip\\<close>"], ["proof (chain)\npicking this:\n  osn = sqn (rt (\\<sigma> sip)) oip\n  nsqn (rt (\\<sigma> sip)) oip = sqn (rt (\\<sigma> sip)) oip", "have \"nsqn ?rt oip = osn\""], ["proof (prove)\nusing this:\n  osn = sqn (rt (\\<sigma> sip)) oip\n  nsqn (rt (\\<sigma> sip)) oip = sqn (rt (\\<sigma> sip)) oip\n\ngoal (1 subgoal):\n 1. nsqn (rt (\\<sigma> sip)) oip = osn", "by simp"], ["proof (state)\nthis:\n  nsqn (rt (\\<sigma> sip)) oip = osn\n\ngoal (1 subgoal):\n 1. osn = sqn (rt (\\<sigma> sip)) oip \\<Longrightarrow>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip", "thus \"osn \\<le> nsqn ?rt oip\""], ["proof (prove)\nusing this:\n  nsqn (rt (\\<sigma> sip)) oip = osn\n\ngoal (1 subgoal):\n 1. osn \\<le> nsqn (rt (\\<sigma> sip)) oip", "by simp"], ["proof (state)\nthis:\n  osn \\<le> nsqn (rt (\\<sigma> sip)) oip\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  osn \\<le> nsqn (rt (\\<sigma> sip)) oip\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> osn; 1 \\<le> osn\\<rbrakk> \\<Longrightarrow> True", "qed simp"], ["proof (state)\nthis:\n  msg_fresh \\<sigma> (Rreq hops dip dsn dsk oip osn sip handled)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rrep_nsqn_is_fresh [simp]:\n  fixes \\<sigma> msg hops dip dsn oip sip\n  assumes \"rreq_rrep_fresh (rt (\\<sigma> sip)) (Rrep hops dip dsn oip sip)\"\n      and \"rreq_rrep_sn (Rrep hops dip dsn oip sip)\"\n  shows \"msg_fresh \\<sigma> (Rrep hops dip dsn oip sip)\"\n        (is \"msg_fresh \\<sigma> ?msg\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma> (Rrep hops dip dsn oip sip)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma> (Rrep hops dip dsn oip sip)", "let ?rt = \"rt (\\<sigma> sip)\""], ["proof (state)\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma> (Rrep hops dip dsn oip sip)", "from assms"], ["proof (chain)\npicking this:\n  rreq_rrep_fresh (rt (\\<sigma> sip)) (Rrep hops dip dsn oip sip)\n  rreq_rrep_sn (Rrep hops dip dsn oip sip)", "have \"sip \\<noteq> dip \\<longrightarrow> dip\\<in>kD(?rt) \\<and> sqn ?rt dip = dsn \\<and> the (flag ?rt dip) = val\""], ["proof (prove)\nusing this:\n  rreq_rrep_fresh (rt (\\<sigma> sip)) (Rrep hops dip dsn oip sip)\n  rreq_rrep_sn (Rrep hops dip dsn oip sip)\n\ngoal (1 subgoal):\n 1. sip \\<noteq> dip \\<longrightarrow>\n    dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n    sqn (rt (\\<sigma> sip)) dip = dsn \\<and>\n    the (flag (rt (\\<sigma> sip)) dip) = val", "by simp"], ["proof (state)\nthis:\n  sip \\<noteq> dip \\<longrightarrow>\n  dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  sqn (rt (\\<sigma> sip)) dip = dsn \\<and>\n  the (flag (rt (\\<sigma> sip)) dip) = val\n\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma> (Rrep hops dip dsn oip sip)", "hence \"sip \\<noteq> dip \\<longrightarrow> dip\\<in>kD(?rt) \\<and> nsqn ?rt dip \\<ge> dsn\""], ["proof (prove)\nusing this:\n  sip \\<noteq> dip \\<longrightarrow>\n  dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  sqn (rt (\\<sigma> sip)) dip = dsn \\<and>\n  the (flag (rt (\\<sigma> sip)) dip) = val\n\ngoal (1 subgoal):\n 1. sip \\<noteq> dip \\<longrightarrow>\n    dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n    dsn \\<le> nsqn (rt (\\<sigma> sip)) dip", "by clarsimp"], ["proof (state)\nthis:\n  sip \\<noteq> dip \\<longrightarrow>\n  dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  dsn \\<le> nsqn (rt (\\<sigma> sip)) dip\n\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma> (Rrep hops dip dsn oip sip)", "with assms"], ["proof (chain)\npicking this:\n  rreq_rrep_fresh (rt (\\<sigma> sip)) (Rrep hops dip dsn oip sip)\n  rreq_rrep_sn (Rrep hops dip dsn oip sip)\n  sip \\<noteq> dip \\<longrightarrow>\n  dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  dsn \\<le> nsqn (rt (\\<sigma> sip)) dip", "show \"msg_fresh \\<sigma> ?msg\""], ["proof (prove)\nusing this:\n  rreq_rrep_fresh (rt (\\<sigma> sip)) (Rrep hops dip dsn oip sip)\n  rreq_rrep_sn (Rrep hops dip dsn oip sip)\n  sip \\<noteq> dip \\<longrightarrow>\n  dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  dsn \\<le> nsqn (rt (\\<sigma> sip)) dip\n\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma> (Rrep hops dip dsn oip sip)", "by clarsimp"], ["proof (state)\nthis:\n  msg_fresh \\<sigma> (Rrep hops dip dsn oip sip)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rerr_nsqn_is_fresh [simp]:\n  fixes \\<sigma> msg dests sip\n  assumes \"rerr_invalid (rt (\\<sigma> sip)) (Rerr dests sip)\"\n  shows \"msg_fresh \\<sigma> (Rerr dests sip)\"\n        (is \"msg_fresh \\<sigma> ?msg\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma> (Rerr dests sip)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma> (Rerr dests sip)", "let ?rt = \"rt (\\<sigma> sip)\""], ["proof (state)\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma> (Rerr dests sip)", "from assms"], ["proof (chain)\npicking this:\n  rerr_invalid (rt (\\<sigma> sip)) (Rerr dests sip)", "have *: \"(\\<forall>rip\\<in>dom(dests). (rip\\<in>iD(rt (\\<sigma> sip))\n                                     \\<and> the (dests rip) = sqn (rt (\\<sigma> sip)) rip))\""], ["proof (prove)\nusing this:\n  rerr_invalid (rt (\\<sigma> sip)) (Rerr dests sip)\n\ngoal (1 subgoal):\n 1. \\<forall>rip\\<in>dom dests.\n       rip \\<in> iD (rt (\\<sigma> sip)) \\<and>\n       the (dests rip) = sqn (rt (\\<sigma> sip)) rip", "by clarsimp"], ["proof (state)\nthis:\n  \\<forall>rip\\<in>dom dests.\n     rip \\<in> iD (rt (\\<sigma> sip)) \\<and>\n     the (dests rip) = sqn (rt (\\<sigma> sip)) rip\n\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma> (Rerr dests sip)", "have \"(\\<forall>rip\\<in>dom(dests). (rip\\<in>kD(rt (\\<sigma> sip))\n                                     \\<and> the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>rip\\<in>dom dests.\n       rip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n       the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>rip.\n       rip \\<in> dom dests \\<Longrightarrow>\n       rip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n       the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip", "fix rip"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>rip.\n       rip \\<in> dom dests \\<Longrightarrow>\n       rip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n       the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip", "assume \"rip \\<in> dom dests\""], ["proof (state)\nthis:\n  rip \\<in> dom dests\n\ngoal (1 subgoal):\n 1. \\<And>rip.\n       rip \\<in> dom dests \\<Longrightarrow>\n       rip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n       the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip", "with *"], ["proof (chain)\npicking this:\n  \\<forall>rip\\<in>dom dests.\n     rip \\<in> iD (rt (\\<sigma> sip)) \\<and>\n     the (dests rip) = sqn (rt (\\<sigma> sip)) rip\n  rip \\<in> dom dests", "have \"rip\\<in>iD(rt (\\<sigma> sip))\" and \"the (dests rip) = sqn (rt (\\<sigma> sip)) rip\""], ["proof (prove)\nusing this:\n  \\<forall>rip\\<in>dom dests.\n     rip \\<in> iD (rt (\\<sigma> sip)) \\<and>\n     the (dests rip) = sqn (rt (\\<sigma> sip)) rip\n  rip \\<in> dom dests\n\ngoal (1 subgoal):\n 1. rip \\<in> iD (rt (\\<sigma> sip)) &&&\n    the (dests rip) = sqn (rt (\\<sigma> sip)) rip", "by auto"], ["proof (state)\nthis:\n  rip \\<in> iD (rt (\\<sigma> sip))\n  the (dests rip) = sqn (rt (\\<sigma> sip)) rip\n\ngoal (1 subgoal):\n 1. \\<And>rip.\n       rip \\<in> dom dests \\<Longrightarrow>\n       rip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n       the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip", "from this(2)"], ["proof (chain)\npicking this:\n  the (dests rip) = sqn (rt (\\<sigma> sip)) rip", "have \"the (dests rip) - 1 = sqn (rt (\\<sigma> sip)) rip - 1\""], ["proof (prove)\nusing this:\n  the (dests rip) = sqn (rt (\\<sigma> sip)) rip\n\ngoal (1 subgoal):\n 1. the (dests rip) - 1 = sqn (rt (\\<sigma> sip)) rip - 1", "by simp"], ["proof (state)\nthis:\n  the (dests rip) - 1 = sqn (rt (\\<sigma> sip)) rip - 1\n\ngoal (1 subgoal):\n 1. \\<And>rip.\n       rip \\<in> dom dests \\<Longrightarrow>\n       rip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n       the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip", "also"], ["proof (state)\nthis:\n  the (dests rip) - 1 = sqn (rt (\\<sigma> sip)) rip - 1\n\ngoal (1 subgoal):\n 1. \\<And>rip.\n       rip \\<in> dom dests \\<Longrightarrow>\n       rip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n       the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip", "have \"... \\<le> nsqn (rt (\\<sigma> sip)) rip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqn (rt (\\<sigma> sip)) rip - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip", "by (rule sqn_nsqn)"], ["proof (state)\nthis:\n  sqn (rt (\\<sigma> sip)) rip - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip\n\ngoal (1 subgoal):\n 1. \\<And>rip.\n       rip \\<in> dom dests \\<Longrightarrow>\n       rip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n       the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip", "finally"], ["proof (chain)\npicking this:\n  the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip", "have \"the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip\""], ["proof (prove)\nusing this:\n  the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip\n\ngoal (1 subgoal):\n 1. the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip", "."], ["proof (state)\nthis:\n  the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip\n\ngoal (1 subgoal):\n 1. \\<And>rip.\n       rip \\<in> dom dests \\<Longrightarrow>\n       rip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n       the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip", "with \\<open>rip\\<in>iD(rt (\\<sigma> sip))\\<close>"], ["proof (chain)\npicking this:\n  rip \\<in> iD (rt (\\<sigma> sip))\n  the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip", "show \"rip\\<in>kD(rt (\\<sigma> sip)) \\<and> the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip\""], ["proof (prove)\nusing this:\n  rip \\<in> iD (rt (\\<sigma> sip))\n  the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip\n\ngoal (1 subgoal):\n 1. rip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n    the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip", "by clarsimp"], ["proof (state)\nthis:\n  rip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>rip\\<in>dom dests.\n     rip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n     the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip\n\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma> (Rerr dests sip)", "thus \"msg_fresh \\<sigma> ?msg\""], ["proof (prove)\nusing this:\n  \\<forall>rip\\<in>dom dests.\n     rip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n     the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip\n\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma> (Rerr dests sip)", "by simp"], ["proof (state)\nthis:\n  msg_fresh \\<sigma> (Rerr dests sip)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma quality_increases_msg_fresh [elim]:\n  assumes qinc: \"\\<forall>j. quality_increases (\\<sigma> j) (\\<sigma>' j)\"\n      and \"msg_fresh \\<sigma> m\"\n    shows \"msg_fresh \\<sigma>' m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma>' m", "using assms(2)"], ["proof (prove)\nusing this:\n  msg_fresh \\<sigma> m\n\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma>' m", "proof (cases m)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x11 x12 x13 x14 x15 x16 x17 x18.\n       \\<lbrakk>msg_fresh \\<sigma> m;\n        m = Rreq x11 x12 x13 x14 x15 x16 x17 x18\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 2. \\<And>x21 x22 x23 x24 x25.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rrep x21 x22 x23 x24 x25\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 3. \\<And>x31 x32.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rerr x31 x32\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 4. \\<And>x41 x42.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Newpkt x41 x42\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 5. \\<And>x51 x52 x53.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Pkt x51 x52 x53\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m", "fix hops dip dsn dsk oip osn sip handled"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x11 x12 x13 x14 x15 x16 x17 x18.\n       \\<lbrakk>msg_fresh \\<sigma> m;\n        m = Rreq x11 x12 x13 x14 x15 x16 x17 x18\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 2. \\<And>x21 x22 x23 x24 x25.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rrep x21 x22 x23 x24 x25\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 3. \\<And>x31 x32.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rerr x31 x32\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 4. \\<And>x41 x42.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Newpkt x41 x42\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 5. \\<And>x51 x52 x53.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Pkt x51 x52 x53\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m", "assume [simp]: \"m = Rreq hops dip dsn dsk oip osn sip handled\"\n       and \"msg_fresh \\<sigma> m\""], ["proof (state)\nthis:\n  m = Rreq hops dip dsn dsk oip osn sip handled\n  msg_fresh \\<sigma> m\n\ngoal (5 subgoals):\n 1. \\<And>x11 x12 x13 x14 x15 x16 x17 x18.\n       \\<lbrakk>msg_fresh \\<sigma> m;\n        m = Rreq x11 x12 x13 x14 x15 x16 x17 x18\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 2. \\<And>x21 x22 x23 x24 x25.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rrep x21 x22 x23 x24 x25\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 3. \\<And>x31 x32.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rerr x31 x32\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 4. \\<And>x41 x42.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Newpkt x41 x42\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 5. \\<And>x51 x52 x53.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Pkt x51 x52 x53\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m", "then"], ["proof (chain)\npicking this:\n  m = Rreq hops dip dsn dsk oip osn sip handled\n  msg_fresh \\<sigma> m", "have \"osn \\<ge> 1\" and \"sip = oip \\<or> (oip\\<in>kD(rt (\\<sigma> sip)) \\<and> osn \\<le> nsqn (rt (\\<sigma> sip)) oip\n                                           \\<and> (nsqn (rt (\\<sigma> sip)) oip = osn\n                                                 \\<longrightarrow> (the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops\n                                                      \\<or> the (flag (rt (\\<sigma> sip)) oip) = inv)))\""], ["proof (prove)\nusing this:\n  m = Rreq hops dip dsn dsk oip osn sip handled\n  msg_fresh \\<sigma> m\n\ngoal (1 subgoal):\n 1. 1 \\<le> osn &&&\n    sip = oip \\<or>\n    oip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip \\<and>\n    (nsqn (rt (\\<sigma> sip)) oip = osn \\<longrightarrow>\n     the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv)", "by auto"], ["proof (state)\nthis:\n  1 \\<le> osn\n  sip = oip \\<or>\n  oip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  osn \\<le> nsqn (rt (\\<sigma> sip)) oip \\<and>\n  (nsqn (rt (\\<sigma> sip)) oip = osn \\<longrightarrow>\n   the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv)\n\ngoal (5 subgoals):\n 1. \\<And>x11 x12 x13 x14 x15 x16 x17 x18.\n       \\<lbrakk>msg_fresh \\<sigma> m;\n        m = Rreq x11 x12 x13 x14 x15 x16 x17 x18\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 2. \\<And>x21 x22 x23 x24 x25.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rrep x21 x22 x23 x24 x25\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 3. \\<And>x31 x32.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rerr x31 x32\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 4. \\<And>x41 x42.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Newpkt x41 x42\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 5. \\<And>x51 x52 x53.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Pkt x51 x52 x53\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m", "from this(2)"], ["proof (chain)\npicking this:\n  sip = oip \\<or>\n  oip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  osn \\<le> nsqn (rt (\\<sigma> sip)) oip \\<and>\n  (nsqn (rt (\\<sigma> sip)) oip = osn \\<longrightarrow>\n   the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv)", "show ?thesis"], ["proof (prove)\nusing this:\n  sip = oip \\<or>\n  oip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  osn \\<le> nsqn (rt (\\<sigma> sip)) oip \\<and>\n  (nsqn (rt (\\<sigma> sip)) oip = osn \\<longrightarrow>\n   the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv)\n\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma>' m", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. sip = oip \\<Longrightarrow> msg_fresh \\<sigma>' m\n 2. oip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip \\<and>\n    (nsqn (rt (\\<sigma> sip)) oip = osn \\<longrightarrow>\n     the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv) \\<Longrightarrow>\n    msg_fresh \\<sigma>' m", "assume \"sip = oip\""], ["proof (state)\nthis:\n  sip = oip\n\ngoal (2 subgoals):\n 1. sip = oip \\<Longrightarrow> msg_fresh \\<sigma>' m\n 2. oip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip \\<and>\n    (nsqn (rt (\\<sigma> sip)) oip = osn \\<longrightarrow>\n     the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv) \\<Longrightarrow>\n    msg_fresh \\<sigma>' m", "with \\<open>osn \\<ge> 1\\<close>"], ["proof (chain)\npicking this:\n  1 \\<le> osn\n  sip = oip", "show ?thesis"], ["proof (prove)\nusing this:\n  1 \\<le> osn\n  sip = oip\n\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma>' m", "by simp"], ["proof (state)\nthis:\n  msg_fresh \\<sigma>' m\n\ngoal (1 subgoal):\n 1. oip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip \\<and>\n    (nsqn (rt (\\<sigma> sip)) oip = osn \\<longrightarrow>\n     the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv) \\<Longrightarrow>\n    msg_fresh \\<sigma>' m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. oip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip \\<and>\n    (nsqn (rt (\\<sigma> sip)) oip = osn \\<longrightarrow>\n     the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv) \\<Longrightarrow>\n    msg_fresh \\<sigma>' m", "assume \"oip\\<in>kD(rt (\\<sigma> sip)) \\<and> osn \\<le> nsqn (rt (\\<sigma> sip)) oip\n                                  \\<and> (nsqn (rt (\\<sigma> sip)) oip = osn\n                                      \\<longrightarrow> (the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops\n                                           \\<or> the (flag (rt (\\<sigma> sip)) oip) = inv))\""], ["proof (state)\nthis:\n  oip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  osn \\<le> nsqn (rt (\\<sigma> sip)) oip \\<and>\n  (nsqn (rt (\\<sigma> sip)) oip = osn \\<longrightarrow>\n   the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv)\n\ngoal (1 subgoal):\n 1. oip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip \\<and>\n    (nsqn (rt (\\<sigma> sip)) oip = osn \\<longrightarrow>\n     the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv) \\<Longrightarrow>\n    msg_fresh \\<sigma>' m", "moreover"], ["proof (state)\nthis:\n  oip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  osn \\<le> nsqn (rt (\\<sigma> sip)) oip \\<and>\n  (nsqn (rt (\\<sigma> sip)) oip = osn \\<longrightarrow>\n   the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv)\n\ngoal (1 subgoal):\n 1. oip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip \\<and>\n    (nsqn (rt (\\<sigma> sip)) oip = osn \\<longrightarrow>\n     the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv) \\<Longrightarrow>\n    msg_fresh \\<sigma>' m", "from qinc"], ["proof (chain)\npicking this:\n  \\<forall>j. quality_increases (\\<sigma> j) (\\<sigma>' j)", "have \"quality_increases (\\<sigma> sip) (\\<sigma>' sip)\""], ["proof (prove)\nusing this:\n  \\<forall>j. quality_increases (\\<sigma> j) (\\<sigma>' j)\n\ngoal (1 subgoal):\n 1. quality_increases (\\<sigma> sip) (\\<sigma>' sip)", ".."], ["proof (state)\nthis:\n  quality_increases (\\<sigma> sip) (\\<sigma>' sip)\n\ngoal (1 subgoal):\n 1. oip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip \\<and>\n    (nsqn (rt (\\<sigma> sip)) oip = osn \\<longrightarrow>\n     the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv) \\<Longrightarrow>\n    msg_fresh \\<sigma>' m", "ultimately"], ["proof (chain)\npicking this:\n  oip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  osn \\<le> nsqn (rt (\\<sigma> sip)) oip \\<and>\n  (nsqn (rt (\\<sigma> sip)) oip = osn \\<longrightarrow>\n   the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv)\n  quality_increases (\\<sigma> sip) (\\<sigma>' sip)", "have \"oip\\<in>kD(rt (\\<sigma>' sip)) \\<and> osn \\<le> nsqn (rt (\\<sigma>' sip)) oip\n                                           \\<and> (nsqn (rt (\\<sigma>' sip)) oip = osn\n                                              \\<longrightarrow> (the (dhops (rt (\\<sigma>' sip)) oip) \\<le> hops\n                                                    \\<or> the (flag (rt (\\<sigma>' sip)) oip) = inv))\""], ["proof (prove)\nusing this:\n  oip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  osn \\<le> nsqn (rt (\\<sigma> sip)) oip \\<and>\n  (nsqn (rt (\\<sigma> sip)) oip = osn \\<longrightarrow>\n   the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv)\n  quality_increases (\\<sigma> sip) (\\<sigma>' sip)\n\ngoal (1 subgoal):\n 1. oip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n    osn \\<le> nsqn (rt (\\<sigma>' sip)) oip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) oip = osn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) oip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) oip) = Aodv_Basic.inv)", "using \\<open>osn \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  oip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  osn \\<le> nsqn (rt (\\<sigma> sip)) oip \\<and>\n  (nsqn (rt (\\<sigma> sip)) oip = osn \\<longrightarrow>\n   the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv)\n  quality_increases (\\<sigma> sip) (\\<sigma>' sip)\n  1 \\<le> osn\n\ngoal (1 subgoal):\n 1. oip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n    osn \\<le> nsqn (rt (\\<sigma>' sip)) oip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) oip = osn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) oip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) oip) = Aodv_Basic.inv)", "by (rule quality_increases_rreq_rrep_props [rotated 2])"], ["proof (state)\nthis:\n  oip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n  osn \\<le> nsqn (rt (\\<sigma>' sip)) oip \\<and>\n  (nsqn (rt (\\<sigma>' sip)) oip = osn \\<longrightarrow>\n   the (dhops (rt (\\<sigma>' sip)) oip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma>' sip)) oip) = Aodv_Basic.inv)\n\ngoal (1 subgoal):\n 1. oip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n    osn \\<le> nsqn (rt (\\<sigma> sip)) oip \\<and>\n    (nsqn (rt (\\<sigma> sip)) oip = osn \\<longrightarrow>\n     the (dhops (rt (\\<sigma> sip)) oip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma> sip)) oip) = Aodv_Basic.inv) \\<Longrightarrow>\n    msg_fresh \\<sigma>' m", "with \\<open>osn \\<ge> 1\\<close>"], ["proof (chain)\npicking this:\n  1 \\<le> osn\n  oip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n  osn \\<le> nsqn (rt (\\<sigma>' sip)) oip \\<and>\n  (nsqn (rt (\\<sigma>' sip)) oip = osn \\<longrightarrow>\n   the (dhops (rt (\\<sigma>' sip)) oip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma>' sip)) oip) = Aodv_Basic.inv)", "show \"msg_fresh \\<sigma>' m\""], ["proof (prove)\nusing this:\n  1 \\<le> osn\n  oip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n  osn \\<le> nsqn (rt (\\<sigma>' sip)) oip \\<and>\n  (nsqn (rt (\\<sigma>' sip)) oip = osn \\<longrightarrow>\n   the (dhops (rt (\\<sigma>' sip)) oip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma>' sip)) oip) = Aodv_Basic.inv)\n\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma>' m", "by (clarsimp)"], ["proof (state)\nthis:\n  msg_fresh \\<sigma>' m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  msg_fresh \\<sigma>' m\n\ngoal (4 subgoals):\n 1. \\<And>x21 x22 x23 x24 x25.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rrep x21 x22 x23 x24 x25\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 2. \\<And>x31 x32.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rerr x31 x32\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 3. \\<And>x41 x42.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Newpkt x41 x42\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 4. \\<And>x51 x52 x53.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Pkt x51 x52 x53\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x21 x22 x23 x24 x25.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rrep x21 x22 x23 x24 x25\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 2. \\<And>x31 x32.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rerr x31 x32\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 3. \\<And>x41 x42.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Newpkt x41 x42\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 4. \\<And>x51 x52 x53.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Pkt x51 x52 x53\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m", "fix hops dip dsn oip sip"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x21 x22 x23 x24 x25.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rrep x21 x22 x23 x24 x25\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 2. \\<And>x31 x32.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rerr x31 x32\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 3. \\<And>x41 x42.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Newpkt x41 x42\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 4. \\<And>x51 x52 x53.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Pkt x51 x52 x53\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m", "assume [simp]: \"m = Rrep hops dip dsn oip sip\"\n       and \"msg_fresh \\<sigma> m\""], ["proof (state)\nthis:\n  m = Rrep hops dip dsn oip sip\n  msg_fresh \\<sigma> m\n\ngoal (4 subgoals):\n 1. \\<And>x21 x22 x23 x24 x25.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rrep x21 x22 x23 x24 x25\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 2. \\<And>x31 x32.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rerr x31 x32\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 3. \\<And>x41 x42.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Newpkt x41 x42\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 4. \\<And>x51 x52 x53.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Pkt x51 x52 x53\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m", "then"], ["proof (chain)\npicking this:\n  m = Rrep hops dip dsn oip sip\n  msg_fresh \\<sigma> m", "have \"dsn \\<ge> 1\" and \"sip = dip \\<or> (dip\\<in>kD(rt (\\<sigma> sip)) \\<and> dsn \\<le> nsqn (rt (\\<sigma> sip)) dip\n                                           \\<and> (nsqn (rt (\\<sigma> sip)) dip = dsn\n                                                 \\<longrightarrow> (the (dhops (rt (\\<sigma> sip)) dip) \\<le> hops\n                                                      \\<or> the (flag (rt (\\<sigma> sip)) dip) = inv)))\""], ["proof (prove)\nusing this:\n  m = Rrep hops dip dsn oip sip\n  msg_fresh \\<sigma> m\n\ngoal (1 subgoal):\n 1. 1 \\<le> dsn &&&\n    sip = dip \\<or>\n    dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n    dsn \\<le> nsqn (rt (\\<sigma> sip)) dip \\<and>\n    (nsqn (rt (\\<sigma> sip)) dip = dsn \\<longrightarrow>\n     the (dhops (rt (\\<sigma> sip)) dip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma> sip)) dip) = Aodv_Basic.inv)", "by auto"], ["proof (state)\nthis:\n  1 \\<le> dsn\n  sip = dip \\<or>\n  dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  dsn \\<le> nsqn (rt (\\<sigma> sip)) dip \\<and>\n  (nsqn (rt (\\<sigma> sip)) dip = dsn \\<longrightarrow>\n   the (dhops (rt (\\<sigma> sip)) dip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma> sip)) dip) = Aodv_Basic.inv)\n\ngoal (4 subgoals):\n 1. \\<And>x21 x22 x23 x24 x25.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rrep x21 x22 x23 x24 x25\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 2. \\<And>x31 x32.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rerr x31 x32\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 3. \\<And>x41 x42.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Newpkt x41 x42\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 4. \\<And>x51 x52 x53.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Pkt x51 x52 x53\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m", "from this(2)"], ["proof (chain)\npicking this:\n  sip = dip \\<or>\n  dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  dsn \\<le> nsqn (rt (\\<sigma> sip)) dip \\<and>\n  (nsqn (rt (\\<sigma> sip)) dip = dsn \\<longrightarrow>\n   the (dhops (rt (\\<sigma> sip)) dip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma> sip)) dip) = Aodv_Basic.inv)", "show \"?thesis\""], ["proof (prove)\nusing this:\n  sip = dip \\<or>\n  dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  dsn \\<le> nsqn (rt (\\<sigma> sip)) dip \\<and>\n  (nsqn (rt (\\<sigma> sip)) dip = dsn \\<longrightarrow>\n   the (dhops (rt (\\<sigma> sip)) dip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma> sip)) dip) = Aodv_Basic.inv)\n\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma>' m", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. sip = dip \\<Longrightarrow> msg_fresh \\<sigma>' m\n 2. dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n    dsn \\<le> nsqn (rt (\\<sigma> sip)) dip \\<and>\n    (nsqn (rt (\\<sigma> sip)) dip = dsn \\<longrightarrow>\n     the (dhops (rt (\\<sigma> sip)) dip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma> sip)) dip) = Aodv_Basic.inv) \\<Longrightarrow>\n    msg_fresh \\<sigma>' m", "assume \"sip = dip\""], ["proof (state)\nthis:\n  sip = dip\n\ngoal (2 subgoals):\n 1. sip = dip \\<Longrightarrow> msg_fresh \\<sigma>' m\n 2. dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n    dsn \\<le> nsqn (rt (\\<sigma> sip)) dip \\<and>\n    (nsqn (rt (\\<sigma> sip)) dip = dsn \\<longrightarrow>\n     the (dhops (rt (\\<sigma> sip)) dip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma> sip)) dip) = Aodv_Basic.inv) \\<Longrightarrow>\n    msg_fresh \\<sigma>' m", "with \\<open>dsn \\<ge> 1\\<close>"], ["proof (chain)\npicking this:\n  1 \\<le> dsn\n  sip = dip", "show ?thesis"], ["proof (prove)\nusing this:\n  1 \\<le> dsn\n  sip = dip\n\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma>' m", "by simp"], ["proof (state)\nthis:\n  msg_fresh \\<sigma>' m\n\ngoal (1 subgoal):\n 1. dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n    dsn \\<le> nsqn (rt (\\<sigma> sip)) dip \\<and>\n    (nsqn (rt (\\<sigma> sip)) dip = dsn \\<longrightarrow>\n     the (dhops (rt (\\<sigma> sip)) dip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma> sip)) dip) = Aodv_Basic.inv) \\<Longrightarrow>\n    msg_fresh \\<sigma>' m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n    dsn \\<le> nsqn (rt (\\<sigma> sip)) dip \\<and>\n    (nsqn (rt (\\<sigma> sip)) dip = dsn \\<longrightarrow>\n     the (dhops (rt (\\<sigma> sip)) dip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma> sip)) dip) = Aodv_Basic.inv) \\<Longrightarrow>\n    msg_fresh \\<sigma>' m", "assume \"dip\\<in>kD(rt (\\<sigma> sip)) \\<and> dsn \\<le> nsqn (rt (\\<sigma> sip)) dip\n                                  \\<and> (nsqn (rt (\\<sigma> sip)) dip = dsn\n                                      \\<longrightarrow> (the (dhops (rt (\\<sigma> sip)) dip) \\<le> hops\n                                           \\<or> the (flag (rt (\\<sigma> sip)) dip) = inv))\""], ["proof (state)\nthis:\n  dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  dsn \\<le> nsqn (rt (\\<sigma> sip)) dip \\<and>\n  (nsqn (rt (\\<sigma> sip)) dip = dsn \\<longrightarrow>\n   the (dhops (rt (\\<sigma> sip)) dip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma> sip)) dip) = Aodv_Basic.inv)\n\ngoal (1 subgoal):\n 1. dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n    dsn \\<le> nsqn (rt (\\<sigma> sip)) dip \\<and>\n    (nsqn (rt (\\<sigma> sip)) dip = dsn \\<longrightarrow>\n     the (dhops (rt (\\<sigma> sip)) dip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma> sip)) dip) = Aodv_Basic.inv) \\<Longrightarrow>\n    msg_fresh \\<sigma>' m", "moreover"], ["proof (state)\nthis:\n  dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  dsn \\<le> nsqn (rt (\\<sigma> sip)) dip \\<and>\n  (nsqn (rt (\\<sigma> sip)) dip = dsn \\<longrightarrow>\n   the (dhops (rt (\\<sigma> sip)) dip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma> sip)) dip) = Aodv_Basic.inv)\n\ngoal (1 subgoal):\n 1. dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n    dsn \\<le> nsqn (rt (\\<sigma> sip)) dip \\<and>\n    (nsqn (rt (\\<sigma> sip)) dip = dsn \\<longrightarrow>\n     the (dhops (rt (\\<sigma> sip)) dip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma> sip)) dip) = Aodv_Basic.inv) \\<Longrightarrow>\n    msg_fresh \\<sigma>' m", "from qinc"], ["proof (chain)\npicking this:\n  \\<forall>j. quality_increases (\\<sigma> j) (\\<sigma>' j)", "have \"quality_increases (\\<sigma> sip) (\\<sigma>' sip)\""], ["proof (prove)\nusing this:\n  \\<forall>j. quality_increases (\\<sigma> j) (\\<sigma>' j)\n\ngoal (1 subgoal):\n 1. quality_increases (\\<sigma> sip) (\\<sigma>' sip)", ".."], ["proof (state)\nthis:\n  quality_increases (\\<sigma> sip) (\\<sigma>' sip)\n\ngoal (1 subgoal):\n 1. dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n    dsn \\<le> nsqn (rt (\\<sigma> sip)) dip \\<and>\n    (nsqn (rt (\\<sigma> sip)) dip = dsn \\<longrightarrow>\n     the (dhops (rt (\\<sigma> sip)) dip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma> sip)) dip) = Aodv_Basic.inv) \\<Longrightarrow>\n    msg_fresh \\<sigma>' m", "ultimately"], ["proof (chain)\npicking this:\n  dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  dsn \\<le> nsqn (rt (\\<sigma> sip)) dip \\<and>\n  (nsqn (rt (\\<sigma> sip)) dip = dsn \\<longrightarrow>\n   the (dhops (rt (\\<sigma> sip)) dip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma> sip)) dip) = Aodv_Basic.inv)\n  quality_increases (\\<sigma> sip) (\\<sigma>' sip)", "have \"dip\\<in>kD(rt (\\<sigma>' sip)) \\<and> dsn \\<le> nsqn (rt (\\<sigma>' sip)) dip\n                                           \\<and> (nsqn (rt (\\<sigma>' sip)) dip = dsn\n                                              \\<longrightarrow> (the (dhops (rt (\\<sigma>' sip)) dip) \\<le> hops\n                                                    \\<or> the (flag (rt (\\<sigma>' sip)) dip) = inv))\""], ["proof (prove)\nusing this:\n  dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  dsn \\<le> nsqn (rt (\\<sigma> sip)) dip \\<and>\n  (nsqn (rt (\\<sigma> sip)) dip = dsn \\<longrightarrow>\n   the (dhops (rt (\\<sigma> sip)) dip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma> sip)) dip) = Aodv_Basic.inv)\n  quality_increases (\\<sigma> sip) (\\<sigma>' sip)\n\ngoal (1 subgoal):\n 1. dip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n    dsn \\<le> nsqn (rt (\\<sigma>' sip)) dip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) dip = dsn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) dip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) dip) = Aodv_Basic.inv)", "using \\<open>dsn \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n  dsn \\<le> nsqn (rt (\\<sigma> sip)) dip \\<and>\n  (nsqn (rt (\\<sigma> sip)) dip = dsn \\<longrightarrow>\n   the (dhops (rt (\\<sigma> sip)) dip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma> sip)) dip) = Aodv_Basic.inv)\n  quality_increases (\\<sigma> sip) (\\<sigma>' sip)\n  1 \\<le> dsn\n\ngoal (1 subgoal):\n 1. dip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n    dsn \\<le> nsqn (rt (\\<sigma>' sip)) dip \\<and>\n    (nsqn (rt (\\<sigma>' sip)) dip = dsn \\<longrightarrow>\n     the (dhops (rt (\\<sigma>' sip)) dip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma>' sip)) dip) = Aodv_Basic.inv)", "by (rule quality_increases_rreq_rrep_props [rotated 2])"], ["proof (state)\nthis:\n  dip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n  dsn \\<le> nsqn (rt (\\<sigma>' sip)) dip \\<and>\n  (nsqn (rt (\\<sigma>' sip)) dip = dsn \\<longrightarrow>\n   the (dhops (rt (\\<sigma>' sip)) dip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma>' sip)) dip) = Aodv_Basic.inv)\n\ngoal (1 subgoal):\n 1. dip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n    dsn \\<le> nsqn (rt (\\<sigma> sip)) dip \\<and>\n    (nsqn (rt (\\<sigma> sip)) dip = dsn \\<longrightarrow>\n     the (dhops (rt (\\<sigma> sip)) dip) \\<le> hops \\<or>\n     the (flag (rt (\\<sigma> sip)) dip) = Aodv_Basic.inv) \\<Longrightarrow>\n    msg_fresh \\<sigma>' m", "with \\<open>dsn \\<ge> 1\\<close>"], ["proof (chain)\npicking this:\n  1 \\<le> dsn\n  dip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n  dsn \\<le> nsqn (rt (\\<sigma>' sip)) dip \\<and>\n  (nsqn (rt (\\<sigma>' sip)) dip = dsn \\<longrightarrow>\n   the (dhops (rt (\\<sigma>' sip)) dip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma>' sip)) dip) = Aodv_Basic.inv)", "show \"msg_fresh \\<sigma>' m\""], ["proof (prove)\nusing this:\n  1 \\<le> dsn\n  dip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n  dsn \\<le> nsqn (rt (\\<sigma>' sip)) dip \\<and>\n  (nsqn (rt (\\<sigma>' sip)) dip = dsn \\<longrightarrow>\n   the (dhops (rt (\\<sigma>' sip)) dip) \\<le> hops \\<or>\n   the (flag (rt (\\<sigma>' sip)) dip) = Aodv_Basic.inv)\n\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma>' m", "by clarsimp"], ["proof (state)\nthis:\n  msg_fresh \\<sigma>' m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  msg_fresh \\<sigma>' m\n\ngoal (3 subgoals):\n 1. \\<And>x31 x32.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rerr x31 x32\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 2. \\<And>x41 x42.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Newpkt x41 x42\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 3. \\<And>x51 x52 x53.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Pkt x51 x52 x53\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x31 x32.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rerr x31 x32\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 2. \\<And>x41 x42.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Newpkt x41 x42\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 3. \\<And>x51 x52 x53.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Pkt x51 x52 x53\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m", "fix dests sip"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x31 x32.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rerr x31 x32\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 2. \\<And>x41 x42.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Newpkt x41 x42\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 3. \\<And>x51 x52 x53.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Pkt x51 x52 x53\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m", "assume [simp]: \"m = Rerr dests sip\"\n       and \"msg_fresh \\<sigma> m\""], ["proof (state)\nthis:\n  m = Rerr dests sip\n  msg_fresh \\<sigma> m\n\ngoal (3 subgoals):\n 1. \\<And>x31 x32.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rerr x31 x32\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 2. \\<And>x41 x42.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Newpkt x41 x42\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 3. \\<And>x51 x52 x53.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Pkt x51 x52 x53\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m", "then"], ["proof (chain)\npicking this:\n  m = Rerr dests sip\n  msg_fresh \\<sigma> m", "have *: \"\\<forall>rip\\<in>dom(dests). rip\\<in>kD(rt (\\<sigma> sip))\n                              \\<and> the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip\""], ["proof (prove)\nusing this:\n  m = Rerr dests sip\n  msg_fresh \\<sigma> m\n\ngoal (1 subgoal):\n 1. \\<forall>rip\\<in>dom dests.\n       rip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n       the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip", "by simp"], ["proof (state)\nthis:\n  \\<forall>rip\\<in>dom dests.\n     rip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n     the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip\n\ngoal (3 subgoals):\n 1. \\<And>x31 x32.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rerr x31 x32\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 2. \\<And>x41 x42.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Newpkt x41 x42\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 3. \\<And>x51 x52 x53.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Pkt x51 x52 x53\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m", "have \"\\<forall>rip\\<in>dom(dests). rip\\<in>kD(rt (\\<sigma>' sip))\n                         \\<and> the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma>' sip)) rip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>rip\\<in>dom dests.\n       rip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n       the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma>' sip)) rip", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>rip.\n       rip \\<in> dom dests \\<Longrightarrow>\n       rip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n       the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma>' sip)) rip", "fix rip"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>rip.\n       rip \\<in> dom dests \\<Longrightarrow>\n       rip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n       the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma>' sip)) rip", "assume \"rip\\<in>dom(dests)\""], ["proof (state)\nthis:\n  rip \\<in> dom dests\n\ngoal (1 subgoal):\n 1. \\<And>rip.\n       rip \\<in> dom dests \\<Longrightarrow>\n       rip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n       the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma>' sip)) rip", "with *"], ["proof (chain)\npicking this:\n  \\<forall>rip\\<in>dom dests.\n     rip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n     the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip\n  rip \\<in> dom dests", "have \"rip\\<in>kD(rt (\\<sigma> sip))\" and \"the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip\""], ["proof (prove)\nusing this:\n  \\<forall>rip\\<in>dom dests.\n     rip \\<in> kD (rt (\\<sigma> sip)) \\<and>\n     the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip\n  rip \\<in> dom dests\n\ngoal (1 subgoal):\n 1. rip \\<in> kD (rt (\\<sigma> sip)) &&&\n    the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip", "by - (drule(1) bspec, clarsimp)+"], ["proof (state)\nthis:\n  rip \\<in> kD (rt (\\<sigma> sip))\n  the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip\n\ngoal (1 subgoal):\n 1. \\<And>rip.\n       rip \\<in> dom dests \\<Longrightarrow>\n       rip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n       the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma>' sip)) rip", "moreover"], ["proof (state)\nthis:\n  rip \\<in> kD (rt (\\<sigma> sip))\n  the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip\n\ngoal (1 subgoal):\n 1. \\<And>rip.\n       rip \\<in> dom dests \\<Longrightarrow>\n       rip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n       the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma>' sip)) rip", "from qinc"], ["proof (chain)\npicking this:\n  \\<forall>j. quality_increases (\\<sigma> j) (\\<sigma>' j)", "have \"quality_increases (\\<sigma> sip) (\\<sigma>' sip)\""], ["proof (prove)\nusing this:\n  \\<forall>j. quality_increases (\\<sigma> j) (\\<sigma>' j)\n\ngoal (1 subgoal):\n 1. quality_increases (\\<sigma> sip) (\\<sigma>' sip)", "by simp"], ["proof (state)\nthis:\n  quality_increases (\\<sigma> sip) (\\<sigma>' sip)\n\ngoal (1 subgoal):\n 1. \\<And>rip.\n       rip \\<in> dom dests \\<Longrightarrow>\n       rip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n       the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma>' sip)) rip", "ultimately"], ["proof (chain)\npicking this:\n  rip \\<in> kD (rt (\\<sigma> sip))\n  the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip\n  quality_increases (\\<sigma> sip) (\\<sigma>' sip)", "show \"rip\\<in>kD(rt (\\<sigma>' sip)) \\<and> the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma>' sip)) rip\""], ["proof (prove)\nusing this:\n  rip \\<in> kD (rt (\\<sigma> sip))\n  the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma> sip)) rip\n  quality_increases (\\<sigma> sip) (\\<sigma>' sip)\n\ngoal (1 subgoal):\n 1. rip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n    the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma>' sip)) rip", ".."], ["proof (state)\nthis:\n  rip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n  the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma>' sip)) rip\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>rip\\<in>dom dests.\n     rip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n     the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma>' sip)) rip\n\ngoal (3 subgoals):\n 1. \\<And>x31 x32.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Rerr x31 x32\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 2. \\<And>x41 x42.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Newpkt x41 x42\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 3. \\<And>x51 x52 x53.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Pkt x51 x52 x53\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>rip\\<in>dom dests.\n     rip \\<in> kD (rt (\\<sigma>' sip)) \\<and>\n     the (dests rip) - 1 \\<le> nsqn (rt (\\<sigma>' sip)) rip\n\ngoal (1 subgoal):\n 1. msg_fresh \\<sigma>' m", "by simp"], ["proof (state)\nthis:\n  msg_fresh \\<sigma>' m\n\ngoal (2 subgoals):\n 1. \\<And>x41 x42.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Newpkt x41 x42\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m\n 2. \\<And>x51 x52 x53.\n       \\<lbrakk>msg_fresh \\<sigma> m; m = Pkt x51 x52 x53\\<rbrakk>\n       \\<Longrightarrow> msg_fresh \\<sigma>' m", "qed simp_all"], ["", "end"]]}