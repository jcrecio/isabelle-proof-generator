{"file_name": "/home/qj213/afp-2021-10-22/thys/AODV/Loop_Freedom.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/AODV", "problem_names": ["lemma rt_graphE [elim]:\n    fixes n dip ip ip'\n  assumes \"(ip, ip') \\<in> rt_graph \\<sigma> dip\"\n    shows \"ip \\<noteq> dip \\<and> (\\<exists>r. rt (\\<sigma> ip) = r\n                            \\<and> (\\<exists>dsn dsk hops pre. r dip = Some (dsn, dsk, val, hops, ip', pre)))\"", "lemma rt_graph_vD [dest]:\n  \"\\<And>ip ip' \\<sigma> dip. (ip, ip') \\<in> rt_graph \\<sigma> dip \\<Longrightarrow> dip \\<in> vD(rt (\\<sigma> ip))\"", "lemma rt_graph_vD_trans [dest]:\n  \"\\<And>ip ip' \\<sigma> dip. (ip, ip') \\<in> (rt_graph \\<sigma> dip)\\<^sup>+ \\<Longrightarrow> dip \\<in> vD(rt (\\<sigma> ip))\"", "lemma rt_graph_not_dip [dest]:\n  \"\\<And>ip ip' \\<sigma> dip. (ip, ip') \\<in> rt_graph \\<sigma> dip \\<Longrightarrow> ip \\<noteq> dip\"", "lemma rt_graph_not_dip_trans [dest]:\n  \"\\<And>ip ip' \\<sigma> dip. (ip, ip') \\<in> (rt_graph \\<sigma> dip)\\<^sup>+ \\<Longrightarrow> ip \\<noteq> dip\"", "lemma rt_graph_nhip_is_nhop [dest]:\n  \"\\<And>ip ip' \\<sigma> dip. (ip, ip') \\<in> rt_graph \\<sigma> dip \\<Longrightarrow> ip' = the (nhop (rt (\\<sigma> ip)) dip)\"", "theorem inv_to_loop_freedom:\n  assumes \"\\<forall>i dip. let nhip = the (nhop (rt (\\<sigma> i)) dip)\n                   in dip \\<in> vD (rt (\\<sigma> i)) \\<inter> vD (rt (\\<sigma> nhip)) \\<and> nhip \\<noteq> dip\n                      \\<longrightarrow> (rt (\\<sigma> i)) \\<sqsubset>\\<^bsub>dip\\<^esub> (rt (\\<sigma> nhip))\"\n    shows \"\\<forall>dip. irrefl ((rt_graph \\<sigma> dip)\\<^sup>+)\""], "translations": [["", "lemma rt_graphE [elim]:\n    fixes n dip ip ip'\n  assumes \"(ip, ip') \\<in> rt_graph \\<sigma> dip\"\n    shows \"ip \\<noteq> dip \\<and> (\\<exists>r. rt (\\<sigma> ip) = r\n                            \\<and> (\\<exists>dsn dsk hops pre. r dip = Some (dsn, dsk, val, hops, ip', pre)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ip \\<noteq> dip \\<and>\n    (\\<exists>r.\n        rt (\\<sigma> ip) = r \\<and>\n        (\\<exists>dsn dsk hops pre.\n            r dip = Some (dsn, dsk, val, hops, ip', pre)))", "using assms"], ["proof (prove)\nusing this:\n  (ip, ip') \\<in> rt_graph \\<sigma> dip\n\ngoal (1 subgoal):\n 1. ip \\<noteq> dip \\<and>\n    (\\<exists>r.\n        rt (\\<sigma> ip) = r \\<and>\n        (\\<exists>dsn dsk hops pre.\n            r dip = Some (dsn, dsk, val, hops, ip', pre)))", "unfolding rt_graph_def"], ["proof (prove)\nusing this:\n  (ip, ip')\n  \\<in> {uu_.\n         \\<exists>ip ip' dsn dsk hops pre.\n            uu_ = (ip, ip') \\<and>\n            ip \\<noteq> dip \\<and>\n            rt (\\<sigma> ip) dip = Some (dsn, dsk, val, hops, ip', pre)}\n\ngoal (1 subgoal):\n 1. ip \\<noteq> dip \\<and>\n    (\\<exists>r.\n        rt (\\<sigma> ip) = r \\<and>\n        (\\<exists>dsn dsk hops pre.\n            r dip = Some (dsn, dsk, val, hops, ip', pre)))", "by auto"], ["", "lemma rt_graph_vD [dest]:\n  \"\\<And>ip ip' \\<sigma> dip. (ip, ip') \\<in> rt_graph \\<sigma> dip \\<Longrightarrow> dip \\<in> vD(rt (\\<sigma> ip))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ip ip' \\<sigma> dip.\n       (ip, ip') \\<in> rt_graph \\<sigma> dip \\<Longrightarrow>\n       dip \\<in> vD (rt (\\<sigma> ip))", "unfolding rt_graph_def vD_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ip ip' \\<sigma> dip.\n       (ip, ip')\n       \\<in> {uu_.\n              \\<exists>ip ip' dsn dsk hops pre.\n                 uu_ = (ip, ip') \\<and>\n                 ip \\<noteq> dip \\<and>\n                 rt (\\<sigma> ip) dip =\n                 Some (dsn, dsk, val, hops, ip', pre)} \\<Longrightarrow>\n       dip \\<in> {dip. flag (rt (\\<sigma> ip)) dip = Some val}", "by auto"], ["", "lemma rt_graph_vD_trans [dest]:\n  \"\\<And>ip ip' \\<sigma> dip. (ip, ip') \\<in> (rt_graph \\<sigma> dip)\\<^sup>+ \\<Longrightarrow> dip \\<in> vD(rt (\\<sigma> ip))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ip ip' \\<sigma> dip.\n       (ip, ip') \\<in> (rt_graph \\<sigma> dip)\\<^sup>+ \\<Longrightarrow>\n       dip \\<in> vD (rt (\\<sigma> ip))", "by (erule converse_tranclE) auto"], ["", "lemma rt_graph_not_dip [dest]:\n  \"\\<And>ip ip' \\<sigma> dip. (ip, ip') \\<in> rt_graph \\<sigma> dip \\<Longrightarrow> ip \\<noteq> dip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ip ip' \\<sigma> dip.\n       (ip, ip') \\<in> rt_graph \\<sigma> dip \\<Longrightarrow>\n       ip \\<noteq> dip", "unfolding rt_graph_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ip ip' \\<sigma> dip.\n       (ip, ip')\n       \\<in> {uu_.\n              \\<exists>ip ip' dsn dsk hops pre.\n                 uu_ = (ip, ip') \\<and>\n                 ip \\<noteq> dip \\<and>\n                 rt (\\<sigma> ip) dip =\n                 Some (dsn, dsk, val, hops, ip', pre)} \\<Longrightarrow>\n       ip \\<noteq> dip", "by auto"], ["", "lemma rt_graph_not_dip_trans [dest]:\n  \"\\<And>ip ip' \\<sigma> dip. (ip, ip') \\<in> (rt_graph \\<sigma> dip)\\<^sup>+ \\<Longrightarrow> ip \\<noteq> dip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ip ip' \\<sigma> dip.\n       (ip, ip') \\<in> (rt_graph \\<sigma> dip)\\<^sup>+ \\<Longrightarrow>\n       ip \\<noteq> dip", "by (erule converse_tranclE) auto"], ["", "text \"NB: the property below cannot be lifted to the transitive closure\""], ["", "lemma rt_graph_nhip_is_nhop [dest]:\n  \"\\<And>ip ip' \\<sigma> dip. (ip, ip') \\<in> rt_graph \\<sigma> dip \\<Longrightarrow> ip' = the (nhop (rt (\\<sigma> ip)) dip)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ip ip' \\<sigma> dip.\n       (ip, ip') \\<in> rt_graph \\<sigma> dip \\<Longrightarrow>\n       ip' = the (nhop (rt (\\<sigma> ip)) dip)", "unfolding rt_graph_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ip ip' \\<sigma> dip.\n       (ip, ip')\n       \\<in> {uu_.\n              \\<exists>ip ip' dsn dsk hops pre.\n                 uu_ = (ip, ip') \\<and>\n                 ip \\<noteq> dip \\<and>\n                 rt (\\<sigma> ip) dip =\n                 Some (dsn, dsk, val, hops, ip', pre)} \\<Longrightarrow>\n       ip' = the (nhop (rt (\\<sigma> ip)) dip)", "by auto"], ["", "theorem inv_to_loop_freedom:\n  assumes \"\\<forall>i dip. let nhip = the (nhop (rt (\\<sigma> i)) dip)\n                   in dip \\<in> vD (rt (\\<sigma> i)) \\<inter> vD (rt (\\<sigma> nhip)) \\<and> nhip \\<noteq> dip\n                      \\<longrightarrow> (rt (\\<sigma> i)) \\<sqsubset>\\<^bsub>dip\\<^esub> (rt (\\<sigma> nhip))\"\n    shows \"\\<forall>dip. irrefl ((rt_graph \\<sigma> dip)\\<^sup>+)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>dip. irrefl ((rt_graph \\<sigma> dip)\\<^sup>+)", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>i dip.\n     let nhip = the (nhop (rt (\\<sigma> i)) dip)\n     in dip\n        \\<in> vD (rt (\\<sigma> i)) \\<inter> vD (rt (\\<sigma> nhip)) \\<and>\n        nhip \\<noteq> dip \\<longrightarrow>\n        rt (\\<sigma> i) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip)\n\ngoal (1 subgoal):\n 1. \\<forall>dip. irrefl ((rt_graph \\<sigma> dip)\\<^sup>+)", "proof (intro allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>dip.\n       \\<forall>i dip.\n          let nhip = the (nhop (rt (\\<sigma> i)) dip)\n          in dip\n             \\<in> vD (rt (\\<sigma> i)) \\<inter>\n                   vD (rt (\\<sigma> nhip)) \\<and>\n             nhip \\<noteq> dip \\<longrightarrow>\n             rt (\\<sigma> i)\n             \\<sqsubset>\\<^bsub>dip\\<^esub> rt\n       (\\<sigma> nhip) \\<Longrightarrow>\n       irrefl ((rt_graph \\<sigma> dip)\\<^sup>+)", "fix \\<sigma> :: \"ip \\<Rightarrow> state\" and dip"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>dip.\n       \\<forall>i dip.\n          let nhip = the (nhop (rt (\\<sigma> i)) dip)\n          in dip\n             \\<in> vD (rt (\\<sigma> i)) \\<inter>\n                   vD (rt (\\<sigma> nhip)) \\<and>\n             nhip \\<noteq> dip \\<longrightarrow>\n             rt (\\<sigma> i)\n             \\<sqsubset>\\<^bsub>dip\\<^esub> rt\n       (\\<sigma> nhip) \\<Longrightarrow>\n       irrefl ((rt_graph \\<sigma> dip)\\<^sup>+)", "assume inv: \"\\<forall>ip dip.\n                  let nhip = the (nhop (rt (\\<sigma> ip)) dip)\n                  in dip \\<in> vD(rt (\\<sigma> ip)) \\<inter> vD(rt (\\<sigma> nhip)) \\<and>\n                     nhip \\<noteq> dip \\<longrightarrow> rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip)\""], ["proof (state)\nthis:\n  \\<forall>ip dip.\n     let nhip = the (nhop (rt (\\<sigma> ip)) dip)\n     in dip\n        \\<in> vD (rt (\\<sigma> ip)) \\<inter> vD (rt (\\<sigma> nhip)) \\<and>\n        nhip \\<noteq> dip \\<longrightarrow>\n        rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip)\n\ngoal (1 subgoal):\n 1. \\<And>dip.\n       \\<forall>i dip.\n          let nhip = the (nhop (rt (\\<sigma> i)) dip)\n          in dip\n             \\<in> vD (rt (\\<sigma> i)) \\<inter>\n                   vD (rt (\\<sigma> nhip)) \\<and>\n             nhip \\<noteq> dip \\<longrightarrow>\n             rt (\\<sigma> i)\n             \\<sqsubset>\\<^bsub>dip\\<^esub> rt\n       (\\<sigma> nhip) \\<Longrightarrow>\n       irrefl ((rt_graph \\<sigma> dip)\\<^sup>+)", "{"], ["proof (state)\nthis:\n  \\<forall>ip dip.\n     let nhip = the (nhop (rt (\\<sigma> ip)) dip)\n     in dip\n        \\<in> vD (rt (\\<sigma> ip)) \\<inter> vD (rt (\\<sigma> nhip)) \\<and>\n        nhip \\<noteq> dip \\<longrightarrow>\n        rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip)\n\ngoal (1 subgoal):\n 1. \\<And>dip.\n       \\<forall>i dip.\n          let nhip = the (nhop (rt (\\<sigma> i)) dip)\n          in dip\n             \\<in> vD (rt (\\<sigma> i)) \\<inter>\n                   vD (rt (\\<sigma> nhip)) \\<and>\n             nhip \\<noteq> dip \\<longrightarrow>\n             rt (\\<sigma> i)\n             \\<sqsubset>\\<^bsub>dip\\<^esub> rt\n       (\\<sigma> nhip) \\<Longrightarrow>\n       irrefl ((rt_graph \\<sigma> dip)\\<^sup>+)", "fix ip ip'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>dip.\n       \\<forall>i dip.\n          let nhip = the (nhop (rt (\\<sigma> i)) dip)\n          in dip\n             \\<in> vD (rt (\\<sigma> i)) \\<inter>\n                   vD (rt (\\<sigma> nhip)) \\<and>\n             nhip \\<noteq> dip \\<longrightarrow>\n             rt (\\<sigma> i)\n             \\<sqsubset>\\<^bsub>dip\\<^esub> rt\n       (\\<sigma> nhip) \\<Longrightarrow>\n       irrefl ((rt_graph \\<sigma> dip)\\<^sup>+)", "assume \"(ip, ip') \\<in> (rt_graph \\<sigma> dip)\\<^sup>+\"\n         and \"dip \\<in> vD(rt (\\<sigma> ip'))\"\n         and \"ip' \\<noteq> dip\""], ["proof (state)\nthis:\n  (ip, ip') \\<in> (rt_graph \\<sigma> dip)\\<^sup>+\n  dip \\<in> vD (rt (\\<sigma> ip'))\n  ip' \\<noteq> dip\n\ngoal (1 subgoal):\n 1. \\<And>dip.\n       \\<forall>i dip.\n          let nhip = the (nhop (rt (\\<sigma> i)) dip)\n          in dip\n             \\<in> vD (rt (\\<sigma> i)) \\<inter>\n                   vD (rt (\\<sigma> nhip)) \\<and>\n             nhip \\<noteq> dip \\<longrightarrow>\n             rt (\\<sigma> i)\n             \\<sqsubset>\\<^bsub>dip\\<^esub> rt\n       (\\<sigma> nhip) \\<Longrightarrow>\n       irrefl ((rt_graph \\<sigma> dip)\\<^sup>+)", "hence \"rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> ip')\""], ["proof (prove)\nusing this:\n  (ip, ip') \\<in> (rt_graph \\<sigma> dip)\\<^sup>+\n  dip \\<in> vD (rt (\\<sigma> ip'))\n  ip' \\<noteq> dip\n\ngoal (1 subgoal):\n 1. rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> ip')", "proof induction"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(ip, y) \\<in> rt_graph \\<sigma> dip;\n        dip \\<in> vD (rt (\\<sigma> y)); y \\<noteq> dip\\<rbrakk>\n       \\<Longrightarrow> rt (\\<sigma> ip)\n                         \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> y)\n 2. \\<And>y z.\n       \\<lbrakk>(ip, y) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+;\n        (y, z) \\<in> rt_graph \\<sigma> dip;\n        \\<lbrakk>dip \\<in> vD (rt (\\<sigma> y)); y \\<noteq> dip\\<rbrakk>\n        \\<Longrightarrow> rt (\\<sigma> ip)\n                          \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> y);\n        dip \\<in> vD (rt (\\<sigma> z)); z \\<noteq> dip\\<rbrakk>\n       \\<Longrightarrow> rt (\\<sigma> ip)\n                         \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> z)", "fix nhip"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(ip, y) \\<in> rt_graph \\<sigma> dip;\n        dip \\<in> vD (rt (\\<sigma> y)); y \\<noteq> dip\\<rbrakk>\n       \\<Longrightarrow> rt (\\<sigma> ip)\n                         \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> y)\n 2. \\<And>y z.\n       \\<lbrakk>(ip, y) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+;\n        (y, z) \\<in> rt_graph \\<sigma> dip;\n        \\<lbrakk>dip \\<in> vD (rt (\\<sigma> y)); y \\<noteq> dip\\<rbrakk>\n        \\<Longrightarrow> rt (\\<sigma> ip)\n                          \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> y);\n        dip \\<in> vD (rt (\\<sigma> z)); z \\<noteq> dip\\<rbrakk>\n       \\<Longrightarrow> rt (\\<sigma> ip)\n                         \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> z)", "assume \"(ip, nhip) \\<in> rt_graph \\<sigma> dip\"\n              and \"dip \\<in> vD(rt (\\<sigma> nhip))\"\n              and \"nhip \\<noteq> dip\""], ["proof (state)\nthis:\n  (ip, nhip) \\<in> rt_graph \\<sigma> dip\n  dip \\<in> vD (rt (\\<sigma> nhip))\n  nhip \\<noteq> dip\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(ip, y) \\<in> rt_graph \\<sigma> dip;\n        dip \\<in> vD (rt (\\<sigma> y)); y \\<noteq> dip\\<rbrakk>\n       \\<Longrightarrow> rt (\\<sigma> ip)\n                         \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> y)\n 2. \\<And>y z.\n       \\<lbrakk>(ip, y) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+;\n        (y, z) \\<in> rt_graph \\<sigma> dip;\n        \\<lbrakk>dip \\<in> vD (rt (\\<sigma> y)); y \\<noteq> dip\\<rbrakk>\n        \\<Longrightarrow> rt (\\<sigma> ip)\n                          \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> y);\n        dip \\<in> vD (rt (\\<sigma> z)); z \\<noteq> dip\\<rbrakk>\n       \\<Longrightarrow> rt (\\<sigma> ip)\n                         \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> z)", "from \\<open>(ip, nhip) \\<in> rt_graph \\<sigma> dip\\<close>"], ["proof (chain)\npicking this:\n  (ip, nhip) \\<in> rt_graph \\<sigma> dip", "have \"dip \\<in> vD(rt (\\<sigma> ip))\"\n                                               and \"nhip = the (nhop (rt (\\<sigma> ip)) dip)\""], ["proof (prove)\nusing this:\n  (ip, nhip) \\<in> rt_graph \\<sigma> dip\n\ngoal (1 subgoal):\n 1. dip \\<in> vD (rt (\\<sigma> ip)) &&&\n    nhip = the (nhop (rt (\\<sigma> ip)) dip)", "by auto"], ["proof (state)\nthis:\n  dip \\<in> vD (rt (\\<sigma> ip))\n  nhip = the (nhop (rt (\\<sigma> ip)) dip)\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(ip, y) \\<in> rt_graph \\<sigma> dip;\n        dip \\<in> vD (rt (\\<sigma> y)); y \\<noteq> dip\\<rbrakk>\n       \\<Longrightarrow> rt (\\<sigma> ip)\n                         \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> y)\n 2. \\<And>y z.\n       \\<lbrakk>(ip, y) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+;\n        (y, z) \\<in> rt_graph \\<sigma> dip;\n        \\<lbrakk>dip \\<in> vD (rt (\\<sigma> y)); y \\<noteq> dip\\<rbrakk>\n        \\<Longrightarrow> rt (\\<sigma> ip)\n                          \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> y);\n        dip \\<in> vD (rt (\\<sigma> z)); z \\<noteq> dip\\<rbrakk>\n       \\<Longrightarrow> rt (\\<sigma> ip)\n                         \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> z)", "from \\<open>dip \\<in> vD(rt (\\<sigma> ip))\\<close> and \\<open>dip \\<in> vD(rt (\\<sigma> nhip))\\<close>"], ["proof (chain)\npicking this:\n  dip \\<in> vD (rt (\\<sigma> ip))\n  dip \\<in> vD (rt (\\<sigma> nhip))", "have \"dip \\<in> vD(rt (\\<sigma> ip)) \\<inter> vD(rt (\\<sigma> nhip))\""], ["proof (prove)\nusing this:\n  dip \\<in> vD (rt (\\<sigma> ip))\n  dip \\<in> vD (rt (\\<sigma> nhip))\n\ngoal (1 subgoal):\n 1. dip \\<in> vD (rt (\\<sigma> ip)) \\<inter> vD (rt (\\<sigma> nhip))", ".."], ["proof (state)\nthis:\n  dip \\<in> vD (rt (\\<sigma> ip)) \\<inter> vD (rt (\\<sigma> nhip))\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(ip, y) \\<in> rt_graph \\<sigma> dip;\n        dip \\<in> vD (rt (\\<sigma> y)); y \\<noteq> dip\\<rbrakk>\n       \\<Longrightarrow> rt (\\<sigma> ip)\n                         \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> y)\n 2. \\<And>y z.\n       \\<lbrakk>(ip, y) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+;\n        (y, z) \\<in> rt_graph \\<sigma> dip;\n        \\<lbrakk>dip \\<in> vD (rt (\\<sigma> y)); y \\<noteq> dip\\<rbrakk>\n        \\<Longrightarrow> rt (\\<sigma> ip)\n                          \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> y);\n        dip \\<in> vD (rt (\\<sigma> z)); z \\<noteq> dip\\<rbrakk>\n       \\<Longrightarrow> rt (\\<sigma> ip)\n                         \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> z)", "with \\<open>nhip = the (nhop (rt (\\<sigma> ip)) dip)\\<close>\n                and \\<open>nhip \\<noteq> dip\\<close>\n                and inv"], ["proof (chain)\npicking this:\n  nhip = the (nhop (rt (\\<sigma> ip)) dip)\n  nhip \\<noteq> dip\n  \\<forall>ip dip.\n     let nhip = the (nhop (rt (\\<sigma> ip)) dip)\n     in dip\n        \\<in> vD (rt (\\<sigma> ip)) \\<inter> vD (rt (\\<sigma> nhip)) \\<and>\n        nhip \\<noteq> dip \\<longrightarrow>\n        rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip)\n  dip \\<in> vD (rt (\\<sigma> ip)) \\<inter> vD (rt (\\<sigma> nhip))", "show \"rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip)\""], ["proof (prove)\nusing this:\n  nhip = the (nhop (rt (\\<sigma> ip)) dip)\n  nhip \\<noteq> dip\n  \\<forall>ip dip.\n     let nhip = the (nhop (rt (\\<sigma> ip)) dip)\n     in dip\n        \\<in> vD (rt (\\<sigma> ip)) \\<inter> vD (rt (\\<sigma> nhip)) \\<and>\n        nhip \\<noteq> dip \\<longrightarrow>\n        rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip)\n  dip \\<in> vD (rt (\\<sigma> ip)) \\<inter> vD (rt (\\<sigma> nhip))\n\ngoal (1 subgoal):\n 1. rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip)", "by (clarsimp simp: Let_def)"], ["proof (state)\nthis:\n  rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip)\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(ip, y) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+;\n        (y, z) \\<in> rt_graph \\<sigma> dip;\n        \\<lbrakk>dip \\<in> vD (rt (\\<sigma> y)); y \\<noteq> dip\\<rbrakk>\n        \\<Longrightarrow> rt (\\<sigma> ip)\n                          \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> y);\n        dip \\<in> vD (rt (\\<sigma> z)); z \\<noteq> dip\\<rbrakk>\n       \\<Longrightarrow> rt (\\<sigma> ip)\n                         \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> z)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(ip, y) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+;\n        (y, z) \\<in> rt_graph \\<sigma> dip;\n        \\<lbrakk>dip \\<in> vD (rt (\\<sigma> y)); y \\<noteq> dip\\<rbrakk>\n        \\<Longrightarrow> rt (\\<sigma> ip)\n                          \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> y);\n        dip \\<in> vD (rt (\\<sigma> z)); z \\<noteq> dip\\<rbrakk>\n       \\<Longrightarrow> rt (\\<sigma> ip)\n                         \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> z)", "fix nhip nhip'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(ip, y) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+;\n        (y, z) \\<in> rt_graph \\<sigma> dip;\n        \\<lbrakk>dip \\<in> vD (rt (\\<sigma> y)); y \\<noteq> dip\\<rbrakk>\n        \\<Longrightarrow> rt (\\<sigma> ip)\n                          \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> y);\n        dip \\<in> vD (rt (\\<sigma> z)); z \\<noteq> dip\\<rbrakk>\n       \\<Longrightarrow> rt (\\<sigma> ip)\n                         \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> z)", "assume \"(ip, nhip) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+\"\n              and \"(nhip, nhip') \\<in> rt_graph \\<sigma> dip\"\n              and IH: \"\\<lbrakk> dip \\<in> vD(rt (\\<sigma> nhip)); nhip \\<noteq> dip \\<rbrakk> \\<Longrightarrow> rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip)\"\n              and \"dip \\<in> vD(rt (\\<sigma> nhip'))\"\n              and \"nhip' \\<noteq> dip\""], ["proof (state)\nthis:\n  (ip, nhip) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+\n  (nhip, nhip') \\<in> rt_graph \\<sigma> dip\n  \\<lbrakk>dip \\<in> vD (rt (\\<sigma> nhip)); nhip \\<noteq> dip\\<rbrakk>\n  \\<Longrightarrow> rt (\\<sigma> ip)\n                    \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip)\n  dip \\<in> vD (rt (\\<sigma> nhip'))\n  nhip' \\<noteq> dip\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(ip, y) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+;\n        (y, z) \\<in> rt_graph \\<sigma> dip;\n        \\<lbrakk>dip \\<in> vD (rt (\\<sigma> y)); y \\<noteq> dip\\<rbrakk>\n        \\<Longrightarrow> rt (\\<sigma> ip)\n                          \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> y);\n        dip \\<in> vD (rt (\\<sigma> z)); z \\<noteq> dip\\<rbrakk>\n       \\<Longrightarrow> rt (\\<sigma> ip)\n                         \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> z)", "from \\<open>(nhip, nhip') \\<in> rt_graph \\<sigma> dip\\<close>"], ["proof (chain)\npicking this:\n  (nhip, nhip') \\<in> rt_graph \\<sigma> dip", "have 1: \"dip \\<in> vD(rt (\\<sigma> nhip))\"\n                                                  and 2: \"nhip \\<noteq> dip\"\n                                                  and \"nhip' = the (nhop (rt (\\<sigma> nhip)) dip)\""], ["proof (prove)\nusing this:\n  (nhip, nhip') \\<in> rt_graph \\<sigma> dip\n\ngoal (1 subgoal):\n 1. dip \\<in> vD (rt (\\<sigma> nhip)) &&&\n    nhip \\<noteq> dip &&& nhip' = the (nhop (rt (\\<sigma> nhip)) dip)", "by auto"], ["proof (state)\nthis:\n  dip \\<in> vD (rt (\\<sigma> nhip))\n  nhip \\<noteq> dip\n  nhip' = the (nhop (rt (\\<sigma> nhip)) dip)\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(ip, y) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+;\n        (y, z) \\<in> rt_graph \\<sigma> dip;\n        \\<lbrakk>dip \\<in> vD (rt (\\<sigma> y)); y \\<noteq> dip\\<rbrakk>\n        \\<Longrightarrow> rt (\\<sigma> ip)\n                          \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> y);\n        dip \\<in> vD (rt (\\<sigma> z)); z \\<noteq> dip\\<rbrakk>\n       \\<Longrightarrow> rt (\\<sigma> ip)\n                         \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> z)", "from 1 2"], ["proof (chain)\npicking this:\n  dip \\<in> vD (rt (\\<sigma> nhip))\n  nhip \\<noteq> dip", "have \"rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip)\""], ["proof (prove)\nusing this:\n  dip \\<in> vD (rt (\\<sigma> nhip))\n  nhip \\<noteq> dip\n\ngoal (1 subgoal):\n 1. rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip)", "by (rule IH)"], ["proof (state)\nthis:\n  rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip)\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(ip, y) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+;\n        (y, z) \\<in> rt_graph \\<sigma> dip;\n        \\<lbrakk>dip \\<in> vD (rt (\\<sigma> y)); y \\<noteq> dip\\<rbrakk>\n        \\<Longrightarrow> rt (\\<sigma> ip)\n                          \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> y);\n        dip \\<in> vD (rt (\\<sigma> z)); z \\<noteq> dip\\<rbrakk>\n       \\<Longrightarrow> rt (\\<sigma> ip)\n                         \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> z)", "also"], ["proof (state)\nthis:\n  rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip)\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(ip, y) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+;\n        (y, z) \\<in> rt_graph \\<sigma> dip;\n        \\<lbrakk>dip \\<in> vD (rt (\\<sigma> y)); y \\<noteq> dip\\<rbrakk>\n        \\<Longrightarrow> rt (\\<sigma> ip)\n                          \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> y);\n        dip \\<in> vD (rt (\\<sigma> z)); z \\<noteq> dip\\<rbrakk>\n       \\<Longrightarrow> rt (\\<sigma> ip)\n                         \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> z)", "have \"rt (\\<sigma> nhip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt (\\<sigma> nhip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rt (\\<sigma> nhip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip')", "from \\<open>dip \\<in> vD(rt (\\<sigma> nhip))\\<close> and \\<open>dip \\<in> vD(rt (\\<sigma> nhip'))\\<close>"], ["proof (chain)\npicking this:\n  dip \\<in> vD (rt (\\<sigma> nhip))\n  dip \\<in> vD (rt (\\<sigma> nhip'))", "have \"dip \\<in> vD(rt (\\<sigma> nhip)) \\<inter> vD(rt (\\<sigma> nhip'))\""], ["proof (prove)\nusing this:\n  dip \\<in> vD (rt (\\<sigma> nhip))\n  dip \\<in> vD (rt (\\<sigma> nhip'))\n\ngoal (1 subgoal):\n 1. dip \\<in> vD (rt (\\<sigma> nhip)) \\<inter> vD (rt (\\<sigma> nhip'))", ".."], ["proof (state)\nthis:\n  dip \\<in> vD (rt (\\<sigma> nhip)) \\<inter> vD (rt (\\<sigma> nhip'))\n\ngoal (1 subgoal):\n 1. rt (\\<sigma> nhip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip')", "with \\<open>nhip' \\<noteq> dip\\<close>\n                    and \\<open>nhip' = the (nhop (rt (\\<sigma> nhip)) dip)\\<close>\n                    and inv"], ["proof (chain)\npicking this:\n  nhip' \\<noteq> dip\n  nhip' = the (nhop (rt (\\<sigma> nhip)) dip)\n  \\<forall>ip dip.\n     let nhip = the (nhop (rt (\\<sigma> ip)) dip)\n     in dip\n        \\<in> vD (rt (\\<sigma> ip)) \\<inter> vD (rt (\\<sigma> nhip)) \\<and>\n        nhip \\<noteq> dip \\<longrightarrow>\n        rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip)\n  dip \\<in> vD (rt (\\<sigma> nhip)) \\<inter> vD (rt (\\<sigma> nhip'))", "show \"rt (\\<sigma> nhip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip')\""], ["proof (prove)\nusing this:\n  nhip' \\<noteq> dip\n  nhip' = the (nhop (rt (\\<sigma> nhip)) dip)\n  \\<forall>ip dip.\n     let nhip = the (nhop (rt (\\<sigma> ip)) dip)\n     in dip\n        \\<in> vD (rt (\\<sigma> ip)) \\<inter> vD (rt (\\<sigma> nhip)) \\<and>\n        nhip \\<noteq> dip \\<longrightarrow>\n        rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip)\n  dip \\<in> vD (rt (\\<sigma> nhip)) \\<inter> vD (rt (\\<sigma> nhip'))\n\ngoal (1 subgoal):\n 1. rt (\\<sigma> nhip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip')", "by (clarsimp simp: Let_def)"], ["proof (state)\nthis:\n  rt (\\<sigma> nhip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rt (\\<sigma> nhip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip')\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(ip, y) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+;\n        (y, z) \\<in> rt_graph \\<sigma> dip;\n        \\<lbrakk>dip \\<in> vD (rt (\\<sigma> y)); y \\<noteq> dip\\<rbrakk>\n        \\<Longrightarrow> rt (\\<sigma> ip)\n                          \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> y);\n        dip \\<in> vD (rt (\\<sigma> z)); z \\<noteq> dip\\<rbrakk>\n       \\<Longrightarrow> rt (\\<sigma> ip)\n                         \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> z)", "finally"], ["proof (chain)\npicking this:\n  rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip')", "show \"rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip')\""], ["proof (prove)\nusing this:\n  rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip')\n\ngoal (1 subgoal):\n 1. rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip')", "."], ["proof (state)\nthis:\n  rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> nhip')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> ip')\n\ngoal (1 subgoal):\n 1. \\<And>dip.\n       \\<forall>i dip.\n          let nhip = the (nhop (rt (\\<sigma> i)) dip)\n          in dip\n             \\<in> vD (rt (\\<sigma> i)) \\<inter>\n                   vD (rt (\\<sigma> nhip)) \\<and>\n             nhip \\<noteq> dip \\<longrightarrow>\n             rt (\\<sigma> i)\n             \\<sqsubset>\\<^bsub>dip\\<^esub> rt\n       (\\<sigma> nhip) \\<Longrightarrow>\n       irrefl ((rt_graph \\<sigma> dip)\\<^sup>+)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>(?ip2, ?ip'2) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+;\n   dip \\<in> vD (rt (\\<sigma> ?ip'2)); ?ip'2 \\<noteq> dip\\<rbrakk>\n  \\<Longrightarrow> rt (\\<sigma> ?ip2)\n                    \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> ?ip'2)\n\ngoal (1 subgoal):\n 1. \\<And>dip.\n       \\<forall>i dip.\n          let nhip = the (nhop (rt (\\<sigma> i)) dip)\n          in dip\n             \\<in> vD (rt (\\<sigma> i)) \\<inter>\n                   vD (rt (\\<sigma> nhip)) \\<and>\n             nhip \\<noteq> dip \\<longrightarrow>\n             rt (\\<sigma> i)\n             \\<sqsubset>\\<^bsub>dip\\<^esub> rt\n       (\\<sigma> nhip) \\<Longrightarrow>\n       irrefl ((rt_graph \\<sigma> dip)\\<^sup>+)", "note fresher = this"], ["proof (state)\nthis:\n  \\<lbrakk>(?ip2, ?ip'2) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+;\n   dip \\<in> vD (rt (\\<sigma> ?ip'2)); ?ip'2 \\<noteq> dip\\<rbrakk>\n  \\<Longrightarrow> rt (\\<sigma> ?ip2)\n                    \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> ?ip'2)\n\ngoal (1 subgoal):\n 1. \\<And>dip.\n       \\<forall>i dip.\n          let nhip = the (nhop (rt (\\<sigma> i)) dip)\n          in dip\n             \\<in> vD (rt (\\<sigma> i)) \\<inter>\n                   vD (rt (\\<sigma> nhip)) \\<and>\n             nhip \\<noteq> dip \\<longrightarrow>\n             rt (\\<sigma> i)\n             \\<sqsubset>\\<^bsub>dip\\<^esub> rt\n       (\\<sigma> nhip) \\<Longrightarrow>\n       irrefl ((rt_graph \\<sigma> dip)\\<^sup>+)", "show \"irrefl ((rt_graph \\<sigma> dip)\\<^sup>+)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. irrefl ((rt_graph \\<sigma> dip)\\<^sup>+)", "unfolding irrefl_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a. (a, a) \\<notin> (rt_graph \\<sigma> dip)\\<^sup>+", "proof (intro allI notI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       (a, a) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+ \\<Longrightarrow> False", "fix ip"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       (a, a) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+ \\<Longrightarrow> False", "assume \"(ip, ip) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+\""], ["proof (state)\nthis:\n  (ip, ip) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       (a, a) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+ \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  (ip, ip) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       (a, a) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+ \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  (ip, ip) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+", "have \"dip \\<in> vD(rt (\\<sigma> ip))\"\n                     and \"ip \\<noteq> dip\""], ["proof (prove)\nusing this:\n  (ip, ip) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+\n\ngoal (1 subgoal):\n 1. dip \\<in> vD (rt (\\<sigma> ip)) &&& ip \\<noteq> dip", "by auto"], ["proof (state)\nthis:\n  dip \\<in> vD (rt (\\<sigma> ip))\n  ip \\<noteq> dip\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       (a, a) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+ \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  (ip, ip) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+\n  dip \\<in> vD (rt (\\<sigma> ip))\n  ip \\<noteq> dip", "have \"rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> ip)\""], ["proof (prove)\nusing this:\n  (ip, ip) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+\n  dip \\<in> vD (rt (\\<sigma> ip))\n  ip \\<noteq> dip\n\ngoal (1 subgoal):\n 1. rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> ip)", "by (rule fresher)"], ["proof (state)\nthis:\n  rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> ip)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       (a, a) \\<in> (rt_graph \\<sigma> dip)\\<^sup>+ \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  rt (\\<sigma> ip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt (\\<sigma> ip)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  irrefl ((rt_graph \\<sigma> dip)\\<^sup>+)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}