{"file_name": "/home/qj213/afp-2021-10-22/thys/AODV/variants/e_all_abcd/E_Fresher.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/AODV", "problem_names": ["lemma nsqnr_def':\n  \"nsqn\\<^sub>r r = (if \\<pi>\\<^sub>4(r) = inv then \\<pi>\\<^sub>2(r) - 1 else \\<pi>\\<^sub>2(r))\"", "lemma nsqn\\<^sub>r_zero [simp]:\n  \"\\<And>dsn dsk flag hops nhip. nsqn\\<^sub>r (0, dsk, flag, hops, nhip) = 0\"", "lemma nsqn\\<^sub>r_val [simp]:\n  \"\\<And>dsn dsk hops nhip. nsqn\\<^sub>r (dsn, dsk, val, hops, nhip) = dsn\"", "lemma nsqn\\<^sub>r_inv [simp]:\n  \"\\<And>dsn dsk hops nhip. nsqn\\<^sub>r (dsn, dsk, inv, hops, nhip) = dsn - 1\"", "lemma nsqn\\<^sub>r_lte_dsn [simp]:\n  \"\\<And>dsn dsk flag hops nhip. nsqn\\<^sub>r (dsn, dsk, flag, hops, nhip) \\<le> dsn\"", "lemma nsqn_sqn_def:\n  \"\\<And>rt dip. nsqn rt dip = (if flag rt dip = Some val \\<or> sqn rt dip = 0\n                            then sqn rt dip else sqn rt dip - 1)\"", "lemma not_in_kD_nsqn [simp]:\n  assumes \"dip \\<notin> kD(rt)\"\n  shows \"nsqn rt dip = 0\"", "lemma kD_nsqn:\n  assumes \"dip \\<in> kD(rt)\"\n    shows \"nsqn rt dip = nsqn\\<^sub>r(the (\\<sigma>\\<^bsub>route\\<^esub>(rt, dip)))\"", "lemma nsqnr_r_flag_pred [simp, intro]:\n    fixes dsn dsk flag hops nhip pre\n  assumes \"P (nsqn\\<^sub>r (dsn, dsk, val, hops, nhip))\"\n      and \"P (nsqn\\<^sub>r (dsn, dsk, inv, hops, nhip))\"\n    shows \"P (nsqn\\<^sub>r (dsn, dsk, flag, hops, nhip))\"", "lemma sqn_nsqn:\n  \"\\<And>rt dip. sqn rt dip - 1 \\<le> nsqn rt dip\"", "lemma nsqn_sqn: \"nsqn rt dip \\<le> sqn rt dip\"", "lemma val_nsqn_sqn [elim, simp]:\n  assumes \"ip\\<in>kD(rt)\"\n      and \"the (flag rt ip) = val\"\n    shows \"nsqn rt ip = sqn rt ip\"", "lemma vD_nsqn_sqn [elim, simp]:\n  assumes \"ip\\<in>vD(rt)\"\n    shows \"nsqn rt ip = sqn rt ip\"", "lemma inv_nsqn_sqn [elim, simp]:\n  assumes \"ip\\<in>kD(rt)\"\n      and \"the (flag rt ip) = inv\"\n    shows \"nsqn rt ip = sqn rt ip - 1\"", "lemma iD_nsqn_sqn [elim, simp]:\n  assumes \"ip\\<in>iD(rt)\"\n    shows \"nsqn rt ip = sqn rt ip - 1\"", "lemma nsqn_update_changed_kno_val [simp]: \"\\<And>rt ip dsn dsk hops nhip.\n  rt \\<noteq> update rt ip (dsn, kno, val, hops, nhip)\n   \\<Longrightarrow> nsqn (update rt ip (dsn, kno, val, hops, nhip)) ip = dsn\"", "lemma nsqn_update_other [simp]:\n    fixes dsn dsk flag hops dip nhip pre rt ip\n  assumes \"dip \\<noteq> ip\"\n    shows \"nsqn (update rt ip (dsn, dsk, flag, hops, nhip)) dip = nsqn rt dip\"", "lemma nsqn_invalidate_eq:\n  assumes \"dip \\<in> kD(rt)\"\n      and \"dests dip = Some rsn\"\n    shows \"nsqn (invalidate rt dests) dip = rsn - 1\"", "lemma nsqn_invalidate_other [simp]:\n  assumes \"dip\\<in>kD(rt)\"\n      and \"dip\\<notin>dom dests\"\n    shows \"nsqn (invalidate rt dests) dip = nsqn rt dip\"", "lemma fresherI1 [intro]:\n  assumes \"nsqn\\<^sub>r r < nsqn\\<^sub>r r'\"\n    shows \"r \\<sqsubseteq> r'\"", "lemma fresherI2 [intro]:\n  assumes \"nsqn\\<^sub>r r = nsqn\\<^sub>r r'\"\n      and \"\\<pi>\\<^sub>5(r) \\<ge> \\<pi>\\<^sub>5(r')\"\n    shows \"r \\<sqsubseteq> r'\"", "lemma fresherI [intro]:\n  assumes \"(nsqn\\<^sub>r r < nsqn\\<^sub>r r') \\<or> (nsqn\\<^sub>r r  = nsqn\\<^sub>r r' \\<and> \\<pi>\\<^sub>5(r) \\<ge> \\<pi>\\<^sub>5(r'))\"\n    shows \"r \\<sqsubseteq> r'\"", "lemma fresherE [elim]:\n  assumes \"r \\<sqsubseteq> r'\"\n      and \"nsqn\\<^sub>r r < nsqn\\<^sub>r r' \\<Longrightarrow> P r r'\"\n      and \"nsqn\\<^sub>r r  = nsqn\\<^sub>r r' \\<and> \\<pi>\\<^sub>5(r) \\<ge> \\<pi>\\<^sub>5(r') \\<Longrightarrow> P r r'\"\n    shows \"P r r'\"", "lemma fresher_refl [simp]: \"r \\<sqsubseteq> r\"", "lemma fresher_trans [elim, trans]:\n  \"\\<lbrakk> x \\<sqsubseteq> y; y \\<sqsubseteq> z \\<rbrakk> \\<Longrightarrow> x \\<sqsubseteq> z\"", "lemma not_fresher_trans [elim, trans]:\n  \"\\<lbrakk> \\<not>(x \\<sqsubseteq> y); \\<not>(z \\<sqsubseteq> x) \\<rbrakk> \\<Longrightarrow> \\<not>(z \\<sqsubseteq> y)\"", "lemma fresher_dsn_flag_hops_const [simp]:\n  fixes dsn dsk dsk' flag hops nhip nhip'\n   shows \"(dsn, dsk, flag, hops, nhip) \\<sqsubseteq> (dsn, dsk', flag, hops, nhip')\"", "lemma rt_fresher_def':\n  \"(rt\\<^sub>1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt\\<^sub>2) = (nsqn\\<^sub>r (the (rt\\<^sub>1 i)) < nsqn\\<^sub>r (the (rt\\<^sub>2 i)) \\<or>\n                     nsqn\\<^sub>r (the (rt\\<^sub>1 i)) = nsqn\\<^sub>r (the (rt\\<^sub>2 i)) \\<and> \\<pi>\\<^sub>5 (the (rt\\<^sub>2 i)) \\<le> \\<pi>\\<^sub>5 (the (rt\\<^sub>1 i)))\"", "lemma single_rt_fresher [intro]:\n  assumes \"the (rt1 ip) \\<sqsubseteq> the (rt2 ip)\"\n    shows \"rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2\"", "lemma rt_fresher_single [intro]:\n  assumes \"rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2\"\n    shows \"the (rt1 ip) \\<sqsubseteq> the (rt2 ip)\"", "lemma rt_fresher_def2:\n  assumes \"dip \\<in> kD(rt1)\"\n      and \"dip \\<in> kD(rt2)\"\n    shows \"(rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2) = (nsqn rt1 dip < nsqn rt2 dip\n                               \\<or> (nsqn rt1 dip = nsqn rt2 dip\n                                   \\<and> the (dhops rt1 dip) \\<ge> the (dhops rt2 dip)))\"", "lemma rt_fresherI1 [intro]:\n  assumes \"dip \\<in> kD(rt1)\"\n      and \"dip \\<in> kD(rt2)\"\n      and \"nsqn rt1 dip < nsqn rt2 dip\"\n    shows \"rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\"", "lemma rt_fresherI2 [intro]:\n  assumes \"dip \\<in> kD(rt1)\"\n      and \"dip \\<in> kD(rt2)\"\n      and \"nsqn rt1 dip = nsqn rt2 dip\"\n      and \"the (dhops rt1 dip) \\<ge> the (dhops rt2 dip)\"\n    shows \"rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\"", "lemma rt_fresherE [elim]:\n  assumes \"rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\"\n      and \"dip \\<in> kD(rt1)\"\n      and \"dip \\<in> kD(rt2)\"\n      and \"\\<lbrakk> nsqn rt1 dip < nsqn rt2 dip \\<rbrakk> \\<Longrightarrow> P rt1 rt2 dip\"\n      and \"\\<lbrakk> nsqn rt1 dip = nsqn rt2 dip;\n             the (dhops rt1 dip) \\<ge> the (dhops rt2 dip) \\<rbrakk> \\<Longrightarrow> P rt1 rt2 dip\"\n    shows \"P rt1 rt2 dip\"", "lemma rt_fresher_refl [simp]: \"rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt\"", "lemma rt_fresher_trans [elim, trans]:\n  assumes \"rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\"\n      and \"rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\"\n    shows \"rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\"", "lemma rt_fresher_if_Some [intro!]:\n  assumes \"the (rt dip) \\<sqsubseteq> r\"\n    shows \"rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> (\\<lambda>ip. if ip = dip then Some r else rt ip)\"", "lemma rt_fresh_as_refl [simp]: \"\\<And>rt dip. rt \\<approx>\\<^bsub>dip\\<^esub> rt\"", "lemma rt_fresh_as_trans [simp, intro, trans]:\n  \"\\<And>rt1 rt2 rt3 dip. \\<lbrakk> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2; rt2 \\<approx>\\<^bsub>dip\\<^esub> rt3 \\<rbrakk> \\<Longrightarrow> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt3\"", "lemma rt_fresh_asI [intro!]:\n  assumes \"rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\"\n      and \"rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\"\n    shows \"rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\"", "lemma rt_fresh_as_fresherI [intro]:\n  assumes \"dip\\<in>kD(rt1)\"\n      and \"dip\\<in>kD(rt2)\"\n      and \"the (rt1 dip) \\<sqsubseteq> the (rt2 dip)\"\n      and \"the (rt2 dip) \\<sqsubseteq> the (rt1 dip)\"\n    shows \"rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\"", "lemma nsqn_rt_fresh_asI:\n  assumes \"dip \\<in> kD(rt)\"\n      and \"dip \\<in> kD(rt')\"\n      and \"nsqn rt dip = nsqn rt' dip\"\n      and \"\\<pi>\\<^sub>5(the (rt dip)) = \\<pi>\\<^sub>5(the (rt' dip))\"\n    shows \"rt \\<approx>\\<^bsub>dip\\<^esub> rt'\"", "lemma rt_fresh_asE [elim]:\n  assumes \"rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\"\n      and \"\\<lbrakk> rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2; rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1 \\<rbrakk> \\<Longrightarrow> P rt1 rt2 dip\"\n    shows \"P rt1 rt2 dip\"", "lemma rt_fresh_asD1 [dest]:\n  assumes \"rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\"\n    shows \"rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\"", "lemma rt_fresh_asD2 [dest]:\n  assumes \"rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\"\n    shows \"rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\"", "lemma rt_fresh_as_sym:\n  assumes \"rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\"\n    shows \"rt2 \\<approx>\\<^bsub>dip\\<^esub> rt1\"", "lemma not_rt_fresh_asI1 [intro]:\n  assumes \"\\<not> (rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2)\"\n    shows \"\\<not> (rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2)\"", "lemma not_rt_fresh_asI2 [intro]:\n  assumes \"\\<not> (rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1)\"\n    shows \"\\<not> (rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2)\"", "lemma not_single_rt_fresher [elim]:\n  assumes \"\\<not>(the (rt1 ip) \\<sqsubseteq> the (rt2 ip))\"\n    shows \"\\<not>(rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2)\"", "lemmas not_single_rt_fresh_asI1 [intro] =  not_rt_fresh_asI1 [OF not_single_rt_fresher]", "lemmas not_single_rt_fresh_asI2 [intro] =  not_rt_fresh_asI2 [OF not_single_rt_fresher]", "lemma not_rt_fresher_single [elim]:\n  assumes \"\\<not>(rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2)\"\n    shows \"\\<not>(the (rt1 ip) \\<sqsubseteq> the (rt2 ip))\"", "lemma rt_fresh_as_nsqnr:\n  assumes \"dip \\<in> kD(rt1)\"\n      and \"dip \\<in> kD(rt2)\"\n      and \"rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\"\n    shows \"nsqn\\<^sub>r (the (rt2 dip)) = nsqn\\<^sub>r (the (rt1 dip))\"", "lemma rt_fresher_mapupd [intro!]:\n  assumes \"dip\\<in>kD(rt)\"\n      and \"the (rt dip) \\<sqsubseteq> r\"\n    shows \"rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt(dip \\<mapsto> r)\"", "lemma rt_fresher_map_update_other [intro!]:\n  assumes \"dip\\<in>kD(rt)\"\n      and \"dip \\<noteq> ip\"\n    shows \"rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt(ip \\<mapsto> r)\"", "lemma rt_fresher_update_other [simp]:\n  assumes inkD: \"dip\\<in>kD(rt)\"\n     and \"dip \\<noteq> ip\"\n   shows \"rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt ip r\"", "theorem rt_fresher_update [simp]:\n  assumes \"dip\\<in>kD(rt)\"\n      and \"the (dhops rt dip) \\<ge> 1\"\n      and \"update_arg_wf r\"\n   shows \"rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt ip r\"", "theorem rt_fresher_invalidate [simp]:\n  assumes \"dip\\<in>kD(rt)\"\n      and indests: \"\\<forall>rip\\<in>dom(dests). rip\\<in>vD(rt) \\<and> sqn rt rip < the (dests rip)\"\n    shows \"rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> invalidate rt dests\"", "lemma nsqn\\<^sub>r_invalidate [simp]:\n  assumes \"dip\\<in>kD(rt)\"\n      and \"dip\\<in>dom(dests)\"\n    shows \"nsqn\\<^sub>r (the (invalidate rt dests dip)) = the (dests dip) - 1\"", "lemma rt_fresh_as_inc_invalidate [simp]:\n  assumes \"dip\\<in>kD(rt)\"\n      and \"\\<forall>rip\\<in>dom(dests). rip\\<in>vD(rt) \\<and> the (dests rip) = inc (sqn rt rip)\"\n    shows \"rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests\"", "lemmas rt_fresher_inc_invalidate [simp] = rt_fresh_as_inc_invalidate [THEN rt_fresh_asD1]", "lemma rt_strictly_fresher_def'':\n  \"rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2 = ((rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2) \\<and> \\<not>(rt2 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt1))\"", "lemma rt_strictly_fresherI' [intro]:\n  assumes \"rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2\"\n      and \"\\<not>(rt2 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt1)\"\n    shows \"rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2\"", "lemma rt_strictly_fresherE' [elim]:\n  assumes \"rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2\"\n      and \"\\<lbrakk> rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2; \\<not>(rt2 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt1) \\<rbrakk> \\<Longrightarrow> P rt1 rt2 i\"\n    shows \"P rt1 rt2 i\"", "lemma rt_strictly_fresherI [intro]:\n  assumes \"rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2\"\n      and \"\\<not>(rt1 \\<approx>\\<^bsub>i\\<^esub> rt2)\"\n    shows \"rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2\"", "lemmas rt_strictly_fresher_singleI [elim] = rt_strictly_fresherI [OF single_rt_fresher]", "lemma rt_strictly_fresherE [elim]:\n  assumes \"rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2\"\n      and \"\\<lbrakk> rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2; \\<not>(rt1 \\<approx>\\<^bsub>i\\<^esub> rt2) \\<rbrakk> \\<Longrightarrow> P rt1 rt2 i\"\n    shows \"P rt1 rt2 i\"", "lemma rt_strictly_fresher_def':\n  \"rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2 =\n     (nsqn\\<^sub>r (the (rt1 i)) < nsqn\\<^sub>r (the (rt2 i))\n       \\<or> (nsqn\\<^sub>r (the (rt1 i)) = nsqn\\<^sub>r (the (rt2 i)) \\<and> \\<pi>\\<^sub>5(the (rt1 i)) > \\<pi>\\<^sub>5(the (rt2 i))))\"", "lemma rt_strictly_fresher_fresherD [dest]:\n  assumes \"rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2\"\n    shows \"the (rt1 dip) \\<sqsubseteq> the (rt2 dip)\"", "lemma rt_strictly_fresher_not_fresh_asD [dest]:\n  assumes \"rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2\"\n    shows \"\\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\"", "lemma rt_strictly_fresher_trans [elim, trans]:\n  assumes \"rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2\"\n      and \"rt2 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\"\n    shows \"rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\"", "lemma rt_strictly_fresher_irefl [simp]: \"\\<not> (rt \\<sqsubset>\\<^bsub>dip\\<^esub> rt)\"", "lemma rt_fresher_trans_rt_strictly_fresher [elim, trans]:\n  assumes \"rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2\"\n      and \"rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\"\n    shows \"rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\"", "lemma rt_fresher_trans_rt_strictly_fresher' [elim, trans]:\n  assumes \"rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\"\n      and \"rt2 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\"\n    shows \"rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\"", "lemma rt_fresher_imp_nsqn_le:\n  assumes \"rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2\"\n      and \"ip \\<in> kD rt1\"\n      and \"ip \\<in> kD rt2\"\n    shows \"nsqn rt1 ip \\<le> nsqn rt2 ip\"", "lemma rt_strictly_fresher_ltI [intro]:\n  assumes \"dip \\<in> kD(rt1)\"\n      and \"dip \\<in> kD(rt2)\"\n      and \"nsqn rt1 dip < nsqn rt2 dip\"\n    shows \"rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2\"", "lemma rt_strictly_fresher_eqI [intro]:\n  assumes \"i\\<in>kD(rt1)\"\n      and \"i\\<in>kD(rt2)\"\n      and \"nsqn rt1 i = nsqn rt2 i\"\n      and \"\\<pi>\\<^sub>5(the (rt2 i)) < \\<pi>\\<^sub>5(the (rt1 i))\"\n    shows \"rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2\"", "lemma invalidate_rtsf_left [simp]:\n  \"\\<And>dests dip rt rt'. dests dip = None \\<Longrightarrow> (invalidate rt dests \\<sqsubset>\\<^bsub>dip\\<^esub> rt') = (rt \\<sqsubset>\\<^bsub>dip\\<^esub> rt')\"", "lemma vD_invalidate_rt_strictly_fresher [simp]:\n  assumes \"dip \\<in> vD(invalidate rt1 dests)\"\n    shows \"(invalidate rt1 dests \\<sqsubset>\\<^bsub>dip\\<^esub> rt2) = (rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2)\"", "lemma rt_strictly_fresher_update_other [elim!]:\n  \"\\<And>dip ip rt r rt'. \\<lbrakk> dip \\<noteq> ip; rt \\<sqsubset>\\<^bsub>dip\\<^esub> rt' \\<rbrakk> \\<Longrightarrow> update rt ip r \\<sqsubset>\\<^bsub>dip\\<^esub> rt'\"", "lemma lt_sqn_imp_update_strictly_fresher:\n  assumes \"dip \\<in> vD (rt2 nhip)\"\n      and  *: \"osn < sqn (rt2 nhip) dip\"\n      and **: \"rt \\<noteq> update rt dip (osn, kno, val, hops, nhip)\"\n    shows \"update rt dip (osn, kno, val, hops, nhip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt2 nhip\"", "lemma dhops_le_hops_imp_update_strictly_fresher:\n  assumes \"dip \\<in> vD(rt2 nhip)\"\n      and sqn: \"sqn (rt2 nhip) dip = osn\"\n      and hop: \"the (dhops (rt2 nhip) dip) \\<le> hops\"\n      and **: \"rt \\<noteq> update rt dip (osn, kno, val, Suc hops, nhip)\"\n    shows \"update rt dip (osn, kno, val, Suc hops, nhip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt2 nhip\"", "lemma nsqn_invalidate:\n  assumes \"dip \\<in> kD(rt)\"\n      and \"\\<forall>ip\\<in>dom(dests). ip \\<in> vD(rt) \\<and> the (dests ip) = inc (sqn rt ip)\"\n    shows \"nsqn (invalidate rt dests) dip = nsqn rt dip\""], "translations": [["", "lemma nsqnr_def':\n  \"nsqn\\<^sub>r r = (if \\<pi>\\<^sub>4(r) = inv then \\<pi>\\<^sub>2(r) - 1 else \\<pi>\\<^sub>2(r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r r =\n    (if \\<pi>\\<^sub>4 r = Aodv_Basic.inv then \\<pi>\\<^sub>2 r - 1\n     else \\<pi>\\<^sub>2 r)", "unfolding nsqn\\<^sub>r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if \\<pi>\\<^sub>4 r = val \\<or> \\<pi>\\<^sub>2 r = 0 then \\<pi>\\<^sub>2 r\n     else \\<pi>\\<^sub>2 r - 1) =\n    (if \\<pi>\\<^sub>4 r = Aodv_Basic.inv then \\<pi>\\<^sub>2 r - 1\n     else \\<pi>\\<^sub>2 r)", "by simp"], ["", "lemma nsqn\\<^sub>r_zero [simp]:\n  \"\\<And>dsn dsk flag hops nhip. nsqn\\<^sub>r (0, dsk, flag, hops, nhip) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>dsn dsk flag hops nhip.\n       nsqn\\<^sub>r (0, dsk, flag, hops, nhip) = 0", "unfolding nsqn\\<^sub>r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>dsn dsk flag hops nhip.\n       (if \\<pi>\\<^sub>4 (0, dsk, flag, hops, nhip) = val \\<or>\n           \\<pi>\\<^sub>2 (0, dsk, flag, hops, nhip) = 0\n        then \\<pi>\\<^sub>2 (0, dsk, flag, hops, nhip)\n        else \\<pi>\\<^sub>2 (0, dsk, flag, hops, nhip) - 1) =\n       0", "by clarsimp"], ["", "lemma nsqn\\<^sub>r_val [simp]:\n  \"\\<And>dsn dsk hops nhip. nsqn\\<^sub>r (dsn, dsk, val, hops, nhip) = dsn\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>dsn dsk hops nhip. nsqn\\<^sub>r (dsn, dsk, val, hops, nhip) = dsn", "unfolding nsqn\\<^sub>r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>dsn dsk hops nhip.\n       (if \\<pi>\\<^sub>4 (dsn, dsk, val, hops, nhip) = val \\<or>\n           \\<pi>\\<^sub>2 (dsn, dsk, val, hops, nhip) = 0\n        then \\<pi>\\<^sub>2 (dsn, dsk, val, hops, nhip)\n        else \\<pi>\\<^sub>2 (dsn, dsk, val, hops, nhip) - 1) =\n       dsn", "by clarsimp"], ["", "lemma nsqn\\<^sub>r_inv [simp]:\n  \"\\<And>dsn dsk hops nhip. nsqn\\<^sub>r (dsn, dsk, inv, hops, nhip) = dsn - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>dsn dsk hops nhip.\n       nsqn\\<^sub>r (dsn, dsk, Aodv_Basic.inv, hops, nhip) = dsn - 1", "unfolding nsqn\\<^sub>r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>dsn dsk hops nhip.\n       (if \\<pi>\\<^sub>4 (dsn, dsk, Aodv_Basic.inv, hops, nhip) = val \\<or>\n           \\<pi>\\<^sub>2 (dsn, dsk, Aodv_Basic.inv, hops, nhip) = 0\n        then \\<pi>\\<^sub>2 (dsn, dsk, Aodv_Basic.inv, hops, nhip)\n        else \\<pi>\\<^sub>2 (dsn, dsk, Aodv_Basic.inv, hops, nhip) - 1) =\n       dsn - 1", "by clarsimp"], ["", "lemma nsqn\\<^sub>r_lte_dsn [simp]:\n  \"\\<And>dsn dsk flag hops nhip. nsqn\\<^sub>r (dsn, dsk, flag, hops, nhip) \\<le> dsn\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>dsn dsk flag hops nhip.\n       nsqn\\<^sub>r (dsn, dsk, flag, hops, nhip) \\<le> dsn", "unfolding nsqn\\<^sub>r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>dsn dsk flag hops nhip.\n       (if \\<pi>\\<^sub>4 (dsn, dsk, flag, hops, nhip) = val \\<or>\n           \\<pi>\\<^sub>2 (dsn, dsk, flag, hops, nhip) = 0\n        then \\<pi>\\<^sub>2 (dsn, dsk, flag, hops, nhip)\n        else \\<pi>\\<^sub>2 (dsn, dsk, flag, hops, nhip) - 1)\n       \\<le> dsn", "by clarsimp"], ["", "subsubsection \"On routes in routing tables\""], ["", "definition\n  nsqn :: \"rt \\<Rightarrow> ip \\<Rightarrow> sqn\"\nwhere\n  \"nsqn \\<equiv> \\<lambda>rt dip. case \\<sigma>\\<^bsub>route\\<^esub>(rt, dip) of None \\<Rightarrow> 0 | Some r \\<Rightarrow> nsqn\\<^sub>r(r)\""], ["", "lemma nsqn_sqn_def:\n  \"\\<And>rt dip. nsqn rt dip = (if flag rt dip = Some val \\<or> sqn rt dip = 0\n                            then sqn rt dip else sqn rt dip - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rt dip.\n       nsqn rt dip =\n       (if flag rt dip = Some val \\<or> sqn rt dip = 0 then sqn rt dip\n        else sqn rt dip - 1)", "unfolding nsqn_def sqn_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rt dip.\n       (case rt dip of None \\<Rightarrow> 0\n        | Some x \\<Rightarrow> nsqn\\<^sub>r x) =\n       (if flag rt dip = Some val \\<or>\n           (case rt dip of None \\<Rightarrow> 0\n            | Some r \\<Rightarrow> \\<pi>\\<^sub>2 r) =\n           0\n        then case rt dip of None \\<Rightarrow> 0\n             | Some r \\<Rightarrow> \\<pi>\\<^sub>2 r\n        else (case rt dip of None \\<Rightarrow> 0\n              | Some r \\<Rightarrow> \\<pi>\\<^sub>2 r) -\n             1)", "by (clarsimp split: option.split)"], ["", "lemma not_in_kD_nsqn [simp]:\n  assumes \"dip \\<notin> kD(rt)\"\n  shows \"nsqn rt dip = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn rt dip = 0", "using assms"], ["proof (prove)\nusing this:\n  dip \\<notin> kD rt\n\ngoal (1 subgoal):\n 1. nsqn rt dip = 0", "unfolding nsqn_def"], ["proof (prove)\nusing this:\n  dip \\<notin> kD rt\n\ngoal (1 subgoal):\n 1. (case rt dip of None \\<Rightarrow> 0\n     | Some x \\<Rightarrow> nsqn\\<^sub>r x) =\n    0", "by simp"], ["", "lemma kD_nsqn:\n  assumes \"dip \\<in> kD(rt)\"\n    shows \"nsqn rt dip = nsqn\\<^sub>r(the (\\<sigma>\\<^bsub>route\\<^esub>(rt, dip)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn rt dip = nsqn\\<^sub>r (the (rt dip))", "using assms [THEN kD_Some]"], ["proof (prove)\nusing this:\n  \\<exists>dsn dsk flag hops nhip.\n     rt dip = Some (dsn, dsk, flag, hops, nhip)\n\ngoal (1 subgoal):\n 1. nsqn rt dip = nsqn\\<^sub>r (the (rt dip))", "unfolding nsqn_def"], ["proof (prove)\nusing this:\n  \\<exists>dsn dsk flag hops nhip.\n     rt dip = Some (dsn, dsk, flag, hops, nhip)\n\ngoal (1 subgoal):\n 1. (case rt dip of None \\<Rightarrow> 0\n     | Some x \\<Rightarrow> nsqn\\<^sub>r x) =\n    nsqn\\<^sub>r (the (rt dip))", "by clarsimp"], ["", "lemma nsqnr_r_flag_pred [simp, intro]:\n    fixes dsn dsk flag hops nhip pre\n  assumes \"P (nsqn\\<^sub>r (dsn, dsk, val, hops, nhip))\"\n      and \"P (nsqn\\<^sub>r (dsn, dsk, inv, hops, nhip))\"\n    shows \"P (nsqn\\<^sub>r (dsn, dsk, flag, hops, nhip))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (nsqn\\<^sub>r (dsn, dsk, flag, hops, nhip))", "using assms"], ["proof (prove)\nusing this:\n  P (nsqn\\<^sub>r (dsn, dsk, val, hops, nhip))\n  P (nsqn\\<^sub>r (dsn, dsk, Aodv_Basic.inv, hops, nhip))\n\ngoal (1 subgoal):\n 1. P (nsqn\\<^sub>r (dsn, dsk, flag, hops, nhip))", "by (cases flag) auto"], ["", "lemma sqn_nsqn:\n  \"\\<And>rt dip. sqn rt dip - 1 \\<le> nsqn rt dip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rt dip. sqn rt dip - 1 \\<le> nsqn rt dip", "unfolding sqn_def nsqn_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rt dip.\n       (case rt dip of None \\<Rightarrow> 0\n        | Some r \\<Rightarrow> \\<pi>\\<^sub>2 r) -\n       1\n       \\<le> (case rt dip of None \\<Rightarrow> 0\n              | Some x \\<Rightarrow> nsqn\\<^sub>r x)", "by (clarsimp split: option.split)"], ["", "lemma nsqn_sqn: \"nsqn rt dip \\<le> sqn rt dip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn rt dip \\<le> sqn rt dip", "unfolding sqn_def nsqn_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case rt dip of None \\<Rightarrow> 0\n     | Some x \\<Rightarrow> nsqn\\<^sub>r x)\n    \\<le> (case rt dip of None \\<Rightarrow> 0\n           | Some r \\<Rightarrow> \\<pi>\\<^sub>2 r)", "by (cases \"rt dip\") auto"], ["", "lemma val_nsqn_sqn [elim, simp]:\n  assumes \"ip\\<in>kD(rt)\"\n      and \"the (flag rt ip) = val\"\n    shows \"nsqn rt ip = sqn rt ip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn rt ip = sqn rt ip", "using assms"], ["proof (prove)\nusing this:\n  ip \\<in> kD rt\n  the (flag rt ip) = val\n\ngoal (1 subgoal):\n 1. nsqn rt ip = sqn rt ip", "unfolding nsqn_sqn_def"], ["proof (prove)\nusing this:\n  ip \\<in> kD rt\n  the (flag rt ip) = val\n\ngoal (1 subgoal):\n 1. (if flag rt ip = Some val \\<or> sqn rt ip = 0 then sqn rt ip\n     else sqn rt ip - 1) =\n    sqn rt ip", "by auto"], ["", "lemma vD_nsqn_sqn [elim, simp]:\n  assumes \"ip\\<in>vD(rt)\"\n    shows \"nsqn rt ip = sqn rt ip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn rt ip = sqn rt ip", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nsqn rt ip = sqn rt ip", "from \\<open>ip\\<in>vD(rt)\\<close>"], ["proof (chain)\npicking this:\n  ip \\<in> vD rt", "have \"ip\\<in>kD(rt)\"\n                      and \"the (flag rt ip) = val\""], ["proof (prove)\nusing this:\n  ip \\<in> vD rt\n\ngoal (1 subgoal):\n 1. ip \\<in> kD rt &&& the (flag rt ip) = val", "by auto"], ["proof (state)\nthis:\n  ip \\<in> kD rt\n  the (flag rt ip) = val\n\ngoal (1 subgoal):\n 1. nsqn rt ip = sqn rt ip", "thus ?thesis"], ["proof (prove)\nusing this:\n  ip \\<in> kD rt\n  the (flag rt ip) = val\n\ngoal (1 subgoal):\n 1. nsqn rt ip = sqn rt ip", ".."], ["proof (state)\nthis:\n  nsqn rt ip = sqn rt ip\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inv_nsqn_sqn [elim, simp]:\n  assumes \"ip\\<in>kD(rt)\"\n      and \"the (flag rt ip) = inv\"\n    shows \"nsqn rt ip = sqn rt ip - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn rt ip = sqn rt ip - 1", "using assms"], ["proof (prove)\nusing this:\n  ip \\<in> kD rt\n  the (flag rt ip) = Aodv_Basic.inv\n\ngoal (1 subgoal):\n 1. nsqn rt ip = sqn rt ip - 1", "unfolding nsqn_sqn_def"], ["proof (prove)\nusing this:\n  ip \\<in> kD rt\n  the (flag rt ip) = Aodv_Basic.inv\n\ngoal (1 subgoal):\n 1. (if flag rt ip = Some val \\<or> sqn rt ip = 0 then sqn rt ip\n     else sqn rt ip - 1) =\n    sqn rt ip - 1", "by auto"], ["", "lemma iD_nsqn_sqn [elim, simp]:\n  assumes \"ip\\<in>iD(rt)\"\n    shows \"nsqn rt ip = sqn rt ip - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn rt ip = sqn rt ip - 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nsqn rt ip = sqn rt ip - 1", "from \\<open>ip\\<in>iD(rt)\\<close>"], ["proof (chain)\npicking this:\n  ip \\<in> iD rt", "have \"ip\\<in>kD(rt)\"\n                      and \"the (flag rt ip) = inv\""], ["proof (prove)\nusing this:\n  ip \\<in> iD rt\n\ngoal (1 subgoal):\n 1. ip \\<in> kD rt &&& the (flag rt ip) = Aodv_Basic.inv", "by auto"], ["proof (state)\nthis:\n  ip \\<in> kD rt\n  the (flag rt ip) = Aodv_Basic.inv\n\ngoal (1 subgoal):\n 1. nsqn rt ip = sqn rt ip - 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  ip \\<in> kD rt\n  the (flag rt ip) = Aodv_Basic.inv\n\ngoal (1 subgoal):\n 1. nsqn rt ip = sqn rt ip - 1", ".."], ["proof (state)\nthis:\n  nsqn rt ip = sqn rt ip - 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nsqn_update_changed_kno_val [simp]: \"\\<And>rt ip dsn dsk hops nhip.\n  rt \\<noteq> update rt ip (dsn, kno, val, hops, nhip)\n   \\<Longrightarrow> nsqn (update rt ip (dsn, kno, val, hops, nhip)) ip = dsn\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rt ip dsn dsk hops nhip.\n       rt \\<noteq>\n       update rt ip (dsn, kno, val, hops, nhip) \\<Longrightarrow>\n       nsqn (update rt ip (dsn, kno, val, hops, nhip)) ip = dsn", "unfolding nsqn\\<^sub>r_def update_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rt ip dsn dsk hops nhip.\n       rt \\<noteq>\n       (case rt ip of\n        None \\<Rightarrow> rt(ip \\<mapsto> (dsn, kno, val, hops, nhip))\n        | Some s \\<Rightarrow>\n            if \\<pi>\\<^sub>2 s < \\<pi>\\<^sub>2 (dsn, kno, val, hops, nhip)\n            then rt(ip \\<mapsto> (dsn, kno, val, hops, nhip))\n            else if \\<pi>\\<^sub>2 s =\n                    \\<pi>\\<^sub>2 (dsn, kno, val, hops, nhip) \\<and>\n                    (\\<pi>\\<^sub>5 (dsn, kno, val, hops, nhip)\n                     < \\<pi>\\<^sub>5 s \\<or>\n                     \\<pi>\\<^sub>4 s = Aodv_Basic.inv)\n                 then rt(ip \\<mapsto> (dsn, kno, val, hops, nhip))\n                 else if \\<pi>\\<^sub>3 (dsn, kno, val, hops, nhip) = unk\n                      then rt(ip \\<mapsto>\n                           (\\<pi>\\<^sub>2 s,\n                            snd (dsn, kno, val, hops, nhip)))\n                      else rt(ip \\<mapsto> s)) \\<Longrightarrow>\n       nsqn\n        (case rt ip of\n         None \\<Rightarrow> rt(ip \\<mapsto> (dsn, kno, val, hops, nhip))\n         | Some s \\<Rightarrow>\n             if \\<pi>\\<^sub>2 s < \\<pi>\\<^sub>2 (dsn, kno, val, hops, nhip)\n             then rt(ip \\<mapsto> (dsn, kno, val, hops, nhip))\n             else if \\<pi>\\<^sub>2 s =\n                     \\<pi>\\<^sub>2 (dsn, kno, val, hops, nhip) \\<and>\n                     (\\<pi>\\<^sub>5 (dsn, kno, val, hops, nhip)\n                      < \\<pi>\\<^sub>5 s \\<or>\n                      \\<pi>\\<^sub>4 s = Aodv_Basic.inv)\n                  then rt(ip \\<mapsto> (dsn, kno, val, hops, nhip))\n                  else if \\<pi>\\<^sub>3 (dsn, kno, val, hops, nhip) = unk\n                       then rt(ip \\<mapsto>\n                            (\\<pi>\\<^sub>2 s,\n                             snd (dsn, kno, val, hops, nhip)))\n                       else rt(ip \\<mapsto> s))\n        ip =\n       dsn", "by (clarsimp simp: kD_nsqn split: option.split_asm option.split if_split_asm)\n     (metis fun_upd_triv)"], ["", "lemma nsqn_update_other [simp]:\n    fixes dsn dsk flag hops dip nhip pre rt ip\n  assumes \"dip \\<noteq> ip\"\n    shows \"nsqn (update rt ip (dsn, dsk, flag, hops, nhip)) dip = nsqn rt dip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn (update rt ip (dsn, dsk, flag, hops, nhip)) dip = nsqn rt dip", "using assms"], ["proof (prove)\nusing this:\n  dip \\<noteq> ip\n\ngoal (1 subgoal):\n 1. nsqn (update rt ip (dsn, dsk, flag, hops, nhip)) dip = nsqn rt dip", "unfolding nsqn_def"], ["proof (prove)\nusing this:\n  dip \\<noteq> ip\n\ngoal (1 subgoal):\n 1. (case update rt ip (dsn, dsk, flag, hops, nhip) dip of\n     None \\<Rightarrow> 0 | Some x \\<Rightarrow> nsqn\\<^sub>r x) =\n    (case rt dip of None \\<Rightarrow> 0\n     | Some x \\<Rightarrow> nsqn\\<^sub>r x)", "by (clarsimp split: option.split)"], ["", "lemma nsqn_invalidate_eq:\n  assumes \"dip \\<in> kD(rt)\"\n      and \"dests dip = Some rsn\"\n    shows \"nsqn (invalidate rt dests) dip = rsn - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn (invalidate rt dests) dip = rsn - 1", "using assms"], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n  dests dip = Some rsn\n\ngoal (1 subgoal):\n 1. nsqn (invalidate rt dests) dip = rsn - 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>dip \\<in> kD rt; dests dip = Some rsn\\<rbrakk>\n    \\<Longrightarrow> nsqn (invalidate rt dests) dip = rsn - 1", "from assms"], ["proof (chain)\npicking this:\n  dip \\<in> kD rt\n  dests dip = Some rsn", "obtain dsk hops nhip\n      where \"invalidate rt dests dip = Some (rsn, dsk, inv, hops, nhip)\""], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n  dests dip = Some rsn\n\ngoal (1 subgoal):\n 1. (\\<And>dsk hops nhip.\n        invalidate rt dests dip =\n        Some (rsn, dsk, Aodv_Basic.inv, hops, nhip) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding invalidate_def"], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n  dests dip = Some rsn\n\ngoal (1 subgoal):\n 1. (\\<And>dsk hops nhip.\n        (case (rt dip, dests dip) of (None, x) \\<Rightarrow> None\n         | (Some (a, ab, ad, af, bb), None) \\<Rightarrow>\n             Some (a, ab, ad, af, bb)\n         | (Some (a, ab, ad, af, bb), Some rsn) \\<Rightarrow>\n             Some (rsn, ab, Aodv_Basic.inv, af, bb)) =\n        Some (rsn, dsk, Aodv_Basic.inv, hops, nhip) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  invalidate rt dests dip = Some (rsn, dsk, Aodv_Basic.inv, hops, nhip)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dip \\<in> kD rt; dests dip = Some rsn\\<rbrakk>\n    \\<Longrightarrow> nsqn (invalidate rt dests) dip = rsn - 1", "moreover"], ["proof (state)\nthis:\n  invalidate rt dests dip = Some (rsn, dsk, Aodv_Basic.inv, hops, nhip)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dip \\<in> kD rt; dests dip = Some rsn\\<rbrakk>\n    \\<Longrightarrow> nsqn (invalidate rt dests) dip = rsn - 1", "from \\<open>dip \\<in> kD(rt)\\<close>"], ["proof (chain)\npicking this:\n  dip \\<in> kD rt", "have \"dip \\<in> kD(invalidate rt dests)\""], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n\ngoal (1 subgoal):\n 1. dip \\<in> kD (invalidate rt dests)", "by simp"], ["proof (state)\nthis:\n  dip \\<in> kD (invalidate rt dests)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dip \\<in> kD rt; dests dip = Some rsn\\<rbrakk>\n    \\<Longrightarrow> nsqn (invalidate rt dests) dip = rsn - 1", "ultimately"], ["proof (chain)\npicking this:\n  invalidate rt dests dip = Some (rsn, dsk, Aodv_Basic.inv, hops, nhip)\n  dip \\<in> kD (invalidate rt dests)", "show ?thesis"], ["proof (prove)\nusing this:\n  invalidate rt dests dip = Some (rsn, dsk, Aodv_Basic.inv, hops, nhip)\n  dip \\<in> kD (invalidate rt dests)\n\ngoal (1 subgoal):\n 1. nsqn (invalidate rt dests) dip = rsn - 1", "using \\<open>dests dip = Some rsn\\<close>"], ["proof (prove)\nusing this:\n  invalidate rt dests dip = Some (rsn, dsk, Aodv_Basic.inv, hops, nhip)\n  dip \\<in> kD (invalidate rt dests)\n  dests dip = Some rsn\n\ngoal (1 subgoal):\n 1. nsqn (invalidate rt dests) dip = rsn - 1", "by simp"], ["proof (state)\nthis:\n  nsqn (invalidate rt dests) dip = rsn - 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nsqn_invalidate_other [simp]:\n  assumes \"dip\\<in>kD(rt)\"\n      and \"dip\\<notin>dom dests\"\n    shows \"nsqn (invalidate rt dests) dip = nsqn rt dip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn (invalidate rt dests) dip = nsqn rt dip", "using assms"], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n  dip \\<notin> dom dests\n\ngoal (1 subgoal):\n 1. nsqn (invalidate rt dests) dip = nsqn rt dip", "by (clarsimp simp add: kD_nsqn)"], ["", "subsection \"Comparing routes \""], ["", "definition\n  fresher :: \"r \\<Rightarrow> r \\<Rightarrow> bool\" (\"(_/ \\<sqsubseteq> _)\"  [51, 51] 50)\nwhere\n  \"fresher r r' \\<equiv> ((nsqn\\<^sub>r r < nsqn\\<^sub>r r') \\<or> (nsqn\\<^sub>r r  = nsqn\\<^sub>r r' \\<and> \\<pi>\\<^sub>5(r) \\<ge> \\<pi>\\<^sub>5(r')))\""], ["", "lemma fresherI1 [intro]:\n  assumes \"nsqn\\<^sub>r r < nsqn\\<^sub>r r'\"\n    shows \"r \\<sqsubseteq> r'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<sqsubseteq> r'", "unfolding fresher_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r r < nsqn\\<^sub>r r' \\<or>\n    nsqn\\<^sub>r r = nsqn\\<^sub>r r' \\<and>\n    \\<pi>\\<^sub>5 r' \\<le> \\<pi>\\<^sub>5 r", "using assms"], ["proof (prove)\nusing this:\n  nsqn\\<^sub>r r < nsqn\\<^sub>r r'\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r r < nsqn\\<^sub>r r' \\<or>\n    nsqn\\<^sub>r r = nsqn\\<^sub>r r' \\<and>\n    \\<pi>\\<^sub>5 r' \\<le> \\<pi>\\<^sub>5 r", "by simp"], ["", "lemma fresherI2 [intro]:\n  assumes \"nsqn\\<^sub>r r = nsqn\\<^sub>r r'\"\n      and \"\\<pi>\\<^sub>5(r) \\<ge> \\<pi>\\<^sub>5(r')\"\n    shows \"r \\<sqsubseteq> r'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<sqsubseteq> r'", "unfolding fresher_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r r < nsqn\\<^sub>r r' \\<or>\n    nsqn\\<^sub>r r = nsqn\\<^sub>r r' \\<and>\n    \\<pi>\\<^sub>5 r' \\<le> \\<pi>\\<^sub>5 r", "using assms"], ["proof (prove)\nusing this:\n  nsqn\\<^sub>r r = nsqn\\<^sub>r r'\n  \\<pi>\\<^sub>5 r' \\<le> \\<pi>\\<^sub>5 r\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r r < nsqn\\<^sub>r r' \\<or>\n    nsqn\\<^sub>r r = nsqn\\<^sub>r r' \\<and>\n    \\<pi>\\<^sub>5 r' \\<le> \\<pi>\\<^sub>5 r", "by simp"], ["", "lemma fresherI [intro]:\n  assumes \"(nsqn\\<^sub>r r < nsqn\\<^sub>r r') \\<or> (nsqn\\<^sub>r r  = nsqn\\<^sub>r r' \\<and> \\<pi>\\<^sub>5(r) \\<ge> \\<pi>\\<^sub>5(r'))\"\n    shows \"r \\<sqsubseteq> r'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<sqsubseteq> r'", "unfolding fresher_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r r < nsqn\\<^sub>r r' \\<or>\n    nsqn\\<^sub>r r = nsqn\\<^sub>r r' \\<and>\n    \\<pi>\\<^sub>5 r' \\<le> \\<pi>\\<^sub>5 r", "using assms"], ["proof (prove)\nusing this:\n  nsqn\\<^sub>r r < nsqn\\<^sub>r r' \\<or>\n  nsqn\\<^sub>r r = nsqn\\<^sub>r r' \\<and>\n  \\<pi>\\<^sub>5 r' \\<le> \\<pi>\\<^sub>5 r\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r r < nsqn\\<^sub>r r' \\<or>\n    nsqn\\<^sub>r r = nsqn\\<^sub>r r' \\<and>\n    \\<pi>\\<^sub>5 r' \\<le> \\<pi>\\<^sub>5 r", "."], ["", "lemma fresherE [elim]:\n  assumes \"r \\<sqsubseteq> r'\"\n      and \"nsqn\\<^sub>r r < nsqn\\<^sub>r r' \\<Longrightarrow> P r r'\"\n      and \"nsqn\\<^sub>r r  = nsqn\\<^sub>r r' \\<and> \\<pi>\\<^sub>5(r) \\<ge> \\<pi>\\<^sub>5(r') \\<Longrightarrow> P r r'\"\n    shows \"P r r'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P r r'", "using assms"], ["proof (prove)\nusing this:\n  r \\<sqsubseteq> r'\n  nsqn\\<^sub>r r < nsqn\\<^sub>r r' \\<Longrightarrow> P r r'\n  nsqn\\<^sub>r r = nsqn\\<^sub>r r' \\<and>\n  \\<pi>\\<^sub>5 r' \\<le> \\<pi>\\<^sub>5 r \\<Longrightarrow>\n  P r r'\n\ngoal (1 subgoal):\n 1. P r r'", "unfolding fresher_def"], ["proof (prove)\nusing this:\n  nsqn\\<^sub>r r < nsqn\\<^sub>r r' \\<or>\n  nsqn\\<^sub>r r = nsqn\\<^sub>r r' \\<and>\n  \\<pi>\\<^sub>5 r' \\<le> \\<pi>\\<^sub>5 r\n  nsqn\\<^sub>r r < nsqn\\<^sub>r r' \\<Longrightarrow> P r r'\n  nsqn\\<^sub>r r = nsqn\\<^sub>r r' \\<and>\n  \\<pi>\\<^sub>5 r' \\<le> \\<pi>\\<^sub>5 r \\<Longrightarrow>\n  P r r'\n\ngoal (1 subgoal):\n 1. P r r'", "by auto"], ["", "lemma fresher_refl [simp]: \"r \\<sqsubseteq> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<sqsubseteq> r", "unfolding fresher_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r r < nsqn\\<^sub>r r \\<or>\n    nsqn\\<^sub>r r = nsqn\\<^sub>r r \\<and>\n    \\<pi>\\<^sub>5 r \\<le> \\<pi>\\<^sub>5 r", "by simp"], ["", "lemma fresher_trans [elim, trans]:\n  \"\\<lbrakk> x \\<sqsubseteq> y; y \\<sqsubseteq> z \\<rbrakk> \\<Longrightarrow> x \\<sqsubseteq> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<sqsubseteq> z", "unfolding fresher_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>nsqn\\<^sub>r x < nsqn\\<^sub>r y \\<or>\n             nsqn\\<^sub>r x = nsqn\\<^sub>r y \\<and>\n             \\<pi>\\<^sub>5 y \\<le> \\<pi>\\<^sub>5 x;\n     nsqn\\<^sub>r y < nsqn\\<^sub>r z \\<or>\n     nsqn\\<^sub>r y = nsqn\\<^sub>r z \\<and>\n     \\<pi>\\<^sub>5 z \\<le> \\<pi>\\<^sub>5 y\\<rbrakk>\n    \\<Longrightarrow> nsqn\\<^sub>r x < nsqn\\<^sub>r z \\<or>\n                      nsqn\\<^sub>r x = nsqn\\<^sub>r z \\<and>\n                      \\<pi>\\<^sub>5 z \\<le> \\<pi>\\<^sub>5 x", "by auto"], ["", "lemma not_fresher_trans [elim, trans]:\n  \"\\<lbrakk> \\<not>(x \\<sqsubseteq> y); \\<not>(z \\<sqsubseteq> x) \\<rbrakk> \\<Longrightarrow> \\<not>(z \\<sqsubseteq> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> x \\<sqsubseteq> y; \\<not> z \\<sqsubseteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<not> z \\<sqsubseteq> y", "unfolding fresher_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (nsqn\\<^sub>r x < nsqn\\<^sub>r y \\<or>\n                     nsqn\\<^sub>r x = nsqn\\<^sub>r y \\<and>\n                     \\<pi>\\<^sub>5 y \\<le> \\<pi>\\<^sub>5 x);\n     \\<not> (nsqn\\<^sub>r z < nsqn\\<^sub>r x \\<or>\n             nsqn\\<^sub>r z = nsqn\\<^sub>r x \\<and>\n             \\<pi>\\<^sub>5 x \\<le> \\<pi>\\<^sub>5 z)\\<rbrakk>\n    \\<Longrightarrow> \\<not> (nsqn\\<^sub>r z < nsqn\\<^sub>r y \\<or>\n                              nsqn\\<^sub>r z = nsqn\\<^sub>r y \\<and>\n                              \\<pi>\\<^sub>5 y \\<le> \\<pi>\\<^sub>5 z)", "by auto"], ["", "lemma fresher_dsn_flag_hops_const [simp]:\n  fixes dsn dsk dsk' flag hops nhip nhip'\n   shows \"(dsn, dsk, flag, hops, nhip) \\<sqsubseteq> (dsn, dsk', flag, hops, nhip')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (dsn, dsk, flag, hops, nhip)\n    \\<sqsubseteq> (dsn, dsk', flag, hops, nhip')", "unfolding fresher_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r (dsn, dsk, flag, hops, nhip)\n    < nsqn\\<^sub>r (dsn, dsk', flag, hops, nhip') \\<or>\n    nsqn\\<^sub>r (dsn, dsk, flag, hops, nhip) =\n    nsqn\\<^sub>r (dsn, dsk', flag, hops, nhip') \\<and>\n    \\<pi>\\<^sub>5 (dsn, dsk', flag, hops, nhip')\n    \\<le> \\<pi>\\<^sub>5 (dsn, dsk, flag, hops, nhip)", "by (cases flag) simp_all"], ["", "subsection \"Comparing routing tables \""], ["", "definition\n  rt_fresher :: \"ip \\<Rightarrow> rt \\<Rightarrow> rt \\<Rightarrow> bool\"\nwhere\n  \"rt_fresher \\<equiv> \\<lambda>dip rt rt'. (the (\\<sigma>\\<^bsub>route\\<^esub>(rt, dip))) \\<sqsubseteq> (the (\\<sigma>\\<^bsub>route\\<^esub>(rt', dip)))\""], ["", "abbreviation\n   rt_fresher_syn :: \"rt \\<Rightarrow> ip \\<Rightarrow> rt \\<Rightarrow> bool\" (\"(_/ \\<sqsubseteq>\\<^bsub>_\\<^esub> _)\"  [51, 999, 51] 50)\nwhere\n  \"rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2 \\<equiv> rt_fresher i rt1 rt2\""], ["", "lemma rt_fresher_def':\n  \"(rt\\<^sub>1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt\\<^sub>2) = (nsqn\\<^sub>r (the (rt\\<^sub>1 i)) < nsqn\\<^sub>r (the (rt\\<^sub>2 i)) \\<or>\n                     nsqn\\<^sub>r (the (rt\\<^sub>1 i)) = nsqn\\<^sub>r (the (rt\\<^sub>2 i)) \\<and> \\<pi>\\<^sub>5 (the (rt\\<^sub>2 i)) \\<le> \\<pi>\\<^sub>5 (the (rt\\<^sub>1 i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rt\\<^sub>1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt\\<^sub>2) =\n    (nsqn\\<^sub>r (the (rt\\<^sub>1 i))\n     < nsqn\\<^sub>r (the (rt\\<^sub>2 i)) \\<or>\n     nsqn\\<^sub>r (the (rt\\<^sub>1 i)) =\n     nsqn\\<^sub>r (the (rt\\<^sub>2 i)) \\<and>\n     \\<pi>\\<^sub>5 (the (rt\\<^sub>2 i))\n     \\<le> \\<pi>\\<^sub>5 (the (rt\\<^sub>1 i)))", "unfolding rt_fresher_def fresher_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (nsqn\\<^sub>r (the (rt\\<^sub>1 i))\n     < nsqn\\<^sub>r (the (rt\\<^sub>2 i)) \\<or>\n     nsqn\\<^sub>r (the (rt\\<^sub>1 i)) =\n     nsqn\\<^sub>r (the (rt\\<^sub>2 i)) \\<and>\n     \\<pi>\\<^sub>5 (the (rt\\<^sub>2 i))\n     \\<le> \\<pi>\\<^sub>5 (the (rt\\<^sub>1 i))) =\n    (nsqn\\<^sub>r (the (rt\\<^sub>1 i))\n     < nsqn\\<^sub>r (the (rt\\<^sub>2 i)) \\<or>\n     nsqn\\<^sub>r (the (rt\\<^sub>1 i)) =\n     nsqn\\<^sub>r (the (rt\\<^sub>2 i)) \\<and>\n     \\<pi>\\<^sub>5 (the (rt\\<^sub>2 i))\n     \\<le> \\<pi>\\<^sub>5 (the (rt\\<^sub>1 i)))", "by (rule refl)"], ["", "lemma single_rt_fresher [intro]:\n  assumes \"the (rt1 ip) \\<sqsubseteq> the (rt2 ip)\"\n    shows \"rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2", "using assms"], ["proof (prove)\nusing this:\n  the (rt1 ip) \\<sqsubseteq> the (rt2 ip)\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2", "unfolding rt_fresher_def"], ["proof (prove)\nusing this:\n  the (rt1 ip) \\<sqsubseteq> the (rt2 ip)\n\ngoal (1 subgoal):\n 1. the (rt1 ip) \\<sqsubseteq> the (rt2 ip)", "."], ["", "lemma rt_fresher_single [intro]:\n  assumes \"rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2\"\n    shows \"the (rt1 ip) \\<sqsubseteq> the (rt2 ip)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the (rt1 ip) \\<sqsubseteq> the (rt2 ip)", "using assms"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. the (rt1 ip) \\<sqsubseteq> the (rt2 ip)", "unfolding rt_fresher_def"], ["proof (prove)\nusing this:\n  the (rt1 ip) \\<sqsubseteq> the (rt2 ip)\n\ngoal (1 subgoal):\n 1. the (rt1 ip) \\<sqsubseteq> the (rt2 ip)", "."], ["", "lemma rt_fresher_def2:\n  assumes \"dip \\<in> kD(rt1)\"\n      and \"dip \\<in> kD(rt2)\"\n    shows \"(rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2) = (nsqn rt1 dip < nsqn rt2 dip\n                               \\<or> (nsqn rt1 dip = nsqn rt2 dip\n                                   \\<and> the (dhops rt1 dip) \\<ge> the (dhops rt2 dip)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2) =\n    (nsqn rt1 dip < nsqn rt2 dip \\<or>\n     nsqn rt1 dip = nsqn rt2 dip \\<and>\n     the (dhops rt2 dip) \\<le> the (dhops rt1 dip))", "using assms"], ["proof (prove)\nusing this:\n  dip \\<in> kD rt1\n  dip \\<in> kD rt2\n\ngoal (1 subgoal):\n 1. (rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2) =\n    (nsqn rt1 dip < nsqn rt2 dip \\<or>\n     nsqn rt1 dip = nsqn rt2 dip \\<and>\n     the (dhops rt2 dip) \\<le> the (dhops rt1 dip))", "unfolding rt_fresher_def fresher_def"], ["proof (prove)\nusing this:\n  dip \\<in> kD rt1\n  dip \\<in> kD rt2\n\ngoal (1 subgoal):\n 1. (nsqn\\<^sub>r (the (rt1 dip)) < nsqn\\<^sub>r (the (rt2 dip)) \\<or>\n     nsqn\\<^sub>r (the (rt1 dip)) = nsqn\\<^sub>r (the (rt2 dip)) \\<and>\n     \\<pi>\\<^sub>5 (the (rt2 dip)) \\<le> \\<pi>\\<^sub>5 (the (rt1 dip))) =\n    (nsqn rt1 dip < nsqn rt2 dip \\<or>\n     nsqn rt1 dip = nsqn rt2 dip \\<and>\n     the (dhops rt2 dip) \\<le> the (dhops rt1 dip))", "by (simp add: kD_nsqn proj5_eq_dhops)"], ["", "lemma rt_fresherI1 [intro]:\n  assumes \"dip \\<in> kD(rt1)\"\n      and \"dip \\<in> kD(rt2)\"\n      and \"nsqn rt1 dip < nsqn rt2 dip\"\n    shows \"rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2", "unfolding rt_fresher_def2 [OF assms(1-2)]"], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn rt1 dip < nsqn rt2 dip \\<or>\n    nsqn rt1 dip = nsqn rt2 dip \\<and>\n    the (dhops rt2 dip) \\<le> the (dhops rt1 dip)", "using assms(3)"], ["proof (prove)\nusing this:\n  nsqn rt1 dip < nsqn rt2 dip\n\ngoal (1 subgoal):\n 1. nsqn rt1 dip < nsqn rt2 dip \\<or>\n    nsqn rt1 dip = nsqn rt2 dip \\<and>\n    the (dhops rt2 dip) \\<le> the (dhops rt1 dip)", "by simp"], ["", "lemma rt_fresherI2 [intro]:\n  assumes \"dip \\<in> kD(rt1)\"\n      and \"dip \\<in> kD(rt2)\"\n      and \"nsqn rt1 dip = nsqn rt2 dip\"\n      and \"the (dhops rt1 dip) \\<ge> the (dhops rt2 dip)\"\n    shows \"rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2", "unfolding rt_fresher_def2 [OF assms(1-2)]"], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn rt1 dip < nsqn rt2 dip \\<or>\n    nsqn rt1 dip = nsqn rt2 dip \\<and>\n    the (dhops rt2 dip) \\<le> the (dhops rt1 dip)", "using assms(3-4)"], ["proof (prove)\nusing this:\n  nsqn rt1 dip = nsqn rt2 dip\n  the (dhops rt2 dip) \\<le> the (dhops rt1 dip)\n\ngoal (1 subgoal):\n 1. nsqn rt1 dip < nsqn rt2 dip \\<or>\n    nsqn rt1 dip = nsqn rt2 dip \\<and>\n    the (dhops rt2 dip) \\<le> the (dhops rt1 dip)", "by simp"], ["", "lemma rt_fresherE [elim]:\n  assumes \"rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\"\n      and \"dip \\<in> kD(rt1)\"\n      and \"dip \\<in> kD(rt2)\"\n      and \"\\<lbrakk> nsqn rt1 dip < nsqn rt2 dip \\<rbrakk> \\<Longrightarrow> P rt1 rt2 dip\"\n      and \"\\<lbrakk> nsqn rt1 dip = nsqn rt2 dip;\n             the (dhops rt1 dip) \\<ge> the (dhops rt2 dip) \\<rbrakk> \\<Longrightarrow> P rt1 rt2 dip\"\n    shows \"P rt1 rt2 dip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P rt1 rt2 dip", "using assms(1)"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. P rt1 rt2 dip", "unfolding rt_fresher_def2 [OF assms(2-3)]"], ["proof (prove)\nusing this:\n  nsqn rt1 dip < nsqn rt2 dip \\<or>\n  nsqn rt1 dip = nsqn rt2 dip \\<and>\n  the (dhops rt2 dip) \\<le> the (dhops rt1 dip)\n\ngoal (1 subgoal):\n 1. P rt1 rt2 dip", "using assms(4-5)"], ["proof (prove)\nusing this:\n  nsqn rt1 dip < nsqn rt2 dip \\<or>\n  nsqn rt1 dip = nsqn rt2 dip \\<and>\n  the (dhops rt2 dip) \\<le> the (dhops rt1 dip)\n  nsqn rt1 dip < nsqn rt2 dip \\<Longrightarrow> P rt1 rt2 dip\n  \\<lbrakk>nsqn rt1 dip = nsqn rt2 dip;\n   the (dhops rt2 dip) \\<le> the (dhops rt1 dip)\\<rbrakk>\n  \\<Longrightarrow> P rt1 rt2 dip\n\ngoal (1 subgoal):\n 1. P rt1 rt2 dip", "by auto"], ["", "lemma rt_fresher_refl [simp]: \"rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt", "unfolding rt_fresher_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. the (rt dip) \\<sqsubseteq> the (rt dip)", "by simp"], ["", "lemma rt_fresher_trans [elim, trans]:\n  assumes \"rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\"\n      and \"rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\"\n    shows \"rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3", "using assms"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\n  rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3", "unfolding rt_fresher_def"], ["proof (prove)\nusing this:\n  the (rt1 dip) \\<sqsubseteq> the (rt2 dip)\n  the (rt2 dip) \\<sqsubseteq> the (rt3 dip)\n\ngoal (1 subgoal):\n 1. the (rt1 dip) \\<sqsubseteq> the (rt3 dip)", "by auto"], ["", "lemma rt_fresher_if_Some [intro!]:\n  assumes \"the (rt dip) \\<sqsubseteq> r\"\n    shows \"rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> (\\<lambda>ip. if ip = dip then Some r else rt ip)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> (\\<lambda>ip.\n      if ip = dip then Some r else rt ip)", "using assms"], ["proof (prove)\nusing this:\n  the (rt dip) \\<sqsubseteq> r\n\ngoal (1 subgoal):\n 1. rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> (\\<lambda>ip.\n      if ip = dip then Some r else rt ip)", "unfolding rt_fresher_def"], ["proof (prove)\nusing this:\n  the (rt dip) \\<sqsubseteq> r\n\ngoal (1 subgoal):\n 1. the (rt dip) \\<sqsubseteq> the (if dip = dip then Some r else rt dip)", "by simp"], ["", "definition rt_fresh_as :: \"ip \\<Rightarrow> rt \\<Rightarrow> rt \\<Rightarrow> bool\"\nwhere\n  \"rt_fresh_as \\<equiv> \\<lambda>dip rt1 rt2. (rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2) \\<and> (rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1)\""], ["", "abbreviation\n   rt_fresh_as_syn :: \"rt \\<Rightarrow> ip \\<Rightarrow> rt \\<Rightarrow> bool\" (\"(_/ \\<approx>\\<^bsub>_\\<^esub> _)\"  [51, 999, 51] 50)\nwhere\n  \"rt1 \\<approx>\\<^bsub>i\\<^esub> rt2 \\<equiv> rt_fresh_as i rt1 rt2\""], ["", "lemma rt_fresh_as_refl [simp]: \"\\<And>rt dip. rt \\<approx>\\<^bsub>dip\\<^esub> rt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rt dip. rt \\<approx>\\<^bsub>dip\\<^esub> rt", "unfolding rt_fresh_as_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rt dip.\n       rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt \\<and>\n       rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt", "by simp"], ["", "lemma rt_fresh_as_trans [simp, intro, trans]:\n  \"\\<And>rt1 rt2 rt3 dip. \\<lbrakk> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2; rt2 \\<approx>\\<^bsub>dip\\<^esub> rt3 \\<rbrakk> \\<Longrightarrow> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rt1 rt2 rt3 dip.\n       \\<lbrakk>rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2;\n        rt2 \\<approx>\\<^bsub>dip\\<^esub> rt3\\<rbrakk>\n       \\<Longrightarrow> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt3", "unfolding rt_fresh_as_def rt_fresher_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>rt1 rt2 rt3 dip.\n       \\<lbrakk>the (rt1 dip) \\<sqsubseteq> the (rt2 dip) \\<and>\n                the (rt2 dip) \\<sqsubseteq> the (rt1 dip);\n        the (rt2 dip) \\<sqsubseteq> the (rt3 dip) \\<and>\n        the (rt3 dip) \\<sqsubseteq> the (rt2 dip)\\<rbrakk>\n       \\<Longrightarrow> the (rt1 dip) \\<sqsubseteq> the (rt3 dip) \\<and>\n                         the (rt3 dip) \\<sqsubseteq> the (rt1 dip)", "by (metis (mono_tags) fresher_trans)"], ["", "lemma rt_fresh_asI [intro!]:\n  assumes \"rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\"\n      and \"rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\"\n    shows \"rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2", "using assms"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\n  rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2", "unfolding rt_fresh_as_def"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\n  rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2 \\<and>\n    rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1", "by simp"], ["", "lemma rt_fresh_as_fresherI [intro]:\n  assumes \"dip\\<in>kD(rt1)\"\n      and \"dip\\<in>kD(rt2)\"\n      and \"the (rt1 dip) \\<sqsubseteq> the (rt2 dip)\"\n      and \"the (rt2 dip) \\<sqsubseteq> the (rt1 dip)\"\n    shows \"rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2", "using assms"], ["proof (prove)\nusing this:\n  dip \\<in> kD rt1\n  dip \\<in> kD rt2\n  the (rt1 dip) \\<sqsubseteq> the (rt2 dip)\n  the (rt2 dip) \\<sqsubseteq> the (rt1 dip)\n\ngoal (1 subgoal):\n 1. rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2", "unfolding rt_fresh_as_def"], ["proof (prove)\nusing this:\n  dip \\<in> kD rt1\n  dip \\<in> kD rt2\n  the (rt1 dip) \\<sqsubseteq> the (rt2 dip)\n  the (rt2 dip) \\<sqsubseteq> the (rt1 dip)\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2 \\<and>\n    rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1", "by (clarsimp dest!: single_rt_fresher)"], ["", "lemma nsqn_rt_fresh_asI:\n  assumes \"dip \\<in> kD(rt)\"\n      and \"dip \\<in> kD(rt')\"\n      and \"nsqn rt dip = nsqn rt' dip\"\n      and \"\\<pi>\\<^sub>5(the (rt dip)) = \\<pi>\\<^sub>5(the (rt' dip))\"\n    shows \"rt \\<approx>\\<^bsub>dip\\<^esub> rt'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt \\<approx>\\<^bsub>dip\\<^esub> rt'", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt'\n 2. rt' \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt", "from assms(1-2,4)"], ["proof (chain)\npicking this:\n  dip \\<in> kD rt\n  dip \\<in> kD rt'\n  \\<pi>\\<^sub>5 (the (rt dip)) = \\<pi>\\<^sub>5 (the (rt' dip))", "have dhops': \"the (dhops rt' dip) \\<le> the (dhops rt dip)\""], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n  dip \\<in> kD rt'\n  \\<pi>\\<^sub>5 (the (rt dip)) = \\<pi>\\<^sub>5 (the (rt' dip))\n\ngoal (1 subgoal):\n 1. the (dhops rt' dip) \\<le> the (dhops rt dip)", "by (simp add: proj5_eq_dhops)"], ["proof (state)\nthis:\n  the (dhops rt' dip) \\<le> the (dhops rt dip)\n\ngoal (2 subgoals):\n 1. rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt'\n 2. rt' \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt", "with assms(1-3)"], ["proof (chain)\npicking this:\n  dip \\<in> kD rt\n  dip \\<in> kD rt'\n  nsqn rt dip = nsqn rt' dip\n  the (dhops rt' dip) \\<le> the (dhops rt dip)", "show \"rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt'\""], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n  dip \\<in> kD rt'\n  nsqn rt dip = nsqn rt' dip\n  the (dhops rt' dip) \\<le> the (dhops rt dip)\n\ngoal (1 subgoal):\n 1. rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt'", "by (rule rt_fresherI2)"], ["proof (state)\nthis:\n  rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt'\n\ngoal (1 subgoal):\n 1. rt' \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. rt' \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt", "from assms(1-2,4)"], ["proof (chain)\npicking this:\n  dip \\<in> kD rt\n  dip \\<in> kD rt'\n  \\<pi>\\<^sub>5 (the (rt dip)) = \\<pi>\\<^sub>5 (the (rt' dip))", "have dhops: \"the (dhops rt dip) \\<le> the (dhops rt' dip)\""], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n  dip \\<in> kD rt'\n  \\<pi>\\<^sub>5 (the (rt dip)) = \\<pi>\\<^sub>5 (the (rt' dip))\n\ngoal (1 subgoal):\n 1. the (dhops rt dip) \\<le> the (dhops rt' dip)", "by (simp add: proj5_eq_dhops)"], ["proof (state)\nthis:\n  the (dhops rt dip) \\<le> the (dhops rt' dip)\n\ngoal (1 subgoal):\n 1. rt' \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt", "with assms(2,1) assms(3) [symmetric]"], ["proof (chain)\npicking this:\n  dip \\<in> kD rt'\n  dip \\<in> kD rt\n  nsqn rt' dip = nsqn rt dip\n  the (dhops rt dip) \\<le> the (dhops rt' dip)", "show \"rt' \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt\""], ["proof (prove)\nusing this:\n  dip \\<in> kD rt'\n  dip \\<in> kD rt\n  nsqn rt' dip = nsqn rt dip\n  the (dhops rt dip) \\<le> the (dhops rt' dip)\n\ngoal (1 subgoal):\n 1. rt' \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt", "by (rule rt_fresherI2)"], ["proof (state)\nthis:\n  rt' \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rt_fresh_asE [elim]:\n  assumes \"rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\"\n      and \"\\<lbrakk> rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2; rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1 \\<rbrakk> \\<Longrightarrow> P rt1 rt2 dip\"\n    shows \"P rt1 rt2 dip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P rt1 rt2 dip", "using assms"], ["proof (prove)\nusing this:\n  rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\n  \\<lbrakk>rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2;\n   rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\\<rbrakk>\n  \\<Longrightarrow> P rt1 rt2 dip\n\ngoal (1 subgoal):\n 1. P rt1 rt2 dip", "unfolding rt_fresh_as_def"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2 \\<and>\n  rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n  \\<lbrakk>rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2;\n   rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\\<rbrakk>\n  \\<Longrightarrow> P rt1 rt2 dip\n\ngoal (1 subgoal):\n 1. P rt1 rt2 dip", "by simp"], ["", "lemma rt_fresh_asD1 [dest]:\n  assumes \"rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\"\n    shows \"rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2", "using assms"], ["proof (prove)\nusing this:\n  rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2", "unfolding rt_fresh_as_def"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2 \\<and>\n  rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2", "by simp"], ["", "lemma rt_fresh_asD2 [dest]:\n  assumes \"rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\"\n    shows \"rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1", "using assms"], ["proof (prove)\nusing this:\n  rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1", "unfolding rt_fresh_as_def"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2 \\<and>\n  rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1", "by simp"], ["", "lemma rt_fresh_as_sym:\n  assumes \"rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\"\n    shows \"rt2 \\<approx>\\<^bsub>dip\\<^esub> rt1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt2 \\<approx>\\<^bsub>dip\\<^esub> rt1", "using assms"], ["proof (prove)\nusing this:\n  rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. rt2 \\<approx>\\<^bsub>dip\\<^esub> rt1", "unfolding rt_fresh_as_def"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2 \\<and>\n  rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1 \\<and>\n    rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2", "by simp"], ["", "lemma not_rt_fresh_asI1 [intro]:\n  assumes \"\\<not> (rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2)\"\n    shows \"\\<not> (rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2 \\<Longrightarrow> False", "assume \"rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\""], ["proof (state)\nthis:\n  rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2 \\<Longrightarrow> False", "hence \"rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\""], ["proof (prove)\nusing this:\n  rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2", ".."], ["proof (state)\nthis:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2 \\<Longrightarrow> False", "with \\<open>\\<not> (rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2)\\<close>"], ["proof (chain)\npicking this:\n  \\<not> rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2", "show False"], ["proof (prove)\nusing this:\n  \\<not> rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma not_rt_fresh_asI2 [intro]:\n  assumes \"\\<not> (rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1)\"\n    shows \"\\<not> (rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2 \\<Longrightarrow> False", "assume \"rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\""], ["proof (state)\nthis:\n  rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2 \\<Longrightarrow> False", "hence \"rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\""], ["proof (prove)\nusing this:\n  rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1", ".."], ["proof (state)\nthis:\n  rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2 \\<Longrightarrow> False", "with \\<open>\\<not> (rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1)\\<close>"], ["proof (chain)\npicking this:\n  \\<not> rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n  rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1", "show False"], ["proof (prove)\nusing this:\n  \\<not> rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n  rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma not_single_rt_fresher [elim]:\n  assumes \"\\<not>(the (rt1 ip) \\<sqsubseteq> the (rt2 ip))\"\n    shows \"\\<not>(rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2 \\<Longrightarrow> False", "assume \"rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2\""], ["proof (state)\nthis:\n  rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2 \\<Longrightarrow> False", "hence \"the (rt1 ip) \\<sqsubseteq> the (rt2 ip)\""], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. the (rt1 ip) \\<sqsubseteq> the (rt2 ip)", ".."], ["proof (state)\nthis:\n  the (rt1 ip) \\<sqsubseteq> the (rt2 ip)\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2 \\<Longrightarrow> False", "with \\<open>\\<not>(the (rt1 ip) \\<sqsubseteq> the (rt2 ip))\\<close>"], ["proof (chain)\npicking this:\n  \\<not> the (rt1 ip) \\<sqsubseteq> the (rt2 ip)\n  the (rt1 ip) \\<sqsubseteq> the (rt2 ip)", "show False"], ["proof (prove)\nusing this:\n  \\<not> the (rt1 ip) \\<sqsubseteq> the (rt2 ip)\n  the (rt1 ip) \\<sqsubseteq> the (rt2 ip)\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas not_single_rt_fresh_asI1 [intro] =  not_rt_fresh_asI1 [OF not_single_rt_fresher]"], ["", "lemmas not_single_rt_fresh_asI2 [intro] =  not_rt_fresh_asI2 [OF not_single_rt_fresher]"], ["", "lemma not_rt_fresher_single [elim]:\n  assumes \"\\<not>(rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2)\"\n    shows \"\\<not>(the (rt1 ip) \\<sqsubseteq> the (rt2 ip))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> the (rt1 ip) \\<sqsubseteq> the (rt2 ip)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. the (rt1 ip) \\<sqsubseteq> the (rt2 ip) \\<Longrightarrow> False", "assume \"the (rt1 ip) \\<sqsubseteq> the (rt2 ip)\""], ["proof (state)\nthis:\n  the (rt1 ip) \\<sqsubseteq> the (rt2 ip)\n\ngoal (1 subgoal):\n 1. the (rt1 ip) \\<sqsubseteq> the (rt2 ip) \\<Longrightarrow> False", "hence \"rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2\""], ["proof (prove)\nusing this:\n  the (rt1 ip) \\<sqsubseteq> the (rt2 ip)\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2", ".."], ["proof (state)\nthis:\n  rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. the (rt1 ip) \\<sqsubseteq> the (rt2 ip) \\<Longrightarrow> False", "with \\<open>\\<not>(rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2)\\<close>"], ["proof (chain)\npicking this:\n  \\<not> rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2\n  rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2", "show False"], ["proof (prove)\nusing this:\n  \\<not> rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2\n  rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rt_fresh_as_nsqnr:\n  assumes \"dip \\<in> kD(rt1)\"\n      and \"dip \\<in> kD(rt2)\"\n      and \"rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\"\n    shows \"nsqn\\<^sub>r (the (rt2 dip)) = nsqn\\<^sub>r (the (rt1 dip))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r (the (rt2 dip)) = nsqn\\<^sub>r (the (rt1 dip))", "using assms(3)"], ["proof (prove)\nusing this:\n  rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r (the (rt2 dip)) = nsqn\\<^sub>r (the (rt1 dip))", "unfolding rt_fresh_as_def"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2 \\<and>\n  rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r (the (rt2 dip)) = nsqn\\<^sub>r (the (rt1 dip))", "by (auto simp: rt_fresher_def2 [OF \\<open>dip \\<in> kD(rt1)\\<close> \\<open>dip \\<in> kD(rt2)\\<close>]\n                 rt_fresher_def2 [OF \\<open>dip \\<in> kD(rt2)\\<close> \\<open>dip \\<in> kD(rt1)\\<close>]\n                 kD_nsqn [OF \\<open>dip \\<in> kD(rt1)\\<close>]\n                 kD_nsqn [OF \\<open>dip \\<in> kD(rt2)\\<close>])"], ["", "lemma rt_fresher_mapupd [intro!]:\n  assumes \"dip\\<in>kD(rt)\"\n      and \"the (rt dip) \\<sqsubseteq> r\"\n    shows \"rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt(dip \\<mapsto> r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt(dip \\<mapsto> r)", "using assms"], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n  the (rt dip) \\<sqsubseteq> r\n\ngoal (1 subgoal):\n 1. rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt(dip \\<mapsto> r)", "unfolding rt_fresher_def"], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n  the (rt dip) \\<sqsubseteq> r\n\ngoal (1 subgoal):\n 1. the (rt dip) \\<sqsubseteq> the ((rt(dip \\<mapsto> r)) dip)", "by simp"], ["", "lemma rt_fresher_map_update_other [intro!]:\n  assumes \"dip\\<in>kD(rt)\"\n      and \"dip \\<noteq> ip\"\n    shows \"rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt(ip \\<mapsto> r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt(ip \\<mapsto> r)", "using assms"], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n  dip \\<noteq> ip\n\ngoal (1 subgoal):\n 1. rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt(ip \\<mapsto> r)", "unfolding rt_fresher_def"], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n  dip \\<noteq> ip\n\ngoal (1 subgoal):\n 1. the (rt dip) \\<sqsubseteq> the ((rt(ip \\<mapsto> r)) dip)", "by simp"], ["", "lemma rt_fresher_update_other [simp]:\n  assumes inkD: \"dip\\<in>kD(rt)\"\n     and \"dip \\<noteq> ip\"\n   shows \"rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt ip r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt ip r", "using assms"], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n  dip \\<noteq> ip\n\ngoal (1 subgoal):\n 1. rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt ip r", "unfolding update_def"], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n  dip \\<noteq> ip\n\ngoal (1 subgoal):\n 1. rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> (case rt ip of\n   None \\<Rightarrow> rt(ip \\<mapsto> r)\n   | Some s \\<Rightarrow>\n       if \\<pi>\\<^sub>2 s < \\<pi>\\<^sub>2 r then rt(ip \\<mapsto> r)\n       else if \\<pi>\\<^sub>2 s = \\<pi>\\<^sub>2 r \\<and>\n               (\\<pi>\\<^sub>5 r < \\<pi>\\<^sub>5 s \\<or>\n                \\<pi>\\<^sub>4 s = Aodv_Basic.inv)\n            then rt(ip \\<mapsto> r)\n            else if \\<pi>\\<^sub>3 r = unk\n                 then rt(ip \\<mapsto> (\\<pi>\\<^sub>2 s, snd r))\n                 else rt(ip \\<mapsto> s))", "by (clarsimp split: option.split) (fastforce)"], ["", "theorem rt_fresher_update [simp]:\n  assumes \"dip\\<in>kD(rt)\"\n      and \"the (dhops rt dip) \\<ge> 1\"\n      and \"update_arg_wf r\"\n   shows \"rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt ip r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt ip r", "proof (cases \"dip = ip\")"], ["proof (state)\ngoal (2 subgoals):\n 1. dip = ip \\<Longrightarrow>\n    rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt ip r\n 2. dip \\<noteq> ip \\<Longrightarrow>\n    rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt ip r", "assume \"dip \\<noteq> ip\""], ["proof (state)\nthis:\n  dip \\<noteq> ip\n\ngoal (2 subgoals):\n 1. dip = ip \\<Longrightarrow>\n    rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt ip r\n 2. dip \\<noteq> ip \\<Longrightarrow>\n    rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt ip r", "with \\<open>dip\\<in>kD(rt)\\<close>"], ["proof (chain)\npicking this:\n  dip \\<in> kD rt\n  dip \\<noteq> ip", "show ?thesis"], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n  dip \\<noteq> ip\n\ngoal (1 subgoal):\n 1. rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt ip r", "by (rule rt_fresher_update_other)"], ["proof (state)\nthis:\n  rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt ip r\n\ngoal (1 subgoal):\n 1. dip = ip \\<Longrightarrow>\n    rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt ip r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. dip = ip \\<Longrightarrow>\n    rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt ip r", "assume \"dip = ip\""], ["proof (state)\nthis:\n  dip = ip\n\ngoal (1 subgoal):\n 1. dip = ip \\<Longrightarrow>\n    rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt ip r", "from \\<open>dip\\<in>kD(rt)\\<close>"], ["proof (chain)\npicking this:\n  dip \\<in> kD rt", "obtain dsn\\<^sub>n dsk\\<^sub>n f\\<^sub>n hops\\<^sub>n nhip\\<^sub>n\n      where rtn [simp]: \"the (rt dip) = (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\""], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n\ngoal (1 subgoal):\n 1. (\\<And>dsn\\<^sub>n dsk\\<^sub>n f\\<^sub>n hops\\<^sub>n nhip\\<^sub>n.\n        the (rt dip) =\n        (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n,\n         nhip\\<^sub>n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis prod_cases5)"], ["proof (state)\nthis:\n  the (rt dip) =\n  (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n\ngoal (1 subgoal):\n 1. dip = ip \\<Longrightarrow>\n    rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt ip r", "with \\<open>the (dhops rt dip) \\<ge> 1\\<close> and \\<open>dip\\<in>kD(rt)\\<close>"], ["proof (chain)\npicking this:\n  1 \\<le> the (dhops rt dip)\n  dip \\<in> kD rt\n  the (rt dip) =\n  (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)", "have \"hops\\<^sub>n \\<ge> 1\""], ["proof (prove)\nusing this:\n  1 \\<le> the (dhops rt dip)\n  dip \\<in> kD rt\n  the (rt dip) =\n  (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n\ngoal (1 subgoal):\n 1. 1 \\<le> hops\\<^sub>n", "by (metis proj5_eq_dhops projs(4))"], ["proof (state)\nthis:\n  1 \\<le> hops\\<^sub>n\n\ngoal (1 subgoal):\n 1. dip = ip \\<Longrightarrow>\n    rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt ip r", "from \\<open>dip\\<in>kD(rt)\\<close> rtn"], ["proof (chain)\npicking this:\n  dip \\<in> kD rt\n  the (rt dip) =\n  (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)", "have [simp]: \"sqn rt dip = dsn\\<^sub>n\"\n                           and [simp]: \"the (dhops rt dip) = hops\\<^sub>n\"\n                           and [simp]: \"the (flag rt dip) = f\\<^sub>n\""], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n  the (rt dip) =\n  (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n\ngoal (1 subgoal):\n 1. sqn rt dip = dsn\\<^sub>n &&&\n    the (dhops rt dip) = hops\\<^sub>n &&& the (flag rt dip) = f\\<^sub>n", "by (simp add: sqn_def proj5_eq_dhops [symmetric]\n                            proj4_eq_flag [symmetric])+"], ["proof (state)\nthis:\n  sqn rt dip = dsn\\<^sub>n\n  the (dhops rt dip) = hops\\<^sub>n\n  the (flag rt dip) = f\\<^sub>n\n\ngoal (1 subgoal):\n 1. dip = ip \\<Longrightarrow>\n    rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt ip r", "from \\<open>update_arg_wf r\\<close>"], ["proof (chain)\npicking this:\n  update_arg_wf r", "have \"(dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n                                  \\<sqsubseteq> the ((update rt dip r) dip)\""], ["proof (prove)\nusing this:\n  update_arg_wf r\n\ngoal (1 subgoal):\n 1. (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n    \\<sqsubseteq> the (update rt dip r dip)", "proof (rule wf_r_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>nhip.\n       (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n       \\<sqsubseteq> the (update rt dip (0, unk, val, Suc 0, nhip) dip)\n 2. \\<And>dsn hops nhip.\n       0 < dsn \\<Longrightarrow>\n       (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n       \\<sqsubseteq> the (update rt dip (dsn, kno, val, hops, nhip) dip)", "fix nhip"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>nhip.\n       (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n       \\<sqsubseteq> the (update rt dip (0, unk, val, Suc 0, nhip) dip)\n 2. \\<And>dsn hops nhip.\n       0 < dsn \\<Longrightarrow>\n       (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n       \\<sqsubseteq> the (update rt dip (dsn, kno, val, hops, nhip) dip)", "from \\<open>hops\\<^sub>n \\<ge> 1\\<close>"], ["proof (chain)\npicking this:\n  1 \\<le> hops\\<^sub>n", "have \"(dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n                                        \\<sqsubseteq> (dsn\\<^sub>n, unk, val, Suc 0, nhip)\""], ["proof (prove)\nusing this:\n  1 \\<le> hops\\<^sub>n\n\ngoal (1 subgoal):\n 1. (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n    \\<sqsubseteq> (dsn\\<^sub>n, unk, val, Suc 0, nhip)", "unfolding fresher_def sqn_def"], ["proof (prove)\nusing this:\n  1 \\<le> hops\\<^sub>n\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r\n     (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n    < nsqn\\<^sub>r (dsn\\<^sub>n, unk, val, Suc 0, nhip) \\<or>\n    nsqn\\<^sub>r\n     (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n) =\n    nsqn\\<^sub>r (dsn\\<^sub>n, unk, val, Suc 0, nhip) \\<and>\n    \\<pi>\\<^sub>5 (dsn\\<^sub>n, unk, val, Suc 0, nhip)\n    \\<le> \\<pi>\\<^sub>5\n           (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)", "by (cases f\\<^sub>n) auto"], ["proof (state)\nthis:\n  (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n  \\<sqsubseteq> (dsn\\<^sub>n, unk, val, Suc 0, nhip)\n\ngoal (2 subgoals):\n 1. \\<And>nhip.\n       (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n       \\<sqsubseteq> the (update rt dip (0, unk, val, Suc 0, nhip) dip)\n 2. \\<And>dsn hops nhip.\n       0 < dsn \\<Longrightarrow>\n       (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n       \\<sqsubseteq> the (update rt dip (dsn, kno, val, hops, nhip) dip)", "thus \"(dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n               \\<sqsubseteq> the (update rt dip (0, unk, val, Suc 0, nhip) dip)\""], ["proof (prove)\nusing this:\n  (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n  \\<sqsubseteq> (dsn\\<^sub>n, unk, val, Suc 0, nhip)\n\ngoal (1 subgoal):\n 1. (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n    \\<sqsubseteq> the (update rt dip (0, unk, val, Suc 0, nhip) dip)", "using \\<open>dip\\<in>kD(rt)\\<close>"], ["proof (prove)\nusing this:\n  (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n  \\<sqsubseteq> (dsn\\<^sub>n, unk, val, Suc 0, nhip)\n  dip \\<in> kD rt\n\ngoal (1 subgoal):\n 1. (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n    \\<sqsubseteq> the (update rt dip (0, unk, val, Suc 0, nhip) dip)", "by - (rule update_cases_kD, simp_all)"], ["proof (state)\nthis:\n  (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n  \\<sqsubseteq> the (update rt dip (0, unk, val, Suc 0, nhip) dip)\n\ngoal (1 subgoal):\n 1. \\<And>dsn hops nhip.\n       0 < dsn \\<Longrightarrow>\n       (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n       \\<sqsubseteq> the (update rt dip (dsn, kno, val, hops, nhip) dip)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>dsn hops nhip.\n       0 < dsn \\<Longrightarrow>\n       (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n       \\<sqsubseteq> the (update rt dip (dsn, kno, val, hops, nhip) dip)", "fix dsn :: sqn and hops nhip"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>dsn hops nhip.\n       0 < dsn \\<Longrightarrow>\n       (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n       \\<sqsubseteq> the (update rt dip (dsn, kno, val, hops, nhip) dip)", "assume \"0 < dsn\""], ["proof (state)\nthis:\n  0 < dsn\n\ngoal (1 subgoal):\n 1. \\<And>dsn hops nhip.\n       0 < dsn \\<Longrightarrow>\n       (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n       \\<sqsubseteq> the (update rt dip (dsn, kno, val, hops, nhip) dip)", "show \"(dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n               \\<sqsubseteq> the (update rt dip (dsn, kno, val, hops, nhip) dip)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n    \\<sqsubseteq> the (update rt dip (dsn, kno, val, hops, nhip) dip)", "proof (rule update_cases_kD [OF _ \\<open>dip\\<in>kD(rt)\\<close>], simp_all add: \\<open>0 < dsn\\<close>)"], ["proof (state)\ngoal (3 subgoals):\n 1. dsn\\<^sub>n < dsn \\<Longrightarrow>\n    (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n    \\<sqsubseteq> (dsn, kno, val, hops, nhip)\n 2. \\<lbrakk>dsn\\<^sub>n = dsn; hops < hops\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> (dsn, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n,\n                       nhip\\<^sub>n)\n                      \\<sqsubseteq> (dsn, kno, val, hops, nhip)\n 3. \\<lbrakk>dsn\\<^sub>n = dsn; f\\<^sub>n = Aodv_Basic.inv\\<rbrakk>\n    \\<Longrightarrow> (dsn, dsk\\<^sub>n, Aodv_Basic.inv, hops\\<^sub>n,\n                       nhip\\<^sub>n)\n                      \\<sqsubseteq> (dsn, kno, val, hops, nhip)", "assume \"dsn\\<^sub>n < dsn\""], ["proof (state)\nthis:\n  dsn\\<^sub>n < dsn\n\ngoal (3 subgoals):\n 1. dsn\\<^sub>n < dsn \\<Longrightarrow>\n    (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n    \\<sqsubseteq> (dsn, kno, val, hops, nhip)\n 2. \\<lbrakk>dsn\\<^sub>n = dsn; hops < hops\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> (dsn, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n,\n                       nhip\\<^sub>n)\n                      \\<sqsubseteq> (dsn, kno, val, hops, nhip)\n 3. \\<lbrakk>dsn\\<^sub>n = dsn; f\\<^sub>n = Aodv_Basic.inv\\<rbrakk>\n    \\<Longrightarrow> (dsn, dsk\\<^sub>n, Aodv_Basic.inv, hops\\<^sub>n,\n                       nhip\\<^sub>n)\n                      \\<sqsubseteq> (dsn, kno, val, hops, nhip)", "thus \"(dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n                   \\<sqsubseteq> (dsn, kno, val, hops, nhip)\""], ["proof (prove)\nusing this:\n  dsn\\<^sub>n < dsn\n\ngoal (1 subgoal):\n 1. (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n    \\<sqsubseteq> (dsn, kno, val, hops, nhip)", "unfolding fresher_def"], ["proof (prove)\nusing this:\n  dsn\\<^sub>n < dsn\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r\n     (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n    < nsqn\\<^sub>r (dsn, kno, val, hops, nhip) \\<or>\n    nsqn\\<^sub>r\n     (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n) =\n    nsqn\\<^sub>r (dsn, kno, val, hops, nhip) \\<and>\n    \\<pi>\\<^sub>5 (dsn, kno, val, hops, nhip)\n    \\<le> \\<pi>\\<^sub>5\n           (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)", "by auto"], ["proof (state)\nthis:\n  (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n  \\<sqsubseteq> (dsn, kno, val, hops, nhip)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>dsn\\<^sub>n = dsn; hops < hops\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> (dsn, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n,\n                       nhip\\<^sub>n)\n                      \\<sqsubseteq> (dsn, kno, val, hops, nhip)\n 2. \\<lbrakk>dsn\\<^sub>n = dsn; f\\<^sub>n = Aodv_Basic.inv\\<rbrakk>\n    \\<Longrightarrow> (dsn, dsk\\<^sub>n, Aodv_Basic.inv, hops\\<^sub>n,\n                       nhip\\<^sub>n)\n                      \\<sqsubseteq> (dsn, kno, val, hops, nhip)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>dsn\\<^sub>n = dsn; hops < hops\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> (dsn, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n,\n                       nhip\\<^sub>n)\n                      \\<sqsubseteq> (dsn, kno, val, hops, nhip)\n 2. \\<lbrakk>dsn\\<^sub>n = dsn; f\\<^sub>n = Aodv_Basic.inv\\<rbrakk>\n    \\<Longrightarrow> (dsn, dsk\\<^sub>n, Aodv_Basic.inv, hops\\<^sub>n,\n                       nhip\\<^sub>n)\n                      \\<sqsubseteq> (dsn, kno, val, hops, nhip)", "assume \"dsn\\<^sub>n = dsn\"\n             and \"hops < hops\\<^sub>n\""], ["proof (state)\nthis:\n  dsn\\<^sub>n = dsn\n  hops < hops\\<^sub>n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>dsn\\<^sub>n = dsn; hops < hops\\<^sub>n\\<rbrakk>\n    \\<Longrightarrow> (dsn, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n,\n                       nhip\\<^sub>n)\n                      \\<sqsubseteq> (dsn, kno, val, hops, nhip)\n 2. \\<lbrakk>dsn\\<^sub>n = dsn; f\\<^sub>n = Aodv_Basic.inv\\<rbrakk>\n    \\<Longrightarrow> (dsn, dsk\\<^sub>n, Aodv_Basic.inv, hops\\<^sub>n,\n                       nhip\\<^sub>n)\n                      \\<sqsubseteq> (dsn, kno, val, hops, nhip)", "thus \"(dsn, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n                   \\<sqsubseteq> (dsn, kno, val, hops, nhip)\""], ["proof (prove)\nusing this:\n  dsn\\<^sub>n = dsn\n  hops < hops\\<^sub>n\n\ngoal (1 subgoal):\n 1. (dsn, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n    \\<sqsubseteq> (dsn, kno, val, hops, nhip)", "unfolding fresher_def nsqn\\<^sub>r_def"], ["proof (prove)\nusing this:\n  dsn\\<^sub>n = dsn\n  hops < hops\\<^sub>n\n\ngoal (1 subgoal):\n 1. (if \\<pi>\\<^sub>4\n         (dsn, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n) =\n        val \\<or>\n        \\<pi>\\<^sub>2\n         (dsn, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n) =\n        0\n     then \\<pi>\\<^sub>2\n           (dsn, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n     else \\<pi>\\<^sub>2\n           (dsn, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n) -\n          1)\n    < (if \\<pi>\\<^sub>4 (dsn, kno, val, hops, nhip) = val \\<or>\n          \\<pi>\\<^sub>2 (dsn, kno, val, hops, nhip) = 0\n       then \\<pi>\\<^sub>2 (dsn, kno, val, hops, nhip)\n       else \\<pi>\\<^sub>2 (dsn, kno, val, hops, nhip) - 1) \\<or>\n    (if \\<pi>\\<^sub>4\n         (dsn, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n) =\n        val \\<or>\n        \\<pi>\\<^sub>2\n         (dsn, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n) =\n        0\n     then \\<pi>\\<^sub>2\n           (dsn, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n     else \\<pi>\\<^sub>2\n           (dsn, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n) -\n          1) =\n    (if \\<pi>\\<^sub>4 (dsn, kno, val, hops, nhip) = val \\<or>\n        \\<pi>\\<^sub>2 (dsn, kno, val, hops, nhip) = 0\n     then \\<pi>\\<^sub>2 (dsn, kno, val, hops, nhip)\n     else \\<pi>\\<^sub>2 (dsn, kno, val, hops, nhip) - 1) \\<and>\n    \\<pi>\\<^sub>5 (dsn, kno, val, hops, nhip)\n    \\<le> \\<pi>\\<^sub>5\n           (dsn, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)", "by simp"], ["proof (state)\nthis:\n  (dsn, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n  \\<sqsubseteq> (dsn, kno, val, hops, nhip)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dsn\\<^sub>n = dsn; f\\<^sub>n = Aodv_Basic.inv\\<rbrakk>\n    \\<Longrightarrow> (dsn, dsk\\<^sub>n, Aodv_Basic.inv, hops\\<^sub>n,\n                       nhip\\<^sub>n)\n                      \\<sqsubseteq> (dsn, kno, val, hops, nhip)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>dsn\\<^sub>n = dsn; f\\<^sub>n = Aodv_Basic.inv\\<rbrakk>\n    \\<Longrightarrow> (dsn, dsk\\<^sub>n, Aodv_Basic.inv, hops\\<^sub>n,\n                       nhip\\<^sub>n)\n                      \\<sqsubseteq> (dsn, kno, val, hops, nhip)", "assume \"dsn\\<^sub>n = dsn\""], ["proof (state)\nthis:\n  dsn\\<^sub>n = dsn\n\ngoal (1 subgoal):\n 1. \\<lbrakk>dsn\\<^sub>n = dsn; f\\<^sub>n = Aodv_Basic.inv\\<rbrakk>\n    \\<Longrightarrow> (dsn, dsk\\<^sub>n, Aodv_Basic.inv, hops\\<^sub>n,\n                       nhip\\<^sub>n)\n                      \\<sqsubseteq> (dsn, kno, val, hops, nhip)", "with \\<open>0 < dsn\\<close>"], ["proof (chain)\npicking this:\n  0 < dsn\n  dsn\\<^sub>n = dsn", "show \"(dsn, dsk\\<^sub>n, inv, hops\\<^sub>n, nhip\\<^sub>n)\n                   \\<sqsubseteq> (dsn, kno, val, hops, nhip)\""], ["proof (prove)\nusing this:\n  0 < dsn\n  dsn\\<^sub>n = dsn\n\ngoal (1 subgoal):\n 1. (dsn, dsk\\<^sub>n, Aodv_Basic.inv, hops\\<^sub>n, nhip\\<^sub>n)\n    \\<sqsubseteq> (dsn, kno, val, hops, nhip)", "unfolding fresher_def"], ["proof (prove)\nusing this:\n  0 < dsn\n  dsn\\<^sub>n = dsn\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r\n     (dsn, dsk\\<^sub>n, Aodv_Basic.inv, hops\\<^sub>n, nhip\\<^sub>n)\n    < nsqn\\<^sub>r (dsn, kno, val, hops, nhip) \\<or>\n    nsqn\\<^sub>r\n     (dsn, dsk\\<^sub>n, Aodv_Basic.inv, hops\\<^sub>n, nhip\\<^sub>n) =\n    nsqn\\<^sub>r (dsn, kno, val, hops, nhip) \\<and>\n    \\<pi>\\<^sub>5 (dsn, kno, val, hops, nhip)\n    \\<le> \\<pi>\\<^sub>5\n           (dsn, dsk\\<^sub>n, Aodv_Basic.inv, hops\\<^sub>n, nhip\\<^sub>n)", "by simp"], ["proof (state)\nthis:\n  (dsn, dsk\\<^sub>n, Aodv_Basic.inv, hops\\<^sub>n, nhip\\<^sub>n)\n  \\<sqsubseteq> (dsn, kno, val, hops, nhip)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n  \\<sqsubseteq> the (update rt dip (dsn, kno, val, hops, nhip) dip)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n  \\<sqsubseteq> the (update rt dip r dip)\n\ngoal (1 subgoal):\n 1. dip = ip \\<Longrightarrow>\n    rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt ip r", "hence \"rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt dip r\""], ["proof (prove)\nusing this:\n  (dsn\\<^sub>n, dsk\\<^sub>n, f\\<^sub>n, hops\\<^sub>n, nhip\\<^sub>n)\n  \\<sqsubseteq> the (update rt dip r dip)\n\ngoal (1 subgoal):\n 1. rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt dip r", "by - (rule single_rt_fresher, simp)"], ["proof (state)\nthis:\n  rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt dip r\n\ngoal (1 subgoal):\n 1. dip = ip \\<Longrightarrow>\n    rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt ip r", "with \\<open>dip = ip\\<close>"], ["proof (chain)\npicking this:\n  dip = ip\n  rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt dip r", "show ?thesis"], ["proof (prove)\nusing this:\n  dip = ip\n  rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt dip r\n\ngoal (1 subgoal):\n 1. rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt ip r", "by simp"], ["proof (state)\nthis:\n  rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> update rt ip r\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem rt_fresher_invalidate [simp]:\n  assumes \"dip\\<in>kD(rt)\"\n      and indests: \"\\<forall>rip\\<in>dom(dests). rip\\<in>vD(rt) \\<and> sqn rt rip < the (dests rip)\"\n    shows \"rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> invalidate rt dests\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> invalidate rt dests", "proof (cases \"dip\\<in>dom(dests)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. dip \\<in> dom dests \\<Longrightarrow>\n    rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> invalidate rt dests\n 2. dip \\<notin> dom dests \\<Longrightarrow>\n    rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> invalidate rt dests", "assume \"dip\\<notin>dom(dests)\""], ["proof (state)\nthis:\n  dip \\<notin> dom dests\n\ngoal (2 subgoals):\n 1. dip \\<in> dom dests \\<Longrightarrow>\n    rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> invalidate rt dests\n 2. dip \\<notin> dom dests \\<Longrightarrow>\n    rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> invalidate rt dests", "thus ?thesis"], ["proof (prove)\nusing this:\n  dip \\<notin> dom dests\n\ngoal (1 subgoal):\n 1. rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> invalidate rt dests", "using \\<open>dip\\<in>kD(rt)\\<close>"], ["proof (prove)\nusing this:\n  dip \\<notin> dom dests\n  dip \\<in> kD rt\n\ngoal (1 subgoal):\n 1. rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> invalidate rt dests", "by - (rule single_rt_fresher, simp)"], ["proof (state)\nthis:\n  rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> invalidate rt dests\n\ngoal (1 subgoal):\n 1. dip \\<in> dom dests \\<Longrightarrow>\n    rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> invalidate rt dests", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. dip \\<in> dom dests \\<Longrightarrow>\n    rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> invalidate rt dests", "assume \"dip\\<in>dom(dests)\""], ["proof (state)\nthis:\n  dip \\<in> dom dests\n\ngoal (1 subgoal):\n 1. dip \\<in> dom dests \\<Longrightarrow>\n    rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> invalidate rt dests", "moreover"], ["proof (state)\nthis:\n  dip \\<in> dom dests\n\ngoal (1 subgoal):\n 1. dip \\<in> dom dests \\<Longrightarrow>\n    rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> invalidate rt dests", "with indests"], ["proof (chain)\npicking this:\n  \\<forall>rip\\<in>dom dests.\n     rip \\<in> vD rt \\<and> sqn rt rip < the (dests rip)\n  dip \\<in> dom dests", "have \"dip\\<in>vD(rt)\"\n                           and \"sqn rt dip < the (dests dip)\""], ["proof (prove)\nusing this:\n  \\<forall>rip\\<in>dom dests.\n     rip \\<in> vD rt \\<and> sqn rt rip < the (dests rip)\n  dip \\<in> dom dests\n\ngoal (1 subgoal):\n 1. dip \\<in> vD rt &&& sqn rt dip < the (dests dip)", "by auto"], ["proof (state)\nthis:\n  dip \\<in> vD rt\n  sqn rt dip < the (dests dip)\n\ngoal (1 subgoal):\n 1. dip \\<in> dom dests \\<Longrightarrow>\n    rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> invalidate rt dests", "ultimately"], ["proof (chain)\npicking this:\n  dip \\<in> dom dests\n  dip \\<in> vD rt\n  sqn rt dip < the (dests dip)", "show ?thesis"], ["proof (prove)\nusing this:\n  dip \\<in> dom dests\n  dip \\<in> vD rt\n  sqn rt dip < the (dests dip)\n\ngoal (1 subgoal):\n 1. rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> invalidate rt dests", "unfolding invalidate_def sqn_def"], ["proof (prove)\nusing this:\n  dip \\<in> dom dests\n  dip \\<in> vD rt\n  (case rt dip of None \\<Rightarrow> 0\n   | Some r \\<Rightarrow> \\<pi>\\<^sub>2 r)\n  < the (dests dip)\n\ngoal (1 subgoal):\n 1. rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> (\\<lambda>ip.\n      case (rt ip, dests ip) of (None, x) \\<Rightarrow> None\n      | (Some (a, ab, ad, af, bb), None) \\<Rightarrow>\n          Some (a, ab, ad, af, bb)\n      | (Some (a, ab, ad, af, bb), Some rsn) \\<Rightarrow>\n          Some (rsn, ab, Aodv_Basic.inv, af, bb))", "by - (rule single_rt_fresher, auto simp: fresher_def)"], ["proof (state)\nthis:\n  rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> invalidate rt dests\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nsqn\\<^sub>r_invalidate [simp]:\n  assumes \"dip\\<in>kD(rt)\"\n      and \"dip\\<in>dom(dests)\"\n    shows \"nsqn\\<^sub>r (the (invalidate rt dests dip)) = the (dests dip) - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r (the (invalidate rt dests dip)) = the (dests dip) - 1", "using assms"], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n  dip \\<in> dom dests\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r (the (invalidate rt dests dip)) = the (dests dip) - 1", "unfolding invalidate_def"], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n  dip \\<in> dom dests\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r\n     (the (case (rt dip, dests dip) of (None, x) \\<Rightarrow> None\n           | (Some (a, ab, ad, af, bb), None) \\<Rightarrow>\n               Some (a, ab, ad, af, bb)\n           | (Some (a, ab, ad, af, bb), Some rsn) \\<Rightarrow>\n               Some (rsn, ab, Aodv_Basic.inv, af, bb))) =\n    the (dests dip) - 1", "by auto"], ["", "lemma rt_fresh_as_inc_invalidate [simp]:\n  assumes \"dip\\<in>kD(rt)\"\n      and \"\\<forall>rip\\<in>dom(dests). rip\\<in>vD(rt) \\<and> the (dests rip) = inc (sqn rt rip)\"\n    shows \"rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests", "proof (cases \"dip\\<in>dom(dests)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. dip \\<in> dom dests \\<Longrightarrow>\n    rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests\n 2. dip \\<notin> dom dests \\<Longrightarrow>\n    rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests", "assume \"dip\\<notin>dom(dests)\""], ["proof (state)\nthis:\n  dip \\<notin> dom dests\n\ngoal (2 subgoals):\n 1. dip \\<in> dom dests \\<Longrightarrow>\n    rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests\n 2. dip \\<notin> dom dests \\<Longrightarrow>\n    rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests", "with \\<open>dip\\<in>kD(rt)\\<close>"], ["proof (chain)\npicking this:\n  dip \\<in> kD rt\n  dip \\<notin> dom dests", "have \"dip\\<in>kD(invalidate rt dests)\""], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n  dip \\<notin> dom dests\n\ngoal (1 subgoal):\n 1. dip \\<in> kD (invalidate rt dests)", "by simp"], ["proof (state)\nthis:\n  dip \\<in> kD (invalidate rt dests)\n\ngoal (2 subgoals):\n 1. dip \\<in> dom dests \\<Longrightarrow>\n    rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests\n 2. dip \\<notin> dom dests \\<Longrightarrow>\n    rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests", "with \\<open>dip\\<in>kD(rt)\\<close>"], ["proof (chain)\npicking this:\n  dip \\<in> kD rt\n  dip \\<in> kD (invalidate rt dests)", "show ?thesis"], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n  dip \\<in> kD (invalidate rt dests)\n\ngoal (1 subgoal):\n 1. rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests", "by rule (simp_all add: \\<open>dip\\<notin>dom(dests)\\<close>)"], ["proof (state)\nthis:\n  rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests\n\ngoal (1 subgoal):\n 1. dip \\<in> dom dests \\<Longrightarrow>\n    rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. dip \\<in> dom dests \\<Longrightarrow>\n    rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests", "assume \"dip\\<in>dom(dests)\""], ["proof (state)\nthis:\n  dip \\<in> dom dests\n\ngoal (1 subgoal):\n 1. dip \\<in> dom dests \\<Longrightarrow>\n    rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests", "with assms(2)"], ["proof (chain)\npicking this:\n  \\<forall>rip\\<in>dom dests.\n     rip \\<in> vD rt \\<and> the (dests rip) = inc (sqn rt rip)\n  dip \\<in> dom dests", "have \"dip\\<in>vD(rt)\"\n                  and \"the (dests dip) = inc (sqn rt dip)\""], ["proof (prove)\nusing this:\n  \\<forall>rip\\<in>dom dests.\n     rip \\<in> vD rt \\<and> the (dests rip) = inc (sqn rt rip)\n  dip \\<in> dom dests\n\ngoal (1 subgoal):\n 1. dip \\<in> vD rt &&& the (dests dip) = inc (sqn rt dip)", "by auto"], ["proof (state)\nthis:\n  dip \\<in> vD rt\n  the (dests dip) = inc (sqn rt dip)\n\ngoal (1 subgoal):\n 1. dip \\<in> dom dests \\<Longrightarrow>\n    rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests", "from \\<open>dip\\<in>vD(rt)\\<close>"], ["proof (chain)\npicking this:\n  dip \\<in> vD rt", "have \"dip\\<in>kD(rt)\""], ["proof (prove)\nusing this:\n  dip \\<in> vD rt\n\ngoal (1 subgoal):\n 1. dip \\<in> kD rt", "by simp"], ["proof (state)\nthis:\n  dip \\<in> kD rt\n\ngoal (1 subgoal):\n 1. dip \\<in> dom dests \\<Longrightarrow>\n    rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests", "moreover"], ["proof (state)\nthis:\n  dip \\<in> kD rt\n\ngoal (1 subgoal):\n 1. dip \\<in> dom dests \\<Longrightarrow>\n    rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests", "then"], ["proof (chain)\npicking this:\n  dip \\<in> kD rt", "have \"dip\\<in>kD(invalidate rt dests)\""], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n\ngoal (1 subgoal):\n 1. dip \\<in> kD (invalidate rt dests)", "by simp"], ["proof (state)\nthis:\n  dip \\<in> kD (invalidate rt dests)\n\ngoal (1 subgoal):\n 1. dip \\<in> dom dests \\<Longrightarrow>\n    rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests", "ultimately"], ["proof (chain)\npicking this:\n  dip \\<in> kD rt\n  dip \\<in> kD (invalidate rt dests)", "show ?thesis"], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n  dip \\<in> kD (invalidate rt dests)\n\ngoal (1 subgoal):\n 1. rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests", "proof (rule nsqn_rt_fresh_asI)"], ["proof (state)\ngoal (2 subgoals):\n 1. nsqn rt dip = nsqn (invalidate rt dests) dip\n 2. \\<pi>\\<^sub>5 (the (rt dip)) =\n    \\<pi>\\<^sub>5 (the (invalidate rt dests dip))", "from \\<open>dip\\<in>vD(rt)\\<close>"], ["proof (chain)\npicking this:\n  dip \\<in> vD rt", "have \"nsqn rt dip = sqn rt dip\""], ["proof (prove)\nusing this:\n  dip \\<in> vD rt\n\ngoal (1 subgoal):\n 1. nsqn rt dip = sqn rt dip", "by simp"], ["proof (state)\nthis:\n  nsqn rt dip = sqn rt dip\n\ngoal (2 subgoals):\n 1. nsqn rt dip = nsqn (invalidate rt dests) dip\n 2. \\<pi>\\<^sub>5 (the (rt dip)) =\n    \\<pi>\\<^sub>5 (the (invalidate rt dests dip))", "also"], ["proof (state)\nthis:\n  nsqn rt dip = sqn rt dip\n\ngoal (2 subgoals):\n 1. nsqn rt dip = nsqn (invalidate rt dests) dip\n 2. \\<pi>\\<^sub>5 (the (rt dip)) =\n    \\<pi>\\<^sub>5 (the (invalidate rt dests dip))", "have \"sqn rt dip = nsqn\\<^sub>r (the (invalidate rt dests dip))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqn rt dip = nsqn\\<^sub>r (the (invalidate rt dests dip))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sqn rt dip = nsqn\\<^sub>r (the (invalidate rt dests dip))", "from \\<open>dip\\<in>kD(rt)\\<close>"], ["proof (chain)\npicking this:\n  dip \\<in> kD rt", "have \"nsqn\\<^sub>r (the (invalidate rt dests dip)) = the (dests dip) - 1\""], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r (the (invalidate rt dests dip)) = the (dests dip) - 1", "using \\<open>dip\\<in>dom(dests)\\<close>"], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n  dip \\<in> dom dests\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r (the (invalidate rt dests dip)) = the (dests dip) - 1", "by (rule nsqn\\<^sub>r_invalidate)"], ["proof (state)\nthis:\n  nsqn\\<^sub>r (the (invalidate rt dests dip)) = the (dests dip) - 1\n\ngoal (1 subgoal):\n 1. sqn rt dip = nsqn\\<^sub>r (the (invalidate rt dests dip))", "with \\<open>the (dests dip) = inc (sqn rt dip)\\<close>"], ["proof (chain)\npicking this:\n  the (dests dip) = inc (sqn rt dip)\n  nsqn\\<^sub>r (the (invalidate rt dests dip)) = the (dests dip) - 1", "show \"sqn rt dip = nsqn\\<^sub>r (the (invalidate rt dests dip))\""], ["proof (prove)\nusing this:\n  the (dests dip) = inc (sqn rt dip)\n  nsqn\\<^sub>r (the (invalidate rt dests dip)) = the (dests dip) - 1\n\ngoal (1 subgoal):\n 1. sqn rt dip = nsqn\\<^sub>r (the (invalidate rt dests dip))", "by simp"], ["proof (state)\nthis:\n  sqn rt dip = nsqn\\<^sub>r (the (invalidate rt dests dip))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sqn rt dip = nsqn\\<^sub>r (the (invalidate rt dests dip))\n\ngoal (2 subgoals):\n 1. nsqn rt dip = nsqn (invalidate rt dests) dip\n 2. \\<pi>\\<^sub>5 (the (rt dip)) =\n    \\<pi>\\<^sub>5 (the (invalidate rt dests dip))", "also"], ["proof (state)\nthis:\n  sqn rt dip = nsqn\\<^sub>r (the (invalidate rt dests dip))\n\ngoal (2 subgoals):\n 1. nsqn rt dip = nsqn (invalidate rt dests) dip\n 2. \\<pi>\\<^sub>5 (the (rt dip)) =\n    \\<pi>\\<^sub>5 (the (invalidate rt dests dip))", "from \\<open>dip\\<in>kD(invalidate rt dests)\\<close>"], ["proof (chain)\npicking this:\n  dip \\<in> kD (invalidate rt dests)", "have \"nsqn\\<^sub>r (the (invalidate rt dests dip)) = nsqn (invalidate rt dests) dip\""], ["proof (prove)\nusing this:\n  dip \\<in> kD (invalidate rt dests)\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r (the (invalidate rt dests dip)) =\n    nsqn (invalidate rt dests) dip", "by (simp add: kD_nsqn)"], ["proof (state)\nthis:\n  nsqn\\<^sub>r (the (invalidate rt dests dip)) =\n  nsqn (invalidate rt dests) dip\n\ngoal (2 subgoals):\n 1. nsqn rt dip = nsqn (invalidate rt dests) dip\n 2. \\<pi>\\<^sub>5 (the (rt dip)) =\n    \\<pi>\\<^sub>5 (the (invalidate rt dests dip))", "finally"], ["proof (chain)\npicking this:\n  nsqn rt dip = nsqn (invalidate rt dests) dip", "show \"nsqn rt dip = nsqn (invalidate rt dests) dip\""], ["proof (prove)\nusing this:\n  nsqn rt dip = nsqn (invalidate rt dests) dip\n\ngoal (1 subgoal):\n 1. nsqn rt dip = nsqn (invalidate rt dests) dip", "."], ["proof (state)\nthis:\n  nsqn rt dip = nsqn (invalidate rt dests) dip\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>5 (the (rt dip)) =\n    \\<pi>\\<^sub>5 (the (invalidate rt dests dip))", "qed simp"], ["proof (state)\nthis:\n  rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas rt_fresher_inc_invalidate [simp] = rt_fresh_as_inc_invalidate [THEN rt_fresh_asD1]"], ["", "subsection \"Strictly comparing routing tables \""], ["", "definition rt_strictly_fresher :: \"ip \\<Rightarrow> rt \\<Rightarrow> rt \\<Rightarrow> bool\"\nwhere\n  \"rt_strictly_fresher \\<equiv> \\<lambda>dip rt1 rt2. (rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2) \\<and> \\<not>(rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2)\""], ["", "abbreviation\n   rt_strictly_fresher_syn :: \"rt \\<Rightarrow> ip \\<Rightarrow> rt \\<Rightarrow> bool\" (\"(_/ \\<sqsubset>\\<^bsub>_\\<^esub> _)\"  [51, 999, 51] 50)\nwhere\n  \"rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2 \\<equiv> rt_strictly_fresher i rt1 rt2\""], ["", "lemma rt_strictly_fresher_def'':\n  \"rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2 = ((rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2) \\<and> \\<not>(rt2 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2) =\n    (rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2 \\<and>\n     \\<not> rt2 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt1)", "unfolding rt_strictly_fresher_def rt_fresh_as_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2 \\<and>\n     \\<not> (rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2 \\<and>\n             rt2 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt1)) =\n    (rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2 \\<and>\n     \\<not> rt2 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt1)", "by auto"], ["", "lemma rt_strictly_fresherI' [intro]:\n  assumes \"rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2\"\n      and \"\\<not>(rt2 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt1)\"\n    shows \"rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2", "using assms"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2\n  \\<not> rt2 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2", "unfolding rt_strictly_fresher_def''"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2\n  \\<not> rt2 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2 \\<and>\n    \\<not> rt2 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt1", "by simp"], ["", "lemma rt_strictly_fresherE' [elim]:\n  assumes \"rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2\"\n      and \"\\<lbrakk> rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2; \\<not>(rt2 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt1) \\<rbrakk> \\<Longrightarrow> P rt1 rt2 i\"\n    shows \"P rt1 rt2 i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P rt1 rt2 i", "using assms"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2\n  \\<lbrakk>rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2;\n   \\<not> rt2 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt1\\<rbrakk>\n  \\<Longrightarrow> P rt1 rt2 i\n\ngoal (1 subgoal):\n 1. P rt1 rt2 i", "unfolding rt_strictly_fresher_def''"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2 \\<and>\n  \\<not> rt2 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt1\n  \\<lbrakk>rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2;\n   \\<not> rt2 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt1\\<rbrakk>\n  \\<Longrightarrow> P rt1 rt2 i\n\ngoal (1 subgoal):\n 1. P rt1 rt2 i", "by simp"], ["", "lemma rt_strictly_fresherI [intro]:\n  assumes \"rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2\"\n      and \"\\<not>(rt1 \\<approx>\\<^bsub>i\\<^esub> rt2)\"\n    shows \"rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2", "unfolding rt_strictly_fresher_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2 \\<and>\n    \\<not> rt1 \\<approx>\\<^bsub>i\\<^esub> rt2", "using assms"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2\n  \\<not> rt1 \\<approx>\\<^bsub>i\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2 \\<and>\n    \\<not> rt1 \\<approx>\\<^bsub>i\\<^esub> rt2", ".."], ["", "lemmas rt_strictly_fresher_singleI [elim] = rt_strictly_fresherI [OF single_rt_fresher]"], ["", "lemma rt_strictly_fresherE [elim]:\n  assumes \"rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2\"\n      and \"\\<lbrakk> rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2; \\<not>(rt1 \\<approx>\\<^bsub>i\\<^esub> rt2) \\<rbrakk> \\<Longrightarrow> P rt1 rt2 i\"\n    shows \"P rt1 rt2 i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P rt1 rt2 i", "using assms(1)"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. P rt1 rt2 i", "unfolding rt_strictly_fresher_def"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>i\\<^esub> rt2 \\<and>\n  \\<not> rt1 \\<approx>\\<^bsub>i\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. P rt1 rt2 i", "by rule (erule(1) assms(2))"], ["", "lemma rt_strictly_fresher_def':\n  \"rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2 =\n     (nsqn\\<^sub>r (the (rt1 i)) < nsqn\\<^sub>r (the (rt2 i))\n       \\<or> (nsqn\\<^sub>r (the (rt1 i)) = nsqn\\<^sub>r (the (rt2 i)) \\<and> \\<pi>\\<^sub>5(the (rt1 i)) > \\<pi>\\<^sub>5(the (rt2 i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2) =\n    (nsqn\\<^sub>r (the (rt1 i)) < nsqn\\<^sub>r (the (rt2 i)) \\<or>\n     nsqn\\<^sub>r (the (rt1 i)) = nsqn\\<^sub>r (the (rt2 i)) \\<and>\n     \\<pi>\\<^sub>5 (the (rt2 i)) < \\<pi>\\<^sub>5 (the (rt1 i)))", "unfolding rt_strictly_fresher_def'' rt_fresher_def fresher_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((nsqn\\<^sub>r (the (rt1 i)) < nsqn\\<^sub>r (the (rt2 i)) \\<or>\n      nsqn\\<^sub>r (the (rt1 i)) = nsqn\\<^sub>r (the (rt2 i)) \\<and>\n      \\<pi>\\<^sub>5 (the (rt2 i)) \\<le> \\<pi>\\<^sub>5 (the (rt1 i))) \\<and>\n     \\<not> (nsqn\\<^sub>r (the (rt2 i)) < nsqn\\<^sub>r (the (rt1 i)) \\<or>\n             nsqn\\<^sub>r (the (rt2 i)) = nsqn\\<^sub>r (the (rt1 i)) \\<and>\n             \\<pi>\\<^sub>5 (the (rt1 i))\n             \\<le> \\<pi>\\<^sub>5 (the (rt2 i)))) =\n    (nsqn\\<^sub>r (the (rt1 i)) < nsqn\\<^sub>r (the (rt2 i)) \\<or>\n     nsqn\\<^sub>r (the (rt1 i)) = nsqn\\<^sub>r (the (rt2 i)) \\<and>\n     \\<pi>\\<^sub>5 (the (rt2 i)) < \\<pi>\\<^sub>5 (the (rt1 i)))", "by auto"], ["", "lemma rt_strictly_fresher_fresherD [dest]:\n  assumes \"rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2\"\n    shows \"the (rt1 dip) \\<sqsubseteq> the (rt2 dip)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the (rt1 dip) \\<sqsubseteq> the (rt2 dip)", "using assms"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. the (rt1 dip) \\<sqsubseteq> the (rt2 dip)", "unfolding rt_strictly_fresher_def rt_fresher_def"], ["proof (prove)\nusing this:\n  the (rt1 dip) \\<sqsubseteq> the (rt2 dip) \\<and>\n  \\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. the (rt1 dip) \\<sqsubseteq> the (rt2 dip)", "by auto"], ["", "lemma rt_strictly_fresher_not_fresh_asD [dest]:\n  assumes \"rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2\"\n    shows \"\\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2", "using assms"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. \\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2", "unfolding rt_strictly_fresher_def"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2 \\<and>\n  \\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. \\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2", "by auto"], ["", "lemma rt_strictly_fresher_trans [elim, trans]:\n  assumes \"rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2\"\n      and \"rt2 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\"\n    shows \"rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "using assms"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2\n  rt2 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2;\n     rt2 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\\<rbrakk>\n    \\<Longrightarrow> rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "from \\<open>rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2\\<close>"], ["proof (chain)\npicking this:\n  rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2", "obtain \"the (rt1 dip) \\<sqsubseteq> the (rt2 dip)\""], ["proof (prove)\nusing this:\n  rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. (the (rt1 dip) \\<sqsubseteq> the (rt2 dip) \\<Longrightarrow>\n     thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  the (rt1 dip) \\<sqsubseteq> the (rt2 dip)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2;\n     rt2 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\\<rbrakk>\n    \\<Longrightarrow> rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "also"], ["proof (state)\nthis:\n  the (rt1 dip) \\<sqsubseteq> the (rt2 dip)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2;\n     rt2 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\\<rbrakk>\n    \\<Longrightarrow> rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "from \\<open>rt2 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\\<close>"], ["proof (chain)\npicking this:\n  rt2 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "obtain \"the (rt2 dip) \\<sqsubseteq> the (rt3 dip)\""], ["proof (prove)\nusing this:\n  rt2 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\n\ngoal (1 subgoal):\n 1. (the (rt2 dip) \\<sqsubseteq> the (rt3 dip) \\<Longrightarrow>\n     thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  the (rt2 dip) \\<sqsubseteq> the (rt3 dip)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2;\n     rt2 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\\<rbrakk>\n    \\<Longrightarrow> rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "finally"], ["proof (chain)\npicking this:\n  the (rt1 dip) \\<sqsubseteq> the (rt3 dip)", "have \"the (rt1 dip) \\<sqsubseteq> the (rt3 dip)\""], ["proof (prove)\nusing this:\n  the (rt1 dip) \\<sqsubseteq> the (rt3 dip)\n\ngoal (1 subgoal):\n 1. the (rt1 dip) \\<sqsubseteq> the (rt3 dip)", "."], ["proof (state)\nthis:\n  the (rt1 dip) \\<sqsubseteq> the (rt3 dip)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2;\n     rt2 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\\<rbrakk>\n    \\<Longrightarrow> rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "moreover"], ["proof (state)\nthis:\n  the (rt1 dip) \\<sqsubseteq> the (rt3 dip)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2;\n     rt2 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\\<rbrakk>\n    \\<Longrightarrow> rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "have \"\\<not> (rt1 \\<approx>\\<^bsub>dip\\<^esub> rt3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt3", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt3", "from \\<open>rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2\\<close>"], ["proof (chain)\npicking this:\n  rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2", "obtain \"\\<not>(the (rt2 dip) \\<sqsubseteq> the (rt1 dip))\""], ["proof (prove)\nusing this:\n  rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. (\\<not> the (rt2 dip) \\<sqsubseteq> the (rt1 dip) \\<Longrightarrow>\n     thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<not> the (rt2 dip) \\<sqsubseteq> the (rt1 dip)\n\ngoal (1 subgoal):\n 1. \\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt3", "also"], ["proof (state)\nthis:\n  \\<not> the (rt2 dip) \\<sqsubseteq> the (rt1 dip)\n\ngoal (1 subgoal):\n 1. \\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt3", "from \\<open>rt2 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\\<close>"], ["proof (chain)\npicking this:\n  rt2 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "obtain \"\\<not>(the (rt3 dip) \\<sqsubseteq> the (rt2 dip))\""], ["proof (prove)\nusing this:\n  rt2 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\n\ngoal (1 subgoal):\n 1. (\\<not> the (rt3 dip) \\<sqsubseteq> the (rt2 dip) \\<Longrightarrow>\n     thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<not> the (rt3 dip) \\<sqsubseteq> the (rt2 dip)\n\ngoal (1 subgoal):\n 1. \\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt3", "finally"], ["proof (chain)\npicking this:\n  \\<not> the (rt3 dip) \\<sqsubseteq> the (rt1 dip)", "have \"\\<not>(the (rt3 dip) \\<sqsubseteq> the (rt1 dip))\""], ["proof (prove)\nusing this:\n  \\<not> the (rt3 dip) \\<sqsubseteq> the (rt1 dip)\n\ngoal (1 subgoal):\n 1. \\<not> the (rt3 dip) \\<sqsubseteq> the (rt1 dip)", "."], ["proof (state)\nthis:\n  \\<not> the (rt3 dip) \\<sqsubseteq> the (rt1 dip)\n\ngoal (1 subgoal):\n 1. \\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt3", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> the (rt3 dip) \\<sqsubseteq> the (rt1 dip)\n\ngoal (1 subgoal):\n 1. \\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt3", ".."], ["proof (state)\nthis:\n  \\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt3\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt3\n\ngoal (1 subgoal):\n 1. \\<lbrakk>rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2;\n     rt2 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\\<rbrakk>\n    \\<Longrightarrow> rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "ultimately"], ["proof (chain)\npicking this:\n  the (rt1 dip) \\<sqsubseteq> the (rt3 dip)\n  \\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt3", "show \"rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\""], ["proof (prove)\nusing this:\n  the (rt1 dip) \\<sqsubseteq> the (rt3 dip)\n  \\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt3\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", ".."], ["proof (state)\nthis:\n  rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rt_strictly_fresher_irefl [simp]: \"\\<not> (rt \\<sqsubset>\\<^bsub>dip\\<^esub> rt)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> rt \\<sqsubset>\\<^bsub>dip\\<^esub> rt", "unfolding rt_strictly_fresher_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (rt \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt \\<and>\n            \\<not> rt \\<approx>\\<^bsub>dip\\<^esub> rt)", "by clarsimp"], ["", "lemma rt_fresher_trans_rt_strictly_fresher [elim, trans]:\n  assumes \"rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2\"\n      and \"rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\"\n    shows \"rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "from \\<open>rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2\\<close>"], ["proof (chain)\npicking this:\n  rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2", "have \"rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\"\n                           and \"\\<not>(rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1)\""], ["proof (prove)\nusing this:\n  rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2 &&&\n    \\<not> rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1", "unfolding rt_strictly_fresher_def''"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2 \\<and>\n  \\<not> rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2 &&&\n    \\<not> rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1", "by auto"], ["proof (state)\nthis:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\n  \\<not> rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "from this(1) and \\<open>rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\\<close>"], ["proof (chain)\npicking this:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\n  rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3", "have \"rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\""], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\n  rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3", ".."], ["proof (state)\nthis:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "moreover"], ["proof (state)\nthis:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "from \\<open>\\<not>(rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1)\\<close>"], ["proof (chain)\npicking this:\n  \\<not> rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1", "have \"\\<not>(rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1)\""], ["proof (prove)\nusing this:\n  \\<not> rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. \\<not> rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1", "proof (rule contrapos_nn)"], ["proof (state)\ngoal (1 subgoal):\n 1. rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1 \\<Longrightarrow>\n    rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1", "assume \"rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\""], ["proof (state)\nthis:\n  rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1 \\<Longrightarrow>\n    rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1", "with \\<open>rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\\<close>"], ["proof (chain)\npicking this:\n  rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\n  rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1", "show \"rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\""], ["proof (prove)\nusing this:\n  rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\n  rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1", ".."], ["proof (state)\nthis:\n  rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "ultimately"], ["proof (chain)\npicking this:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\n  \\<not> rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1", "show \"rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\""], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\n  \\<not> rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "unfolding rt_strictly_fresher_def''"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\n  \\<not> rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3 \\<and>\n    \\<not> rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1", "by auto"], ["proof (state)\nthis:\n  rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rt_fresher_trans_rt_strictly_fresher' [elim, trans]:\n  assumes \"rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\"\n      and \"rt2 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\"\n    shows \"rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "from \\<open>rt2 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\\<close>"], ["proof (chain)\npicking this:\n  rt2 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "have \"rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\"\n                           and \"\\<not>(rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2)\""], ["proof (prove)\nusing this:\n  rt2 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\n\ngoal (1 subgoal):\n 1. rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3 &&&\n    \\<not> rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2", "unfolding rt_strictly_fresher_def''"], ["proof (prove)\nusing this:\n  rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3 \\<and>\n  \\<not> rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3 &&&\n    \\<not> rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2", "by auto"], ["proof (state)\nthis:\n  rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\n  \\<not> rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "from \\<open>rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\\<close> and this(1)"], ["proof (chain)\npicking this:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\n  rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3", "have \"rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\""], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\n  rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3", ".."], ["proof (state)\nthis:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "moreover"], ["proof (state)\nthis:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "from \\<open>\\<not>(rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2)\\<close>"], ["proof (chain)\npicking this:\n  \\<not> rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2", "have \"\\<not>(rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1)\""], ["proof (prove)\nusing this:\n  \\<not> rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. \\<not> rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1", "proof (rule contrapos_nn)"], ["proof (state)\ngoal (1 subgoal):\n 1. rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1 \\<Longrightarrow>\n    rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2", "assume \"rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\""], ["proof (state)\nthis:\n  rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1 \\<Longrightarrow>\n    rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2", "thus \"rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\""], ["proof (prove)\nusing this:\n  rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2", "using \\<open>rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\\<close>"], ["proof (prove)\nusing this:\n  rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2", ".."], ["proof (state)\nthis:\n  rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "ultimately"], ["proof (chain)\npicking this:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\n  \\<not> rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1", "show \"rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\""], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\n  \\<not> rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3", "unfolding rt_strictly_fresher_def''"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3\n  \\<not> rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt3 \\<and>\n    \\<not> rt3 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1", "by auto"], ["proof (state)\nthis:\n  rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt3\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rt_fresher_imp_nsqn_le:\n  assumes \"rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2\"\n      and \"ip \\<in> kD rt1\"\n      and \"ip \\<in> kD rt2\"\n    shows \"nsqn rt1 ip \\<le> nsqn rt2 ip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn rt1 ip \\<le> nsqn rt2 ip", "using assms(1)"], ["proof (prove)\nusing this:\n  rt1 \\<sqsubseteq>\\<^bsub>ip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. nsqn rt1 ip \\<le> nsqn rt2 ip", "by (auto simp add: rt_fresher_def2 [OF assms(2-3)])"], ["", "lemma rt_strictly_fresher_ltI [intro]:\n  assumes \"dip \\<in> kD(rt1)\"\n      and \"dip \\<in> kD(rt2)\"\n      and \"nsqn rt1 dip < nsqn rt2 dip\"\n    shows \"rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\n 2. \\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2", "from assms"], ["proof (chain)\npicking this:\n  dip \\<in> kD rt1\n  dip \\<in> kD rt2\n  nsqn rt1 dip < nsqn rt2 dip", "show \"rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\""], ["proof (prove)\nusing this:\n  dip \\<in> kD rt1\n  dip \\<in> kD rt2\n  nsqn rt1 dip < nsqn rt2 dip\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2", ".."], ["proof (state)\nthis:\n  rt1 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. \\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2", "show \"\\<not>(rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2 \\<Longrightarrow> False", "assume \"rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\""], ["proof (state)\nthis:\n  rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2 \\<Longrightarrow> False", "hence \"rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\""], ["proof (prove)\nusing this:\n  rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\n\ngoal (1 subgoal):\n 1. rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1", ".."], ["proof (state)\nthis:\n  rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2 \\<Longrightarrow> False", "hence \"nsqn rt2 dip \\<le> nsqn rt1 dip\""], ["proof (prove)\nusing this:\n  rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n\ngoal (1 subgoal):\n 1. nsqn rt2 dip \\<le> nsqn rt1 dip", "using \\<open>dip \\<in> kD(rt2)\\<close> \\<open>dip \\<in> kD(rt1)\\<close>"], ["proof (prove)\nusing this:\n  rt2 \\<sqsubseteq>\\<^bsub>dip\\<^esub> rt1\n  dip \\<in> kD rt2\n  dip \\<in> kD rt1\n\ngoal (1 subgoal):\n 1. nsqn rt2 dip \\<le> nsqn rt1 dip", "by (rule rt_fresher_imp_nsqn_le)"], ["proof (state)\nthis:\n  nsqn rt2 dip \\<le> nsqn rt1 dip\n\ngoal (1 subgoal):\n 1. rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2 \\<Longrightarrow> False", "with \\<open>nsqn rt1 dip < nsqn rt2 dip\\<close>"], ["proof (chain)\npicking this:\n  nsqn rt1 dip < nsqn rt2 dip\n  nsqn rt2 dip \\<le> nsqn rt1 dip", "show \"False\""], ["proof (prove)\nusing this:\n  nsqn rt1 dip < nsqn rt2 dip\n  nsqn rt2 dip \\<le> nsqn rt1 dip\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> rt1 \\<approx>\\<^bsub>dip\\<^esub> rt2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rt_strictly_fresher_eqI [intro]:\n  assumes \"i\\<in>kD(rt1)\"\n      and \"i\\<in>kD(rt2)\"\n      and \"nsqn rt1 i = nsqn rt2 i\"\n      and \"\\<pi>\\<^sub>5(the (rt2 i)) < \\<pi>\\<^sub>5(the (rt1 i))\"\n    shows \"rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2", "using assms"], ["proof (prove)\nusing this:\n  i \\<in> kD rt1\n  i \\<in> kD rt2\n  nsqn rt1 i = nsqn rt2 i\n  \\<pi>\\<^sub>5 (the (rt2 i)) < \\<pi>\\<^sub>5 (the (rt1 i))\n\ngoal (1 subgoal):\n 1. rt1 \\<sqsubset>\\<^bsub>i\\<^esub> rt2", "unfolding rt_strictly_fresher_def'"], ["proof (prove)\nusing this:\n  i \\<in> kD rt1\n  i \\<in> kD rt2\n  nsqn rt1 i = nsqn rt2 i\n  \\<pi>\\<^sub>5 (the (rt2 i)) < \\<pi>\\<^sub>5 (the (rt1 i))\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r (the (rt1 i)) < nsqn\\<^sub>r (the (rt2 i)) \\<or>\n    nsqn\\<^sub>r (the (rt1 i)) = nsqn\\<^sub>r (the (rt2 i)) \\<and>\n    \\<pi>\\<^sub>5 (the (rt2 i)) < \\<pi>\\<^sub>5 (the (rt1 i))", "by (auto simp add: kD_nsqn)"], ["", "lemma invalidate_rtsf_left [simp]:\n  \"\\<And>dests dip rt rt'. dests dip = None \\<Longrightarrow> (invalidate rt dests \\<sqsubset>\\<^bsub>dip\\<^esub> rt') = (rt \\<sqsubset>\\<^bsub>dip\\<^esub> rt')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>dests dip rt rt'.\n       dests dip = None \\<Longrightarrow>\n       (invalidate rt dests \\<sqsubset>\\<^bsub>dip\\<^esub> rt') =\n       (rt \\<sqsubset>\\<^bsub>dip\\<^esub> rt')", "unfolding invalidate_def rt_strictly_fresher_def'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>dests dip rt rt'.\n       dests dip = None \\<Longrightarrow>\n       (nsqn\\<^sub>r\n         (the (case (rt dip, dests dip) of (None, x) \\<Rightarrow> None\n               | (Some (a, ab, ad, af, bb), None) \\<Rightarrow>\n                   Some (a, ab, ad, af, bb)\n               | (Some (a, ab, ad, af, bb), Some rsn) \\<Rightarrow>\n                   Some (rsn, ab, Aodv_Basic.inv, af, bb)))\n        < nsqn\\<^sub>r (the (rt' dip)) \\<or>\n        nsqn\\<^sub>r\n         (the (case (rt dip, dests dip) of (None, x) \\<Rightarrow> None\n               | (Some (a, ab, ad, af, bb), None) \\<Rightarrow>\n                   Some (a, ab, ad, af, bb)\n               | (Some (a, ab, ad, af, bb), Some rsn) \\<Rightarrow>\n                   Some (rsn, ab, Aodv_Basic.inv, af, bb))) =\n        nsqn\\<^sub>r (the (rt' dip)) \\<and>\n        \\<pi>\\<^sub>5 (the (rt' dip))\n        < \\<pi>\\<^sub>5\n           (the (case (rt dip, dests dip) of (None, x) \\<Rightarrow> None\n                 | (Some (a, ab, ad, af, bb), None) \\<Rightarrow>\n                     Some (a, ab, ad, af, bb)\n                 | (Some (a, ab, ad, af, bb), Some rsn) \\<Rightarrow>\n                     Some (rsn, ab, Aodv_Basic.inv, af, bb)))) =\n       (nsqn\\<^sub>r (the (rt dip)) < nsqn\\<^sub>r (the (rt' dip)) \\<or>\n        nsqn\\<^sub>r (the (rt dip)) = nsqn\\<^sub>r (the (rt' dip)) \\<and>\n        \\<pi>\\<^sub>5 (the (rt' dip)) < \\<pi>\\<^sub>5 (the (rt dip)))", "by (rule iffI) (auto split: option.split_asm)"], ["", "lemma vD_invalidate_rt_strictly_fresher [simp]:\n  assumes \"dip \\<in> vD(invalidate rt1 dests)\"\n    shows \"(invalidate rt1 dests \\<sqsubset>\\<^bsub>dip\\<^esub> rt2) = (rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (invalidate rt1 dests \\<sqsubset>\\<^bsub>dip\\<^esub> rt2) =\n    (rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2)", "proof (cases \"dip \\<in> dom(dests)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. dip \\<in> dom dests \\<Longrightarrow>\n    (invalidate rt1 dests \\<sqsubset>\\<^bsub>dip\\<^esub> rt2) =\n    (rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2)\n 2. dip \\<notin> dom dests \\<Longrightarrow>\n    (invalidate rt1 dests \\<sqsubset>\\<^bsub>dip\\<^esub> rt2) =\n    (rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2)", "assume \"dip \\<in> dom(dests)\""], ["proof (state)\nthis:\n  dip \\<in> dom dests\n\ngoal (2 subgoals):\n 1. dip \\<in> dom dests \\<Longrightarrow>\n    (invalidate rt1 dests \\<sqsubset>\\<^bsub>dip\\<^esub> rt2) =\n    (rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2)\n 2. dip \\<notin> dom dests \\<Longrightarrow>\n    (invalidate rt1 dests \\<sqsubset>\\<^bsub>dip\\<^esub> rt2) =\n    (rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2)", "hence \"dip \\<notin> vD(invalidate rt1 dests)\""], ["proof (prove)\nusing this:\n  dip \\<in> dom dests\n\ngoal (1 subgoal):\n 1. dip \\<notin> vD (invalidate rt1 dests)", "unfolding invalidate_def vD_def"], ["proof (prove)\nusing this:\n  dip \\<in> dom dests\n\ngoal (1 subgoal):\n 1. dip\n    \\<notin> {dip.\n              map_option \\<pi>\\<^sub>4\n               (case (rt1 dip, dests dip) of (None, x) \\<Rightarrow> None\n                | (Some (a, ab, ad, af, bb), None) \\<Rightarrow>\n                    Some (a, ab, ad, af, bb)\n                | (Some (a, ab, ad, af, bb), Some rsn) \\<Rightarrow>\n                    Some (rsn, ab, Aodv_Basic.inv, af, bb)) =\n              Some val}", "by clarsimp (metis assms option.simps(3) vD_invalidate_vD_not_dests)"], ["proof (state)\nthis:\n  dip \\<notin> vD (invalidate rt1 dests)\n\ngoal (2 subgoals):\n 1. dip \\<in> dom dests \\<Longrightarrow>\n    (invalidate rt1 dests \\<sqsubset>\\<^bsub>dip\\<^esub> rt2) =\n    (rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2)\n 2. dip \\<notin> dom dests \\<Longrightarrow>\n    (invalidate rt1 dests \\<sqsubset>\\<^bsub>dip\\<^esub> rt2) =\n    (rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2)", "with \\<open>dip \\<in> vD(invalidate rt1 dests)\\<close>"], ["proof (chain)\npicking this:\n  dip \\<in> vD (invalidate rt1 dests)\n  dip \\<notin> vD (invalidate rt1 dests)", "show ?thesis"], ["proof (prove)\nusing this:\n  dip \\<in> vD (invalidate rt1 dests)\n  dip \\<notin> vD (invalidate rt1 dests)\n\ngoal (1 subgoal):\n 1. (invalidate rt1 dests \\<sqsubset>\\<^bsub>dip\\<^esub> rt2) =\n    (rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2)", "by simp"], ["proof (state)\nthis:\n  (invalidate rt1 dests \\<sqsubset>\\<^bsub>dip\\<^esub> rt2) =\n  (rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2)\n\ngoal (1 subgoal):\n 1. dip \\<notin> dom dests \\<Longrightarrow>\n    (invalidate rt1 dests \\<sqsubset>\\<^bsub>dip\\<^esub> rt2) =\n    (rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. dip \\<notin> dom dests \\<Longrightarrow>\n    (invalidate rt1 dests \\<sqsubset>\\<^bsub>dip\\<^esub> rt2) =\n    (rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2)", "assume \"dip \\<notin> dom(dests)\""], ["proof (state)\nthis:\n  dip \\<notin> dom dests\n\ngoal (1 subgoal):\n 1. dip \\<notin> dom dests \\<Longrightarrow>\n    (invalidate rt1 dests \\<sqsubset>\\<^bsub>dip\\<^esub> rt2) =\n    (rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2)", "hence \"dests dip = None\""], ["proof (prove)\nusing this:\n  dip \\<notin> dom dests\n\ngoal (1 subgoal):\n 1. dests dip = None", "by auto"], ["proof (state)\nthis:\n  dests dip = None\n\ngoal (1 subgoal):\n 1. dip \\<notin> dom dests \\<Longrightarrow>\n    (invalidate rt1 dests \\<sqsubset>\\<^bsub>dip\\<^esub> rt2) =\n    (rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2)", "moreover"], ["proof (state)\nthis:\n  dests dip = None\n\ngoal (1 subgoal):\n 1. dip \\<notin> dom dests \\<Longrightarrow>\n    (invalidate rt1 dests \\<sqsubset>\\<^bsub>dip\\<^esub> rt2) =\n    (rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2)", "with \\<open>dip \\<in> vD(invalidate rt1 dests)\\<close>"], ["proof (chain)\npicking this:\n  dip \\<in> vD (invalidate rt1 dests)\n  dests dip = None", "have \"dip \\<in> vD(rt1)\""], ["proof (prove)\nusing this:\n  dip \\<in> vD (invalidate rt1 dests)\n  dests dip = None\n\ngoal (1 subgoal):\n 1. dip \\<in> vD rt1", "unfolding invalidate_def vD_def"], ["proof (prove)\nusing this:\n  dip\n  \\<in> {dip.\n         map_option \\<pi>\\<^sub>4\n          (case (rt1 dip, dests dip) of (None, x) \\<Rightarrow> None\n           | (Some (a, ab, ad, af, bb), None) \\<Rightarrow>\n               Some (a, ab, ad, af, bb)\n           | (Some (a, ab, ad, af, bb), Some rsn) \\<Rightarrow>\n               Some (rsn, ab, Aodv_Basic.inv, af, bb)) =\n         Some val}\n  dests dip = None\n\ngoal (1 subgoal):\n 1. dip \\<in> {dip. flag rt1 dip = Some val}", "by clarsimp (metis (hide_lams, no_types) assms vD_Some vD_invalidate_vD_not_dests)"], ["proof (state)\nthis:\n  dip \\<in> vD rt1\n\ngoal (1 subgoal):\n 1. dip \\<notin> dom dests \\<Longrightarrow>\n    (invalidate rt1 dests \\<sqsubset>\\<^bsub>dip\\<^esub> rt2) =\n    (rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2)", "ultimately"], ["proof (chain)\npicking this:\n  dests dip = None\n  dip \\<in> vD rt1", "show ?thesis"], ["proof (prove)\nusing this:\n  dests dip = None\n  dip \\<in> vD rt1\n\ngoal (1 subgoal):\n 1. (invalidate rt1 dests \\<sqsubset>\\<^bsub>dip\\<^esub> rt2) =\n    (rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2)", "unfolding invalidate_def rt_strictly_fresher_def'"], ["proof (prove)\nusing this:\n  dests dip = None\n  dip \\<in> vD rt1\n\ngoal (1 subgoal):\n 1. (nsqn\\<^sub>r\n      (the (case (rt1 dip, dests dip) of (None, x) \\<Rightarrow> None\n            | (Some (a, ab, ad, af, bb), None) \\<Rightarrow>\n                Some (a, ab, ad, af, bb)\n            | (Some (a, ab, ad, af, bb), Some rsn) \\<Rightarrow>\n                Some (rsn, ab, Aodv_Basic.inv, af, bb)))\n     < nsqn\\<^sub>r (the (rt2 dip)) \\<or>\n     nsqn\\<^sub>r\n      (the (case (rt1 dip, dests dip) of (None, x) \\<Rightarrow> None\n            | (Some (a, ab, ad, af, bb), None) \\<Rightarrow>\n                Some (a, ab, ad, af, bb)\n            | (Some (a, ab, ad, af, bb), Some rsn) \\<Rightarrow>\n                Some (rsn, ab, Aodv_Basic.inv, af, bb))) =\n     nsqn\\<^sub>r (the (rt2 dip)) \\<and>\n     \\<pi>\\<^sub>5 (the (rt2 dip))\n     < \\<pi>\\<^sub>5\n        (the (case (rt1 dip, dests dip) of (None, x) \\<Rightarrow> None\n              | (Some (a, ab, ad, af, bb), None) \\<Rightarrow>\n                  Some (a, ab, ad, af, bb)\n              | (Some (a, ab, ad, af, bb), Some rsn) \\<Rightarrow>\n                  Some (rsn, ab, Aodv_Basic.inv, af, bb)))) =\n    (nsqn\\<^sub>r (the (rt1 dip)) < nsqn\\<^sub>r (the (rt2 dip)) \\<or>\n     nsqn\\<^sub>r (the (rt1 dip)) = nsqn\\<^sub>r (the (rt2 dip)) \\<and>\n     \\<pi>\\<^sub>5 (the (rt2 dip)) < \\<pi>\\<^sub>5 (the (rt1 dip)))", "by auto"], ["proof (state)\nthis:\n  (invalidate rt1 dests \\<sqsubset>\\<^bsub>dip\\<^esub> rt2) =\n  (rt1 \\<sqsubset>\\<^bsub>dip\\<^esub> rt2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rt_strictly_fresher_update_other [elim!]:\n  \"\\<And>dip ip rt r rt'. \\<lbrakk> dip \\<noteq> ip; rt \\<sqsubset>\\<^bsub>dip\\<^esub> rt' \\<rbrakk> \\<Longrightarrow> update rt ip r \\<sqsubset>\\<^bsub>dip\\<^esub> rt'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>dip ip rt r rt'.\n       \\<lbrakk>dip \\<noteq> ip;\n        rt \\<sqsubset>\\<^bsub>dip\\<^esub> rt'\\<rbrakk>\n       \\<Longrightarrow> update rt ip r \\<sqsubset>\\<^bsub>dip\\<^esub> rt'", "unfolding rt_strictly_fresher_def'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>dip ip rt r rt'.\n       \\<lbrakk>dip \\<noteq> ip;\n        nsqn\\<^sub>r (the (rt dip)) < nsqn\\<^sub>r (the (rt' dip)) \\<or>\n        nsqn\\<^sub>r (the (rt dip)) = nsqn\\<^sub>r (the (rt' dip)) \\<and>\n        \\<pi>\\<^sub>5 (the (rt' dip))\n        < \\<pi>\\<^sub>5 (the (rt dip))\\<rbrakk>\n       \\<Longrightarrow> nsqn\\<^sub>r (the (update rt ip r dip))\n                         < nsqn\\<^sub>r (the (rt' dip)) \\<or>\n                         nsqn\\<^sub>r (the (update rt ip r dip)) =\n                         nsqn\\<^sub>r (the (rt' dip)) \\<and>\n                         \\<pi>\\<^sub>5 (the (rt' dip))\n                         < \\<pi>\\<^sub>5 (the (update rt ip r dip))", "by clarsimp"], ["", "lemma lt_sqn_imp_update_strictly_fresher:\n  assumes \"dip \\<in> vD (rt2 nhip)\"\n      and  *: \"osn < sqn (rt2 nhip) dip\"\n      and **: \"rt \\<noteq> update rt dip (osn, kno, val, hops, nhip)\"\n    shows \"update rt dip (osn, kno, val, hops, nhip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt2 nhip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. update rt dip (osn, kno, val, hops, nhip)\n    \\<sqsubset>\\<^bsub>dip\\<^esub> rt2 nhip", "unfolding rt_strictly_fresher_def'"], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r (the (update rt dip (osn, kno, val, hops, nhip) dip))\n    < nsqn\\<^sub>r (the (rt2 nhip dip)) \\<or>\n    nsqn\\<^sub>r (the (update rt dip (osn, kno, val, hops, nhip) dip)) =\n    nsqn\\<^sub>r (the (rt2 nhip dip)) \\<and>\n    \\<pi>\\<^sub>5 (the (rt2 nhip dip))\n    < \\<pi>\\<^sub>5 (the (update rt dip (osn, kno, val, hops, nhip) dip))", "proof (rule disjI1)"], ["proof (state)\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r (the (update rt dip (osn, kno, val, hops, nhip) dip))\n    < nsqn\\<^sub>r (the (rt2 nhip dip))", "from **"], ["proof (chain)\npicking this:\n  rt \\<noteq> update rt dip (osn, kno, val, hops, nhip)", "have \"nsqn (update rt dip (osn, kno, val, hops, nhip)) dip = osn\""], ["proof (prove)\nusing this:\n  rt \\<noteq> update rt dip (osn, kno, val, hops, nhip)\n\ngoal (1 subgoal):\n 1. nsqn (update rt dip (osn, kno, val, hops, nhip)) dip = osn", "by (rule nsqn_update_changed_kno_val)"], ["proof (state)\nthis:\n  nsqn (update rt dip (osn, kno, val, hops, nhip)) dip = osn\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r (the (update rt dip (osn, kno, val, hops, nhip) dip))\n    < nsqn\\<^sub>r (the (rt2 nhip dip))", "with \\<open>dip\\<in>vD(rt2 nhip)\\<close>"], ["proof (chain)\npicking this:\n  dip \\<in> vD (rt2 nhip)\n  nsqn (update rt dip (osn, kno, val, hops, nhip)) dip = osn", "have \"nsqn\\<^sub>r (the (update rt dip (osn, kno, val, hops, nhip) dip)) = osn\""], ["proof (prove)\nusing this:\n  dip \\<in> vD (rt2 nhip)\n  nsqn (update rt dip (osn, kno, val, hops, nhip)) dip = osn\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r (the (update rt dip (osn, kno, val, hops, nhip) dip)) = osn", "by (simp add: kD_nsqn)"], ["proof (state)\nthis:\n  nsqn\\<^sub>r (the (update rt dip (osn, kno, val, hops, nhip) dip)) = osn\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r (the (update rt dip (osn, kno, val, hops, nhip) dip))\n    < nsqn\\<^sub>r (the (rt2 nhip dip))", "also"], ["proof (state)\nthis:\n  nsqn\\<^sub>r (the (update rt dip (osn, kno, val, hops, nhip) dip)) = osn\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r (the (update rt dip (osn, kno, val, hops, nhip) dip))\n    < nsqn\\<^sub>r (the (rt2 nhip dip))", "have \"osn < sqn (rt2 nhip) dip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. osn < sqn (rt2 nhip) dip", "by (rule *)"], ["proof (state)\nthis:\n  osn < sqn (rt2 nhip) dip\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r (the (update rt dip (osn, kno, val, hops, nhip) dip))\n    < nsqn\\<^sub>r (the (rt2 nhip dip))", "also"], ["proof (state)\nthis:\n  osn < sqn (rt2 nhip) dip\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r (the (update rt dip (osn, kno, val, hops, nhip) dip))\n    < nsqn\\<^sub>r (the (rt2 nhip dip))", "have \"sqn (rt2 nhip) dip = nsqn\\<^sub>r (the (rt2 nhip dip))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqn (rt2 nhip) dip = nsqn\\<^sub>r (the (rt2 nhip dip))", "unfolding nsqn\\<^sub>r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sqn (rt2 nhip) dip =\n    (if \\<pi>\\<^sub>4 (the (rt2 nhip dip)) = val \\<or>\n        \\<pi>\\<^sub>2 (the (rt2 nhip dip)) = 0\n     then \\<pi>\\<^sub>2 (the (rt2 nhip dip))\n     else \\<pi>\\<^sub>2 (the (rt2 nhip dip)) - 1)", "using \\<open>dip \\<in> vD (rt2 nhip)\\<close>"], ["proof (prove)\nusing this:\n  dip \\<in> vD (rt2 nhip)\n\ngoal (1 subgoal):\n 1. sqn (rt2 nhip) dip =\n    (if \\<pi>\\<^sub>4 (the (rt2 nhip dip)) = val \\<or>\n        \\<pi>\\<^sub>2 (the (rt2 nhip dip)) = 0\n     then \\<pi>\\<^sub>2 (the (rt2 nhip dip))\n     else \\<pi>\\<^sub>2 (the (rt2 nhip dip)) - 1)", "by - (metis vD_flag_val proj2_eq_sqn proj4_eq_flag vD_iD_gives_kD(1))"], ["proof (state)\nthis:\n  sqn (rt2 nhip) dip = nsqn\\<^sub>r (the (rt2 nhip dip))\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r (the (update rt dip (osn, kno, val, hops, nhip) dip))\n    < nsqn\\<^sub>r (the (rt2 nhip dip))", "finally"], ["proof (chain)\npicking this:\n  nsqn\\<^sub>r (the (update rt dip (osn, kno, val, hops, nhip) dip))\n  < nsqn\\<^sub>r (the (rt2 nhip dip))", "show \"nsqn\\<^sub>r (the (update rt dip (osn, kno, val, hops, nhip) dip))\n                                                              < nsqn\\<^sub>r (the (rt2 nhip dip))\""], ["proof (prove)\nusing this:\n  nsqn\\<^sub>r (the (update rt dip (osn, kno, val, hops, nhip) dip))\n  < nsqn\\<^sub>r (the (rt2 nhip dip))\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r (the (update rt dip (osn, kno, val, hops, nhip) dip))\n    < nsqn\\<^sub>r (the (rt2 nhip dip))", "."], ["proof (state)\nthis:\n  nsqn\\<^sub>r (the (update rt dip (osn, kno, val, hops, nhip) dip))\n  < nsqn\\<^sub>r (the (rt2 nhip dip))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dhops_le_hops_imp_update_strictly_fresher:\n  assumes \"dip \\<in> vD(rt2 nhip)\"\n      and sqn: \"sqn (rt2 nhip) dip = osn\"\n      and hop: \"the (dhops (rt2 nhip) dip) \\<le> hops\"\n      and **: \"rt \\<noteq> update rt dip (osn, kno, val, Suc hops, nhip)\"\n    shows \"update rt dip (osn, kno, val, Suc hops, nhip) \\<sqsubset>\\<^bsub>dip\\<^esub> rt2 nhip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. update rt dip (osn, kno, val, Suc hops, nhip)\n    \\<sqsubset>\\<^bsub>dip\\<^esub> rt2 nhip", "unfolding rt_strictly_fresher_def'"], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r (the (update rt dip (osn, kno, val, Suc hops, nhip) dip))\n    < nsqn\\<^sub>r (the (rt2 nhip dip)) \\<or>\n    nsqn\\<^sub>r (the (update rt dip (osn, kno, val, Suc hops, nhip) dip)) =\n    nsqn\\<^sub>r (the (rt2 nhip dip)) \\<and>\n    \\<pi>\\<^sub>5 (the (rt2 nhip dip))\n    < \\<pi>\\<^sub>5\n       (the (update rt dip (osn, kno, val, Suc hops, nhip) dip))", "proof (rule disjI2, rule conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. nsqn\\<^sub>r (the (update rt dip (osn, kno, val, Suc hops, nhip) dip)) =\n    nsqn\\<^sub>r (the (rt2 nhip dip))\n 2. \\<pi>\\<^sub>5 (the (rt2 nhip dip))\n    < \\<pi>\\<^sub>5\n       (the (update rt dip (osn, kno, val, Suc hops, nhip) dip))", "from **"], ["proof (chain)\npicking this:\n  rt \\<noteq> update rt dip (osn, kno, val, Suc hops, nhip)", "have \"nsqn (update rt dip (osn, kno, val, Suc hops, nhip)) dip = osn\""], ["proof (prove)\nusing this:\n  rt \\<noteq> update rt dip (osn, kno, val, Suc hops, nhip)\n\ngoal (1 subgoal):\n 1. nsqn (update rt dip (osn, kno, val, Suc hops, nhip)) dip = osn", "by (rule nsqn_update_changed_kno_val)"], ["proof (state)\nthis:\n  nsqn (update rt dip (osn, kno, val, Suc hops, nhip)) dip = osn\n\ngoal (2 subgoals):\n 1. nsqn\\<^sub>r (the (update rt dip (osn, kno, val, Suc hops, nhip) dip)) =\n    nsqn\\<^sub>r (the (rt2 nhip dip))\n 2. \\<pi>\\<^sub>5 (the (rt2 nhip dip))\n    < \\<pi>\\<^sub>5\n       (the (update rt dip (osn, kno, val, Suc hops, nhip) dip))", "with \\<open>dip\\<in>vD(rt2 nhip)\\<close>"], ["proof (chain)\npicking this:\n  dip \\<in> vD (rt2 nhip)\n  nsqn (update rt dip (osn, kno, val, Suc hops, nhip)) dip = osn", "have \"nsqn\\<^sub>r (the (update rt dip (osn, kno, val, Suc hops, nhip) dip)) = osn\""], ["proof (prove)\nusing this:\n  dip \\<in> vD (rt2 nhip)\n  nsqn (update rt dip (osn, kno, val, Suc hops, nhip)) dip = osn\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r (the (update rt dip (osn, kno, val, Suc hops, nhip) dip)) =\n    osn", "by (simp add: kD_nsqn)"], ["proof (state)\nthis:\n  nsqn\\<^sub>r (the (update rt dip (osn, kno, val, Suc hops, nhip) dip)) =\n  osn\n\ngoal (2 subgoals):\n 1. nsqn\\<^sub>r (the (update rt dip (osn, kno, val, Suc hops, nhip) dip)) =\n    nsqn\\<^sub>r (the (rt2 nhip dip))\n 2. \\<pi>\\<^sub>5 (the (rt2 nhip dip))\n    < \\<pi>\\<^sub>5\n       (the (update rt dip (osn, kno, val, Suc hops, nhip) dip))", "also"], ["proof (state)\nthis:\n  nsqn\\<^sub>r (the (update rt dip (osn, kno, val, Suc hops, nhip) dip)) =\n  osn\n\ngoal (2 subgoals):\n 1. nsqn\\<^sub>r (the (update rt dip (osn, kno, val, Suc hops, nhip) dip)) =\n    nsqn\\<^sub>r (the (rt2 nhip dip))\n 2. \\<pi>\\<^sub>5 (the (rt2 nhip dip))\n    < \\<pi>\\<^sub>5\n       (the (update rt dip (osn, kno, val, Suc hops, nhip) dip))", "have \"osn = sqn (rt2 nhip) dip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. osn = sqn (rt2 nhip) dip", "by (rule sqn [symmetric])"], ["proof (state)\nthis:\n  osn = sqn (rt2 nhip) dip\n\ngoal (2 subgoals):\n 1. nsqn\\<^sub>r (the (update rt dip (osn, kno, val, Suc hops, nhip) dip)) =\n    nsqn\\<^sub>r (the (rt2 nhip dip))\n 2. \\<pi>\\<^sub>5 (the (rt2 nhip dip))\n    < \\<pi>\\<^sub>5\n       (the (update rt dip (osn, kno, val, Suc hops, nhip) dip))", "also"], ["proof (state)\nthis:\n  osn = sqn (rt2 nhip) dip\n\ngoal (2 subgoals):\n 1. nsqn\\<^sub>r (the (update rt dip (osn, kno, val, Suc hops, nhip) dip)) =\n    nsqn\\<^sub>r (the (rt2 nhip dip))\n 2. \\<pi>\\<^sub>5 (the (rt2 nhip dip))\n    < \\<pi>\\<^sub>5\n       (the (update rt dip (osn, kno, val, Suc hops, nhip) dip))", "have \"sqn (rt2 nhip) dip = nsqn\\<^sub>r (the (rt2 nhip dip))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqn (rt2 nhip) dip = nsqn\\<^sub>r (the (rt2 nhip dip))", "unfolding nsqn\\<^sub>r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sqn (rt2 nhip) dip =\n    (if \\<pi>\\<^sub>4 (the (rt2 nhip dip)) = val \\<or>\n        \\<pi>\\<^sub>2 (the (rt2 nhip dip)) = 0\n     then \\<pi>\\<^sub>2 (the (rt2 nhip dip))\n     else \\<pi>\\<^sub>2 (the (rt2 nhip dip)) - 1)", "using \\<open>dip \\<in> vD(rt2 nhip)\\<close>"], ["proof (prove)\nusing this:\n  dip \\<in> vD (rt2 nhip)\n\ngoal (1 subgoal):\n 1. sqn (rt2 nhip) dip =\n    (if \\<pi>\\<^sub>4 (the (rt2 nhip dip)) = val \\<or>\n        \\<pi>\\<^sub>2 (the (rt2 nhip dip)) = 0\n     then \\<pi>\\<^sub>2 (the (rt2 nhip dip))\n     else \\<pi>\\<^sub>2 (the (rt2 nhip dip)) - 1)", "by - (metis vD_flag_val proj2_eq_sqn proj4_eq_flag vD_iD_gives_kD(1))"], ["proof (state)\nthis:\n  sqn (rt2 nhip) dip = nsqn\\<^sub>r (the (rt2 nhip dip))\n\ngoal (2 subgoals):\n 1. nsqn\\<^sub>r (the (update rt dip (osn, kno, val, Suc hops, nhip) dip)) =\n    nsqn\\<^sub>r (the (rt2 nhip dip))\n 2. \\<pi>\\<^sub>5 (the (rt2 nhip dip))\n    < \\<pi>\\<^sub>5\n       (the (update rt dip (osn, kno, val, Suc hops, nhip) dip))", "finally"], ["proof (chain)\npicking this:\n  nsqn\\<^sub>r (the (update rt dip (osn, kno, val, Suc hops, nhip) dip)) =\n  nsqn\\<^sub>r (the (rt2 nhip dip))", "show \"nsqn\\<^sub>r (the (update rt dip (osn, kno, val, Suc hops, nhip) dip))\n                                                              = nsqn\\<^sub>r (the (rt2 nhip dip))\""], ["proof (prove)\nusing this:\n  nsqn\\<^sub>r (the (update rt dip (osn, kno, val, Suc hops, nhip) dip)) =\n  nsqn\\<^sub>r (the (rt2 nhip dip))\n\ngoal (1 subgoal):\n 1. nsqn\\<^sub>r (the (update rt dip (osn, kno, val, Suc hops, nhip) dip)) =\n    nsqn\\<^sub>r (the (rt2 nhip dip))", "."], ["proof (state)\nthis:\n  nsqn\\<^sub>r (the (update rt dip (osn, kno, val, Suc hops, nhip) dip)) =\n  nsqn\\<^sub>r (the (rt2 nhip dip))\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>5 (the (rt2 nhip dip))\n    < \\<pi>\\<^sub>5\n       (the (update rt dip (osn, kno, val, Suc hops, nhip) dip))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>5 (the (rt2 nhip dip))\n    < \\<pi>\\<^sub>5\n       (the (update rt dip (osn, kno, val, Suc hops, nhip) dip))", "have \"the (dhops (rt2 nhip) dip) \\<le> hops\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the (dhops (rt2 nhip) dip) \\<le> hops", "by (rule hop)"], ["proof (state)\nthis:\n  the (dhops (rt2 nhip) dip) \\<le> hops\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>5 (the (rt2 nhip dip))\n    < \\<pi>\\<^sub>5\n       (the (update rt dip (osn, kno, val, Suc hops, nhip) dip))", "also"], ["proof (state)\nthis:\n  the (dhops (rt2 nhip) dip) \\<le> hops\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>5 (the (rt2 nhip dip))\n    < \\<pi>\\<^sub>5\n       (the (update rt dip (osn, kno, val, Suc hops, nhip) dip))", "have \"hops < hops + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hops < hops + 1", "by simp"], ["proof (state)\nthis:\n  hops < hops + 1\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>5 (the (rt2 nhip dip))\n    < \\<pi>\\<^sub>5\n       (the (update rt dip (osn, kno, val, Suc hops, nhip) dip))", "also"], ["proof (state)\nthis:\n  hops < hops + 1\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>5 (the (rt2 nhip dip))\n    < \\<pi>\\<^sub>5\n       (the (update rt dip (osn, kno, val, Suc hops, nhip) dip))", "have \"hops + 1 = the (dhops (update rt dip (osn, kno, val, Suc hops, nhip)) dip)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hops + 1 =\n    the (dhops (update rt dip (osn, kno, val, Suc hops, nhip)) dip)", "using **"], ["proof (prove)\nusing this:\n  rt \\<noteq> update rt dip (osn, kno, val, Suc hops, nhip)\n\ngoal (1 subgoal):\n 1. hops + 1 =\n    the (dhops (update rt dip (osn, kno, val, Suc hops, nhip)) dip)", "by simp"], ["proof (state)\nthis:\n  hops + 1 = the (dhops (update rt dip (osn, kno, val, Suc hops, nhip)) dip)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>5 (the (rt2 nhip dip))\n    < \\<pi>\\<^sub>5\n       (the (update rt dip (osn, kno, val, Suc hops, nhip) dip))", "finally"], ["proof (chain)\npicking this:\n  the (dhops (rt2 nhip) dip)\n  < the (dhops (update rt dip (osn, kno, val, Suc hops, nhip)) dip)", "have \"the (dhops (rt2 nhip) dip)\n                        < the (dhops (update rt dip (osn, kno, val, Suc hops, nhip)) dip)\""], ["proof (prove)\nusing this:\n  the (dhops (rt2 nhip) dip)\n  < the (dhops (update rt dip (osn, kno, val, Suc hops, nhip)) dip)\n\ngoal (1 subgoal):\n 1. the (dhops (rt2 nhip) dip)\n    < the (dhops (update rt dip (osn, kno, val, Suc hops, nhip)) dip)", "."], ["proof (state)\nthis:\n  the (dhops (rt2 nhip) dip)\n  < the (dhops (update rt dip (osn, kno, val, Suc hops, nhip)) dip)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>5 (the (rt2 nhip dip))\n    < \\<pi>\\<^sub>5\n       (the (update rt dip (osn, kno, val, Suc hops, nhip) dip))", "thus \"\\<pi>\\<^sub>5 (the (rt2 nhip dip)) < \\<pi>\\<^sub>5 (the (update rt dip (osn, kno, val, Suc hops, nhip) dip))\""], ["proof (prove)\nusing this:\n  the (dhops (rt2 nhip) dip)\n  < the (dhops (update rt dip (osn, kno, val, Suc hops, nhip)) dip)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>5 (the (rt2 nhip dip))\n    < \\<pi>\\<^sub>5\n       (the (update rt dip (osn, kno, val, Suc hops, nhip) dip))", "using \\<open>dip \\<in> vD(rt2 nhip)\\<close>"], ["proof (prove)\nusing this:\n  the (dhops (rt2 nhip) dip)\n  < the (dhops (update rt dip (osn, kno, val, Suc hops, nhip)) dip)\n  dip \\<in> vD (rt2 nhip)\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>5 (the (rt2 nhip dip))\n    < \\<pi>\\<^sub>5\n       (the (update rt dip (osn, kno, val, Suc hops, nhip) dip))", "by (simp add: proj5_eq_dhops)"], ["proof (state)\nthis:\n  \\<pi>\\<^sub>5 (the (rt2 nhip dip))\n  < \\<pi>\\<^sub>5 (the (update rt dip (osn, kno, val, Suc hops, nhip) dip))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nsqn_invalidate:\n  assumes \"dip \\<in> kD(rt)\"\n      and \"\\<forall>ip\\<in>dom(dests). ip \\<in> vD(rt) \\<and> the (dests ip) = inc (sqn rt ip)\"\n    shows \"nsqn (invalidate rt dests) dip = nsqn rt dip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nsqn (invalidate rt dests) dip = nsqn rt dip", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nsqn (invalidate rt dests) dip = nsqn rt dip", "from \\<open>dip \\<in> kD(rt)\\<close>"], ["proof (chain)\npicking this:\n  dip \\<in> kD rt", "have \"dip \\<in> kD(invalidate rt dests)\""], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n\ngoal (1 subgoal):\n 1. dip \\<in> kD (invalidate rt dests)", "by simp"], ["proof (state)\nthis:\n  dip \\<in> kD (invalidate rt dests)\n\ngoal (1 subgoal):\n 1. nsqn (invalidate rt dests) dip = nsqn rt dip", "from assms"], ["proof (chain)\npicking this:\n  dip \\<in> kD rt\n  \\<forall>ip\\<in>dom dests.\n     ip \\<in> vD rt \\<and> the (dests ip) = inc (sqn rt ip)", "have \"rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests\""], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n  \\<forall>ip\\<in>dom dests.\n     ip \\<in> vD rt \\<and> the (dests ip) = inc (sqn rt ip)\n\ngoal (1 subgoal):\n 1. rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests", "by (rule rt_fresh_as_inc_invalidate)"], ["proof (state)\nthis:\n  rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests\n\ngoal (1 subgoal):\n 1. nsqn (invalidate rt dests) dip = nsqn rt dip", "with \\<open>dip \\<in> kD(rt)\\<close> \\<open>dip \\<in> kD(invalidate rt dests)\\<close>"], ["proof (chain)\npicking this:\n  dip \\<in> kD rt\n  dip \\<in> kD (invalidate rt dests)\n  rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests", "show ?thesis"], ["proof (prove)\nusing this:\n  dip \\<in> kD rt\n  dip \\<in> kD (invalidate rt dests)\n  rt \\<approx>\\<^bsub>dip\\<^esub> invalidate rt dests\n\ngoal (1 subgoal):\n 1. nsqn (invalidate rt dests) dip = nsqn rt dip", "by (simp add: kD_nsqn del: invalidate_kD_inv)\n         (erule(2) rt_fresh_as_nsqnr)"], ["proof (state)\nthis:\n  nsqn (invalidate rt dests) dip = nsqn rt dip\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}