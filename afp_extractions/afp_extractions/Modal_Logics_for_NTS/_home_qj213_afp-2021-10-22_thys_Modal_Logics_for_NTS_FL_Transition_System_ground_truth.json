{"file_name": "/home/qj213/afp-2021-10-22/thys/Modal_Logics_for_NTS/FL_Transition_System.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Modal_Logics_for_NTS", "problem_names": ["lemma effect_apply_eqvt_aux [simp]: \"p \\<bullet> effect_apply = effect_apply\"", "lemma effect_apply_eqvt' [eqvt]: \"p \\<bullet> \\<langle>f\\<rangle>P = \\<langle>p \\<bullet> f\\<rangle>(p \\<bullet> P)\"", "lemma L_eqvt_aux [simp]: \"p \\<bullet> L = L\"", "lemma L_eqvt' [eqvt]: \"p \\<bullet> L (\\<alpha>, P, f) = L (p \\<bullet> \\<alpha>, p \\<bullet> P, p \\<bullet> f)\"", "lemma is_L_bisimulation_eqvt [eqvt]:\n    assumes \"is_L_bisimulation R\" shows \"is_L_bisimulation (p \\<bullet> R)\"", "lemma FL_bisimilar_eqvt:\n    assumes \"P \\<sim>\\<cdot>[F] Q\" shows \"(p \\<bullet> P) \\<sim>\\<cdot>[p \\<bullet> F] (p \\<bullet> Q)\"", "lemma FL_bisimilar_reflp: \"reflp (FL_bisimilar F)\"", "lemma FL_bisimilar_symp: \"symp (FL_bisimilar F)\"", "lemma FL_bisimilar_is_L_bisimulation: \"is_L_bisimulation FL_bisimilar\"", "lemma FL_bisimilar_simulation_step:\n    assumes \"P \\<sim>\\<cdot>[F] Q\" and \"f \\<in>\\<^sub>f\\<^sub>s F\" and \"bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)\" and \"\\<langle>f\\<rangle>P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\"\n    obtains Q' where \"\\<langle>f\\<rangle>Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle>\" and \"P' \\<sim>\\<cdot>[L (\\<alpha>,F,f)] Q'\"", "lemma FL_bisimilar_transp: \"transp (FL_bisimilar F)\"", "lemma FL_bisimilar_equivp: \"equivp (FL_bisimilar F)\""], "translations": [["", "lemma effect_apply_eqvt_aux [simp]: \"p \\<bullet> effect_apply = effect_apply\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> effect_apply = effect_apply", "by (metis effect_apply_eqvt eqvt_def)"], ["", "lemma effect_apply_eqvt' [eqvt]: \"p \\<bullet> \\<langle>f\\<rangle>P = \\<langle>p \\<bullet> f\\<rangle>(p \\<bullet> P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> \\<langle>f\\<rangle>P =\n    \\<langle>p \\<bullet> f\\<rangle>(p \\<bullet> P)", "by simp"], ["", "lemma L_eqvt_aux [simp]: \"p \\<bullet> L = L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> L = L", "by (metis L_eqvt eqvt_def)"], ["", "lemma L_eqvt' [eqvt]: \"p \\<bullet> L (\\<alpha>, P, f) = L (p \\<bullet> \\<alpha>, p \\<bullet> P, p \\<bullet> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> L (\\<alpha>, P, f) =\n    L (p \\<bullet> \\<alpha>, p \\<bullet> P, p \\<bullet> f)", "by simp"], ["", "end"], ["", "subsection \\<open>\\texorpdfstring{$L$}{L}-bisimulations and \\texorpdfstring{$F/L$}{F/L}-bisimilarity\\<close>"], ["", "context effect_nominal_ts\nbegin"], ["", "definition is_L_bisimulation:: \"('effect first \\<Rightarrow> 'state \\<Rightarrow> 'state \\<Rightarrow> bool) \\<Rightarrow> bool\" where\n    \"is_L_bisimulation R \\<equiv>\n      \\<forall>F. symp (R F) \\<and>\n          (\\<forall>P Q. R F P Q \\<longrightarrow> (\\<forall>f. f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow> (\\<forall>\\<phi>. \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow> \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n          (\\<forall>P Q. R F P Q \\<longrightarrow> (\\<forall>f. f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow> (\\<forall>\\<alpha> P'. bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f) \\<longrightarrow>\n                  \\<langle>f\\<rangle>P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow> (\\<exists>Q'. \\<langle>f\\<rangle>Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and> R (L (\\<alpha>,F,f)) P' Q'))))\""], ["", "definition FL_bisimilar :: \"'effect first \\<Rightarrow> 'state \\<Rightarrow> 'state \\<Rightarrow> bool\" where\n    \"FL_bisimilar F P Q \\<equiv> \\<exists>R. is_L_bisimulation R \\<and> (R F) P Q\""], ["", "abbreviation FL_bisimilar' (\"_ \\<sim>\\<cdot>[_] _\" [51,0,51] 50) where\n    \"P \\<sim>\\<cdot>[F] Q \\<equiv> FL_bisimilar F P Q\""], ["", "text \\<open>@{term \"FL_bisimilar\"} is an equivariant relation, and (for every~@{term F}) an\n    equivalence.\\<close>"], ["", "lemma is_L_bisimulation_eqvt [eqvt]:\n    assumes \"is_L_bisimulation R\" shows \"is_L_bisimulation (p \\<bullet> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_L_bisimulation (p \\<bullet> R)", "unfolding is_L_bisimulation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>F.\n       symp ((p \\<bullet> R) F) \\<and>\n       (\\<forall>P Q.\n           (p \\<bullet> R) F P Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<phi>.\n                   \\<langle>f\\<rangle>P \\<turnstile>\n                   \\<phi> \\<longrightarrow>\n                   \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n       (\\<forall>P Q.\n           (p \\<bullet> R) F P Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<alpha> P'.\n                   bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n    f) \\<longrightarrow>\n                   \\<langle>f\\<rangle>P \\<rightarrow>\n                   \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                   (\\<exists>Q'.\n                       \\<langle>f\\<rangle>Q \\<rightarrow>\n                       \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                       (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'))))", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F.\n       symp ((p \\<bullet> R) F) \\<and>\n       (\\<forall>P Q.\n           (p \\<bullet> R) F P Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<phi>.\n                   \\<langle>f\\<rangle>P \\<turnstile>\n                   \\<phi> \\<longrightarrow>\n                   \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n       (\\<forall>P Q.\n           (p \\<bullet> R) F P Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<alpha> P'.\n                   bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n    f) \\<longrightarrow>\n                   \\<langle>f\\<rangle>P \\<rightarrow>\n                   \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                   (\\<exists>Q'.\n                       \\<langle>f\\<rangle>Q \\<rightarrow>\n                       \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                       (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'))))", "fix F"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F.\n       symp ((p \\<bullet> R) F) \\<and>\n       (\\<forall>P Q.\n           (p \\<bullet> R) F P Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<phi>.\n                   \\<langle>f\\<rangle>P \\<turnstile>\n                   \\<phi> \\<longrightarrow>\n                   \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n       (\\<forall>P Q.\n           (p \\<bullet> R) F P Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<alpha> P'.\n                   bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n    f) \\<longrightarrow>\n                   \\<langle>f\\<rangle>P \\<rightarrow>\n                   \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                   (\\<exists>Q'.\n                       \\<langle>f\\<rangle>Q \\<rightarrow>\n                       \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                       (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'))))", "have \"symp ((p \\<bullet> R) F)\" (is ?S)"], ["proof (prove)\ngoal (1 subgoal):\n 1. symp ((p \\<bullet> R) F)", "using assms"], ["proof (prove)\nusing this:\n  is_L_bisimulation R\n\ngoal (1 subgoal):\n 1. symp ((p \\<bullet> R) F)", "unfolding is_L_bisimulation_def"], ["proof (prove)\nusing this:\n  \\<forall>F.\n     symp (R F) \\<and>\n     (\\<forall>P Q.\n         R F P Q \\<longrightarrow>\n         (\\<forall>f.\n             f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n             (\\<forall>\\<phi>.\n                 \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n                 \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n     (\\<forall>P Q.\n         R F P Q \\<longrightarrow>\n         (\\<forall>f.\n             f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n             (\\<forall>\\<alpha> P'.\n                 bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n  f) \\<longrightarrow>\n                 \\<langle>f\\<rangle>P \\<rightarrow>\n                 \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                 (\\<exists>Q'.\n                     \\<langle>f\\<rangle>Q \\<rightarrow>\n                     \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                     R (L (\\<alpha>, F, f)) P' Q'))))\n\ngoal (1 subgoal):\n 1. symp ((p \\<bullet> R) F)", "by (metis eqvt_lambda symp_eqvt)"], ["proof (state)\nthis:\n  symp ((p \\<bullet> R) F)\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       symp ((p \\<bullet> R) F) \\<and>\n       (\\<forall>P Q.\n           (p \\<bullet> R) F P Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<phi>.\n                   \\<langle>f\\<rangle>P \\<turnstile>\n                   \\<phi> \\<longrightarrow>\n                   \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n       (\\<forall>P Q.\n           (p \\<bullet> R) F P Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<alpha> P'.\n                   bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n    f) \\<longrightarrow>\n                   \\<langle>f\\<rangle>P \\<rightarrow>\n                   \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                   (\\<exists>Q'.\n                       \\<langle>f\\<rangle>Q \\<rightarrow>\n                       \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                       (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'))))", "moreover"], ["proof (state)\nthis:\n  symp ((p \\<bullet> R) F)\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       symp ((p \\<bullet> R) F) \\<and>\n       (\\<forall>P Q.\n           (p \\<bullet> R) F P Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<phi>.\n                   \\<langle>f\\<rangle>P \\<turnstile>\n                   \\<phi> \\<longrightarrow>\n                   \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n       (\\<forall>P Q.\n           (p \\<bullet> R) F P Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<alpha> P'.\n                   bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n    f) \\<longrightarrow>\n                   \\<langle>f\\<rangle>P \\<rightarrow>\n                   \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                   (\\<exists>Q'.\n                       \\<langle>f\\<rangle>Q \\<rightarrow>\n                       \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                       (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'))))", "have \"\\<forall>P Q. (p \\<bullet> R) F P Q \\<longrightarrow> (\\<forall>f. f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow> (\\<forall>\\<phi>. \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow> \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))\" (is ?T)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P Q.\n       (p \\<bullet> R) F P Q \\<longrightarrow>\n       (\\<forall>f.\n           f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n           (\\<forall>\\<phi>.\n               \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n               \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        \\<langle>f\\<rangle>P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>", "fix P Q f \\<phi>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        \\<langle>f\\<rangle>P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>", "assume pR: \"(p \\<bullet> R) F P Q\" and effect: \"f \\<in>\\<^sub>f\\<^sub>s F\" and satisfies: \"\\<langle>f\\<rangle>P \\<turnstile> \\<phi>\""], ["proof (state)\nthis:\n  (p \\<bullet> R) F P Q\n  f \\<in>\\<^sub>f\\<^sub>s F\n  \\<langle>f\\<rangle>P \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        \\<langle>f\\<rangle>P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>", "from pR"], ["proof (chain)\npicking this:\n  (p \\<bullet> R) F P Q", "have \"R (-p \\<bullet> F) (-p \\<bullet> P) (-p \\<bullet> Q)\""], ["proof (prove)\nusing this:\n  (p \\<bullet> R) F P Q\n\ngoal (1 subgoal):\n 1. R (- p \\<bullet> F) (- p \\<bullet> P) (- p \\<bullet> Q)", "by (simp add: eqvt_lambda permute_bool_def unpermute_def)"], ["proof (state)\nthis:\n  R (- p \\<bullet> F) (- p \\<bullet> P) (- p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        \\<langle>f\\<rangle>P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>", "moreover"], ["proof (state)\nthis:\n  R (- p \\<bullet> F) (- p \\<bullet> P) (- p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        \\<langle>f\\<rangle>P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>", "have \"(-p \\<bullet> f) \\<in>\\<^sub>f\\<^sub>s (-p \\<bullet> F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - p \\<bullet> f \\<in>\\<^sub>f\\<^sub>s - p \\<bullet> F", "using effect"], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>f\\<^sub>s F\n\ngoal (1 subgoal):\n 1. - p \\<bullet> f \\<in>\\<^sub>f\\<^sub>s - p \\<bullet> F", "by simp"], ["proof (state)\nthis:\n  - p \\<bullet> f \\<in>\\<^sub>f\\<^sub>s - p \\<bullet> F\n\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        \\<langle>f\\<rangle>P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>", "moreover"], ["proof (state)\nthis:\n  - p \\<bullet> f \\<in>\\<^sub>f\\<^sub>s - p \\<bullet> F\n\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        \\<langle>f\\<rangle>P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>", "have \"\\<langle>-p \\<bullet> f\\<rangle>(-p \\<bullet> P) \\<turnstile> -p \\<bullet> \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> P) \\<turnstile>\n    - p \\<bullet> \\<phi>", "using satisfies"], ["proof (prove)\nusing this:\n  \\<langle>f\\<rangle>P \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> P) \\<turnstile>\n    - p \\<bullet> \\<phi>", "by (metis effect_apply_eqvt' satisfies_eqvt)"], ["proof (state)\nthis:\n  \\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> P) \\<turnstile>\n  - p \\<bullet> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        \\<langle>f\\<rangle>P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>", "ultimately"], ["proof (chain)\npicking this:\n  R (- p \\<bullet> F) (- p \\<bullet> P) (- p \\<bullet> Q)\n  - p \\<bullet> f \\<in>\\<^sub>f\\<^sub>s - p \\<bullet> F\n  \\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> P) \\<turnstile>\n  - p \\<bullet> \\<phi>", "have \"\\<langle>-p \\<bullet> f\\<rangle>(-p \\<bullet> Q) \\<turnstile> -p \\<bullet> \\<phi>\""], ["proof (prove)\nusing this:\n  R (- p \\<bullet> F) (- p \\<bullet> P) (- p \\<bullet> Q)\n  - p \\<bullet> f \\<in>\\<^sub>f\\<^sub>s - p \\<bullet> F\n  \\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> P) \\<turnstile>\n  - p \\<bullet> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> Q) \\<turnstile>\n    - p \\<bullet> \\<phi>", "using assms"], ["proof (prove)\nusing this:\n  R (- p \\<bullet> F) (- p \\<bullet> P) (- p \\<bullet> Q)\n  - p \\<bullet> f \\<in>\\<^sub>f\\<^sub>s - p \\<bullet> F\n  \\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> P) \\<turnstile>\n  - p \\<bullet> \\<phi>\n  is_L_bisimulation R\n\ngoal (1 subgoal):\n 1. \\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> Q) \\<turnstile>\n    - p \\<bullet> \\<phi>", "unfolding is_L_bisimulation_def"], ["proof (prove)\nusing this:\n  R (- p \\<bullet> F) (- p \\<bullet> P) (- p \\<bullet> Q)\n  - p \\<bullet> f \\<in>\\<^sub>f\\<^sub>s - p \\<bullet> F\n  \\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> P) \\<turnstile>\n  - p \\<bullet> \\<phi>\n  \\<forall>F.\n     symp (R F) \\<and>\n     (\\<forall>P Q.\n         R F P Q \\<longrightarrow>\n         (\\<forall>f.\n             f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n             (\\<forall>\\<phi>.\n                 \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n                 \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n     (\\<forall>P Q.\n         R F P Q \\<longrightarrow>\n         (\\<forall>f.\n             f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n             (\\<forall>\\<alpha> P'.\n                 bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n  f) \\<longrightarrow>\n                 \\<langle>f\\<rangle>P \\<rightarrow>\n                 \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                 (\\<exists>Q'.\n                     \\<langle>f\\<rangle>Q \\<rightarrow>\n                     \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                     R (L (\\<alpha>, F, f)) P' Q'))))\n\ngoal (1 subgoal):\n 1. \\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> Q) \\<turnstile>\n    - p \\<bullet> \\<phi>", "by auto"], ["proof (state)\nthis:\n  \\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> Q) \\<turnstile>\n  - p \\<bullet> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        \\<langle>f\\<rangle>P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>", "then"], ["proof (chain)\npicking this:\n  \\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> Q) \\<turnstile>\n  - p \\<bullet> \\<phi>", "show \"\\<langle>f\\<rangle>Q \\<turnstile> \\<phi>\""], ["proof (prove)\nusing this:\n  \\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> Q) \\<turnstile>\n  - p \\<bullet> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>", "by (metis (full_types) effect_apply_eqvt' permute_minus_cancel(1) satisfies_eqvt)"], ["proof (state)\nthis:\n  \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P Q.\n     (p \\<bullet> R) F P Q \\<longrightarrow>\n     (\\<forall>f.\n         f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n         (\\<forall>\\<phi>.\n             \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n             \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       symp ((p \\<bullet> R) F) \\<and>\n       (\\<forall>P Q.\n           (p \\<bullet> R) F P Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<phi>.\n                   \\<langle>f\\<rangle>P \\<turnstile>\n                   \\<phi> \\<longrightarrow>\n                   \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n       (\\<forall>P Q.\n           (p \\<bullet> R) F P Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<alpha> P'.\n                   bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n    f) \\<longrightarrow>\n                   \\<langle>f\\<rangle>P \\<rightarrow>\n                   \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                   (\\<exists>Q'.\n                       \\<langle>f\\<rangle>Q \\<rightarrow>\n                       \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                       (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'))))", "moreover"], ["proof (state)\nthis:\n  \\<forall>P Q.\n     (p \\<bullet> R) F P Q \\<longrightarrow>\n     (\\<forall>f.\n         f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n         (\\<forall>\\<phi>.\n             \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n             \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       symp ((p \\<bullet> R) F) \\<and>\n       (\\<forall>P Q.\n           (p \\<bullet> R) F P Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<phi>.\n                   \\<langle>f\\<rangle>P \\<turnstile>\n                   \\<phi> \\<longrightarrow>\n                   \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n       (\\<forall>P Q.\n           (p \\<bullet> R) F P Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<alpha> P'.\n                   bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n    f) \\<longrightarrow>\n                   \\<langle>f\\<rangle>P \\<rightarrow>\n                   \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                   (\\<exists>Q'.\n                       \\<langle>f\\<rangle>Q \\<rightarrow>\n                       \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                       (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'))))", "have \"\\<forall>P Q. (p \\<bullet> R) F P Q \\<longrightarrow> (\\<forall>f. f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow> (\\<forall>\\<alpha> P'. bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f) \\<longrightarrow>\n                                \\<langle>f\\<rangle>P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow> (\\<exists>Q'. \\<langle>f\\<rangle>Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and> (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q')))\" (is ?U)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P Q.\n       (p \\<bullet> R) F P Q \\<longrightarrow>\n       (\\<forall>f.\n           f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n           (\\<forall>\\<alpha> P'.\n               bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\nf) \\<longrightarrow>\n               \\<langle>f\\<rangle>P \\<rightarrow>\n               \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n               (\\<exists>Q'.\n                   \\<langle>f\\<rangle>Q \\<rightarrow>\n                   \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                   (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q')))", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'", "fix P Q f \\<alpha> P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'", "assume pR: \"(p \\<bullet> R) F P Q\" and effect: \"f \\<in>\\<^sub>f\\<^sub>s F\" and fresh: \"bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)\" and trans: \"\\<langle>f\\<rangle>P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\""], ["proof (state)\nthis:\n  (p \\<bullet> R) F P Q\n  f \\<in>\\<^sub>f\\<^sub>s F\n  bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)\n  \\<langle>f\\<rangle>P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'", "from pR"], ["proof (chain)\npicking this:\n  (p \\<bullet> R) F P Q", "have \"R (-p \\<bullet> F) (-p \\<bullet> P) (-p \\<bullet> Q)\""], ["proof (prove)\nusing this:\n  (p \\<bullet> R) F P Q\n\ngoal (1 subgoal):\n 1. R (- p \\<bullet> F) (- p \\<bullet> P) (- p \\<bullet> Q)", "by (simp add: eqvt_lambda permute_bool_def unpermute_def)"], ["proof (state)\nthis:\n  R (- p \\<bullet> F) (- p \\<bullet> P) (- p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'", "moreover"], ["proof (state)\nthis:\n  R (- p \\<bullet> F) (- p \\<bullet> P) (- p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'", "have \"(-p \\<bullet> f) \\<in>\\<^sub>f\\<^sub>s (-p \\<bullet> F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - p \\<bullet> f \\<in>\\<^sub>f\\<^sub>s - p \\<bullet> F", "using effect"], ["proof (prove)\nusing this:\n  f \\<in>\\<^sub>f\\<^sub>s F\n\ngoal (1 subgoal):\n 1. - p \\<bullet> f \\<in>\\<^sub>f\\<^sub>s - p \\<bullet> F", "by simp"], ["proof (state)\nthis:\n  - p \\<bullet> f \\<in>\\<^sub>f\\<^sub>s - p \\<bullet> F\n\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'", "moreover"], ["proof (state)\nthis:\n  - p \\<bullet> f \\<in>\\<^sub>f\\<^sub>s - p \\<bullet> F\n\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'", "have \"bn (-p \\<bullet> \\<alpha>) \\<sharp>* (\\<langle>-p \\<bullet> f\\<rangle>(-p \\<bullet> Q), -p \\<bullet> F, -p \\<bullet> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bn (- p \\<bullet> \\<alpha>) \\<sharp>* (\\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> Q),\n     - p \\<bullet> F, - p \\<bullet> f)", "using fresh"], ["proof (prove)\nusing this:\n  bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)\n\ngoal (1 subgoal):\n 1. bn (- p \\<bullet> \\<alpha>) \\<sharp>* (\\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> Q),\n     - p \\<bullet> F, - p \\<bullet> f)", "by (metis (full_types) effect_apply_eqvt' bn_eqvt fresh_star_Pair fresh_star_permute_iff)"], ["proof (state)\nthis:\n  bn (- p \\<bullet> \\<alpha>) \\<sharp>* (\\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> Q),\n   - p \\<bullet> F, - p \\<bullet> f)\n\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'", "moreover"], ["proof (state)\nthis:\n  bn (- p \\<bullet> \\<alpha>) \\<sharp>* (\\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> Q),\n   - p \\<bullet> F, - p \\<bullet> f)\n\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'", "have \"\\<langle>-p \\<bullet> f\\<rangle>(-p \\<bullet> P) \\<rightarrow> \\<langle>-p \\<bullet> \\<alpha>, -p \\<bullet> P'\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> P) \\<rightarrow>\n    \\<langle>- p \\<bullet> \\<alpha>,- p \\<bullet> P'\\<rangle>", "using trans"], ["proof (prove)\nusing this:\n  \\<langle>f\\<rangle>P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> P) \\<rightarrow>\n    \\<langle>- p \\<bullet> \\<alpha>,- p \\<bullet> P'\\<rangle>", "by (metis effect_apply_eqvt' transition_eqvt')"], ["proof (state)\nthis:\n  \\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> P) \\<rightarrow>\n  \\<langle>- p \\<bullet> \\<alpha>,- p \\<bullet> P'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'", "ultimately"], ["proof (chain)\npicking this:\n  R (- p \\<bullet> F) (- p \\<bullet> P) (- p \\<bullet> Q)\n  - p \\<bullet> f \\<in>\\<^sub>f\\<^sub>s - p \\<bullet> F\n  bn (- p \\<bullet> \\<alpha>) \\<sharp>* (\\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> Q),\n   - p \\<bullet> F, - p \\<bullet> f)\n  \\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> P) \\<rightarrow>\n  \\<langle>- p \\<bullet> \\<alpha>,- p \\<bullet> P'\\<rangle>", "obtain Q' where T: \"\\<langle>-p \\<bullet> f\\<rangle>(-p \\<bullet> Q) \\<rightarrow> \\<langle>-p \\<bullet> \\<alpha>,Q'\\<rangle>\" and R: \"R (L (-p \\<bullet> \\<alpha>, -p \\<bullet> F, -p \\<bullet> f)) (-p \\<bullet> P') Q'\""], ["proof (prove)\nusing this:\n  R (- p \\<bullet> F) (- p \\<bullet> P) (- p \\<bullet> Q)\n  - p \\<bullet> f \\<in>\\<^sub>f\\<^sub>s - p \\<bullet> F\n  bn (- p \\<bullet> \\<alpha>) \\<sharp>* (\\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> Q),\n   - p \\<bullet> F, - p \\<bullet> f)\n  \\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> P) \\<rightarrow>\n  \\<langle>- p \\<bullet> \\<alpha>,- p \\<bullet> P'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>\\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> Q) \\<rightarrow>\n                 \\<langle>- p \\<bullet> \\<alpha>,Q'\\<rangle>;\n         R (L (- p \\<bullet> \\<alpha>, - p \\<bullet> F, - p \\<bullet> f))\n          (- p \\<bullet> P') Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  R (- p \\<bullet> F) (- p \\<bullet> P) (- p \\<bullet> Q)\n  - p \\<bullet> f \\<in>\\<^sub>f\\<^sub>s - p \\<bullet> F\n  bn (- p \\<bullet> \\<alpha>) \\<sharp>* (\\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> Q),\n   - p \\<bullet> F, - p \\<bullet> f)\n  \\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> P) \\<rightarrow>\n  \\<langle>- p \\<bullet> \\<alpha>,- p \\<bullet> P'\\<rangle>\n  is_L_bisimulation R\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>\\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> Q) \\<rightarrow>\n                 \\<langle>- p \\<bullet> \\<alpha>,Q'\\<rangle>;\n         R (L (- p \\<bullet> \\<alpha>, - p \\<bullet> F, - p \\<bullet> f))\n          (- p \\<bullet> P') Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding is_L_bisimulation_def"], ["proof (prove)\nusing this:\n  R (- p \\<bullet> F) (- p \\<bullet> P) (- p \\<bullet> Q)\n  - p \\<bullet> f \\<in>\\<^sub>f\\<^sub>s - p \\<bullet> F\n  bn (- p \\<bullet> \\<alpha>) \\<sharp>* (\\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> Q),\n   - p \\<bullet> F, - p \\<bullet> f)\n  \\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> P) \\<rightarrow>\n  \\<langle>- p \\<bullet> \\<alpha>,- p \\<bullet> P'\\<rangle>\n  \\<forall>F.\n     symp (R F) \\<and>\n     (\\<forall>P Q.\n         R F P Q \\<longrightarrow>\n         (\\<forall>f.\n             f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n             (\\<forall>\\<phi>.\n                 \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n                 \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n     (\\<forall>P Q.\n         R F P Q \\<longrightarrow>\n         (\\<forall>f.\n             f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n             (\\<forall>\\<alpha> P'.\n                 bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n  f) \\<longrightarrow>\n                 \\<langle>f\\<rangle>P \\<rightarrow>\n                 \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                 (\\<exists>Q'.\n                     \\<langle>f\\<rangle>Q \\<rightarrow>\n                     \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                     R (L (\\<alpha>, F, f)) P' Q'))))\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>\\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> Q) \\<rightarrow>\n                 \\<langle>- p \\<bullet> \\<alpha>,Q'\\<rangle>;\n         R (L (- p \\<bullet> \\<alpha>, - p \\<bullet> F, - p \\<bullet> f))\n          (- p \\<bullet> P') Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by meson"], ["proof (state)\nthis:\n  \\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> Q) \\<rightarrow>\n  \\<langle>- p \\<bullet> \\<alpha>,Q'\\<rangle>\n  R (L (- p \\<bullet> \\<alpha>, - p \\<bullet> F, - p \\<bullet> f))\n   (- p \\<bullet> P') Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'", "from T"], ["proof (chain)\npicking this:\n  \\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> Q) \\<rightarrow>\n  \\<langle>- p \\<bullet> \\<alpha>,Q'\\<rangle>", "have \"\\<langle>f\\<rangle>Q \\<rightarrow> \\<langle>\\<alpha>, p \\<bullet> Q'\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>- p \\<bullet> f\\<rangle>(- p \\<bullet> Q) \\<rightarrow>\n  \\<langle>- p \\<bullet> \\<alpha>,Q'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<langle>f\\<rangle>Q \\<rightarrow>\n    \\<langle>\\<alpha>,p \\<bullet> Q'\\<rangle>", "by (metis (no_types, lifting) effect_apply_eqvt' abs_residual_pair_eqvt permute_minus_cancel(1) transition_eqvt)"], ["proof (state)\nthis:\n  \\<langle>f\\<rangle>Q \\<rightarrow>\n  \\<langle>\\<alpha>,p \\<bullet> Q'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'", "moreover"], ["proof (state)\nthis:\n  \\<langle>f\\<rangle>Q \\<rightarrow>\n  \\<langle>\\<alpha>,p \\<bullet> Q'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'", "from R"], ["proof (chain)\npicking this:\n  R (L (- p \\<bullet> \\<alpha>, - p \\<bullet> F, - p \\<bullet> f))\n   (- p \\<bullet> P') Q'", "have \"(p \\<bullet> R) (p \\<bullet> L (-p \\<bullet> \\<alpha>, -p \\<bullet> F, -p \\<bullet> f)) (p \\<bullet> -p \\<bullet> P') (p \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  R (L (- p \\<bullet> \\<alpha>, - p \\<bullet> F, - p \\<bullet> f))\n   (- p \\<bullet> P') Q'\n\ngoal (1 subgoal):\n 1. (p \\<bullet> R)\n     (p \\<bullet> L (- p \\<bullet> \\<alpha>, - p \\<bullet> F,\n                     - p \\<bullet> f))\n     (p \\<bullet> - p \\<bullet> P') (p \\<bullet> Q')", "by (metis permute_boolI permute_fun_def permute_minus_cancel(2))"], ["proof (state)\nthis:\n  (p \\<bullet> R)\n   (p \\<bullet> L (- p \\<bullet> \\<alpha>, - p \\<bullet> F,\n                   - p \\<bullet> f))\n   (p \\<bullet> - p \\<bullet> P') (p \\<bullet> Q')\n\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'", "then"], ["proof (chain)\npicking this:\n  (p \\<bullet> R)\n   (p \\<bullet> L (- p \\<bullet> \\<alpha>, - p \\<bullet> F,\n                   - p \\<bullet> f))\n   (p \\<bullet> - p \\<bullet> P') (p \\<bullet> Q')", "have \"(p \\<bullet> R) (L (\\<alpha>,F,f)) P' (p \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  (p \\<bullet> R)\n   (p \\<bullet> L (- p \\<bullet> \\<alpha>, - p \\<bullet> F,\n                   - p \\<bullet> f))\n   (p \\<bullet> - p \\<bullet> P') (p \\<bullet> Q')\n\ngoal (1 subgoal):\n 1. (p \\<bullet> R) (L (\\<alpha>, F, f)) P' (p \\<bullet> Q')", "by (simp add: permute_self)"], ["proof (state)\nthis:\n  (p \\<bullet> R) (L (\\<alpha>, F, f)) P' (p \\<bullet> Q')\n\ngoal (1 subgoal):\n 1. \\<And>P Q f \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) F P Q; f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>f\\<rangle>Q \\<rightarrow>\n  \\<langle>\\<alpha>,p \\<bullet> Q'\\<rangle>\n  (p \\<bullet> R) (L (\\<alpha>, F, f)) P' (p \\<bullet> Q')", "show \"\\<exists>Q'. \\<langle>f\\<rangle>Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and> (p \\<bullet> R) (L (\\<alpha>,F,f)) P' Q'\""], ["proof (prove)\nusing this:\n  \\<langle>f\\<rangle>Q \\<rightarrow>\n  \\<langle>\\<alpha>,p \\<bullet> Q'\\<rangle>\n  (p \\<bullet> R) (L (\\<alpha>, F, f)) P' (p \\<bullet> Q')\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       \\<langle>f\\<rangle>Q \\<rightarrow>\n       \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n       (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'", "by metis"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     \\<langle>f\\<rangle>Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n     (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P Q.\n     (p \\<bullet> R) F P Q \\<longrightarrow>\n     (\\<forall>f.\n         f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n         (\\<forall>\\<alpha> P'.\n             bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n                                    f) \\<longrightarrow>\n             \\<langle>f\\<rangle>P \\<rightarrow>\n             \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n             (\\<exists>Q'.\n                 \\<langle>f\\<rangle>Q \\<rightarrow>\n                 \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                 (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q')))\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       symp ((p \\<bullet> R) F) \\<and>\n       (\\<forall>P Q.\n           (p \\<bullet> R) F P Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<phi>.\n                   \\<langle>f\\<rangle>P \\<turnstile>\n                   \\<phi> \\<longrightarrow>\n                   \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n       (\\<forall>P Q.\n           (p \\<bullet> R) F P Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<alpha> P'.\n                   bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n    f) \\<longrightarrow>\n                   \\<langle>f\\<rangle>P \\<rightarrow>\n                   \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                   (\\<exists>Q'.\n                       \\<langle>f\\<rangle>Q \\<rightarrow>\n                       \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                       (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'))))", "ultimately"], ["proof (chain)\npicking this:\n  symp ((p \\<bullet> R) F)\n  \\<forall>P Q.\n     (p \\<bullet> R) F P Q \\<longrightarrow>\n     (\\<forall>f.\n         f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n         (\\<forall>\\<phi>.\n             \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n             \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))\n  \\<forall>P Q.\n     (p \\<bullet> R) F P Q \\<longrightarrow>\n     (\\<forall>f.\n         f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n         (\\<forall>\\<alpha> P'.\n             bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n                                    f) \\<longrightarrow>\n             \\<langle>f\\<rangle>P \\<rightarrow>\n             \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n             (\\<exists>Q'.\n                 \\<langle>f\\<rangle>Q \\<rightarrow>\n                 \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                 (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q')))", "show \"?S \\<and> ?T \\<and> ?U\""], ["proof (prove)\nusing this:\n  symp ((p \\<bullet> R) F)\n  \\<forall>P Q.\n     (p \\<bullet> R) F P Q \\<longrightarrow>\n     (\\<forall>f.\n         f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n         (\\<forall>\\<phi>.\n             \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n             \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))\n  \\<forall>P Q.\n     (p \\<bullet> R) F P Q \\<longrightarrow>\n     (\\<forall>f.\n         f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n         (\\<forall>\\<alpha> P'.\n             bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n                                    f) \\<longrightarrow>\n             \\<langle>f\\<rangle>P \\<rightarrow>\n             \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n             (\\<exists>Q'.\n                 \\<langle>f\\<rangle>Q \\<rightarrow>\n                 \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                 (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q')))\n\ngoal (1 subgoal):\n 1. symp ((p \\<bullet> R) F) \\<and>\n    (\\<forall>P Q.\n        (p \\<bullet> R) F P Q \\<longrightarrow>\n        (\\<forall>f.\n            f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n            (\\<forall>\\<phi>.\n                \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n                \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n    (\\<forall>P Q.\n        (p \\<bullet> R) F P Q \\<longrightarrow>\n        (\\<forall>f.\n            f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n            (\\<forall>\\<alpha> P'.\n                bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n f) \\<longrightarrow>\n                \\<langle>f\\<rangle>P \\<rightarrow>\n                \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                (\\<exists>Q'.\n                    \\<langle>f\\<rangle>Q \\<rightarrow>\n                    \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                    (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'))))", "by simp"], ["proof (state)\nthis:\n  symp ((p \\<bullet> R) F) \\<and>\n  (\\<forall>P Q.\n      (p \\<bullet> R) F P Q \\<longrightarrow>\n      (\\<forall>f.\n          f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n          (\\<forall>\\<phi>.\n              \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n              \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n  (\\<forall>P Q.\n      (p \\<bullet> R) F P Q \\<longrightarrow>\n      (\\<forall>f.\n          f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n          (\\<forall>\\<alpha> P'.\n              bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n                                     f) \\<longrightarrow>\n              \\<langle>f\\<rangle>P \\<rightarrow>\n              \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n              (\\<exists>Q'.\n                  \\<langle>f\\<rangle>Q \\<rightarrow>\n                  \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                  (p \\<bullet> R) (L (\\<alpha>, F, f)) P' Q'))))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma FL_bisimilar_eqvt:\n    assumes \"P \\<sim>\\<cdot>[F] Q\" shows \"(p \\<bullet> P) \\<sim>\\<cdot>[p \\<bullet> F] (p \\<bullet> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<sim>\\<cdot>[p \\<bullet> F] p \\<bullet> Q", "using assms"], ["proof (prove)\nusing this:\n  P \\<sim>\\<cdot>[F] Q\n\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<sim>\\<cdot>[p \\<bullet> F] p \\<bullet> Q", "by (metis eqvt_apply permute_boolI is_L_bisimulation_eqvt FL_bisimilar_def)"], ["", "lemma FL_bisimilar_reflp: \"reflp (FL_bisimilar F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reflp (FL_bisimilar F)", "proof (rule reflpI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<sim>\\<cdot>[F] x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<sim>\\<cdot>[F] x", "have \"is_L_bisimulation (\\<lambda>_. (=))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_L_bisimulation (\\<lambda>_. (=))", "unfolding is_L_bisimulation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>F.\n       symp (=) \\<and>\n       (\\<forall>P Q.\n           P = Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<phi>.\n                   \\<langle>f\\<rangle>P \\<turnstile>\n                   \\<phi> \\<longrightarrow>\n                   \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n       (\\<forall>P Q.\n           P = Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<alpha> P'.\n                   bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n    f) \\<longrightarrow>\n                   \\<langle>f\\<rangle>P \\<rightarrow>\n                   \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                   (\\<exists>Q'.\n                       \\<langle>f\\<rangle>Q \\<rightarrow>\n                       \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                       P' = Q'))))", "by (simp add: symp_def)"], ["proof (state)\nthis:\n  is_L_bisimulation (\\<lambda>_. (=))\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<sim>\\<cdot>[F] x", "then"], ["proof (chain)\npicking this:\n  is_L_bisimulation (\\<lambda>_. (=))", "show \"x \\<sim>\\<cdot>[F] x\""], ["proof (prove)\nusing this:\n  is_L_bisimulation (\\<lambda>_. (=))\n\ngoal (1 subgoal):\n 1. x \\<sim>\\<cdot>[F] x", "unfolding FL_bisimilar_def"], ["proof (prove)\nusing this:\n  is_L_bisimulation (\\<lambda>_. (=))\n\ngoal (1 subgoal):\n 1. \\<exists>R. is_L_bisimulation R \\<and> R F x x", "by auto"], ["proof (state)\nthis:\n  x \\<sim>\\<cdot>[F] x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma FL_bisimilar_symp: \"symp (FL_bisimilar F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symp (FL_bisimilar F)", "proof (rule sympI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<sim>\\<cdot>[F] b \\<Longrightarrow> b \\<sim>\\<cdot>[F] a", "fix P Q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<sim>\\<cdot>[F] b \\<Longrightarrow> b \\<sim>\\<cdot>[F] a", "assume \"P \\<sim>\\<cdot>[F] Q\""], ["proof (state)\nthis:\n  P \\<sim>\\<cdot>[F] Q\n\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<sim>\\<cdot>[F] b \\<Longrightarrow> b \\<sim>\\<cdot>[F] a", "then"], ["proof (chain)\npicking this:\n  P \\<sim>\\<cdot>[F] Q", "obtain R where *: \"is_L_bisimulation R \\<and> R F P Q\""], ["proof (prove)\nusing this:\n  P \\<sim>\\<cdot>[F] Q\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        is_L_bisimulation R \\<and> R F P Q \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding FL_bisimilar_def"], ["proof (prove)\nusing this:\n  \\<exists>R. is_L_bisimulation R \\<and> R F P Q\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        is_L_bisimulation R \\<and> R F P Q \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  is_L_bisimulation R \\<and> R F P Q\n\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<sim>\\<cdot>[F] b \\<Longrightarrow> b \\<sim>\\<cdot>[F] a", "then"], ["proof (chain)\npicking this:\n  is_L_bisimulation R \\<and> R F P Q", "have \"R F Q P\""], ["proof (prove)\nusing this:\n  is_L_bisimulation R \\<and> R F P Q\n\ngoal (1 subgoal):\n 1. R F Q P", "unfolding is_L_bisimulation_def"], ["proof (prove)\nusing this:\n  (\\<forall>F.\n      symp (R F) \\<and>\n      (\\<forall>P Q.\n          R F P Q \\<longrightarrow>\n          (\\<forall>f.\n              f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n              (\\<forall>\\<phi>.\n                  \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n                  \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n      (\\<forall>P Q.\n          R F P Q \\<longrightarrow>\n          (\\<forall>f.\n              f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n              (\\<forall>\\<alpha> P'.\n                  bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n   f) \\<longrightarrow>\n                  \\<langle>f\\<rangle>P \\<rightarrow>\n                  \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                  (\\<exists>Q'.\n                      \\<langle>f\\<rangle>Q \\<rightarrow>\n                      \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                      R (L (\\<alpha>, F, f)) P' Q'))))) \\<and>\n  R F P Q\n\ngoal (1 subgoal):\n 1. R F Q P", "by (simp add: symp_def)"], ["proof (state)\nthis:\n  R F Q P\n\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<sim>\\<cdot>[F] b \\<Longrightarrow> b \\<sim>\\<cdot>[F] a", "with \"*\""], ["proof (chain)\npicking this:\n  is_L_bisimulation R \\<and> R F P Q\n  R F Q P", "show \"Q \\<sim>\\<cdot>[F] P\""], ["proof (prove)\nusing this:\n  is_L_bisimulation R \\<and> R F P Q\n  R F Q P\n\ngoal (1 subgoal):\n 1. Q \\<sim>\\<cdot>[F] P", "unfolding FL_bisimilar_def"], ["proof (prove)\nusing this:\n  is_L_bisimulation R \\<and> R F P Q\n  R F Q P\n\ngoal (1 subgoal):\n 1. \\<exists>R. is_L_bisimulation R \\<and> R F Q P", "by auto"], ["proof (state)\nthis:\n  Q \\<sim>\\<cdot>[F] P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma FL_bisimilar_is_L_bisimulation: \"is_L_bisimulation FL_bisimilar\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_L_bisimulation FL_bisimilar", "unfolding is_L_bisimulation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>F.\n       symp (FL_bisimilar F) \\<and>\n       (\\<forall>P Q.\n           P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<phi>.\n                   \\<langle>f\\<rangle>P \\<turnstile>\n                   \\<phi> \\<longrightarrow>\n                   \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n       (\\<forall>P Q.\n           P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<alpha> P'.\n                   bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n    f) \\<longrightarrow>\n                   \\<langle>f\\<rangle>P \\<rightarrow>\n                   \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                   (\\<exists>Q'.\n                       \\<langle>f\\<rangle>Q \\<rightarrow>\n                       \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                       P' \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q'))))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F.\n       symp (FL_bisimilar F) \\<and>\n       (\\<forall>P Q.\n           P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<phi>.\n                   \\<langle>f\\<rangle>P \\<turnstile>\n                   \\<phi> \\<longrightarrow>\n                   \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n       (\\<forall>P Q.\n           P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<alpha> P'.\n                   bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n    f) \\<longrightarrow>\n                   \\<langle>f\\<rangle>P \\<rightarrow>\n                   \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                   (\\<exists>Q'.\n                       \\<langle>f\\<rangle>Q \\<rightarrow>\n                       \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                       P' \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q'))))", "fix F"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F.\n       symp (FL_bisimilar F) \\<and>\n       (\\<forall>P Q.\n           P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<phi>.\n                   \\<langle>f\\<rangle>P \\<turnstile>\n                   \\<phi> \\<longrightarrow>\n                   \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n       (\\<forall>P Q.\n           P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<alpha> P'.\n                   bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n    f) \\<longrightarrow>\n                   \\<langle>f\\<rangle>P \\<rightarrow>\n                   \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                   (\\<exists>Q'.\n                       \\<langle>f\\<rangle>Q \\<rightarrow>\n                       \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                       P' \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q'))))", "have \"symp (FL_bisimilar F)\" (is ?R)"], ["proof (prove)\ngoal (1 subgoal):\n 1. symp (FL_bisimilar F)", "by (fact FL_bisimilar_symp)"], ["proof (state)\nthis:\n  symp (FL_bisimilar F)\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       symp (FL_bisimilar F) \\<and>\n       (\\<forall>P Q.\n           P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<phi>.\n                   \\<langle>f\\<rangle>P \\<turnstile>\n                   \\<phi> \\<longrightarrow>\n                   \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n       (\\<forall>P Q.\n           P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<alpha> P'.\n                   bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n    f) \\<longrightarrow>\n                   \\<langle>f\\<rangle>P \\<rightarrow>\n                   \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                   (\\<exists>Q'.\n                       \\<langle>f\\<rangle>Q \\<rightarrow>\n                       \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                       P' \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q'))))", "moreover"], ["proof (state)\nthis:\n  symp (FL_bisimilar F)\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       symp (FL_bisimilar F) \\<and>\n       (\\<forall>P Q.\n           P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<phi>.\n                   \\<langle>f\\<rangle>P \\<turnstile>\n                   \\<phi> \\<longrightarrow>\n                   \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n       (\\<forall>P Q.\n           P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<alpha> P'.\n                   bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n    f) \\<longrightarrow>\n                   \\<langle>f\\<rangle>P \\<rightarrow>\n                   \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                   (\\<exists>Q'.\n                       \\<langle>f\\<rangle>Q \\<rightarrow>\n                       \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                       P' \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q'))))", "have \"\\<forall>P Q. P \\<sim>\\<cdot>[F] Q \\<longrightarrow> (\\<forall>f. f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow> (\\<forall>\\<phi>. \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow> \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))\" (is ?S)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P Q.\n       P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n       (\\<forall>f.\n           f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n           (\\<forall>\\<phi>.\n               \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n               \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))", "by (auto simp add: is_L_bisimulation_def FL_bisimilar_def)"], ["proof (state)\nthis:\n  \\<forall>P Q.\n     P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n     (\\<forall>f.\n         f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n         (\\<forall>\\<phi>.\n             \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n             \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       symp (FL_bisimilar F) \\<and>\n       (\\<forall>P Q.\n           P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<phi>.\n                   \\<langle>f\\<rangle>P \\<turnstile>\n                   \\<phi> \\<longrightarrow>\n                   \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n       (\\<forall>P Q.\n           P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<alpha> P'.\n                   bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n    f) \\<longrightarrow>\n                   \\<langle>f\\<rangle>P \\<rightarrow>\n                   \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                   (\\<exists>Q'.\n                       \\<langle>f\\<rangle>Q \\<rightarrow>\n                       \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                       P' \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q'))))", "moreover"], ["proof (state)\nthis:\n  \\<forall>P Q.\n     P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n     (\\<forall>f.\n         f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n         (\\<forall>\\<phi>.\n             \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n             \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       symp (FL_bisimilar F) \\<and>\n       (\\<forall>P Q.\n           P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<phi>.\n                   \\<langle>f\\<rangle>P \\<turnstile>\n                   \\<phi> \\<longrightarrow>\n                   \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n       (\\<forall>P Q.\n           P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<alpha> P'.\n                   bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n    f) \\<longrightarrow>\n                   \\<langle>f\\<rangle>P \\<rightarrow>\n                   \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                   (\\<exists>Q'.\n                       \\<langle>f\\<rangle>Q \\<rightarrow>\n                       \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                       P' \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q'))))", "have \"\\<forall>P Q. P \\<sim>\\<cdot>[F] Q \\<longrightarrow> (\\<forall>f. f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow> (\\<forall>\\<alpha> P'. bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f) \\<longrightarrow>\n          \\<langle>f\\<rangle>P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow> (\\<exists>Q'. \\<langle>f\\<rangle>Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and> P' \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q')))\" (is ?T)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P Q.\n       P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n       (\\<forall>f.\n           f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n           (\\<forall>\\<alpha> P'.\n               bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\nf) \\<longrightarrow>\n               \\<langle>f\\<rangle>P \\<rightarrow>\n               \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n               (\\<exists>Q'.\n                   \\<langle>f\\<rangle>Q \\<rightarrow>\n                   \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                   P' \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q')))", "by (auto simp add: is_L_bisimulation_def FL_bisimilar_def) blast"], ["proof (state)\nthis:\n  \\<forall>P Q.\n     P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n     (\\<forall>f.\n         f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n         (\\<forall>\\<alpha> P'.\n             bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n                                    f) \\<longrightarrow>\n             \\<langle>f\\<rangle>P \\<rightarrow>\n             \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n             (\\<exists>Q'.\n                 \\<langle>f\\<rangle>Q \\<rightarrow>\n                 \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                 P' \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q')))\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       symp (FL_bisimilar F) \\<and>\n       (\\<forall>P Q.\n           P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<phi>.\n                   \\<langle>f\\<rangle>P \\<turnstile>\n                   \\<phi> \\<longrightarrow>\n                   \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n       (\\<forall>P Q.\n           P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<alpha> P'.\n                   bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n    f) \\<longrightarrow>\n                   \\<langle>f\\<rangle>P \\<rightarrow>\n                   \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                   (\\<exists>Q'.\n                       \\<langle>f\\<rangle>Q \\<rightarrow>\n                       \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                       P' \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q'))))", "ultimately"], ["proof (chain)\npicking this:\n  symp (FL_bisimilar F)\n  \\<forall>P Q.\n     P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n     (\\<forall>f.\n         f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n         (\\<forall>\\<phi>.\n             \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n             \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))\n  \\<forall>P Q.\n     P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n     (\\<forall>f.\n         f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n         (\\<forall>\\<alpha> P'.\n             bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n                                    f) \\<longrightarrow>\n             \\<langle>f\\<rangle>P \\<rightarrow>\n             \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n             (\\<exists>Q'.\n                 \\<langle>f\\<rangle>Q \\<rightarrow>\n                 \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                 P' \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q')))", "show \"?R \\<and> ?S \\<and> ?T\""], ["proof (prove)\nusing this:\n  symp (FL_bisimilar F)\n  \\<forall>P Q.\n     P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n     (\\<forall>f.\n         f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n         (\\<forall>\\<phi>.\n             \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n             \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))\n  \\<forall>P Q.\n     P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n     (\\<forall>f.\n         f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n         (\\<forall>\\<alpha> P'.\n             bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n                                    f) \\<longrightarrow>\n             \\<langle>f\\<rangle>P \\<rightarrow>\n             \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n             (\\<exists>Q'.\n                 \\<langle>f\\<rangle>Q \\<rightarrow>\n                 \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                 P' \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q')))\n\ngoal (1 subgoal):\n 1. symp (FL_bisimilar F) \\<and>\n    (\\<forall>P Q.\n        P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n        (\\<forall>f.\n            f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n            (\\<forall>\\<phi>.\n                \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n                \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n    (\\<forall>P Q.\n        P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n        (\\<forall>f.\n            f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n            (\\<forall>\\<alpha> P'.\n                bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n f) \\<longrightarrow>\n                \\<langle>f\\<rangle>P \\<rightarrow>\n                \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                (\\<exists>Q'.\n                    \\<langle>f\\<rangle>Q \\<rightarrow>\n                    \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                    P' \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q'))))", "by metis"], ["proof (state)\nthis:\n  symp (FL_bisimilar F) \\<and>\n  (\\<forall>P Q.\n      P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n      (\\<forall>f.\n          f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n          (\\<forall>\\<phi>.\n              \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n              \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n  (\\<forall>P Q.\n      P \\<sim>\\<cdot>[F] Q \\<longrightarrow>\n      (\\<forall>f.\n          f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n          (\\<forall>\\<alpha> P'.\n              bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n                                     f) \\<longrightarrow>\n              \\<langle>f\\<rangle>P \\<rightarrow>\n              \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n              (\\<exists>Q'.\n                  \\<langle>f\\<rangle>Q \\<rightarrow>\n                  \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                  P' \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q'))))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma FL_bisimilar_simulation_step:\n    assumes \"P \\<sim>\\<cdot>[F] Q\" and \"f \\<in>\\<^sub>f\\<^sub>s F\" and \"bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)\" and \"\\<langle>f\\<rangle>P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\"\n    obtains Q' where \"\\<langle>f\\<rangle>Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle>\" and \"P' \\<sim>\\<cdot>[L (\\<alpha>,F,f)] Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>\\<langle>f\\<rangle>Q \\<rightarrow>\n                 \\<langle>\\<alpha>,Q'\\<rangle>;\n         P' \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  P \\<sim>\\<cdot>[F] Q\n  f \\<in>\\<^sub>f\\<^sub>s F\n  bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)\n  \\<langle>f\\<rangle>P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>\\<langle>f\\<rangle>Q \\<rightarrow>\n                 \\<langle>\\<alpha>,Q'\\<rangle>;\n         P' \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (poly_guards_query) FL_bisimilar_is_L_bisimulation is_L_bisimulation_def)"], ["", "lemma FL_bisimilar_transp: \"transp (FL_bisimilar F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transp (FL_bisimilar F)", "proof (rule transpI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot>[F] y; y \\<sim>\\<cdot>[F] z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot>[F] z", "fix P Q R"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot>[F] y; y \\<sim>\\<cdot>[F] z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot>[F] z", "assume PQ: \"P \\<sim>\\<cdot>[F] Q\" and QR: \"Q \\<sim>\\<cdot>[F] R\""], ["proof (state)\nthis:\n  P \\<sim>\\<cdot>[F] Q\n  Q \\<sim>\\<cdot>[F] R\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot>[F] y; y \\<sim>\\<cdot>[F] z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot>[F] z", "let ?FL_bisim = \"\\<lambda>F. (FL_bisimilar F) OO (FL_bisimilar F)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot>[F] y; y \\<sim>\\<cdot>[F] z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot>[F] z", "have \"\\<And>F. symp (?FL_bisim F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>F. symp (FL_bisimilar F OO FL_bisimilar F)", "proof (rule sympI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F a b.\n       (FL_bisimilar F OO FL_bisimilar F) a b \\<Longrightarrow>\n       (FL_bisimilar F OO FL_bisimilar F) b a", "fix F P R"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F a b.\n       (FL_bisimilar F OO FL_bisimilar F) a b \\<Longrightarrow>\n       (FL_bisimilar F OO FL_bisimilar F) b a", "assume \"?FL_bisim F P R\""], ["proof (state)\nthis:\n  (FL_bisimilar F OO FL_bisimilar F) P R\n\ngoal (1 subgoal):\n 1. \\<And>F a b.\n       (FL_bisimilar F OO FL_bisimilar F) a b \\<Longrightarrow>\n       (FL_bisimilar F OO FL_bisimilar F) b a", "then"], ["proof (chain)\npicking this:\n  (FL_bisimilar F OO FL_bisimilar F) P R", "obtain Q where \"P \\<sim>\\<cdot>[F] Q\" and \"Q \\<sim>\\<cdot>[F] R\""], ["proof (prove)\nusing this:\n  (FL_bisimilar F OO FL_bisimilar F) P R\n\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        \\<lbrakk>P \\<sim>\\<cdot>[F] Q; Q \\<sim>\\<cdot>[F] R\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<sim>\\<cdot>[F] Q\n  Q \\<sim>\\<cdot>[F] R\n\ngoal (1 subgoal):\n 1. \\<And>F a b.\n       (FL_bisimilar F OO FL_bisimilar F) a b \\<Longrightarrow>\n       (FL_bisimilar F OO FL_bisimilar F) b a", "then"], ["proof (chain)\npicking this:\n  P \\<sim>\\<cdot>[F] Q\n  Q \\<sim>\\<cdot>[F] R", "have \"R \\<sim>\\<cdot>[F] Q\" and \"Q \\<sim>\\<cdot>[F] P\""], ["proof (prove)\nusing this:\n  P \\<sim>\\<cdot>[F] Q\n  Q \\<sim>\\<cdot>[F] R\n\ngoal (1 subgoal):\n 1. R \\<sim>\\<cdot>[F] Q &&& Q \\<sim>\\<cdot>[F] P", "by (metis FL_bisimilar_symp sympE)+"], ["proof (state)\nthis:\n  R \\<sim>\\<cdot>[F] Q\n  Q \\<sim>\\<cdot>[F] P\n\ngoal (1 subgoal):\n 1. \\<And>F a b.\n       (FL_bisimilar F OO FL_bisimilar F) a b \\<Longrightarrow>\n       (FL_bisimilar F OO FL_bisimilar F) b a", "then"], ["proof (chain)\npicking this:\n  R \\<sim>\\<cdot>[F] Q\n  Q \\<sim>\\<cdot>[F] P", "show \"?FL_bisim F R P\""], ["proof (prove)\nusing this:\n  R \\<sim>\\<cdot>[F] Q\n  Q \\<sim>\\<cdot>[F] P\n\ngoal (1 subgoal):\n 1. (FL_bisimilar F OO FL_bisimilar F) R P", "by blast"], ["proof (state)\nthis:\n  (FL_bisimilar F OO FL_bisimilar F) R P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  symp (FL_bisimilar ?F OO FL_bisimilar ?F)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot>[F] y; y \\<sim>\\<cdot>[F] z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot>[F] z", "moreover"], ["proof (state)\nthis:\n  symp (FL_bisimilar ?F OO FL_bisimilar ?F)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot>[F] y; y \\<sim>\\<cdot>[F] z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot>[F] z", "have \"\\<And>F. \\<forall>P Q. ?FL_bisim F P Q \\<longrightarrow> (\\<forall>f. f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow> (\\<forall>\\<phi>. \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow> \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<forall>P Q.\n          (FL_bisimilar F OO FL_bisimilar F) P Q \\<longrightarrow>\n          (\\<forall>f.\n              f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n              (\\<forall>\\<phi>.\n                  \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n                  \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))", "using FL_bisimilar_is_L_bisimulation is_L_bisimulation_def"], ["proof (prove)\nusing this:\n  is_L_bisimulation FL_bisimilar\n  is_L_bisimulation ?R \\<equiv>\n  \\<forall>F.\n     symp (?R F) \\<and>\n     (\\<forall>P Q.\n         ?R F P Q \\<longrightarrow>\n         (\\<forall>f.\n             f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n             (\\<forall>\\<phi>.\n                 \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n                 \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n     (\\<forall>P Q.\n         ?R F P Q \\<longrightarrow>\n         (\\<forall>f.\n             f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n             (\\<forall>\\<alpha> P'.\n                 bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n  f) \\<longrightarrow>\n                 \\<langle>f\\<rangle>P \\<rightarrow>\n                 \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                 (\\<exists>Q'.\n                     \\<langle>f\\<rangle>Q \\<rightarrow>\n                     \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                     ?R (L (\\<alpha>, F, f)) P' Q'))))\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<forall>P Q.\n          (FL_bisimilar F OO FL_bisimilar F) P Q \\<longrightarrow>\n          (\\<forall>f.\n              f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n              (\\<forall>\\<phi>.\n                  \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n                  \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))", "by auto"], ["proof (state)\nthis:\n  \\<forall>P Q.\n     (FL_bisimilar ?F OO FL_bisimilar ?F) P Q \\<longrightarrow>\n     (\\<forall>f.\n         f \\<in>\\<^sub>f\\<^sub>s ?F \\<longrightarrow>\n         (\\<forall>\\<phi>.\n             \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n             \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot>[F] y; y \\<sim>\\<cdot>[F] z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot>[F] z", "moreover"], ["proof (state)\nthis:\n  \\<forall>P Q.\n     (FL_bisimilar ?F OO FL_bisimilar ?F) P Q \\<longrightarrow>\n     (\\<forall>f.\n         f \\<in>\\<^sub>f\\<^sub>s ?F \\<longrightarrow>\n         (\\<forall>\\<phi>.\n             \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n             \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot>[F] y; y \\<sim>\\<cdot>[F] z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot>[F] z", "have \"\\<And>F. \\<forall>P Q. ?FL_bisim F P Q \\<longrightarrow>\n           (\\<forall>f. f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow> (\\<forall>\\<alpha> P'. bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f) \\<longrightarrow>\n                     \\<langle>f\\<rangle>P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow> (\\<exists>Q'. \\<langle>f\\<rangle>Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and> ?FL_bisim (L (\\<alpha>,F,f)) P' Q')))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<forall>P Q.\n          (FL_bisimilar F OO FL_bisimilar F) P Q \\<longrightarrow>\n          (\\<forall>f.\n              f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n              (\\<forall>\\<alpha> P'.\n                  bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n   f) \\<longrightarrow>\n                  \\<langle>f\\<rangle>P \\<rightarrow>\n                  \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                  (\\<exists>Q'.\n                      \\<langle>f\\<rangle>Q \\<rightarrow>\n                      \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                      (FL_bisimilar (L (\\<alpha>, F, f)) OO\n                       FL_bisimilar (L (\\<alpha>, F, f)))\n                       P' Q')))", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F P Q b f \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot>[F] b; b \\<sim>\\<cdot>[F] Q;\n        f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (FL_bisimilar (L (\\<alpha>, F, f)) OO\n                             FL_bisimilar (L (\\<alpha>, F, f)))\n                             P' Q'", "fix F P R Q f \\<alpha> P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F P Q b f \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot>[F] b; b \\<sim>\\<cdot>[F] Q;\n        f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (FL_bisimilar (L (\\<alpha>, F, f)) OO\n                             FL_bisimilar (L (\\<alpha>, F, f)))\n                             P' Q'", "assume PR: \"P \\<sim>\\<cdot>[F] R\" and RQ: \"R \\<sim>\\<cdot>[F] Q\" and effect: \"f \\<in>\\<^sub>f\\<^sub>s F\" and fresh: \"bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)\" and trans: \"\\<langle>f\\<rangle>P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\"\n        \\<comment> \\<open>rename~@{term \"\\<langle>\\<alpha>,P'\\<rangle>\"} to avoid~@{term \"(\\<langle>f\\<rangle>R, F)\"}, without touching~@{term \"(\\<langle>f\\<rangle>Q, F, f)\"}\\<close>"], ["proof (state)\nthis:\n  P \\<sim>\\<cdot>[F] R\n  R \\<sim>\\<cdot>[F] Q\n  f \\<in>\\<^sub>f\\<^sub>s F\n  bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)\n  \\<langle>f\\<rangle>P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>F P Q b f \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot>[F] b; b \\<sim>\\<cdot>[F] Q;\n        f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (FL_bisimilar (L (\\<alpha>, F, f)) OO\n                             FL_bisimilar (L (\\<alpha>, F, f)))\n                             P' Q'", "obtain p where 1: \"(p \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R, F, f)\" and 2: \"supp (\\<langle>\\<alpha>,P'\\<rangle>, (\\<langle>f\\<rangle>Q, F, f)) \\<sharp>* p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R,\n                F, f);\n         supp\n          (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n           f) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (rule at_set_avoiding2[of \"bn \\<alpha>\" \"(\\<langle>f\\<rangle>R, F, f)\" \"(\\<langle>\\<alpha>,P'\\<rangle>, (\\<langle>f\\<rangle>Q, F, f))\", THEN exE])"], ["proof (state)\ngoal (5 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R,\n                F, f);\n         supp\n          (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n           f) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (bn \\<alpha>)\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R,\n                F, f);\n         supp\n          (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n           f) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp (\\<langle>f\\<rangle>R, F, f))\n 3. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R,\n                F, f);\n         supp\n          (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n           f) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite\n     (supp (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F, f))\n 4. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R,\n                F, f);\n         supp\n          (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n           f) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>,\n                           \\<langle>f\\<rangle>Q, F, f)\n 5. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn\n    \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R, F, f);\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q,\n                      F, f) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R, F,\n       f) \\<and>\n        supp\n         (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n          f) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"finite (bn \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (bn \\<alpha>)", "by (fact bn_finite)"], ["proof (state)\nthis:\n  finite (bn \\<alpha>)\n\ngoal (4 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R,\n                F, f);\n         supp\n          (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n           f) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp (\\<langle>f\\<rangle>R, F, f))\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R,\n                F, f);\n         supp\n          (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n           f) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite\n     (supp (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F, f))\n 3. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R,\n                F, f);\n         supp\n          (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n           f) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>,\n                           \\<langle>f\\<rangle>Q, F, f)\n 4. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn\n    \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R, F, f);\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q,\n                      F, f) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R, F,\n       f) \\<and>\n        supp\n         (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n          f) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R,\n                F, f);\n         supp\n          (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n           f) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp (\\<langle>f\\<rangle>R, F, f))\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R,\n                F, f);\n         supp\n          (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n           f) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite\n     (supp (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F, f))\n 3. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R,\n                F, f);\n         supp\n          (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n           f) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>,\n                           \\<langle>f\\<rangle>Q, F, f)\n 4. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn\n    \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R, F, f);\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q,\n                      F, f) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R, F,\n       f) \\<and>\n        supp\n         (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n          f) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"finite (supp (\\<langle>f\\<rangle>R, F, f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (supp (\\<langle>f\\<rangle>R, F, f))", "by (fact finite_supp)"], ["proof (state)\nthis:\n  finite (supp (\\<langle>f\\<rangle>R, F, f))\n\ngoal (3 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R,\n                F, f);\n         supp\n          (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n           f) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite\n     (supp (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F, f))\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R,\n                F, f);\n         supp\n          (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n           f) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>,\n                           \\<langle>f\\<rangle>Q, F, f)\n 3. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn\n    \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R, F, f);\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q,\n                      F, f) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R, F,\n       f) \\<and>\n        supp\n         (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n          f) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R,\n                F, f);\n         supp\n          (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n           f) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite\n     (supp (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F, f))\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R,\n                F, f);\n         supp\n          (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n           f) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>,\n                           \\<langle>f\\<rangle>Q, F, f)\n 3. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn\n    \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R, F, f);\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q,\n                      F, f) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R, F,\n       f) \\<and>\n        supp\n         (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n          f) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"finite (supp (\\<langle>\\<alpha>,P'\\<rangle>, (\\<langle>f\\<rangle>Q, F, f)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     (supp (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F, f))", "by (simp add: finite_supp supp_Pair)"], ["proof (state)\nthis:\n  finite (supp (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F, f))\n\ngoal (2 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R,\n                F, f);\n         supp\n          (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n           f) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>,\n                           \\<langle>f\\<rangle>Q, F, f)\n 2. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn\n    \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R, F, f);\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q,\n                      F, f) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R, F,\n       f) \\<and>\n        supp\n         (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n          f) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R,\n                F, f);\n         supp\n          (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n           f) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>,\n                           \\<langle>f\\<rangle>Q, F, f)\n 2. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn\n    \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R, F, f);\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q,\n                      F, f) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R, F,\n       f) \\<and>\n        supp\n         (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n          f) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>, (\\<langle>f\\<rangle>Q, F, f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>,\n                           \\<langle>f\\<rangle>Q, F, f)", "using bn_abs_residual_fresh fresh fresh_star_Pair"], ["proof (prove)\nusing this:\n  bn ?\\<alpha> \\<sharp>* \\<langle>?\\<alpha>,?P\\<rangle>\n  bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)\n  ?as \\<sharp>* (?x, ?y) = (?as \\<sharp>* ?x \\<and> ?as \\<sharp>* ?y)\n\ngoal (1 subgoal):\n 1. bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>,\n                           \\<langle>f\\<rangle>Q, F, f)", "by blast"], ["proof (state)\nthis:\n  bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>,\n                         \\<langle>f\\<rangle>Q, F, f)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn\n    \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R, F, f);\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q,\n                      F, f) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R, F,\n       f) \\<and>\n        supp\n         (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F,\n          f) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "qed metis"], ["proof (state)\nthis:\n  (p \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R, F, f)\n  supp\n   (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F, f) \\<sharp>* p\n\ngoal (1 subgoal):\n 1. \\<And>F P Q b f \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot>[F] b; b \\<sim>\\<cdot>[F] Q;\n        f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (FL_bisimilar (L (\\<alpha>, F, f)) OO\n                             FL_bisimilar (L (\\<alpha>, F, f)))\n                             P' Q'", "from 2"], ["proof (chain)\npicking this:\n  supp\n   (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F, f) \\<sharp>* p", "have 3: \"supp \\<langle>\\<alpha>,P'\\<rangle> \\<sharp>* p\" and 4: \"supp (\\<langle>f\\<rangle>Q, F, f) \\<sharp>* p\""], ["proof (prove)\nusing this:\n  supp\n   (\\<langle>\\<alpha>,P'\\<rangle>, \\<langle>f\\<rangle>Q, F, f) \\<sharp>* p\n\ngoal (1 subgoal):\n 1. supp \\<langle>\\<alpha>,P'\\<rangle> \\<sharp>* p &&&\n    supp (\\<langle>f\\<rangle>Q, F, f) \\<sharp>* p", "by (simp add: fresh_star_Un supp_Pair)+"], ["proof (state)\nthis:\n  supp \\<langle>\\<alpha>,P'\\<rangle> \\<sharp>* p\n  supp (\\<langle>f\\<rangle>Q, F, f) \\<sharp>* p\n\ngoal (1 subgoal):\n 1. \\<And>F P Q b f \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot>[F] b; b \\<sim>\\<cdot>[F] Q;\n        f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (FL_bisimilar (L (\\<alpha>, F, f)) OO\n                             FL_bisimilar (L (\\<alpha>, F, f)))\n                             P' Q'", "from 3"], ["proof (chain)\npicking this:\n  supp \\<langle>\\<alpha>,P'\\<rangle> \\<sharp>* p", "have \"\\<langle>p \\<bullet> \\<alpha>, p \\<bullet> P'\\<rangle> = \\<langle>\\<alpha>,P'\\<rangle>\""], ["proof (prove)\nusing this:\n  supp \\<langle>\\<alpha>,P'\\<rangle> \\<sharp>* p\n\ngoal (1 subgoal):\n 1. \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P'\\<rangle> =\n    \\<langle>\\<alpha>,P'\\<rangle>", "using supp_perm_eq"], ["proof (prove)\nusing this:\n  supp \\<langle>\\<alpha>,P'\\<rangle> \\<sharp>* p\n  supp ?x \\<sharp>* ?p \\<Longrightarrow> ?p \\<bullet> ?x = ?x\n\ngoal (1 subgoal):\n 1. \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P'\\<rangle> =\n    \\<langle>\\<alpha>,P'\\<rangle>", "by fastforce"], ["proof (state)\nthis:\n  \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P'\\<rangle> =\n  \\<langle>\\<alpha>,P'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>F P Q b f \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot>[F] b; b \\<sim>\\<cdot>[F] Q;\n        f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (FL_bisimilar (L (\\<alpha>, F, f)) OO\n                             FL_bisimilar (L (\\<alpha>, F, f)))\n                             P' Q'", "then"], ["proof (chain)\npicking this:\n  \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P'\\<rangle> =\n  \\<langle>\\<alpha>,P'\\<rangle>", "obtain pR' where 5: \"\\<langle>f\\<rangle>R \\<rightarrow> \\<langle>p \\<bullet> \\<alpha>, pR'\\<rangle>\" and 6: \"(p \\<bullet> P') \\<sim>\\<cdot>[L (p \\<bullet> \\<alpha>,F,f)] pR'\""], ["proof (prove)\nusing this:\n  \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P'\\<rangle> =\n  \\<langle>\\<alpha>,P'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>pR'.\n        \\<lbrakk>\\<langle>f\\<rangle>R \\<rightarrow>\n                 \\<langle>p \\<bullet> \\<alpha>,pR'\\<rangle>;\n         p \\<bullet> P' \\<sim>\\<cdot>[L\n (p \\<bullet> \\<alpha>, F, f)] pR'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using PR effect trans 1"], ["proof (prove)\nusing this:\n  \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P'\\<rangle> =\n  \\<langle>\\<alpha>,P'\\<rangle>\n  P \\<sim>\\<cdot>[F] R\n  f \\<in>\\<^sub>f\\<^sub>s F\n  \\<langle>f\\<rangle>P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\n  (p \\<bullet> bn \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>R, F, f)\n\ngoal (1 subgoal):\n 1. (\\<And>pR'.\n        \\<lbrakk>\\<langle>f\\<rangle>R \\<rightarrow>\n                 \\<langle>p \\<bullet> \\<alpha>,pR'\\<rangle>;\n         p \\<bullet> P' \\<sim>\\<cdot>[L\n (p \\<bullet> \\<alpha>, F, f)] pR'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis FL_bisimilar_simulation_step bn_eqvt)"], ["proof (state)\nthis:\n  \\<langle>f\\<rangle>R \\<rightarrow>\n  \\<langle>p \\<bullet> \\<alpha>,pR'\\<rangle>\n  p \\<bullet> P' \\<sim>\\<cdot>[L (p \\<bullet> \\<alpha>, F, f)] pR'\n\ngoal (1 subgoal):\n 1. \\<And>F P Q b f \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot>[F] b; b \\<sim>\\<cdot>[F] Q;\n        f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (FL_bisimilar (L (\\<alpha>, F, f)) OO\n                             FL_bisimilar (L (\\<alpha>, F, f)))\n                             P' Q'", "from fresh and 4"], ["proof (chain)\npicking this:\n  bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)\n  supp (\\<langle>f\\<rangle>Q, F, f) \\<sharp>* p", "have \"bn (p \\<bullet> \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)\""], ["proof (prove)\nusing this:\n  bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)\n  supp (\\<langle>f\\<rangle>Q, F, f) \\<sharp>* p\n\ngoal (1 subgoal):\n 1. bn (p \\<bullet> \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)", "by (metis bn_eqvt fresh_star_permute_iff supp_perm_eq)"], ["proof (state)\nthis:\n  bn (p \\<bullet> \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)\n\ngoal (1 subgoal):\n 1. \\<And>F P Q b f \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot>[F] b; b \\<sim>\\<cdot>[F] Q;\n        f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (FL_bisimilar (L (\\<alpha>, F, f)) OO\n                             FL_bisimilar (L (\\<alpha>, F, f)))\n                             P' Q'", "then"], ["proof (chain)\npicking this:\n  bn (p \\<bullet> \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)", "obtain pQ' where 7: \"\\<langle>f\\<rangle>Q \\<rightarrow> \\<langle>p \\<bullet> \\<alpha>, pQ'\\<rangle>\" and 8: \"pR' \\<sim>\\<cdot>[L (p \\<bullet> \\<alpha>,F,f)] pQ'\""], ["proof (prove)\nusing this:\n  bn (p \\<bullet> \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)\n\ngoal (1 subgoal):\n 1. (\\<And>pQ'.\n        \\<lbrakk>\\<langle>f\\<rangle>Q \\<rightarrow>\n                 \\<langle>p \\<bullet> \\<alpha>,pQ'\\<rangle>;\n         pR' \\<sim>\\<cdot>[L (p \\<bullet> \\<alpha>, F, f)] pQ'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using RQ effect 5"], ["proof (prove)\nusing this:\n  bn (p \\<bullet> \\<alpha>) \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)\n  R \\<sim>\\<cdot>[F] Q\n  f \\<in>\\<^sub>f\\<^sub>s F\n  \\<langle>f\\<rangle>R \\<rightarrow>\n  \\<langle>p \\<bullet> \\<alpha>,pR'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>pQ'.\n        \\<lbrakk>\\<langle>f\\<rangle>Q \\<rightarrow>\n                 \\<langle>p \\<bullet> \\<alpha>,pQ'\\<rangle>;\n         pR' \\<sim>\\<cdot>[L (p \\<bullet> \\<alpha>, F, f)] pQ'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis FL_bisimilar_simulation_step)"], ["proof (state)\nthis:\n  \\<langle>f\\<rangle>Q \\<rightarrow>\n  \\<langle>p \\<bullet> \\<alpha>,pQ'\\<rangle>\n  pR' \\<sim>\\<cdot>[L (p \\<bullet> \\<alpha>, F, f)] pQ'\n\ngoal (1 subgoal):\n 1. \\<And>F P Q b f \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot>[F] b; b \\<sim>\\<cdot>[F] Q;\n        f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (FL_bisimilar (L (\\<alpha>, F, f)) OO\n                             FL_bisimilar (L (\\<alpha>, F, f)))\n                             P' Q'", "from 4"], ["proof (chain)\npicking this:\n  supp (\\<langle>f\\<rangle>Q, F, f) \\<sharp>* p", "have \"supp (\\<langle>f\\<rangle>Q) \\<sharp>* p\""], ["proof (prove)\nusing this:\n  supp (\\<langle>f\\<rangle>Q, F, f) \\<sharp>* p\n\ngoal (1 subgoal):\n 1. supp (\\<langle>f\\<rangle>Q) \\<sharp>* p", "by (simp add: fresh_star_Un supp_Pair)"], ["proof (state)\nthis:\n  supp (\\<langle>f\\<rangle>Q) \\<sharp>* p\n\ngoal (1 subgoal):\n 1. \\<And>F P Q b f \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot>[F] b; b \\<sim>\\<cdot>[F] Q;\n        f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (FL_bisimilar (L (\\<alpha>, F, f)) OO\n                             FL_bisimilar (L (\\<alpha>, F, f)))\n                             P' Q'", "with 7"], ["proof (chain)\npicking this:\n  \\<langle>f\\<rangle>Q \\<rightarrow>\n  \\<langle>p \\<bullet> \\<alpha>,pQ'\\<rangle>\n  supp (\\<langle>f\\<rangle>Q) \\<sharp>* p", "have \"\\<langle>f\\<rangle>Q \\<rightarrow> \\<langle>\\<alpha>, -p \\<bullet> pQ'\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>f\\<rangle>Q \\<rightarrow>\n  \\<langle>p \\<bullet> \\<alpha>,pQ'\\<rangle>\n  supp (\\<langle>f\\<rangle>Q) \\<sharp>* p\n\ngoal (1 subgoal):\n 1. \\<langle>f\\<rangle>Q \\<rightarrow>\n    \\<langle>\\<alpha>,- p \\<bullet> pQ'\\<rangle>", "by (metis permute_minus_cancel(2) supp_perm_eq transition_eqvt')"], ["proof (state)\nthis:\n  \\<langle>f\\<rangle>Q \\<rightarrow>\n  \\<langle>\\<alpha>,- p \\<bullet> pQ'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>F P Q b f \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot>[F] b; b \\<sim>\\<cdot>[F] Q;\n        f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (FL_bisimilar (L (\\<alpha>, F, f)) OO\n                             FL_bisimilar (L (\\<alpha>, F, f)))\n                             P' Q'", "moreover"], ["proof (state)\nthis:\n  \\<langle>f\\<rangle>Q \\<rightarrow>\n  \\<langle>\\<alpha>,- p \\<bullet> pQ'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>F P Q b f \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot>[F] b; b \\<sim>\\<cdot>[F] Q;\n        f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (FL_bisimilar (L (\\<alpha>, F, f)) OO\n                             FL_bisimilar (L (\\<alpha>, F, f)))\n                             P' Q'", "from 6 and 8"], ["proof (chain)\npicking this:\n  p \\<bullet> P' \\<sim>\\<cdot>[L (p \\<bullet> \\<alpha>, F, f)] pR'\n  pR' \\<sim>\\<cdot>[L (p \\<bullet> \\<alpha>, F, f)] pQ'", "have \"?FL_bisim (L (p \\<bullet> \\<alpha>, F, f)) (p \\<bullet> P') pQ'\""], ["proof (prove)\nusing this:\n  p \\<bullet> P' \\<sim>\\<cdot>[L (p \\<bullet> \\<alpha>, F, f)] pR'\n  pR' \\<sim>\\<cdot>[L (p \\<bullet> \\<alpha>, F, f)] pQ'\n\ngoal (1 subgoal):\n 1. (FL_bisimilar (L (p \\<bullet> \\<alpha>, F, f)) OO\n     FL_bisimilar (L (p \\<bullet> \\<alpha>, F, f)))\n     (p \\<bullet> P') pQ'", "by (metis relcompp.relcompI)"], ["proof (state)\nthis:\n  (FL_bisimilar (L (p \\<bullet> \\<alpha>, F, f)) OO\n   FL_bisimilar (L (p \\<bullet> \\<alpha>, F, f)))\n   (p \\<bullet> P') pQ'\n\ngoal (1 subgoal):\n 1. \\<And>F P Q b f \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot>[F] b; b \\<sim>\\<cdot>[F] Q;\n        f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (FL_bisimilar (L (\\<alpha>, F, f)) OO\n                             FL_bisimilar (L (\\<alpha>, F, f)))\n                             P' Q'", "then"], ["proof (chain)\npicking this:\n  (FL_bisimilar (L (p \\<bullet> \\<alpha>, F, f)) OO\n   FL_bisimilar (L (p \\<bullet> \\<alpha>, F, f)))\n   (p \\<bullet> P') pQ'", "have \"?FL_bisim (-p \\<bullet> L (p \\<bullet> \\<alpha>, F, f)) (-p \\<bullet> p \\<bullet> P') (-p \\<bullet> pQ')\""], ["proof (prove)\nusing this:\n  (FL_bisimilar (L (p \\<bullet> \\<alpha>, F, f)) OO\n   FL_bisimilar (L (p \\<bullet> \\<alpha>, F, f)))\n   (p \\<bullet> P') pQ'\n\ngoal (1 subgoal):\n 1. (FL_bisimilar (- p \\<bullet> L (p \\<bullet> \\<alpha>, F, f)) OO\n     FL_bisimilar (- p \\<bullet> L (p \\<bullet> \\<alpha>, F, f)))\n     (- p \\<bullet> p \\<bullet> P') (- p \\<bullet> pQ')", "using FL_bisimilar_eqvt"], ["proof (prove)\nusing this:\n  (FL_bisimilar (L (p \\<bullet> \\<alpha>, F, f)) OO\n   FL_bisimilar (L (p \\<bullet> \\<alpha>, F, f)))\n   (p \\<bullet> P') pQ'\n  ?P \\<sim>\\<cdot>[?F] ?Q \\<Longrightarrow>\n  ?p \\<bullet> ?P \\<sim>\\<cdot>[?p \\<bullet> ?F] ?p \\<bullet> ?Q\n\ngoal (1 subgoal):\n 1. (FL_bisimilar (- p \\<bullet> L (p \\<bullet> \\<alpha>, F, f)) OO\n     FL_bisimilar (- p \\<bullet> L (p \\<bullet> \\<alpha>, F, f)))\n     (- p \\<bullet> p \\<bullet> P') (- p \\<bullet> pQ')", "by blast"], ["proof (state)\nthis:\n  (FL_bisimilar (- p \\<bullet> L (p \\<bullet> \\<alpha>, F, f)) OO\n   FL_bisimilar (- p \\<bullet> L (p \\<bullet> \\<alpha>, F, f)))\n   (- p \\<bullet> p \\<bullet> P') (- p \\<bullet> pQ')\n\ngoal (1 subgoal):\n 1. \\<And>F P Q b f \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot>[F] b; b \\<sim>\\<cdot>[F] Q;\n        f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (FL_bisimilar (L (\\<alpha>, F, f)) OO\n                             FL_bisimilar (L (\\<alpha>, F, f)))\n                             P' Q'", "then"], ["proof (chain)\npicking this:\n  (FL_bisimilar (- p \\<bullet> L (p \\<bullet> \\<alpha>, F, f)) OO\n   FL_bisimilar (- p \\<bullet> L (p \\<bullet> \\<alpha>, F, f)))\n   (- p \\<bullet> p \\<bullet> P') (- p \\<bullet> pQ')", "have \"?FL_bisim (L (\\<alpha>, -p \\<bullet> F, -p \\<bullet> f)) P' (-p \\<bullet> pQ')\""], ["proof (prove)\nusing this:\n  (FL_bisimilar (- p \\<bullet> L (p \\<bullet> \\<alpha>, F, f)) OO\n   FL_bisimilar (- p \\<bullet> L (p \\<bullet> \\<alpha>, F, f)))\n   (- p \\<bullet> p \\<bullet> P') (- p \\<bullet> pQ')\n\ngoal (1 subgoal):\n 1. (FL_bisimilar (L (\\<alpha>, - p \\<bullet> F, - p \\<bullet> f)) OO\n     FL_bisimilar (L (\\<alpha>, - p \\<bullet> F, - p \\<bullet> f)))\n     P' (- p \\<bullet> pQ')", "by (simp add: L_eqvt')"], ["proof (state)\nthis:\n  (FL_bisimilar (L (\\<alpha>, - p \\<bullet> F, - p \\<bullet> f)) OO\n   FL_bisimilar (L (\\<alpha>, - p \\<bullet> F, - p \\<bullet> f)))\n   P' (- p \\<bullet> pQ')\n\ngoal (1 subgoal):\n 1. \\<And>F P Q b f \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot>[F] b; b \\<sim>\\<cdot>[F] Q;\n        f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (FL_bisimilar (L (\\<alpha>, F, f)) OO\n                             FL_bisimilar (L (\\<alpha>, F, f)))\n                             P' Q'", "then"], ["proof (chain)\npicking this:\n  (FL_bisimilar (L (\\<alpha>, - p \\<bullet> F, - p \\<bullet> f)) OO\n   FL_bisimilar (L (\\<alpha>, - p \\<bullet> F, - p \\<bullet> f)))\n   P' (- p \\<bullet> pQ')", "have \"?FL_bisim (L (\\<alpha>,F,f)) P' (-p \\<bullet> pQ')\""], ["proof (prove)\nusing this:\n  (FL_bisimilar (L (\\<alpha>, - p \\<bullet> F, - p \\<bullet> f)) OO\n   FL_bisimilar (L (\\<alpha>, - p \\<bullet> F, - p \\<bullet> f)))\n   P' (- p \\<bullet> pQ')\n\ngoal (1 subgoal):\n 1. (FL_bisimilar (L (\\<alpha>, F, f)) OO FL_bisimilar (L (\\<alpha>, F, f)))\n     P' (- p \\<bullet> pQ')", "using 4"], ["proof (prove)\nusing this:\n  (FL_bisimilar (L (\\<alpha>, - p \\<bullet> F, - p \\<bullet> f)) OO\n   FL_bisimilar (L (\\<alpha>, - p \\<bullet> F, - p \\<bullet> f)))\n   P' (- p \\<bullet> pQ')\n  supp (\\<langle>f\\<rangle>Q, F, f) \\<sharp>* p\n\ngoal (1 subgoal):\n 1. (FL_bisimilar (L (\\<alpha>, F, f)) OO FL_bisimilar (L (\\<alpha>, F, f)))\n     P' (- p \\<bullet> pQ')", "by (metis fresh_star_Un permute_minus_cancel(2) supp_Pair supp_perm_eq)"], ["proof (state)\nthis:\n  (FL_bisimilar (L (\\<alpha>, F, f)) OO FL_bisimilar (L (\\<alpha>, F, f)))\n   P' (- p \\<bullet> pQ')\n\ngoal (1 subgoal):\n 1. \\<And>F P Q b f \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot>[F] b; b \\<sim>\\<cdot>[F] Q;\n        f \\<in>\\<^sub>f\\<^sub>s F;\n        bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F, f);\n        \\<langle>f\\<rangle>P \\<rightarrow>\n        \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            \\<langle>f\\<rangle>Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (FL_bisimilar (L (\\<alpha>, F, f)) OO\n                             FL_bisimilar (L (\\<alpha>, F, f)))\n                             P' Q'", "ultimately"], ["proof (chain)\npicking this:\n  \\<langle>f\\<rangle>Q \\<rightarrow>\n  \\<langle>\\<alpha>,- p \\<bullet> pQ'\\<rangle>\n  (FL_bisimilar (L (\\<alpha>, F, f)) OO FL_bisimilar (L (\\<alpha>, F, f)))\n   P' (- p \\<bullet> pQ')", "show \"\\<exists>Q'. \\<langle>f\\<rangle>Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and> ?FL_bisim (L (\\<alpha>,F,f)) P' Q'\""], ["proof (prove)\nusing this:\n  \\<langle>f\\<rangle>Q \\<rightarrow>\n  \\<langle>\\<alpha>,- p \\<bullet> pQ'\\<rangle>\n  (FL_bisimilar (L (\\<alpha>, F, f)) OO FL_bisimilar (L (\\<alpha>, F, f)))\n   P' (- p \\<bullet> pQ')\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       \\<langle>f\\<rangle>Q \\<rightarrow>\n       \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n       (FL_bisimilar (L (\\<alpha>, F, f)) OO\n        FL_bisimilar (L (\\<alpha>, F, f)))\n        P' Q'", "by metis"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     \\<langle>f\\<rangle>Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n     (FL_bisimilar (L (\\<alpha>, F, f)) OO\n      FL_bisimilar (L (\\<alpha>, F, f)))\n      P' Q'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P Q.\n     (FL_bisimilar ?F OO FL_bisimilar ?F) P Q \\<longrightarrow>\n     (\\<forall>f.\n         f \\<in>\\<^sub>f\\<^sub>s ?F \\<longrightarrow>\n         (\\<forall>\\<alpha> P'.\n             bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, ?F,\n                                    f) \\<longrightarrow>\n             \\<langle>f\\<rangle>P \\<rightarrow>\n             \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n             (\\<exists>Q'.\n                 \\<langle>f\\<rangle>Q \\<rightarrow>\n                 \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                 (FL_bisimilar (L (\\<alpha>, ?F, f)) OO\n                  FL_bisimilar (L (\\<alpha>, ?F, f)))\n                  P' Q')))\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot>[F] y; y \\<sim>\\<cdot>[F] z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot>[F] z", "ultimately"], ["proof (chain)\npicking this:\n  symp (FL_bisimilar ?F OO FL_bisimilar ?F)\n  \\<forall>P Q.\n     (FL_bisimilar ?F OO FL_bisimilar ?F) P Q \\<longrightarrow>\n     (\\<forall>f.\n         f \\<in>\\<^sub>f\\<^sub>s ?F \\<longrightarrow>\n         (\\<forall>\\<phi>.\n             \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n             \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))\n  \\<forall>P Q.\n     (FL_bisimilar ?F OO FL_bisimilar ?F) P Q \\<longrightarrow>\n     (\\<forall>f.\n         f \\<in>\\<^sub>f\\<^sub>s ?F \\<longrightarrow>\n         (\\<forall>\\<alpha> P'.\n             bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, ?F,\n                                    f) \\<longrightarrow>\n             \\<langle>f\\<rangle>P \\<rightarrow>\n             \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n             (\\<exists>Q'.\n                 \\<langle>f\\<rangle>Q \\<rightarrow>\n                 \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                 (FL_bisimilar (L (\\<alpha>, ?F, f)) OO\n                  FL_bisimilar (L (\\<alpha>, ?F, f)))\n                  P' Q')))", "have \"is_L_bisimulation ?FL_bisim\""], ["proof (prove)\nusing this:\n  symp (FL_bisimilar ?F OO FL_bisimilar ?F)\n  \\<forall>P Q.\n     (FL_bisimilar ?F OO FL_bisimilar ?F) P Q \\<longrightarrow>\n     (\\<forall>f.\n         f \\<in>\\<^sub>f\\<^sub>s ?F \\<longrightarrow>\n         (\\<forall>\\<phi>.\n             \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n             \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))\n  \\<forall>P Q.\n     (FL_bisimilar ?F OO FL_bisimilar ?F) P Q \\<longrightarrow>\n     (\\<forall>f.\n         f \\<in>\\<^sub>f\\<^sub>s ?F \\<longrightarrow>\n         (\\<forall>\\<alpha> P'.\n             bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, ?F,\n                                    f) \\<longrightarrow>\n             \\<langle>f\\<rangle>P \\<rightarrow>\n             \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n             (\\<exists>Q'.\n                 \\<langle>f\\<rangle>Q \\<rightarrow>\n                 \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                 (FL_bisimilar (L (\\<alpha>, ?F, f)) OO\n                  FL_bisimilar (L (\\<alpha>, ?F, f)))\n                  P' Q')))\n\ngoal (1 subgoal):\n 1. is_L_bisimulation (\\<lambda>F. FL_bisimilar F OO FL_bisimilar F)", "unfolding is_L_bisimulation_def"], ["proof (prove)\nusing this:\n  symp (FL_bisimilar ?F OO FL_bisimilar ?F)\n  \\<forall>P Q.\n     (FL_bisimilar ?F OO FL_bisimilar ?F) P Q \\<longrightarrow>\n     (\\<forall>f.\n         f \\<in>\\<^sub>f\\<^sub>s ?F \\<longrightarrow>\n         (\\<forall>\\<phi>.\n             \\<langle>f\\<rangle>P \\<turnstile> \\<phi> \\<longrightarrow>\n             \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))\n  \\<forall>P Q.\n     (FL_bisimilar ?F OO FL_bisimilar ?F) P Q \\<longrightarrow>\n     (\\<forall>f.\n         f \\<in>\\<^sub>f\\<^sub>s ?F \\<longrightarrow>\n         (\\<forall>\\<alpha> P'.\n             bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, ?F,\n                                    f) \\<longrightarrow>\n             \\<langle>f\\<rangle>P \\<rightarrow>\n             \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n             (\\<exists>Q'.\n                 \\<langle>f\\<rangle>Q \\<rightarrow>\n                 \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                 (FL_bisimilar (L (\\<alpha>, ?F, f)) OO\n                  FL_bisimilar (L (\\<alpha>, ?F, f)))\n                  P' Q')))\n\ngoal (1 subgoal):\n 1. \\<forall>F.\n       symp (FL_bisimilar F OO FL_bisimilar F) \\<and>\n       (\\<forall>P Q.\n           (FL_bisimilar F OO FL_bisimilar F) P Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<phi>.\n                   \\<langle>f\\<rangle>P \\<turnstile>\n                   \\<phi> \\<longrightarrow>\n                   \\<langle>f\\<rangle>Q \\<turnstile> \\<phi>))) \\<and>\n       (\\<forall>P Q.\n           (FL_bisimilar F OO FL_bisimilar F) P Q \\<longrightarrow>\n           (\\<forall>f.\n               f \\<in>\\<^sub>f\\<^sub>s F \\<longrightarrow>\n               (\\<forall>\\<alpha> P'.\n                   bn \\<alpha> \\<sharp>* (\\<langle>f\\<rangle>Q, F,\n    f) \\<longrightarrow>\n                   \\<langle>f\\<rangle>P \\<rightarrow>\n                   \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                   (\\<exists>Q'.\n                       \\<langle>f\\<rangle>Q \\<rightarrow>\n                       \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                       (FL_bisimilar (L (\\<alpha>, F, f)) OO\n                        FL_bisimilar (L (\\<alpha>, F, f)))\n                        P' Q'))))", "by metis"], ["proof (state)\nthis:\n  is_L_bisimulation (\\<lambda>F. FL_bisimilar F OO FL_bisimilar F)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot>[F] y; y \\<sim>\\<cdot>[F] z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot>[F] z", "moreover"], ["proof (state)\nthis:\n  is_L_bisimulation (\\<lambda>F. FL_bisimilar F OO FL_bisimilar F)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot>[F] y; y \\<sim>\\<cdot>[F] z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot>[F] z", "have \"?FL_bisim F P R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (FL_bisimilar F OO FL_bisimilar F) P R", "using PQ QR"], ["proof (prove)\nusing this:\n  P \\<sim>\\<cdot>[F] Q\n  Q \\<sim>\\<cdot>[F] R\n\ngoal (1 subgoal):\n 1. (FL_bisimilar F OO FL_bisimilar F) P R", "by blast"], ["proof (state)\nthis:\n  (FL_bisimilar F OO FL_bisimilar F) P R\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot>[F] y; y \\<sim>\\<cdot>[F] z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot>[F] z", "ultimately"], ["proof (chain)\npicking this:\n  is_L_bisimulation (\\<lambda>F. FL_bisimilar F OO FL_bisimilar F)\n  (FL_bisimilar F OO FL_bisimilar F) P R", "show \"P \\<sim>\\<cdot>[F] R\""], ["proof (prove)\nusing this:\n  is_L_bisimulation (\\<lambda>F. FL_bisimilar F OO FL_bisimilar F)\n  (FL_bisimilar F OO FL_bisimilar F) P R\n\ngoal (1 subgoal):\n 1. P \\<sim>\\<cdot>[F] R", "unfolding FL_bisimilar_def"], ["proof (prove)\nusing this:\n  is_L_bisimulation\n   (\\<lambda>F.\n       (\\<lambda>P Q. \\<exists>R. is_L_bisimulation R \\<and> R F P Q) OO\n       (\\<lambda>P Q. \\<exists>R. is_L_bisimulation R \\<and> R F P Q))\n  ((\\<lambda>P Q. \\<exists>R. is_L_bisimulation R \\<and> R F P Q) OO\n   (\\<lambda>P Q. \\<exists>R. is_L_bisimulation R \\<and> R F P Q))\n   P R\n\ngoal (1 subgoal):\n 1. \\<exists>Ra. is_L_bisimulation Ra \\<and> Ra F P R", "by meson"], ["proof (state)\nthis:\n  P \\<sim>\\<cdot>[F] R\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma FL_bisimilar_equivp: \"equivp (FL_bisimilar F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equivp (FL_bisimilar F)", "by (metis FL_bisimilar_reflp FL_bisimilar_symp FL_bisimilar_transp equivp_reflp_symp_transp)"], ["", "end"], ["", "end"]]}