{"file_name": "/home/qj213/afp-2021-10-22/thys/Modal_Logics_for_NTS/Weak_Equivalence_Implies_Bisimilarity.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Modal_Logics_for_NTS", "problem_names": ["lemma is_distinguishing_formula_eqvt (*[eqvt]*) [simp]:\n    assumes \"x distinguishes P from Q\" shows \"(p \\<bullet> x) distinguishes (p \\<bullet> P) from (p \\<bullet> Q)\"", "lemma weakly_equivalent_iff_not_distinguished: \"(P \\<equiv>\\<cdot> Q) \\<longleftrightarrow> \\<not>(\\<exists>x. weak_formula x \\<and> x distinguishes P from Q)\"", "lemma distinguished_bounded_support:\n    assumes \"weak_formula x\" and \"x distinguishes P from Q\"\n    obtains y where \"weak_formula y\" and \"supp y \\<subseteq> supp P\" and \"y distinguishes P from Q\"", "lemma weak_equivalence_is_weak_bisimulation: \"is_weak_bisimulation weakly_logically_equivalent\"", "theorem weak_equivalence_implies_weak_bisimilarity: assumes \"P \\<equiv>\\<cdot> Q\" shows \"P \\<approx>\\<cdot> Q\""], "translations": [["", "lemma is_distinguishing_formula_eqvt (*[eqvt]*) [simp]:\n    assumes \"x distinguishes P from Q\" shows \"(p \\<bullet> x) distinguishes (p \\<bullet> P) from (p \\<bullet> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p \\<bullet> x) distinguishes (p \\<bullet> P) from (p \\<bullet> Q)", "using assms"], ["proof (prove)\nusing this:\n  x distinguishes P from Q\n\ngoal (1 subgoal):\n 1. (p \\<bullet> x) distinguishes (p \\<bullet> P) from (p \\<bullet> Q)", "unfolding is_distinguishing_formula_def"], ["proof (prove)\nusing this:\n  P \\<Turnstile> x \\<and> \\<not> Q \\<Turnstile> x\n\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<Turnstile> p \\<bullet> x \\<and>\n    \\<not> p \\<bullet> Q \\<Turnstile> p \\<bullet> x", "by (metis permute_minus_cancel(2) valid_eqvt)"], ["", "lemma weakly_equivalent_iff_not_distinguished: \"(P \\<equiv>\\<cdot> Q) \\<longleftrightarrow> \\<not>(\\<exists>x. weak_formula x \\<and> x distinguishes P from Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<equiv>\\<cdot> Q) =\n    (\\<nexists>x. weak_formula x \\<and> x distinguishes P from Q)", "by (meson is_distinguishing_formula_def weakly_logically_equivalent_def valid_Not wf_Not)"], ["", "text \\<open>There exists a distinguishing weak formula for~@{term P} and~@{term Q} whose support is\n  contained in~@{term \"supp P\"}.\\<close>"], ["", "lemma distinguished_bounded_support:\n    assumes \"weak_formula x\" and \"x distinguishes P from Q\"\n    obtains y where \"weak_formula y\" and \"supp y \\<subseteq> supp P\" and \"y distinguishes P from Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>weak_formula y; supp y \\<subseteq> supp P;\n         y distinguishes P from Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>weak_formula y; supp y \\<subseteq> supp P;\n         y distinguishes P from Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?B = \"{p \\<bullet> x|p. supp P \\<sharp>* p}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>weak_formula y; supp y \\<subseteq> supp P;\n         y distinguishes P from Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"supp P supports ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp P supports {p \\<bullet> x |p. supp P \\<sharp>* p}", "unfolding supports_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b.\n       a \\<notin> supp P \\<and> b \\<notin> supp P \\<longrightarrow>\n       (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n       supp P \\<sharp>* p} =\n       {p \\<bullet> x |p. supp P \\<sharp>* p}", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<notin> supp P; b \\<notin> supp P\\<rbrakk>\n       \\<Longrightarrow> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |\n                         p. supp P \\<sharp>* p} =\n                         {p \\<bullet> x |p. supp P \\<sharp>* p}", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<notin> supp P; b \\<notin> supp P\\<rbrakk>\n       \\<Longrightarrow> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |\n                         p. supp P \\<sharp>* p} =\n                         {p \\<bullet> x |p. supp P \\<sharp>* p}", "assume a: \"a \\<notin> supp P\" and b: \"b \\<notin> supp P\""], ["proof (state)\nthis:\n  a \\<notin> supp P\n  b \\<notin> supp P\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<notin> supp P; b \\<notin> supp P\\<rbrakk>\n       \\<Longrightarrow> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |\n                         p. supp P \\<sharp>* p} =\n                         {p \\<bullet> x |p. supp P \\<sharp>* p}", "have \"(a \\<rightleftharpoons> b) \\<bullet> ?B \\<subseteq> ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n    supp P \\<sharp>* p}\n    \\<subseteq> {p \\<bullet> x |p. supp P \\<sharp>* p}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n                supp P \\<sharp>* p} \\<Longrightarrow>\n       xa \\<in> {p \\<bullet> x |p. supp P \\<sharp>* p}", "fix x'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n                supp P \\<sharp>* p} \\<Longrightarrow>\n       xa \\<in> {p \\<bullet> x |p. supp P \\<sharp>* p}", "assume \"x' \\<in> (a \\<rightleftharpoons> b) \\<bullet> ?B\""], ["proof (state)\nthis:\n  x' \\<in> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n           supp P \\<sharp>* p}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n                supp P \\<sharp>* p} \\<Longrightarrow>\n       xa \\<in> {p \\<bullet> x |p. supp P \\<sharp>* p}", "then"], ["proof (chain)\npicking this:\n  x' \\<in> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n           supp P \\<sharp>* p}", "obtain p where 1: \"x' = (a \\<rightleftharpoons> b) \\<bullet> p \\<bullet> x\" and 2: \"supp P \\<sharp>* p\""], ["proof (prove)\nusing this:\n  x' \\<in> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n           supp P \\<sharp>* p}\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>x' = (a \\<rightleftharpoons> b) \\<bullet> p \\<bullet> x;\n         supp P \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: permute_set_def)"], ["proof (state)\nthis:\n  x' = (a \\<rightleftharpoons> b) \\<bullet> p \\<bullet> x\n  supp P \\<sharp>* p\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n                supp P \\<sharp>* p} \\<Longrightarrow>\n       xa \\<in> {p \\<bullet> x |p. supp P \\<sharp>* p}", "let ?q = \"(a \\<rightleftharpoons> b) + p\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n                supp P \\<sharp>* p} \\<Longrightarrow>\n       xa \\<in> {p \\<bullet> x |p. supp P \\<sharp>* p}", "from 1"], ["proof (chain)\npicking this:\n  x' = (a \\<rightleftharpoons> b) \\<bullet> p \\<bullet> x", "have \"x' = ?q \\<bullet> x\""], ["proof (prove)\nusing this:\n  x' = (a \\<rightleftharpoons> b) \\<bullet> p \\<bullet> x\n\ngoal (1 subgoal):\n 1. x' = ((a \\<rightleftharpoons> b) + p) \\<bullet> x", "by simp"], ["proof (state)\nthis:\n  x' = ((a \\<rightleftharpoons> b) + p) \\<bullet> x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n                supp P \\<sharp>* p} \\<Longrightarrow>\n       xa \\<in> {p \\<bullet> x |p. supp P \\<sharp>* p}", "moreover"], ["proof (state)\nthis:\n  x' = ((a \\<rightleftharpoons> b) + p) \\<bullet> x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n                supp P \\<sharp>* p} \\<Longrightarrow>\n       xa \\<in> {p \\<bullet> x |p. supp P \\<sharp>* p}", "from a and b and 2"], ["proof (chain)\npicking this:\n  a \\<notin> supp P\n  b \\<notin> supp P\n  supp P \\<sharp>* p", "have \"supp P \\<sharp>* ?q\""], ["proof (prove)\nusing this:\n  a \\<notin> supp P\n  b \\<notin> supp P\n  supp P \\<sharp>* p\n\ngoal (1 subgoal):\n 1. supp P \\<sharp>* ((a \\<rightleftharpoons> b) + p)", "by (metis fresh_perm fresh_star_def fresh_star_plus swap_atom_simps(3))"], ["proof (state)\nthis:\n  supp P \\<sharp>* ((a \\<rightleftharpoons> b) + p)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n                supp P \\<sharp>* p} \\<Longrightarrow>\n       xa \\<in> {p \\<bullet> x |p. supp P \\<sharp>* p}", "ultimately"], ["proof (chain)\npicking this:\n  x' = ((a \\<rightleftharpoons> b) + p) \\<bullet> x\n  supp P \\<sharp>* ((a \\<rightleftharpoons> b) + p)", "show \"x' \\<in> ?B\""], ["proof (prove)\nusing this:\n  x' = ((a \\<rightleftharpoons> b) + p) \\<bullet> x\n  supp P \\<sharp>* ((a \\<rightleftharpoons> b) + p)\n\ngoal (1 subgoal):\n 1. x' \\<in> {p \\<bullet> x |p. supp P \\<sharp>* p}", "by blast"], ["proof (state)\nthis:\n  x' \\<in> {p \\<bullet> x |p. supp P \\<sharp>* p}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n  supp P \\<sharp>* p}\n  \\<subseteq> {p \\<bullet> x |p. supp P \\<sharp>* p}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<notin> supp P; b \\<notin> supp P\\<rbrakk>\n       \\<Longrightarrow> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |\n                         p. supp P \\<sharp>* p} =\n                         {p \\<bullet> x |p. supp P \\<sharp>* p}", "moreover"], ["proof (state)\nthis:\n  (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n  supp P \\<sharp>* p}\n  \\<subseteq> {p \\<bullet> x |p. supp P \\<sharp>* p}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<notin> supp P; b \\<notin> supp P\\<rbrakk>\n       \\<Longrightarrow> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |\n                         p. supp P \\<sharp>* p} =\n                         {p \\<bullet> x |p. supp P \\<sharp>* p}", "have \"?B \\<subseteq> (a \\<rightleftharpoons> b) \\<bullet> ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p \\<bullet> x |p. supp P \\<sharp>* p}\n    \\<subseteq> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n                supp P \\<sharp>* p}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {p \\<bullet> x |p. supp P \\<sharp>* p} \\<Longrightarrow>\n       xa \\<in> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n                supp P \\<sharp>* p}", "fix x'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {p \\<bullet> x |p. supp P \\<sharp>* p} \\<Longrightarrow>\n       xa \\<in> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n                supp P \\<sharp>* p}", "assume \"x' \\<in> ?B\""], ["proof (state)\nthis:\n  x' \\<in> {p \\<bullet> x |p. supp P \\<sharp>* p}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {p \\<bullet> x |p. supp P \\<sharp>* p} \\<Longrightarrow>\n       xa \\<in> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n                supp P \\<sharp>* p}", "then"], ["proof (chain)\npicking this:\n  x' \\<in> {p \\<bullet> x |p. supp P \\<sharp>* p}", "obtain p where 1: \"x' = p \\<bullet> x\" and 2: \"supp P \\<sharp>* p\""], ["proof (prove)\nusing this:\n  x' \\<in> {p \\<bullet> x |p. supp P \\<sharp>* p}\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>x' = p \\<bullet> x; supp P \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x' = p \\<bullet> x\n  supp P \\<sharp>* p\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {p \\<bullet> x |p. supp P \\<sharp>* p} \\<Longrightarrow>\n       xa \\<in> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n                supp P \\<sharp>* p}", "let ?q = \"(a \\<rightleftharpoons> b) + p\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {p \\<bullet> x |p. supp P \\<sharp>* p} \\<Longrightarrow>\n       xa \\<in> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n                supp P \\<sharp>* p}", "from 1"], ["proof (chain)\npicking this:\n  x' = p \\<bullet> x", "have \"x' = (a \\<rightleftharpoons> b) \\<bullet> ?q \\<bullet> x\""], ["proof (prove)\nusing this:\n  x' = p \\<bullet> x\n\ngoal (1 subgoal):\n 1. x' =\n    (a \\<rightleftharpoons> b) \\<bullet> ((a \\<rightleftharpoons> b) +\n    p) \\<bullet> x", "by simp"], ["proof (state)\nthis:\n  x' =\n  (a \\<rightleftharpoons> b) \\<bullet> ((a \\<rightleftharpoons> b) +\n  p) \\<bullet> x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {p \\<bullet> x |p. supp P \\<sharp>* p} \\<Longrightarrow>\n       xa \\<in> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n                supp P \\<sharp>* p}", "moreover"], ["proof (state)\nthis:\n  x' =\n  (a \\<rightleftharpoons> b) \\<bullet> ((a \\<rightleftharpoons> b) +\n  p) \\<bullet> x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {p \\<bullet> x |p. supp P \\<sharp>* p} \\<Longrightarrow>\n       xa \\<in> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n                supp P \\<sharp>* p}", "from a and b and 2"], ["proof (chain)\npicking this:\n  a \\<notin> supp P\n  b \\<notin> supp P\n  supp P \\<sharp>* p", "have \"supp P \\<sharp>* ?q\""], ["proof (prove)\nusing this:\n  a \\<notin> supp P\n  b \\<notin> supp P\n  supp P \\<sharp>* p\n\ngoal (1 subgoal):\n 1. supp P \\<sharp>* ((a \\<rightleftharpoons> b) + p)", "by (metis fresh_perm fresh_star_def fresh_star_plus swap_atom_simps(3))"], ["proof (state)\nthis:\n  supp P \\<sharp>* ((a \\<rightleftharpoons> b) + p)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {p \\<bullet> x |p. supp P \\<sharp>* p} \\<Longrightarrow>\n       xa \\<in> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n                supp P \\<sharp>* p}", "ultimately"], ["proof (chain)\npicking this:\n  x' =\n  (a \\<rightleftharpoons> b) \\<bullet> ((a \\<rightleftharpoons> b) +\n  p) \\<bullet> x\n  supp P \\<sharp>* ((a \\<rightleftharpoons> b) + p)", "show \"x' \\<in> (a \\<rightleftharpoons> b) \\<bullet> ?B\""], ["proof (prove)\nusing this:\n  x' =\n  (a \\<rightleftharpoons> b) \\<bullet> ((a \\<rightleftharpoons> b) +\n  p) \\<bullet> x\n  supp P \\<sharp>* ((a \\<rightleftharpoons> b) + p)\n\ngoal (1 subgoal):\n 1. x' \\<in> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n             supp P \\<sharp>* p}", "using mem_permute_iff"], ["proof (prove)\nusing this:\n  x' =\n  (a \\<rightleftharpoons> b) \\<bullet> ((a \\<rightleftharpoons> b) +\n  p) \\<bullet> x\n  supp P \\<sharp>* ((a \\<rightleftharpoons> b) + p)\n  (?p \\<bullet> ?x \\<in> ?p \\<bullet> ?X) = (?x \\<in> ?X)\n\ngoal (1 subgoal):\n 1. x' \\<in> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n             supp P \\<sharp>* p}", "by blast"], ["proof (state)\nthis:\n  x' \\<in> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n           supp P \\<sharp>* p}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {p \\<bullet> x |p. supp P \\<sharp>* p}\n  \\<subseteq> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n              supp P \\<sharp>* p}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<notin> supp P; b \\<notin> supp P\\<rbrakk>\n       \\<Longrightarrow> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |\n                         p. supp P \\<sharp>* p} =\n                         {p \\<bullet> x |p. supp P \\<sharp>* p}", "ultimately"], ["proof (chain)\npicking this:\n  (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n  supp P \\<sharp>* p}\n  \\<subseteq> {p \\<bullet> x |p. supp P \\<sharp>* p}\n  {p \\<bullet> x |p. supp P \\<sharp>* p}\n  \\<subseteq> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n              supp P \\<sharp>* p}", "show \"(a \\<rightleftharpoons> b) \\<bullet> ?B = ?B\""], ["proof (prove)\nusing this:\n  (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n  supp P \\<sharp>* p}\n  \\<subseteq> {p \\<bullet> x |p. supp P \\<sharp>* p}\n  {p \\<bullet> x |p. supp P \\<sharp>* p}\n  \\<subseteq> (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n              supp P \\<sharp>* p}\n\ngoal (1 subgoal):\n 1. (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n    supp P \\<sharp>* p} =\n    {p \\<bullet> x |p. supp P \\<sharp>* p}", ".."], ["proof (state)\nthis:\n  (a \\<rightleftharpoons> b) \\<bullet> {p \\<bullet> x |p.\n  supp P \\<sharp>* p} =\n  {p \\<bullet> x |p. supp P \\<sharp>* p}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  supp P supports {p \\<bullet> x |p. supp P \\<sharp>* p}\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>weak_formula y; supp y \\<subseteq> supp P;\n         y distinguishes P from Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  supp P supports {p \\<bullet> x |p. supp P \\<sharp>* p}", "have supp_B_subset_supp_P: \"supp ?B \\<subseteq> supp P\""], ["proof (prove)\nusing this:\n  supp P supports {p \\<bullet> x |p. supp P \\<sharp>* p}\n\ngoal (1 subgoal):\n 1. supp {p \\<bullet> x |p. supp P \\<sharp>* p} \\<subseteq> supp P", "by (metis (erased, lifting) finite_supp supp_is_subset)"], ["proof (state)\nthis:\n  supp {p \\<bullet> x |p. supp P \\<sharp>* p} \\<subseteq> supp P\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>weak_formula y; supp y \\<subseteq> supp P;\n         y distinguishes P from Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  supp {p \\<bullet> x |p. supp P \\<sharp>* p} \\<subseteq> supp P", "have finite_supp_B: \"finite (supp ?B)\""], ["proof (prove)\nusing this:\n  supp {p \\<bullet> x |p. supp P \\<sharp>* p} \\<subseteq> supp P\n\ngoal (1 subgoal):\n 1. finite (supp {p \\<bullet> x |p. supp P \\<sharp>* p})", "using finite_supp rev_finite_subset"], ["proof (prove)\nusing this:\n  supp {p \\<bullet> x |p. supp P \\<sharp>* p} \\<subseteq> supp P\n  finite (supp ?x)\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite (supp {p \\<bullet> x |p. supp P \\<sharp>* p})", "by blast"], ["proof (state)\nthis:\n  finite (supp {p \\<bullet> x |p. supp P \\<sharp>* p})\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>weak_formula y; supp y \\<subseteq> supp P;\n         y distinguishes P from Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"?B \\<subseteq> (\\<lambda>p. p \\<bullet> x) ` UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {p \\<bullet> x |p. supp P \\<sharp>* p}\n    \\<subseteq> range (\\<lambda>p. p \\<bullet> x)", "by auto"], ["proof (state)\nthis:\n  {p \\<bullet> x |p. supp P \\<sharp>* p}\n  \\<subseteq> range (\\<lambda>p. p \\<bullet> x)\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>weak_formula y; supp y \\<subseteq> supp P;\n         y distinguishes P from Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  {p \\<bullet> x |p. supp P \\<sharp>* p}\n  \\<subseteq> range (\\<lambda>p. p \\<bullet> x)", "have \"|?B| \\<le>o |UNIV :: perm set|\""], ["proof (prove)\nusing this:\n  {p \\<bullet> x |p. supp P \\<sharp>* p}\n  \\<subseteq> range (\\<lambda>p. p \\<bullet> x)\n\ngoal (1 subgoal):\n 1. |{p \\<bullet> x |p. supp P \\<sharp>* p}| \\<le>o |UNIV|", "by (rule surj_imp_ordLeq)"], ["proof (state)\nthis:\n  |{p \\<bullet> x |p. supp P \\<sharp>* p}| \\<le>o |UNIV|\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>weak_formula y; supp y \\<subseteq> supp P;\n         y distinguishes P from Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  |{p \\<bullet> x |p. supp P \\<sharp>* p}| \\<le>o |UNIV|\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>weak_formula y; supp y \\<subseteq> supp P;\n         y distinguishes P from Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"|UNIV :: perm set| <o |UNIV :: 'idx set|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |UNIV| <o |UNIV|", "by (metis card_idx_perm)"], ["proof (state)\nthis:\n  |UNIV| <o |UNIV|\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>weak_formula y; supp y \\<subseteq> supp P;\n         y distinguishes P from Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  |UNIV| <o |UNIV|\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>weak_formula y; supp y \\<subseteq> supp P;\n         y distinguishes P from Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"|UNIV :: 'idx set| \\<le>o natLeq +c |UNIV :: 'idx set|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |UNIV| \\<le>o natLeq +c |UNIV|", "by (metis Cnotzero_UNIV ordLeq_csum2)"], ["proof (state)\nthis:\n  |UNIV| \\<le>o natLeq +c |UNIV|\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>weak_formula y; supp y \\<subseteq> supp P;\n         y distinguishes P from Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  |{p \\<bullet> x |p. supp P \\<sharp>* p}| <o natLeq +c |UNIV|", "have card_B: \"|?B| <o natLeq +c |UNIV :: 'idx set|\""], ["proof (prove)\nusing this:\n  |{p \\<bullet> x |p. supp P \\<sharp>* p}| <o natLeq +c |UNIV|\n\ngoal (1 subgoal):\n 1. |{p \\<bullet> x |p. supp P \\<sharp>* p}| <o natLeq +c |UNIV|", "."], ["proof (state)\nthis:\n  |{p \\<bullet> x |p. supp P \\<sharp>* p}| <o natLeq +c |UNIV|\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>weak_formula y; supp y \\<subseteq> supp P;\n         y distinguishes P from Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?y = \"Conj (Abs_bset ?B) :: ('idx, 'pred, 'act) formula\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>weak_formula y; supp y \\<subseteq> supp P;\n         y distinguishes P from Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"weak_formula ?y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_formula (Conj (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p}))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (supp (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p}))\n 2. \\<And>xa.\n       xa \\<in> set_bset\n                 (Abs_bset\n                   {p \\<bullet> x |p. supp P \\<sharp>* p}) \\<Longrightarrow>\n       weak_formula xa", "show \"finite (supp (Abs_bset ?B :: _ set['idx]))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (supp (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p}))", "using finite_supp_B card_B"], ["proof (prove)\nusing this:\n  finite (supp {p \\<bullet> x |p. supp P \\<sharp>* p})\n  |{p \\<bullet> x |p. supp P \\<sharp>* p}| <o natLeq +c |UNIV|\n\ngoal (1 subgoal):\n 1. finite (supp (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p}))", "by simp"], ["proof (state)\nthis:\n  finite (supp (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p}))\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> set_bset\n                 (Abs_bset\n                   {p \\<bullet> x |p. supp P \\<sharp>* p}) \\<Longrightarrow>\n       weak_formula xa", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> set_bset\n                 (Abs_bset\n                   {p \\<bullet> x |p. supp P \\<sharp>* p}) \\<Longrightarrow>\n       weak_formula xa", "fix x'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> set_bset\n                 (Abs_bset\n                   {p \\<bullet> x |p. supp P \\<sharp>* p}) \\<Longrightarrow>\n       weak_formula xa", "assume \"x' \\<in> set_bset (Abs_bset ?B :: _ set['idx])\""], ["proof (state)\nthis:\n  x' \\<in> set_bset (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p})\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> set_bset\n                 (Abs_bset\n                   {p \\<bullet> x |p. supp P \\<sharp>* p}) \\<Longrightarrow>\n       weak_formula xa", "with card_B"], ["proof (chain)\npicking this:\n  |{p \\<bullet> x |p. supp P \\<sharp>* p}| <o natLeq +c |UNIV|\n  x' \\<in> set_bset (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p})", "obtain p where \"x' = p \\<bullet> x\""], ["proof (prove)\nusing this:\n  |{p \\<bullet> x |p. supp P \\<sharp>* p}| <o natLeq +c |UNIV|\n  x' \\<in> set_bset (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p})\n\ngoal (1 subgoal):\n 1. (\\<And>p. x' = p \\<bullet> x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Abs_bset_inverse mem_Collect_eq"], ["proof (prove)\nusing this:\n  |{p \\<bullet> x |p. supp P \\<sharp>* p}| <o natLeq +c |UNIV|\n  x' \\<in> set_bset (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p})\n  ?y \\<in> {A. |A| <o natLeq +c |UNIV|} \\<Longrightarrow>\n  set_bset (Abs_bset ?y) = ?y\n  (?a \\<in> Collect ?P) = ?P ?a\n\ngoal (1 subgoal):\n 1. (\\<And>p. x' = p \\<bullet> x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x' = p \\<bullet> x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> set_bset\n                 (Abs_bset\n                   {p \\<bullet> x |p. supp P \\<sharp>* p}) \\<Longrightarrow>\n       weak_formula xa", "then"], ["proof (chain)\npicking this:\n  x' = p \\<bullet> x", "show \"weak_formula x'\""], ["proof (prove)\nusing this:\n  x' = p \\<bullet> x\n\ngoal (1 subgoal):\n 1. weak_formula x'", "using \\<open>weak_formula x\\<close>"], ["proof (prove)\nusing this:\n  x' = p \\<bullet> x\n  weak_formula x\n\ngoal (1 subgoal):\n 1. weak_formula x'", "by (metis weak_formula_eqvt)"], ["proof (state)\nthis:\n  weak_formula x'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weak_formula (Conj (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p}))\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>weak_formula y; supp y \\<subseteq> supp P;\n         y distinguishes P from Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  weak_formula (Conj (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p}))\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>weak_formula y; supp y \\<subseteq> supp P;\n         y distinguishes P from Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from finite_supp_B and card_B and supp_B_subset_supp_P"], ["proof (chain)\npicking this:\n  finite (supp {p \\<bullet> x |p. supp P \\<sharp>* p})\n  |{p \\<bullet> x |p. supp P \\<sharp>* p}| <o natLeq +c |UNIV|\n  supp {p \\<bullet> x |p. supp P \\<sharp>* p} \\<subseteq> supp P", "have \"supp ?y \\<subseteq> supp P\""], ["proof (prove)\nusing this:\n  finite (supp {p \\<bullet> x |p. supp P \\<sharp>* p})\n  |{p \\<bullet> x |p. supp P \\<sharp>* p}| <o natLeq +c |UNIV|\n  supp {p \\<bullet> x |p. supp P \\<sharp>* p} \\<subseteq> supp P\n\ngoal (1 subgoal):\n 1. supp (Conj (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p}))\n    \\<subseteq> supp P", "by simp"], ["proof (state)\nthis:\n  supp (Conj (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p}))\n  \\<subseteq> supp P\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>weak_formula y; supp y \\<subseteq> supp P;\n         y distinguishes P from Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  supp (Conj (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p}))\n  \\<subseteq> supp P\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>weak_formula y; supp y \\<subseteq> supp P;\n         y distinguishes P from Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"?y distinguishes P from Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Conj\n     (Abs_bset\n       {p \\<bullet> x |p. supp P \\<sharp>* p}) distinguishes P from Q", "unfolding is_distinguishing_formula_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<Turnstile>\n    Conj (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p}) \\<and>\n    \\<not> Q \\<Turnstile>\n           Conj (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. P \\<Turnstile> Conj (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p})\n 2. \\<not> Q \\<Turnstile>\n           Conj (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p})", "from assms"], ["proof (chain)\npicking this:\n  weak_formula x\n  x distinguishes P from Q", "show \"P \\<Turnstile> ?y\""], ["proof (prove)\nusing this:\n  weak_formula x\n  x distinguishes P from Q\n\ngoal (1 subgoal):\n 1. P \\<Turnstile> Conj (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p})", "by (auto simp add: card_B finite_supp_B) (metis is_distinguishing_formula_def supp_perm_eq valid_eqvt)"], ["proof (state)\nthis:\n  P \\<Turnstile> Conj (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p})\n\ngoal (1 subgoal):\n 1. \\<not> Q \\<Turnstile>\n           Conj (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> Q \\<Turnstile>\n           Conj (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p})", "from assms"], ["proof (chain)\npicking this:\n  weak_formula x\n  x distinguishes P from Q", "show \"\\<not> Q \\<Turnstile> ?y\""], ["proof (prove)\nusing this:\n  weak_formula x\n  x distinguishes P from Q\n\ngoal (1 subgoal):\n 1. \\<not> Q \\<Turnstile>\n           Conj (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p})", "by (auto simp add: card_B finite_supp_B) (metis is_distinguishing_formula_def permute_zero fresh_star_zero)"], ["proof (state)\nthis:\n  \\<not> Q \\<Turnstile>\n         Conj (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Conj\n   (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p}) distinguishes P from Q\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>weak_formula y; supp y \\<subseteq> supp P;\n         y distinguishes P from Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  weak_formula (Conj (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p}))\n  supp (Conj (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p}))\n  \\<subseteq> supp P\n  Conj\n   (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p}) distinguishes P from Q", "show ?thesis"], ["proof (prove)\nusing this:\n  weak_formula (Conj (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p}))\n  supp (Conj (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p}))\n  \\<subseteq> supp P\n  Conj\n   (Abs_bset {p \\<bullet> x |p. supp P \\<sharp>* p}) distinguishes P from Q\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_equivalence_is_weak_bisimulation: \"is_weak_bisimulation weakly_logically_equivalent\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_weak_bisimulation (\\<equiv>\\<cdot>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_weak_bisimulation (\\<equiv>\\<cdot>)", "have \"symp weakly_logically_equivalent\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symp (\\<equiv>\\<cdot>)", "by (metis weakly_logically_equivalent_def sympI)"], ["proof (state)\nthis:\n  symp (\\<equiv>\\<cdot>)\n\ngoal (1 subgoal):\n 1. is_weak_bisimulation (\\<equiv>\\<cdot>)", "moreover  \\<comment> \\<open>weak static implication\\<close>"], ["proof (state)\nthis:\n  symp (\\<equiv>\\<cdot>)\n\ngoal (1 subgoal):\n 1. is_weak_bisimulation (\\<equiv>\\<cdot>)", "{"], ["proof (state)\nthis:\n  symp (\\<equiv>\\<cdot>)\n\ngoal (1 subgoal):\n 1. is_weak_bisimulation (\\<equiv>\\<cdot>)", "fix P Q \\<phi>"], ["proof (state)\ngoal (1 subgoal):\n 1. is_weak_bisimulation (\\<equiv>\\<cdot>)", "assume \"P \\<equiv>\\<cdot> Q\" and \"P \\<turnstile> \\<phi>\""], ["proof (state)\nthis:\n  P \\<equiv>\\<cdot> Q\n  P \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. is_weak_bisimulation (\\<equiv>\\<cdot>)", "then"], ["proof (chain)\npicking this:\n  P \\<equiv>\\<cdot> Q\n  P \\<turnstile> \\<phi>", "have \"\\<exists>Q'. Q \\<Rightarrow> Q' \\<and> P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>\""], ["proof (prove)\nusing this:\n  P \\<equiv>\\<cdot> Q\n  P \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       Q \\<Rightarrow> Q' \\<and>\n       P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "let ?Q' = \"{Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "assume \"\\<forall>Q'\\<in>?Q'. \\<not> P \\<equiv>\\<cdot> Q'\""], ["proof (state)\nthis:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}.\n     \\<not> P \\<equiv>\\<cdot> Q'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "then"], ["proof (chain)\npicking this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}.\n     \\<not> P \\<equiv>\\<cdot> Q'", "have \"\\<forall>Q'\\<in>?Q'. \\<exists>x :: ('idx, 'pred, 'act) formula. weak_formula x \\<and> x distinguishes P from Q'\""], ["proof (prove)\nusing this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}.\n     \\<not> P \\<equiv>\\<cdot> Q'\n\ngoal (1 subgoal):\n 1. \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}.\n       \\<exists>x. weak_formula x \\<and> x distinguishes P from Q'", "by (metis weakly_equivalent_iff_not_distinguished)"], ["proof (state)\nthis:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}.\n     \\<exists>x. weak_formula x \\<and> x distinguishes P from Q'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "then"], ["proof (chain)\npicking this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}.\n     \\<exists>x. weak_formula x \\<and> x distinguishes P from Q'", "have \"\\<forall>Q'\\<in>?Q'. \\<exists>x :: ('idx, 'pred, 'act) formula. weak_formula x \\<and> supp x \\<subseteq> supp P \\<and> x distinguishes P from Q'\""], ["proof (prove)\nusing this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}.\n     \\<exists>x. weak_formula x \\<and> x distinguishes P from Q'\n\ngoal (1 subgoal):\n 1. \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}.\n       \\<exists>x.\n          weak_formula x \\<and>\n          supp x \\<subseteq> supp P \\<and> x distinguishes P from Q'", "by (metis distinguished_bounded_support)"], ["proof (state)\nthis:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}.\n     \\<exists>x.\n        weak_formula x \\<and>\n        supp x \\<subseteq> supp P \\<and> x distinguishes P from Q'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "then"], ["proof (chain)\npicking this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}.\n     \\<exists>x.\n        weak_formula x \\<and>\n        supp x \\<subseteq> supp P \\<and> x distinguishes P from Q'", "obtain f :: \"'state \\<Rightarrow> ('idx, 'pred, 'act) formula\" where\n              *: \"\\<forall>Q'\\<in>?Q'. weak_formula (f Q') \\<and> supp (f Q') \\<subseteq> supp P \\<and> (f Q') distinguishes P from Q'\""], ["proof (prove)\nusing this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}.\n     \\<exists>x.\n        weak_formula x \\<and>\n        supp x \\<subseteq> supp P \\<and> x distinguishes P from Q'\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<forall>Q'\\<in>{Q'.\n                         Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}.\n           weak_formula (f Q') \\<and>\n           supp (f Q') \\<subseteq> supp P \\<and>\n           f Q' distinguishes P from Q' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}.\n     weak_formula (f Q') \\<and>\n     supp (f Q') \\<subseteq> supp P \\<and> f Q' distinguishes P from Q'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "have \"supp (f ` ?Q') \\<subseteq> supp P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})\n    \\<subseteq> supp P", "by (rule set_bounded_supp, fact finite_supp, cut_tac \"*\", blast)"], ["proof (state)\nthis:\n  supp (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})\n  \\<subseteq> supp P\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "then"], ["proof (chain)\npicking this:\n  supp (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})\n  \\<subseteq> supp P", "have finite_supp_image: \"finite (supp (f ` ?Q'))\""], ["proof (prove)\nusing this:\n  supp (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})\n  \\<subseteq> supp P\n\ngoal (1 subgoal):\n 1. finite\n     (supp (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}))", "using finite_supp rev_finite_subset"], ["proof (prove)\nusing this:\n  supp (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})\n  \\<subseteq> supp P\n  finite (supp ?x)\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite\n     (supp (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}))", "by blast"], ["proof (state)\nthis:\n  finite (supp (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "have \"|f ` ?Q'| \\<le>o |UNIV :: 'state set|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}| \\<le>o\n    |UNIV|", "using card_of_UNIV card_of_image ordLeq_transitive"], ["proof (prove)\nusing this:\n  |?A| \\<le>o |UNIV|\n  |?f ` ?A| \\<le>o |?A|\n  \\<lbrakk>?r \\<le>o ?r'; ?r' \\<le>o ?r''\\<rbrakk>\n  \\<Longrightarrow> ?r \\<le>o ?r''\n\ngoal (1 subgoal):\n 1. |f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}| \\<le>o\n    |UNIV|", "by blast"], ["proof (state)\nthis:\n  |f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}| \\<le>o |UNIV|\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "also"], ["proof (state)\nthis:\n  |f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}| \\<le>o |UNIV|\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "have \"|UNIV :: 'state set| <o |UNIV :: 'idx set|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |UNIV| <o |UNIV|", "by (metis card_idx_state)"], ["proof (state)\nthis:\n  |UNIV| <o |UNIV|\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "also"], ["proof (state)\nthis:\n  |UNIV| <o |UNIV|\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "have \"|UNIV :: 'idx set| \\<le>o natLeq +c |UNIV :: 'idx set|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |UNIV| \\<le>o natLeq +c |UNIV|", "by (metis Cnotzero_UNIV ordLeq_csum2)"], ["proof (state)\nthis:\n  |UNIV| \\<le>o natLeq +c |UNIV|\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "finally"], ["proof (chain)\npicking this:\n  |f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}| <o\n  natLeq +c |UNIV|", "have card_image: \"|f ` ?Q'| <o natLeq +c |UNIV :: 'idx set|\""], ["proof (prove)\nusing this:\n  |f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}| <o\n  natLeq +c |UNIV|\n\ngoal (1 subgoal):\n 1. |f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}| <o\n    natLeq +c |UNIV|", "."], ["proof (state)\nthis:\n  |f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}| <o\n  natLeq +c |UNIV|\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "let ?y = \"Conj (Abs_bset (f ` ?Q')) :: ('idx, 'pred, 'act) formula\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "have \"weak_formula ?y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_formula\n     (Conj\n       (Abs_bset\n         (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))", "proof (standard+)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite\n     (supp\n       (Abs_bset\n         (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))\n 2. \\<And>x.\n       x \\<in> set_bset\n                (Abs_bset\n                  (f `\n                   {Q'.\n                    Q \\<Rightarrow> Q' \\<and>\n                    Q' \\<turnstile> \\<phi>})) \\<Longrightarrow>\n       weak_formula x", "show \"finite (supp (Abs_bset (f ` ?Q') :: _ set['idx]))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     (supp\n       (Abs_bset\n         (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))", "using finite_supp_image card_image"], ["proof (prove)\nusing this:\n  finite (supp (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}))\n  |f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}| <o\n  natLeq +c |UNIV|\n\ngoal (1 subgoal):\n 1. finite\n     (supp\n       (Abs_bset\n         (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))", "by simp"], ["proof (state)\nthis:\n  finite\n   (supp\n     (Abs_bset\n       (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_bset\n                (Abs_bset\n                  (f `\n                   {Q'.\n                    Q \\<Rightarrow> Q' \\<and>\n                    Q' \\<turnstile> \\<phi>})) \\<Longrightarrow>\n       weak_formula x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_bset\n                (Abs_bset\n                  (f `\n                   {Q'.\n                    Q \\<Rightarrow> Q' \\<and>\n                    Q' \\<turnstile> \\<phi>})) \\<Longrightarrow>\n       weak_formula x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_bset\n                (Abs_bset\n                  (f `\n                   {Q'.\n                    Q \\<Rightarrow> Q' \\<and>\n                    Q' \\<turnstile> \\<phi>})) \\<Longrightarrow>\n       weak_formula x", "assume \"x \\<in> set_bset (Abs_bset (f ` ?Q') :: _ set['idx])\""], ["proof (state)\nthis:\n  x \\<in> set_bset\n           (Abs_bset\n             (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_bset\n                (Abs_bset\n                  (f `\n                   {Q'.\n                    Q \\<Rightarrow> Q' \\<and>\n                    Q' \\<turnstile> \\<phi>})) \\<Longrightarrow>\n       weak_formula x", "with card_image"], ["proof (chain)\npicking this:\n  |f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}| <o\n  natLeq +c |UNIV|\n  x \\<in> set_bset\n           (Abs_bset\n             (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}))", "obtain Q' where \"Q' \\<in> ?Q'\" and \"x = f Q'\""], ["proof (prove)\nusing this:\n  |f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}| <o\n  natLeq +c |UNIV|\n  x \\<in> set_bset\n           (Abs_bset\n             (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}))\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q' \\<in> {Q'.\n                           Q \\<Rightarrow> Q' \\<and>\n                           Q' \\<turnstile> \\<phi>};\n         x = f Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Abs_bset_inverse imageE set_bset set_bset_to_set_bset"], ["proof (prove)\nusing this:\n  |f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}| <o\n  natLeq +c |UNIV|\n  x \\<in> set_bset\n           (Abs_bset\n             (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}))\n  ?y \\<in> {A. |A| <o natLeq +c |UNIV|} \\<Longrightarrow>\n  set_bset (Abs_bset ?y) = ?y\n  \\<lbrakk>?b \\<in> ?f ` ?A;\n   \\<And>x.\n      \\<lbrakk>?b = ?f x; x \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  set_bset ?x \\<in> {A. |A| <o natLeq +c |UNIV|}\n  |?A| <o natLeq +c |UNIV| \\<Longrightarrow>\n  set_bset (the_inv set_bset ?A) = ?A\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q' \\<in> {Q'.\n                           Q \\<Rightarrow> Q' \\<and>\n                           Q' \\<turnstile> \\<phi>};\n         x = f Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Q' \\<in> {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}\n  x = f Q'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_bset\n                (Abs_bset\n                  (f `\n                   {Q'.\n                    Q \\<Rightarrow> Q' \\<and>\n                    Q' \\<turnstile> \\<phi>})) \\<Longrightarrow>\n       weak_formula x", "then"], ["proof (chain)\npicking this:\n  Q' \\<in> {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}\n  x = f Q'", "show \"weak_formula x\""], ["proof (prove)\nusing this:\n  Q' \\<in> {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}\n  x = f Q'\n\ngoal (1 subgoal):\n 1. weak_formula x", "using \"*\""], ["proof (prove)\nusing this:\n  Q' \\<in> {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}\n  x = f Q'\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}.\n     weak_formula (f Q') \\<and>\n     supp (f Q') \\<subseteq> supp P \\<and> f Q' distinguishes P from Q'\n\ngoal (1 subgoal):\n 1. weak_formula x", "by metis"], ["proof (state)\nthis:\n  weak_formula x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weak_formula\n   (Conj\n     (Abs_bset\n       (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "let ?z = \"\\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>(Conj (binsert (Pred \\<phi>) (bsingleton ?y)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "have \"weak_formula ?z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_formula\n     \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n          (binsert (Pred \\<phi>)\n            (bsingleton\n              (Conj\n                (Abs_bset\n                  (f `\n                   {Q'.\n                    Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))", "by standard (fact \\<open>weak_formula ?y\\<close>)"], ["proof (state)\nthis:\n  weak_formula\n   \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n        (binsert (Pred \\<phi>)\n          (bsingleton\n            (Conj\n              (Abs_bset\n                (f `\n                 {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "moreover"], ["proof (state)\nthis:\n  weak_formula\n   \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n        (binsert (Pred \\<phi>)\n          (bsingleton\n            (Conj\n              (Abs_bset\n                (f `\n                 {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "have \"P \\<Turnstile> ?z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<Turnstile>\n    \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n         (binsert (Pred \\<phi>)\n           (bsingleton\n             (Conj\n               (Abs_bset\n                 (f `\n                  {Q'.\n                   Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<Turnstile>\n    \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n         (binsert (Pred \\<phi>)\n           (bsingleton\n             (Conj\n               (Abs_bset\n                 (f `\n                  {Q'.\n                   Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))", "have \"P \\<Rightarrow>\\<langle>\\<tau>\\<rangle> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<Rightarrow>\\<langle>\\<tau>\\<rangle> P", "by simp"], ["proof (state)\nthis:\n  P \\<Rightarrow>\\<langle>\\<tau>\\<rangle> P\n\ngoal (1 subgoal):\n 1. P \\<Turnstile>\n    \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n         (binsert (Pred \\<phi>)\n           (bsingleton\n             (Conj\n               (Abs_bset\n                 (f `\n                  {Q'.\n                   Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))", "moreover"], ["proof (state)\nthis:\n  P \\<Rightarrow>\\<langle>\\<tau>\\<rangle> P\n\ngoal (1 subgoal):\n 1. P \\<Turnstile>\n    \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n         (binsert (Pred \\<phi>)\n           (bsingleton\n             (Conj\n               (Abs_bset\n                 (f `\n                  {Q'.\n                   Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))", "{"], ["proof (state)\nthis:\n  P \\<Rightarrow>\\<langle>\\<tau>\\<rangle> P\n\ngoal (1 subgoal):\n 1. P \\<Turnstile>\n    \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n         (binsert (Pred \\<phi>)\n           (bsingleton\n             (Conj\n               (Abs_bset\n                 (f `\n                  {Q'.\n                   Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))", "fix Q'"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<Turnstile>\n    \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n         (binsert (Pred \\<phi>)\n           (bsingleton\n             (Conj\n               (Abs_bset\n                 (f `\n                  {Q'.\n                   Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))", "assume \"Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>\""], ["proof (state)\nthis:\n  Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. P \\<Turnstile>\n    \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n         (binsert (Pred \\<phi>)\n           (bsingleton\n             (Conj\n               (Abs_bset\n                 (f `\n                  {Q'.\n                   Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))", "with \"*\""], ["proof (chain)\npicking this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}.\n     weak_formula (f Q') \\<and>\n     supp (f Q') \\<subseteq> supp P \\<and> f Q' distinguishes P from Q'\n  Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>", "have \"P \\<Turnstile> f Q'\""], ["proof (prove)\nusing this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}.\n     weak_formula (f Q') \\<and>\n     supp (f Q') \\<subseteq> supp P \\<and> f Q' distinguishes P from Q'\n  Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. P \\<Turnstile> f Q'", "by (metis is_distinguishing_formula_def mem_Collect_eq)"], ["proof (state)\nthis:\n  P \\<Turnstile> f Q'\n\ngoal (1 subgoal):\n 1. P \\<Turnstile>\n    \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n         (binsert (Pred \\<phi>)\n           (bsingleton\n             (Conj\n               (Abs_bset\n                 (f `\n                  {Q'.\n                   Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))", "}"], ["proof (state)\nthis:\n  Q \\<Rightarrow> ?Q'9 \\<and> ?Q'9 \\<turnstile> \\<phi> \\<Longrightarrow>\n  P \\<Turnstile> f ?Q'9\n\ngoal (1 subgoal):\n 1. P \\<Turnstile>\n    \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n         (binsert (Pred \\<phi>)\n           (bsingleton\n             (Conj\n               (Abs_bset\n                 (f `\n                  {Q'.\n                   Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))", "with \\<open>P \\<turnstile> \\<phi>\\<close>"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<phi>\n  Q \\<Rightarrow> ?Q'9 \\<and> ?Q'9 \\<turnstile> \\<phi> \\<Longrightarrow>\n  P \\<Turnstile> f ?Q'9", "have \"P \\<Turnstile> Conj (binsert (Pred \\<phi>) (bsingleton ?y))\""], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<phi>\n  Q \\<Rightarrow> ?Q'9 \\<and> ?Q'9 \\<turnstile> \\<phi> \\<Longrightarrow>\n  P \\<Turnstile> f ?Q'9\n\ngoal (1 subgoal):\n 1. P \\<Turnstile>\n    Conj\n     (binsert (Pred \\<phi>)\n       (bsingleton\n         (Conj\n           (Abs_bset\n             (f `\n              {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))", "by (simp add: binsert.rep_eq finite_supp_image card_image)"], ["proof (state)\nthis:\n  P \\<Turnstile>\n  Conj\n   (binsert (Pred \\<phi>)\n     (bsingleton\n       (Conj\n         (Abs_bset\n           (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))\n\ngoal (1 subgoal):\n 1. P \\<Turnstile>\n    \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n         (binsert (Pred \\<phi>)\n           (bsingleton\n             (Conj\n               (Abs_bset\n                 (f `\n                  {Q'.\n                   Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))", "ultimately"], ["proof (chain)\npicking this:\n  P \\<Rightarrow>\\<langle>\\<tau>\\<rangle> P\n  P \\<Turnstile>\n  Conj\n   (binsert (Pred \\<phi>)\n     (bsingleton\n       (Conj\n         (Abs_bset\n           (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<Rightarrow>\\<langle>\\<tau>\\<rangle> P\n  P \\<Turnstile>\n  Conj\n   (binsert (Pred \\<phi>)\n     (bsingleton\n       (Conj\n         (Abs_bset\n           (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))\n\ngoal (1 subgoal):\n 1. P \\<Turnstile>\n    \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n         (binsert (Pred \\<phi>)\n           (bsingleton\n             (Conj\n               (Abs_bset\n                 (f `\n                  {Q'.\n                   Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))", "using valid_weak_action_modality"], ["proof (prove)\nusing this:\n  P \\<Rightarrow>\\<langle>\\<tau>\\<rangle> P\n  P \\<Turnstile>\n  Conj\n   (binsert (Pred \\<phi>)\n     (bsingleton\n       (Conj\n         (Abs_bset\n           (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))\n  ?P \\<Turnstile> \\<langle>\\<langle>?\\<alpha>\\<rangle>\\<rangle>?x =\n  (\\<exists>\\<alpha>' x' P'.\n      Act ?\\<alpha> ?x = Act \\<alpha>' x' \\<and>\n      ?P \\<Rightarrow>\\<langle>\\<alpha>'\\<rangle> P' \\<and>\n      P' \\<Turnstile> x')\n\ngoal (1 subgoal):\n 1. P \\<Turnstile>\n    \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n         (binsert (Pred \\<phi>)\n           (bsingleton\n             (Conj\n               (Abs_bset\n                 (f `\n                  {Q'.\n                   Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))", "by blast"], ["proof (state)\nthis:\n  P \\<Turnstile>\n  \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n       (binsert (Pred \\<phi>)\n         (bsingleton\n           (Conj\n             (Abs_bset\n               (f `\n                {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<Turnstile>\n  \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n       (binsert (Pred \\<phi>)\n         (bsingleton\n           (Conj\n             (Abs_bset\n               (f `\n                {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "moreover"], ["proof (state)\nthis:\n  P \\<Turnstile>\n  \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n       (binsert (Pred \\<phi>)\n         (bsingleton\n           (Conj\n             (Abs_bset\n               (f `\n                {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "have \"\\<not> Q \\<Turnstile> ?z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Q \\<Turnstile>\n           \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n                (binsert (Pred \\<phi>)\n                  (bsingleton\n                    (Conj\n                      (Abs_bset\n                        (f `\n                         {Q'.\n                          Q \\<Rightarrow> Q' \\<and>\n                          Q' \\<turnstile> \\<phi>})))))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. Q \\<Turnstile>\n    \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n         (binsert (Pred \\<phi>)\n           (bsingleton\n             (Conj\n               (Abs_bset\n                 (f `\n                  {Q'.\n                   Q \\<Rightarrow> Q' \\<and>\n                   Q' \\<turnstile> \\<phi>}))))) \\<Longrightarrow>\n    False", "assume \"Q \\<Turnstile> ?z\""], ["proof (state)\nthis:\n  Q \\<Turnstile>\n  \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n       (binsert (Pred \\<phi>)\n         (bsingleton\n           (Conj\n             (Abs_bset\n               (f `\n                {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile>\n    \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n         (binsert (Pred \\<phi>)\n           (bsingleton\n             (Conj\n               (Abs_bset\n                 (f `\n                  {Q'.\n                   Q \\<Rightarrow> Q' \\<and>\n                   Q' \\<turnstile> \\<phi>}))))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  Q \\<Turnstile>\n  \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n       (binsert (Pred \\<phi>)\n         (bsingleton\n           (Conj\n             (Abs_bset\n               (f `\n                {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))", "obtain Q' where 1: \"Q \\<Rightarrow> Q'\" and \"Q' \\<Turnstile> Conj (binsert (Pred \\<phi>) (bsingleton ?y))\""], ["proof (prove)\nusing this:\n  Q \\<Turnstile>\n  \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n       (binsert (Pred \\<phi>)\n         (bsingleton\n           (Conj\n             (Abs_bset\n               (f `\n                {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q \\<Rightarrow> Q';\n         Q' \\<Turnstile>\n         Conj\n          (binsert (Pred \\<phi>)\n            (bsingleton\n              (Conj\n                (Abs_bset\n                  (f `\n                   {Q'.\n                    Q \\<Rightarrow> Q' \\<and>\n                    Q' \\<turnstile> \\<phi>})))))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using valid_weak_action_modality"], ["proof (prove)\nusing this:\n  Q \\<Turnstile>\n  \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n       (binsert (Pred \\<phi>)\n         (bsingleton\n           (Conj\n             (Abs_bset\n               (f `\n                {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))\n  ?P \\<Turnstile> \\<langle>\\<langle>?\\<alpha>\\<rangle>\\<rangle>?x =\n  (\\<exists>\\<alpha>' x' P'.\n      Act ?\\<alpha> ?x = Act \\<alpha>' x' \\<and>\n      ?P \\<Rightarrow>\\<langle>\\<alpha>'\\<rangle> P' \\<and>\n      P' \\<Turnstile> x')\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q \\<Rightarrow> Q';\n         Q' \\<Turnstile>\n         Conj\n          (binsert (Pred \\<phi>)\n            (bsingleton\n              (Conj\n                (Abs_bset\n                  (f `\n                   {Q'.\n                    Q \\<Rightarrow> Q' \\<and>\n                    Q' \\<turnstile> \\<phi>})))))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Q \\<Rightarrow> Q'\n  Q' \\<Turnstile>\n  Conj\n   (binsert (Pred \\<phi>)\n     (bsingleton\n       (Conj\n         (Abs_bset\n           (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile>\n    \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n         (binsert (Pred \\<phi>)\n           (bsingleton\n             (Conj\n               (Abs_bset\n                 (f `\n                  {Q'.\n                   Q \\<Rightarrow> Q' \\<and>\n                   Q' \\<turnstile> \\<phi>}))))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  Q \\<Rightarrow> Q'\n  Q' \\<Turnstile>\n  Conj\n   (binsert (Pred \\<phi>)\n     (bsingleton\n       (Conj\n         (Abs_bset\n           (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))", "have 2: \"Q' \\<turnstile> \\<phi>\" and 3: \"Q' \\<Turnstile> ?y\""], ["proof (prove)\nusing this:\n  Q \\<Rightarrow> Q'\n  Q' \\<Turnstile>\n  Conj\n   (binsert (Pred \\<phi>)\n     (bsingleton\n       (Conj\n         (Abs_bset\n           (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))\n\ngoal (1 subgoal):\n 1. Q' \\<turnstile> \\<phi> &&&\n    Q' \\<Turnstile>\n    Conj\n     (Abs_bset (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}))", "by (simp add: binsert.rep_eq finite_supp_image card_image)+"], ["proof (state)\nthis:\n  Q' \\<turnstile> \\<phi>\n  Q' \\<Turnstile>\n  Conj\n   (Abs_bset (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}))\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile>\n    \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n         (binsert (Pred \\<phi>)\n           (bsingleton\n             (Conj\n               (Abs_bset\n                 (f `\n                  {Q'.\n                   Q \\<Rightarrow> Q' \\<and>\n                   Q' \\<turnstile> \\<phi>}))))) \\<Longrightarrow>\n    False", "from 3"], ["proof (chain)\npicking this:\n  Q' \\<Turnstile>\n  Conj\n   (Abs_bset (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}))", "have \"\\<And>Q''. Q \\<Rightarrow> Q'' \\<and> Q'' \\<turnstile> \\<phi> \\<longrightarrow> Q' \\<Turnstile> f Q''\""], ["proof (prove)\nusing this:\n  Q' \\<Turnstile>\n  Conj\n   (Abs_bset (f ` {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}))\n\ngoal (1 subgoal):\n 1. \\<And>Q''.\n       Q \\<Rightarrow> Q'' \\<and> Q'' \\<turnstile> \\<phi> \\<longrightarrow>\n       Q' \\<Turnstile> f Q''", "by (simp add: finite_supp_image card_image)"], ["proof (state)\nthis:\n  Q \\<Rightarrow> ?Q''7 \\<and> ?Q''7 \\<turnstile> \\<phi> \\<longrightarrow>\n  Q' \\<Turnstile> f ?Q''7\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile>\n    \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n         (binsert (Pred \\<phi>)\n           (bsingleton\n             (Conj\n               (Abs_bset\n                 (f `\n                  {Q'.\n                   Q \\<Rightarrow> Q' \\<and>\n                   Q' \\<turnstile> \\<phi>}))))) \\<Longrightarrow>\n    False", "with 1 and 2 and \"*\""], ["proof (chain)\npicking this:\n  Q \\<Rightarrow> Q'\n  Q' \\<turnstile> \\<phi>\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}.\n     weak_formula (f Q') \\<and>\n     supp (f Q') \\<subseteq> supp P \\<and> f Q' distinguishes P from Q'\n  Q \\<Rightarrow> ?Q''7 \\<and> ?Q''7 \\<turnstile> \\<phi> \\<longrightarrow>\n  Q' \\<Turnstile> f ?Q''7", "show False"], ["proof (prove)\nusing this:\n  Q \\<Rightarrow> Q'\n  Q' \\<turnstile> \\<phi>\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}.\n     weak_formula (f Q') \\<and>\n     supp (f Q') \\<subseteq> supp P \\<and> f Q' distinguishes P from Q'\n  Q \\<Rightarrow> ?Q''7 \\<and> ?Q''7 \\<turnstile> \\<phi> \\<longrightarrow>\n  Q' \\<Turnstile> f ?Q''7\n\ngoal (1 subgoal):\n 1. False", "using is_distinguishing_formula_def"], ["proof (prove)\nusing this:\n  Q \\<Rightarrow> Q'\n  Q' \\<turnstile> \\<phi>\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}.\n     weak_formula (f Q') \\<and>\n     supp (f Q') \\<subseteq> supp P \\<and> f Q' distinguishes P from Q'\n  Q \\<Rightarrow> ?Q''7 \\<and> ?Q''7 \\<turnstile> \\<phi> \\<longrightarrow>\n  Q' \\<Turnstile> f ?Q''7\n  ?x distinguishes ?P from ?Q \\<equiv>\n  ?P \\<Turnstile> ?x \\<and> \\<not> ?Q \\<Turnstile> ?x\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> Q \\<Turnstile>\n         \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n              (binsert (Pred \\<phi>)\n                (bsingleton\n                  (Conj\n                    (Abs_bset\n                      (f `\n                       {Q'.\n                        Q \\<Rightarrow> Q' \\<and>\n                        Q' \\<turnstile> \\<phi>})))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "ultimately"], ["proof (chain)\npicking this:\n  weak_formula\n   \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n        (binsert (Pred \\<phi>)\n          (bsingleton\n            (Conj\n              (Abs_bset\n                (f `\n                 {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))\n  P \\<Turnstile>\n  \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n       (binsert (Pred \\<phi>)\n         (bsingleton\n           (Conj\n             (Abs_bset\n               (f `\n                {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))\n  \\<not> Q \\<Turnstile>\n         \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n              (binsert (Pred \\<phi>)\n                (bsingleton\n                  (Conj\n                    (Abs_bset\n                      (f `\n                       {Q'.\n                        Q \\<Rightarrow> Q' \\<and>\n                        Q' \\<turnstile> \\<phi>})))))", "have False"], ["proof (prove)\nusing this:\n  weak_formula\n   \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n        (binsert (Pred \\<phi>)\n          (bsingleton\n            (Conj\n              (Abs_bset\n                (f `\n                 {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))\n  P \\<Turnstile>\n  \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n       (binsert (Pred \\<phi>)\n         (bsingleton\n           (Conj\n             (Abs_bset\n               (f `\n                {Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>})))))\n  \\<not> Q \\<Turnstile>\n         \\<langle>\\<langle>\\<tau>\\<rangle>\\<rangle>Conj\n              (binsert (Pred \\<phi>)\n                (bsingleton\n                  (Conj\n                    (Abs_bset\n                      (f `\n                       {Q'.\n                        Q \\<Rightarrow> Q' \\<and>\n                        Q' \\<turnstile> \\<phi>})))))\n\ngoal (1 subgoal):\n 1. False", "by (metis \\<open>P \\<equiv>\\<cdot> Q\\<close> weakly_logically_equivalent_def)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "}"], ["proof (state)\nthis:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}.\n     \\<not> P \\<equiv>\\<cdot> Q' \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; P \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow> Q' \\<and>\n                         P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "then"], ["proof (chain)\npicking this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}.\n     \\<not> P \\<equiv>\\<cdot> Q' \\<Longrightarrow>\n  False", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow> Q' \\<and> Q' \\<turnstile> \\<phi>}.\n     \\<not> P \\<equiv>\\<cdot> Q' \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       Q \\<Rightarrow> Q' \\<and>\n       P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>", "by blast"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     Q \\<Rightarrow> Q' \\<and>\n     P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     Q \\<Rightarrow> Q' \\<and>\n     P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. is_weak_bisimulation (\\<equiv>\\<cdot>)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?P9 \\<equiv>\\<cdot> ?Q9; ?P9 \\<turnstile> ?\\<phi>9\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?Q9 \\<Rightarrow> Q' \\<and>\n                       ?P9 \\<equiv>\\<cdot> Q' \\<and>\n                       Q' \\<turnstile> ?\\<phi>9\n\ngoal (1 subgoal):\n 1. is_weak_bisimulation (\\<equiv>\\<cdot>)", "moreover  \\<comment> \\<open>weak simulation\\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>?P9 \\<equiv>\\<cdot> ?Q9; ?P9 \\<turnstile> ?\\<phi>9\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?Q9 \\<Rightarrow> Q' \\<and>\n                       ?P9 \\<equiv>\\<cdot> Q' \\<and>\n                       Q' \\<turnstile> ?\\<phi>9\n\ngoal (1 subgoal):\n 1. is_weak_bisimulation (\\<equiv>\\<cdot>)", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?P9 \\<equiv>\\<cdot> ?Q9; ?P9 \\<turnstile> ?\\<phi>9\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?Q9 \\<Rightarrow> Q' \\<and>\n                       ?P9 \\<equiv>\\<cdot> Q' \\<and>\n                       Q' \\<turnstile> ?\\<phi>9\n\ngoal (1 subgoal):\n 1. is_weak_bisimulation (\\<equiv>\\<cdot>)", "fix P Q \\<alpha> P'"], ["proof (state)\ngoal (1 subgoal):\n 1. is_weak_bisimulation (\\<equiv>\\<cdot>)", "assume \"P \\<equiv>\\<cdot> Q\" and \"bn \\<alpha> \\<sharp>* Q\" and \"P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\""], ["proof (state)\nthis:\n  P \\<equiv>\\<cdot> Q\n  bn \\<alpha> \\<sharp>* Q\n  P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\n\ngoal (1 subgoal):\n 1. is_weak_bisimulation (\\<equiv>\\<cdot>)", "then"], ["proof (chain)\npicking this:\n  P \\<equiv>\\<cdot> Q\n  bn \\<alpha> \\<sharp>* Q\n  P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>", "have \"\\<exists>Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and> P' \\<equiv>\\<cdot> Q'\""], ["proof (prove)\nusing this:\n  P \\<equiv>\\<cdot> Q\n  bn \\<alpha> \\<sharp>* Q\n  P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n       P' \\<equiv>\\<cdot> Q'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "let ?Q' = \"{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "assume \"\\<forall>Q'\\<in>?Q'. \\<not> P' \\<equiv>\\<cdot> Q'\""], ["proof (state)\nthis:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n     \\<not> P' \\<equiv>\\<cdot> Q'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "then"], ["proof (chain)\npicking this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n     \\<not> P' \\<equiv>\\<cdot> Q'", "have \"\\<forall>Q'\\<in>?Q'. \\<exists>x :: ('idx, 'pred, 'act) formula. weak_formula x \\<and> x distinguishes P' from Q'\""], ["proof (prove)\nusing this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n     \\<not> P' \\<equiv>\\<cdot> Q'\n\ngoal (1 subgoal):\n 1. \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n       \\<exists>x. weak_formula x \\<and> x distinguishes P' from Q'", "by (metis weakly_equivalent_iff_not_distinguished)"], ["proof (state)\nthis:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n     \\<exists>x. weak_formula x \\<and> x distinguishes P' from Q'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "then"], ["proof (chain)\npicking this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n     \\<exists>x. weak_formula x \\<and> x distinguishes P' from Q'", "have \"\\<forall>Q'\\<in>?Q'. \\<exists>x :: ('idx, 'pred, 'act) formula. weak_formula x \\<and> supp x \\<subseteq> supp P' \\<and> x distinguishes P' from Q'\""], ["proof (prove)\nusing this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n     \\<exists>x. weak_formula x \\<and> x distinguishes P' from Q'\n\ngoal (1 subgoal):\n 1. \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n       \\<exists>x.\n          weak_formula x \\<and>\n          supp x \\<subseteq> supp P' \\<and> x distinguishes P' from Q'", "by (metis distinguished_bounded_support)"], ["proof (state)\nthis:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n     \\<exists>x.\n        weak_formula x \\<and>\n        supp x \\<subseteq> supp P' \\<and> x distinguishes P' from Q'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "then"], ["proof (chain)\npicking this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n     \\<exists>x.\n        weak_formula x \\<and>\n        supp x \\<subseteq> supp P' \\<and> x distinguishes P' from Q'", "obtain f :: \"'state \\<Rightarrow> ('idx, 'pred, 'act) formula\" where\n              *: \"\\<forall>Q'\\<in>?Q'. weak_formula (f Q') \\<and> supp (f Q') \\<subseteq> supp P' \\<and> (f Q') distinguishes P' from Q'\""], ["proof (prove)\nusing this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n     \\<exists>x.\n        weak_formula x \\<and>\n        supp x \\<subseteq> supp P' \\<and> x distinguishes P' from Q'\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n           weak_formula (f Q') \\<and>\n           supp (f Q') \\<subseteq> supp P' \\<and>\n           f Q' distinguishes P' from Q' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n     weak_formula (f Q') \\<and>\n     supp (f Q') \\<subseteq> supp P' \\<and> f Q' distinguishes P' from Q'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "have \"supp P' supports (f ` ?Q')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp P' supports f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}", "unfolding supports_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b.\n       a \\<notin> supp P' \\<and> b \\<notin> supp P' \\<longrightarrow>\n       (a \\<rightleftharpoons> b) \\<bullet> f `\n      Collect (weak_transition Q \\<alpha>) =\n       f ` Collect (weak_transition Q \\<alpha>)", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<notin> supp P'; b \\<notin> supp P'\\<rbrakk>\n       \\<Longrightarrow> (a \\<rightleftharpoons> b) \\<bullet> f `\n                        Collect (weak_transition Q \\<alpha>) =\n                         f ` Collect (weak_transition Q \\<alpha>)", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<notin> supp P'; b \\<notin> supp P'\\<rbrakk>\n       \\<Longrightarrow> (a \\<rightleftharpoons> b) \\<bullet> f `\n                        Collect (weak_transition Q \\<alpha>) =\n                         f ` Collect (weak_transition Q \\<alpha>)", "assume a: \"a \\<notin> supp P'\" and b: \"b \\<notin> supp P'\""], ["proof (state)\nthis:\n  a \\<notin> supp P'\n  b \\<notin> supp P'\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<notin> supp P'; b \\<notin> supp P'\\<rbrakk>\n       \\<Longrightarrow> (a \\<rightleftharpoons> b) \\<bullet> f `\n                        Collect (weak_transition Q \\<alpha>) =\n                         f ` Collect (weak_transition Q \\<alpha>)", "have \"(a \\<rightleftharpoons> b) \\<bullet> (f ` ?Q') \\<subseteq> f ` ?Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<rightleftharpoons> b) \\<bullet> f `\n   {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n    \\<subseteq> f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (a \\<rightleftharpoons> b) \\<bullet> f `\n              {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n               Q'} \\<Longrightarrow>\n       x \\<in> f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (a \\<rightleftharpoons> b) \\<bullet> f `\n              {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n               Q'} \\<Longrightarrow>\n       x \\<in> f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}", "assume \"x \\<in> (a \\<rightleftharpoons> b) \\<bullet> (f ` ?Q')\""], ["proof (state)\nthis:\n  x \\<in> (a \\<rightleftharpoons> b) \\<bullet> f `\n         {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (a \\<rightleftharpoons> b) \\<bullet> f `\n              {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n               Q'} \\<Longrightarrow>\n       x \\<in> f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}", "then"], ["proof (chain)\npicking this:\n  x \\<in> (a \\<rightleftharpoons> b) \\<bullet> f `\n         {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}", "obtain Q' where 1: \"x = (a \\<rightleftharpoons> b) \\<bullet> f Q'\" and 2: \"Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\""], ["proof (prove)\nusing this:\n  x \\<in> (a \\<rightleftharpoons> b) \\<bullet> f `\n         {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>x = (a \\<rightleftharpoons> b) \\<bullet> f Q';\n         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto (metis (no_types, lifting) imageE image_eqvt mem_Collect_eq permute_set_eq_image)"], ["proof (state)\nthis:\n  x = (a \\<rightleftharpoons> b) \\<bullet> f Q'\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (a \\<rightleftharpoons> b) \\<bullet> f `\n              {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n               Q'} \\<Longrightarrow>\n       x \\<in> f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}", "with \"*\" and a and b"], ["proof (chain)\npicking this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n     weak_formula (f Q') \\<and>\n     supp (f Q') \\<subseteq> supp P' \\<and> f Q' distinguishes P' from Q'\n  a \\<notin> supp P'\n  b \\<notin> supp P'\n  x = (a \\<rightleftharpoons> b) \\<bullet> f Q'\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'", "have \"a \\<notin> supp (f Q')\" and \"b \\<notin> supp (f Q')\""], ["proof (prove)\nusing this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n     weak_formula (f Q') \\<and>\n     supp (f Q') \\<subseteq> supp P' \\<and> f Q' distinguishes P' from Q'\n  a \\<notin> supp P'\n  b \\<notin> supp P'\n  x = (a \\<rightleftharpoons> b) \\<bullet> f Q'\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\n\ngoal (1 subgoal):\n 1. a \\<notin> supp (f Q') &&& b \\<notin> supp (f Q')", "by auto"], ["proof (state)\nthis:\n  a \\<notin> supp (f Q')\n  b \\<notin> supp (f Q')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (a \\<rightleftharpoons> b) \\<bullet> f `\n              {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n               Q'} \\<Longrightarrow>\n       x \\<in> f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}", "with 1"], ["proof (chain)\npicking this:\n  x = (a \\<rightleftharpoons> b) \\<bullet> f Q'\n  a \\<notin> supp (f Q')\n  b \\<notin> supp (f Q')", "have \"x = f Q'\""], ["proof (prove)\nusing this:\n  x = (a \\<rightleftharpoons> b) \\<bullet> f Q'\n  a \\<notin> supp (f Q')\n  b \\<notin> supp (f Q')\n\ngoal (1 subgoal):\n 1. x = f Q'", "by (metis fresh_perm fresh_star_def supp_perm_eq swap_atom)"], ["proof (state)\nthis:\n  x = f Q'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (a \\<rightleftharpoons> b) \\<bullet> f `\n              {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n               Q'} \\<Longrightarrow>\n       x \\<in> f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}", "with 2"], ["proof (chain)\npicking this:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\n  x = f Q'", "show \"x \\<in> f ` ?Q'\""], ["proof (prove)\nusing this:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\n  x = f Q'\n\ngoal (1 subgoal):\n 1. x \\<in> f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}", "by simp"], ["proof (state)\nthis:\n  x \\<in> f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (a \\<rightleftharpoons> b) \\<bullet> f `\n {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n  \\<subseteq> f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<notin> supp P'; b \\<notin> supp P'\\<rbrakk>\n       \\<Longrightarrow> (a \\<rightleftharpoons> b) \\<bullet> f `\n                        Collect (weak_transition Q \\<alpha>) =\n                         f ` Collect (weak_transition Q \\<alpha>)", "moreover"], ["proof (state)\nthis:\n  (a \\<rightleftharpoons> b) \\<bullet> f `\n {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n  \\<subseteq> f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<notin> supp P'; b \\<notin> supp P'\\<rbrakk>\n       \\<Longrightarrow> (a \\<rightleftharpoons> b) \\<bullet> f `\n                        Collect (weak_transition Q \\<alpha>) =\n                         f ` Collect (weak_transition Q \\<alpha>)", "have \"f ` ?Q' \\<subseteq> (a \\<rightleftharpoons> b) \\<bullet> (f ` ?Q')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n    \\<subseteq> (a \\<rightleftharpoons> b) \\<bullet> f `\n               {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f `\n               {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                Q'} \\<Longrightarrow>\n       x \\<in> (a \\<rightleftharpoons> b) \\<bullet> f `\n              {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f `\n               {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                Q'} \\<Longrightarrow>\n       x \\<in> (a \\<rightleftharpoons> b) \\<bullet> f `\n              {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}", "assume \"x \\<in> f ` ?Q'\""], ["proof (state)\nthis:\n  x \\<in> f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f `\n               {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                Q'} \\<Longrightarrow>\n       x \\<in> (a \\<rightleftharpoons> b) \\<bullet> f `\n              {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}", "then"], ["proof (chain)\npicking this:\n  x \\<in> f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}", "obtain Q' where 1: \"x = f Q'\" and 2: \"Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\""], ["proof (prove)\nusing this:\n  x \\<in> f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>x = f Q';\n         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x = f Q'\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f `\n               {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                Q'} \\<Longrightarrow>\n       x \\<in> (a \\<rightleftharpoons> b) \\<bullet> f `\n              {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}", "with \"*\" and a and b"], ["proof (chain)\npicking this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n     weak_formula (f Q') \\<and>\n     supp (f Q') \\<subseteq> supp P' \\<and> f Q' distinguishes P' from Q'\n  a \\<notin> supp P'\n  b \\<notin> supp P'\n  x = f Q'\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'", "have \"a \\<notin> supp (f Q')\" and \"b \\<notin> supp (f Q')\""], ["proof (prove)\nusing this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n     weak_formula (f Q') \\<and>\n     supp (f Q') \\<subseteq> supp P' \\<and> f Q' distinguishes P' from Q'\n  a \\<notin> supp P'\n  b \\<notin> supp P'\n  x = f Q'\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\n\ngoal (1 subgoal):\n 1. a \\<notin> supp (f Q') &&& b \\<notin> supp (f Q')", "by auto"], ["proof (state)\nthis:\n  a \\<notin> supp (f Q')\n  b \\<notin> supp (f Q')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f `\n               {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                Q'} \\<Longrightarrow>\n       x \\<in> (a \\<rightleftharpoons> b) \\<bullet> f `\n              {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}", "with 1"], ["proof (chain)\npicking this:\n  x = f Q'\n  a \\<notin> supp (f Q')\n  b \\<notin> supp (f Q')", "have \"x = (a \\<rightleftharpoons> b) \\<bullet> f Q'\""], ["proof (prove)\nusing this:\n  x = f Q'\n  a \\<notin> supp (f Q')\n  b \\<notin> supp (f Q')\n\ngoal (1 subgoal):\n 1. x = (a \\<rightleftharpoons> b) \\<bullet> f Q'", "by (metis fresh_perm fresh_star_def supp_perm_eq swap_atom)"], ["proof (state)\nthis:\n  x = (a \\<rightleftharpoons> b) \\<bullet> f Q'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> f `\n               {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                Q'} \\<Longrightarrow>\n       x \\<in> (a \\<rightleftharpoons> b) \\<bullet> f `\n              {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}", "with 2"], ["proof (chain)\npicking this:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\n  x = (a \\<rightleftharpoons> b) \\<bullet> f Q'", "show \"x \\<in> (a \\<rightleftharpoons> b) \\<bullet> (f ` ?Q')\""], ["proof (prove)\nusing this:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\n  x = (a \\<rightleftharpoons> b) \\<bullet> f Q'\n\ngoal (1 subgoal):\n 1. x \\<in> (a \\<rightleftharpoons> b) \\<bullet> f `\n           {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}", "using mem_permute_iff"], ["proof (prove)\nusing this:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\n  x = (a \\<rightleftharpoons> b) \\<bullet> f Q'\n  (?p \\<bullet> ?x \\<in> ?p \\<bullet> ?X) = (?x \\<in> ?X)\n\ngoal (1 subgoal):\n 1. x \\<in> (a \\<rightleftharpoons> b) \\<bullet> f `\n           {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}", "by blast"], ["proof (state)\nthis:\n  x \\<in> (a \\<rightleftharpoons> b) \\<bullet> f `\n         {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n  \\<subseteq> (a \\<rightleftharpoons> b) \\<bullet> f `\n             {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<notin> supp P'; b \\<notin> supp P'\\<rbrakk>\n       \\<Longrightarrow> (a \\<rightleftharpoons> b) \\<bullet> f `\n                        Collect (weak_transition Q \\<alpha>) =\n                         f ` Collect (weak_transition Q \\<alpha>)", "ultimately"], ["proof (chain)\npicking this:\n  (a \\<rightleftharpoons> b) \\<bullet> f `\n {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n  \\<subseteq> f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n  f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n  \\<subseteq> (a \\<rightleftharpoons> b) \\<bullet> f `\n             {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}", "show \"(a \\<rightleftharpoons> b) \\<bullet> (f ` ?Q') = f ` ?Q'\""], ["proof (prove)\nusing this:\n  (a \\<rightleftharpoons> b) \\<bullet> f `\n {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n  \\<subseteq> f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n  f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n  \\<subseteq> (a \\<rightleftharpoons> b) \\<bullet> f `\n             {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n\ngoal (1 subgoal):\n 1. (a \\<rightleftharpoons> b) \\<bullet> f `\n   {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'} =\n    f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}", ".."], ["proof (state)\nthis:\n  (a \\<rightleftharpoons> b) \\<bullet> f `\n {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'} =\n  f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  supp P' supports f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "then"], ["proof (chain)\npicking this:\n  supp P' supports f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}", "have supp_image_subset_supp_P': \"supp (f ` ?Q') \\<subseteq> supp P'\""], ["proof (prove)\nusing this:\n  supp P' supports f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n\ngoal (1 subgoal):\n 1. supp (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'})\n    \\<subseteq> supp P'", "by (metis (erased, lifting) finite_supp supp_is_subset)"], ["proof (state)\nthis:\n  supp (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'})\n  \\<subseteq> supp P'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "then"], ["proof (chain)\npicking this:\n  supp (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'})\n  \\<subseteq> supp P'", "have finite_supp_image: \"finite (supp (f ` ?Q'))\""], ["proof (prove)\nusing this:\n  supp (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'})\n  \\<subseteq> supp P'\n\ngoal (1 subgoal):\n 1. finite (supp (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))", "using finite_supp rev_finite_subset"], ["proof (prove)\nusing this:\n  supp (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'})\n  \\<subseteq> supp P'\n  finite (supp ?x)\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite (supp (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))", "by blast"], ["proof (state)\nthis:\n  finite (supp (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "have \"|f ` ?Q'| \\<le>o |UNIV :: 'state set|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}| \\<le>o |UNIV|", "by (metis card_of_UNIV card_of_image ordLeq_transitive)"], ["proof (state)\nthis:\n  |f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}| \\<le>o |UNIV|\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "also"], ["proof (state)\nthis:\n  |f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}| \\<le>o |UNIV|\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "have \"|UNIV :: 'state set| <o |UNIV :: 'idx set|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |UNIV| <o |UNIV|", "by (metis card_idx_state)"], ["proof (state)\nthis:\n  |UNIV| <o |UNIV|\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "also"], ["proof (state)\nthis:\n  |UNIV| <o |UNIV|\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "have \"|UNIV :: 'idx set| \\<le>o natLeq +c |UNIV :: 'idx set|\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |UNIV| \\<le>o natLeq +c |UNIV|", "by (metis Cnotzero_UNIV ordLeq_csum2)"], ["proof (state)\nthis:\n  |UNIV| \\<le>o natLeq +c |UNIV|\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "finally"], ["proof (chain)\npicking this:\n  |f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}| <o\n  natLeq +c |UNIV|", "have card_image: \"|f ` ?Q'| <o natLeq +c |UNIV :: 'idx set|\""], ["proof (prove)\nusing this:\n  |f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}| <o\n  natLeq +c |UNIV|\n\ngoal (1 subgoal):\n 1. |f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}| <o\n    natLeq +c |UNIV|", "."], ["proof (state)\nthis:\n  |f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}| <o\n  natLeq +c |UNIV|\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "let ?y = \"Conj (Abs_bset (f ` ?Q')) :: ('idx, 'pred, 'act) formula\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "have \"weak_formula (\\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>?y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weak_formula\n     \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>Conj\n            (Abs_bset\n              (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))", "proof (standard+)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite\n     (supp\n       (Abs_bset (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'})))\n 2. \\<And>x.\n       x \\<in> set_bset\n                (Abs_bset\n                  (f `\n                   {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                    Q'})) \\<Longrightarrow>\n       weak_formula x", "show \"finite (supp (Abs_bset (f ` ?Q') :: _ set['idx]))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     (supp\n       (Abs_bset (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'})))", "using finite_supp_image card_image"], ["proof (prove)\nusing this:\n  finite (supp (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))\n  |f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}| <o\n  natLeq +c |UNIV|\n\ngoal (1 subgoal):\n 1. finite\n     (supp\n       (Abs_bset (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'})))", "by simp"], ["proof (state)\nthis:\n  finite\n   (supp\n     (Abs_bset (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'})))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_bset\n                (Abs_bset\n                  (f `\n                   {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                    Q'})) \\<Longrightarrow>\n       weak_formula x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_bset\n                (Abs_bset\n                  (f `\n                   {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                    Q'})) \\<Longrightarrow>\n       weak_formula x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_bset\n                (Abs_bset\n                  (f `\n                   {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                    Q'})) \\<Longrightarrow>\n       weak_formula x", "assume \"x \\<in> set_bset (Abs_bset (f ` ?Q') :: _ set['idx])\""], ["proof (state)\nthis:\n  x \\<in> set_bset\n           (Abs_bset\n             (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_bset\n                (Abs_bset\n                  (f `\n                   {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                    Q'})) \\<Longrightarrow>\n       weak_formula x", "with card_image"], ["proof (chain)\npicking this:\n  |f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}| <o\n  natLeq +c |UNIV|\n  x \\<in> set_bset\n           (Abs_bset\n             (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))", "obtain Q' where \"Q' \\<in> ?Q'\" and \"x = f Q'\""], ["proof (prove)\nusing this:\n  |f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}| <o\n  natLeq +c |UNIV|\n  x \\<in> set_bset\n           (Abs_bset\n             (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q' \\<in> {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                           Q'};\n         x = f Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Abs_bset_inverse imageE set_bset set_bset_to_set_bset"], ["proof (prove)\nusing this:\n  |f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}| <o\n  natLeq +c |UNIV|\n  x \\<in> set_bset\n           (Abs_bset\n             (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))\n  ?y \\<in> {A. |A| <o natLeq +c |UNIV|} \\<Longrightarrow>\n  set_bset (Abs_bset ?y) = ?y\n  \\<lbrakk>?b \\<in> ?f ` ?A;\n   \\<And>x.\n      \\<lbrakk>?b = ?f x; x \\<in> ?A\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  set_bset ?x \\<in> {A. |A| <o natLeq +c |UNIV|}\n  |?A| <o natLeq +c |UNIV| \\<Longrightarrow>\n  set_bset (the_inv set_bset ?A) = ?A\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q' \\<in> {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                           Q'};\n         x = f Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Q' \\<in> {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n  x = f Q'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set_bset\n                (Abs_bset\n                  (f `\n                   {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                    Q'})) \\<Longrightarrow>\n       weak_formula x", "then"], ["proof (chain)\npicking this:\n  Q' \\<in> {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n  x = f Q'", "show \"weak_formula x\""], ["proof (prove)\nusing this:\n  Q' \\<in> {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n  x = f Q'\n\ngoal (1 subgoal):\n 1. weak_formula x", "using \"*\""], ["proof (prove)\nusing this:\n  Q' \\<in> {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}\n  x = f Q'\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n     weak_formula (f Q') \\<and>\n     supp (f Q') \\<subseteq> supp P' \\<and> f Q' distinguishes P' from Q'\n\ngoal (1 subgoal):\n 1. weak_formula x", "by metis"], ["proof (state)\nthis:\n  weak_formula x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  weak_formula\n   \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>Conj\n          (Abs_bset\n            (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "moreover"], ["proof (state)\nthis:\n  weak_formula\n   \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>Conj\n          (Abs_bset\n            (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "have \"P \\<Turnstile> \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>?y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<Turnstile>\n    \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>Conj\n           (Abs_bset\n             (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))", "unfolding valid_weak_action_modality"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<alpha>' x' P'.\n       Act \\<alpha>\n        (Conj (Abs_bset (f ` Collect (weak_transition Q \\<alpha>)))) =\n       Act \\<alpha>' x' \\<and>\n       P \\<Rightarrow>\\<langle>\\<alpha>'\\<rangle> P' \\<and>\n       P' \\<Turnstile> x'", "proof (standard+)"], ["proof (state)\ngoal (2 subgoals):\n 1. P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> ?P'4\n 2. ?P'4 \\<Turnstile>\n    Conj (Abs_bset (f ` Collect (weak_transition Q \\<alpha>)))", "from \\<open>P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>", "show \"P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'\""], ["proof (prove)\nusing this:\n  P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\n\ngoal (1 subgoal):\n 1. P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'", "by simp"], ["proof (state)\nthis:\n  P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'\n\ngoal (1 subgoal):\n 1. P' \\<Turnstile>\n    Conj (Abs_bset (f ` Collect (weak_transition Q \\<alpha>)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P' \\<Turnstile>\n    Conj (Abs_bset (f ` Collect (weak_transition Q \\<alpha>)))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. P' \\<Turnstile>\n    Conj (Abs_bset (f ` Collect (weak_transition Q \\<alpha>)))", "fix Q'"], ["proof (state)\ngoal (1 subgoal):\n 1. P' \\<Turnstile>\n    Conj (Abs_bset (f ` Collect (weak_transition Q \\<alpha>)))", "assume \"Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\""], ["proof (state)\nthis:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\n\ngoal (1 subgoal):\n 1. P' \\<Turnstile>\n    Conj (Abs_bset (f ` Collect (weak_transition Q \\<alpha>)))", "with \"*\""], ["proof (chain)\npicking this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n     weak_formula (f Q') \\<and>\n     supp (f Q') \\<subseteq> supp P' \\<and> f Q' distinguishes P' from Q'\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'", "have \"P' \\<Turnstile> f Q'\""], ["proof (prove)\nusing this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n     weak_formula (f Q') \\<and>\n     supp (f Q') \\<subseteq> supp P' \\<and> f Q' distinguishes P' from Q'\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\n\ngoal (1 subgoal):\n 1. P' \\<Turnstile> f Q'", "by (metis is_distinguishing_formula_def mem_Collect_eq)"], ["proof (state)\nthis:\n  P' \\<Turnstile> f Q'\n\ngoal (1 subgoal):\n 1. P' \\<Turnstile>\n    Conj (Abs_bset (f ` Collect (weak_transition Q \\<alpha>)))", "}"], ["proof (state)\nthis:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> ?Q'9 \\<Longrightarrow>\n  P' \\<Turnstile> f ?Q'9\n\ngoal (1 subgoal):\n 1. P' \\<Turnstile>\n    Conj (Abs_bset (f ` Collect (weak_transition Q \\<alpha>)))", "then"], ["proof (chain)\npicking this:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> ?Q'9 \\<Longrightarrow>\n  P' \\<Turnstile> f ?Q'9", "show \"P' \\<Turnstile> ?y\""], ["proof (prove)\nusing this:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> ?Q'9 \\<Longrightarrow>\n  P' \\<Turnstile> f ?Q'9\n\ngoal (1 subgoal):\n 1. P' \\<Turnstile>\n    Conj (Abs_bset (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))", "by (simp add: finite_supp_image card_image)"], ["proof (state)\nthis:\n  P' \\<Turnstile>\n  Conj (Abs_bset (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<Turnstile>\n  \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>Conj\n         (Abs_bset (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "moreover"], ["proof (state)\nthis:\n  P \\<Turnstile>\n  \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>Conj\n         (Abs_bset (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "have \"\\<not> Q \\<Turnstile> \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>?y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Q \\<Turnstile>\n           \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>Conj\n                  (Abs_bset\n                    (f `\n                     {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. Q \\<Turnstile>\n    \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>Conj\n           (Abs_bset\n             (f `\n              {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n               Q'})) \\<Longrightarrow>\n    False", "assume \"Q \\<Turnstile> \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>?y\""], ["proof (state)\nthis:\n  Q \\<Turnstile>\n  \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>Conj\n         (Abs_bset (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile>\n    \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>Conj\n           (Abs_bset\n             (f `\n              {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n               Q'})) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  Q \\<Turnstile>\n  \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>Conj\n         (Abs_bset (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))", "obtain Q' where 1: \"Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\" and 2: \"Q' \\<Turnstile> ?y\""], ["proof (prove)\nusing this:\n  Q \\<Turnstile>\n  \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>Conj\n         (Abs_bset (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q';\n         Q' \\<Turnstile>\n         Conj\n          (Abs_bset\n            (f `\n             {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>bn \\<alpha> \\<sharp>* Q\\<close>"], ["proof (prove)\nusing this:\n  Q \\<Turnstile>\n  \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>Conj\n         (Abs_bset (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))\n  bn \\<alpha> \\<sharp>* Q\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q';\n         Q' \\<Turnstile>\n         Conj\n          (Abs_bset\n            (f `\n             {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis valid_weak_action_modality_fresh)"], ["proof (state)\nthis:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\n  Q' \\<Turnstile>\n  Conj (Abs_bset (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile>\n    \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>Conj\n           (Abs_bset\n             (f `\n              {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n               Q'})) \\<Longrightarrow>\n    False", "from 2"], ["proof (chain)\npicking this:\n  Q' \\<Turnstile>\n  Conj (Abs_bset (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))", "have \"\\<And>Q''. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'' \\<longrightarrow> Q' \\<Turnstile> f Q''\""], ["proof (prove)\nusing this:\n  Q' \\<Turnstile>\n  Conj (Abs_bset (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))\n\ngoal (1 subgoal):\n 1. \\<And>Q''.\n       Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'' \\<longrightarrow>\n       Q' \\<Turnstile> f Q''", "by (simp add: finite_supp_image card_image)"], ["proof (state)\nthis:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> ?Q''7 \\<longrightarrow>\n  Q' \\<Turnstile> f ?Q''7\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile>\n    \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>Conj\n           (Abs_bset\n             (f `\n              {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n               Q'})) \\<Longrightarrow>\n    False", "with 1 and \"*\""], ["proof (chain)\npicking this:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n     weak_formula (f Q') \\<and>\n     supp (f Q') \\<subseteq> supp P' \\<and> f Q' distinguishes P' from Q'\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> ?Q''7 \\<longrightarrow>\n  Q' \\<Turnstile> f ?Q''7", "show False"], ["proof (prove)\nusing this:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n     weak_formula (f Q') \\<and>\n     supp (f Q') \\<subseteq> supp P' \\<and> f Q' distinguishes P' from Q'\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> ?Q''7 \\<longrightarrow>\n  Q' \\<Turnstile> f ?Q''7\n\ngoal (1 subgoal):\n 1. False", "using is_distinguishing_formula_def"], ["proof (prove)\nusing this:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n     weak_formula (f Q') \\<and>\n     supp (f Q') \\<subseteq> supp P' \\<and> f Q' distinguishes P' from Q'\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> ?Q''7 \\<longrightarrow>\n  Q' \\<Turnstile> f ?Q''7\n  ?x distinguishes ?P from ?Q \\<equiv>\n  ?P \\<Turnstile> ?x \\<and> \\<not> ?Q \\<Turnstile> ?x\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> Q \\<Turnstile>\n         \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>Conj\n                (Abs_bset\n                  (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "ultimately"], ["proof (chain)\npicking this:\n  weak_formula\n   \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>Conj\n          (Abs_bset\n            (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))\n  P \\<Turnstile>\n  \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>Conj\n         (Abs_bset (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))\n  \\<not> Q \\<Turnstile>\n         \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>Conj\n                (Abs_bset\n                  (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))", "have False"], ["proof (prove)\nusing this:\n  weak_formula\n   \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>Conj\n          (Abs_bset\n            (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))\n  P \\<Turnstile>\n  \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>Conj\n         (Abs_bset (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))\n  \\<not> Q \\<Turnstile>\n         \\<langle>\\<langle>\\<alpha>\\<rangle>\\<rangle>Conj\n                (Abs_bset\n                  (f ` {Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}))\n\ngoal (1 subgoal):\n 1. False", "by (metis \\<open>P \\<equiv>\\<cdot> Q\\<close> weakly_logically_equivalent_def)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "}"], ["proof (state)\nthis:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n     \\<not> P' \\<equiv>\\<cdot> Q' \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<equiv>\\<cdot> Q; bn \\<alpha> \\<sharp>* Q;\n     P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Q'.\n                         Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                         P' \\<equiv>\\<cdot> Q'", "then"], ["proof (chain)\npicking this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n     \\<not> P' \\<equiv>\\<cdot> Q' \\<Longrightarrow>\n  False", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>Q'\\<in>{Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'}.\n     \\<not> P' \\<equiv>\\<cdot> Q' \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n       P' \\<equiv>\\<cdot> Q'", "by auto"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n     P' \\<equiv>\\<cdot> Q'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n     P' \\<equiv>\\<cdot> Q'\n\ngoal (1 subgoal):\n 1. is_weak_bisimulation (\\<equiv>\\<cdot>)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?P9 \\<equiv>\\<cdot> ?Q9; bn ?\\<alpha>9 \\<sharp>* ?Q9;\n   ?P9 \\<rightarrow> \\<langle>?\\<alpha>9,?P'9\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?Q9 \\<Rightarrow>\\<langle>?\\<alpha>9\\<rangle>\n                       Q' \\<and> ?P'9 \\<equiv>\\<cdot> Q'\n\ngoal (1 subgoal):\n 1. is_weak_bisimulation (\\<equiv>\\<cdot>)", "ultimately"], ["proof (chain)\npicking this:\n  symp (\\<equiv>\\<cdot>)\n  \\<lbrakk>?P9 \\<equiv>\\<cdot> ?Q9; ?P9 \\<turnstile> ?\\<phi>9\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?Q9 \\<Rightarrow> Q' \\<and>\n                       ?P9 \\<equiv>\\<cdot> Q' \\<and>\n                       Q' \\<turnstile> ?\\<phi>9\n  \\<lbrakk>?P9 \\<equiv>\\<cdot> ?Q9; bn ?\\<alpha>9 \\<sharp>* ?Q9;\n   ?P9 \\<rightarrow> \\<langle>?\\<alpha>9,?P'9\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?Q9 \\<Rightarrow>\\<langle>?\\<alpha>9\\<rangle>\n                       Q' \\<and> ?P'9 \\<equiv>\\<cdot> Q'", "show ?thesis"], ["proof (prove)\nusing this:\n  symp (\\<equiv>\\<cdot>)\n  \\<lbrakk>?P9 \\<equiv>\\<cdot> ?Q9; ?P9 \\<turnstile> ?\\<phi>9\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?Q9 \\<Rightarrow> Q' \\<and>\n                       ?P9 \\<equiv>\\<cdot> Q' \\<and>\n                       Q' \\<turnstile> ?\\<phi>9\n  \\<lbrakk>?P9 \\<equiv>\\<cdot> ?Q9; bn ?\\<alpha>9 \\<sharp>* ?Q9;\n   ?P9 \\<rightarrow> \\<langle>?\\<alpha>9,?P'9\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?Q9 \\<Rightarrow>\\<langle>?\\<alpha>9\\<rangle>\n                       Q' \\<and> ?P'9 \\<equiv>\\<cdot> Q'\n\ngoal (1 subgoal):\n 1. is_weak_bisimulation (\\<equiv>\\<cdot>)", "unfolding is_weak_bisimulation_def"], ["proof (prove)\nusing this:\n  symp (\\<equiv>\\<cdot>)\n  \\<lbrakk>?P9 \\<equiv>\\<cdot> ?Q9; ?P9 \\<turnstile> ?\\<phi>9\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?Q9 \\<Rightarrow> Q' \\<and>\n                       ?P9 \\<equiv>\\<cdot> Q' \\<and>\n                       Q' \\<turnstile> ?\\<phi>9\n  \\<lbrakk>?P9 \\<equiv>\\<cdot> ?Q9; bn ?\\<alpha>9 \\<sharp>* ?Q9;\n   ?P9 \\<rightarrow> \\<langle>?\\<alpha>9,?P'9\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Q'.\n                       ?Q9 \\<Rightarrow>\\<langle>?\\<alpha>9\\<rangle>\n                       Q' \\<and> ?P'9 \\<equiv>\\<cdot> Q'\n\ngoal (1 subgoal):\n 1. symp (\\<equiv>\\<cdot>) \\<and>\n    (\\<forall>P Q \\<phi>.\n        P \\<equiv>\\<cdot> Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n        (\\<exists>Q'.\n            Q \\<Rightarrow> Q' \\<and>\n            P \\<equiv>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>)) \\<and>\n    (\\<forall>P Q.\n        P \\<equiv>\\<cdot> Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                P' \\<equiv>\\<cdot> Q')))", "by metis"], ["proof (state)\nthis:\n  is_weak_bisimulation (\\<equiv>\\<cdot>)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem weak_equivalence_implies_weak_bisimilarity: assumes \"P \\<equiv>\\<cdot> Q\" shows \"P \\<approx>\\<cdot> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<approx>\\<cdot> Q", "using assms"], ["proof (prove)\nusing this:\n  P \\<equiv>\\<cdot> Q\n\ngoal (1 subgoal):\n 1. P \\<approx>\\<cdot> Q", "by (metis weakly_bisimilar_def weak_equivalence_is_weak_bisimulation)"], ["", "end"], ["", "end"]]}