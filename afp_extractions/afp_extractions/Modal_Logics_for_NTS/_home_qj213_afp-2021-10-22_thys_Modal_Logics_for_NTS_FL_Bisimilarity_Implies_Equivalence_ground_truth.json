{"file_name": "/home/qj213/afp-2021-10-22/thys/Modal_Logics_for_NTS/FL_Bisimilarity_Implies_Equivalence.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Modal_Logics_for_NTS", "problem_names": ["lemma FL_bisimilarity_implies_equivalence_Act:\n    assumes \"f \\<in>\\<^sub>f\\<^sub>s F\"\n    and \"bn \\<alpha> \\<sharp>* (F, f)\"\n    and \"x \\<in> \\<A>[L (\\<alpha>, F, f)]\"\n    and \"\\<And>P Q. P \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q \\<Longrightarrow> P \\<Turnstile> x \\<longleftrightarrow> Q \\<Turnstile> x\"\n    and \"P \\<sim>\\<cdot>[F] Q\"\n    and \"P \\<Turnstile> Act f \\<alpha> x\"\n    shows \"Q \\<Turnstile> Act f \\<alpha> x\"", "theorem FL_bisimilarity_implies_equivalence: assumes \"P \\<sim>\\<cdot>[F] Q\" shows \"FL_logically_equivalent F P Q\""], "translations": [["", "lemma FL_bisimilarity_implies_equivalence_Act:\n    assumes \"f \\<in>\\<^sub>f\\<^sub>s F\"\n    and \"bn \\<alpha> \\<sharp>* (F, f)\"\n    and \"x \\<in> \\<A>[L (\\<alpha>, F, f)]\"\n    and \"\\<And>P Q. P \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q \\<Longrightarrow> P \\<Turnstile> x \\<longleftrightarrow> Q \\<Turnstile> x\"\n    and \"P \\<sim>\\<cdot>[F] Q\"\n    and \"P \\<Turnstile> Act f \\<alpha> x\"\n    shows \"Q \\<Turnstile> Act f \\<alpha> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act f \\<alpha> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act f \\<alpha> x", "have \"finite (supp (\\<langle>f\\<rangle>Q, F, f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (supp (\\<langle>f\\<rangle>Q, F, f))", "by (fact finite_supp)"], ["proof (state)\nthis:\n  finite (supp (\\<langle>f\\<rangle>Q, F, f))\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act f \\<alpha> x", "with \\<open>P \\<Turnstile> Act f \\<alpha> x\\<close>"], ["proof (chain)\npicking this:\n  P \\<Turnstile> Act f \\<alpha> x\n  finite (supp (\\<langle>f\\<rangle>Q, F, f))", "obtain \\<alpha>' x' P' where eq: \"Act f \\<alpha> x = Act f \\<alpha>' x'\" and trans: \"\\<langle>f\\<rangle>P \\<rightarrow> \\<langle>\\<alpha>',P'\\<rangle>\" and valid: \"P' \\<Turnstile> x'\" and fresh: \"bn \\<alpha>' \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)\""], ["proof (prove)\nusing this:\n  P \\<Turnstile> Act f \\<alpha> x\n  finite (supp (\\<langle>f\\<rangle>Q, F, f))\n\ngoal (1 subgoal):\n 1. (\\<And>\\<alpha>' x' P'.\n        \\<lbrakk>Act f \\<alpha> x = Act f \\<alpha>' x';\n         \\<langle>f\\<rangle>P \\<rightarrow> \\<langle>\\<alpha>',P'\\<rangle>;\n         P' \\<Turnstile> x';\n         bn \\<alpha>' \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis FL_valid_Act_strong)"], ["proof (state)\nthis:\n  Act f \\<alpha> x = Act f \\<alpha>' x'\n  \\<langle>f\\<rangle>P \\<rightarrow> \\<langle>\\<alpha>',P'\\<rangle>\n  P' \\<Turnstile> x'\n  bn \\<alpha>' \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act f \\<alpha> x", "from \\<open>P \\<sim>\\<cdot>[F] Q\\<close> and \\<open>f \\<in>\\<^sub>f\\<^sub>s F\\<close> and fresh and trans"], ["proof (chain)\npicking this:\n  P \\<sim>\\<cdot>[F] Q\n  f \\<in>\\<^sub>f\\<^sub>s F\n  bn \\<alpha>' \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)\n  \\<langle>f\\<rangle>P \\<rightarrow> \\<langle>\\<alpha>',P'\\<rangle>", "obtain Q' where trans': \"\\<langle>f\\<rangle>Q \\<rightarrow> \\<langle>\\<alpha>',Q'\\<rangle>\" and bisim': \"P' \\<sim>\\<cdot>[L (\\<alpha>',F,f)] Q'\""], ["proof (prove)\nusing this:\n  P \\<sim>\\<cdot>[F] Q\n  f \\<in>\\<^sub>f\\<^sub>s F\n  bn \\<alpha>' \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)\n  \\<langle>f\\<rangle>P \\<rightarrow> \\<langle>\\<alpha>',P'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>\\<langle>f\\<rangle>Q \\<rightarrow>\n                 \\<langle>\\<alpha>',Q'\\<rangle>;\n         P' \\<sim>\\<cdot>[L (\\<alpha>', F, f)] Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis FL_bisimilar_simulation_step)"], ["proof (state)\nthis:\n  \\<langle>f\\<rangle>Q \\<rightarrow> \\<langle>\\<alpha>',Q'\\<rangle>\n  P' \\<sim>\\<cdot>[L (\\<alpha>', F, f)] Q'\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act f \\<alpha> x", "from eq"], ["proof (chain)\npicking this:\n  Act f \\<alpha> x = Act f \\<alpha>' x'", "obtain p where p_\\<alpha>: \"\\<alpha>' = p \\<bullet> \\<alpha>\" and p_x: \"x' = p \\<bullet> x\"\n        and fresh_p: \"(supp x - bn \\<alpha>) \\<sharp>* p \\<and> (supp \\<alpha> - bn \\<alpha>) \\<sharp>* p\"\n        and supp_p: \"supp p \\<subseteq> bn \\<alpha> \\<union> p \\<bullet> bn \\<alpha>\""], ["proof (prove)\nusing this:\n  Act f \\<alpha> x = Act f \\<alpha>' x'\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>\\<alpha>' = p \\<bullet> \\<alpha>; x' = p \\<bullet> x;\n         (supp x - bn \\<alpha>) \\<sharp>* p \\<and>\n         (supp \\<alpha> - bn \\<alpha>) \\<sharp>* p;\n         supp p\n         \\<subseteq> bn \\<alpha> \\<union> p \\<bullet> bn \\<alpha>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis Act_eq_iff_perm_renaming)"], ["proof (state)\nthis:\n  \\<alpha>' = p \\<bullet> \\<alpha>\n  x' = p \\<bullet> x\n  (supp x - bn \\<alpha>) \\<sharp>* p \\<and>\n  (supp \\<alpha> - bn \\<alpha>) \\<sharp>* p\n  supp p \\<subseteq> bn \\<alpha> \\<union> p \\<bullet> bn \\<alpha>\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act f \\<alpha> x", "from valid and p_x"], ["proof (chain)\npicking this:\n  P' \\<Turnstile> x'\n  x' = p \\<bullet> x", "have \"-p \\<bullet> P' \\<Turnstile> x\""], ["proof (prove)\nusing this:\n  P' \\<Turnstile> x'\n  x' = p \\<bullet> x\n\ngoal (1 subgoal):\n 1. - p \\<bullet> P' \\<Turnstile> x", "by (metis permute_minus_cancel(2) FL_valid_eqvt)"], ["proof (state)\nthis:\n  - p \\<bullet> P' \\<Turnstile> x\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act f \\<alpha> x", "moreover"], ["proof (state)\nthis:\n  - p \\<bullet> P' \\<Turnstile> x\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act f \\<alpha> x", "from fresh and p_\\<alpha>"], ["proof (chain)\npicking this:\n  bn \\<alpha>' \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)\n  \\<alpha>' = p \\<bullet> \\<alpha>", "have \"(p \\<bullet> bn \\<alpha>) \\<sharp>* (F, f)\""], ["proof (prove)\nusing this:\n  bn \\<alpha>' \\<sharp>* (\\<langle>f\\<rangle>Q, F, f)\n  \\<alpha>' = p \\<bullet> \\<alpha>\n\ngoal (1 subgoal):\n 1. (p \\<bullet> bn \\<alpha>) \\<sharp>* (F, f)", "by (simp add: bn_eqvt fresh_star_Pair)"], ["proof (state)\nthis:\n  (p \\<bullet> bn \\<alpha>) \\<sharp>* (F, f)\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act f \\<alpha> x", "with \\<open>bn \\<alpha> \\<sharp>* (F, f)\\<close> and supp_p"], ["proof (chain)\npicking this:\n  bn \\<alpha> \\<sharp>* (F, f)\n  supp p \\<subseteq> bn \\<alpha> \\<union> p \\<bullet> bn \\<alpha>\n  (p \\<bullet> bn \\<alpha>) \\<sharp>* (F, f)", "have \"supp (F, f) \\<sharp>* p\""], ["proof (prove)\nusing this:\n  bn \\<alpha> \\<sharp>* (F, f)\n  supp p \\<subseteq> bn \\<alpha> \\<union> p \\<bullet> bn \\<alpha>\n  (p \\<bullet> bn \\<alpha>) \\<sharp>* (F, f)\n\ngoal (1 subgoal):\n 1. supp (F, f) \\<sharp>* p", "by (meson UnE fresh_def fresh_star_def subsetCE)"], ["proof (state)\nthis:\n  supp (F, f) \\<sharp>* p\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act f \\<alpha> x", "then"], ["proof (chain)\npicking this:\n  supp (F, f) \\<sharp>* p", "have \"supp F \\<sharp>* p\" and \"supp f \\<sharp>* p\""], ["proof (prove)\nusing this:\n  supp (F, f) \\<sharp>* p\n\ngoal (1 subgoal):\n 1. supp F \\<sharp>* p &&& supp f \\<sharp>* p", "by (simp add: fresh_star_Un supp_Pair)+"], ["proof (state)\nthis:\n  supp F \\<sharp>* p\n  supp f \\<sharp>* p\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act f \\<alpha> x", "with bisim' and p_\\<alpha>"], ["proof (chain)\npicking this:\n  P' \\<sim>\\<cdot>[L (\\<alpha>', F, f)] Q'\n  \\<alpha>' = p \\<bullet> \\<alpha>\n  supp F \\<sharp>* p\n  supp f \\<sharp>* p", "have \"(-p \\<bullet> P') \\<sim>\\<cdot>[L (\\<alpha>, F, f)] (-p \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  P' \\<sim>\\<cdot>[L (\\<alpha>', F, f)] Q'\n  \\<alpha>' = p \\<bullet> \\<alpha>\n  supp F \\<sharp>* p\n  supp f \\<sharp>* p\n\ngoal (1 subgoal):\n 1. - p \\<bullet> P' \\<sim>\\<cdot>[L (\\<alpha>, F, f)] - p \\<bullet> Q'", "by (metis FL_bisimilar_eqvt L_eqvt' permute_minus_cancel(2) supp_perm_eq)"], ["proof (state)\nthis:\n  - p \\<bullet> P' \\<sim>\\<cdot>[L (\\<alpha>, F, f)] - p \\<bullet> Q'\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act f \\<alpha> x", "ultimately"], ["proof (chain)\npicking this:\n  - p \\<bullet> P' \\<Turnstile> x\n  - p \\<bullet> P' \\<sim>\\<cdot>[L (\\<alpha>, F, f)] - p \\<bullet> Q'", "have \"-p \\<bullet> Q' \\<Turnstile> x\""], ["proof (prove)\nusing this:\n  - p \\<bullet> P' \\<Turnstile> x\n  - p \\<bullet> P' \\<sim>\\<cdot>[L (\\<alpha>, F, f)] - p \\<bullet> Q'\n\ngoal (1 subgoal):\n 1. - p \\<bullet> Q' \\<Turnstile> x", "using \\<open>\\<And>P Q. P \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q \\<Longrightarrow> P \\<Turnstile> x \\<longleftrightarrow> Q \\<Turnstile> x\\<close>"], ["proof (prove)\nusing this:\n  - p \\<bullet> P' \\<Turnstile> x\n  - p \\<bullet> P' \\<sim>\\<cdot>[L (\\<alpha>, F, f)] - p \\<bullet> Q'\n  ?P \\<sim>\\<cdot>[L (\\<alpha>, F, f)] ?Q \\<Longrightarrow>\n  ?P \\<Turnstile> x = ?Q \\<Turnstile> x\n\ngoal (1 subgoal):\n 1. - p \\<bullet> Q' \\<Turnstile> x", "by metis"], ["proof (state)\nthis:\n  - p \\<bullet> Q' \\<Turnstile> x\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act f \\<alpha> x", "with p_x"], ["proof (chain)\npicking this:\n  x' = p \\<bullet> x\n  - p \\<bullet> Q' \\<Turnstile> x", "have \"Q' \\<Turnstile> x'\""], ["proof (prove)\nusing this:\n  x' = p \\<bullet> x\n  - p \\<bullet> Q' \\<Turnstile> x\n\ngoal (1 subgoal):\n 1. Q' \\<Turnstile> x'", "by (metis permute_minus_cancel(1) FL_valid_eqvt)"], ["proof (state)\nthis:\n  Q' \\<Turnstile> x'\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act f \\<alpha> x", "with eq and trans'"], ["proof (chain)\npicking this:\n  Act f \\<alpha> x = Act f \\<alpha>' x'\n  \\<langle>f\\<rangle>Q \\<rightarrow> \\<langle>\\<alpha>',Q'\\<rangle>\n  Q' \\<Turnstile> x'", "show \"Q \\<Turnstile> Act f \\<alpha> x\""], ["proof (prove)\nusing this:\n  Act f \\<alpha> x = Act f \\<alpha>' x'\n  \\<langle>f\\<rangle>Q \\<rightarrow> \\<langle>\\<alpha>',Q'\\<rangle>\n  Q' \\<Turnstile> x'\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act f \\<alpha> x", "unfolding FL_valid_Act"], ["proof (prove)\nusing this:\n  Act f \\<alpha> x = Act f \\<alpha>' x'\n  \\<langle>f\\<rangle>Q \\<rightarrow> \\<langle>\\<alpha>',Q'\\<rangle>\n  Q' \\<Turnstile> x'\n\ngoal (1 subgoal):\n 1. \\<exists>\\<alpha>' x' P'.\n       Act f \\<alpha> x = Act f \\<alpha>' x' \\<and>\n       \\<langle>f\\<rangle>Q \\<rightarrow>\n       \\<langle>\\<alpha>',P'\\<rangle> \\<and>\n       P' \\<Turnstile> x'", "by metis"], ["proof (state)\nthis:\n  Q \\<Turnstile> Act f \\<alpha> x\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem FL_bisimilarity_implies_equivalence: assumes \"P \\<sim>\\<cdot>[F] Q\" shows \"FL_logically_equivalent F P Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FL_logically_equivalent F P Q", "unfolding FL_logically_equivalent_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x \\<in> \\<A>[F] \\<longrightarrow> P \\<Turnstile> x = Q \\<Turnstile> x", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<A>[F] \\<longrightarrow> P \\<Turnstile> x = Q \\<Turnstile> x", "fix x :: \"('idx, 'pred, 'act, 'effect) formula\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<A>[F] \\<longrightarrow> P \\<Turnstile> x = Q \\<Turnstile> x", "show \"x \\<in> \\<A>[F] \\<longrightarrow> P \\<Turnstile> x \\<longleftrightarrow> Q \\<Turnstile> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> \\<A>[F] \\<longrightarrow> P \\<Turnstile> x = Q \\<Turnstile> x", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> \\<A>[F] \\<Longrightarrow> P \\<Turnstile> x = Q \\<Turnstile> x", "assume \"x \\<in> \\<A>[F]\""], ["proof (state)\nthis:\n  x \\<in> \\<A>[F]\n\ngoal (1 subgoal):\n 1. x \\<in> \\<A>[F] \\<Longrightarrow> P \\<Turnstile> x = Q \\<Turnstile> x", "then"], ["proof (chain)\npicking this:\n  x \\<in> \\<A>[F]", "show \"P \\<Turnstile> x \\<longleftrightarrow> Q \\<Turnstile> x\""], ["proof (prove)\nusing this:\n  x \\<in> \\<A>[F]\n\ngoal (1 subgoal):\n 1. P \\<Turnstile> x = Q \\<Turnstile> x", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> \\<A>[F]\n  P \\<sim>\\<cdot>[F] Q\n\ngoal (1 subgoal):\n 1. P \\<Turnstile> x = Q \\<Turnstile> x", "proof (induction x arbitrary: P Q)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>xset F P Q.\n       \\<lbrakk>finite (supp xset);\n        \\<And>x. x \\<in> set_bset xset \\<Longrightarrow> x \\<in> \\<A>[F];\n        \\<And>x P Q.\n           \\<lbrakk>x \\<in> set_bset xset; P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n           \\<Longrightarrow> P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Conj xset = Q \\<Turnstile> Conj xset\n 2. \\<And>F x P Q.\n       \\<lbrakk>x \\<in> \\<A>[F];\n        \\<And>P Q.\n           P \\<sim>\\<cdot>[F] Q \\<Longrightarrow>\n           P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> FL_Formula.Not x =\n                         Q \\<Turnstile> FL_Formula.Not x\n 3. \\<And>f F \\<phi> P Q.\n       \\<lbrakk>f \\<in>\\<^sub>f\\<^sub>s F; P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Pred f \\<phi> =\n                         Q \\<Turnstile> Pred f \\<phi>\n 4. \\<And>f F \\<alpha> x P Q.\n       \\<lbrakk>f \\<in>\\<^sub>f\\<^sub>s F; bn \\<alpha> \\<sharp>* (F, f);\n        x \\<in> \\<A>[L (\\<alpha>, F, f)];\n        \\<And>P Q.\n           P \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q \\<Longrightarrow>\n           P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Act f \\<alpha> x =\n                         Q \\<Turnstile> Act f \\<alpha> x", "case Conj"], ["proof (state)\nthis:\n  finite (supp xset_)\n  ?x9 \\<in> set_bset xset_ \\<Longrightarrow> ?x9 \\<in> \\<A>[F_]\n  \\<lbrakk>?x9 \\<in> set_bset xset_; ?P9 \\<sim>\\<cdot>[F_] ?Q9\\<rbrakk>\n  \\<Longrightarrow> ?P9 \\<Turnstile> ?x9 = ?Q9 \\<Turnstile> ?x9\n  P \\<sim>\\<cdot>[F_] Q\n\ngoal (4 subgoals):\n 1. \\<And>xset F P Q.\n       \\<lbrakk>finite (supp xset);\n        \\<And>x. x \\<in> set_bset xset \\<Longrightarrow> x \\<in> \\<A>[F];\n        \\<And>x P Q.\n           \\<lbrakk>x \\<in> set_bset xset; P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n           \\<Longrightarrow> P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Conj xset = Q \\<Turnstile> Conj xset\n 2. \\<And>F x P Q.\n       \\<lbrakk>x \\<in> \\<A>[F];\n        \\<And>P Q.\n           P \\<sim>\\<cdot>[F] Q \\<Longrightarrow>\n           P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> FL_Formula.Not x =\n                         Q \\<Turnstile> FL_Formula.Not x\n 3. \\<And>f F \\<phi> P Q.\n       \\<lbrakk>f \\<in>\\<^sub>f\\<^sub>s F; P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Pred f \\<phi> =\n                         Q \\<Turnstile> Pred f \\<phi>\n 4. \\<And>f F \\<alpha> x P Q.\n       \\<lbrakk>f \\<in>\\<^sub>f\\<^sub>s F; bn \\<alpha> \\<sharp>* (F, f);\n        x \\<in> \\<A>[L (\\<alpha>, F, f)];\n        \\<And>P Q.\n           P \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q \\<Longrightarrow>\n           P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Act f \\<alpha> x =\n                         Q \\<Turnstile> Act f \\<alpha> x", "then"], ["proof (chain)\npicking this:\n  finite (supp xset_)\n  ?x9 \\<in> set_bset xset_ \\<Longrightarrow> ?x9 \\<in> \\<A>[F_]\n  \\<lbrakk>?x9 \\<in> set_bset xset_; ?P9 \\<sim>\\<cdot>[F_] ?Q9\\<rbrakk>\n  \\<Longrightarrow> ?P9 \\<Turnstile> ?x9 = ?Q9 \\<Turnstile> ?x9\n  P \\<sim>\\<cdot>[F_] Q", "show ?case"], ["proof (prove)\nusing this:\n  finite (supp xset_)\n  ?x9 \\<in> set_bset xset_ \\<Longrightarrow> ?x9 \\<in> \\<A>[F_]\n  \\<lbrakk>?x9 \\<in> set_bset xset_; ?P9 \\<sim>\\<cdot>[F_] ?Q9\\<rbrakk>\n  \\<Longrightarrow> ?P9 \\<Turnstile> ?x9 = ?Q9 \\<Turnstile> ?x9\n  P \\<sim>\\<cdot>[F_] Q\n\ngoal (1 subgoal):\n 1. P \\<Turnstile> Conj xset_ = Q \\<Turnstile> Conj xset_", "by simp"], ["proof (state)\nthis:\n  P \\<Turnstile> Conj xset_ = Q \\<Turnstile> Conj xset_\n\ngoal (3 subgoals):\n 1. \\<And>F x P Q.\n       \\<lbrakk>x \\<in> \\<A>[F];\n        \\<And>P Q.\n           P \\<sim>\\<cdot>[F] Q \\<Longrightarrow>\n           P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> FL_Formula.Not x =\n                         Q \\<Turnstile> FL_Formula.Not x\n 2. \\<And>f F \\<phi> P Q.\n       \\<lbrakk>f \\<in>\\<^sub>f\\<^sub>s F; P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Pred f \\<phi> =\n                         Q \\<Turnstile> Pred f \\<phi>\n 3. \\<And>f F \\<alpha> x P Q.\n       \\<lbrakk>f \\<in>\\<^sub>f\\<^sub>s F; bn \\<alpha> \\<sharp>* (F, f);\n        x \\<in> \\<A>[L (\\<alpha>, F, f)];\n        \\<And>P Q.\n           P \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q \\<Longrightarrow>\n           P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Act f \\<alpha> x =\n                         Q \\<Turnstile> Act f \\<alpha> x", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>F x P Q.\n       \\<lbrakk>x \\<in> \\<A>[F];\n        \\<And>P Q.\n           P \\<sim>\\<cdot>[F] Q \\<Longrightarrow>\n           P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> FL_Formula.Not x =\n                         Q \\<Turnstile> FL_Formula.Not x\n 2. \\<And>f F \\<phi> P Q.\n       \\<lbrakk>f \\<in>\\<^sub>f\\<^sub>s F; P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Pred f \\<phi> =\n                         Q \\<Turnstile> Pred f \\<phi>\n 3. \\<And>f F \\<alpha> x P Q.\n       \\<lbrakk>f \\<in>\\<^sub>f\\<^sub>s F; bn \\<alpha> \\<sharp>* (F, f);\n        x \\<in> \\<A>[L (\\<alpha>, F, f)];\n        \\<And>P Q.\n           P \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q \\<Longrightarrow>\n           P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Act f \\<alpha> x =\n                         Q \\<Turnstile> Act f \\<alpha> x", "case Not"], ["proof (state)\nthis:\n  x_ \\<in> \\<A>[F_]\n  ?P9 \\<sim>\\<cdot>[F_] ?Q9 \\<Longrightarrow>\n  ?P9 \\<Turnstile> x_ = ?Q9 \\<Turnstile> x_\n  P \\<sim>\\<cdot>[F_] Q\n\ngoal (3 subgoals):\n 1. \\<And>F x P Q.\n       \\<lbrakk>x \\<in> \\<A>[F];\n        \\<And>P Q.\n           P \\<sim>\\<cdot>[F] Q \\<Longrightarrow>\n           P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> FL_Formula.Not x =\n                         Q \\<Turnstile> FL_Formula.Not x\n 2. \\<And>f F \\<phi> P Q.\n       \\<lbrakk>f \\<in>\\<^sub>f\\<^sub>s F; P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Pred f \\<phi> =\n                         Q \\<Turnstile> Pred f \\<phi>\n 3. \\<And>f F \\<alpha> x P Q.\n       \\<lbrakk>f \\<in>\\<^sub>f\\<^sub>s F; bn \\<alpha> \\<sharp>* (F, f);\n        x \\<in> \\<A>[L (\\<alpha>, F, f)];\n        \\<And>P Q.\n           P \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q \\<Longrightarrow>\n           P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Act f \\<alpha> x =\n                         Q \\<Turnstile> Act f \\<alpha> x", "then"], ["proof (chain)\npicking this:\n  x_ \\<in> \\<A>[F_]\n  ?P9 \\<sim>\\<cdot>[F_] ?Q9 \\<Longrightarrow>\n  ?P9 \\<Turnstile> x_ = ?Q9 \\<Turnstile> x_\n  P \\<sim>\\<cdot>[F_] Q", "show ?case"], ["proof (prove)\nusing this:\n  x_ \\<in> \\<A>[F_]\n  ?P9 \\<sim>\\<cdot>[F_] ?Q9 \\<Longrightarrow>\n  ?P9 \\<Turnstile> x_ = ?Q9 \\<Turnstile> x_\n  P \\<sim>\\<cdot>[F_] Q\n\ngoal (1 subgoal):\n 1. P \\<Turnstile> FL_Formula.Not x_ = Q \\<Turnstile> FL_Formula.Not x_", "by simp"], ["proof (state)\nthis:\n  P \\<Turnstile> FL_Formula.Not x_ = Q \\<Turnstile> FL_Formula.Not x_\n\ngoal (2 subgoals):\n 1. \\<And>f F \\<phi> P Q.\n       \\<lbrakk>f \\<in>\\<^sub>f\\<^sub>s F; P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Pred f \\<phi> =\n                         Q \\<Turnstile> Pred f \\<phi>\n 2. \\<And>f F \\<alpha> x P Q.\n       \\<lbrakk>f \\<in>\\<^sub>f\\<^sub>s F; bn \\<alpha> \\<sharp>* (F, f);\n        x \\<in> \\<A>[L (\\<alpha>, F, f)];\n        \\<And>P Q.\n           P \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q \\<Longrightarrow>\n           P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Act f \\<alpha> x =\n                         Q \\<Turnstile> Act f \\<alpha> x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f F \\<phi> P Q.\n       \\<lbrakk>f \\<in>\\<^sub>f\\<^sub>s F; P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Pred f \\<phi> =\n                         Q \\<Turnstile> Pred f \\<phi>\n 2. \\<And>f F \\<alpha> x P Q.\n       \\<lbrakk>f \\<in>\\<^sub>f\\<^sub>s F; bn \\<alpha> \\<sharp>* (F, f);\n        x \\<in> \\<A>[L (\\<alpha>, F, f)];\n        \\<And>P Q.\n           P \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q \\<Longrightarrow>\n           P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Act f \\<alpha> x =\n                         Q \\<Turnstile> Act f \\<alpha> x", "case Pred"], ["proof (state)\nthis:\n  f_ \\<in>\\<^sub>f\\<^sub>s F_\n  P \\<sim>\\<cdot>[F_] Q\n\ngoal (2 subgoals):\n 1. \\<And>f F \\<phi> P Q.\n       \\<lbrakk>f \\<in>\\<^sub>f\\<^sub>s F; P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Pred f \\<phi> =\n                         Q \\<Turnstile> Pred f \\<phi>\n 2. \\<And>f F \\<alpha> x P Q.\n       \\<lbrakk>f \\<in>\\<^sub>f\\<^sub>s F; bn \\<alpha> \\<sharp>* (F, f);\n        x \\<in> \\<A>[L (\\<alpha>, F, f)];\n        \\<And>P Q.\n           P \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q \\<Longrightarrow>\n           P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Act f \\<alpha> x =\n                         Q \\<Turnstile> Act f \\<alpha> x", "then"], ["proof (chain)\npicking this:\n  f_ \\<in>\\<^sub>f\\<^sub>s F_\n  P \\<sim>\\<cdot>[F_] Q", "show ?case"], ["proof (prove)\nusing this:\n  f_ \\<in>\\<^sub>f\\<^sub>s F_\n  P \\<sim>\\<cdot>[F_] Q\n\ngoal (1 subgoal):\n 1. P \\<Turnstile> Pred f_ \\<phi>_ = Q \\<Turnstile> Pred f_ \\<phi>_", "by (metis FL_bisimilar_is_L_bisimulation is_L_bisimulation_def symp_def FL_valid_Pred)"], ["proof (state)\nthis:\n  P \\<Turnstile> Pred f_ \\<phi>_ = Q \\<Turnstile> Pred f_ \\<phi>_\n\ngoal (1 subgoal):\n 1. \\<And>f F \\<alpha> x P Q.\n       \\<lbrakk>f \\<in>\\<^sub>f\\<^sub>s F; bn \\<alpha> \\<sharp>* (F, f);\n        x \\<in> \\<A>[L (\\<alpha>, F, f)];\n        \\<And>P Q.\n           P \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q \\<Longrightarrow>\n           P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Act f \\<alpha> x =\n                         Q \\<Turnstile> Act f \\<alpha> x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f F \\<alpha> x P Q.\n       \\<lbrakk>f \\<in>\\<^sub>f\\<^sub>s F; bn \\<alpha> \\<sharp>* (F, f);\n        x \\<in> \\<A>[L (\\<alpha>, F, f)];\n        \\<And>P Q.\n           P \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q \\<Longrightarrow>\n           P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Act f \\<alpha> x =\n                         Q \\<Turnstile> Act f \\<alpha> x", "case Act"], ["proof (state)\nthis:\n  f_ \\<in>\\<^sub>f\\<^sub>s F_\n  bn \\<alpha>_ \\<sharp>* (F_, f_)\n  x_ \\<in> \\<A>[L (\\<alpha>_, F_, f_)]\n  ?P9 \\<sim>\\<cdot>[L (\\<alpha>_, F_, f_)] ?Q9 \\<Longrightarrow>\n  ?P9 \\<Turnstile> x_ = ?Q9 \\<Turnstile> x_\n  P \\<sim>\\<cdot>[F_] Q\n\ngoal (1 subgoal):\n 1. \\<And>f F \\<alpha> x P Q.\n       \\<lbrakk>f \\<in>\\<^sub>f\\<^sub>s F; bn \\<alpha> \\<sharp>* (F, f);\n        x \\<in> \\<A>[L (\\<alpha>, F, f)];\n        \\<And>P Q.\n           P \\<sim>\\<cdot>[L (\\<alpha>, F, f)] Q \\<Longrightarrow>\n           P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot>[F] Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Act f \\<alpha> x =\n                         Q \\<Turnstile> Act f \\<alpha> x", "then"], ["proof (chain)\npicking this:\n  f_ \\<in>\\<^sub>f\\<^sub>s F_\n  bn \\<alpha>_ \\<sharp>* (F_, f_)\n  x_ \\<in> \\<A>[L (\\<alpha>_, F_, f_)]\n  ?P9 \\<sim>\\<cdot>[L (\\<alpha>_, F_, f_)] ?Q9 \\<Longrightarrow>\n  ?P9 \\<Turnstile> x_ = ?Q9 \\<Turnstile> x_\n  P \\<sim>\\<cdot>[F_] Q", "show ?case"], ["proof (prove)\nusing this:\n  f_ \\<in>\\<^sub>f\\<^sub>s F_\n  bn \\<alpha>_ \\<sharp>* (F_, f_)\n  x_ \\<in> \\<A>[L (\\<alpha>_, F_, f_)]\n  ?P9 \\<sim>\\<cdot>[L (\\<alpha>_, F_, f_)] ?Q9 \\<Longrightarrow>\n  ?P9 \\<Turnstile> x_ = ?Q9 \\<Turnstile> x_\n  P \\<sim>\\<cdot>[F_] Q\n\ngoal (1 subgoal):\n 1. P \\<Turnstile> Act f_ \\<alpha>_ x_ = Q \\<Turnstile> Act f_ \\<alpha>_ x_", "by (metis FL_bisimilar_symp FL_bisimilarity_implies_equivalence_Act sympE)"], ["proof (state)\nthis:\n  P \\<Turnstile> Act f_ \\<alpha>_ x_ = Q \\<Turnstile> Act f_ \\<alpha>_ x_\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<Turnstile> x = Q \\<Turnstile> x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> \\<A>[F] \\<longrightarrow> P \\<Turnstile> x = Q \\<Turnstile> x\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}