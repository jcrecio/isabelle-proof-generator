{"file_name": "/home/qj213/afp-2021-10-22/thys/Modal_Logics_for_NTS/Weak_Transition_System.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Modal_Logics_for_NTS", "problem_names": ["lemma bn_tau_empty [simp]: \"bn \\<tau> = {}\"", "lemma bn_tau_fresh [simp]: \"bn \\<tau> \\<sharp>* P\"", "lemma tau_transition_eqvt (*[eqvt]*):\n    assumes \"P \\<Rightarrow> P'\" shows \"p \\<bullet> P \\<Rightarrow> p \\<bullet> P'\"", "lemma observable_transition_eqvt (*[eqvt]*):\n    assumes \"P \\<Rightarrow>{\\<alpha>} P'\" shows \"p \\<bullet> P \\<Rightarrow>{p \\<bullet> \\<alpha>} p \\<bullet> P'\"", "lemma weak_transition_eqvt (*[eqvt]*):\n    assumes \"P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'\" shows \"p \\<bullet> P \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> p \\<bullet> P'\"", "lemma tau_transition_trans:\n    assumes \"P \\<Rightarrow> Q\" and \"Q \\<Rightarrow> R\"\n    shows \"P \\<Rightarrow> R\"", "lemma observable_transitionI:\n    assumes \"P \\<Rightarrow> Q\" and \"Q \\<rightarrow> \\<langle>\\<alpha>, Q'\\<rangle>\" and \"Q' \\<Rightarrow> P'\"\n    shows \"P \\<Rightarrow>{\\<alpha>} P'\"", "lemma observable_transition_stepI [simp]:\n    assumes \"P \\<rightarrow> \\<langle>\\<alpha>, P'\\<rangle>\"\n    shows \"P \\<Rightarrow>{\\<alpha>} P'\"", "lemma observable_tau_transition:\n    assumes \"P \\<Rightarrow>{\\<tau>} P'\"\n    shows \"P \\<Rightarrow> P'\"", "lemma weak_transition_tau_iff [simp]:\n    \"P \\<Rightarrow>\\<langle>\\<tau>\\<rangle> P' \\<longleftrightarrow> P \\<Rightarrow> P'\"", "lemma weak_transition_not_tau_iff [simp]:\n    assumes \"\\<alpha> \\<noteq> \\<tau>\"\n    shows \"P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P' \\<longleftrightarrow> P \\<Rightarrow>{\\<alpha>} P'\"", "lemma weak_transition_stepI [simp]:\n    assumes \"P \\<Rightarrow>{\\<alpha>} P'\"\n    shows \"P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'\"", "lemma weak_transition_weakI:\n    assumes \"P \\<Rightarrow> Q\" and \"Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\" and \"Q' \\<Rightarrow> P'\"\n    shows \"P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'\"", "lemma is_weak_bisimulation_eqvt (*[eqvt]*):\n    assumes \"is_weak_bisimulation R\" shows \"is_weak_bisimulation (p \\<bullet> R)\"", "lemma weakly_bisimilar_eqvt (*[eqvt]*):\n    assumes \"P \\<approx>\\<cdot> Q\" shows \"(p \\<bullet> P) \\<approx>\\<cdot> (p \\<bullet> Q)\"", "lemma weakly_bisimilar_reflp: \"reflp weakly_bisimilar\"", "lemma weakly_bisimilar_symp: \"symp weakly_bisimilar\"", "lemma weakly_bisimilar_is_weak_bisimulation: \"is_weak_bisimulation weakly_bisimilar\"", "lemma weakly_bisimilar_tau_simulation_step:\n    assumes \"P \\<approx>\\<cdot> Q\" and \"P \\<Rightarrow> P'\"\n    obtains Q' where \"Q \\<Rightarrow> Q'\" and \"P' \\<approx>\\<cdot> Q'\"", "lemma weakly_bisimilar_weak_simulation_step:\n    assumes \"P \\<approx>\\<cdot> Q\" and \"bn \\<alpha> \\<sharp>* Q\" and \"P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'\"\n    obtains Q' where \"Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\" and \"P' \\<approx>\\<cdot> Q'\"", "lemma weakly_bisimilar_transp: \"transp weakly_bisimilar\"", "lemma weakly_bisimilar_equivp: \"equivp weakly_bisimilar\""], "translations": [["", "lemma bn_tau_empty [simp]: \"bn \\<tau> = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bn \\<tau> = {}", "using bn_eqvt bn_finite tau_eqvt"], ["proof (prove)\nusing this:\n  ?p \\<bullet> bn ?\\<alpha> = bn (?p \\<bullet> ?\\<alpha>)\n  finite (bn ?\\<alpha>)\n  ?p \\<bullet> \\<tau> = \\<tau>\n\ngoal (1 subgoal):\n 1. bn \\<tau> = {}", "by (metis eqvt_def supp_finite_atom_set supp_fun_eqvt)"], ["", "lemma bn_tau_fresh [simp]: \"bn \\<tau> \\<sharp>* P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bn \\<tau> \\<sharp>* P", "by (simp add: fresh_star_def)"], ["", "inductive tau_transition :: \"'state \\<Rightarrow> 'state \\<Rightarrow> bool\" (infix \"\\<Rightarrow>\" 70) where\n    tau_refl [simp]: \"P \\<Rightarrow> P\"\n  | tau_step: \"\\<lbrakk> P \\<rightarrow> \\<langle>\\<tau>, P'\\<rangle>; P' \\<Rightarrow> P'' \\<rbrakk> \\<Longrightarrow> P \\<Rightarrow> P''\""], ["", "definition observable_transition :: \"'state \\<Rightarrow> 'act \\<Rightarrow> 'state \\<Rightarrow> bool\" (\"_/ \\<Rightarrow>{_}/ _\" [70, 70, 71] 71) where\n    \"P \\<Rightarrow>{\\<alpha>} P' \\<equiv> \\<exists>Q Q'. P \\<Rightarrow> Q \\<and> Q \\<rightarrow> \\<langle>\\<alpha>, Q'\\<rangle> \\<and> Q' \\<Rightarrow> P'\""], ["", "definition weak_transition :: \"'state \\<Rightarrow> 'act \\<Rightarrow> 'state \\<Rightarrow> bool\" (\"_/ \\<Rightarrow>\\<langle>_\\<rangle>/ _\" [70, 70, 71] 71) where\n    \"P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P' \\<equiv> if \\<alpha> = \\<tau> then P \\<Rightarrow> P' else P \\<Rightarrow>{\\<alpha>} P'\""], ["", "text \\<open>The transition relations defined above are equivariant.\\<close>"], ["", "lemma tau_transition_eqvt (*[eqvt]*):\n    assumes \"P \\<Rightarrow> P'\" shows \"p \\<bullet> P \\<Rightarrow> p \\<bullet> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<Rightarrow> p \\<bullet> P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<Rightarrow> P'\n\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<Rightarrow> p \\<bullet> P'", "proof (induction)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P. p \\<bullet> P \\<Rightarrow> p \\<bullet> P\n 2. \\<And>P P' P''.\n       \\<lbrakk>P \\<rightarrow> \\<langle>\\<tau>,P'\\<rangle>;\n        P' \\<Rightarrow> P'';\n        p \\<bullet> P' \\<Rightarrow> p \\<bullet> P''\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> P \\<Rightarrow> p \\<bullet> P''", "case (tau_refl P)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>P. p \\<bullet> P \\<Rightarrow> p \\<bullet> P\n 2. \\<And>P P' P''.\n       \\<lbrakk>P \\<rightarrow> \\<langle>\\<tau>,P'\\<rangle>;\n        P' \\<Rightarrow> P'';\n        p \\<bullet> P' \\<Rightarrow> p \\<bullet> P''\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> P \\<Rightarrow> p \\<bullet> P''", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<Rightarrow> p \\<bullet> P", "by (fact tau_transition.tau_refl)"], ["proof (state)\nthis:\n  p \\<bullet> P \\<Rightarrow> p \\<bullet> P\n\ngoal (1 subgoal):\n 1. \\<And>P P' P''.\n       \\<lbrakk>P \\<rightarrow> \\<langle>\\<tau>,P'\\<rangle>;\n        P' \\<Rightarrow> P'';\n        p \\<bullet> P' \\<Rightarrow> p \\<bullet> P''\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> P \\<Rightarrow> p \\<bullet> P''", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P P' P''.\n       \\<lbrakk>P \\<rightarrow> \\<langle>\\<tau>,P'\\<rangle>;\n        P' \\<Rightarrow> P'';\n        p \\<bullet> P' \\<Rightarrow> p \\<bullet> P''\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> P \\<Rightarrow> p \\<bullet> P''", "case (tau_step P P' P'')"], ["proof (state)\nthis:\n  P \\<rightarrow> \\<langle>\\<tau>,P'\\<rangle>\n  P' \\<Rightarrow> P''\n  p \\<bullet> P' \\<Rightarrow> p \\<bullet> P''\n\ngoal (1 subgoal):\n 1. \\<And>P P' P''.\n       \\<lbrakk>P \\<rightarrow> \\<langle>\\<tau>,P'\\<rangle>;\n        P' \\<Rightarrow> P'';\n        p \\<bullet> P' \\<Rightarrow> p \\<bullet> P''\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> P \\<Rightarrow> p \\<bullet> P''", "from \\<open>P \\<rightarrow> \\<langle>\\<tau>,P'\\<rangle>\\<close>"], ["proof (chain)\npicking this:\n  P \\<rightarrow> \\<langle>\\<tau>,P'\\<rangle>", "have \"p \\<bullet> P \\<rightarrow> \\<langle>\\<tau>,p \\<bullet> P'\\<rangle>\""], ["proof (prove)\nusing this:\n  P \\<rightarrow> \\<langle>\\<tau>,P'\\<rangle>\n\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<rightarrow> \\<langle>\\<tau>,p \\<bullet> P'\\<rangle>", "using tau_eqvt transition_eqvt'"], ["proof (prove)\nusing this:\n  P \\<rightarrow> \\<langle>\\<tau>,P'\\<rangle>\n  ?p \\<bullet> \\<tau> = \\<tau>\n  ?P \\<rightarrow> \\<langle>?\\<alpha>,?Q\\<rangle> \\<Longrightarrow>\n  ?p \\<bullet> ?P \\<rightarrow>\n  \\<langle>?p \\<bullet> ?\\<alpha>,?p \\<bullet> ?Q\\<rangle>\n\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<rightarrow> \\<langle>\\<tau>,p \\<bullet> P'\\<rangle>", "by fastforce"], ["proof (state)\nthis:\n  p \\<bullet> P \\<rightarrow> \\<langle>\\<tau>,p \\<bullet> P'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>P P' P''.\n       \\<lbrakk>P \\<rightarrow> \\<langle>\\<tau>,P'\\<rangle>;\n        P' \\<Rightarrow> P'';\n        p \\<bullet> P' \\<Rightarrow> p \\<bullet> P''\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> P \\<Rightarrow> p \\<bullet> P''", "with \\<open>p \\<bullet> P' \\<Rightarrow> p \\<bullet> P''\\<close>"], ["proof (chain)\npicking this:\n  p \\<bullet> P' \\<Rightarrow> p \\<bullet> P''\n  p \\<bullet> P \\<rightarrow> \\<langle>\\<tau>,p \\<bullet> P'\\<rangle>", "show ?case"], ["proof (prove)\nusing this:\n  p \\<bullet> P' \\<Rightarrow> p \\<bullet> P''\n  p \\<bullet> P \\<rightarrow> \\<langle>\\<tau>,p \\<bullet> P'\\<rangle>\n\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<Rightarrow> p \\<bullet> P''", "using tau_transition.tau_step"], ["proof (prove)\nusing this:\n  p \\<bullet> P' \\<Rightarrow> p \\<bullet> P''\n  p \\<bullet> P \\<rightarrow> \\<langle>\\<tau>,p \\<bullet> P'\\<rangle>\n  \\<lbrakk>?P \\<rightarrow> \\<langle>\\<tau>,?P'\\<rangle>;\n   ?P' \\<Rightarrow> ?P''\\<rbrakk>\n  \\<Longrightarrow> ?P \\<Rightarrow> ?P''\n\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<Rightarrow> p \\<bullet> P''", "by blast"], ["proof (state)\nthis:\n  p \\<bullet> P \\<Rightarrow> p \\<bullet> P''\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma observable_transition_eqvt (*[eqvt]*):\n    assumes \"P \\<Rightarrow>{\\<alpha>} P'\" shows \"p \\<bullet> P \\<Rightarrow>{p \\<bullet> \\<alpha>} p \\<bullet> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<Rightarrow>{p \\<bullet> \\<alpha>} p \\<bullet> P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<Rightarrow>{\\<alpha>} P'\n\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<Rightarrow>{p \\<bullet> \\<alpha>} p \\<bullet> P'", "unfolding observable_transition_def"], ["proof (prove)\nusing this:\n  \\<exists>Q Q'.\n     P \\<Rightarrow> Q \\<and>\n     Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n     Q' \\<Rightarrow> P'\n\ngoal (1 subgoal):\n 1. \\<exists>Q Q'.\n       p \\<bullet> P \\<Rightarrow> Q \\<and>\n       Q \\<rightarrow> \\<langle>p \\<bullet> \\<alpha>,Q'\\<rangle> \\<and>\n       Q' \\<Rightarrow> p \\<bullet> P'", "by (metis transition_eqvt' tau_transition_eqvt)"], ["", "lemma weak_transition_eqvt (*[eqvt]*):\n    assumes \"P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'\" shows \"p \\<bullet> P \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> p \\<bullet> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle>\n    p \\<bullet> P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'\n\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle>\n    p \\<bullet> P'", "unfolding weak_transition_def"], ["proof (prove)\nusing this:\n  if \\<alpha> = \\<tau> then P \\<Rightarrow> P'\n  else P \\<Rightarrow>{\\<alpha>} P'\n\ngoal (1 subgoal):\n 1. if p \\<bullet> \\<alpha> = \\<tau>\n    then p \\<bullet> P \\<Rightarrow> p \\<bullet> P'\n    else p \\<bullet> P \\<Rightarrow>{p \\<bullet> \\<alpha>} p \\<bullet> P'", "by (metis (full_types) observable_transition_eqvt permute_minus_cancel(2) tau_eqvt tau_transition_eqvt)"], ["", "text \\<open>Additional lemmas about @{const tau_transition}, @{const observable_transition} and\n  @{const weak_transition}.\\<close>"], ["", "lemma tau_transition_trans:\n    assumes \"P \\<Rightarrow> Q\" and \"Q \\<Rightarrow> R\"\n    shows \"P \\<Rightarrow> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<Rightarrow> R", "using assms"], ["proof (prove)\nusing this:\n  P \\<Rightarrow> Q\n  Q \\<Rightarrow> R\n\ngoal (1 subgoal):\n 1. P \\<Rightarrow> R", "by (induction, auto simp add: tau_step)"], ["", "lemma observable_transitionI:\n    assumes \"P \\<Rightarrow> Q\" and \"Q \\<rightarrow> \\<langle>\\<alpha>, Q'\\<rangle>\" and \"Q' \\<Rightarrow> P'\"\n    shows \"P \\<Rightarrow>{\\<alpha>} P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<Rightarrow>{\\<alpha>} P'", "using assms observable_transition_def"], ["proof (prove)\nusing this:\n  P \\<Rightarrow> Q\n  Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle>\n  Q' \\<Rightarrow> P'\n  ?P \\<Rightarrow>{?\\<alpha>} ?P' \\<equiv>\n  \\<exists>Q Q'.\n     ?P \\<Rightarrow> Q \\<and>\n     Q \\<rightarrow> \\<langle>?\\<alpha>,Q'\\<rangle> \\<and>\n     Q' \\<Rightarrow> ?P'\n\ngoal (1 subgoal):\n 1. P \\<Rightarrow>{\\<alpha>} P'", "by blast"], ["", "lemma observable_transition_stepI [simp]:\n    assumes \"P \\<rightarrow> \\<langle>\\<alpha>, P'\\<rangle>\"\n    shows \"P \\<Rightarrow>{\\<alpha>} P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<Rightarrow>{\\<alpha>} P'", "using assms observable_transitionI tau_refl"], ["proof (prove)\nusing this:\n  P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\n  \\<lbrakk>?P \\<Rightarrow> ?Q;\n   ?Q \\<rightarrow> \\<langle>?\\<alpha>,?Q'\\<rangle>;\n   ?Q' \\<Rightarrow> ?P'\\<rbrakk>\n  \\<Longrightarrow> ?P \\<Rightarrow>{?\\<alpha>} ?P'\n  ?P \\<Rightarrow> ?P\n\ngoal (1 subgoal):\n 1. P \\<Rightarrow>{\\<alpha>} P'", "by blast"], ["", "lemma observable_tau_transition:\n    assumes \"P \\<Rightarrow>{\\<tau>} P'\"\n    shows \"P \\<Rightarrow> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<Rightarrow> P'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<Rightarrow> P'", "from \\<open>P \\<Rightarrow>{\\<tau>} P'\\<close>"], ["proof (chain)\npicking this:\n  P \\<Rightarrow>{\\<tau>} P'", "obtain Q Q' where \"P \\<Rightarrow> Q\" and \"Q \\<rightarrow> \\<langle>\\<tau>, Q'\\<rangle>\" and \"Q' \\<Rightarrow> P'\""], ["proof (prove)\nusing this:\n  P \\<Rightarrow>{\\<tau>} P'\n\ngoal (1 subgoal):\n 1. (\\<And>Q Q'.\n        \\<lbrakk>P \\<Rightarrow> Q;\n         Q \\<rightarrow> \\<langle>\\<tau>,Q'\\<rangle>;\n         Q' \\<Rightarrow> P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding observable_transition_def"], ["proof (prove)\nusing this:\n  \\<exists>Q Q'.\n     P \\<Rightarrow> Q \\<and>\n     Q \\<rightarrow> \\<langle>\\<tau>,Q'\\<rangle> \\<and> Q' \\<Rightarrow> P'\n\ngoal (1 subgoal):\n 1. (\\<And>Q Q'.\n        \\<lbrakk>P \\<Rightarrow> Q;\n         Q \\<rightarrow> \\<langle>\\<tau>,Q'\\<rangle>;\n         Q' \\<Rightarrow> P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Rightarrow> Q\n  Q \\<rightarrow> \\<langle>\\<tau>,Q'\\<rangle>\n  Q' \\<Rightarrow> P'\n\ngoal (1 subgoal):\n 1. P \\<Rightarrow> P'", "then"], ["proof (chain)\npicking this:\n  P \\<Rightarrow> Q\n  Q \\<rightarrow> \\<langle>\\<tau>,Q'\\<rangle>\n  Q' \\<Rightarrow> P'", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<Rightarrow> Q\n  Q \\<rightarrow> \\<langle>\\<tau>,Q'\\<rangle>\n  Q' \\<Rightarrow> P'\n\ngoal (1 subgoal):\n 1. P \\<Rightarrow> P'", "by (metis tau_step tau_transition_trans)"], ["proof (state)\nthis:\n  P \\<Rightarrow> P'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weak_transition_tau_iff [simp]:\n    \"P \\<Rightarrow>\\<langle>\\<tau>\\<rangle> P' \\<longleftrightarrow> P \\<Rightarrow> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<Rightarrow>\\<langle>\\<tau>\\<rangle> P' = P \\<Rightarrow> P'", "by (simp add: weak_transition_def)"], ["", "lemma weak_transition_not_tau_iff [simp]:\n    assumes \"\\<alpha> \\<noteq> \\<tau>\"\n    shows \"P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P' \\<longleftrightarrow> P \\<Rightarrow>{\\<alpha>} P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P' = P \\<Rightarrow>{\\<alpha>}\n    P'", "using assms"], ["proof (prove)\nusing this:\n  \\<alpha> \\<noteq> \\<tau>\n\ngoal (1 subgoal):\n 1. P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P' = P \\<Rightarrow>{\\<alpha>}\n    P'", "by (simp add: weak_transition_def)"], ["", "lemma weak_transition_stepI [simp]:\n    assumes \"P \\<Rightarrow>{\\<alpha>} P'\"\n    shows \"P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'", "using assms"], ["proof (prove)\nusing this:\n  P \\<Rightarrow>{\\<alpha>} P'\n\ngoal (1 subgoal):\n 1. P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'", "by (cases \"\\<alpha> = \\<tau>\", simp_all add: observable_tau_transition)"], ["", "lemma weak_transition_weakI:\n    assumes \"P \\<Rightarrow> Q\" and \"Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\" and \"Q' \\<Rightarrow> P'\"\n    shows \"P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'", "proof (cases \"\\<alpha> = \\<tau>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<alpha> = \\<tau> \\<Longrightarrow>\n    P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'\n 2. \\<alpha> \\<noteq> \\<tau> \\<Longrightarrow>\n    P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'", "case True"], ["proof (state)\nthis:\n  \\<alpha> = \\<tau>\n\ngoal (2 subgoals):\n 1. \\<alpha> = \\<tau> \\<Longrightarrow>\n    P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'\n 2. \\<alpha> \\<noteq> \\<tau> \\<Longrightarrow>\n    P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'", "with assms"], ["proof (chain)\npicking this:\n  P \\<Rightarrow> Q\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\n  Q' \\<Rightarrow> P'\n  \\<alpha> = \\<tau>", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<Rightarrow> Q\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\n  Q' \\<Rightarrow> P'\n  \\<alpha> = \\<tau>\n\ngoal (1 subgoal):\n 1. P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'", "by (metis tau_transition_trans weak_transition_tau_iff)"], ["proof (state)\nthis:\n  P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<noteq> \\<tau> \\<Longrightarrow>\n    P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<alpha> \\<noteq> \\<tau> \\<Longrightarrow>\n    P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'", "case False"], ["proof (state)\nthis:\n  \\<alpha> \\<noteq> \\<tau>\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<noteq> \\<tau> \\<Longrightarrow>\n    P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'", "with assms"], ["proof (chain)\npicking this:\n  P \\<Rightarrow> Q\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\n  Q' \\<Rightarrow> P'\n  \\<alpha> \\<noteq> \\<tau>", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<Rightarrow> Q\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\n  Q' \\<Rightarrow> P'\n  \\<alpha> \\<noteq> \\<tau>\n\ngoal (1 subgoal):\n 1. P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'", "using observable_transition_def tau_transition_trans weak_transition_not_tau_iff"], ["proof (prove)\nusing this:\n  P \\<Rightarrow> Q\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\n  Q' \\<Rightarrow> P'\n  \\<alpha> \\<noteq> \\<tau>\n  ?P \\<Rightarrow>{?\\<alpha>} ?P' \\<equiv>\n  \\<exists>Q Q'.\n     ?P \\<Rightarrow> Q \\<and>\n     Q \\<rightarrow> \\<langle>?\\<alpha>,Q'\\<rangle> \\<and>\n     Q' \\<Rightarrow> ?P'\n  \\<lbrakk>?P \\<Rightarrow> ?Q; ?Q \\<Rightarrow> ?R\\<rbrakk>\n  \\<Longrightarrow> ?P \\<Rightarrow> ?R\n  ?\\<alpha> \\<noteq> \\<tau> \\<Longrightarrow>\n  ?P \\<Rightarrow>\\<langle>?\\<alpha>\\<rangle> ?P' = ?P\n  \\<Rightarrow>{?\\<alpha>} ?P'\n\ngoal (1 subgoal):\n 1. P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'", "by blast"], ["proof (state)\nthis:\n  P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Weak bisimulations\\<close>"], ["", "context weak_nominal_ts\nbegin"], ["", "definition is_weak_bisimulation :: \"('state \\<Rightarrow> 'state \\<Rightarrow> bool) \\<Rightarrow> bool\" where\n    \"is_weak_bisimulation R \\<equiv>\n      symp R \\<and>\n      \\<comment> \\<open>weak static implication\\<close>\n      (\\<forall>P Q \\<phi>. R P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow> (\\<exists>Q'. Q \\<Rightarrow> Q' \\<and> R P Q' \\<and> Q' \\<turnstile> \\<phi>)) \\<and>\n      \\<comment> \\<open>weak simulation\\<close>\n      (\\<forall>P Q. R P Q \\<longrightarrow> (\\<forall>\\<alpha> P'. bn \\<alpha> \\<sharp>* Q \\<longrightarrow> P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow> (\\<exists>Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and> R P' Q')))\""], ["", "definition weakly_bisimilar :: \"'state \\<Rightarrow> 'state \\<Rightarrow> bool\"  (infix \"\\<approx>\\<cdot>\" 100) where\n    \"P \\<approx>\\<cdot> Q \\<equiv> \\<exists>R. is_weak_bisimulation R \\<and> R P Q\""], ["", "text \\<open>@{const weakly_bisimilar} is an equivariant equivalence relation.\\<close>"], ["", "lemma is_weak_bisimulation_eqvt (*[eqvt]*):\n    assumes \"is_weak_bisimulation R\" shows \"is_weak_bisimulation (p \\<bullet> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_weak_bisimulation (p \\<bullet> R)", "using assms"], ["proof (prove)\nusing this:\n  is_weak_bisimulation R\n\ngoal (1 subgoal):\n 1. is_weak_bisimulation (p \\<bullet> R)", "unfolding is_weak_bisimulation_def"], ["proof (prove)\nusing this:\n  symp R \\<and>\n  (\\<forall>P Q \\<phi>.\n      R P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n      (\\<exists>Q'.\n          Q \\<Rightarrow> Q' \\<and>\n          R P Q' \\<and> Q' \\<turnstile> \\<phi>)) \\<and>\n  (\\<forall>P Q.\n      R P Q \\<longrightarrow>\n      (\\<forall>\\<alpha> P'.\n          bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n          P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n          (\\<exists>Q'.\n              Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and> R P' Q')))\n\ngoal (1 subgoal):\n 1. symp (p \\<bullet> R) \\<and>\n    (\\<forall>P Q \\<phi>.\n        (p \\<bullet> R) P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n        (\\<exists>Q'.\n            Q \\<Rightarrow> Q' \\<and>\n            (p \\<bullet> R) P Q' \\<and> Q' \\<turnstile> \\<phi>)) \\<and>\n    (\\<forall>P Q.\n        (p \\<bullet> R) P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                (p \\<bullet> R) P' Q')))", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>symp R;\n     \\<forall>P Q \\<phi>.\n        R P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n        (\\<exists>Q'.\n            Q \\<Rightarrow> Q' \\<and> R P Q' \\<and> Q' \\<turnstile> \\<phi>);\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                R P' Q'))\\<rbrakk>\n    \\<Longrightarrow> symp (p \\<bullet> R) \\<and>\n                      (\\<forall>P Q \\<phi>.\n                          (p \\<bullet> R) P Q \\<and>\n                          P \\<turnstile> \\<phi> \\<longrightarrow>\n                          (\\<exists>Q'.\n                              Q \\<Rightarrow> Q' \\<and>\n                              (p \\<bullet> R) P Q' \\<and>\n                              Q' \\<turnstile> \\<phi>)) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<alpha> P'.\n                              bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n                              P \\<rightarrow>\n                              \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                              (\\<exists>Q'.\n                                  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                                  Q' \\<and> (p \\<bullet> R) P' Q')))", "assume 1: \"symp R\""], ["proof (state)\nthis:\n  symp R\n\ngoal (1 subgoal):\n 1. \\<lbrakk>symp R;\n     \\<forall>P Q \\<phi>.\n        R P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n        (\\<exists>Q'.\n            Q \\<Rightarrow> Q' \\<and> R P Q' \\<and> Q' \\<turnstile> \\<phi>);\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                R P' Q'))\\<rbrakk>\n    \\<Longrightarrow> symp (p \\<bullet> R) \\<and>\n                      (\\<forall>P Q \\<phi>.\n                          (p \\<bullet> R) P Q \\<and>\n                          P \\<turnstile> \\<phi> \\<longrightarrow>\n                          (\\<exists>Q'.\n                              Q \\<Rightarrow> Q' \\<and>\n                              (p \\<bullet> R) P Q' \\<and>\n                              Q' \\<turnstile> \\<phi>)) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<alpha> P'.\n                              bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n                              P \\<rightarrow>\n                              \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                              (\\<exists>Q'.\n                                  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                                  Q' \\<and> (p \\<bullet> R) P' Q')))", "assume 2: \"\\<forall>P Q \\<phi>. R P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow> (\\<exists>Q'. Q \\<Rightarrow> Q' \\<and> R P Q' \\<and> Q' \\<turnstile> \\<phi>)\""], ["proof (state)\nthis:\n  \\<forall>P Q \\<phi>.\n     R P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n     (\\<exists>Q'.\n         Q \\<Rightarrow> Q' \\<and> R P Q' \\<and> Q' \\<turnstile> \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>symp R;\n     \\<forall>P Q \\<phi>.\n        R P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n        (\\<exists>Q'.\n            Q \\<Rightarrow> Q' \\<and> R P Q' \\<and> Q' \\<turnstile> \\<phi>);\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                R P' Q'))\\<rbrakk>\n    \\<Longrightarrow> symp (p \\<bullet> R) \\<and>\n                      (\\<forall>P Q \\<phi>.\n                          (p \\<bullet> R) P Q \\<and>\n                          P \\<turnstile> \\<phi> \\<longrightarrow>\n                          (\\<exists>Q'.\n                              Q \\<Rightarrow> Q' \\<and>\n                              (p \\<bullet> R) P Q' \\<and>\n                              Q' \\<turnstile> \\<phi>)) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<alpha> P'.\n                              bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n                              P \\<rightarrow>\n                              \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                              (\\<exists>Q'.\n                                  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                                  Q' \\<and> (p \\<bullet> R) P' Q')))", "assume 3: \"\\<forall>P Q. R P Q \\<longrightarrow> (\\<forall>\\<alpha> P'. bn \\<alpha> \\<sharp>* Q \\<longrightarrow> P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow> (\\<exists>Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and> R P' Q'))\""], ["proof (state)\nthis:\n  \\<forall>P Q.\n     R P Q \\<longrightarrow>\n     (\\<forall>\\<alpha> P'.\n         bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n         P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n         (\\<exists>Q'.\n             Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and> R P' Q'))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>symp R;\n     \\<forall>P Q \\<phi>.\n        R P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n        (\\<exists>Q'.\n            Q \\<Rightarrow> Q' \\<and> R P Q' \\<and> Q' \\<turnstile> \\<phi>);\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                R P' Q'))\\<rbrakk>\n    \\<Longrightarrow> symp (p \\<bullet> R) \\<and>\n                      (\\<forall>P Q \\<phi>.\n                          (p \\<bullet> R) P Q \\<and>\n                          P \\<turnstile> \\<phi> \\<longrightarrow>\n                          (\\<exists>Q'.\n                              Q \\<Rightarrow> Q' \\<and>\n                              (p \\<bullet> R) P Q' \\<and>\n                              Q' \\<turnstile> \\<phi>)) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<alpha> P'.\n                              bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n                              P \\<rightarrow>\n                              \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                              (\\<exists>Q'.\n                                  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                                  Q' \\<and> (p \\<bullet> R) P' Q')))", "have \"symp (p \\<bullet> R)\" (is ?S)"], ["proof (prove)\ngoal (1 subgoal):\n 1. symp (p \\<bullet> R)", "using 1"], ["proof (prove)\nusing this:\n  symp R\n\ngoal (1 subgoal):\n 1. symp (p \\<bullet> R)", "by (simp add: symp_eqvt)"], ["proof (state)\nthis:\n  symp (p \\<bullet> R)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>symp R;\n     \\<forall>P Q \\<phi>.\n        R P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n        (\\<exists>Q'.\n            Q \\<Rightarrow> Q' \\<and> R P Q' \\<and> Q' \\<turnstile> \\<phi>);\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                R P' Q'))\\<rbrakk>\n    \\<Longrightarrow> symp (p \\<bullet> R) \\<and>\n                      (\\<forall>P Q \\<phi>.\n                          (p \\<bullet> R) P Q \\<and>\n                          P \\<turnstile> \\<phi> \\<longrightarrow>\n                          (\\<exists>Q'.\n                              Q \\<Rightarrow> Q' \\<and>\n                              (p \\<bullet> R) P Q' \\<and>\n                              Q' \\<turnstile> \\<phi>)) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<alpha> P'.\n                              bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n                              P \\<rightarrow>\n                              \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                              (\\<exists>Q'.\n                                  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                                  Q' \\<and> (p \\<bullet> R) P' Q')))", "moreover"], ["proof (state)\nthis:\n  symp (p \\<bullet> R)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>symp R;\n     \\<forall>P Q \\<phi>.\n        R P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n        (\\<exists>Q'.\n            Q \\<Rightarrow> Q' \\<and> R P Q' \\<and> Q' \\<turnstile> \\<phi>);\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                R P' Q'))\\<rbrakk>\n    \\<Longrightarrow> symp (p \\<bullet> R) \\<and>\n                      (\\<forall>P Q \\<phi>.\n                          (p \\<bullet> R) P Q \\<and>\n                          P \\<turnstile> \\<phi> \\<longrightarrow>\n                          (\\<exists>Q'.\n                              Q \\<Rightarrow> Q' \\<and>\n                              (p \\<bullet> R) P Q' \\<and>\n                              Q' \\<turnstile> \\<phi>)) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<alpha> P'.\n                              bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n                              P \\<rightarrow>\n                              \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                              (\\<exists>Q'.\n                                  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                                  Q' \\<and> (p \\<bullet> R) P' Q')))", "have \"\\<forall>P Q \\<phi>. (p \\<bullet> R) P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow> (\\<exists>Q'. Q \\<Rightarrow> Q' \\<and> (p \\<bullet> R) P Q' \\<and> Q' \\<turnstile> \\<phi>)\" (is ?T)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P Q \\<phi>.\n       (p \\<bullet> R) P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n       (\\<exists>Q'.\n           Q \\<Rightarrow> Q' \\<and>\n           (p \\<bullet> R) P Q' \\<and> Q' \\<turnstile> \\<phi>)", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) P Q; P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow> Q' \\<and>\n                            (p \\<bullet> R) P Q' \\<and>\n                            Q' \\<turnstile> \\<phi>", "fix P Q \\<phi>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) P Q; P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow> Q' \\<and>\n                            (p \\<bullet> R) P Q' \\<and>\n                            Q' \\<turnstile> \\<phi>", "assume pR: \"(p \\<bullet> R) P Q\" and phi: \"P \\<turnstile> \\<phi>\""], ["proof (state)\nthis:\n  (p \\<bullet> R) P Q\n  P \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) P Q; P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow> Q' \\<and>\n                            (p \\<bullet> R) P Q' \\<and>\n                            Q' \\<turnstile> \\<phi>", "from pR"], ["proof (chain)\npicking this:\n  (p \\<bullet> R) P Q", "have \"R (-p \\<bullet> P) (-p \\<bullet> Q)\""], ["proof (prove)\nusing this:\n  (p \\<bullet> R) P Q\n\ngoal (1 subgoal):\n 1. R (- p \\<bullet> P) (- p \\<bullet> Q)", "by (simp add: eqvt_lambda permute_bool_def unpermute_def)"], ["proof (state)\nthis:\n  R (- p \\<bullet> P) (- p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) P Q; P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow> Q' \\<and>\n                            (p \\<bullet> R) P Q' \\<and>\n                            Q' \\<turnstile> \\<phi>", "moreover"], ["proof (state)\nthis:\n  R (- p \\<bullet> P) (- p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) P Q; P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow> Q' \\<and>\n                            (p \\<bullet> R) P Q' \\<and>\n                            Q' \\<turnstile> \\<phi>", "from phi"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<phi>", "have \"(-p \\<bullet> P) \\<turnstile> (-p \\<bullet> \\<phi>)\""], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. - p \\<bullet> P \\<turnstile> - p \\<bullet> \\<phi>", "by (metis satisfies_eqvt)"], ["proof (state)\nthis:\n  - p \\<bullet> P \\<turnstile> - p \\<bullet> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) P Q; P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow> Q' \\<and>\n                            (p \\<bullet> R) P Q' \\<and>\n                            Q' \\<turnstile> \\<phi>", "ultimately"], ["proof (chain)\npicking this:\n  R (- p \\<bullet> P) (- p \\<bullet> Q)\n  - p \\<bullet> P \\<turnstile> - p \\<bullet> \\<phi>", "obtain Q' where *: \"-p \\<bullet> Q \\<Rightarrow> Q'\" and **: \"R (-p \\<bullet> P) Q'\" and ***: \"Q' \\<turnstile> (-p \\<bullet> \\<phi>)\""], ["proof (prove)\nusing this:\n  R (- p \\<bullet> P) (- p \\<bullet> Q)\n  - p \\<bullet> P \\<turnstile> - p \\<bullet> \\<phi>\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>- p \\<bullet> Q \\<Rightarrow> Q'; R (- p \\<bullet> P) Q';\n         Q' \\<turnstile> - p \\<bullet> \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 2"], ["proof (prove)\nusing this:\n  R (- p \\<bullet> P) (- p \\<bullet> Q)\n  - p \\<bullet> P \\<turnstile> - p \\<bullet> \\<phi>\n  \\<forall>P Q \\<phi>.\n     R P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n     (\\<exists>Q'.\n         Q \\<Rightarrow> Q' \\<and> R P Q' \\<and> Q' \\<turnstile> \\<phi>)\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>- p \\<bullet> Q \\<Rightarrow> Q'; R (- p \\<bullet> P) Q';\n         Q' \\<turnstile> - p \\<bullet> \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  - p \\<bullet> Q \\<Rightarrow> Q'\n  R (- p \\<bullet> P) Q'\n  Q' \\<turnstile> - p \\<bullet> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) P Q; P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow> Q' \\<and>\n                            (p \\<bullet> R) P Q' \\<and>\n                            Q' \\<turnstile> \\<phi>", "from *"], ["proof (chain)\npicking this:\n  - p \\<bullet> Q \\<Rightarrow> Q'", "have \"Q \\<Rightarrow> p \\<bullet> Q'\""], ["proof (prove)\nusing this:\n  - p \\<bullet> Q \\<Rightarrow> Q'\n\ngoal (1 subgoal):\n 1. Q \\<Rightarrow> p \\<bullet> Q'", "by (metis permute_minus_cancel(1) tau_transition_eqvt)"], ["proof (state)\nthis:\n  Q \\<Rightarrow> p \\<bullet> Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) P Q; P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow> Q' \\<and>\n                            (p \\<bullet> R) P Q' \\<and>\n                            Q' \\<turnstile> \\<phi>", "moreover"], ["proof (state)\nthis:\n  Q \\<Rightarrow> p \\<bullet> Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) P Q; P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow> Q' \\<and>\n                            (p \\<bullet> R) P Q' \\<and>\n                            Q' \\<turnstile> \\<phi>", "from **"], ["proof (chain)\npicking this:\n  R (- p \\<bullet> P) Q'", "have \"(p \\<bullet> R) P (p \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  R (- p \\<bullet> P) Q'\n\ngoal (1 subgoal):\n 1. (p \\<bullet> R) P (p \\<bullet> Q')", "by (simp add: eqvt_lambda permute_bool_def unpermute_def)"], ["proof (state)\nthis:\n  (p \\<bullet> R) P (p \\<bullet> Q')\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) P Q; P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow> Q' \\<and>\n                            (p \\<bullet> R) P Q' \\<and>\n                            Q' \\<turnstile> \\<phi>", "moreover"], ["proof (state)\nthis:\n  (p \\<bullet> R) P (p \\<bullet> Q')\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) P Q; P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow> Q' \\<and>\n                            (p \\<bullet> R) P Q' \\<and>\n                            Q' \\<turnstile> \\<phi>", "from ***"], ["proof (chain)\npicking this:\n  Q' \\<turnstile> - p \\<bullet> \\<phi>", "have \"p \\<bullet> Q' \\<turnstile> \\<phi>\""], ["proof (prove)\nusing this:\n  Q' \\<turnstile> - p \\<bullet> \\<phi>\n\ngoal (1 subgoal):\n 1. p \\<bullet> Q' \\<turnstile> \\<phi>", "by (metis permute_minus_cancel(1) satisfies_eqvt)"], ["proof (state)\nthis:\n  p \\<bullet> Q' \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) P Q; P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow> Q' \\<and>\n                            (p \\<bullet> R) P Q' \\<and>\n                            Q' \\<turnstile> \\<phi>", "ultimately"], ["proof (chain)\npicking this:\n  Q \\<Rightarrow> p \\<bullet> Q'\n  (p \\<bullet> R) P (p \\<bullet> Q')\n  p \\<bullet> Q' \\<turnstile> \\<phi>", "show \"\\<exists>Q'. Q \\<Rightarrow> Q' \\<and> (p \\<bullet> R) P Q' \\<and> Q' \\<turnstile> \\<phi>\""], ["proof (prove)\nusing this:\n  Q \\<Rightarrow> p \\<bullet> Q'\n  (p \\<bullet> R) P (p \\<bullet> Q')\n  p \\<bullet> Q' \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       Q \\<Rightarrow> Q' \\<and>\n       (p \\<bullet> R) P Q' \\<and> Q' \\<turnstile> \\<phi>", "by metis"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     Q \\<Rightarrow> Q' \\<and>\n     (p \\<bullet> R) P Q' \\<and> Q' \\<turnstile> \\<phi>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P Q \\<phi>.\n     (p \\<bullet> R) P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n     (\\<exists>Q'.\n         Q \\<Rightarrow> Q' \\<and>\n         (p \\<bullet> R) P Q' \\<and> Q' \\<turnstile> \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>symp R;\n     \\<forall>P Q \\<phi>.\n        R P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n        (\\<exists>Q'.\n            Q \\<Rightarrow> Q' \\<and> R P Q' \\<and> Q' \\<turnstile> \\<phi>);\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                R P' Q'))\\<rbrakk>\n    \\<Longrightarrow> symp (p \\<bullet> R) \\<and>\n                      (\\<forall>P Q \\<phi>.\n                          (p \\<bullet> R) P Q \\<and>\n                          P \\<turnstile> \\<phi> \\<longrightarrow>\n                          (\\<exists>Q'.\n                              Q \\<Rightarrow> Q' \\<and>\n                              (p \\<bullet> R) P Q' \\<and>\n                              Q' \\<turnstile> \\<phi>)) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<alpha> P'.\n                              bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n                              P \\<rightarrow>\n                              \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                              (\\<exists>Q'.\n                                  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                                  Q' \\<and> (p \\<bullet> R) P' Q')))", "moreover"], ["proof (state)\nthis:\n  \\<forall>P Q \\<phi>.\n     (p \\<bullet> R) P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n     (\\<exists>Q'.\n         Q \\<Rightarrow> Q' \\<and>\n         (p \\<bullet> R) P Q' \\<and> Q' \\<turnstile> \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>symp R;\n     \\<forall>P Q \\<phi>.\n        R P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n        (\\<exists>Q'.\n            Q \\<Rightarrow> Q' \\<and> R P Q' \\<and> Q' \\<turnstile> \\<phi>);\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                R P' Q'))\\<rbrakk>\n    \\<Longrightarrow> symp (p \\<bullet> R) \\<and>\n                      (\\<forall>P Q \\<phi>.\n                          (p \\<bullet> R) P Q \\<and>\n                          P \\<turnstile> \\<phi> \\<longrightarrow>\n                          (\\<exists>Q'.\n                              Q \\<Rightarrow> Q' \\<and>\n                              (p \\<bullet> R) P Q' \\<and>\n                              Q' \\<turnstile> \\<phi>)) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<alpha> P'.\n                              bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n                              P \\<rightarrow>\n                              \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                              (\\<exists>Q'.\n                                  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                                  Q' \\<and> (p \\<bullet> R) P' Q')))", "have \"\\<forall>P Q. (p \\<bullet> R) P Q \\<longrightarrow> (\\<forall>\\<alpha> P'. bn \\<alpha> \\<sharp>* Q \\<longrightarrow> P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow> (\\<exists>Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and> (p \\<bullet> R) P' Q'))\" (is ?U)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P Q.\n       (p \\<bullet> R) P Q \\<longrightarrow>\n       (\\<forall>\\<alpha> P'.\n           bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n           P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n               (p \\<bullet> R) P' Q'))", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and> (p \\<bullet> R) P' Q'", "fix P Q \\<alpha> P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and> (p \\<bullet> R) P' Q'", "assume *: \"(p \\<bullet> R) P Q\" and **: \"bn \\<alpha> \\<sharp>* Q\" and ***: \"P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\""], ["proof (state)\nthis:\n  (p \\<bullet> R) P Q\n  bn \\<alpha> \\<sharp>* Q\n  P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and> (p \\<bullet> R) P' Q'", "from *"], ["proof (chain)\npicking this:\n  (p \\<bullet> R) P Q", "have \"R (-p \\<bullet> P) (-p \\<bullet> Q)\""], ["proof (prove)\nusing this:\n  (p \\<bullet> R) P Q\n\ngoal (1 subgoal):\n 1. R (- p \\<bullet> P) (- p \\<bullet> Q)", "by (simp add: eqvt_lambda permute_bool_def unpermute_def)"], ["proof (state)\nthis:\n  R (- p \\<bullet> P) (- p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and> (p \\<bullet> R) P' Q'", "moreover"], ["proof (state)\nthis:\n  R (- p \\<bullet> P) (- p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and> (p \\<bullet> R) P' Q'", "have \"bn (-p \\<bullet> \\<alpha>) \\<sharp>* (-p \\<bullet> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bn (- p \\<bullet> \\<alpha>) \\<sharp>* (- p \\<bullet> Q)", "using **"], ["proof (prove)\nusing this:\n  bn \\<alpha> \\<sharp>* Q\n\ngoal (1 subgoal):\n 1. bn (- p \\<bullet> \\<alpha>) \\<sharp>* (- p \\<bullet> Q)", "by (metis bn_eqvt fresh_star_permute_iff)"], ["proof (state)\nthis:\n  bn (- p \\<bullet> \\<alpha>) \\<sharp>* (- p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and> (p \\<bullet> R) P' Q'", "moreover"], ["proof (state)\nthis:\n  bn (- p \\<bullet> \\<alpha>) \\<sharp>* (- p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and> (p \\<bullet> R) P' Q'", "have \"-p \\<bullet> P \\<rightarrow> \\<langle>-p \\<bullet> \\<alpha>, -p \\<bullet> P'\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - p \\<bullet> P \\<rightarrow>\n    \\<langle>- p \\<bullet> \\<alpha>,- p \\<bullet> P'\\<rangle>", "using ***"], ["proof (prove)\nusing this:\n  P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\n\ngoal (1 subgoal):\n 1. - p \\<bullet> P \\<rightarrow>\n    \\<langle>- p \\<bullet> \\<alpha>,- p \\<bullet> P'\\<rangle>", "by (metis transition_eqvt')"], ["proof (state)\nthis:\n  - p \\<bullet> P \\<rightarrow>\n  \\<langle>- p \\<bullet> \\<alpha>,- p \\<bullet> P'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and> (p \\<bullet> R) P' Q'", "ultimately"], ["proof (chain)\npicking this:\n  R (- p \\<bullet> P) (- p \\<bullet> Q)\n  bn (- p \\<bullet> \\<alpha>) \\<sharp>* (- p \\<bullet> Q)\n  - p \\<bullet> P \\<rightarrow>\n  \\<langle>- p \\<bullet> \\<alpha>,- p \\<bullet> P'\\<rangle>", "obtain Q' where T: \"-p \\<bullet> Q \\<Rightarrow>\\<langle>-p \\<bullet> \\<alpha>\\<rangle> Q'\" and R: \"R (-p \\<bullet> P') Q'\""], ["proof (prove)\nusing this:\n  R (- p \\<bullet> P) (- p \\<bullet> Q)\n  bn (- p \\<bullet> \\<alpha>) \\<sharp>* (- p \\<bullet> Q)\n  - p \\<bullet> P \\<rightarrow>\n  \\<langle>- p \\<bullet> \\<alpha>,- p \\<bullet> P'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>- p \\<bullet> Q\n                 \\<Rightarrow>\\<langle>- p \\<bullet> \\<alpha>\\<rangle> Q';\n         R (- p \\<bullet> P') Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 3"], ["proof (prove)\nusing this:\n  R (- p \\<bullet> P) (- p \\<bullet> Q)\n  bn (- p \\<bullet> \\<alpha>) \\<sharp>* (- p \\<bullet> Q)\n  - p \\<bullet> P \\<rightarrow>\n  \\<langle>- p \\<bullet> \\<alpha>,- p \\<bullet> P'\\<rangle>\n  \\<forall>P Q.\n     R P Q \\<longrightarrow>\n     (\\<forall>\\<alpha> P'.\n         bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n         P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n         (\\<exists>Q'.\n             Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and> R P' Q'))\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>- p \\<bullet> Q\n                 \\<Rightarrow>\\<langle>- p \\<bullet> \\<alpha>\\<rangle> Q';\n         R (- p \\<bullet> P') Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  - p \\<bullet> Q \\<Rightarrow>\\<langle>- p \\<bullet> \\<alpha>\\<rangle> Q'\n  R (- p \\<bullet> P') Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and> (p \\<bullet> R) P' Q'", "from T"], ["proof (chain)\npicking this:\n  - p \\<bullet> Q \\<Rightarrow>\\<langle>- p \\<bullet> \\<alpha>\\<rangle> Q'", "have \"Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> (p \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  - p \\<bullet> Q \\<Rightarrow>\\<langle>- p \\<bullet> \\<alpha>\\<rangle> Q'\n\ngoal (1 subgoal):\n 1. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> p \\<bullet> Q'", "by (metis permute_minus_cancel(1) weak_transition_eqvt)"], ["proof (state)\nthis:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> p \\<bullet> Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and> (p \\<bullet> R) P' Q'", "moreover"], ["proof (state)\nthis:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> p \\<bullet> Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and> (p \\<bullet> R) P' Q'", "from R"], ["proof (chain)\npicking this:\n  R (- p \\<bullet> P') Q'", "have \"(p \\<bullet> R) P' (p \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  R (- p \\<bullet> P') Q'\n\ngoal (1 subgoal):\n 1. (p \\<bullet> R) P' (p \\<bullet> Q')", "by (metis eqvt_apply eqvt_lambda permute_bool_def unpermute_def)"], ["proof (state)\nthis:\n  (p \\<bullet> R) P' (p \\<bullet> Q')\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and> (p \\<bullet> R) P' Q'", "ultimately"], ["proof (chain)\npicking this:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> p \\<bullet> Q'\n  (p \\<bullet> R) P' (p \\<bullet> Q')", "show \"\\<exists>Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and> (p \\<bullet> R) P' Q'\""], ["proof (prove)\nusing this:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> p \\<bullet> Q'\n  (p \\<bullet> R) P' (p \\<bullet> Q')\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n       (p \\<bullet> R) P' Q'", "by metis"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n     (p \\<bullet> R) P' Q'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P Q.\n     (p \\<bullet> R) P Q \\<longrightarrow>\n     (\\<forall>\\<alpha> P'.\n         bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n         P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n         (\\<exists>Q'.\n             Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n             (p \\<bullet> R) P' Q'))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>symp R;\n     \\<forall>P Q \\<phi>.\n        R P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n        (\\<exists>Q'.\n            Q \\<Rightarrow> Q' \\<and> R P Q' \\<and> Q' \\<turnstile> \\<phi>);\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                R P' Q'))\\<rbrakk>\n    \\<Longrightarrow> symp (p \\<bullet> R) \\<and>\n                      (\\<forall>P Q \\<phi>.\n                          (p \\<bullet> R) P Q \\<and>\n                          P \\<turnstile> \\<phi> \\<longrightarrow>\n                          (\\<exists>Q'.\n                              Q \\<Rightarrow> Q' \\<and>\n                              (p \\<bullet> R) P Q' \\<and>\n                              Q' \\<turnstile> \\<phi>)) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<alpha> P'.\n                              bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n                              P \\<rightarrow>\n                              \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                              (\\<exists>Q'.\n                                  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                                  Q' \\<and> (p \\<bullet> R) P' Q')))", "ultimately"], ["proof (chain)\npicking this:\n  symp (p \\<bullet> R)\n  \\<forall>P Q \\<phi>.\n     (p \\<bullet> R) P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n     (\\<exists>Q'.\n         Q \\<Rightarrow> Q' \\<and>\n         (p \\<bullet> R) P Q' \\<and> Q' \\<turnstile> \\<phi>)\n  \\<forall>P Q.\n     (p \\<bullet> R) P Q \\<longrightarrow>\n     (\\<forall>\\<alpha> P'.\n         bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n         P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n         (\\<exists>Q'.\n             Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n             (p \\<bullet> R) P' Q'))", "show \"?S \\<and> ?T \\<and> ?U\""], ["proof (prove)\nusing this:\n  symp (p \\<bullet> R)\n  \\<forall>P Q \\<phi>.\n     (p \\<bullet> R) P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n     (\\<exists>Q'.\n         Q \\<Rightarrow> Q' \\<and>\n         (p \\<bullet> R) P Q' \\<and> Q' \\<turnstile> \\<phi>)\n  \\<forall>P Q.\n     (p \\<bullet> R) P Q \\<longrightarrow>\n     (\\<forall>\\<alpha> P'.\n         bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n         P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n         (\\<exists>Q'.\n             Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n             (p \\<bullet> R) P' Q'))\n\ngoal (1 subgoal):\n 1. symp (p \\<bullet> R) \\<and>\n    (\\<forall>P Q \\<phi>.\n        (p \\<bullet> R) P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n        (\\<exists>Q'.\n            Q \\<Rightarrow> Q' \\<and>\n            (p \\<bullet> R) P Q' \\<and> Q' \\<turnstile> \\<phi>)) \\<and>\n    (\\<forall>P Q.\n        (p \\<bullet> R) P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                (p \\<bullet> R) P' Q')))", "by simp"], ["proof (state)\nthis:\n  symp (p \\<bullet> R) \\<and>\n  (\\<forall>P Q \\<phi>.\n      (p \\<bullet> R) P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n      (\\<exists>Q'.\n          Q \\<Rightarrow> Q' \\<and>\n          (p \\<bullet> R) P Q' \\<and> Q' \\<turnstile> \\<phi>)) \\<and>\n  (\\<forall>P Q.\n      (p \\<bullet> R) P Q \\<longrightarrow>\n      (\\<forall>\\<alpha> P'.\n          bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n          P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n          (\\<exists>Q'.\n              Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n              (p \\<bullet> R) P' Q')))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weakly_bisimilar_eqvt (*[eqvt]*):\n    assumes \"P \\<approx>\\<cdot> Q\" shows \"(p \\<bullet> P) \\<approx>\\<cdot> (p \\<bullet> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p \\<bullet> P) \\<approx>\\<cdot> (p \\<bullet> Q)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (p \\<bullet> P) \\<approx>\\<cdot> (p \\<bullet> Q)", "from assms"], ["proof (chain)\npicking this:\n  P \\<approx>\\<cdot> Q", "obtain R where *: \"is_weak_bisimulation R \\<and> R P Q\""], ["proof (prove)\nusing this:\n  P \\<approx>\\<cdot> Q\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        is_weak_bisimulation R \\<and> R P Q \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding weakly_bisimilar_def"], ["proof (prove)\nusing this:\n  \\<exists>R. is_weak_bisimulation R \\<and> R P Q\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        is_weak_bisimulation R \\<and> R P Q \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  is_weak_bisimulation R \\<and> R P Q\n\ngoal (1 subgoal):\n 1. (p \\<bullet> P) \\<approx>\\<cdot> (p \\<bullet> Q)", "then"], ["proof (chain)\npicking this:\n  is_weak_bisimulation R \\<and> R P Q", "have \"is_weak_bisimulation (p \\<bullet> R)\""], ["proof (prove)\nusing this:\n  is_weak_bisimulation R \\<and> R P Q\n\ngoal (1 subgoal):\n 1. is_weak_bisimulation (p \\<bullet> R)", "by (simp add: is_weak_bisimulation_eqvt)"], ["proof (state)\nthis:\n  is_weak_bisimulation (p \\<bullet> R)\n\ngoal (1 subgoal):\n 1. (p \\<bullet> P) \\<approx>\\<cdot> (p \\<bullet> Q)", "moreover"], ["proof (state)\nthis:\n  is_weak_bisimulation (p \\<bullet> R)\n\ngoal (1 subgoal):\n 1. (p \\<bullet> P) \\<approx>\\<cdot> (p \\<bullet> Q)", "from \"*\""], ["proof (chain)\npicking this:\n  is_weak_bisimulation R \\<and> R P Q", "have \"(p \\<bullet> R) (p \\<bullet> P) (p \\<bullet> Q)\""], ["proof (prove)\nusing this:\n  is_weak_bisimulation R \\<and> R P Q\n\ngoal (1 subgoal):\n 1. (p \\<bullet> R) (p \\<bullet> P) (p \\<bullet> Q)", "by (metis eqvt_apply permute_boolI)"], ["proof (state)\nthis:\n  (p \\<bullet> R) (p \\<bullet> P) (p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. (p \\<bullet> P) \\<approx>\\<cdot> (p \\<bullet> Q)", "ultimately"], ["proof (chain)\npicking this:\n  is_weak_bisimulation (p \\<bullet> R)\n  (p \\<bullet> R) (p \\<bullet> P) (p \\<bullet> Q)", "show \"(p \\<bullet> P) \\<approx>\\<cdot> (p \\<bullet> Q)\""], ["proof (prove)\nusing this:\n  is_weak_bisimulation (p \\<bullet> R)\n  (p \\<bullet> R) (p \\<bullet> P) (p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. (p \\<bullet> P) \\<approx>\\<cdot> (p \\<bullet> Q)", "unfolding weakly_bisimilar_def"], ["proof (prove)\nusing this:\n  is_weak_bisimulation (p \\<bullet> R)\n  (p \\<bullet> R) (p \\<bullet> P) (p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. \\<exists>R.\n       is_weak_bisimulation R \\<and> R (p \\<bullet> P) (p \\<bullet> Q)", "by auto"], ["proof (state)\nthis:\n  (p \\<bullet> P) \\<approx>\\<cdot> (p \\<bullet> Q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weakly_bisimilar_reflp: \"reflp weakly_bisimilar\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reflp (\\<approx>\\<cdot>)", "proof (rule reflpI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<approx>\\<cdot> x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<approx>\\<cdot> x", "have \"is_weak_bisimulation (=)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_weak_bisimulation (=)", "unfolding is_weak_bisimulation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. symp (=) \\<and>\n    (\\<forall>P Q \\<phi>.\n        P = Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n        (\\<exists>Q'.\n            Q \\<Rightarrow> Q' \\<and>\n            P = Q' \\<and> Q' \\<turnstile> \\<phi>)) \\<and>\n    (\\<forall>P Q.\n        P = Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                P' = Q')))", "by (simp add: symp_def)"], ["proof (state)\nthis:\n  is_weak_bisimulation (=)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<approx>\\<cdot> x", "then"], ["proof (chain)\npicking this:\n  is_weak_bisimulation (=)", "show \"x \\<approx>\\<cdot> x\""], ["proof (prove)\nusing this:\n  is_weak_bisimulation (=)\n\ngoal (1 subgoal):\n 1. x \\<approx>\\<cdot> x", "unfolding weakly_bisimilar_def"], ["proof (prove)\nusing this:\n  is_weak_bisimulation (=)\n\ngoal (1 subgoal):\n 1. \\<exists>R. is_weak_bisimulation R \\<and> R x x", "by auto"], ["proof (state)\nthis:\n  x \\<approx>\\<cdot> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weakly_bisimilar_symp: \"symp weakly_bisimilar\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symp (\\<approx>\\<cdot>)", "proof (rule sympI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<approx>\\<cdot> b \\<Longrightarrow> b \\<approx>\\<cdot> a", "fix P Q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<approx>\\<cdot> b \\<Longrightarrow> b \\<approx>\\<cdot> a", "assume \"P \\<approx>\\<cdot> Q\""], ["proof (state)\nthis:\n  P \\<approx>\\<cdot> Q\n\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<approx>\\<cdot> b \\<Longrightarrow> b \\<approx>\\<cdot> a", "then"], ["proof (chain)\npicking this:\n  P \\<approx>\\<cdot> Q", "obtain R where *: \"is_weak_bisimulation R \\<and> R P Q\""], ["proof (prove)\nusing this:\n  P \\<approx>\\<cdot> Q\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        is_weak_bisimulation R \\<and> R P Q \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding weakly_bisimilar_def"], ["proof (prove)\nusing this:\n  \\<exists>R. is_weak_bisimulation R \\<and> R P Q\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        is_weak_bisimulation R \\<and> R P Q \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  is_weak_bisimulation R \\<and> R P Q\n\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<approx>\\<cdot> b \\<Longrightarrow> b \\<approx>\\<cdot> a", "then"], ["proof (chain)\npicking this:\n  is_weak_bisimulation R \\<and> R P Q", "have \"R Q P\""], ["proof (prove)\nusing this:\n  is_weak_bisimulation R \\<and> R P Q\n\ngoal (1 subgoal):\n 1. R Q P", "unfolding is_weak_bisimulation_def"], ["proof (prove)\nusing this:\n  (symp R \\<and>\n   (\\<forall>P Q \\<phi>.\n       R P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n       (\\<exists>Q'.\n           Q \\<Rightarrow> Q' \\<and>\n           R P Q' \\<and> Q' \\<turnstile> \\<phi>)) \\<and>\n   (\\<forall>P Q.\n       R P Q \\<longrightarrow>\n       (\\<forall>\\<alpha> P'.\n           bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n           P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n               R P' Q')))) \\<and>\n  R P Q\n\ngoal (1 subgoal):\n 1. R Q P", "by (simp add: symp_def)"], ["proof (state)\nthis:\n  R Q P\n\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<approx>\\<cdot> b \\<Longrightarrow> b \\<approx>\\<cdot> a", "with \"*\""], ["proof (chain)\npicking this:\n  is_weak_bisimulation R \\<and> R P Q\n  R Q P", "show \"Q \\<approx>\\<cdot> P\""], ["proof (prove)\nusing this:\n  is_weak_bisimulation R \\<and> R P Q\n  R Q P\n\ngoal (1 subgoal):\n 1. Q \\<approx>\\<cdot> P", "unfolding weakly_bisimilar_def"], ["proof (prove)\nusing this:\n  is_weak_bisimulation R \\<and> R P Q\n  R Q P\n\ngoal (1 subgoal):\n 1. \\<exists>R. is_weak_bisimulation R \\<and> R Q P", "by auto"], ["proof (state)\nthis:\n  Q \\<approx>\\<cdot> P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weakly_bisimilar_is_weak_bisimulation: \"is_weak_bisimulation weakly_bisimilar\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_weak_bisimulation (\\<approx>\\<cdot>)", "unfolding is_weak_bisimulation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. symp (\\<approx>\\<cdot>) \\<and>\n    (\\<forall>P Q \\<phi>.\n        P \\<approx>\\<cdot> Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n        (\\<exists>Q'.\n            Q \\<Rightarrow> Q' \\<and>\n            P \\<approx>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>)) \\<and>\n    (\\<forall>P Q.\n        P \\<approx>\\<cdot> Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                P' \\<approx>\\<cdot> Q')))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. symp (\\<approx>\\<cdot>)\n 2. (\\<forall>P Q \\<phi>.\n        P \\<approx>\\<cdot> Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n        (\\<exists>Q'.\n            Q \\<Rightarrow> Q' \\<and>\n            P \\<approx>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>)) \\<and>\n    (\\<forall>P Q.\n        P \\<approx>\\<cdot> Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                P' \\<approx>\\<cdot> Q')))", "show \"symp (\\<approx>\\<cdot>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symp (\\<approx>\\<cdot>)", "by (fact weakly_bisimilar_symp)"], ["proof (state)\nthis:\n  symp (\\<approx>\\<cdot>)\n\ngoal (1 subgoal):\n 1. (\\<forall>P Q \\<phi>.\n        P \\<approx>\\<cdot> Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n        (\\<exists>Q'.\n            Q \\<Rightarrow> Q' \\<and>\n            P \\<approx>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>)) \\<and>\n    (\\<forall>P Q.\n        P \\<approx>\\<cdot> Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                P' \\<approx>\\<cdot> Q')))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<forall>P Q \\<phi>.\n        P \\<approx>\\<cdot> Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n        (\\<exists>Q'.\n            Q \\<Rightarrow> Q' \\<and>\n            P \\<approx>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>)) \\<and>\n    (\\<forall>P Q.\n        P \\<approx>\\<cdot> Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                P' \\<approx>\\<cdot> Q')))", "show \"(\\<forall>P Q \\<phi>. P \\<approx>\\<cdot> Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow> (\\<exists>Q'. Q \\<Rightarrow> Q' \\<and> P \\<approx>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>)) \\<and>\n      (\\<forall>P Q. P \\<approx>\\<cdot> Q \\<longrightarrow> (\\<forall>\\<alpha> P'. bn \\<alpha> \\<sharp>* Q \\<longrightarrow> P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow> (\\<exists>Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and> P' \\<approx>\\<cdot> Q')))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>P Q \\<phi>.\n        P \\<approx>\\<cdot> Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n        (\\<exists>Q'.\n            Q \\<Rightarrow> Q' \\<and>\n            P \\<approx>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>)) \\<and>\n    (\\<forall>P Q.\n        P \\<approx>\\<cdot> Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                P' \\<approx>\\<cdot> Q')))", "by (auto simp add: is_weak_bisimulation_def weakly_bisimilar_def) blast+"], ["proof (state)\nthis:\n  (\\<forall>P Q \\<phi>.\n      P \\<approx>\\<cdot> Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n      (\\<exists>Q'.\n          Q \\<Rightarrow> Q' \\<and>\n          P \\<approx>\\<cdot> Q' \\<and> Q' \\<turnstile> \\<phi>)) \\<and>\n  (\\<forall>P Q.\n      P \\<approx>\\<cdot> Q \\<longrightarrow>\n      (\\<forall>\\<alpha> P'.\n          bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n          P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n          (\\<exists>Q'.\n              Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n              P' \\<approx>\\<cdot> Q')))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weakly_bisimilar_tau_simulation_step:\n    assumes \"P \\<approx>\\<cdot> Q\" and \"P \\<Rightarrow> P'\"\n    obtains Q' where \"Q \\<Rightarrow> Q'\" and \"P' \\<approx>\\<cdot> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q \\<Rightarrow> Q'; P' \\<approx>\\<cdot> Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>P \\<Rightarrow> P'\\<close> \\<open>P \\<approx>\\<cdot> Q\\<close>"], ["proof (prove)\nusing this:\n  P \\<Rightarrow> P'\n  P \\<approx>\\<cdot> Q\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q \\<Rightarrow> Q'; P' \\<approx>\\<cdot> Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (induct arbitrary: Q)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>\\<And>Q'.\n                   \\<lbrakk>Q \\<Rightarrow> Q';\n                    P \\<approx>\\<cdot> Q'\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        P \\<approx>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>P P' P'' Q.\n       \\<lbrakk>P \\<rightarrow> \\<langle>\\<tau>,P'\\<rangle>;\n        P' \\<Rightarrow> P'';\n        \\<And>Q.\n           \\<lbrakk>\\<And>Q'.\n                       \\<lbrakk>Q \\<Rightarrow> Q';\n                        P'' \\<approx>\\<cdot> Q'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            P' \\<approx>\\<cdot> Q\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>Q'.\n           \\<lbrakk>Q \\<Rightarrow> Q'; P'' \\<approx>\\<cdot> Q'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        P \\<approx>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (tau_refl P)"], ["proof (state)\nthis:\n  \\<lbrakk>Q \\<Rightarrow> ?Q'; P \\<approx>\\<cdot> ?Q'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  P \\<approx>\\<cdot> Q\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>\\<And>Q'.\n                   \\<lbrakk>Q \\<Rightarrow> Q';\n                    P \\<approx>\\<cdot> Q'\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        P \\<approx>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>P P' P'' Q.\n       \\<lbrakk>P \\<rightarrow> \\<langle>\\<tau>,P'\\<rangle>;\n        P' \\<Rightarrow> P'';\n        \\<And>Q.\n           \\<lbrakk>\\<And>Q'.\n                       \\<lbrakk>Q \\<Rightarrow> Q';\n                        P'' \\<approx>\\<cdot> Q'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            P' \\<approx>\\<cdot> Q\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>Q'.\n           \\<lbrakk>Q \\<Rightarrow> Q'; P'' \\<approx>\\<cdot> Q'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        P \\<approx>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>Q \\<Rightarrow> ?Q'; P \\<approx>\\<cdot> ?Q'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  P \\<approx>\\<cdot> Q", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>Q \\<Rightarrow> ?Q'; P \\<approx>\\<cdot> ?Q'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  P \\<approx>\\<cdot> Q\n\ngoal (1 subgoal):\n 1. thesis", "by (metis tau_transition.tau_refl)"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<And>P P' P'' Q.\n       \\<lbrakk>P \\<rightarrow> \\<langle>\\<tau>,P'\\<rangle>;\n        P' \\<Rightarrow> P'';\n        \\<And>Q.\n           \\<lbrakk>\\<And>Q'.\n                       \\<lbrakk>Q \\<Rightarrow> Q';\n                        P'' \\<approx>\\<cdot> Q'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            P' \\<approx>\\<cdot> Q\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>Q'.\n           \\<lbrakk>Q \\<Rightarrow> Q'; P'' \\<approx>\\<cdot> Q'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        P \\<approx>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P P' P'' Q.\n       \\<lbrakk>P \\<rightarrow> \\<langle>\\<tau>,P'\\<rangle>;\n        P' \\<Rightarrow> P'';\n        \\<And>Q.\n           \\<lbrakk>\\<And>Q'.\n                       \\<lbrakk>Q \\<Rightarrow> Q';\n                        P'' \\<approx>\\<cdot> Q'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            P' \\<approx>\\<cdot> Q\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>Q'.\n           \\<lbrakk>Q \\<Rightarrow> Q'; P'' \\<approx>\\<cdot> Q'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        P \\<approx>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> thesis", "case (tau_step P P'' P')"], ["proof (state)\nthis:\n  P \\<rightarrow> \\<langle>\\<tau>,P''\\<rangle>\n  P'' \\<Rightarrow> P'\n  \\<lbrakk>\\<And>Q'.\n              \\<lbrakk>?Q \\<Rightarrow> Q'; P' \\<approx>\\<cdot> Q'\\<rbrakk>\n              \\<Longrightarrow> thesis;\n   P'' \\<approx>\\<cdot> ?Q\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Q \\<Rightarrow> ?Q'; P' \\<approx>\\<cdot> ?Q'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  P \\<approx>\\<cdot> Q\n\ngoal (1 subgoal):\n 1. \\<And>P P' P'' Q.\n       \\<lbrakk>P \\<rightarrow> \\<langle>\\<tau>,P'\\<rangle>;\n        P' \\<Rightarrow> P'';\n        \\<And>Q.\n           \\<lbrakk>\\<And>Q'.\n                       \\<lbrakk>Q \\<Rightarrow> Q';\n                        P'' \\<approx>\\<cdot> Q'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            P' \\<approx>\\<cdot> Q\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>Q'.\n           \\<lbrakk>Q \\<Rightarrow> Q'; P'' \\<approx>\\<cdot> Q'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        P \\<approx>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> thesis", "from \\<open>P \\<rightarrow> \\<langle>\\<tau>,P''\\<rangle>\\<close> and \\<open>P \\<approx>\\<cdot> Q\\<close>"], ["proof (chain)\npicking this:\n  P \\<rightarrow> \\<langle>\\<tau>,P''\\<rangle>\n  P \\<approx>\\<cdot> Q", "obtain Q'' where \"Q \\<Rightarrow> Q''\" and \"P'' \\<approx>\\<cdot> Q''\""], ["proof (prove)\nusing this:\n  P \\<rightarrow> \\<langle>\\<tau>,P''\\<rangle>\n  P \\<approx>\\<cdot> Q\n\ngoal (1 subgoal):\n 1. (\\<And>Q''.\n        \\<lbrakk>Q \\<Rightarrow> Q''; P'' \\<approx>\\<cdot> Q''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis bn_tau_fresh is_weak_bisimulation_def weak_transition_def weakly_bisimilar_is_weak_bisimulation)"], ["proof (state)\nthis:\n  Q \\<Rightarrow> Q''\n  P'' \\<approx>\\<cdot> Q''\n\ngoal (1 subgoal):\n 1. \\<And>P P' P'' Q.\n       \\<lbrakk>P \\<rightarrow> \\<langle>\\<tau>,P'\\<rangle>;\n        P' \\<Rightarrow> P'';\n        \\<And>Q.\n           \\<lbrakk>\\<And>Q'.\n                       \\<lbrakk>Q \\<Rightarrow> Q';\n                        P'' \\<approx>\\<cdot> Q'\\<rbrakk>\n                       \\<Longrightarrow> thesis;\n            P' \\<approx>\\<cdot> Q\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        \\<And>Q'.\n           \\<lbrakk>Q \\<Rightarrow> Q'; P'' \\<approx>\\<cdot> Q'\\<rbrakk>\n           \\<Longrightarrow> thesis;\n        P \\<approx>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  Q \\<Rightarrow> Q''\n  P'' \\<approx>\\<cdot> Q''", "show ?case"], ["proof (prove)\nusing this:\n  Q \\<Rightarrow> Q''\n  P'' \\<approx>\\<cdot> Q''\n\ngoal (1 subgoal):\n 1. thesis", "using tau_step.hyps(3) tau_step.prems(1)"], ["proof (prove)\nusing this:\n  Q \\<Rightarrow> Q''\n  P'' \\<approx>\\<cdot> Q''\n  \\<lbrakk>\\<And>Q'.\n              \\<lbrakk>?Q \\<Rightarrow> Q'; P' \\<approx>\\<cdot> Q'\\<rbrakk>\n              \\<Longrightarrow> thesis;\n   P'' \\<approx>\\<cdot> ?Q\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>Q \\<Rightarrow> ?Q'; P' \\<approx>\\<cdot> ?Q'\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by (metis tau_transition_trans)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weakly_bisimilar_weak_simulation_step:\n    assumes \"P \\<approx>\\<cdot> Q\" and \"bn \\<alpha> \\<sharp>* Q\" and \"P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'\"\n    obtains Q' where \"Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q'\" and \"P' \\<approx>\\<cdot> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q';\n         P' \\<approx>\\<cdot> Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (cases \"\\<alpha> = \\<tau>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>Q'.\n                \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q';\n                 P' \\<approx>\\<cdot> Q'\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<alpha> = \\<tau>\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>Q'.\n                \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q';\n                 P' \\<approx>\\<cdot> Q'\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<alpha> \\<noteq> \\<tau>\\<rbrakk>\n    \\<Longrightarrow> thesis", "case True"], ["proof (state)\nthis:\n  \\<alpha> = \\<tau>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>Q'.\n                \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q';\n                 P' \\<approx>\\<cdot> Q'\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<alpha> = \\<tau>\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>Q'.\n                \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q';\n                 P' \\<approx>\\<cdot> Q'\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<alpha> \\<noteq> \\<tau>\\<rbrakk>\n    \\<Longrightarrow> thesis", "with \\<open>P \\<approx>\\<cdot> Q\\<close> and \\<open>P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'\\<close> and that"], ["proof (chain)\npicking this:\n  P \\<approx>\\<cdot> Q\n  P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'\n  \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> ?Q';\n   P' \\<approx>\\<cdot> ?Q'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<alpha> = \\<tau>", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<approx>\\<cdot> Q\n  P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'\n  \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> ?Q';\n   P' \\<approx>\\<cdot> ?Q'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<alpha> = \\<tau>\n\ngoal (1 subgoal):\n 1. thesis", "using weak_transition_tau_iff weakly_bisimilar_tau_simulation_step"], ["proof (prove)\nusing this:\n  P \\<approx>\\<cdot> Q\n  P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'\n  \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> ?Q';\n   P' \\<approx>\\<cdot> ?Q'\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<alpha> = \\<tau>\n  ?P \\<Rightarrow>\\<langle>\\<tau>\\<rangle> ?P' = ?P \\<Rightarrow> ?P'\n  \\<lbrakk>?P \\<approx>\\<cdot> ?Q; ?P \\<Rightarrow> ?P';\n   \\<And>Q'.\n      \\<lbrakk>?Q \\<Rightarrow> Q'; ?P' \\<approx>\\<cdot> Q'\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. thesis", "by force"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Q'.\n                \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q';\n                 P' \\<approx>\\<cdot> Q'\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<alpha> \\<noteq> \\<tau>\\<rbrakk>\n    \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Q'.\n                \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q';\n                 P' \\<approx>\\<cdot> Q'\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<alpha> \\<noteq> \\<tau>\\<rbrakk>\n    \\<Longrightarrow> thesis", "case False"], ["proof (state)\nthis:\n  \\<alpha> \\<noteq> \\<tau>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Q'.\n                \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q';\n                 P' \\<approx>\\<cdot> Q'\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<alpha> \\<noteq> \\<tau>\\<rbrakk>\n    \\<Longrightarrow> thesis", "with \\<open>P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'\\<close>"], ["proof (chain)\npicking this:\n  P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'\n  \\<alpha> \\<noteq> \\<tau>", "have \"P \\<Rightarrow>{\\<alpha>} P'\""], ["proof (prove)\nusing this:\n  P \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> P'\n  \\<alpha> \\<noteq> \\<tau>\n\ngoal (1 subgoal):\n 1. P \\<Rightarrow>{\\<alpha>} P'", "by simp"], ["proof (state)\nthis:\n  P \\<Rightarrow>{\\<alpha>} P'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Q'.\n                \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q';\n                 P' \\<approx>\\<cdot> Q'\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<alpha> \\<noteq> \\<tau>\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  P \\<Rightarrow>{\\<alpha>} P'", "obtain P1 P2 where tauP: \"P \\<Rightarrow> P1\" and trans: \"P1 \\<rightarrow> \\<langle>\\<alpha>,P2\\<rangle>\" and tauP2: \"P2 \\<Rightarrow> P'\""], ["proof (prove)\nusing this:\n  P \\<Rightarrow>{\\<alpha>} P'\n\ngoal (1 subgoal):\n 1. (\\<And>P1 P2.\n        \\<lbrakk>P \\<Rightarrow> P1;\n         P1 \\<rightarrow> \\<langle>\\<alpha>,P2\\<rangle>;\n         P2 \\<Rightarrow> P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using observable_transition_def"], ["proof (prove)\nusing this:\n  P \\<Rightarrow>{\\<alpha>} P'\n  ?P \\<Rightarrow>{?\\<alpha>} ?P' \\<equiv>\n  \\<exists>Q Q'.\n     ?P \\<Rightarrow> Q \\<and>\n     Q \\<rightarrow> \\<langle>?\\<alpha>,Q'\\<rangle> \\<and>\n     Q' \\<Rightarrow> ?P'\n\ngoal (1 subgoal):\n 1. (\\<And>P1 P2.\n        \\<lbrakk>P \\<Rightarrow> P1;\n         P1 \\<rightarrow> \\<langle>\\<alpha>,P2\\<rangle>;\n         P2 \\<Rightarrow> P'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<Rightarrow> P1\n  P1 \\<rightarrow> \\<langle>\\<alpha>,P2\\<rangle>\n  P2 \\<Rightarrow> P'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Q'.\n                \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q';\n                 P' \\<approx>\\<cdot> Q'\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<alpha> \\<noteq> \\<tau>\\<rbrakk>\n    \\<Longrightarrow> thesis", "from \\<open>P \\<approx>\\<cdot> Q\\<close> and tauP"], ["proof (chain)\npicking this:\n  P \\<approx>\\<cdot> Q\n  P \\<Rightarrow> P1", "obtain Q1 where tauQ: \"Q \\<Rightarrow> Q1\" and P1Q1: \"P1 \\<approx>\\<cdot> Q1\""], ["proof (prove)\nusing this:\n  P \\<approx>\\<cdot> Q\n  P \\<Rightarrow> P1\n\ngoal (1 subgoal):\n 1. (\\<And>Q1.\n        \\<lbrakk>Q \\<Rightarrow> Q1; P1 \\<approx>\\<cdot> Q1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis weakly_bisimilar_tau_simulation_step)\n\n    \\<comment> \\<open>rename~@{term \"\\<langle>\\<alpha>,P2\\<rangle>\"} to avoid~@{term Q1}, without touching~@{term Q}\\<close>"], ["proof (state)\nthis:\n  Q \\<Rightarrow> Q1\n  P1 \\<approx>\\<cdot> Q1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Q'.\n                \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q';\n                 P' \\<approx>\\<cdot> Q'\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<alpha> \\<noteq> \\<tau>\\<rbrakk>\n    \\<Longrightarrow> thesis", "obtain p where 1: \"(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1\" and 2: \"supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n         supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (rule at_set_avoiding2[of \"bn \\<alpha>\" Q1 \"(\\<langle>\\<alpha>,P2\\<rangle>, Q)\", THEN exE])"], ["proof (state)\ngoal (5 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n         supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (bn \\<alpha>)\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n         supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp Q1)\n 3. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n         supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp (\\<langle>\\<alpha>,P2\\<rangle>, Q))\n 4. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n         supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P2\\<rangle>, Q)\n 5. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n                    supp\n                     (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* Q1 \\<and>\n        supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"finite (bn \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (bn \\<alpha>)", "by (fact bn_finite)"], ["proof (state)\nthis:\n  finite (bn \\<alpha>)\n\ngoal (4 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n         supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp Q1)\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n         supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp (\\<langle>\\<alpha>,P2\\<rangle>, Q))\n 3. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n         supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P2\\<rangle>, Q)\n 4. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n                    supp\n                     (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* Q1 \\<and>\n        supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n         supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp Q1)\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n         supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp (\\<langle>\\<alpha>,P2\\<rangle>, Q))\n 3. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n         supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P2\\<rangle>, Q)\n 4. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n                    supp\n                     (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* Q1 \\<and>\n        supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"finite (supp Q1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (supp Q1)", "by (fact finite_supp)"], ["proof (state)\nthis:\n  finite (supp Q1)\n\ngoal (3 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n         supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp (\\<langle>\\<alpha>,P2\\<rangle>, Q))\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n         supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P2\\<rangle>, Q)\n 3. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n                    supp\n                     (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* Q1 \\<and>\n        supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n         supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp (\\<langle>\\<alpha>,P2\\<rangle>, Q))\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n         supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P2\\<rangle>, Q)\n 3. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n                    supp\n                     (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* Q1 \\<and>\n        supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"finite (supp (\\<langle>\\<alpha>,P2\\<rangle>, Q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (supp (\\<langle>\\<alpha>,P2\\<rangle>, Q))", "by (simp add: finite_supp supp_Pair)"], ["proof (state)\nthis:\n  finite (supp (\\<langle>\\<alpha>,P2\\<rangle>, Q))\n\ngoal (2 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n         supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P2\\<rangle>, Q)\n 2. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n                    supp\n                     (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* Q1 \\<and>\n        supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n         supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P2\\<rangle>, Q)\n 2. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n                    supp\n                     (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* Q1 \\<and>\n        supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P2\\<rangle>, Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P2\\<rangle>, Q)", "using \\<open>bn \\<alpha> \\<sharp>* Q\\<close>"], ["proof (prove)\nusing this:\n  bn \\<alpha> \\<sharp>* Q\n\ngoal (1 subgoal):\n 1. bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P2\\<rangle>, Q)", "by (simp add: fresh_star_Pair)"], ["proof (state)\nthis:\n  bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P2\\<rangle>, Q)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* Q1;\n                    supp\n                     (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* Q1 \\<and>\n        supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "qed metis"], ["proof (state)\nthis:\n  (p \\<bullet> bn \\<alpha>) \\<sharp>* Q1\n  supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Q'.\n                \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q';\n                 P' \\<approx>\\<cdot> Q'\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<alpha> \\<noteq> \\<tau>\\<rbrakk>\n    \\<Longrightarrow> thesis", "from 2"], ["proof (chain)\npicking this:\n  supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p", "have 3: \"supp \\<langle>\\<alpha>,P2\\<rangle> \\<sharp>* p\" and 4: \"supp Q \\<sharp>* p\""], ["proof (prove)\nusing this:\n  supp (\\<langle>\\<alpha>,P2\\<rangle>, Q) \\<sharp>* p\n\ngoal (1 subgoal):\n 1. supp \\<langle>\\<alpha>,P2\\<rangle> \\<sharp>* p &&& supp Q \\<sharp>* p", "by (simp add: fresh_star_Un supp_Pair)+"], ["proof (state)\nthis:\n  supp \\<langle>\\<alpha>,P2\\<rangle> \\<sharp>* p\n  supp Q \\<sharp>* p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Q'.\n                \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q';\n                 P' \\<approx>\\<cdot> Q'\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<alpha> \\<noteq> \\<tau>\\<rbrakk>\n    \\<Longrightarrow> thesis", "from 3"], ["proof (chain)\npicking this:\n  supp \\<langle>\\<alpha>,P2\\<rangle> \\<sharp>* p", "have \"\\<langle>p \\<bullet> \\<alpha>, p \\<bullet> P2\\<rangle> = \\<langle>\\<alpha>,P2\\<rangle>\""], ["proof (prove)\nusing this:\n  supp \\<langle>\\<alpha>,P2\\<rangle> \\<sharp>* p\n\ngoal (1 subgoal):\n 1. \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P2\\<rangle> =\n    \\<langle>\\<alpha>,P2\\<rangle>", "using supp_perm_eq"], ["proof (prove)\nusing this:\n  supp \\<langle>\\<alpha>,P2\\<rangle> \\<sharp>* p\n  supp ?x \\<sharp>* ?p \\<Longrightarrow> ?p \\<bullet> ?x = ?x\n\ngoal (1 subgoal):\n 1. \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P2\\<rangle> =\n    \\<langle>\\<alpha>,P2\\<rangle>", "by fastforce"], ["proof (state)\nthis:\n  \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P2\\<rangle> =\n  \\<langle>\\<alpha>,P2\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Q'.\n                \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q';\n                 P' \\<approx>\\<cdot> Q'\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<alpha> \\<noteq> \\<tau>\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P2\\<rangle> =\n  \\<langle>\\<alpha>,P2\\<rangle>", "obtain Q2 where trans': \"Q1 \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> Q2\" and P2Q2: \"(p \\<bullet> P2) \\<approx>\\<cdot> Q2\""], ["proof (prove)\nusing this:\n  \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P2\\<rangle> =\n  \\<langle>\\<alpha>,P2\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>Q2.\n        \\<lbrakk>Q1 \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> Q2;\n         (p \\<bullet> P2) \\<approx>\\<cdot> Q2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using P1Q1 trans 1"], ["proof (prove)\nusing this:\n  \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P2\\<rangle> =\n  \\<langle>\\<alpha>,P2\\<rangle>\n  P1 \\<approx>\\<cdot> Q1\n  P1 \\<rightarrow> \\<langle>\\<alpha>,P2\\<rangle>\n  (p \\<bullet> bn \\<alpha>) \\<sharp>* Q1\n\ngoal (1 subgoal):\n 1. (\\<And>Q2.\n        \\<lbrakk>Q1 \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> Q2;\n         (p \\<bullet> P2) \\<approx>\\<cdot> Q2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (mono_tags, lifting) weakly_bisimilar_is_weak_bisimulation bn_eqvt is_weak_bisimulation_def)"], ["proof (state)\nthis:\n  Q1 \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> Q2\n  (p \\<bullet> P2) \\<approx>\\<cdot> Q2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Q'.\n                \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q';\n                 P' \\<approx>\\<cdot> Q'\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<alpha> \\<noteq> \\<tau>\\<rbrakk>\n    \\<Longrightarrow> thesis", "from tauP2"], ["proof (chain)\npicking this:\n  P2 \\<Rightarrow> P'", "have \"p \\<bullet> P2 \\<Rightarrow> p \\<bullet> P'\""], ["proof (prove)\nusing this:\n  P2 \\<Rightarrow> P'\n\ngoal (1 subgoal):\n 1. p \\<bullet> P2 \\<Rightarrow> p \\<bullet> P'", "by (fact tau_transition_eqvt)"], ["proof (state)\nthis:\n  p \\<bullet> P2 \\<Rightarrow> p \\<bullet> P'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Q'.\n                \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q';\n                 P' \\<approx>\\<cdot> Q'\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<alpha> \\<noteq> \\<tau>\\<rbrakk>\n    \\<Longrightarrow> thesis", "with P2Q2"], ["proof (chain)\npicking this:\n  (p \\<bullet> P2) \\<approx>\\<cdot> Q2\n  p \\<bullet> P2 \\<Rightarrow> p \\<bullet> P'", "obtain Q' where tauQ2: \"Q2 \\<Rightarrow> Q'\" and P'Q': \"(p \\<bullet> P') \\<approx>\\<cdot> Q'\""], ["proof (prove)\nusing this:\n  (p \\<bullet> P2) \\<approx>\\<cdot> Q2\n  p \\<bullet> P2 \\<Rightarrow> p \\<bullet> P'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q2 \\<Rightarrow> Q';\n         (p \\<bullet> P') \\<approx>\\<cdot> Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis weakly_bisimilar_tau_simulation_step)"], ["proof (state)\nthis:\n  Q2 \\<Rightarrow> Q'\n  (p \\<bullet> P') \\<approx>\\<cdot> Q'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Q'.\n                \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q';\n                 P' \\<approx>\\<cdot> Q'\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<alpha> \\<noteq> \\<tau>\\<rbrakk>\n    \\<Longrightarrow> thesis", "from tauQ and trans' and tauQ2"], ["proof (chain)\npicking this:\n  Q \\<Rightarrow> Q1\n  Q1 \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> Q2\n  Q2 \\<Rightarrow> Q'", "have \"Q \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> Q'\""], ["proof (prove)\nusing this:\n  Q \\<Rightarrow> Q1\n  Q1 \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> Q2\n  Q2 \\<Rightarrow> Q'\n\ngoal (1 subgoal):\n 1. Q \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> Q'", "by (rule weak_transition_weakI)"], ["proof (state)\nthis:\n  Q \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> Q'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Q'.\n                \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q';\n                 P' \\<approx>\\<cdot> Q'\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<alpha> \\<noteq> \\<tau>\\<rbrakk>\n    \\<Longrightarrow> thesis", "with 4"], ["proof (chain)\npicking this:\n  supp Q \\<sharp>* p\n  Q \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> Q'", "have \"Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> (-p \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  supp Q \\<sharp>* p\n  Q \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> Q'\n\ngoal (1 subgoal):\n 1. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> - p \\<bullet> Q'", "by (metis permute_minus_cancel(2) supp_perm_eq weak_transition_eqvt)"], ["proof (state)\nthis:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> - p \\<bullet> Q'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Q'.\n                \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q';\n                 P' \\<approx>\\<cdot> Q'\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<alpha> \\<noteq> \\<tau>\\<rbrakk>\n    \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> - p \\<bullet> Q'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Q'.\n                \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q';\n                 P' \\<approx>\\<cdot> Q'\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<alpha> \\<noteq> \\<tau>\\<rbrakk>\n    \\<Longrightarrow> thesis", "from P'Q'"], ["proof (chain)\npicking this:\n  (p \\<bullet> P') \\<approx>\\<cdot> Q'", "have \"P' \\<approx>\\<cdot> (-p \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  (p \\<bullet> P') \\<approx>\\<cdot> Q'\n\ngoal (1 subgoal):\n 1. P' \\<approx>\\<cdot> (- p \\<bullet> Q')", "by (metis permute_minus_cancel(2) weakly_bisimilar_eqvt)"], ["proof (state)\nthis:\n  P' \\<approx>\\<cdot> (- p \\<bullet> Q')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>Q'.\n                \\<lbrakk>Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q';\n                 P' \\<approx>\\<cdot> Q'\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<alpha> \\<noteq> \\<tau>\\<rbrakk>\n    \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> - p \\<bullet> Q'\n  P' \\<approx>\\<cdot> (- p \\<bullet> Q')", "show ?thesis"], ["proof (prove)\nusing this:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> - p \\<bullet> Q'\n  P' \\<approx>\\<cdot> (- p \\<bullet> Q')\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weakly_bisimilar_transp: \"transp weakly_bisimilar\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transp (\\<approx>\\<cdot>)", "proof (rule transpI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<approx>\\<cdot> y; y \\<approx>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<approx>\\<cdot> z", "fix P Q R"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<approx>\\<cdot> y; y \\<approx>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<approx>\\<cdot> z", "assume PQ: \"P \\<approx>\\<cdot> Q\" and QR: \"Q \\<approx>\\<cdot> R\""], ["proof (state)\nthis:\n  P \\<approx>\\<cdot> Q\n  Q \\<approx>\\<cdot> R\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<approx>\\<cdot> y; y \\<approx>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<approx>\\<cdot> z", "let ?bisim = \"weakly_bisimilar OO weakly_bisimilar\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<approx>\\<cdot> y; y \\<approx>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<approx>\\<cdot> z", "have \"symp ?bisim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symp ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>))", "proof (rule sympI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) a b \\<Longrightarrow>\n       ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) b a", "fix P R"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) a b \\<Longrightarrow>\n       ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) b a", "assume \"?bisim P R\""], ["proof (state)\nthis:\n  ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P R\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) a b \\<Longrightarrow>\n       ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) b a", "then"], ["proof (chain)\npicking this:\n  ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P R", "obtain Q where \"P \\<approx>\\<cdot> Q\" and \"Q \\<approx>\\<cdot> R\""], ["proof (prove)\nusing this:\n  ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P R\n\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        \\<lbrakk>P \\<approx>\\<cdot> Q; Q \\<approx>\\<cdot> R\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<approx>\\<cdot> Q\n  Q \\<approx>\\<cdot> R\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) a b \\<Longrightarrow>\n       ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) b a", "then"], ["proof (chain)\npicking this:\n  P \\<approx>\\<cdot> Q\n  Q \\<approx>\\<cdot> R", "have \"R \\<approx>\\<cdot> Q\" and \"Q \\<approx>\\<cdot> P\""], ["proof (prove)\nusing this:\n  P \\<approx>\\<cdot> Q\n  Q \\<approx>\\<cdot> R\n\ngoal (1 subgoal):\n 1. R \\<approx>\\<cdot> Q &&& Q \\<approx>\\<cdot> P", "by (metis weakly_bisimilar_symp sympE)+"], ["proof (state)\nthis:\n  R \\<approx>\\<cdot> Q\n  Q \\<approx>\\<cdot> P\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) a b \\<Longrightarrow>\n       ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) b a", "then"], ["proof (chain)\npicking this:\n  R \\<approx>\\<cdot> Q\n  Q \\<approx>\\<cdot> P", "show \"?bisim R P\""], ["proof (prove)\nusing this:\n  R \\<approx>\\<cdot> Q\n  Q \\<approx>\\<cdot> P\n\ngoal (1 subgoal):\n 1. ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) R P", "by blast"], ["proof (state)\nthis:\n  ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) R P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  symp ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>))\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<approx>\\<cdot> y; y \\<approx>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<approx>\\<cdot> z", "moreover"], ["proof (state)\nthis:\n  symp ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>))\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<approx>\\<cdot> y; y \\<approx>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<approx>\\<cdot> z", "have \"\\<forall>P Q \\<phi>. ?bisim P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow> (\\<exists>Q'. Q \\<Rightarrow> Q' \\<and> ?bisim P Q' \\<and> Q' \\<turnstile> \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P Q \\<phi>.\n       ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q \\<and>\n       P \\<turnstile> \\<phi> \\<longrightarrow>\n       (\\<exists>Q'.\n           Q \\<Rightarrow> Q' \\<and>\n           ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q' \\<and>\n           Q' \\<turnstile> \\<phi>)", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi> b.\n       \\<lbrakk>P \\<turnstile> \\<phi>; P \\<approx>\\<cdot> b;\n        b \\<approx>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow> Q' \\<and>\n                            ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P\n                             Q' \\<and>\n                            Q' \\<turnstile> \\<phi>", "fix P Q \\<phi> R"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi> b.\n       \\<lbrakk>P \\<turnstile> \\<phi>; P \\<approx>\\<cdot> b;\n        b \\<approx>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow> Q' \\<and>\n                            ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P\n                             Q' \\<and>\n                            Q' \\<turnstile> \\<phi>", "assume phi: \"P \\<turnstile> \\<phi>\" and PR: \"P \\<approx>\\<cdot> R\" and RQ: \"R \\<approx>\\<cdot> Q\""], ["proof (state)\nthis:\n  P \\<turnstile> \\<phi>\n  P \\<approx>\\<cdot> R\n  R \\<approx>\\<cdot> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi> b.\n       \\<lbrakk>P \\<turnstile> \\<phi>; P \\<approx>\\<cdot> b;\n        b \\<approx>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow> Q' \\<and>\n                            ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P\n                             Q' \\<and>\n                            Q' \\<turnstile> \\<phi>", "from PR and phi"], ["proof (chain)\npicking this:\n  P \\<approx>\\<cdot> R\n  P \\<turnstile> \\<phi>", "obtain R' where \"R \\<Rightarrow> R'\" and \"P \\<approx>\\<cdot> R'\" and *: \"R' \\<turnstile> \\<phi>\""], ["proof (prove)\nusing this:\n  P \\<approx>\\<cdot> R\n  P \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. (\\<And>R'.\n        \\<lbrakk>R \\<Rightarrow> R'; P \\<approx>\\<cdot> R';\n         R' \\<turnstile> \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using weakly_bisimilar_is_weak_bisimulation is_weak_bisimulation_def"], ["proof (prove)\nusing this:\n  P \\<approx>\\<cdot> R\n  P \\<turnstile> \\<phi>\n  is_weak_bisimulation (\\<approx>\\<cdot>)\n  is_weak_bisimulation ?R \\<equiv>\n  symp ?R \\<and>\n  (\\<forall>P Q \\<phi>.\n      ?R P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n      (\\<exists>Q'.\n          Q \\<Rightarrow> Q' \\<and>\n          ?R P Q' \\<and> Q' \\<turnstile> \\<phi>)) \\<and>\n  (\\<forall>P Q.\n      ?R P Q \\<longrightarrow>\n      (\\<forall>\\<alpha> P'.\n          bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n          P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n          (\\<exists>Q'.\n              Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n              ?R P' Q')))\n\ngoal (1 subgoal):\n 1. (\\<And>R'.\n        \\<lbrakk>R \\<Rightarrow> R'; P \\<approx>\\<cdot> R';\n         R' \\<turnstile> \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  R \\<Rightarrow> R'\n  P \\<approx>\\<cdot> R'\n  R' \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi> b.\n       \\<lbrakk>P \\<turnstile> \\<phi>; P \\<approx>\\<cdot> b;\n        b \\<approx>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow> Q' \\<and>\n                            ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P\n                             Q' \\<and>\n                            Q' \\<turnstile> \\<phi>", "from RQ and \\<open>R \\<Rightarrow> R'\\<close>"], ["proof (chain)\npicking this:\n  R \\<approx>\\<cdot> Q\n  R \\<Rightarrow> R'", "obtain Q' where \"Q \\<Rightarrow> Q'\" and \"R' \\<approx>\\<cdot> Q'\""], ["proof (prove)\nusing this:\n  R \\<approx>\\<cdot> Q\n  R \\<Rightarrow> R'\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q \\<Rightarrow> Q'; R' \\<approx>\\<cdot> Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis weakly_bisimilar_tau_simulation_step)"], ["proof (state)\nthis:\n  Q \\<Rightarrow> Q'\n  R' \\<approx>\\<cdot> Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi> b.\n       \\<lbrakk>P \\<turnstile> \\<phi>; P \\<approx>\\<cdot> b;\n        b \\<approx>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow> Q' \\<and>\n                            ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P\n                             Q' \\<and>\n                            Q' \\<turnstile> \\<phi>", "from \\<open>R' \\<approx>\\<cdot> Q'\\<close> and *"], ["proof (chain)\npicking this:\n  R' \\<approx>\\<cdot> Q'\n  R' \\<turnstile> \\<phi>", "obtain Q'' where \"Q' \\<Rightarrow> Q''\" and \"R' \\<approx>\\<cdot> Q''\" and **: \"Q'' \\<turnstile> \\<phi>\""], ["proof (prove)\nusing this:\n  R' \\<approx>\\<cdot> Q'\n  R' \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. (\\<And>Q''.\n        \\<lbrakk>Q' \\<Rightarrow> Q''; R' \\<approx>\\<cdot> Q'';\n         Q'' \\<turnstile> \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using weakly_bisimilar_is_weak_bisimulation is_weak_bisimulation_def"], ["proof (prove)\nusing this:\n  R' \\<approx>\\<cdot> Q'\n  R' \\<turnstile> \\<phi>\n  is_weak_bisimulation (\\<approx>\\<cdot>)\n  is_weak_bisimulation ?R \\<equiv>\n  symp ?R \\<and>\n  (\\<forall>P Q \\<phi>.\n      ?R P Q \\<and> P \\<turnstile> \\<phi> \\<longrightarrow>\n      (\\<exists>Q'.\n          Q \\<Rightarrow> Q' \\<and>\n          ?R P Q' \\<and> Q' \\<turnstile> \\<phi>)) \\<and>\n  (\\<forall>P Q.\n      ?R P Q \\<longrightarrow>\n      (\\<forall>\\<alpha> P'.\n          bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n          P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n          (\\<exists>Q'.\n              Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n              ?R P' Q')))\n\ngoal (1 subgoal):\n 1. (\\<And>Q''.\n        \\<lbrakk>Q' \\<Rightarrow> Q''; R' \\<approx>\\<cdot> Q'';\n         Q'' \\<turnstile> \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  Q' \\<Rightarrow> Q''\n  R' \\<approx>\\<cdot> Q''\n  Q'' \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi> b.\n       \\<lbrakk>P \\<turnstile> \\<phi>; P \\<approx>\\<cdot> b;\n        b \\<approx>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow> Q' \\<and>\n                            ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P\n                             Q' \\<and>\n                            Q' \\<turnstile> \\<phi>", "from \\<open>Q \\<Rightarrow> Q'\\<close> and \\<open>Q' \\<Rightarrow> Q''\\<close>"], ["proof (chain)\npicking this:\n  Q \\<Rightarrow> Q'\n  Q' \\<Rightarrow> Q''", "have \"Q \\<Rightarrow> Q''\""], ["proof (prove)\nusing this:\n  Q \\<Rightarrow> Q'\n  Q' \\<Rightarrow> Q''\n\ngoal (1 subgoal):\n 1. Q \\<Rightarrow> Q''", "by (fact tau_transition_trans)"], ["proof (state)\nthis:\n  Q \\<Rightarrow> Q''\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi> b.\n       \\<lbrakk>P \\<turnstile> \\<phi>; P \\<approx>\\<cdot> b;\n        b \\<approx>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow> Q' \\<and>\n                            ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P\n                             Q' \\<and>\n                            Q' \\<turnstile> \\<phi>", "moreover"], ["proof (state)\nthis:\n  Q \\<Rightarrow> Q''\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi> b.\n       \\<lbrakk>P \\<turnstile> \\<phi>; P \\<approx>\\<cdot> b;\n        b \\<approx>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow> Q' \\<and>\n                            ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P\n                             Q' \\<and>\n                            Q' \\<turnstile> \\<phi>", "from \\<open>P \\<approx>\\<cdot> R'\\<close> and \\<open>R' \\<approx>\\<cdot> Q''\\<close>"], ["proof (chain)\npicking this:\n  P \\<approx>\\<cdot> R'\n  R' \\<approx>\\<cdot> Q''", "have \"?bisim P Q''\""], ["proof (prove)\nusing this:\n  P \\<approx>\\<cdot> R'\n  R' \\<approx>\\<cdot> Q''\n\ngoal (1 subgoal):\n 1. ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q''", "by blast"], ["proof (state)\nthis:\n  ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q''\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi> b.\n       \\<lbrakk>P \\<turnstile> \\<phi>; P \\<approx>\\<cdot> b;\n        b \\<approx>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow> Q' \\<and>\n                            ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P\n                             Q' \\<and>\n                            Q' \\<turnstile> \\<phi>", "ultimately"], ["proof (chain)\npicking this:\n  Q \\<Rightarrow> Q''\n  ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q''", "show \"\\<exists>Q'. Q \\<Rightarrow> Q' \\<and> ?bisim P Q' \\<and> Q' \\<turnstile> \\<phi>\""], ["proof (prove)\nusing this:\n  Q \\<Rightarrow> Q''\n  ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q''\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       Q \\<Rightarrow> Q' \\<and>\n       ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q' \\<and>\n       Q' \\<turnstile> \\<phi>", "using **"], ["proof (prove)\nusing this:\n  Q \\<Rightarrow> Q''\n  ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q''\n  Q'' \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       Q \\<Rightarrow> Q' \\<and>\n       ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q' \\<and>\n       Q' \\<turnstile> \\<phi>", "by metis"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     Q \\<Rightarrow> Q' \\<and>\n     ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q' \\<and>\n     Q' \\<turnstile> \\<phi>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P Q \\<phi>.\n     ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q \\<and>\n     P \\<turnstile> \\<phi> \\<longrightarrow>\n     (\\<exists>Q'.\n         Q \\<Rightarrow> Q' \\<and>\n         ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q' \\<and>\n         Q' \\<turnstile> \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<approx>\\<cdot> y; y \\<approx>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<approx>\\<cdot> z", "moreover"], ["proof (state)\nthis:\n  \\<forall>P Q \\<phi>.\n     ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q \\<and>\n     P \\<turnstile> \\<phi> \\<longrightarrow>\n     (\\<exists>Q'.\n         Q \\<Rightarrow> Q' \\<and>\n         ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q' \\<and>\n         Q' \\<turnstile> \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<approx>\\<cdot> y; y \\<approx>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<approx>\\<cdot> z", "have \"\\<forall>P Q. ?bisim P Q \\<longrightarrow> (\\<forall>\\<alpha> P'. bn \\<alpha> \\<sharp>* Q \\<longrightarrow> P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow> (\\<exists>Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and> ?bisim P' Q'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P Q.\n       ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q \\<longrightarrow>\n       (\\<forall>\\<alpha> P'.\n           bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n           P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n               ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' Q'))", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<approx>\\<cdot> b; b \\<approx>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and>\n                            ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' Q'", "fix P Q R \\<alpha> P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<approx>\\<cdot> b; b \\<approx>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and>\n                            ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' Q'", "assume PR: \"P \\<approx>\\<cdot> R\" and RQ: \"R \\<approx>\\<cdot> Q\" and fresh: \"bn \\<alpha> \\<sharp>* Q\" and trans: \"P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\"\n        \\<comment> \\<open>rename~@{term \"\\<langle>\\<alpha>,P'\\<rangle>\"} to avoid~@{term R}, without touching~@{term Q}\\<close>"], ["proof (state)\nthis:\n  P \\<approx>\\<cdot> R\n  R \\<approx>\\<cdot> Q\n  bn \\<alpha> \\<sharp>* Q\n  P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<approx>\\<cdot> b; b \\<approx>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and>\n                            ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' Q'", "obtain p where 1: \"(p \\<bullet> bn \\<alpha>) \\<sharp>* R\" and 2: \"supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (rule at_set_avoiding2[of \"bn \\<alpha>\" R \"(\\<langle>\\<alpha>,P'\\<rangle>, Q)\", THEN exE])"], ["proof (state)\ngoal (5 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (bn \\<alpha>)\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp R)\n 3. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp (\\<langle>\\<alpha>,P'\\<rangle>, Q))\n 4. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>, Q)\n 5. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* R \\<and>\n        supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"finite (bn \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (bn \\<alpha>)", "by (fact bn_finite)"], ["proof (state)\nthis:\n  finite (bn \\<alpha>)\n\ngoal (4 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp R)\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp (\\<langle>\\<alpha>,P'\\<rangle>, Q))\n 3. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>, Q)\n 4. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* R \\<and>\n        supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp R)\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp (\\<langle>\\<alpha>,P'\\<rangle>, Q))\n 3. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>, Q)\n 4. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* R \\<and>\n        supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"finite (supp R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (supp R)", "by (fact finite_supp)"], ["proof (state)\nthis:\n  finite (supp R)\n\ngoal (3 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp (\\<langle>\\<alpha>,P'\\<rangle>, Q))\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>, Q)\n 3. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* R \\<and>\n        supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp (\\<langle>\\<alpha>,P'\\<rangle>, Q))\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>, Q)\n 3. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* R \\<and>\n        supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"finite (supp (\\<langle>\\<alpha>,P'\\<rangle>, Q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (supp (\\<langle>\\<alpha>,P'\\<rangle>, Q))", "by (simp add: finite_supp supp_Pair)"], ["proof (state)\nthis:\n  finite (supp (\\<langle>\\<alpha>,P'\\<rangle>, Q))\n\ngoal (2 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>, Q)\n 2. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* R \\<and>\n        supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>, Q)\n 2. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* R \\<and>\n        supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>, Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>, Q)", "by (simp add: fresh fresh_star_Pair)"], ["proof (state)\nthis:\n  bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>, Q)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* R \\<and>\n        supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "qed metis"], ["proof (state)\nthis:\n  (p \\<bullet> bn \\<alpha>) \\<sharp>* R\n  supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\n\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<approx>\\<cdot> b; b \\<approx>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and>\n                            ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' Q'", "from 2"], ["proof (chain)\npicking this:\n  supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p", "have 3: \"supp \\<langle>\\<alpha>,P'\\<rangle> \\<sharp>* p\" and 4: \"supp Q \\<sharp>* p\""], ["proof (prove)\nusing this:\n  supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\n\ngoal (1 subgoal):\n 1. supp \\<langle>\\<alpha>,P'\\<rangle> \\<sharp>* p &&& supp Q \\<sharp>* p", "by (simp add: fresh_star_Un supp_Pair)+"], ["proof (state)\nthis:\n  supp \\<langle>\\<alpha>,P'\\<rangle> \\<sharp>* p\n  supp Q \\<sharp>* p\n\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<approx>\\<cdot> b; b \\<approx>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and>\n                            ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' Q'", "from 3"], ["proof (chain)\npicking this:\n  supp \\<langle>\\<alpha>,P'\\<rangle> \\<sharp>* p", "have \"\\<langle>p \\<bullet> \\<alpha>, p \\<bullet> P'\\<rangle> = \\<langle>\\<alpha>,P'\\<rangle>\""], ["proof (prove)\nusing this:\n  supp \\<langle>\\<alpha>,P'\\<rangle> \\<sharp>* p\n\ngoal (1 subgoal):\n 1. \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P'\\<rangle> =\n    \\<langle>\\<alpha>,P'\\<rangle>", "using supp_perm_eq"], ["proof (prove)\nusing this:\n  supp \\<langle>\\<alpha>,P'\\<rangle> \\<sharp>* p\n  supp ?x \\<sharp>* ?p \\<Longrightarrow> ?p \\<bullet> ?x = ?x\n\ngoal (1 subgoal):\n 1. \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P'\\<rangle> =\n    \\<langle>\\<alpha>,P'\\<rangle>", "by fastforce"], ["proof (state)\nthis:\n  \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P'\\<rangle> =\n  \\<langle>\\<alpha>,P'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<approx>\\<cdot> b; b \\<approx>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and>\n                            ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' Q'", "with trans"], ["proof (chain)\npicking this:\n  P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\n  \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P'\\<rangle> =\n  \\<langle>\\<alpha>,P'\\<rangle>", "obtain pR' where 5: \"R \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> pR'\" and 6: \"(p \\<bullet> P') \\<approx>\\<cdot> pR'\""], ["proof (prove)\nusing this:\n  P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\n  \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P'\\<rangle> =\n  \\<langle>\\<alpha>,P'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>pR'.\n        \\<lbrakk>R \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> pR';\n         (p \\<bullet> P') \\<approx>\\<cdot> pR'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using PR 1"], ["proof (prove)\nusing this:\n  P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\n  \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P'\\<rangle> =\n  \\<langle>\\<alpha>,P'\\<rangle>\n  P \\<approx>\\<cdot> R\n  (p \\<bullet> bn \\<alpha>) \\<sharp>* R\n\ngoal (1 subgoal):\n 1. (\\<And>pR'.\n        \\<lbrakk>R \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> pR';\n         (p \\<bullet> P') \\<approx>\\<cdot> pR'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis bn_eqvt weakly_bisimilar_is_weak_bisimulation is_weak_bisimulation_def)"], ["proof (state)\nthis:\n  R \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> pR'\n  (p \\<bullet> P') \\<approx>\\<cdot> pR'\n\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<approx>\\<cdot> b; b \\<approx>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and>\n                            ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' Q'", "from fresh and 4"], ["proof (chain)\npicking this:\n  bn \\<alpha> \\<sharp>* Q\n  supp Q \\<sharp>* p", "have \"bn (p \\<bullet> \\<alpha>) \\<sharp>* Q\""], ["proof (prove)\nusing this:\n  bn \\<alpha> \\<sharp>* Q\n  supp Q \\<sharp>* p\n\ngoal (1 subgoal):\n 1. bn (p \\<bullet> \\<alpha>) \\<sharp>* Q", "by (metis bn_eqvt fresh_star_permute_iff supp_perm_eq)"], ["proof (state)\nthis:\n  bn (p \\<bullet> \\<alpha>) \\<sharp>* Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<approx>\\<cdot> b; b \\<approx>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and>\n                            ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' Q'", "then"], ["proof (chain)\npicking this:\n  bn (p \\<bullet> \\<alpha>) \\<sharp>* Q", "obtain pQ' where 7: \"Q \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> pQ'\" and 8: \"pR' \\<approx>\\<cdot> pQ'\""], ["proof (prove)\nusing this:\n  bn (p \\<bullet> \\<alpha>) \\<sharp>* Q\n\ngoal (1 subgoal):\n 1. (\\<And>pQ'.\n        \\<lbrakk>Q \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> pQ';\n         pR' \\<approx>\\<cdot> pQ'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using RQ 5"], ["proof (prove)\nusing this:\n  bn (p \\<bullet> \\<alpha>) \\<sharp>* Q\n  R \\<approx>\\<cdot> Q\n  R \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> pR'\n\ngoal (1 subgoal):\n 1. (\\<And>pQ'.\n        \\<lbrakk>Q \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> pQ';\n         pR' \\<approx>\\<cdot> pQ'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis weakly_bisimilar_weak_simulation_step)"], ["proof (state)\nthis:\n  Q \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> pQ'\n  pR' \\<approx>\\<cdot> pQ'\n\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<approx>\\<cdot> b; b \\<approx>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and>\n                            ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' Q'", "from 7"], ["proof (chain)\npicking this:\n  Q \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> pQ'", "have \"Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> (-p \\<bullet> pQ')\""], ["proof (prove)\nusing this:\n  Q \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> pQ'\n\ngoal (1 subgoal):\n 1. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> - p \\<bullet> pQ'", "using 4"], ["proof (prove)\nusing this:\n  Q \\<Rightarrow>\\<langle>p \\<bullet> \\<alpha>\\<rangle> pQ'\n  supp Q \\<sharp>* p\n\ngoal (1 subgoal):\n 1. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> - p \\<bullet> pQ'", "by (metis permute_minus_cancel(2) supp_perm_eq weak_transition_eqvt)"], ["proof (state)\nthis:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> - p \\<bullet> pQ'\n\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<approx>\\<cdot> b; b \\<approx>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and>\n                            ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' Q'", "moreover"], ["proof (state)\nthis:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> - p \\<bullet> pQ'\n\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<approx>\\<cdot> b; b \\<approx>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and>\n                            ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' Q'", "from 6 and 8"], ["proof (chain)\npicking this:\n  (p \\<bullet> P') \\<approx>\\<cdot> pR'\n  pR' \\<approx>\\<cdot> pQ'", "have \"?bisim P' (-p \\<bullet> pQ')\""], ["proof (prove)\nusing this:\n  (p \\<bullet> P') \\<approx>\\<cdot> pR'\n  pR' \\<approx>\\<cdot> pQ'\n\ngoal (1 subgoal):\n 1. ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' (- p \\<bullet> pQ')", "by (metis (no_types, hide_lams) weakly_bisimilar_eqvt permute_minus_cancel(2) relcompp.simps)"], ["proof (state)\nthis:\n  ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' (- p \\<bullet> pQ')\n\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<approx>\\<cdot> b; b \\<approx>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle>\n                            Q' \\<and>\n                            ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' Q'", "ultimately"], ["proof (chain)\npicking this:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> - p \\<bullet> pQ'\n  ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' (- p \\<bullet> pQ')", "show \"\\<exists>Q'. Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and> ?bisim P' Q'\""], ["proof (prove)\nusing this:\n  Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> - p \\<bullet> pQ'\n  ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' (- p \\<bullet> pQ')\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n       ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' Q'", "by metis"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n     ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' Q'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P Q.\n     ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q \\<longrightarrow>\n     (\\<forall>\\<alpha> P'.\n         bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n         P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n         (\\<exists>Q'.\n             Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n             ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' Q'))\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<approx>\\<cdot> y; y \\<approx>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<approx>\\<cdot> z", "ultimately"], ["proof (chain)\npicking this:\n  symp ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>))\n  \\<forall>P Q \\<phi>.\n     ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q \\<and>\n     P \\<turnstile> \\<phi> \\<longrightarrow>\n     (\\<exists>Q'.\n         Q \\<Rightarrow> Q' \\<and>\n         ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q' \\<and>\n         Q' \\<turnstile> \\<phi>)\n  \\<forall>P Q.\n     ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q \\<longrightarrow>\n     (\\<forall>\\<alpha> P'.\n         bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n         P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n         (\\<exists>Q'.\n             Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n             ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' Q'))", "have \"is_weak_bisimulation ?bisim\""], ["proof (prove)\nusing this:\n  symp ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>))\n  \\<forall>P Q \\<phi>.\n     ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q \\<and>\n     P \\<turnstile> \\<phi> \\<longrightarrow>\n     (\\<exists>Q'.\n         Q \\<Rightarrow> Q' \\<and>\n         ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q' \\<and>\n         Q' \\<turnstile> \\<phi>)\n  \\<forall>P Q.\n     ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q \\<longrightarrow>\n     (\\<forall>\\<alpha> P'.\n         bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n         P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n         (\\<exists>Q'.\n             Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n             ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' Q'))\n\ngoal (1 subgoal):\n 1. is_weak_bisimulation ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>))", "unfolding is_weak_bisimulation_def"], ["proof (prove)\nusing this:\n  symp ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>))\n  \\<forall>P Q \\<phi>.\n     ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q \\<and>\n     P \\<turnstile> \\<phi> \\<longrightarrow>\n     (\\<exists>Q'.\n         Q \\<Rightarrow> Q' \\<and>\n         ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q' \\<and>\n         Q' \\<turnstile> \\<phi>)\n  \\<forall>P Q.\n     ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q \\<longrightarrow>\n     (\\<forall>\\<alpha> P'.\n         bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n         P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n         (\\<exists>Q'.\n             Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n             ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' Q'))\n\ngoal (1 subgoal):\n 1. symp ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) \\<and>\n    (\\<forall>P Q \\<phi>.\n        ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q \\<and>\n        P \\<turnstile> \\<phi> \\<longrightarrow>\n        (\\<exists>Q'.\n            Q \\<Rightarrow> Q' \\<and>\n            ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q' \\<and>\n            Q' \\<turnstile> \\<phi>)) \\<and>\n    (\\<forall>P Q.\n        ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<Rightarrow>\\<langle>\\<alpha>\\<rangle> Q' \\<and>\n                ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P' Q')))", "by metis"], ["proof (state)\nthis:\n  is_weak_bisimulation ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>))\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<approx>\\<cdot> y; y \\<approx>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<approx>\\<cdot> z", "moreover"], ["proof (state)\nthis:\n  is_weak_bisimulation ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>))\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<approx>\\<cdot> y; y \\<approx>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<approx>\\<cdot> z", "have \"?bisim P R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P R", "using PQ QR"], ["proof (prove)\nusing this:\n  P \\<approx>\\<cdot> Q\n  Q \\<approx>\\<cdot> R\n\ngoal (1 subgoal):\n 1. ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P R", "by blast"], ["proof (state)\nthis:\n  ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P R\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<approx>\\<cdot> y; y \\<approx>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<approx>\\<cdot> z", "ultimately"], ["proof (chain)\npicking this:\n  is_weak_bisimulation ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>))\n  ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P R", "show \"P \\<approx>\\<cdot> R\""], ["proof (prove)\nusing this:\n  is_weak_bisimulation ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>))\n  ((\\<approx>\\<cdot>) OO (\\<approx>\\<cdot>)) P R\n\ngoal (1 subgoal):\n 1. P \\<approx>\\<cdot> R", "unfolding weakly_bisimilar_def"], ["proof (prove)\nusing this:\n  is_weak_bisimulation\n   ((\\<lambda>P Q. \\<exists>R. is_weak_bisimulation R \\<and> R P Q) OO\n    (\\<lambda>P Q. \\<exists>R. is_weak_bisimulation R \\<and> R P Q))\n  ((\\<lambda>P Q. \\<exists>R. is_weak_bisimulation R \\<and> R P Q) OO\n   (\\<lambda>P Q. \\<exists>R. is_weak_bisimulation R \\<and> R P Q))\n   P R\n\ngoal (1 subgoal):\n 1. \\<exists>Ra. is_weak_bisimulation Ra \\<and> Ra P R", "by meson"], ["proof (state)\nthis:\n  P \\<approx>\\<cdot> R\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weakly_bisimilar_equivp: \"equivp weakly_bisimilar\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equivp (\\<approx>\\<cdot>)", "by (metis weakly_bisimilar_reflp weakly_bisimilar_symp weakly_bisimilar_transp equivp_reflp_symp_transp)"], ["", "end"], ["", "end"]]}