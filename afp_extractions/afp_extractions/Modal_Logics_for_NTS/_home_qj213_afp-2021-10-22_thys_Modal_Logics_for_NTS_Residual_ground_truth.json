{"file_name": "/home/qj213/afp-2021-10-22/thys/Modal_Logics_for_NTS/Residual.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Modal_Logics_for_NTS", "problem_names": ["lemma bn_subset_supp: \"bn \\<alpha> \\<subseteq> supp \\<alpha>\"", "lemma alpha_residual_eqvt [eqvt]:\n  assumes \"alpha_residual r1 r2\"\n  shows \"alpha_residual (p \\<bullet> r1) (p \\<bullet> r2)\"", "lemma alpha_residual_reflp: \"reflp alpha_residual\"", "lemma alpha_residual_symp: \"symp alpha_residual\"", "lemma alpha_residual_transp: \"transp alpha_residual\"", "lemma alpha_residual_equivp: \"equivp alpha_residual\"", "lemma residual_abs_rep [simp]: \"abs_residual (rep_residual res) = res\"", "lemma residual_rep_abs [simp]: \"alpha_residual (rep_residual (abs_residual r)) r\"", "lemmas permute_residual.abs_eq [eqvt, simp]", "lemma alpha_residual_permute_rep_commute [simp]: \"alpha_residual (p \\<bullet> rep_residual res) (rep_residual (p \\<bullet> res))\"", "lemma abs_residual_pair_eqvt [simp]: \"p \\<bullet> \\<langle>\\<alpha>,P\\<rangle> = \\<langle>p \\<bullet> \\<alpha>, p \\<bullet> P\\<rangle>\"", "lemma supp_abs_residual_pair: \"supp \\<langle>\\<alpha>, P::'state::fs\\<rangle> = supp (\\<alpha>,P) - bn \\<alpha>\"", "lemma bn_abs_residual_fresh [simp]: \"bn \\<alpha> \\<sharp>* \\<langle>\\<alpha>,P::'state::fs\\<rangle>\"", "lemma finite_supp_abs_residual_pair [simp]: \"finite (supp \\<langle>\\<alpha>, P::'state::fs\\<rangle>)\"", "lemma residual_eq_iff_perm: \"\\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle> \\<longleftrightarrow>\n  (\\<exists>p. supp (\\<alpha>1, P1) - bn \\<alpha>1 = supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and> (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and> p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and> p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2)\"\n  (is \"?l \\<longleftrightarrow> ?r\")", "lemma residual_eq_iff_perm_renaming: \"\\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle> \\<longleftrightarrow>\n  (\\<exists>p. supp (\\<alpha>1, P1) - bn \\<alpha>1 = supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and> (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and> p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and> p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and> supp p \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1)\"\n  (is \"?l \\<longleftrightarrow> ?r\")", "lemma residual_strong_induct:\n  assumes \"\\<And>(act::'act::bn) (state::'state::fs) (c::'a::fs). bn act \\<sharp>* c \\<Longrightarrow> P c \\<langle>act,state\\<rangle>\"\n  shows \"P c residual\"", "lemma residual_empty_bn_eq_iff:\n  assumes \"bn \\<alpha>1 = {}\"\n  shows \"\\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle> \\<longleftrightarrow> \\<alpha>1 = \\<alpha>2 \\<and> P1 = P2\"", "lemma set_bounded_supp:\n  assumes \"finite S\" and \"\\<And>x. x\\<in>X \\<Longrightarrow> supp x \\<subseteq> S\"\n  shows \"supp X \\<subseteq> S\""], "translations": [["", "lemma bn_subset_supp: \"bn \\<alpha> \\<subseteq> supp \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bn \\<alpha> \\<subseteq> supp \\<alpha>", "by (metis (erased, hide_lams) bn_eqvt bn_finite eqvt_at_def finite_supp supp_eqvt_at supp_finite_atom_set)"], ["", "subsection \\<open>Raw residuals and \\texorpdfstring{$\\alpha$}{alpha}-equivalence\\<close>"], ["", "text \\<open>Raw residuals are simply pairs of actions and states. Binding names in the action bind into\n(the action and) the state.\\<close>"], ["", "fun alpha_residual :: \"('act::bn \\<times> 'state::pt) \\<Rightarrow> ('act \\<times> 'state) \\<Rightarrow> bool\" where\n  \"alpha_residual (\\<alpha>1,P1) (\\<alpha>2,P2) \\<longleftrightarrow> [bn \\<alpha>1]set. (\\<alpha>1, P1) = [bn \\<alpha>2]set. (\\<alpha>2, P2)\""], ["", "text \\<open>$\\alpha$-equivalence is equivariant.\\<close>"], ["", "lemma alpha_residual_eqvt [eqvt]:\n  assumes \"alpha_residual r1 r2\"\n  shows \"alpha_residual (p \\<bullet> r1) (p \\<bullet> r2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. alpha_residual (p \\<bullet> r1) (p \\<bullet> r2)", "using assms"], ["proof (prove)\nusing this:\n  alpha_residual r1 r2\n\ngoal (1 subgoal):\n 1. alpha_residual (p \\<bullet> r1) (p \\<bullet> r2)", "by (cases r1, cases r2) (simp, metis Pair_eqvt bn_eqvt permute_Abs_set)"], ["", "text \\<open>$\\alpha$-equivalence is an equivalence relation.\\<close>"], ["", "lemma alpha_residual_reflp: \"reflp alpha_residual\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reflp alpha_residual", "by (metis alpha_residual.simps prod.exhaust reflpI)"], ["", "lemma alpha_residual_symp: \"symp alpha_residual\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symp alpha_residual", "by (metis alpha_residual.simps prod.exhaust sympI)"], ["", "lemma alpha_residual_transp: \"transp alpha_residual\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transp alpha_residual", "by (rule transpI) (metis alpha_residual.simps prod.exhaust)"], ["", "lemma alpha_residual_equivp: \"equivp alpha_residual\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equivp alpha_residual", "by (metis alpha_residual_reflp alpha_residual_symp alpha_residual_transp equivpI)"], ["", "subsection \\<open>Residuals\\<close>"], ["", "text \\<open>Residuals are raw residuals quotiented by $\\alpha$-equivalence.\\<close>"], ["", "quotient_type\n  ('act,'state) residual = \"'act::bn \\<times> 'state::pt\" / \"alpha_residual\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equivp alpha_residual", "by (fact alpha_residual_equivp)"], ["", "lemma residual_abs_rep [simp]: \"abs_residual (rep_residual res) = res\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abs_residual (rep_residual res) = res", "by (metis Quotient_residual Quotient_abs_rep)"], ["", "lemma residual_rep_abs [simp]: \"alpha_residual (rep_residual (abs_residual r)) r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. alpha_residual (rep_residual (abs_residual r)) r", "by (metis residual.abs_eq_iff residual_abs_rep)"], ["", "text \\<open>The permutation operation is lifted from raw residuals.\\<close>"], ["", "instantiation residual :: (bn,pt) pt\nbegin"], ["", "lift_definition permute_residual :: \"perm \\<Rightarrow> ('a,'b) residual \\<Rightarrow> ('a,'b) residual\"\n    is permute"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>perm prod1 prod2.\n       alpha_residual prod1 prod2 \\<Longrightarrow>\n       alpha_residual (perm \\<bullet> prod1) (perm \\<bullet> prod2)", "by (fact alpha_residual_eqvt)"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(('a, 'b) residual, pt_class)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. 0 \\<bullet> x = x\n 2. \\<And>p q x. (p + q) \\<bullet> x = p \\<bullet> q \\<bullet> x", "fix res :: \"(_,_) residual\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. 0 \\<bullet> x = x\n 2. \\<And>p q x. (p + q) \\<bullet> x = p \\<bullet> q \\<bullet> x", "show \"0 \\<bullet> res = res\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<bullet> res = res", "by transfer (metis alpha_residual_equivp equivp_reflp permute_zero)"], ["proof (state)\nthis:\n  0 \\<bullet> res = res\n\ngoal (1 subgoal):\n 1. \\<And>p q x. (p + q) \\<bullet> x = p \\<bullet> q \\<bullet> x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q x. (p + q) \\<bullet> x = p \\<bullet> q \\<bullet> x", "fix p q :: perm and res :: \"(_,_) residual\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q x. (p + q) \\<bullet> x = p \\<bullet> q \\<bullet> x", "show \"(p + q) \\<bullet> res = p \\<bullet> q \\<bullet> res\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p + q) \\<bullet> res = p \\<bullet> q \\<bullet> res", "by transfer (metis alpha_residual_equivp equivp_reflp permute_plus)"], ["proof (state)\nthis:\n  (p + q) \\<bullet> res = p \\<bullet> q \\<bullet> res\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>The abstraction function from raw residuals to residuals is equivariant. The representation\nfunction is equivariant modulo $\\alpha$-equivalence.\\<close>"], ["", "lemmas permute_residual.abs_eq [eqvt, simp]"], ["", "lemma alpha_residual_permute_rep_commute [simp]: \"alpha_residual (p \\<bullet> rep_residual res) (rep_residual (p \\<bullet> res))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. alpha_residual (p \\<bullet> rep_residual res)\n     (rep_residual (p \\<bullet> res))", "by (metis residual.abs_eq_iff residual_abs_rep permute_residual.abs_eq)"], ["", "subsection \\<open>Notation for pairs as residuals\\<close>"], ["", "abbreviation abs_residual_pair :: \"'act::bn \\<Rightarrow> 'state::pt \\<Rightarrow> ('act,'state) residual\" (\"\\<langle>_,_\\<rangle>\" [0,0] 1000)\nwhere\n  \"\\<langle>\\<alpha>,P\\<rangle> == abs_residual (\\<alpha>,P)\""], ["", "lemma abs_residual_pair_eqvt [simp]: \"p \\<bullet> \\<langle>\\<alpha>,P\\<rangle> = \\<langle>p \\<bullet> \\<alpha>, p \\<bullet> P\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> \\<langle>\\<alpha>,P\\<rangle> =\n    \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P\\<rangle>", "by (metis Pair_eqvt permute_residual.abs_eq)"], ["", "subsection \\<open>Support of residuals\\<close>"], ["", "text \\<open>We only consider finitely supported states now.\\<close>"], ["", "lemma supp_abs_residual_pair: \"supp \\<langle>\\<alpha>, P::'state::fs\\<rangle> = supp (\\<alpha>,P) - bn \\<alpha>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp \\<langle>\\<alpha>,P\\<rangle> = supp (\\<alpha>, P) - bn \\<alpha>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. supp \\<langle>\\<alpha>,P\\<rangle> = supp (\\<alpha>, P) - bn \\<alpha>", "have \"supp \\<langle>\\<alpha>,P\\<rangle> = supp ([bn \\<alpha>]set. (\\<alpha>, P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp \\<langle>\\<alpha>,P\\<rangle> =\n    supp ([bn \\<alpha>]set. (\\<alpha>, P))", "by (simp add: supp_def residual.abs_eq_iff bn_eqvt)"], ["proof (state)\nthis:\n  supp \\<langle>\\<alpha>,P\\<rangle> = supp ([bn \\<alpha>]set. (\\<alpha>, P))\n\ngoal (1 subgoal):\n 1. supp \\<langle>\\<alpha>,P\\<rangle> = supp (\\<alpha>, P) - bn \\<alpha>", "then"], ["proof (chain)\npicking this:\n  supp \\<langle>\\<alpha>,P\\<rangle> = supp ([bn \\<alpha>]set. (\\<alpha>, P))", "show ?thesis"], ["proof (prove)\nusing this:\n  supp \\<langle>\\<alpha>,P\\<rangle> = supp ([bn \\<alpha>]set. (\\<alpha>, P))\n\ngoal (1 subgoal):\n 1. supp \\<langle>\\<alpha>,P\\<rangle> = supp (\\<alpha>, P) - bn \\<alpha>", "by (simp add: supp_Abs)"], ["proof (state)\nthis:\n  supp \\<langle>\\<alpha>,P\\<rangle> = supp (\\<alpha>, P) - bn \\<alpha>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bn_abs_residual_fresh [simp]: \"bn \\<alpha> \\<sharp>* \\<langle>\\<alpha>,P::'state::fs\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bn \\<alpha> \\<sharp>* \\<langle>\\<alpha>,P\\<rangle>", "by (simp add: fresh_star_def fresh_def supp_abs_residual_pair)"], ["", "lemma finite_supp_abs_residual_pair [simp]: \"finite (supp \\<langle>\\<alpha>, P::'state::fs\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (supp \\<langle>\\<alpha>,P\\<rangle>)", "by (metis finite_Diff finite_supp supp_abs_residual_pair)"], ["", "subsection \\<open>Equality between residuals\\<close>"], ["", "lemma residual_eq_iff_perm: \"\\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle> \\<longleftrightarrow>\n  (\\<exists>p. supp (\\<alpha>1, P1) - bn \\<alpha>1 = supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and> (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and> p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and> p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2)\"\n  (is \"?l \\<longleftrightarrow> ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>) =\n    (\\<exists>p.\n        supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n        supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n        (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n        p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n        p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<langle>\\<alpha>1,P1\\<rangle> =\n    \\<langle>\\<alpha>2,P2\\<rangle> \\<Longrightarrow>\n    \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2\n 2. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "assume *: \"?l\""], ["proof (state)\nthis:\n  \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<langle>\\<alpha>1,P1\\<rangle> =\n    \\<langle>\\<alpha>2,P2\\<rangle> \\<Longrightarrow>\n    \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2\n 2. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "then"], ["proof (chain)\npicking this:\n  \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "have \"[bn \\<alpha>1]set. (\\<alpha>1, P1) = [bn \\<alpha>2]set. (\\<alpha>2, P2)\""], ["proof (prove)\nusing this:\n  \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>\n\ngoal (1 subgoal):\n 1. [bn \\<alpha>1]set. (\\<alpha>1, P1) = [bn \\<alpha>2]set. (\\<alpha>2, P2)", "by (simp add: residual.abs_eq_iff)"], ["proof (state)\nthis:\n  [bn \\<alpha>1]set. (\\<alpha>1, P1) = [bn \\<alpha>2]set. (\\<alpha>2, P2)\n\ngoal (2 subgoals):\n 1. \\<langle>\\<alpha>1,P1\\<rangle> =\n    \\<langle>\\<alpha>2,P2\\<rangle> \\<Longrightarrow>\n    \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2\n 2. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "then"], ["proof (chain)\npicking this:\n  [bn \\<alpha>1]set. (\\<alpha>1, P1) = [bn \\<alpha>2]set. (\\<alpha>2, P2)", "obtain p where \"(bn \\<alpha>1, (\\<alpha>1,P1)) \\<approx>set ((=)) supp p (bn \\<alpha>2, (\\<alpha>2,P2))\""], ["proof (prove)\nusing this:\n  [bn \\<alpha>1]set. (\\<alpha>1, P1) = [bn \\<alpha>2]set. (\\<alpha>2, P2)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        (bn \\<alpha>1, \\<alpha>1,\n         P1) \\<approx>set (=) supp p (bn \\<alpha>2, \\<alpha>2,\nP2) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using Abs_eq_iff(1)"], ["proof (prove)\nusing this:\n  [bn \\<alpha>1]set. (\\<alpha>1, P1) = [bn \\<alpha>2]set. (\\<alpha>2, P2)\n  ([?bs]set. ?x = [?bs']set. ?y) =\n  (\\<exists>p. (?bs, ?x) \\<approx>set (=) supp p (?bs', ?y))\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        (bn \\<alpha>1, \\<alpha>1,\n         P1) \\<approx>set (=) supp p (bn \\<alpha>2, \\<alpha>2,\nP2) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (bn \\<alpha>1, \\<alpha>1,\n   P1) \\<approx>set (=) supp p (bn \\<alpha>2, \\<alpha>2, P2)\n\ngoal (2 subgoals):\n 1. \\<langle>\\<alpha>1,P1\\<rangle> =\n    \\<langle>\\<alpha>2,P2\\<rangle> \\<Longrightarrow>\n    \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2\n 2. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "then"], ["proof (chain)\npicking this:\n  (bn \\<alpha>1, \\<alpha>1,\n   P1) \\<approx>set (=) supp p (bn \\<alpha>2, \\<alpha>2, P2)", "show \"?r\""], ["proof (prove)\nusing this:\n  (bn \\<alpha>1, \\<alpha>1,\n   P1) \\<approx>set (=) supp p (bn \\<alpha>2, \\<alpha>2, P2)\n\ngoal (1 subgoal):\n 1. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2", "by (metis (mono_tags, lifting) alpha_set.simps)"], ["proof (state)\nthis:\n  \\<exists>p.\n     supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n     supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n     (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n     p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n     p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2\n\ngoal (1 subgoal):\n 1. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "assume *: \"?r\""], ["proof (state)\nthis:\n  \\<exists>p.\n     supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n     supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n     (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n     p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n     p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2\n\ngoal (1 subgoal):\n 1. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "then"], ["proof (chain)\npicking this:\n  \\<exists>p.\n     supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n     supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n     (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n     p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n     p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2", "obtain p where \"(bn \\<alpha>1, (\\<alpha>1,P1)) \\<approx>set ((=)) supp p (bn \\<alpha>2, (\\<alpha>2,P2))\""], ["proof (prove)\nusing this:\n  \\<exists>p.\n     supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n     supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n     (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n     p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n     p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        (bn \\<alpha>1, \\<alpha>1,\n         P1) \\<approx>set (=) supp p (bn \\<alpha>2, \\<alpha>2,\nP2) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using alpha_set.simps"], ["proof (prove)\nusing this:\n  \\<exists>p.\n     supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n     supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n     (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n     p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n     p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2\n  (?bs, ?x) \\<approx>set ?R ?f ?p (?cs, ?y) =\n  (?f ?x - ?bs = ?f ?y - ?cs \\<and>\n   (?f ?x - ?bs) \\<sharp>* ?p \\<and>\n   ?R (?p \\<bullet> ?x) ?y \\<and> ?p \\<bullet> ?bs = ?cs)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        (bn \\<alpha>1, \\<alpha>1,\n         P1) \\<approx>set (=) supp p (bn \\<alpha>2, \\<alpha>2,\nP2) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (bn \\<alpha>1, \\<alpha>1,\n   P1) \\<approx>set (=) supp p (bn \\<alpha>2, \\<alpha>2, P2)\n\ngoal (1 subgoal):\n 1. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "then"], ["proof (chain)\npicking this:\n  (bn \\<alpha>1, \\<alpha>1,\n   P1) \\<approx>set (=) supp p (bn \\<alpha>2, \\<alpha>2, P2)", "have \"[bn \\<alpha>1]set. (\\<alpha>1, P1) = [bn \\<alpha>2]set. (\\<alpha>2, P2)\""], ["proof (prove)\nusing this:\n  (bn \\<alpha>1, \\<alpha>1,\n   P1) \\<approx>set (=) supp p (bn \\<alpha>2, \\<alpha>2, P2)\n\ngoal (1 subgoal):\n 1. [bn \\<alpha>1]set. (\\<alpha>1, P1) = [bn \\<alpha>2]set. (\\<alpha>2, P2)", "using Abs_eq_iff(1)"], ["proof (prove)\nusing this:\n  (bn \\<alpha>1, \\<alpha>1,\n   P1) \\<approx>set (=) supp p (bn \\<alpha>2, \\<alpha>2, P2)\n  ([?bs]set. ?x = [?bs']set. ?y) =\n  (\\<exists>p. (?bs, ?x) \\<approx>set (=) supp p (?bs', ?y))\n\ngoal (1 subgoal):\n 1. [bn \\<alpha>1]set. (\\<alpha>1, P1) = [bn \\<alpha>2]set. (\\<alpha>2, P2)", "by blast"], ["proof (state)\nthis:\n  [bn \\<alpha>1]set. (\\<alpha>1, P1) = [bn \\<alpha>2]set. (\\<alpha>2, P2)\n\ngoal (1 subgoal):\n 1. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "then"], ["proof (chain)\npicking this:\n  [bn \\<alpha>1]set. (\\<alpha>1, P1) = [bn \\<alpha>2]set. (\\<alpha>2, P2)", "show \"?l\""], ["proof (prove)\nusing this:\n  [bn \\<alpha>1]set. (\\<alpha>1, P1) = [bn \\<alpha>2]set. (\\<alpha>2, P2)\n\ngoal (1 subgoal):\n 1. \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "by (simp add: residual.abs_eq_iff)"], ["proof (state)\nthis:\n  \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma residual_eq_iff_perm_renaming: \"\\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle> \\<longleftrightarrow>\n  (\\<exists>p. supp (\\<alpha>1, P1) - bn \\<alpha>1 = supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and> (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and> p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and> p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and> supp p \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1)\"\n  (is \"?l \\<longleftrightarrow> ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>) =\n    (\\<exists>p.\n        supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n        supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n        (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n        p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n        p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n        supp p \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<langle>\\<alpha>1,P1\\<rangle> =\n    \\<langle>\\<alpha>2,P2\\<rangle> \\<Longrightarrow>\n    \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1\n 2. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p\n       \\<subseteq> bn \\<alpha>1 \\<union>\n                   p \\<bullet> bn \\<alpha>1 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "assume \"?l\""], ["proof (state)\nthis:\n  \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<langle>\\<alpha>1,P1\\<rangle> =\n    \\<langle>\\<alpha>2,P2\\<rangle> \\<Longrightarrow>\n    \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1\n 2. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p\n       \\<subseteq> bn \\<alpha>1 \\<union>\n                   p \\<bullet> bn \\<alpha>1 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "then"], ["proof (chain)\npicking this:\n  \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "obtain p where p: \"supp (\\<alpha>1, P1) - bn \\<alpha>1 = supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and> (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and> p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and> p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2\""], ["proof (prove)\nusing this:\n  \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n        supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n        (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n        p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n        p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis residual_eq_iff_perm)"], ["proof (state)\nthis:\n  supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n  supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n  (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n  p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n  p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2\n\ngoal (2 subgoals):\n 1. \\<langle>\\<alpha>1,P1\\<rangle> =\n    \\<langle>\\<alpha>2,P2\\<rangle> \\<Longrightarrow>\n    \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1\n 2. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p\n       \\<subseteq> bn \\<alpha>1 \\<union>\n                   p \\<bullet> bn \\<alpha>1 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "moreover"], ["proof (state)\nthis:\n  supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n  supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n  (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n  p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n  p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2\n\ngoal (2 subgoals):\n 1. \\<langle>\\<alpha>1,P1\\<rangle> =\n    \\<langle>\\<alpha>2,P2\\<rangle> \\<Longrightarrow>\n    \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1\n 2. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p\n       \\<subseteq> bn \\<alpha>1 \\<union>\n                   p \\<bullet> bn \\<alpha>1 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "obtain q where q_p: \"\\<forall>b\\<in>bn \\<alpha>1. q \\<bullet> b = p \\<bullet> b\" and supp_q: \"supp q \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>\\<forall>b\\<in>bn \\<alpha>1. q \\<bullet> b = p \\<bullet> b;\n         supp q\n         \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis set_renaming_perm2)"], ["proof (state)\nthis:\n  \\<forall>b\\<in>bn \\<alpha>1. q \\<bullet> b = p \\<bullet> b\n  supp q \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1\n\ngoal (2 subgoals):\n 1. \\<langle>\\<alpha>1,P1\\<rangle> =\n    \\<langle>\\<alpha>2,P2\\<rangle> \\<Longrightarrow>\n    \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1\n 2. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p\n       \\<subseteq> bn \\<alpha>1 \\<union>\n                   p \\<bullet> bn \\<alpha>1 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "have \"supp q \\<subseteq> supp p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp q \\<subseteq> supp p", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> supp q \\<Longrightarrow> x \\<in> supp p", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> supp q \\<Longrightarrow> x \\<in> supp p", "assume *: \"a \\<in> supp q\""], ["proof (state)\nthis:\n  a \\<in> supp q\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> supp q \\<Longrightarrow> x \\<in> supp p", "then"], ["proof (chain)\npicking this:\n  a \\<in> supp q", "show \"a \\<in> supp p\""], ["proof (prove)\nusing this:\n  a \\<in> supp q\n\ngoal (1 subgoal):\n 1. a \\<in> supp p", "proof (cases \"a \\<in> bn \\<alpha>1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> supp q; a \\<in> bn \\<alpha>1\\<rbrakk>\n    \\<Longrightarrow> a \\<in> supp p\n 2. \\<lbrakk>a \\<in> supp q; a \\<notin> bn \\<alpha>1\\<rbrakk>\n    \\<Longrightarrow> a \\<in> supp p", "case True"], ["proof (state)\nthis:\n  a \\<in> bn \\<alpha>1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> supp q; a \\<in> bn \\<alpha>1\\<rbrakk>\n    \\<Longrightarrow> a \\<in> supp p\n 2. \\<lbrakk>a \\<in> supp q; a \\<notin> bn \\<alpha>1\\<rbrakk>\n    \\<Longrightarrow> a \\<in> supp p", "then"], ["proof (chain)\npicking this:\n  a \\<in> bn \\<alpha>1", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<in> bn \\<alpha>1\n\ngoal (1 subgoal):\n 1. a \\<in> supp p", "using \"*\" q_p"], ["proof (prove)\nusing this:\n  a \\<in> bn \\<alpha>1\n  a \\<in> supp q\n  \\<forall>b\\<in>bn \\<alpha>1. q \\<bullet> b = p \\<bullet> b\n\ngoal (1 subgoal):\n 1. a \\<in> supp p", "by (metis mem_Collect_eq supp_perm)"], ["proof (state)\nthis:\n  a \\<in> supp p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> supp q; a \\<notin> bn \\<alpha>1\\<rbrakk>\n    \\<Longrightarrow> a \\<in> supp p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> supp q; a \\<notin> bn \\<alpha>1\\<rbrakk>\n    \\<Longrightarrow> a \\<in> supp p", "case False"], ["proof (state)\nthis:\n  a \\<notin> bn \\<alpha>1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> supp q; a \\<notin> bn \\<alpha>1\\<rbrakk>\n    \\<Longrightarrow> a \\<in> supp p", "then"], ["proof (chain)\npicking this:\n  a \\<notin> bn \\<alpha>1", "have \"a \\<in> p \\<bullet> bn \\<alpha>1\""], ["proof (prove)\nusing this:\n  a \\<notin> bn \\<alpha>1\n\ngoal (1 subgoal):\n 1. a \\<in> p \\<bullet> bn \\<alpha>1", "using \"*\" supp_q"], ["proof (prove)\nusing this:\n  a \\<notin> bn \\<alpha>1\n  a \\<in> supp q\n  supp q \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1\n\ngoal (1 subgoal):\n 1. a \\<in> p \\<bullet> bn \\<alpha>1", "using UnE subsetCE"], ["proof (prove)\nusing this:\n  a \\<notin> bn \\<alpha>1\n  a \\<in> supp q\n  supp q \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1\n  \\<lbrakk>?c \\<in> ?A \\<union> ?B; ?c \\<in> ?A \\<Longrightarrow> ?P;\n   ?c \\<in> ?B \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n  \\<lbrakk>?A \\<subseteq> ?B; ?c \\<notin> ?A \\<Longrightarrow> ?P;\n   ?c \\<in> ?B \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. a \\<in> p \\<bullet> bn \\<alpha>1", "by blast"], ["proof (state)\nthis:\n  a \\<in> p \\<bullet> bn \\<alpha>1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> supp q; a \\<notin> bn \\<alpha>1\\<rbrakk>\n    \\<Longrightarrow> a \\<in> supp p", "with False"], ["proof (chain)\npicking this:\n  a \\<notin> bn \\<alpha>1\n  a \\<in> p \\<bullet> bn \\<alpha>1", "have \"p \\<bullet> a \\<noteq> a\""], ["proof (prove)\nusing this:\n  a \\<notin> bn \\<alpha>1\n  a \\<in> p \\<bullet> bn \\<alpha>1\n\ngoal (1 subgoal):\n 1. p \\<bullet> a \\<noteq> a", "by (metis mem_permute_iff)"], ["proof (state)\nthis:\n  p \\<bullet> a \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> supp q; a \\<notin> bn \\<alpha>1\\<rbrakk>\n    \\<Longrightarrow> a \\<in> supp p", "then"], ["proof (chain)\npicking this:\n  p \\<bullet> a \\<noteq> a", "show ?thesis"], ["proof (prove)\nusing this:\n  p \\<bullet> a \\<noteq> a\n\ngoal (1 subgoal):\n 1. a \\<in> supp p", "using fresh_def fresh_perm"], ["proof (prove)\nusing this:\n  p \\<bullet> a \\<noteq> a\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n  ?a \\<sharp> ?p = (?p \\<bullet> ?a = ?a)\n\ngoal (1 subgoal):\n 1. a \\<in> supp p", "by blast"], ["proof (state)\nthis:\n  a \\<in> supp p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a \\<in> supp p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  supp q \\<subseteq> supp p\n\ngoal (2 subgoals):\n 1. \\<langle>\\<alpha>1,P1\\<rangle> =\n    \\<langle>\\<alpha>2,P2\\<rangle> \\<Longrightarrow>\n    \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1\n 2. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p\n       \\<subseteq> bn \\<alpha>1 \\<union>\n                   p \\<bullet> bn \\<alpha>1 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "with p"], ["proof (chain)\npicking this:\n  supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n  supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n  (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n  p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n  p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2\n  supp q \\<subseteq> supp p", "have \"(supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* q\""], ["proof (prove)\nusing this:\n  supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n  supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n  (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n  p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n  p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2\n  supp q \\<subseteq> supp p\n\ngoal (1 subgoal):\n 1. (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* q", "by (meson fresh_def fresh_star_def subset_iff)"], ["proof (state)\nthis:\n  (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* q\n\ngoal (2 subgoals):\n 1. \\<langle>\\<alpha>1,P1\\<rangle> =\n    \\<langle>\\<alpha>2,P2\\<rangle> \\<Longrightarrow>\n    \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1\n 2. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p\n       \\<subseteq> bn \\<alpha>1 \\<union>\n                   p \\<bullet> bn \\<alpha>1 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "moreover"], ["proof (state)\nthis:\n  (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* q\n\ngoal (2 subgoals):\n 1. \\<langle>\\<alpha>1,P1\\<rangle> =\n    \\<langle>\\<alpha>2,P2\\<rangle> \\<Longrightarrow>\n    \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1\n 2. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p\n       \\<subseteq> bn \\<alpha>1 \\<union>\n                   p \\<bullet> bn \\<alpha>1 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "with p and q_p"], ["proof (chain)\npicking this:\n  supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n  supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n  (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n  p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n  p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2\n  \\<forall>b\\<in>bn \\<alpha>1. q \\<bullet> b = p \\<bullet> b\n  (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* q", "have \"\\<And>a. a \\<in> supp \\<alpha>1 \\<Longrightarrow> q \\<bullet> a = p \\<bullet> a\" and \"\\<And>a. a \\<in> supp P1 \\<Longrightarrow> q \\<bullet> a = p \\<bullet> a\""], ["proof (prove)\nusing this:\n  supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n  supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n  (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n  p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n  p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2\n  \\<forall>b\\<in>bn \\<alpha>1. q \\<bullet> b = p \\<bullet> b\n  (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* q\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        a \\<in> supp \\<alpha>1 \\<Longrightarrow>\n        q \\<bullet> a = p \\<bullet> a) &&&\n    (\\<And>a.\n        a \\<in> supp P1 \\<Longrightarrow> q \\<bullet> a = p \\<bullet> a)", "by (metis Diff_iff fresh_perm fresh_star_def UnCI supp_Pair)+"], ["proof (state)\nthis:\n  ?a \\<in> supp \\<alpha>1 \\<Longrightarrow> q \\<bullet> ?a = p \\<bullet> ?a\n  ?a \\<in> supp P1 \\<Longrightarrow> q \\<bullet> ?a = p \\<bullet> ?a\n\ngoal (2 subgoals):\n 1. \\<langle>\\<alpha>1,P1\\<rangle> =\n    \\<langle>\\<alpha>2,P2\\<rangle> \\<Longrightarrow>\n    \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1\n 2. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p\n       \\<subseteq> bn \\<alpha>1 \\<union>\n                   p \\<bullet> bn \\<alpha>1 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "then"], ["proof (chain)\npicking this:\n  ?a \\<in> supp \\<alpha>1 \\<Longrightarrow> q \\<bullet> ?a = p \\<bullet> ?a\n  ?a \\<in> supp P1 \\<Longrightarrow> q \\<bullet> ?a = p \\<bullet> ?a", "have \"q \\<bullet> \\<alpha>1 = p \\<bullet> \\<alpha>1\" and \"q \\<bullet> P1 = p \\<bullet> P1\""], ["proof (prove)\nusing this:\n  ?a \\<in> supp \\<alpha>1 \\<Longrightarrow> q \\<bullet> ?a = p \\<bullet> ?a\n  ?a \\<in> supp P1 \\<Longrightarrow> q \\<bullet> ?a = p \\<bullet> ?a\n\ngoal (1 subgoal):\n 1. q \\<bullet> \\<alpha>1 = p \\<bullet> \\<alpha>1 &&&\n    q \\<bullet> P1 = p \\<bullet> P1", "by (metis supp_perm_perm_eq)+"], ["proof (state)\nthis:\n  q \\<bullet> \\<alpha>1 = p \\<bullet> \\<alpha>1\n  q \\<bullet> P1 = p \\<bullet> P1\n\ngoal (2 subgoals):\n 1. \\<langle>\\<alpha>1,P1\\<rangle> =\n    \\<langle>\\<alpha>2,P2\\<rangle> \\<Longrightarrow>\n    \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1\n 2. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p\n       \\<subseteq> bn \\<alpha>1 \\<union>\n                   p \\<bullet> bn \\<alpha>1 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "ultimately"], ["proof (chain)\npicking this:\n  supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n  supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n  (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n  p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n  p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2\n  (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* q\n  q \\<bullet> \\<alpha>1 = p \\<bullet> \\<alpha>1\n  q \\<bullet> P1 = p \\<bullet> P1", "show \"?r\""], ["proof (prove)\nusing this:\n  supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n  supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n  (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n  p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n  p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2\n  (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* q\n  q \\<bullet> \\<alpha>1 = p \\<bullet> \\<alpha>1\n  q \\<bullet> P1 = p \\<bullet> P1\n\ngoal (1 subgoal):\n 1. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1", "using supp_q"], ["proof (prove)\nusing this:\n  supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n  supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n  (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n  p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n  p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2\n  (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* q\n  q \\<bullet> \\<alpha>1 = p \\<bullet> \\<alpha>1\n  q \\<bullet> P1 = p \\<bullet> P1\n  supp q \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1\n\ngoal (1 subgoal):\n 1. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1", "by (metis Pair_eqvt bn_eqvt)"], ["proof (state)\nthis:\n  \\<exists>p.\n     supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n     supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n     (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n     p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n     p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n     supp p \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1\n\ngoal (1 subgoal):\n 1. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p\n       \\<subseteq> bn \\<alpha>1 \\<union>\n                   p \\<bullet> bn \\<alpha>1 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p\n       \\<subseteq> bn \\<alpha>1 \\<union>\n                   p \\<bullet> bn \\<alpha>1 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "assume \"?r\""], ["proof (state)\nthis:\n  \\<exists>p.\n     supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n     supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n     (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n     p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n     p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n     supp p \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1\n\ngoal (1 subgoal):\n 1. \\<exists>p.\n       supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n       supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n       (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n       p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n       p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n       supp p\n       \\<subseteq> bn \\<alpha>1 \\<union>\n                   p \\<bullet> bn \\<alpha>1 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "then"], ["proof (chain)\npicking this:\n  \\<exists>p.\n     supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n     supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n     (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n     p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n     p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n     supp p \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1", "show \"?l\""], ["proof (prove)\nusing this:\n  \\<exists>p.\n     supp (\\<alpha>1, P1) - bn \\<alpha>1 =\n     supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n     (supp (\\<alpha>1, P1) - bn \\<alpha>1) \\<sharp>* p \\<and>\n     p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n     p \\<bullet> bn \\<alpha>1 = bn \\<alpha>2 \\<and>\n     supp p \\<subseteq> bn \\<alpha>1 \\<union> p \\<bullet> bn \\<alpha>1\n\ngoal (1 subgoal):\n 1. \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "by (meson residual_eq_iff_perm)"], ["proof (state)\nthis:\n  \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Strong induction\\<close>"], ["", "lemma residual_strong_induct:\n  assumes \"\\<And>(act::'act::bn) (state::'state::fs) (c::'a::fs). bn act \\<sharp>* c \\<Longrightarrow> P c \\<langle>act,state\\<rangle>\"\n  shows \"P c residual\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P c residual", "proof (rule residual.abs_induct, clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. P c \\<langle>a,b\\<rangle>", "fix act :: 'act and state :: 'state"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. P c \\<langle>a,b\\<rangle>", "obtain p where 1: \"(p \\<bullet> bn act) \\<sharp>* c\" and 2: \"supp \\<langle>act,state\\<rangle> \\<sharp>* p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n         supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (rule at_set_avoiding2[of \"bn act\" c \"\\<langle>act,state\\<rangle>\", THEN exE])"], ["proof (state)\ngoal (5 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n         supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (bn act)\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n         supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp c)\n 3. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n         supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp \\<langle>act,state\\<rangle>)\n 4. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n         supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn act \\<sharp>* \\<langle>act,state\\<rangle>\n 5. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n                    supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn act) \\<sharp>* c \\<and>\n        supp \\<langle>act,state\\<rangle> \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"finite (bn act)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (bn act)", "by (fact bn_finite)"], ["proof (state)\nthis:\n  finite (bn act)\n\ngoal (4 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n         supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp c)\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n         supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp \\<langle>act,state\\<rangle>)\n 3. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n         supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn act \\<sharp>* \\<langle>act,state\\<rangle>\n 4. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n                    supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn act) \\<sharp>* c \\<and>\n        supp \\<langle>act,state\\<rangle> \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n         supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp c)\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n         supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp \\<langle>act,state\\<rangle>)\n 3. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n         supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn act \\<sharp>* \\<langle>act,state\\<rangle>\n 4. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n                    supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn act) \\<sharp>* c \\<and>\n        supp \\<langle>act,state\\<rangle> \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"finite (supp c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (supp c)", "by (fact finite_supp)"], ["proof (state)\nthis:\n  finite (supp c)\n\ngoal (3 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n         supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp \\<langle>act,state\\<rangle>)\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n         supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn act \\<sharp>* \\<langle>act,state\\<rangle>\n 3. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n                    supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn act) \\<sharp>* c \\<and>\n        supp \\<langle>act,state\\<rangle> \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n         supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp \\<langle>act,state\\<rangle>)\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n         supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn act \\<sharp>* \\<langle>act,state\\<rangle>\n 3. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n                    supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn act) \\<sharp>* c \\<and>\n        supp \\<langle>act,state\\<rangle> \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"finite (supp \\<langle>act,state\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (supp \\<langle>act,state\\<rangle>)", "by (fact finite_supp_abs_residual_pair)"], ["proof (state)\nthis:\n  finite (supp \\<langle>act,state\\<rangle>)\n\ngoal (2 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n         supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn act \\<sharp>* \\<langle>act,state\\<rangle>\n 2. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n                    supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn act) \\<sharp>* c \\<and>\n        supp \\<langle>act,state\\<rangle> \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n         supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn act \\<sharp>* \\<langle>act,state\\<rangle>\n 2. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n                    supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn act) \\<sharp>* c \\<and>\n        supp \\<langle>act,state\\<rangle> \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"bn act \\<sharp>* \\<langle>act,state\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bn act \\<sharp>* \\<langle>act,state\\<rangle>", "by (fact bn_abs_residual_fresh)"], ["proof (state)\nthis:\n  bn act \\<sharp>* \\<langle>act,state\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn act) \\<sharp>* c;\n                    supp \\<langle>act,state\\<rangle> \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn act) \\<sharp>* c \\<and>\n        supp \\<langle>act,state\\<rangle> \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "qed metis"], ["proof (state)\nthis:\n  (p \\<bullet> bn act) \\<sharp>* c\n  supp \\<langle>act,state\\<rangle> \\<sharp>* p\n\ngoal (1 subgoal):\n 1. \\<And>a b. P c \\<langle>a,b\\<rangle>", "from 2"], ["proof (chain)\npicking this:\n  supp \\<langle>act,state\\<rangle> \\<sharp>* p", "have \"\\<langle>p \\<bullet> act, p \\<bullet> state\\<rangle> = \\<langle>act,state\\<rangle>\""], ["proof (prove)\nusing this:\n  supp \\<langle>act,state\\<rangle> \\<sharp>* p\n\ngoal (1 subgoal):\n 1. \\<langle>p \\<bullet> act,p \\<bullet> state\\<rangle> =\n    \\<langle>act,state\\<rangle>", "using supp_perm_eq"], ["proof (prove)\nusing this:\n  supp \\<langle>act,state\\<rangle> \\<sharp>* p\n  supp ?x \\<sharp>* ?p \\<Longrightarrow> ?p \\<bullet> ?x = ?x\n\ngoal (1 subgoal):\n 1. \\<langle>p \\<bullet> act,p \\<bullet> state\\<rangle> =\n    \\<langle>act,state\\<rangle>", "by fastforce"], ["proof (state)\nthis:\n  \\<langle>p \\<bullet> act,p \\<bullet> state\\<rangle> =\n  \\<langle>act,state\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>a b. P c \\<langle>a,b\\<rangle>", "then"], ["proof (chain)\npicking this:\n  \\<langle>p \\<bullet> act,p \\<bullet> state\\<rangle> =\n  \\<langle>act,state\\<rangle>", "show \"P c \\<langle>act,state\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<langle>p \\<bullet> act,p \\<bullet> state\\<rangle> =\n  \\<langle>act,state\\<rangle>\n\ngoal (1 subgoal):\n 1. P c \\<langle>act,state\\<rangle>", "using assms 1"], ["proof (prove)\nusing this:\n  \\<langle>p \\<bullet> act,p \\<bullet> state\\<rangle> =\n  \\<langle>act,state\\<rangle>\n  bn ?act \\<sharp>* ?c \\<Longrightarrow> P ?c \\<langle>?act,?state\\<rangle>\n  (p \\<bullet> bn act) \\<sharp>* c\n\ngoal (1 subgoal):\n 1. P c \\<langle>act,state\\<rangle>", "by (metis bn_eqvt)"], ["proof (state)\nthis:\n  P c \\<langle>act,state\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Other lemmas\\<close>"], ["", "lemma residual_empty_bn_eq_iff:\n  assumes \"bn \\<alpha>1 = {}\"\n  shows \"\\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle> \\<longleftrightarrow> \\<alpha>1 = \\<alpha>2 \\<and> P1 = P2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>) =\n    (\\<alpha>1 = \\<alpha>2 \\<and> P1 = P2)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<langle>\\<alpha>1,P1\\<rangle> =\n    \\<langle>\\<alpha>2,P2\\<rangle> \\<Longrightarrow>\n    \\<alpha>1 = \\<alpha>2 \\<and> P1 = P2\n 2. \\<alpha>1 = \\<alpha>2 \\<and> P1 = P2 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "assume \"\\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>\""], ["proof (state)\nthis:\n  \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<langle>\\<alpha>1,P1\\<rangle> =\n    \\<langle>\\<alpha>2,P2\\<rangle> \\<Longrightarrow>\n    \\<alpha>1 = \\<alpha>2 \\<and> P1 = P2\n 2. \\<alpha>1 = \\<alpha>2 \\<and> P1 = P2 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "with assms"], ["proof (chain)\npicking this:\n  bn \\<alpha>1 = {}\n  \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "have \"[{}]set. (\\<alpha>1, P1) = [bn \\<alpha>2]set. (\\<alpha>2, P2)\""], ["proof (prove)\nusing this:\n  bn \\<alpha>1 = {}\n  \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>\n\ngoal (1 subgoal):\n 1. [{}]set. (\\<alpha>1, P1) = [bn \\<alpha>2]set. (\\<alpha>2, P2)", "by (simp add: residual.abs_eq_iff)"], ["proof (state)\nthis:\n  [{}]set. (\\<alpha>1, P1) = [bn \\<alpha>2]set. (\\<alpha>2, P2)\n\ngoal (2 subgoals):\n 1. \\<langle>\\<alpha>1,P1\\<rangle> =\n    \\<langle>\\<alpha>2,P2\\<rangle> \\<Longrightarrow>\n    \\<alpha>1 = \\<alpha>2 \\<and> P1 = P2\n 2. \\<alpha>1 = \\<alpha>2 \\<and> P1 = P2 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "then"], ["proof (chain)\npicking this:\n  [{}]set. (\\<alpha>1, P1) = [bn \\<alpha>2]set. (\\<alpha>2, P2)", "obtain p where \"({}, (\\<alpha>1, P1)) \\<approx>set ((=)) supp p (bn \\<alpha>2, (\\<alpha>2, P2))\""], ["proof (prove)\nusing this:\n  [{}]set. (\\<alpha>1, P1) = [bn \\<alpha>2]set. (\\<alpha>2, P2)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        ({}, \\<alpha>1,\n         P1) \\<approx>set (=) supp p (bn \\<alpha>2, \\<alpha>2,\nP2) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using Abs_eq_iff(1)"], ["proof (prove)\nusing this:\n  [{}]set. (\\<alpha>1, P1) = [bn \\<alpha>2]set. (\\<alpha>2, P2)\n  ([?bs]set. ?x = [?bs']set. ?y) =\n  (\\<exists>p. (?bs, ?x) \\<approx>set (=) supp p (?bs', ?y))\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        ({}, \\<alpha>1,\n         P1) \\<approx>set (=) supp p (bn \\<alpha>2, \\<alpha>2,\nP2) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ({}, \\<alpha>1, P1) \\<approx>set (=) supp p (bn \\<alpha>2, \\<alpha>2, P2)\n\ngoal (2 subgoals):\n 1. \\<langle>\\<alpha>1,P1\\<rangle> =\n    \\<langle>\\<alpha>2,P2\\<rangle> \\<Longrightarrow>\n    \\<alpha>1 = \\<alpha>2 \\<and> P1 = P2\n 2. \\<alpha>1 = \\<alpha>2 \\<and> P1 = P2 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "then"], ["proof (chain)\npicking this:\n  ({}, \\<alpha>1, P1) \\<approx>set (=) supp p (bn \\<alpha>2, \\<alpha>2, P2)", "show \"\\<alpha>1 = \\<alpha>2 \\<and> P1 = P2\""], ["proof (prove)\nusing this:\n  ({}, \\<alpha>1, P1) \\<approx>set (=) supp p (bn \\<alpha>2, \\<alpha>2, P2)\n\ngoal (1 subgoal):\n 1. \\<alpha>1 = \\<alpha>2 \\<and> P1 = P2", "unfolding alpha_set"], ["proof (prove)\nusing this:\n  supp (\\<alpha>1, P1) - {} = supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n  (supp (\\<alpha>1, P1) - {}) \\<sharp>* p \\<and>\n  p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n  p \\<bullet> {} = bn \\<alpha>2\n\ngoal (1 subgoal):\n 1. \\<alpha>1 = \\<alpha>2 \\<and> P1 = P2", "using supp_perm_eq"], ["proof (prove)\nusing this:\n  supp (\\<alpha>1, P1) - {} = supp (\\<alpha>2, P2) - bn \\<alpha>2 \\<and>\n  (supp (\\<alpha>1, P1) - {}) \\<sharp>* p \\<and>\n  p \\<bullet> (\\<alpha>1, P1) = (\\<alpha>2, P2) \\<and>\n  p \\<bullet> {} = bn \\<alpha>2\n  supp ?x \\<sharp>* ?p \\<Longrightarrow> ?p \\<bullet> ?x = ?x\n\ngoal (1 subgoal):\n 1. \\<alpha>1 = \\<alpha>2 \\<and> P1 = P2", "by fastforce"], ["proof (state)\nthis:\n  \\<alpha>1 = \\<alpha>2 \\<and> P1 = P2\n\ngoal (1 subgoal):\n 1. \\<alpha>1 = \\<alpha>2 \\<and> P1 = P2 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<alpha>1 = \\<alpha>2 \\<and> P1 = P2 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "assume \"\\<alpha>1 = \\<alpha>2 \\<and> P1 = P2\""], ["proof (state)\nthis:\n  \\<alpha>1 = \\<alpha>2 \\<and> P1 = P2\n\ngoal (1 subgoal):\n 1. \\<alpha>1 = \\<alpha>2 \\<and> P1 = P2 \\<Longrightarrow>\n    \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "then"], ["proof (chain)\npicking this:\n  \\<alpha>1 = \\<alpha>2 \\<and> P1 = P2", "show \"\\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>\""], ["proof (prove)\nusing this:\n  \\<alpha>1 = \\<alpha>2 \\<and> P1 = P2\n\ngoal (1 subgoal):\n 1. \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>", "by simp"], ["proof (state)\nthis:\n  \\<langle>\\<alpha>1,P1\\<rangle> = \\<langle>\\<alpha>2,P2\\<rangle>\n\ngoal:\nNo subgoals!", "qed\n\n\\<comment> \\<open>The following lemma is not about residuals, but we have no better place for it.\\<close>"], ["", "lemma set_bounded_supp:\n  assumes \"finite S\" and \"\\<And>x. x\\<in>X \\<Longrightarrow> supp x \\<subseteq> S\"\n  shows \"supp X \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp X \\<subseteq> S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. supp X \\<subseteq> S", "have \"S supports X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S supports X", "unfolding supports_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a b.\n       a \\<notin> S \\<and> b \\<notin> S \\<longrightarrow>\n       (a \\<rightleftharpoons> b) \\<bullet> X = X", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<notin> S; b \\<notin> S\\<rbrakk>\n       \\<Longrightarrow> (a \\<rightleftharpoons> b) \\<bullet> X = X", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<notin> S; b \\<notin> S\\<rbrakk>\n       \\<Longrightarrow> (a \\<rightleftharpoons> b) \\<bullet> X = X", "assume a: \"a \\<notin> S\" and b: \"b \\<notin> S\""], ["proof (state)\nthis:\n  a \\<notin> S\n  b \\<notin> S\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<notin> S; b \\<notin> S\\<rbrakk>\n       \\<Longrightarrow> (a \\<rightleftharpoons> b) \\<bullet> X = X", "{"], ["proof (state)\nthis:\n  a \\<notin> S\n  b \\<notin> S\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<notin> S; b \\<notin> S\\<rbrakk>\n       \\<Longrightarrow> (a \\<rightleftharpoons> b) \\<bullet> X = X", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<notin> S; b \\<notin> S\\<rbrakk>\n       \\<Longrightarrow> (a \\<rightleftharpoons> b) \\<bullet> X = X", "assume \"x \\<in> X\""], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<notin> S; b \\<notin> S\\<rbrakk>\n       \\<Longrightarrow> (a \\<rightleftharpoons> b) \\<bullet> X = X", "then"], ["proof (chain)\npicking this:\n  x \\<in> X", "have \"(a \\<rightleftharpoons> b) \\<bullet> x = x\""], ["proof (prove)\nusing this:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. (a \\<rightleftharpoons> b) \\<bullet> x = x", "using a b \\<open>\\<And>x. x\\<in>X \\<Longrightarrow> supp x \\<subseteq> S\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> X\n  a \\<notin> S\n  b \\<notin> S\n  ?x \\<in> X \\<Longrightarrow> supp ?x \\<subseteq> S\n\ngoal (1 subgoal):\n 1. (a \\<rightleftharpoons> b) \\<bullet> x = x", "by (meson fresh_def subsetCE swap_fresh_fresh)"], ["proof (state)\nthis:\n  (a \\<rightleftharpoons> b) \\<bullet> x = x\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<notin> S; b \\<notin> S\\<rbrakk>\n       \\<Longrightarrow> (a \\<rightleftharpoons> b) \\<bullet> X = X", "}"], ["proof (state)\nthis:\n  ?x2 \\<in> X \\<Longrightarrow>\n  (a \\<rightleftharpoons> b) \\<bullet> ?x2 = ?x2\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<notin> S; b \\<notin> S\\<rbrakk>\n       \\<Longrightarrow> (a \\<rightleftharpoons> b) \\<bullet> X = X", "then"], ["proof (chain)\npicking this:\n  ?x2 \\<in> X \\<Longrightarrow>\n  (a \\<rightleftharpoons> b) \\<bullet> ?x2 = ?x2", "show \"(a \\<rightleftharpoons> b) \\<bullet> X = X\""], ["proof (prove)\nusing this:\n  ?x2 \\<in> X \\<Longrightarrow>\n  (a \\<rightleftharpoons> b) \\<bullet> ?x2 = ?x2\n\ngoal (1 subgoal):\n 1. (a \\<rightleftharpoons> b) \\<bullet> X = X", "by auto (metis (full_types) eqvt_bound mem_permute_iff, metis mem_permute_iff)"], ["proof (state)\nthis:\n  (a \\<rightleftharpoons> b) \\<bullet> X = X\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  S supports X\n\ngoal (1 subgoal):\n 1. supp X \\<subseteq> S", "then"], ["proof (chain)\npicking this:\n  S supports X", "show \"supp X \\<subseteq> S\""], ["proof (prove)\nusing this:\n  S supports X\n\ngoal (1 subgoal):\n 1. supp X \\<subseteq> S", "using assms(1)"], ["proof (prove)\nusing this:\n  S supports X\n  finite S\n\ngoal (1 subgoal):\n 1. supp X \\<subseteq> S", "by (fact supp_is_subset)"], ["proof (state)\nthis:\n  supp X \\<subseteq> S\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}