{"file_name": "/home/qj213/afp-2021-10-22/thys/Modal_Logics_for_NTS/Bisimilarity_Implies_Equivalence.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Modal_Logics_for_NTS", "problem_names": ["lemma bisimilarity_implies_equivalence_Act:\n    assumes \"\\<And>P Q. P \\<sim>\\<cdot> Q \\<Longrightarrow> P \\<Turnstile> x \\<longleftrightarrow> Q \\<Turnstile> x\"\n    and \"P \\<sim>\\<cdot> Q\"\n    and \"P \\<Turnstile> Act \\<alpha> x\"\n    shows \"Q \\<Turnstile> Act \\<alpha> x\"", "theorem bisimilarity_implies_equivalence: assumes \"P \\<sim>\\<cdot> Q\" shows \"P =\\<cdot> Q\""], "translations": [["", "lemma bisimilarity_implies_equivalence_Act:\n    assumes \"\\<And>P Q. P \\<sim>\\<cdot> Q \\<Longrightarrow> P \\<Turnstile> x \\<longleftrightarrow> Q \\<Turnstile> x\"\n    and \"P \\<sim>\\<cdot> Q\"\n    and \"P \\<Turnstile> Act \\<alpha> x\"\n    shows \"Q \\<Turnstile> Act \\<alpha> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act \\<alpha> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act \\<alpha> x", "have \"finite (supp Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (supp Q)", "by (fact finite_supp)"], ["proof (state)\nthis:\n  finite (supp Q)\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act \\<alpha> x", "with \\<open>P \\<Turnstile> Act \\<alpha> x\\<close>"], ["proof (chain)\npicking this:\n  P \\<Turnstile> Act \\<alpha> x\n  finite (supp Q)", "obtain \\<alpha>' x' P' where eq: \"Act \\<alpha> x = Act \\<alpha>' x'\" and trans: \"P \\<rightarrow> \\<langle>\\<alpha>',P'\\<rangle>\" and valid: \"P' \\<Turnstile> x'\" and fresh: \"bn \\<alpha>' \\<sharp>* Q\""], ["proof (prove)\nusing this:\n  P \\<Turnstile> Act \\<alpha> x\n  finite (supp Q)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<alpha>' x' P'.\n        \\<lbrakk>Act \\<alpha> x = Act \\<alpha>' x';\n         P \\<rightarrow> \\<langle>\\<alpha>',P'\\<rangle>; P' \\<Turnstile> x';\n         bn \\<alpha>' \\<sharp>* Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis valid_Act_strong)"], ["proof (state)\nthis:\n  Act \\<alpha> x = Act \\<alpha>' x'\n  P \\<rightarrow> \\<langle>\\<alpha>',P'\\<rangle>\n  P' \\<Turnstile> x'\n  bn \\<alpha>' \\<sharp>* Q\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act \\<alpha> x", "from \\<open>P \\<sim>\\<cdot> Q\\<close> and fresh and trans"], ["proof (chain)\npicking this:\n  P \\<sim>\\<cdot> Q\n  bn \\<alpha>' \\<sharp>* Q\n  P \\<rightarrow> \\<langle>\\<alpha>',P'\\<rangle>", "obtain Q' where trans': \"Q \\<rightarrow> \\<langle>\\<alpha>',Q'\\<rangle>\" and bisim': \"P' \\<sim>\\<cdot> Q'\""], ["proof (prove)\nusing this:\n  P \\<sim>\\<cdot> Q\n  bn \\<alpha>' \\<sharp>* Q\n  P \\<rightarrow> \\<langle>\\<alpha>',P'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q \\<rightarrow> \\<langle>\\<alpha>',Q'\\<rangle>;\n         P' \\<sim>\\<cdot> Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis bisimilar_simulation_step)"], ["proof (state)\nthis:\n  Q \\<rightarrow> \\<langle>\\<alpha>',Q'\\<rangle>\n  P' \\<sim>\\<cdot> Q'\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act \\<alpha> x", "from eq"], ["proof (chain)\npicking this:\n  Act \\<alpha> x = Act \\<alpha>' x'", "obtain p where px: \"x' = p \\<bullet> x\""], ["proof (prove)\nusing this:\n  Act \\<alpha> x = Act \\<alpha>' x'\n\ngoal (1 subgoal):\n 1. (\\<And>p. x' = p \\<bullet> x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis Act_eq_iff_perm)"], ["proof (state)\nthis:\n  x' = p \\<bullet> x\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act \\<alpha> x", "with valid"], ["proof (chain)\npicking this:\n  P' \\<Turnstile> x'\n  x' = p \\<bullet> x", "have \"-p \\<bullet> P' \\<Turnstile> x\""], ["proof (prove)\nusing this:\n  P' \\<Turnstile> x'\n  x' = p \\<bullet> x\n\ngoal (1 subgoal):\n 1. - p \\<bullet> P' \\<Turnstile> x", "by (metis permute_minus_cancel(1) valid_eqvt)"], ["proof (state)\nthis:\n  - p \\<bullet> P' \\<Turnstile> x\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act \\<alpha> x", "moreover"], ["proof (state)\nthis:\n  - p \\<bullet> P' \\<Turnstile> x\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act \\<alpha> x", "from bisim'"], ["proof (chain)\npicking this:\n  P' \\<sim>\\<cdot> Q'", "have \"(-p \\<bullet> P') \\<sim>\\<cdot> (-p \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  P' \\<sim>\\<cdot> Q'\n\ngoal (1 subgoal):\n 1. (- p \\<bullet> P') \\<sim>\\<cdot> (- p \\<bullet> Q')", "by (metis bisimilar_eqvt)"], ["proof (state)\nthis:\n  (- p \\<bullet> P') \\<sim>\\<cdot> (- p \\<bullet> Q')\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act \\<alpha> x", "ultimately"], ["proof (chain)\npicking this:\n  - p \\<bullet> P' \\<Turnstile> x\n  (- p \\<bullet> P') \\<sim>\\<cdot> (- p \\<bullet> Q')", "have \"-p \\<bullet> Q' \\<Turnstile> x\""], ["proof (prove)\nusing this:\n  - p \\<bullet> P' \\<Turnstile> x\n  (- p \\<bullet> P') \\<sim>\\<cdot> (- p \\<bullet> Q')\n\ngoal (1 subgoal):\n 1. - p \\<bullet> Q' \\<Turnstile> x", "using \\<open>\\<And>P Q. P \\<sim>\\<cdot> Q \\<Longrightarrow> P \\<Turnstile> x \\<longleftrightarrow> Q \\<Turnstile> x\\<close>"], ["proof (prove)\nusing this:\n  - p \\<bullet> P' \\<Turnstile> x\n  (- p \\<bullet> P') \\<sim>\\<cdot> (- p \\<bullet> Q')\n  ?P \\<sim>\\<cdot> ?Q \\<Longrightarrow>\n  ?P \\<Turnstile> x = ?Q \\<Turnstile> x\n\ngoal (1 subgoal):\n 1. - p \\<bullet> Q' \\<Turnstile> x", "by metis"], ["proof (state)\nthis:\n  - p \\<bullet> Q' \\<Turnstile> x\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act \\<alpha> x", "with px"], ["proof (chain)\npicking this:\n  x' = p \\<bullet> x\n  - p \\<bullet> Q' \\<Turnstile> x", "have \"Q' \\<Turnstile> x'\""], ["proof (prove)\nusing this:\n  x' = p \\<bullet> x\n  - p \\<bullet> Q' \\<Turnstile> x\n\ngoal (1 subgoal):\n 1. Q' \\<Turnstile> x'", "by (metis permute_minus_cancel(1) valid_eqvt)"], ["proof (state)\nthis:\n  Q' \\<Turnstile> x'\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act \\<alpha> x", "with eq and trans'"], ["proof (chain)\npicking this:\n  Act \\<alpha> x = Act \\<alpha>' x'\n  Q \\<rightarrow> \\<langle>\\<alpha>',Q'\\<rangle>\n  Q' \\<Turnstile> x'", "show \"Q \\<Turnstile> Act \\<alpha> x\""], ["proof (prove)\nusing this:\n  Act \\<alpha> x = Act \\<alpha>' x'\n  Q \\<rightarrow> \\<langle>\\<alpha>',Q'\\<rangle>\n  Q' \\<Turnstile> x'\n\ngoal (1 subgoal):\n 1. Q \\<Turnstile> Act \\<alpha> x", "unfolding valid_Act"], ["proof (prove)\nusing this:\n  Act \\<alpha> x = Act \\<alpha>' x'\n  Q \\<rightarrow> \\<langle>\\<alpha>',Q'\\<rangle>\n  Q' \\<Turnstile> x'\n\ngoal (1 subgoal):\n 1. \\<exists>\\<alpha>' x' P'.\n       Act \\<alpha> x = Act \\<alpha>' x' \\<and>\n       Q \\<rightarrow> \\<langle>\\<alpha>',P'\\<rangle> \\<and>\n       P' \\<Turnstile> x'", "by metis"], ["proof (state)\nthis:\n  Q \\<Turnstile> Act \\<alpha> x\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem bisimilarity_implies_equivalence: assumes \"P \\<sim>\\<cdot> Q\" shows \"P =\\<cdot> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P =\\<cdot> Q", "unfolding logically_equivalent_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. P \\<Turnstile> x = Q \\<Turnstile> x", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. P \\<Turnstile> x = Q \\<Turnstile> x", "fix x :: \"('idx, 'pred, 'act) formula\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. P \\<Turnstile> x = Q \\<Turnstile> x", "from assms"], ["proof (chain)\npicking this:\n  P \\<sim>\\<cdot> Q", "show \"P \\<Turnstile> x \\<longleftrightarrow> Q \\<Turnstile> x\""], ["proof (prove)\nusing this:\n  P \\<sim>\\<cdot> Q\n\ngoal (1 subgoal):\n 1. P \\<Turnstile> x = Q \\<Turnstile> x", "proof (induction x arbitrary: P Q)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>xset P Q.\n       \\<lbrakk>finite (supp xset);\n        \\<And>x P Q.\n           \\<lbrakk>x \\<in> set_bset xset; P \\<sim>\\<cdot> Q\\<rbrakk>\n           \\<Longrightarrow> P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Conj xset = Q \\<Turnstile> Conj xset\n 2. \\<And>x P Q.\n       \\<lbrakk>\\<And>P Q.\n                   P \\<sim>\\<cdot> Q \\<Longrightarrow>\n                   P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Formula.Not x =\n                         Q \\<Turnstile> Formula.Not x\n 3. \\<And>pred P Q.\n       P \\<sim>\\<cdot> Q \\<Longrightarrow>\n       P \\<Turnstile> Pred pred = Q \\<Turnstile> Pred pred\n 4. \\<And>act x P Q.\n       \\<lbrakk>\\<And>P Q.\n                   P \\<sim>\\<cdot> Q \\<Longrightarrow>\n                   P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Act act x = Q \\<Turnstile> Act act x", "case (Conj xset)"], ["proof (state)\nthis:\n  finite (supp xset)\n  \\<lbrakk>?x7 \\<in> set_bset xset; ?P7 \\<sim>\\<cdot> ?Q7\\<rbrakk>\n  \\<Longrightarrow> ?P7 \\<Turnstile> ?x7 = ?Q7 \\<Turnstile> ?x7\n  P \\<sim>\\<cdot> Q\n\ngoal (4 subgoals):\n 1. \\<And>xset P Q.\n       \\<lbrakk>finite (supp xset);\n        \\<And>x P Q.\n           \\<lbrakk>x \\<in> set_bset xset; P \\<sim>\\<cdot> Q\\<rbrakk>\n           \\<Longrightarrow> P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Conj xset = Q \\<Turnstile> Conj xset\n 2. \\<And>x P Q.\n       \\<lbrakk>\\<And>P Q.\n                   P \\<sim>\\<cdot> Q \\<Longrightarrow>\n                   P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Formula.Not x =\n                         Q \\<Turnstile> Formula.Not x\n 3. \\<And>pred P Q.\n       P \\<sim>\\<cdot> Q \\<Longrightarrow>\n       P \\<Turnstile> Pred pred = Q \\<Turnstile> Pred pred\n 4. \\<And>act x P Q.\n       \\<lbrakk>\\<And>P Q.\n                   P \\<sim>\\<cdot> Q \\<Longrightarrow>\n                   P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Act act x = Q \\<Turnstile> Act act x", "then"], ["proof (chain)\npicking this:\n  finite (supp xset)\n  \\<lbrakk>?x7 \\<in> set_bset xset; ?P7 \\<sim>\\<cdot> ?Q7\\<rbrakk>\n  \\<Longrightarrow> ?P7 \\<Turnstile> ?x7 = ?Q7 \\<Turnstile> ?x7\n  P \\<sim>\\<cdot> Q", "show ?case"], ["proof (prove)\nusing this:\n  finite (supp xset)\n  \\<lbrakk>?x7 \\<in> set_bset xset; ?P7 \\<sim>\\<cdot> ?Q7\\<rbrakk>\n  \\<Longrightarrow> ?P7 \\<Turnstile> ?x7 = ?Q7 \\<Turnstile> ?x7\n  P \\<sim>\\<cdot> Q\n\ngoal (1 subgoal):\n 1. P \\<Turnstile> Conj xset = Q \\<Turnstile> Conj xset", "by simp"], ["proof (state)\nthis:\n  P \\<Turnstile> Conj xset = Q \\<Turnstile> Conj xset\n\ngoal (3 subgoals):\n 1. \\<And>x P Q.\n       \\<lbrakk>\\<And>P Q.\n                   P \\<sim>\\<cdot> Q \\<Longrightarrow>\n                   P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Formula.Not x =\n                         Q \\<Turnstile> Formula.Not x\n 2. \\<And>pred P Q.\n       P \\<sim>\\<cdot> Q \\<Longrightarrow>\n       P \\<Turnstile> Pred pred = Q \\<Turnstile> Pred pred\n 3. \\<And>act x P Q.\n       \\<lbrakk>\\<And>P Q.\n                   P \\<sim>\\<cdot> Q \\<Longrightarrow>\n                   P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Act act x = Q \\<Turnstile> Act act x", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x P Q.\n       \\<lbrakk>\\<And>P Q.\n                   P \\<sim>\\<cdot> Q \\<Longrightarrow>\n                   P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Formula.Not x =\n                         Q \\<Turnstile> Formula.Not x\n 2. \\<And>pred P Q.\n       P \\<sim>\\<cdot> Q \\<Longrightarrow>\n       P \\<Turnstile> Pred pred = Q \\<Turnstile> Pred pred\n 3. \\<And>act x P Q.\n       \\<lbrakk>\\<And>P Q.\n                   P \\<sim>\\<cdot> Q \\<Longrightarrow>\n                   P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Act act x = Q \\<Turnstile> Act act x", "case Not"], ["proof (state)\nthis:\n  ?P7 \\<sim>\\<cdot> ?Q7 \\<Longrightarrow>\n  ?P7 \\<Turnstile> x_ = ?Q7 \\<Turnstile> x_\n  P \\<sim>\\<cdot> Q\n\ngoal (3 subgoals):\n 1. \\<And>x P Q.\n       \\<lbrakk>\\<And>P Q.\n                   P \\<sim>\\<cdot> Q \\<Longrightarrow>\n                   P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Formula.Not x =\n                         Q \\<Turnstile> Formula.Not x\n 2. \\<And>pred P Q.\n       P \\<sim>\\<cdot> Q \\<Longrightarrow>\n       P \\<Turnstile> Pred pred = Q \\<Turnstile> Pred pred\n 3. \\<And>act x P Q.\n       \\<lbrakk>\\<And>P Q.\n                   P \\<sim>\\<cdot> Q \\<Longrightarrow>\n                   P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Act act x = Q \\<Turnstile> Act act x", "then"], ["proof (chain)\npicking this:\n  ?P7 \\<sim>\\<cdot> ?Q7 \\<Longrightarrow>\n  ?P7 \\<Turnstile> x_ = ?Q7 \\<Turnstile> x_\n  P \\<sim>\\<cdot> Q", "show ?case"], ["proof (prove)\nusing this:\n  ?P7 \\<sim>\\<cdot> ?Q7 \\<Longrightarrow>\n  ?P7 \\<Turnstile> x_ = ?Q7 \\<Turnstile> x_\n  P \\<sim>\\<cdot> Q\n\ngoal (1 subgoal):\n 1. P \\<Turnstile> Formula.Not x_ = Q \\<Turnstile> Formula.Not x_", "by simp"], ["proof (state)\nthis:\n  P \\<Turnstile> Formula.Not x_ = Q \\<Turnstile> Formula.Not x_\n\ngoal (2 subgoals):\n 1. \\<And>pred P Q.\n       P \\<sim>\\<cdot> Q \\<Longrightarrow>\n       P \\<Turnstile> Pred pred = Q \\<Turnstile> Pred pred\n 2. \\<And>act x P Q.\n       \\<lbrakk>\\<And>P Q.\n                   P \\<sim>\\<cdot> Q \\<Longrightarrow>\n                   P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Act act x = Q \\<Turnstile> Act act x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>pred P Q.\n       P \\<sim>\\<cdot> Q \\<Longrightarrow>\n       P \\<Turnstile> Pred pred = Q \\<Turnstile> Pred pred\n 2. \\<And>act x P Q.\n       \\<lbrakk>\\<And>P Q.\n                   P \\<sim>\\<cdot> Q \\<Longrightarrow>\n                   P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Act act x = Q \\<Turnstile> Act act x", "case Pred"], ["proof (state)\nthis:\n  P \\<sim>\\<cdot> Q\n\ngoal (2 subgoals):\n 1. \\<And>pred P Q.\n       P \\<sim>\\<cdot> Q \\<Longrightarrow>\n       P \\<Turnstile> Pred pred = Q \\<Turnstile> Pred pred\n 2. \\<And>act x P Q.\n       \\<lbrakk>\\<And>P Q.\n                   P \\<sim>\\<cdot> Q \\<Longrightarrow>\n                   P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Act act x = Q \\<Turnstile> Act act x", "then"], ["proof (chain)\npicking this:\n  P \\<sim>\\<cdot> Q", "show ?case"], ["proof (prove)\nusing this:\n  P \\<sim>\\<cdot> Q\n\ngoal (1 subgoal):\n 1. P \\<Turnstile> Pred pred_ = Q \\<Turnstile> Pred pred_", "by (metis bisimilar_is_bisimulation is_bisimulation_def symp_def valid_Pred)"], ["proof (state)\nthis:\n  P \\<Turnstile> Pred pred_ = Q \\<Turnstile> Pred pred_\n\ngoal (1 subgoal):\n 1. \\<And>act x P Q.\n       \\<lbrakk>\\<And>P Q.\n                   P \\<sim>\\<cdot> Q \\<Longrightarrow>\n                   P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Act act x = Q \\<Turnstile> Act act x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>act x P Q.\n       \\<lbrakk>\\<And>P Q.\n                   P \\<sim>\\<cdot> Q \\<Longrightarrow>\n                   P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Act act x = Q \\<Turnstile> Act act x", "case (Act \\<alpha> x)"], ["proof (state)\nthis:\n  ?P7 \\<sim>\\<cdot> ?Q7 \\<Longrightarrow>\n  ?P7 \\<Turnstile> x = ?Q7 \\<Turnstile> x\n  P \\<sim>\\<cdot> Q\n\ngoal (1 subgoal):\n 1. \\<And>act x P Q.\n       \\<lbrakk>\\<And>P Q.\n                   P \\<sim>\\<cdot> Q \\<Longrightarrow>\n                   P \\<Turnstile> x = Q \\<Turnstile> x;\n        P \\<sim>\\<cdot> Q\\<rbrakk>\n       \\<Longrightarrow> P \\<Turnstile> Act act x = Q \\<Turnstile> Act act x", "then"], ["proof (chain)\npicking this:\n  ?P7 \\<sim>\\<cdot> ?Q7 \\<Longrightarrow>\n  ?P7 \\<Turnstile> x = ?Q7 \\<Turnstile> x\n  P \\<sim>\\<cdot> Q", "show ?case"], ["proof (prove)\nusing this:\n  ?P7 \\<sim>\\<cdot> ?Q7 \\<Longrightarrow>\n  ?P7 \\<Turnstile> x = ?Q7 \\<Turnstile> x\n  P \\<sim>\\<cdot> Q\n\ngoal (1 subgoal):\n 1. P \\<Turnstile> Act \\<alpha> x = Q \\<Turnstile> Act \\<alpha> x", "by (metis bisimilar_symp bisimilarity_implies_equivalence_Act sympE)"], ["proof (state)\nthis:\n  P \\<Turnstile> Act \\<alpha> x = Q \\<Turnstile> Act \\<alpha> x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<Turnstile> x = Q \\<Turnstile> x\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}