{"file_name": "/home/qj213/afp-2021-10-22/thys/Modal_Logics_for_NTS/Transition_System.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Modal_Logics_for_NTS", "problem_names": ["lemma symp_eqvt [eqvt]:\n  assumes \"symp R\" shows \"symp (p \\<bullet> R)\"", "lemma transition_eqvt':\n    assumes \"P \\<rightarrow> \\<langle>\\<alpha>,Q\\<rangle>\" shows \"p \\<bullet> P \\<rightarrow> \\<langle>p \\<bullet> \\<alpha>, p \\<bullet> Q\\<rangle>\"", "lemma is_bisimulation_eqvt (*[eqvt]*):\n    assumes \"is_bisimulation R\" shows \"is_bisimulation (p \\<bullet> R)\"", "lemma bisimilar_eqvt (*[eqvt]*):\n    assumes \"P \\<sim>\\<cdot> Q\" shows \"(p \\<bullet> P) \\<sim>\\<cdot> (p \\<bullet> Q)\"", "lemma bisimilar_reflp: \"reflp bisimilar\"", "lemma bisimilar_symp: \"symp bisimilar\"", "lemma bisimilar_is_bisimulation: \"is_bisimulation bisimilar\"", "lemma bisimilar_transp: \"transp bisimilar\"", "lemma bisimilar_equivp: \"equivp bisimilar\"", "lemma bisimilar_simulation_step:\n    assumes \"P \\<sim>\\<cdot> Q\" and \"bn \\<alpha> \\<sharp>* Q\" and \"P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\"\n    obtains Q' where \"Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle>\" and \"P' \\<sim>\\<cdot> Q'\""], "translations": [["", "lemma symp_eqvt [eqvt]:\n  assumes \"symp R\" shows \"symp (p \\<bullet> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symp (p \\<bullet> R)", "using assms"], ["proof (prove)\nusing this:\n  symp R\n\ngoal (1 subgoal):\n 1. symp (p \\<bullet> R)", "unfolding symp_def"], ["proof (prove)\nusing this:\n  \\<forall>x y. R x y \\<longrightarrow> R y x\n\ngoal (1 subgoal):\n 1. \\<forall>x y. (p \\<bullet> R) x y \\<longrightarrow> (p \\<bullet> R) y x", "by (subst permute_fun_def)+ (simp add: permute_pure)"], ["", "subsection \\<open>Nominal transition systems\\<close>"], ["", "locale nominal_ts =\n  fixes satisfies :: \"'state::fs \\<Rightarrow> 'pred::fs \\<Rightarrow> bool\"                (infix \"\\<turnstile>\" 70)\n    and transition :: \"'state \\<Rightarrow> ('act::bn,'state) residual \\<Rightarrow> bool\"  (infix \"\\<rightarrow>\" 70)\n  assumes satisfies_eqvt [eqvt]: \"P \\<turnstile> \\<phi> \\<Longrightarrow> p \\<bullet> P \\<turnstile> p \\<bullet> \\<phi>\"\n      and transition_eqvt [eqvt]: \"P \\<rightarrow> \\<alpha>Q \\<Longrightarrow> p \\<bullet> P \\<rightarrow> p \\<bullet> \\<alpha>Q\"\nbegin"], ["", "lemma transition_eqvt':\n    assumes \"P \\<rightarrow> \\<langle>\\<alpha>,Q\\<rangle>\" shows \"p \\<bullet> P \\<rightarrow> \\<langle>p \\<bullet> \\<alpha>, p \\<bullet> Q\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<rightarrow>\n    \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> Q\\<rangle>", "using assms"], ["proof (prove)\nusing this:\n  P \\<rightarrow> \\<langle>\\<alpha>,Q\\<rangle>\n\ngoal (1 subgoal):\n 1. p \\<bullet> P \\<rightarrow>\n    \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> Q\\<rangle>", "by (metis abs_residual_pair_eqvt transition_eqvt)"], ["", "end"], ["", "subsection \\<open>Bisimulations\\<close>"], ["", "context nominal_ts\nbegin"], ["", "definition is_bisimulation :: \"('state \\<Rightarrow> 'state \\<Rightarrow> bool) \\<Rightarrow> bool\" where\n    \"is_bisimulation R \\<equiv>\n      symp R \\<and>\n      (\\<forall>P Q. R P Q \\<longrightarrow> (\\<forall>\\<phi>. P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>)) \\<and>\n      (\\<forall>P Q. R P Q \\<longrightarrow> (\\<forall>\\<alpha> P'. bn \\<alpha> \\<sharp>* Q \\<longrightarrow> P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow> (\\<exists>Q'. Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and> R P' Q')))\""], ["", "definition bisimilar :: \"'state \\<Rightarrow> 'state \\<Rightarrow> bool\"  (infix \"\\<sim>\\<cdot>\" 100) where\n    \"P \\<sim>\\<cdot> Q \\<equiv> \\<exists>R. is_bisimulation R \\<and> R P Q\""], ["", "text \\<open>@{const bisimilar} is an equivariant equivalence relation.\\<close>"], ["", "lemma is_bisimulation_eqvt (*[eqvt]*):\n    assumes \"is_bisimulation R\" shows \"is_bisimulation (p \\<bullet> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_bisimulation (p \\<bullet> R)", "using assms"], ["proof (prove)\nusing this:\n  is_bisimulation R\n\ngoal (1 subgoal):\n 1. is_bisimulation (p \\<bullet> R)", "unfolding is_bisimulation_def"], ["proof (prove)\nusing this:\n  symp R \\<and>\n  (\\<forall>P Q.\n      R P Q \\<longrightarrow>\n      (\\<forall>\\<phi>.\n          P \\<turnstile> \\<phi> \\<longrightarrow>\n          Q \\<turnstile> \\<phi>)) \\<and>\n  (\\<forall>P Q.\n      R P Q \\<longrightarrow>\n      (\\<forall>\\<alpha> P'.\n          bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n          P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n          (\\<exists>Q'.\n              Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n              R P' Q')))\n\ngoal (1 subgoal):\n 1. symp (p \\<bullet> R) \\<and>\n    (\\<forall>P Q.\n        (p \\<bullet> R) P Q \\<longrightarrow>\n        (\\<forall>\\<phi>.\n            P \\<turnstile> \\<phi> \\<longrightarrow>\n            Q \\<turnstile> \\<phi>)) \\<and>\n    (\\<forall>P Q.\n        (p \\<bullet> R) P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                (p \\<bullet> R) P' Q')))", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>symp R;\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<phi>.\n            P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>);\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                R P' Q'))\\<rbrakk>\n    \\<Longrightarrow> symp (p \\<bullet> R) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<phi>.\n                              P \\<turnstile> \\<phi> \\<longrightarrow>\n                              Q \\<turnstile> \\<phi>)) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<alpha> P'.\n                              bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n                              P \\<rightarrow>\n                              \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                              (\\<exists>Q'.\n                                  Q \\<rightarrow>\n                                  \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                                  (p \\<bullet> R) P' Q')))", "assume 1: \"symp R\""], ["proof (state)\nthis:\n  symp R\n\ngoal (1 subgoal):\n 1. \\<lbrakk>symp R;\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<phi>.\n            P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>);\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                R P' Q'))\\<rbrakk>\n    \\<Longrightarrow> symp (p \\<bullet> R) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<phi>.\n                              P \\<turnstile> \\<phi> \\<longrightarrow>\n                              Q \\<turnstile> \\<phi>)) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<alpha> P'.\n                              bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n                              P \\<rightarrow>\n                              \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                              (\\<exists>Q'.\n                                  Q \\<rightarrow>\n                                  \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                                  (p \\<bullet> R) P' Q')))", "assume 2: \"\\<forall>P Q. R P Q \\<longrightarrow> (\\<forall>\\<phi>. P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>)\""], ["proof (state)\nthis:\n  \\<forall>P Q.\n     R P Q \\<longrightarrow>\n     (\\<forall>\\<phi>.\n         P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>symp R;\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<phi>.\n            P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>);\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                R P' Q'))\\<rbrakk>\n    \\<Longrightarrow> symp (p \\<bullet> R) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<phi>.\n                              P \\<turnstile> \\<phi> \\<longrightarrow>\n                              Q \\<turnstile> \\<phi>)) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<alpha> P'.\n                              bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n                              P \\<rightarrow>\n                              \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                              (\\<exists>Q'.\n                                  Q \\<rightarrow>\n                                  \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                                  (p \\<bullet> R) P' Q')))", "assume 3: \"\\<forall>P Q. R P Q \\<longrightarrow> (\\<forall>\\<alpha> P'. bn \\<alpha> \\<sharp>* Q \\<longrightarrow> P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow> (\\<exists>Q'. Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and> R P' Q'))\""], ["proof (state)\nthis:\n  \\<forall>P Q.\n     R P Q \\<longrightarrow>\n     (\\<forall>\\<alpha> P'.\n         bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n         P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n         (\\<exists>Q'.\n             Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and> R P' Q'))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>symp R;\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<phi>.\n            P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>);\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                R P' Q'))\\<rbrakk>\n    \\<Longrightarrow> symp (p \\<bullet> R) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<phi>.\n                              P \\<turnstile> \\<phi> \\<longrightarrow>\n                              Q \\<turnstile> \\<phi>)) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<alpha> P'.\n                              bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n                              P \\<rightarrow>\n                              \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                              (\\<exists>Q'.\n                                  Q \\<rightarrow>\n                                  \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                                  (p \\<bullet> R) P' Q')))", "have \"symp (p \\<bullet> R)\" (is ?S)"], ["proof (prove)\ngoal (1 subgoal):\n 1. symp (p \\<bullet> R)", "using 1"], ["proof (prove)\nusing this:\n  symp R\n\ngoal (1 subgoal):\n 1. symp (p \\<bullet> R)", "by (simp add: symp_eqvt)"], ["proof (state)\nthis:\n  symp (p \\<bullet> R)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>symp R;\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<phi>.\n            P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>);\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                R P' Q'))\\<rbrakk>\n    \\<Longrightarrow> symp (p \\<bullet> R) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<phi>.\n                              P \\<turnstile> \\<phi> \\<longrightarrow>\n                              Q \\<turnstile> \\<phi>)) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<alpha> P'.\n                              bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n                              P \\<rightarrow>\n                              \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                              (\\<exists>Q'.\n                                  Q \\<rightarrow>\n                                  \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                                  (p \\<bullet> R) P' Q')))", "moreover"], ["proof (state)\nthis:\n  symp (p \\<bullet> R)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>symp R;\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<phi>.\n            P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>);\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                R P' Q'))\\<rbrakk>\n    \\<Longrightarrow> symp (p \\<bullet> R) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<phi>.\n                              P \\<turnstile> \\<phi> \\<longrightarrow>\n                              Q \\<turnstile> \\<phi>)) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<alpha> P'.\n                              bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n                              P \\<rightarrow>\n                              \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                              (\\<exists>Q'.\n                                  Q \\<rightarrow>\n                                  \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                                  (p \\<bullet> R) P' Q')))", "have \"\\<forall>P Q. (p \\<bullet> R) P Q \\<longrightarrow> (\\<forall>\\<phi>. P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>)\" (is ?T)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P Q.\n       (p \\<bullet> R) P Q \\<longrightarrow>\n       (\\<forall>\\<phi>.\n           P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>)", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) P Q; P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Q \\<turnstile> \\<phi>", "fix P Q \\<phi>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) P Q; P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Q \\<turnstile> \\<phi>", "assume *: \"(p \\<bullet> R) P Q\" and **: \"P \\<turnstile> \\<phi>\""], ["proof (state)\nthis:\n  (p \\<bullet> R) P Q\n  P \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) P Q; P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Q \\<turnstile> \\<phi>", "from *"], ["proof (chain)\npicking this:\n  (p \\<bullet> R) P Q", "have \"R (-p \\<bullet> P) (-p \\<bullet> Q)\""], ["proof (prove)\nusing this:\n  (p \\<bullet> R) P Q\n\ngoal (1 subgoal):\n 1. R (- p \\<bullet> P) (- p \\<bullet> Q)", "by (simp add: eqvt_lambda permute_bool_def unpermute_def)"], ["proof (state)\nthis:\n  R (- p \\<bullet> P) (- p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<phi>.\n       \\<lbrakk>(p \\<bullet> R) P Q; P \\<turnstile> \\<phi>\\<rbrakk>\n       \\<Longrightarrow> Q \\<turnstile> \\<phi>", "then"], ["proof (chain)\npicking this:\n  R (- p \\<bullet> P) (- p \\<bullet> Q)", "show \"Q \\<turnstile> \\<phi>\""], ["proof (prove)\nusing this:\n  R (- p \\<bullet> P) (- p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. Q \\<turnstile> \\<phi>", "using 2 **"], ["proof (prove)\nusing this:\n  R (- p \\<bullet> P) (- p \\<bullet> Q)\n  \\<forall>P Q.\n     R P Q \\<longrightarrow>\n     (\\<forall>\\<phi>.\n         P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>)\n  P \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. Q \\<turnstile> \\<phi>", "by (metis permute_minus_cancel(1) satisfies_eqvt)"], ["proof (state)\nthis:\n  Q \\<turnstile> \\<phi>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P Q.\n     (p \\<bullet> R) P Q \\<longrightarrow>\n     (\\<forall>\\<phi>.\n         P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>symp R;\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<phi>.\n            P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>);\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                R P' Q'))\\<rbrakk>\n    \\<Longrightarrow> symp (p \\<bullet> R) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<phi>.\n                              P \\<turnstile> \\<phi> \\<longrightarrow>\n                              Q \\<turnstile> \\<phi>)) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<alpha> P'.\n                              bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n                              P \\<rightarrow>\n                              \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                              (\\<exists>Q'.\n                                  Q \\<rightarrow>\n                                  \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                                  (p \\<bullet> R) P' Q')))", "moreover"], ["proof (state)\nthis:\n  \\<forall>P Q.\n     (p \\<bullet> R) P Q \\<longrightarrow>\n     (\\<forall>\\<phi>.\n         P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>symp R;\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<phi>.\n            P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>);\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                R P' Q'))\\<rbrakk>\n    \\<Longrightarrow> symp (p \\<bullet> R) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<phi>.\n                              P \\<turnstile> \\<phi> \\<longrightarrow>\n                              Q \\<turnstile> \\<phi>)) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<alpha> P'.\n                              bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n                              P \\<rightarrow>\n                              \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                              (\\<exists>Q'.\n                                  Q \\<rightarrow>\n                                  \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                                  (p \\<bullet> R) P' Q')))", "have \"\\<forall>P Q. (p \\<bullet> R) P Q \\<longrightarrow> (\\<forall>\\<alpha> P'. bn \\<alpha> \\<sharp>* Q \\<longrightarrow> P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow> (\\<exists>Q'. Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and> (p \\<bullet> R) P' Q'))\" (is ?U)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P Q.\n       (p \\<bullet> R) P Q \\<longrightarrow>\n       (\\<forall>\\<alpha> P'.\n           bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n           P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n               (p \\<bullet> R) P' Q'))", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) P' Q'", "fix P Q \\<alpha> P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) P' Q'", "assume *: \"(p \\<bullet> R) P Q\" and **: \"bn \\<alpha> \\<sharp>* Q\" and ***: \"P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\""], ["proof (state)\nthis:\n  (p \\<bullet> R) P Q\n  bn \\<alpha> \\<sharp>* Q\n  P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) P' Q'", "from *"], ["proof (chain)\npicking this:\n  (p \\<bullet> R) P Q", "have \"R (-p \\<bullet> P) (-p \\<bullet> Q)\""], ["proof (prove)\nusing this:\n  (p \\<bullet> R) P Q\n\ngoal (1 subgoal):\n 1. R (- p \\<bullet> P) (- p \\<bullet> Q)", "by (simp add: eqvt_lambda permute_bool_def unpermute_def)"], ["proof (state)\nthis:\n  R (- p \\<bullet> P) (- p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) P' Q'", "moreover"], ["proof (state)\nthis:\n  R (- p \\<bullet> P) (- p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) P' Q'", "have \"bn (-p \\<bullet> \\<alpha>) \\<sharp>* (-p \\<bullet> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bn (- p \\<bullet> \\<alpha>) \\<sharp>* (- p \\<bullet> Q)", "using **"], ["proof (prove)\nusing this:\n  bn \\<alpha> \\<sharp>* Q\n\ngoal (1 subgoal):\n 1. bn (- p \\<bullet> \\<alpha>) \\<sharp>* (- p \\<bullet> Q)", "by (metis bn_eqvt fresh_star_permute_iff)"], ["proof (state)\nthis:\n  bn (- p \\<bullet> \\<alpha>) \\<sharp>* (- p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) P' Q'", "moreover"], ["proof (state)\nthis:\n  bn (- p \\<bullet> \\<alpha>) \\<sharp>* (- p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) P' Q'", "have \"-p \\<bullet> P \\<rightarrow> \\<langle>-p \\<bullet> \\<alpha>, -p \\<bullet> P'\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - p \\<bullet> P \\<rightarrow>\n    \\<langle>- p \\<bullet> \\<alpha>,- p \\<bullet> P'\\<rangle>", "using ***"], ["proof (prove)\nusing this:\n  P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\n\ngoal (1 subgoal):\n 1. - p \\<bullet> P \\<rightarrow>\n    \\<langle>- p \\<bullet> \\<alpha>,- p \\<bullet> P'\\<rangle>", "by (metis transition_eqvt')"], ["proof (state)\nthis:\n  - p \\<bullet> P \\<rightarrow>\n  \\<langle>- p \\<bullet> \\<alpha>,- p \\<bullet> P'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) P' Q'", "ultimately"], ["proof (chain)\npicking this:\n  R (- p \\<bullet> P) (- p \\<bullet> Q)\n  bn (- p \\<bullet> \\<alpha>) \\<sharp>* (- p \\<bullet> Q)\n  - p \\<bullet> P \\<rightarrow>\n  \\<langle>- p \\<bullet> \\<alpha>,- p \\<bullet> P'\\<rangle>", "obtain Q' where T: \"-p \\<bullet> Q \\<rightarrow> \\<langle>-p \\<bullet> \\<alpha>,Q'\\<rangle>\" and R: \"R (-p \\<bullet> P') Q'\""], ["proof (prove)\nusing this:\n  R (- p \\<bullet> P) (- p \\<bullet> Q)\n  bn (- p \\<bullet> \\<alpha>) \\<sharp>* (- p \\<bullet> Q)\n  - p \\<bullet> P \\<rightarrow>\n  \\<langle>- p \\<bullet> \\<alpha>,- p \\<bullet> P'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>- p \\<bullet> Q \\<rightarrow>\n                 \\<langle>- p \\<bullet> \\<alpha>,Q'\\<rangle>;\n         R (- p \\<bullet> P') Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 3"], ["proof (prove)\nusing this:\n  R (- p \\<bullet> P) (- p \\<bullet> Q)\n  bn (- p \\<bullet> \\<alpha>) \\<sharp>* (- p \\<bullet> Q)\n  - p \\<bullet> P \\<rightarrow>\n  \\<langle>- p \\<bullet> \\<alpha>,- p \\<bullet> P'\\<rangle>\n  \\<forall>P Q.\n     R P Q \\<longrightarrow>\n     (\\<forall>\\<alpha> P'.\n         bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n         P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n         (\\<exists>Q'.\n             Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and> R P' Q'))\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>- p \\<bullet> Q \\<rightarrow>\n                 \\<langle>- p \\<bullet> \\<alpha>,Q'\\<rangle>;\n         R (- p \\<bullet> P') Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  - p \\<bullet> Q \\<rightarrow> \\<langle>- p \\<bullet> \\<alpha>,Q'\\<rangle>\n  R (- p \\<bullet> P') Q'\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) P' Q'", "from T"], ["proof (chain)\npicking this:\n  - p \\<bullet> Q \\<rightarrow> \\<langle>- p \\<bullet> \\<alpha>,Q'\\<rangle>", "have \"Q \\<rightarrow> \\<langle>\\<alpha>, p \\<bullet> Q'\\<rangle>\""], ["proof (prove)\nusing this:\n  - p \\<bullet> Q \\<rightarrow> \\<langle>- p \\<bullet> \\<alpha>,Q'\\<rangle>\n\ngoal (1 subgoal):\n 1. Q \\<rightarrow> \\<langle>\\<alpha>,p \\<bullet> Q'\\<rangle>", "by (metis permute_minus_cancel(1) transition_eqvt')"], ["proof (state)\nthis:\n  Q \\<rightarrow> \\<langle>\\<alpha>,p \\<bullet> Q'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) P' Q'", "moreover"], ["proof (state)\nthis:\n  Q \\<rightarrow> \\<langle>\\<alpha>,p \\<bullet> Q'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) P' Q'", "from R"], ["proof (chain)\npicking this:\n  R (- p \\<bullet> P') Q'", "have \"(p \\<bullet> R) P' (p \\<bullet> Q')\""], ["proof (prove)\nusing this:\n  R (- p \\<bullet> P') Q'\n\ngoal (1 subgoal):\n 1. (p \\<bullet> R) P' (p \\<bullet> Q')", "by (metis eqvt_apply eqvt_lambda permute_bool_def unpermute_def)"], ["proof (state)\nthis:\n  (p \\<bullet> R) P' (p \\<bullet> Q')\n\ngoal (1 subgoal):\n 1. \\<And>P Q \\<alpha> P'.\n       \\<lbrakk>(p \\<bullet> R) P Q; bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            (p \\<bullet> R) P' Q'", "ultimately"], ["proof (chain)\npicking this:\n  Q \\<rightarrow> \\<langle>\\<alpha>,p \\<bullet> Q'\\<rangle>\n  (p \\<bullet> R) P' (p \\<bullet> Q')", "show \"\\<exists>Q'. Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and> (p \\<bullet> R) P' Q'\""], ["proof (prove)\nusing this:\n  Q \\<rightarrow> \\<langle>\\<alpha>,p \\<bullet> Q'\\<rangle>\n  (p \\<bullet> R) P' (p \\<bullet> Q')\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n       (p \\<bullet> R) P' Q'", "by metis"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n     (p \\<bullet> R) P' Q'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P Q.\n     (p \\<bullet> R) P Q \\<longrightarrow>\n     (\\<forall>\\<alpha> P'.\n         bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n         P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n         (\\<exists>Q'.\n             Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n             (p \\<bullet> R) P' Q'))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>symp R;\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<phi>.\n            P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>);\n     \\<forall>P Q.\n        R P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                R P' Q'))\\<rbrakk>\n    \\<Longrightarrow> symp (p \\<bullet> R) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<phi>.\n                              P \\<turnstile> \\<phi> \\<longrightarrow>\n                              Q \\<turnstile> \\<phi>)) \\<and>\n                      (\\<forall>P Q.\n                          (p \\<bullet> R) P Q \\<longrightarrow>\n                          (\\<forall>\\<alpha> P'.\n                              bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n                              P \\<rightarrow>\n                              \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n                              (\\<exists>Q'.\n                                  Q \\<rightarrow>\n                                  \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                                  (p \\<bullet> R) P' Q')))", "ultimately"], ["proof (chain)\npicking this:\n  symp (p \\<bullet> R)\n  \\<forall>P Q.\n     (p \\<bullet> R) P Q \\<longrightarrow>\n     (\\<forall>\\<phi>.\n         P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>)\n  \\<forall>P Q.\n     (p \\<bullet> R) P Q \\<longrightarrow>\n     (\\<forall>\\<alpha> P'.\n         bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n         P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n         (\\<exists>Q'.\n             Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n             (p \\<bullet> R) P' Q'))", "show \"?S \\<and> ?T \\<and> ?U\""], ["proof (prove)\nusing this:\n  symp (p \\<bullet> R)\n  \\<forall>P Q.\n     (p \\<bullet> R) P Q \\<longrightarrow>\n     (\\<forall>\\<phi>.\n         P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>)\n  \\<forall>P Q.\n     (p \\<bullet> R) P Q \\<longrightarrow>\n     (\\<forall>\\<alpha> P'.\n         bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n         P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n         (\\<exists>Q'.\n             Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n             (p \\<bullet> R) P' Q'))\n\ngoal (1 subgoal):\n 1. symp (p \\<bullet> R) \\<and>\n    (\\<forall>P Q.\n        (p \\<bullet> R) P Q \\<longrightarrow>\n        (\\<forall>\\<phi>.\n            P \\<turnstile> \\<phi> \\<longrightarrow>\n            Q \\<turnstile> \\<phi>)) \\<and>\n    (\\<forall>P Q.\n        (p \\<bullet> R) P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                (p \\<bullet> R) P' Q')))", "by simp"], ["proof (state)\nthis:\n  symp (p \\<bullet> R) \\<and>\n  (\\<forall>P Q.\n      (p \\<bullet> R) P Q \\<longrightarrow>\n      (\\<forall>\\<phi>.\n          P \\<turnstile> \\<phi> \\<longrightarrow>\n          Q \\<turnstile> \\<phi>)) \\<and>\n  (\\<forall>P Q.\n      (p \\<bullet> R) P Q \\<longrightarrow>\n      (\\<forall>\\<alpha> P'.\n          bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n          P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n          (\\<exists>Q'.\n              Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n              (p \\<bullet> R) P' Q')))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bisimilar_eqvt (*[eqvt]*):\n    assumes \"P \\<sim>\\<cdot> Q\" shows \"(p \\<bullet> P) \\<sim>\\<cdot> (p \\<bullet> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p \\<bullet> P) \\<sim>\\<cdot> (p \\<bullet> Q)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (p \\<bullet> P) \\<sim>\\<cdot> (p \\<bullet> Q)", "from assms"], ["proof (chain)\npicking this:\n  P \\<sim>\\<cdot> Q", "obtain R where *: \"is_bisimulation R \\<and> R P Q\""], ["proof (prove)\nusing this:\n  P \\<sim>\\<cdot> Q\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        is_bisimulation R \\<and> R P Q \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding bisimilar_def"], ["proof (prove)\nusing this:\n  \\<exists>R. is_bisimulation R \\<and> R P Q\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        is_bisimulation R \\<and> R P Q \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  is_bisimulation R \\<and> R P Q\n\ngoal (1 subgoal):\n 1. (p \\<bullet> P) \\<sim>\\<cdot> (p \\<bullet> Q)", "then"], ["proof (chain)\npicking this:\n  is_bisimulation R \\<and> R P Q", "have \"is_bisimulation (p \\<bullet> R)\""], ["proof (prove)\nusing this:\n  is_bisimulation R \\<and> R P Q\n\ngoal (1 subgoal):\n 1. is_bisimulation (p \\<bullet> R)", "by (simp add: is_bisimulation_eqvt)"], ["proof (state)\nthis:\n  is_bisimulation (p \\<bullet> R)\n\ngoal (1 subgoal):\n 1. (p \\<bullet> P) \\<sim>\\<cdot> (p \\<bullet> Q)", "moreover"], ["proof (state)\nthis:\n  is_bisimulation (p \\<bullet> R)\n\ngoal (1 subgoal):\n 1. (p \\<bullet> P) \\<sim>\\<cdot> (p \\<bullet> Q)", "from \"*\""], ["proof (chain)\npicking this:\n  is_bisimulation R \\<and> R P Q", "have \"(p \\<bullet> R) (p \\<bullet> P) (p \\<bullet> Q)\""], ["proof (prove)\nusing this:\n  is_bisimulation R \\<and> R P Q\n\ngoal (1 subgoal):\n 1. (p \\<bullet> R) (p \\<bullet> P) (p \\<bullet> Q)", "by (metis eqvt_apply permute_boolI)"], ["proof (state)\nthis:\n  (p \\<bullet> R) (p \\<bullet> P) (p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. (p \\<bullet> P) \\<sim>\\<cdot> (p \\<bullet> Q)", "ultimately"], ["proof (chain)\npicking this:\n  is_bisimulation (p \\<bullet> R)\n  (p \\<bullet> R) (p \\<bullet> P) (p \\<bullet> Q)", "show \"(p \\<bullet> P) \\<sim>\\<cdot> (p \\<bullet> Q)\""], ["proof (prove)\nusing this:\n  is_bisimulation (p \\<bullet> R)\n  (p \\<bullet> R) (p \\<bullet> P) (p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. (p \\<bullet> P) \\<sim>\\<cdot> (p \\<bullet> Q)", "unfolding bisimilar_def"], ["proof (prove)\nusing this:\n  is_bisimulation (p \\<bullet> R)\n  (p \\<bullet> R) (p \\<bullet> P) (p \\<bullet> Q)\n\ngoal (1 subgoal):\n 1. \\<exists>R. is_bisimulation R \\<and> R (p \\<bullet> P) (p \\<bullet> Q)", "by auto"], ["proof (state)\nthis:\n  (p \\<bullet> P) \\<sim>\\<cdot> (p \\<bullet> Q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bisimilar_reflp: \"reflp bisimilar\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reflp (\\<sim>\\<cdot>)", "proof (rule reflpI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<sim>\\<cdot> x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<sim>\\<cdot> x", "have \"is_bisimulation (=)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_bisimulation (=)", "unfolding is_bisimulation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. symp (=) \\<and>\n    (\\<forall>P Q.\n        P = Q \\<longrightarrow>\n        (\\<forall>\\<phi>.\n            P \\<turnstile> \\<phi> \\<longrightarrow>\n            Q \\<turnstile> \\<phi>)) \\<and>\n    (\\<forall>P Q.\n        P = Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                P' = Q')))", "by (simp add: symp_def)"], ["proof (state)\nthis:\n  is_bisimulation (=)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<sim>\\<cdot> x", "then"], ["proof (chain)\npicking this:\n  is_bisimulation (=)", "show \"x \\<sim>\\<cdot> x\""], ["proof (prove)\nusing this:\n  is_bisimulation (=)\n\ngoal (1 subgoal):\n 1. x \\<sim>\\<cdot> x", "unfolding bisimilar_def"], ["proof (prove)\nusing this:\n  is_bisimulation (=)\n\ngoal (1 subgoal):\n 1. \\<exists>R. is_bisimulation R \\<and> R x x", "by auto"], ["proof (state)\nthis:\n  x \\<sim>\\<cdot> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bisimilar_symp: \"symp bisimilar\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symp (\\<sim>\\<cdot>)", "proof (rule sympI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<sim>\\<cdot> b \\<Longrightarrow> b \\<sim>\\<cdot> a", "fix P Q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<sim>\\<cdot> b \\<Longrightarrow> b \\<sim>\\<cdot> a", "assume \"P \\<sim>\\<cdot> Q\""], ["proof (state)\nthis:\n  P \\<sim>\\<cdot> Q\n\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<sim>\\<cdot> b \\<Longrightarrow> b \\<sim>\\<cdot> a", "then"], ["proof (chain)\npicking this:\n  P \\<sim>\\<cdot> Q", "obtain R where *: \"is_bisimulation R \\<and> R P Q\""], ["proof (prove)\nusing this:\n  P \\<sim>\\<cdot> Q\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        is_bisimulation R \\<and> R P Q \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding bisimilar_def"], ["proof (prove)\nusing this:\n  \\<exists>R. is_bisimulation R \\<and> R P Q\n\ngoal (1 subgoal):\n 1. (\\<And>R.\n        is_bisimulation R \\<and> R P Q \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  is_bisimulation R \\<and> R P Q\n\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<sim>\\<cdot> b \\<Longrightarrow> b \\<sim>\\<cdot> a", "then"], ["proof (chain)\npicking this:\n  is_bisimulation R \\<and> R P Q", "have \"R Q P\""], ["proof (prove)\nusing this:\n  is_bisimulation R \\<and> R P Q\n\ngoal (1 subgoal):\n 1. R Q P", "unfolding is_bisimulation_def"], ["proof (prove)\nusing this:\n  (symp R \\<and>\n   (\\<forall>P Q.\n       R P Q \\<longrightarrow>\n       (\\<forall>\\<phi>.\n           P \\<turnstile> \\<phi> \\<longrightarrow>\n           Q \\<turnstile> \\<phi>)) \\<and>\n   (\\<forall>P Q.\n       R P Q \\<longrightarrow>\n       (\\<forall>\\<alpha> P'.\n           bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n           P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n               R P' Q')))) \\<and>\n  R P Q\n\ngoal (1 subgoal):\n 1. R Q P", "by (simp add: symp_def)"], ["proof (state)\nthis:\n  R Q P\n\ngoal (1 subgoal):\n 1. \\<And>a b. a \\<sim>\\<cdot> b \\<Longrightarrow> b \\<sim>\\<cdot> a", "with \"*\""], ["proof (chain)\npicking this:\n  is_bisimulation R \\<and> R P Q\n  R Q P", "show \"Q \\<sim>\\<cdot> P\""], ["proof (prove)\nusing this:\n  is_bisimulation R \\<and> R P Q\n  R Q P\n\ngoal (1 subgoal):\n 1. Q \\<sim>\\<cdot> P", "unfolding bisimilar_def"], ["proof (prove)\nusing this:\n  is_bisimulation R \\<and> R P Q\n  R Q P\n\ngoal (1 subgoal):\n 1. \\<exists>R. is_bisimulation R \\<and> R Q P", "by auto"], ["proof (state)\nthis:\n  Q \\<sim>\\<cdot> P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bisimilar_is_bisimulation: \"is_bisimulation bisimilar\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_bisimulation (\\<sim>\\<cdot>)", "unfolding is_bisimulation_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. symp (\\<sim>\\<cdot>) \\<and>\n    (\\<forall>P Q.\n        P \\<sim>\\<cdot> Q \\<longrightarrow>\n        (\\<forall>\\<phi>.\n            P \\<turnstile> \\<phi> \\<longrightarrow>\n            Q \\<turnstile> \\<phi>)) \\<and>\n    (\\<forall>P Q.\n        P \\<sim>\\<cdot> Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                P' \\<sim>\\<cdot> Q')))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. symp (\\<sim>\\<cdot>)\n 2. (\\<forall>P Q.\n        P \\<sim>\\<cdot> Q \\<longrightarrow>\n        (\\<forall>\\<phi>.\n            P \\<turnstile> \\<phi> \\<longrightarrow>\n            Q \\<turnstile> \\<phi>)) \\<and>\n    (\\<forall>P Q.\n        P \\<sim>\\<cdot> Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                P' \\<sim>\\<cdot> Q')))", "show \"symp (\\<sim>\\<cdot>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symp (\\<sim>\\<cdot>)", "by (fact bisimilar_symp)"], ["proof (state)\nthis:\n  symp (\\<sim>\\<cdot>)\n\ngoal (1 subgoal):\n 1. (\\<forall>P Q.\n        P \\<sim>\\<cdot> Q \\<longrightarrow>\n        (\\<forall>\\<phi>.\n            P \\<turnstile> \\<phi> \\<longrightarrow>\n            Q \\<turnstile> \\<phi>)) \\<and>\n    (\\<forall>P Q.\n        P \\<sim>\\<cdot> Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                P' \\<sim>\\<cdot> Q')))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<forall>P Q.\n        P \\<sim>\\<cdot> Q \\<longrightarrow>\n        (\\<forall>\\<phi>.\n            P \\<turnstile> \\<phi> \\<longrightarrow>\n            Q \\<turnstile> \\<phi>)) \\<and>\n    (\\<forall>P Q.\n        P \\<sim>\\<cdot> Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                P' \\<sim>\\<cdot> Q')))", "show \"(\\<forall>P Q. P \\<sim>\\<cdot> Q \\<longrightarrow> (\\<forall>\\<phi>. P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>)) \\<and>\n      (\\<forall>P Q. P \\<sim>\\<cdot> Q \\<longrightarrow> (\\<forall>\\<alpha> P'. bn \\<alpha> \\<sharp>* Q \\<longrightarrow> P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow> (\\<exists>Q'. Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and> P' \\<sim>\\<cdot> Q')))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>P Q.\n        P \\<sim>\\<cdot> Q \\<longrightarrow>\n        (\\<forall>\\<phi>.\n            P \\<turnstile> \\<phi> \\<longrightarrow>\n            Q \\<turnstile> \\<phi>)) \\<and>\n    (\\<forall>P Q.\n        P \\<sim>\\<cdot> Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                P' \\<sim>\\<cdot> Q')))", "by (auto simp add: is_bisimulation_def bisimilar_def) blast"], ["proof (state)\nthis:\n  (\\<forall>P Q.\n      P \\<sim>\\<cdot> Q \\<longrightarrow>\n      (\\<forall>\\<phi>.\n          P \\<turnstile> \\<phi> \\<longrightarrow>\n          Q \\<turnstile> \\<phi>)) \\<and>\n  (\\<forall>P Q.\n      P \\<sim>\\<cdot> Q \\<longrightarrow>\n      (\\<forall>\\<alpha> P'.\n          bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n          P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n          (\\<exists>Q'.\n              Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n              P' \\<sim>\\<cdot> Q')))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bisimilar_transp: \"transp bisimilar\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transp (\\<sim>\\<cdot>)", "proof (rule transpI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot> y; y \\<sim>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot> z", "fix P Q R"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot> y; y \\<sim>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot> z", "assume PQ: \"P \\<sim>\\<cdot> Q\" and QR: \"Q \\<sim>\\<cdot> R\""], ["proof (state)\nthis:\n  P \\<sim>\\<cdot> Q\n  Q \\<sim>\\<cdot> R\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot> y; y \\<sim>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot> z", "let ?bisim = \"bisimilar OO bisimilar\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot> y; y \\<sim>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot> z", "have \"symp ?bisim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. symp ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>))", "proof (rule sympI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) a b \\<Longrightarrow>\n       ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) b a", "fix P R"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) a b \\<Longrightarrow>\n       ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) b a", "assume \"?bisim P R\""], ["proof (state)\nthis:\n  ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P R\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) a b \\<Longrightarrow>\n       ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) b a", "then"], ["proof (chain)\npicking this:\n  ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P R", "obtain Q where \"P \\<sim>\\<cdot> Q\" and \"Q \\<sim>\\<cdot> R\""], ["proof (prove)\nusing this:\n  ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P R\n\ngoal (1 subgoal):\n 1. (\\<And>Q.\n        \\<lbrakk>P \\<sim>\\<cdot> Q; Q \\<sim>\\<cdot> R\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<sim>\\<cdot> Q\n  Q \\<sim>\\<cdot> R\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) a b \\<Longrightarrow>\n       ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) b a", "then"], ["proof (chain)\npicking this:\n  P \\<sim>\\<cdot> Q\n  Q \\<sim>\\<cdot> R", "have \"R \\<sim>\\<cdot> Q\" and \"Q \\<sim>\\<cdot> P\""], ["proof (prove)\nusing this:\n  P \\<sim>\\<cdot> Q\n  Q \\<sim>\\<cdot> R\n\ngoal (1 subgoal):\n 1. R \\<sim>\\<cdot> Q &&& Q \\<sim>\\<cdot> P", "by (metis bisimilar_symp sympE)+"], ["proof (state)\nthis:\n  R \\<sim>\\<cdot> Q\n  Q \\<sim>\\<cdot> P\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) a b \\<Longrightarrow>\n       ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) b a", "then"], ["proof (chain)\npicking this:\n  R \\<sim>\\<cdot> Q\n  Q \\<sim>\\<cdot> P", "show \"?bisim R P\""], ["proof (prove)\nusing this:\n  R \\<sim>\\<cdot> Q\n  Q \\<sim>\\<cdot> P\n\ngoal (1 subgoal):\n 1. ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) R P", "by blast"], ["proof (state)\nthis:\n  ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) R P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  symp ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>))\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot> y; y \\<sim>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot> z", "moreover"], ["proof (state)\nthis:\n  symp ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>))\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot> y; y \\<sim>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot> z", "have \"\\<forall>P Q. ?bisim P Q \\<longrightarrow> (\\<forall>\\<phi>. P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P Q.\n       ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P Q \\<longrightarrow>\n       (\\<forall>\\<phi>.\n           P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>)", "using bisimilar_is_bisimulation is_bisimulation_def"], ["proof (prove)\nusing this:\n  is_bisimulation (\\<sim>\\<cdot>)\n  is_bisimulation ?R \\<equiv>\n  symp ?R \\<and>\n  (\\<forall>P Q.\n      ?R P Q \\<longrightarrow>\n      (\\<forall>\\<phi>.\n          P \\<turnstile> \\<phi> \\<longrightarrow>\n          Q \\<turnstile> \\<phi>)) \\<and>\n  (\\<forall>P Q.\n      ?R P Q \\<longrightarrow>\n      (\\<forall>\\<alpha> P'.\n          bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n          P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n          (\\<exists>Q'.\n              Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n              ?R P' Q')))\n\ngoal (1 subgoal):\n 1. \\<forall>P Q.\n       ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P Q \\<longrightarrow>\n       (\\<forall>\\<phi>.\n           P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>)", "by auto"], ["proof (state)\nthis:\n  \\<forall>P Q.\n     ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P Q \\<longrightarrow>\n     (\\<forall>\\<phi>.\n         P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot> y; y \\<sim>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot> z", "moreover"], ["proof (state)\nthis:\n  \\<forall>P Q.\n     ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P Q \\<longrightarrow>\n     (\\<forall>\\<phi>.\n         P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot> y; y \\<sim>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot> z", "have \"\\<forall>P Q. ?bisim P Q \\<longrightarrow>\n           (\\<forall>\\<alpha> P'. bn \\<alpha> \\<sharp>* Q \\<longrightarrow> P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow> (\\<exists>Q'. Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and> ?bisim P' Q'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P Q.\n       ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P Q \\<longrightarrow>\n       (\\<forall>\\<alpha> P'.\n           bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n           P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n           (\\<exists>Q'.\n               Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n               ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' Q'))", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot> b; b \\<sim>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' Q'", "fix P R Q \\<alpha> P'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot> b; b \\<sim>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' Q'", "assume PR: \"P \\<sim>\\<cdot> R\" and RQ: \"R \\<sim>\\<cdot> Q\" and fresh: \"bn \\<alpha> \\<sharp>* Q\" and trans: \"P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\"\n        \\<comment> \\<open>rename~@{term \"\\<langle>\\<alpha>,P'\\<rangle>\"} to avoid~@{term R}, without touching~@{term Q}\\<close>"], ["proof (state)\nthis:\n  P \\<sim>\\<cdot> R\n  R \\<sim>\\<cdot> Q\n  bn \\<alpha> \\<sharp>* Q\n  P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot> b; b \\<sim>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' Q'", "obtain p where 1: \"(p \\<bullet> bn \\<alpha>) \\<sharp>* R\" and 2: \"supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (rule at_set_avoiding2[of \"bn \\<alpha>\" R \"(\\<langle>\\<alpha>,P'\\<rangle>, Q)\", THEN exE])"], ["proof (state)\ngoal (5 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (bn \\<alpha>)\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp R)\n 3. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp (\\<langle>\\<alpha>,P'\\<rangle>, Q))\n 4. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>, Q)\n 5. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* R \\<and>\n        supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"finite (bn \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (bn \\<alpha>)", "by (fact bn_finite)"], ["proof (state)\nthis:\n  finite (bn \\<alpha>)\n\ngoal (4 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp R)\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp (\\<langle>\\<alpha>,P'\\<rangle>, Q))\n 3. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>, Q)\n 4. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* R \\<and>\n        supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp R)\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp (\\<langle>\\<alpha>,P'\\<rangle>, Q))\n 3. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>, Q)\n 4. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* R \\<and>\n        supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"finite (supp R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (supp R)", "by (fact finite_supp)"], ["proof (state)\nthis:\n  finite (supp R)\n\ngoal (3 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp (\\<langle>\\<alpha>,P'\\<rangle>, Q))\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>, Q)\n 3. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* R \\<and>\n        supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    finite (supp (\\<langle>\\<alpha>,P'\\<rangle>, Q))\n 2. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>, Q)\n 3. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* R \\<and>\n        supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"finite (supp (\\<langle>\\<alpha>,P'\\<rangle>, Q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (supp (\\<langle>\\<alpha>,P'\\<rangle>, Q))", "by (simp add: finite_supp supp_Pair)"], ["proof (state)\nthis:\n  finite (supp (\\<langle>\\<alpha>,P'\\<rangle>, Q))\n\ngoal (2 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>, Q)\n 2. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* R \\<and>\n        supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>p.\n        \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n         supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>, Q)\n 2. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* R \\<and>\n        supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>, Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>, Q)", "by (simp add: fresh fresh_star_Pair)"], ["proof (state)\nthis:\n  bn \\<alpha> \\<sharp>* (\\<langle>\\<alpha>,P'\\<rangle>, Q)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>p.\n                   \\<lbrakk>(p \\<bullet> bn \\<alpha>) \\<sharp>* R;\n                    supp\n                     (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        (x \\<bullet> bn \\<alpha>) \\<sharp>* R \\<and>\n        supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* x\\<rbrakk>\n       \\<Longrightarrow> thesis", "qed metis"], ["proof (state)\nthis:\n  (p \\<bullet> bn \\<alpha>) \\<sharp>* R\n  supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\n\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot> b; b \\<sim>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' Q'", "from 2"], ["proof (chain)\npicking this:\n  supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p", "have 3: \"supp \\<langle>\\<alpha>,P'\\<rangle> \\<sharp>* p\" and 4: \"supp Q \\<sharp>* p\""], ["proof (prove)\nusing this:\n  supp (\\<langle>\\<alpha>,P'\\<rangle>, Q) \\<sharp>* p\n\ngoal (1 subgoal):\n 1. supp \\<langle>\\<alpha>,P'\\<rangle> \\<sharp>* p &&& supp Q \\<sharp>* p", "by (simp add: fresh_star_Un supp_Pair)+"], ["proof (state)\nthis:\n  supp \\<langle>\\<alpha>,P'\\<rangle> \\<sharp>* p\n  supp Q \\<sharp>* p\n\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot> b; b \\<sim>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' Q'", "from 3"], ["proof (chain)\npicking this:\n  supp \\<langle>\\<alpha>,P'\\<rangle> \\<sharp>* p", "have \"\\<langle>p \\<bullet> \\<alpha>, p \\<bullet> P'\\<rangle> = \\<langle>\\<alpha>,P'\\<rangle>\""], ["proof (prove)\nusing this:\n  supp \\<langle>\\<alpha>,P'\\<rangle> \\<sharp>* p\n\ngoal (1 subgoal):\n 1. \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P'\\<rangle> =\n    \\<langle>\\<alpha>,P'\\<rangle>", "using supp_perm_eq"], ["proof (prove)\nusing this:\n  supp \\<langle>\\<alpha>,P'\\<rangle> \\<sharp>* p\n  supp ?x \\<sharp>* ?p \\<Longrightarrow> ?p \\<bullet> ?x = ?x\n\ngoal (1 subgoal):\n 1. \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P'\\<rangle> =\n    \\<langle>\\<alpha>,P'\\<rangle>", "by fastforce"], ["proof (state)\nthis:\n  \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P'\\<rangle> =\n  \\<langle>\\<alpha>,P'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot> b; b \\<sim>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' Q'", "then"], ["proof (chain)\npicking this:\n  \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P'\\<rangle> =\n  \\<langle>\\<alpha>,P'\\<rangle>", "obtain pR' where 5: \"R \\<rightarrow> \\<langle>p \\<bullet> \\<alpha>, pR'\\<rangle>\" and 6: \"(p \\<bullet> P') \\<sim>\\<cdot> pR'\""], ["proof (prove)\nusing this:\n  \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P'\\<rangle> =\n  \\<langle>\\<alpha>,P'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>pR'.\n        \\<lbrakk>R \\<rightarrow> \\<langle>p \\<bullet> \\<alpha>,pR'\\<rangle>;\n         (p \\<bullet> P') \\<sim>\\<cdot> pR'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using PR trans 1"], ["proof (prove)\nusing this:\n  \\<langle>p \\<bullet> \\<alpha>,p \\<bullet> P'\\<rangle> =\n  \\<langle>\\<alpha>,P'\\<rangle>\n  P \\<sim>\\<cdot> R\n  P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\n  (p \\<bullet> bn \\<alpha>) \\<sharp>* R\n\ngoal (1 subgoal):\n 1. (\\<And>pR'.\n        \\<lbrakk>R \\<rightarrow> \\<langle>p \\<bullet> \\<alpha>,pR'\\<rangle>;\n         (p \\<bullet> P') \\<sim>\\<cdot> pR'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (mono_tags, lifting) bisimilar_is_bisimulation bn_eqvt is_bisimulation_def)"], ["proof (state)\nthis:\n  R \\<rightarrow> \\<langle>p \\<bullet> \\<alpha>,pR'\\<rangle>\n  (p \\<bullet> P') \\<sim>\\<cdot> pR'\n\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot> b; b \\<sim>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' Q'", "from fresh and 4"], ["proof (chain)\npicking this:\n  bn \\<alpha> \\<sharp>* Q\n  supp Q \\<sharp>* p", "have \"bn (p \\<bullet> \\<alpha>) \\<sharp>* Q\""], ["proof (prove)\nusing this:\n  bn \\<alpha> \\<sharp>* Q\n  supp Q \\<sharp>* p\n\ngoal (1 subgoal):\n 1. bn (p \\<bullet> \\<alpha>) \\<sharp>* Q", "by (metis bn_eqvt fresh_star_permute_iff supp_perm_eq)"], ["proof (state)\nthis:\n  bn (p \\<bullet> \\<alpha>) \\<sharp>* Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot> b; b \\<sim>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' Q'", "then"], ["proof (chain)\npicking this:\n  bn (p \\<bullet> \\<alpha>) \\<sharp>* Q", "obtain pQ' where 7: \"Q \\<rightarrow> \\<langle>p \\<bullet> \\<alpha>, pQ'\\<rangle>\" and 8: \"pR' \\<sim>\\<cdot> pQ'\""], ["proof (prove)\nusing this:\n  bn (p \\<bullet> \\<alpha>) \\<sharp>* Q\n\ngoal (1 subgoal):\n 1. (\\<And>pQ'.\n        \\<lbrakk>Q \\<rightarrow> \\<langle>p \\<bullet> \\<alpha>,pQ'\\<rangle>;\n         pR' \\<sim>\\<cdot> pQ'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using RQ 5"], ["proof (prove)\nusing this:\n  bn (p \\<bullet> \\<alpha>) \\<sharp>* Q\n  R \\<sim>\\<cdot> Q\n  R \\<rightarrow> \\<langle>p \\<bullet> \\<alpha>,pR'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>pQ'.\n        \\<lbrakk>Q \\<rightarrow> \\<langle>p \\<bullet> \\<alpha>,pQ'\\<rangle>;\n         pR' \\<sim>\\<cdot> pQ'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (full_types) bisimilar_is_bisimulation is_bisimulation_def)"], ["proof (state)\nthis:\n  Q \\<rightarrow> \\<langle>p \\<bullet> \\<alpha>,pQ'\\<rangle>\n  pR' \\<sim>\\<cdot> pQ'\n\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot> b; b \\<sim>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' Q'", "from 7"], ["proof (chain)\npicking this:\n  Q \\<rightarrow> \\<langle>p \\<bullet> \\<alpha>,pQ'\\<rangle>", "have \"Q \\<rightarrow> \\<langle>\\<alpha>, -p \\<bullet> pQ'\\<rangle>\""], ["proof (prove)\nusing this:\n  Q \\<rightarrow> \\<langle>p \\<bullet> \\<alpha>,pQ'\\<rangle>\n\ngoal (1 subgoal):\n 1. Q \\<rightarrow> \\<langle>\\<alpha>,- p \\<bullet> pQ'\\<rangle>", "using 4"], ["proof (prove)\nusing this:\n  Q \\<rightarrow> \\<langle>p \\<bullet> \\<alpha>,pQ'\\<rangle>\n  supp Q \\<sharp>* p\n\ngoal (1 subgoal):\n 1. Q \\<rightarrow> \\<langle>\\<alpha>,- p \\<bullet> pQ'\\<rangle>", "by (metis permute_minus_cancel(2) supp_perm_eq transition_eqvt')"], ["proof (state)\nthis:\n  Q \\<rightarrow> \\<langle>\\<alpha>,- p \\<bullet> pQ'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot> b; b \\<sim>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' Q'", "moreover"], ["proof (state)\nthis:\n  Q \\<rightarrow> \\<langle>\\<alpha>,- p \\<bullet> pQ'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot> b; b \\<sim>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' Q'", "from 6 and 8"], ["proof (chain)\npicking this:\n  (p \\<bullet> P') \\<sim>\\<cdot> pR'\n  pR' \\<sim>\\<cdot> pQ'", "have \"?bisim P' (-p \\<bullet> pQ')\""], ["proof (prove)\nusing this:\n  (p \\<bullet> P') \\<sim>\\<cdot> pR'\n  pR' \\<sim>\\<cdot> pQ'\n\ngoal (1 subgoal):\n 1. ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' (- p \\<bullet> pQ')", "by (metis (no_types, hide_lams) bisimilar_eqvt permute_minus_cancel(2) relcompp.simps)"], ["proof (state)\nthis:\n  ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' (- p \\<bullet> pQ')\n\ngoal (1 subgoal):\n 1. \\<And>P Q b \\<alpha> P'.\n       \\<lbrakk>P \\<sim>\\<cdot> b; b \\<sim>\\<cdot> Q;\n        bn \\<alpha> \\<sharp>* Q;\n        P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Q'.\n                            Q \\<rightarrow>\n                            \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                            ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' Q'", "ultimately"], ["proof (chain)\npicking this:\n  Q \\<rightarrow> \\<langle>\\<alpha>,- p \\<bullet> pQ'\\<rangle>\n  ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' (- p \\<bullet> pQ')", "show \"\\<exists>Q'. Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and> ?bisim P' Q'\""], ["proof (prove)\nusing this:\n  Q \\<rightarrow> \\<langle>\\<alpha>,- p \\<bullet> pQ'\\<rangle>\n  ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' (- p \\<bullet> pQ')\n\ngoal (1 subgoal):\n 1. \\<exists>Q'.\n       Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n       ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' Q'", "by metis"], ["proof (state)\nthis:\n  \\<exists>Q'.\n     Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n     ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' Q'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P Q.\n     ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P Q \\<longrightarrow>\n     (\\<forall>\\<alpha> P'.\n         bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n         P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n         (\\<exists>Q'.\n             Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n             ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' Q'))\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot> y; y \\<sim>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot> z", "ultimately"], ["proof (chain)\npicking this:\n  symp ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>))\n  \\<forall>P Q.\n     ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P Q \\<longrightarrow>\n     (\\<forall>\\<phi>.\n         P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>)\n  \\<forall>P Q.\n     ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P Q \\<longrightarrow>\n     (\\<forall>\\<alpha> P'.\n         bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n         P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n         (\\<exists>Q'.\n             Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n             ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' Q'))", "have \"is_bisimulation ?bisim\""], ["proof (prove)\nusing this:\n  symp ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>))\n  \\<forall>P Q.\n     ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P Q \\<longrightarrow>\n     (\\<forall>\\<phi>.\n         P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>)\n  \\<forall>P Q.\n     ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P Q \\<longrightarrow>\n     (\\<forall>\\<alpha> P'.\n         bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n         P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n         (\\<exists>Q'.\n             Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n             ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' Q'))\n\ngoal (1 subgoal):\n 1. is_bisimulation ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>))", "unfolding is_bisimulation_def"], ["proof (prove)\nusing this:\n  symp ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>))\n  \\<forall>P Q.\n     ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P Q \\<longrightarrow>\n     (\\<forall>\\<phi>.\n         P \\<turnstile> \\<phi> \\<longrightarrow> Q \\<turnstile> \\<phi>)\n  \\<forall>P Q.\n     ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P Q \\<longrightarrow>\n     (\\<forall>\\<alpha> P'.\n         bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n         P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n         (\\<exists>Q'.\n             Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n             ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' Q'))\n\ngoal (1 subgoal):\n 1. symp ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) \\<and>\n    (\\<forall>P Q.\n        ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P Q \\<longrightarrow>\n        (\\<forall>\\<phi>.\n            P \\<turnstile> \\<phi> \\<longrightarrow>\n            Q \\<turnstile> \\<phi>)) \\<and>\n    (\\<forall>P Q.\n        ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P Q \\<longrightarrow>\n        (\\<forall>\\<alpha> P'.\n            bn \\<alpha> \\<sharp>* Q \\<longrightarrow>\n            P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle> \\<longrightarrow>\n            (\\<exists>Q'.\n                Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle> \\<and>\n                ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P' Q')))", "by metis"], ["proof (state)\nthis:\n  is_bisimulation ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>))\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot> y; y \\<sim>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot> z", "moreover"], ["proof (state)\nthis:\n  is_bisimulation ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>))\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot> y; y \\<sim>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot> z", "have \"?bisim P R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P R", "using PQ QR"], ["proof (prove)\nusing this:\n  P \\<sim>\\<cdot> Q\n  Q \\<sim>\\<cdot> R\n\ngoal (1 subgoal):\n 1. ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P R", "by blast"], ["proof (state)\nthis:\n  ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P R\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sim>\\<cdot> y; y \\<sim>\\<cdot> z\\<rbrakk>\n       \\<Longrightarrow> x \\<sim>\\<cdot> z", "ultimately"], ["proof (chain)\npicking this:\n  is_bisimulation ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>))\n  ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P R", "show \"P \\<sim>\\<cdot> R\""], ["proof (prove)\nusing this:\n  is_bisimulation ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>))\n  ((\\<sim>\\<cdot>) OO (\\<sim>\\<cdot>)) P R\n\ngoal (1 subgoal):\n 1. P \\<sim>\\<cdot> R", "unfolding bisimilar_def"], ["proof (prove)\nusing this:\n  is_bisimulation\n   ((\\<lambda>P Q. \\<exists>R. is_bisimulation R \\<and> R P Q) OO\n    (\\<lambda>P Q. \\<exists>R. is_bisimulation R \\<and> R P Q))\n  ((\\<lambda>P Q. \\<exists>R. is_bisimulation R \\<and> R P Q) OO\n   (\\<lambda>P Q. \\<exists>R. is_bisimulation R \\<and> R P Q))\n   P R\n\ngoal (1 subgoal):\n 1. \\<exists>Ra. is_bisimulation Ra \\<and> Ra P R", "by meson"], ["proof (state)\nthis:\n  P \\<sim>\\<cdot> R\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bisimilar_equivp: \"equivp bisimilar\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equivp (\\<sim>\\<cdot>)", "by (metis bisimilar_reflp bisimilar_symp bisimilar_transp equivp_reflp_symp_transp)"], ["", "lemma bisimilar_simulation_step:\n    assumes \"P \\<sim>\\<cdot> Q\" and \"bn \\<alpha> \\<sharp>* Q\" and \"P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\"\n    obtains Q' where \"Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle>\" and \"P' \\<sim>\\<cdot> Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle>;\n         P' \\<sim>\\<cdot> Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  P \\<sim>\\<cdot> Q\n  bn \\<alpha> \\<sharp>* Q\n  P \\<rightarrow> \\<langle>\\<alpha>,P'\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>Q \\<rightarrow> \\<langle>\\<alpha>,Q'\\<rangle>;\n         P' \\<sim>\\<cdot> Q'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (poly_guards_query) bisimilar_is_bisimulation is_bisimulation_def)"], ["", "end"], ["", "end"]]}