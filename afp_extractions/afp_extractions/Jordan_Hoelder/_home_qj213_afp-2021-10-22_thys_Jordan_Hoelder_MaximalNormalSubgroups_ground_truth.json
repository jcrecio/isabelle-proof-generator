{"file_name": "/home/qj213/afp-2021-10-22/thys/Jordan_Hoelder/MaximalNormalSubgroups.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Jordan_Hoelder", "problem_names": ["theorem (in normal) max_normal_simple_quotient:\n  assumes finite:\"finite (carrier G)\"\n  shows \"max_normal_subgroup H G = simple_group (G Mod H)\""], "translations": [["", "theorem (in normal) max_normal_simple_quotient:\n  assumes finite:\"finite (carrier G)\"\n  shows \"max_normal_subgroup H G = simple_group (G Mod H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_normal_subgroup H G = simple_group (G Mod H)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. max_normal_subgroup H G \\<Longrightarrow> simple_group (G Mod H)\n 2. simple_group (G Mod H) \\<Longrightarrow> max_normal_subgroup H G", "assume \"max_normal_subgroup H G\""], ["proof (state)\nthis:\n  max_normal_subgroup H G\n\ngoal (2 subgoals):\n 1. max_normal_subgroup H G \\<Longrightarrow> simple_group (G Mod H)\n 2. simple_group (G Mod H) \\<Longrightarrow> max_normal_subgroup H G", "then"], ["proof (chain)\npicking this:\n  max_normal_subgroup H G", "interpret maxH: max_normal_subgroup H G"], ["proof (prove)\nusing this:\n  max_normal_subgroup H G\n\ngoal (1 subgoal):\n 1. max_normal_subgroup H G", "."], ["proof (state)\ngoal (2 subgoals):\n 1. max_normal_subgroup H G \\<Longrightarrow> simple_group (G Mod H)\n 2. simple_group (G Mod H) \\<Longrightarrow> max_normal_subgroup H G", "show \"simple_group (G Mod H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. simple_group (G Mod H)", "unfolding simple_group_def simple_group_axioms_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (G Mod H) \\<and>\n    1 < order (G Mod H) \\<and>\n    (\\<forall>Ha.\n        Ha \\<lhd> G Mod H \\<longrightarrow>\n        Ha = carrier (G Mod H) \\<or> Ha = {\\<one>\\<^bsub>G Mod H\\<^esub>})", "proof (intro conjI factorgroup_is_group allI impI disjCI)"], ["proof (state)\ngoal (2 subgoals):\n 1. 1 < order (G Mod H)\n 2. \\<And>Ha.\n       \\<lbrakk>Ha \\<lhd> G Mod H;\n        Ha \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> Ha = carrier (G Mod H)", "from finite factgroup_finite factorgroup_is_group group.finite_pos_order"], ["proof (chain)\npicking this:\n  finite (carrier G)\n  finite (carrier G) \\<Longrightarrow> finite (rcosets H)\n  Group.group (G Mod H)\n  \\<lbrakk>Group.group ?G; finite (carrier ?G)\\<rbrakk>\n  \\<Longrightarrow> 0 < order ?G", "have gt0:\"0 < card (rcosets H)\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n  finite (carrier G) \\<Longrightarrow> finite (rcosets H)\n  Group.group (G Mod H)\n  \\<lbrakk>Group.group ?G; finite (carrier ?G)\\<rbrakk>\n  \\<Longrightarrow> 0 < order ?G\n\ngoal (1 subgoal):\n 1. 0 < card (rcosets H)", "unfolding FactGroup_def order_def"], ["proof (prove)\nusing this:\n  finite (carrier G)\n  finite (carrier G) \\<Longrightarrow> finite (rcosets H)\n  Group.group\n   \\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>\n  \\<lbrakk>Group.group ?G; finite (carrier ?G)\\<rbrakk>\n  \\<Longrightarrow> 0 < card (carrier ?G)\n\ngoal (1 subgoal):\n 1. 0 < card (rcosets H)", "by force"], ["proof (state)\nthis:\n  0 < card (rcosets H)\n\ngoal (2 subgoals):\n 1. 1 < order (G Mod H)\n 2. \\<And>Ha.\n       \\<lbrakk>Ha \\<lhd> G Mod H;\n        Ha \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> Ha = carrier (G Mod H)", "from maxH.proper finite"], ["proof (chain)\npicking this:\n  H \\<noteq> carrier G\n  finite (carrier G)", "have \"carrier (G Mod H) \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\""], ["proof (prove)\nusing this:\n  H \\<noteq> carrier G\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. carrier (G Mod H) \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}", "using fact_group_trivial_iff"], ["proof (prove)\nusing this:\n  H \\<noteq> carrier G\n  finite (carrier G)\n  finite (carrier G) \\<Longrightarrow>\n  (carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}) = (H = carrier G)\n\ngoal (1 subgoal):\n 1. carrier (G Mod H) \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}", "by auto"], ["proof (state)\nthis:\n  carrier (G Mod H) \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\n\ngoal (2 subgoals):\n 1. 1 < order (G Mod H)\n 2. \\<And>Ha.\n       \\<lbrakk>Ha \\<lhd> G Mod H;\n        Ha \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> Ha = carrier (G Mod H)", "hence \"1 \\<noteq> order (G Mod H)\""], ["proof (prove)\nusing this:\n  carrier (G Mod H) \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\n\ngoal (1 subgoal):\n 1. 1 \\<noteq> order (G Mod H)", "using factorgroup_is_group group.order_one_triv_iff"], ["proof (prove)\nusing this:\n  carrier (G Mod H) \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\n  Group.group (G Mod H)\n  Group.group ?G \\<Longrightarrow>\n  (order ?G = 1) = (carrier ?G = {\\<one>\\<^bsub>?G\\<^esub>})\n\ngoal (1 subgoal):\n 1. 1 \\<noteq> order (G Mod H)", "by metis"], ["proof (state)\nthis:\n  1 \\<noteq> order (G Mod H)\n\ngoal (2 subgoals):\n 1. 1 < order (G Mod H)\n 2. \\<And>Ha.\n       \\<lbrakk>Ha \\<lhd> G Mod H;\n        Ha \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> Ha = carrier (G Mod H)", "with gt0"], ["proof (chain)\npicking this:\n  0 < card (rcosets H)\n  1 \\<noteq> order (G Mod H)", "show \"1 < order (G Mod H)\""], ["proof (prove)\nusing this:\n  0 < card (rcosets H)\n  1 \\<noteq> order (G Mod H)\n\ngoal (1 subgoal):\n 1. 1 < order (G Mod H)", "unfolding order_def FactGroup_def"], ["proof (prove)\nusing this:\n  0 < card (rcosets H)\n  1 \\<noteq>\n  card\n   (carrier\n     \\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>)\n\ngoal (1 subgoal):\n 1. 1 < card\n         (carrier\n           \\<lparr>carrier = rcosets H, monoid.mult = (<#>),\n              one = H\\<rparr>)", "by auto"], ["proof (state)\nthis:\n  1 < order (G Mod H)\n\ngoal (1 subgoal):\n 1. \\<And>Ha.\n       \\<lbrakk>Ha \\<lhd> G Mod H;\n        Ha \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> Ha = carrier (G Mod H)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ha.\n       \\<lbrakk>Ha \\<lhd> G Mod H;\n        Ha \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> Ha = carrier (G Mod H)", "fix A'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ha.\n       \\<lbrakk>Ha \\<lhd> G Mod H;\n        Ha \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> Ha = carrier (G Mod H)", "assume A'normal:\"A' \\<lhd> G Mod H\" and A'nottriv:\"A' \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\""], ["proof (state)\nthis:\n  A' \\<lhd> G Mod H\n  A' \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\n\ngoal (1 subgoal):\n 1. \\<And>Ha.\n       \\<lbrakk>Ha \\<lhd> G Mod H;\n        Ha \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> Ha = carrier (G Mod H)", "define A where \"A = \\<Union>A'\""], ["proof (state)\nthis:\n  A = \\<Union> A'\n\ngoal (1 subgoal):\n 1. \\<And>Ha.\n       \\<lbrakk>Ha \\<lhd> G Mod H;\n        Ha \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> Ha = carrier (G Mod H)", "have A2:\"A \\<lhd> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<lhd> G", "using A'normal"], ["proof (prove)\nusing this:\n  A' \\<lhd> G Mod H\n\ngoal (1 subgoal):\n 1. A \\<lhd> G", "unfolding A_def"], ["proof (prove)\nusing this:\n  A' \\<lhd> G Mod H\n\ngoal (1 subgoal):\n 1. \\<Union> A' \\<lhd> G", "by (rule factgroup_subgroup_union_normal)"], ["proof (state)\nthis:\n  A \\<lhd> G\n\ngoal (1 subgoal):\n 1. \\<And>Ha.\n       \\<lbrakk>Ha \\<lhd> G Mod H;\n        Ha \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> Ha = carrier (G Mod H)", "have \"H \\<in> A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<in> A'", "using A'normal normal_imp_subgroup subgroup.one_closed"], ["proof (prove)\nusing this:\n  A' \\<lhd> G Mod H\n  ?H \\<lhd> ?G \\<Longrightarrow> subgroup ?H ?G\n  subgroup ?H ?G \\<Longrightarrow> \\<one>\\<^bsub>?G\\<^esub> \\<in> ?H\n\ngoal (1 subgoal):\n 1. H \\<in> A'", "unfolding FactGroup_def"], ["proof (prove)\nusing this:\n  A' \\<lhd>\n  \\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>\n  ?H \\<lhd> ?G \\<Longrightarrow> subgroup ?H ?G\n  subgroup ?H ?G \\<Longrightarrow> \\<one>\\<^bsub>?G\\<^esub> \\<in> ?H\n\ngoal (1 subgoal):\n 1. H \\<in> A'", "by force"], ["proof (state)\nthis:\n  H \\<in> A'\n\ngoal (1 subgoal):\n 1. \\<And>Ha.\n       \\<lbrakk>Ha \\<lhd> G Mod H;\n        Ha \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> Ha = carrier (G Mod H)", "hence \"H \\<subseteq> A\""], ["proof (prove)\nusing this:\n  H \\<in> A'\n\ngoal (1 subgoal):\n 1. H \\<subseteq> A", "unfolding A_def"], ["proof (prove)\nusing this:\n  H \\<in> A'\n\ngoal (1 subgoal):\n 1. H \\<subseteq> \\<Union> A'", "by auto"], ["proof (state)\nthis:\n  H \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>Ha.\n       \\<lbrakk>Ha \\<lhd> G Mod H;\n        Ha \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> Ha = carrier (G Mod H)", "hence A1:\"H \\<lhd> (G\\<lparr>carrier := A\\<rparr>)\""], ["proof (prove)\nusing this:\n  H \\<subseteq> A\n\ngoal (1 subgoal):\n 1. H \\<lhd> G\\<lparr>carrier := A\\<rparr>", "using A2 is_normal"], ["proof (prove)\nusing this:\n  H \\<subseteq> A\n  A \\<lhd> G\n  H \\<lhd> G\n\ngoal (1 subgoal):\n 1. H \\<lhd> G\\<lparr>carrier := A\\<rparr>", "by (metis is_subgroup maxH.max_normal normal_restrict_supergroup subgroup_self)"], ["proof (state)\nthis:\n  H \\<lhd> G\\<lparr>carrier := A\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>Ha.\n       \\<lbrakk>Ha \\<lhd> G Mod H;\n        Ha \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> Ha = carrier (G Mod H)", "have A3:\"A' = rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A' = rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H", "unfolding A_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A' = rcosets\\<^bsub>G\\<lparr>carrier := \\<Union> A'\\<rparr>\\<^esub> H", "using factgroup_subgroup_union_factor A'normal normal_imp_subgroup"], ["proof (prove)\nusing this:\n  subgroup ?A (G Mod H) \\<Longrightarrow>\n  ?A = rcosets\\<^bsub>G\\<lparr>carrier := \\<Union> ?A\\<rparr>\\<^esub> H\n  A' \\<lhd> G Mod H\n  ?H \\<lhd> ?G \\<Longrightarrow> subgroup ?H ?G\n\ngoal (1 subgoal):\n 1. A' = rcosets\\<^bsub>G\\<lparr>carrier := \\<Union> A'\\<rparr>\\<^esub> H", "by auto"], ["proof (state)\nthis:\n  A' = rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H\n\ngoal (1 subgoal):\n 1. \\<And>Ha.\n       \\<lbrakk>Ha \\<lhd> G Mod H;\n        Ha \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> Ha = carrier (G Mod H)", "from A1"], ["proof (chain)\npicking this:\n  H \\<lhd> G\\<lparr>carrier := A\\<rparr>", "interpret normalHA: normal H \"(G\\<lparr>carrier := A\\<rparr>)\""], ["proof (prove)\nusing this:\n  H \\<lhd> G\\<lparr>carrier := A\\<rparr>\n\ngoal (1 subgoal):\n 1. H \\<lhd> G\\<lparr>carrier := A\\<rparr>", "by metis"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ha.\n       \\<lbrakk>Ha \\<lhd> G Mod H;\n        Ha \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> Ha = carrier (G Mod H)", "have \"H \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<subseteq> A", "using normalHA.is_subgroup subgroup.subset"], ["proof (prove)\nusing this:\n  subgroup H (G\\<lparr>carrier := A\\<rparr>)\n  subgroup ?H ?G \\<Longrightarrow> ?H \\<subseteq> carrier ?G\n\ngoal (1 subgoal):\n 1. H \\<subseteq> A", "by force"], ["proof (state)\nthis:\n  H \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>Ha.\n       \\<lbrakk>Ha \\<lhd> G Mod H;\n        Ha \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> Ha = carrier (G Mod H)", "with A2"], ["proof (chain)\npicking this:\n  A \\<lhd> G\n  H \\<subseteq> A", "have \"A = H \\<or> A = carrier G\""], ["proof (prove)\nusing this:\n  A \\<lhd> G\n  H \\<subseteq> A\n\ngoal (1 subgoal):\n 1. A = H \\<or> A = carrier G", "using maxH.max_normal"], ["proof (prove)\nusing this:\n  A \\<lhd> G\n  H \\<subseteq> A\n  \\<lbrakk>?J \\<lhd> G; ?J \\<noteq> H; ?J \\<noteq> carrier G\\<rbrakk>\n  \\<Longrightarrow> \\<not> H \\<subseteq> ?J\n\ngoal (1 subgoal):\n 1. A = H \\<or> A = carrier G", "by auto"], ["proof (state)\nthis:\n  A = H \\<or> A = carrier G\n\ngoal (1 subgoal):\n 1. \\<And>Ha.\n       \\<lbrakk>Ha \\<lhd> G Mod H;\n        Ha \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> Ha = carrier (G Mod H)", "thus \"A' = carrier (G Mod H)\""], ["proof (prove)\nusing this:\n  A = H \\<or> A = carrier G\n\ngoal (1 subgoal):\n 1. A' = carrier (G Mod H)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. A = H \\<Longrightarrow> A' = carrier (G Mod H)\n 2. A = carrier G \\<Longrightarrow> A' = carrier (G Mod H)", "assume \"A = H\""], ["proof (state)\nthis:\n  A = H\n\ngoal (2 subgoals):\n 1. A = H \\<Longrightarrow> A' = carrier (G Mod H)\n 2. A = carrier G \\<Longrightarrow> A' = carrier (G Mod H)", "hence \"carrier (G\\<lparr>carrier := A\\<rparr> Mod H) = {\\<one>\\<^bsub>(G\\<lparr>carrier := A\\<rparr> Mod H)\\<^esub>}\""], ["proof (prove)\nusing this:\n  A = H\n\ngoal (1 subgoal):\n 1. carrier (G\\<lparr>carrier := A\\<rparr> Mod H) =\n    {\\<one>\\<^bsub>G\\<lparr>carrier := A\\<rparr> Mod H\\<^esub>}", "by (metis finite is_group normalHA.fact_group_trivial_iff normalHA.subgroup_self normalHA.subset subgroup_finite subgroup_of_restricted_group subgroup_of_subgroup subset_antisym)"], ["proof (state)\nthis:\n  carrier (G\\<lparr>carrier := A\\<rparr> Mod H) =\n  {\\<one>\\<^bsub>G\\<lparr>carrier := A\\<rparr> Mod H\\<^esub>}\n\ngoal (2 subgoals):\n 1. A = H \\<Longrightarrow> A' = carrier (G Mod H)\n 2. A = carrier G \\<Longrightarrow> A' = carrier (G Mod H)", "also"], ["proof (state)\nthis:\n  carrier (G\\<lparr>carrier := A\\<rparr> Mod H) =\n  {\\<one>\\<^bsub>G\\<lparr>carrier := A\\<rparr> Mod H\\<^esub>}\n\ngoal (2 subgoals):\n 1. A = H \\<Longrightarrow> A' = carrier (G Mod H)\n 2. A = carrier G \\<Longrightarrow> A' = carrier (G Mod H)", "have \"... = {\\<one>\\<^bsub>G Mod H\\<^esub>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<one>\\<^bsub>G\\<lparr>carrier := A\\<rparr> Mod H\\<^esub>} =\n    {\\<one>\\<^bsub>G Mod H\\<^esub>}", "unfolding FactGroup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<one>\\<^bsub>\\<lparr>carrier = rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H, monoid.mult = (<#>\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub>), one = H\\<rparr>\\<^esub>} =\n    {\\<one>\\<^bsub>\\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>\\<^esub>}", "by auto"], ["proof (state)\nthis:\n  {\\<one>\\<^bsub>G\\<lparr>carrier := A\\<rparr> Mod H\\<^esub>} =\n  {\\<one>\\<^bsub>G Mod H\\<^esub>}\n\ngoal (2 subgoals):\n 1. A = H \\<Longrightarrow> A' = carrier (G Mod H)\n 2. A = carrier G \\<Longrightarrow> A' = carrier (G Mod H)", "finally"], ["proof (chain)\npicking this:\n  carrier (G\\<lparr>carrier := A\\<rparr> Mod H) =\n  {\\<one>\\<^bsub>G Mod H\\<^esub>}", "have \"A' = {\\<one>\\<^bsub>G Mod H\\<^esub>}\""], ["proof (prove)\nusing this:\n  carrier (G\\<lparr>carrier := A\\<rparr> Mod H) =\n  {\\<one>\\<^bsub>G Mod H\\<^esub>}\n\ngoal (1 subgoal):\n 1. A' = {\\<one>\\<^bsub>G Mod H\\<^esub>}", "using A3"], ["proof (prove)\nusing this:\n  carrier (G\\<lparr>carrier := A\\<rparr> Mod H) =\n  {\\<one>\\<^bsub>G Mod H\\<^esub>}\n  A' = rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H\n\ngoal (1 subgoal):\n 1. A' = {\\<one>\\<^bsub>G Mod H\\<^esub>}", "unfolding FactGroup_def"], ["proof (prove)\nusing this:\n  carrier\n   \\<lparr>carrier = rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H,\n      monoid.mult = (<#>\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub>),\n      one = H\\<rparr> =\n  {\\<one>\\<^bsub>\\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>\\<^esub>}\n  A' = rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H\n\ngoal (1 subgoal):\n 1. A' =\n    {\\<one>\\<^bsub>\\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>\\<^esub>}", "by simp"], ["proof (state)\nthis:\n  A' = {\\<one>\\<^bsub>G Mod H\\<^esub>}\n\ngoal (2 subgoals):\n 1. A = H \\<Longrightarrow> A' = carrier (G Mod H)\n 2. A = carrier G \\<Longrightarrow> A' = carrier (G Mod H)", "with A'nottriv"], ["proof (chain)\npicking this:\n  A' \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\n  A' = {\\<one>\\<^bsub>G Mod H\\<^esub>}", "show ?thesis"], ["proof (prove)\nusing this:\n  A' \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\n  A' = {\\<one>\\<^bsub>G Mod H\\<^esub>}\n\ngoal (1 subgoal):\n 1. A' = carrier (G Mod H)", ".."], ["proof (state)\nthis:\n  A' = carrier (G Mod H)\n\ngoal (1 subgoal):\n 1. A = carrier G \\<Longrightarrow> A' = carrier (G Mod H)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. A = carrier G \\<Longrightarrow> A' = carrier (G Mod H)", "assume \"A = carrier G\""], ["proof (state)\nthis:\n  A = carrier G\n\ngoal (1 subgoal):\n 1. A = carrier G \\<Longrightarrow> A' = carrier (G Mod H)", "hence \"(G\\<lparr>carrier := A\\<rparr> Mod H) = G Mod H\""], ["proof (prove)\nusing this:\n  A = carrier G\n\ngoal (1 subgoal):\n 1. G\\<lparr>carrier := A\\<rparr> Mod H = G Mod H", "by auto"], ["proof (state)\nthis:\n  G\\<lparr>carrier := A\\<rparr> Mod H = G Mod H\n\ngoal (1 subgoal):\n 1. A = carrier G \\<Longrightarrow> A' = carrier (G Mod H)", "thus \"A' = carrier (G Mod H)\""], ["proof (prove)\nusing this:\n  G\\<lparr>carrier := A\\<rparr> Mod H = G Mod H\n\ngoal (1 subgoal):\n 1. A' = carrier (G Mod H)", "using A3"], ["proof (prove)\nusing this:\n  G\\<lparr>carrier := A\\<rparr> Mod H = G Mod H\n  A' = rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H\n\ngoal (1 subgoal):\n 1. A' = carrier (G Mod H)", "unfolding FactGroup_def"], ["proof (prove)\nusing this:\n  \\<lparr>carrier = rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H,\n     monoid.mult = (<#>\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub>),\n     one = H\\<rparr> =\n  \\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>\n  A' = rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H\n\ngoal (1 subgoal):\n 1. A' =\n    carrier\n     \\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>", "by simp"], ["proof (state)\nthis:\n  A' = carrier (G Mod H)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A' = carrier (G Mod H)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  simple_group (G Mod H)\n\ngoal (1 subgoal):\n 1. simple_group (G Mod H) \\<Longrightarrow> max_normal_subgroup H G", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. simple_group (G Mod H) \\<Longrightarrow> max_normal_subgroup H G", "assume simple:\"simple_group (G Mod H)\""], ["proof (state)\nthis:\n  simple_group (G Mod H)\n\ngoal (1 subgoal):\n 1. simple_group (G Mod H) \\<Longrightarrow> max_normal_subgroup H G", "show \"max_normal_subgroup H G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_normal_subgroup H G", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. H \\<noteq> carrier G\n 2. \\<And>J.\n       \\<lbrakk>J \\<lhd> G; J \\<noteq> H; J \\<noteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<not> H \\<subseteq> J", "from simple"], ["proof (chain)\npicking this:\n  simple_group (G Mod H)", "have \"carrier (G Mod H) \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\""], ["proof (prove)\nusing this:\n  simple_group (G Mod H)\n\ngoal (1 subgoal):\n 1. carrier (G Mod H) \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}", "unfolding simple_group_def simple_group_axioms_def order_def"], ["proof (prove)\nusing this:\n  Group.group (G Mod H) \\<and>\n  1 < card (carrier (G Mod H)) \\<and>\n  (\\<forall>Ha.\n      Ha \\<lhd> G Mod H \\<longrightarrow>\n      Ha = carrier (G Mod H) \\<or> Ha = {\\<one>\\<^bsub>G Mod H\\<^esub>})\n\ngoal (1 subgoal):\n 1. carrier (G Mod H) \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}", "by auto"], ["proof (state)\nthis:\n  carrier (G Mod H) \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\n\ngoal (2 subgoals):\n 1. H \\<noteq> carrier G\n 2. \\<And>J.\n       \\<lbrakk>J \\<lhd> G; J \\<noteq> H; J \\<noteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<not> H \\<subseteq> J", "with finite fact_group_trivial_iff"], ["proof (chain)\npicking this:\n  finite (carrier G)\n  finite (carrier G) \\<Longrightarrow>\n  (carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}) = (H = carrier G)\n  carrier (G Mod H) \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}", "show \"H \\<noteq> carrier G\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n  finite (carrier G) \\<Longrightarrow>\n  (carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}) = (H = carrier G)\n  carrier (G Mod H) \\<noteq> {\\<one>\\<^bsub>G Mod H\\<^esub>}\n\ngoal (1 subgoal):\n 1. H \\<noteq> carrier G", "by auto"], ["proof (state)\nthis:\n  H \\<noteq> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>J.\n       \\<lbrakk>J \\<lhd> G; J \\<noteq> H; J \\<noteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<not> H \\<subseteq> J", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>J.\n       \\<lbrakk>J \\<lhd> G; J \\<noteq> H; J \\<noteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<not> H \\<subseteq> J", "fix A"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>J.\n       \\<lbrakk>J \\<lhd> G; J \\<noteq> H; J \\<noteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<not> H \\<subseteq> J", "assume A:\"A \\<lhd> G\" \"A \\<noteq> H\" \"A \\<noteq> carrier G\""], ["proof (state)\nthis:\n  A \\<lhd> G\n  A \\<noteq> H\n  A \\<noteq> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>J.\n       \\<lbrakk>J \\<lhd> G; J \\<noteq> H; J \\<noteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> \\<not> H \\<subseteq> J", "show \"\\<not> H \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> H \\<subseteq> A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. H \\<subseteq> A \\<Longrightarrow> False", "assume HA:\"H \\<subseteq> A\""], ["proof (state)\nthis:\n  H \\<subseteq> A\n\ngoal (1 subgoal):\n 1. H \\<subseteq> A \\<Longrightarrow> False", "hence \"H \\<lhd> (G\\<lparr>carrier := A\\<rparr>)\""], ["proof (prove)\nusing this:\n  H \\<subseteq> A\n\ngoal (1 subgoal):\n 1. H \\<lhd> G\\<lparr>carrier := A\\<rparr>", "by (metis A(1) inv_op_closed2 is_subgroup normal_inv_iff normal_restrict_supergroup)"], ["proof (state)\nthis:\n  H \\<lhd> G\\<lparr>carrier := A\\<rparr>\n\ngoal (1 subgoal):\n 1. H \\<subseteq> A \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  H \\<lhd> G\\<lparr>carrier := A\\<rparr>", "interpret normalHA: normal H \"(G\\<lparr>carrier := A\\<rparr>)\""], ["proof (prove)\nusing this:\n  H \\<lhd> G\\<lparr>carrier := A\\<rparr>\n\ngoal (1 subgoal):\n 1. H \\<lhd> G\\<lparr>carrier := A\\<rparr>", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. H \\<subseteq> A \\<Longrightarrow> False", "from finite"], ["proof (chain)\npicking this:\n  finite (carrier G)", "have finiteA:\"finite A\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. finite A", "using A(1) normal_imp_subgroup"], ["proof (prove)\nusing this:\n  finite (carrier G)\n  A \\<lhd> G\n  ?H \\<lhd> ?G \\<Longrightarrow> subgroup ?H ?G\n\ngoal (1 subgoal):\n 1. finite A", "by (metis subgroup_finite)"], ["proof (state)\nthis:\n  finite A\n\ngoal (1 subgoal):\n 1. H \\<subseteq> A \\<Longrightarrow> False", "have \"rcosets\\<^bsub>(G\\<lparr>carrier := A\\<rparr>)\\<^esub> H \\<lhd> G Mod H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H \\<lhd> G Mod H", "using normality_factorization is_normal HA A(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?N \\<lhd> G; ?N \\<subseteq> ?H; ?H \\<lhd> G\\<rbrakk>\n  \\<Longrightarrow> rcosets\\<^bsub>G\\<lparr>carrier := ?H\\<rparr>\\<^esub> ?N \\<lhd>\n                    G Mod ?N\n  H \\<lhd> G\n  H \\<subseteq> A\n  A \\<lhd> G\n\ngoal (1 subgoal):\n 1. rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H \\<lhd> G Mod H", "by auto"], ["proof (state)\nthis:\n  rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H \\<lhd> G Mod H\n\ngoal (1 subgoal):\n 1. H \\<subseteq> A \\<Longrightarrow> False", "with simple"], ["proof (chain)\npicking this:\n  simple_group (G Mod H)\n  rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H \\<lhd> G Mod H", "have \"rcosets\\<^bsub>(G\\<lparr>carrier := A\\<rparr>)\\<^esub> H = {\\<one>\\<^bsub>G Mod H\\<^esub>} \\<or> rcosets\\<^bsub>(G\\<lparr>carrier := A\\<rparr>)\\<^esub> H = carrier (G Mod H)\""], ["proof (prove)\nusing this:\n  simple_group (G Mod H)\n  rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H \\<lhd> G Mod H\n\ngoal (1 subgoal):\n 1. rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n    {\\<one>\\<^bsub>G Mod H\\<^esub>} \\<or>\n    rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n    carrier (G Mod H)", "unfolding simple_group_def simple_group_axioms_def"], ["proof (prove)\nusing this:\n  Group.group (G Mod H) \\<and>\n  1 < order (G Mod H) \\<and>\n  (\\<forall>Ha.\n      Ha \\<lhd> G Mod H \\<longrightarrow>\n      Ha = carrier (G Mod H) \\<or> Ha = {\\<one>\\<^bsub>G Mod H\\<^esub>})\n  rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H \\<lhd> G Mod H\n\ngoal (1 subgoal):\n 1. rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n    {\\<one>\\<^bsub>G Mod H\\<^esub>} \\<or>\n    rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n    carrier (G Mod H)", "by auto"], ["proof (state)\nthis:\n  rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n  {\\<one>\\<^bsub>G Mod H\\<^esub>} \\<or>\n  rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H = carrier (G Mod H)\n\ngoal (1 subgoal):\n 1. H \\<subseteq> A \\<Longrightarrow> False", "thus \"False\""], ["proof (prove)\nusing this:\n  rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n  {\\<one>\\<^bsub>G Mod H\\<^esub>} \\<or>\n  rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H = carrier (G Mod H)\n\ngoal (1 subgoal):\n 1. False", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n    {\\<one>\\<^bsub>G Mod H\\<^esub>} \\<Longrightarrow>\n    False\n 2. rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n    carrier (G Mod H) \\<Longrightarrow>\n    False", "assume \"rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H = {\\<one>\\<^bsub>G Mod H\\<^esub>}\""], ["proof (state)\nthis:\n  rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n  {\\<one>\\<^bsub>G Mod H\\<^esub>}\n\ngoal (2 subgoals):\n 1. rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n    {\\<one>\\<^bsub>G Mod H\\<^esub>} \\<Longrightarrow>\n    False\n 2. rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n    carrier (G Mod H) \\<Longrightarrow>\n    False", "hence \"rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H = {\\<one>\\<^bsub>(G\\<lparr>carrier := A\\<rparr>) Mod H\\<^esub>}\""], ["proof (prove)\nusing this:\n  rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n  {\\<one>\\<^bsub>G Mod H\\<^esub>}\n\ngoal (1 subgoal):\n 1. rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n    {\\<one>\\<^bsub>G\\<lparr>carrier := A\\<rparr> Mod H\\<^esub>}", "unfolding FactGroup_def"], ["proof (prove)\nusing this:\n  rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n  {\\<one>\\<^bsub>\\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>\\<^esub>}\n\ngoal (1 subgoal):\n 1. rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n    {\\<one>\\<^bsub>\\<lparr>carrier = rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H, monoid.mult = (<#>\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub>), one = H\\<rparr>\\<^esub>}", "by auto"], ["proof (state)\nthis:\n  rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n  {\\<one>\\<^bsub>G\\<lparr>carrier := A\\<rparr> Mod H\\<^esub>}\n\ngoal (2 subgoals):\n 1. rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n    {\\<one>\\<^bsub>G Mod H\\<^esub>} \\<Longrightarrow>\n    False\n 2. rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n    carrier (G Mod H) \\<Longrightarrow>\n    False", "with finiteA"], ["proof (chain)\npicking this:\n  finite A\n  rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n  {\\<one>\\<^bsub>G\\<lparr>carrier := A\\<rparr> Mod H\\<^esub>}", "have \"H = A\""], ["proof (prove)\nusing this:\n  finite A\n  rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n  {\\<one>\\<^bsub>G\\<lparr>carrier := A\\<rparr> Mod H\\<^esub>}\n\ngoal (1 subgoal):\n 1. H = A", "using normalHA.fact_group_trivial_iff"], ["proof (prove)\nusing this:\n  finite A\n  rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n  {\\<one>\\<^bsub>G\\<lparr>carrier := A\\<rparr> Mod H\\<^esub>}\n  finite (carrier (G\\<lparr>carrier := A\\<rparr>)) \\<Longrightarrow>\n  (carrier (G\\<lparr>carrier := A\\<rparr> Mod H) =\n   {\\<one>\\<^bsub>G\\<lparr>carrier := A\\<rparr> Mod H\\<^esub>}) =\n  (H = carrier (G\\<lparr>carrier := A\\<rparr>))\n\ngoal (1 subgoal):\n 1. H = A", "unfolding FactGroup_def"], ["proof (prove)\nusing this:\n  finite A\n  rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n  {\\<one>\\<^bsub>\\<lparr>carrier = rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H, monoid.mult = (<#>\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub>), one = H\\<rparr>\\<^esub>}\n  finite (carrier (G\\<lparr>carrier := A\\<rparr>)) \\<Longrightarrow>\n  (carrier\n    \\<lparr>carrier =\n              rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H,\n       monoid.mult = (<#>\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub>),\n       one = H\\<rparr> =\n   {\\<one>\\<^bsub>\\<lparr>carrier = rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H, monoid.mult = (<#>\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub>), one = H\\<rparr>\\<^esub>}) =\n  (H = carrier (G\\<lparr>carrier := A\\<rparr>))\n\ngoal (1 subgoal):\n 1. H = A", "by auto"], ["proof (state)\nthis:\n  H = A\n\ngoal (2 subgoals):\n 1. rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n    {\\<one>\\<^bsub>G Mod H\\<^esub>} \\<Longrightarrow>\n    False\n 2. rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n    carrier (G Mod H) \\<Longrightarrow>\n    False", "with A(2)"], ["proof (chain)\npicking this:\n  A \\<noteq> H\n  H = A", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<noteq> H\n  H = A\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n    carrier (G Mod H) \\<Longrightarrow>\n    False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n    carrier (G Mod H) \\<Longrightarrow>\n    False", "assume AHGH:\"rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H = carrier (G Mod H)\""], ["proof (state)\nthis:\n  rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H = carrier (G Mod H)\n\ngoal (1 subgoal):\n 1. rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n    carrier (G Mod H) \\<Longrightarrow>\n    False", "have \"A = carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = carrier G", "unfolding FactGroup_def RCOSETS_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A = carrier G", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. A \\<subseteq> carrier G\n 2. carrier G \\<subseteq> A", "show \"A \\<subseteq> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> carrier G", "using A(1) normal_imp_subgroup subgroup.subset"], ["proof (prove)\nusing this:\n  A \\<lhd> G\n  ?H \\<lhd> ?G \\<Longrightarrow> subgroup ?H ?G\n  subgroup ?H ?G \\<Longrightarrow> ?H \\<subseteq> carrier ?G\n\ngoal (1 subgoal):\n 1. A \\<subseteq> carrier G", "by metis"], ["proof (state)\nthis:\n  A \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. carrier G \\<subseteq> A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. carrier G \\<subseteq> A", "show \"carrier G \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier G \\<subseteq> A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier G \\<Longrightarrow> x \\<in> A", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier G \\<Longrightarrow> x \\<in> A", "assume x:\"x \\<in> carrier G\""], ["proof (state)\nthis:\n  x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier G \\<Longrightarrow> x \\<in> A", "hence \"H #> x \\<in> rcosets H\""], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. H #> x \\<in> rcosets H", "unfolding RCOSETS_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. H #> x \\<in> (\\<Union>a\\<in>carrier G. {H #> a})", "by auto"], ["proof (state)\nthis:\n  H #> x \\<in> rcosets H\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier G \\<Longrightarrow> x \\<in> A", "with AHGH"], ["proof (chain)\npicking this:\n  rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H = carrier (G Mod H)\n  H #> x \\<in> rcosets H", "have \"H #> x \\<in> rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H\""], ["proof (prove)\nusing this:\n  rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H = carrier (G Mod H)\n  H #> x \\<in> rcosets H\n\ngoal (1 subgoal):\n 1. H #> x \\<in> rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H", "unfolding FactGroup_def"], ["proof (prove)\nusing this:\n  rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n  carrier \\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>\n  H #> x \\<in> rcosets H\n\ngoal (1 subgoal):\n 1. H #> x \\<in> rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H", "by simp"], ["proof (state)\nthis:\n  H #> x \\<in> rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier G \\<Longrightarrow> x \\<in> A", "then"], ["proof (chain)\npicking this:\n  H #> x \\<in> rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H", "obtain x' where x':\"x' \\<in> A\" \"H #>x = H #>\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> x'\""], ["proof (prove)\nusing this:\n  H #> x \\<in> rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<in> A;\n         H #> x =\n         H #>\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> x'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding RCOSETS_def"], ["proof (prove)\nusing this:\n  H #> x\n  \\<in> (\\<Union>a\\<in>carrier (G\\<lparr>carrier := A\\<rparr>).\n            {H #>\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> a})\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<in> A;\n         H #> x =\n         H #>\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> x'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x' \\<in> A\n  H #> x = H #>\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> x'\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier G \\<Longrightarrow> x \\<in> A", "hence \"H #> x = H #> x'\""], ["proof (prove)\nusing this:\n  x' \\<in> A\n  H #> x = H #>\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> x'\n\ngoal (1 subgoal):\n 1. H #> x = H #> x'", "unfolding r_coset_def"], ["proof (prove)\nusing this:\n  x' \\<in> A\n  (\\<Union>h\\<in>H. {h \\<otimes> x}) =\n  (\\<Union>h\\<in>H.\n      {h \\<otimes>\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> x'})\n\ngoal (1 subgoal):\n 1. (\\<Union>h\\<in>H. {h \\<otimes> x}) = (\\<Union>h\\<in>H. {h \\<otimes> x'})", "by auto"], ["proof (state)\nthis:\n  H #> x = H #> x'\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier G \\<Longrightarrow> x \\<in> A", "hence \"x \\<in> H #> x'\""], ["proof (prove)\nusing this:\n  H #> x = H #> x'\n\ngoal (1 subgoal):\n 1. x \\<in> H #> x'", "by (metis is_subgroup rcos_self x)"], ["proof (state)\nthis:\n  x \\<in> H #> x'\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier G \\<Longrightarrow> x \\<in> A", "hence \"x \\<in> A #> x'\""], ["proof (prove)\nusing this:\n  x \\<in> H #> x'\n\ngoal (1 subgoal):\n 1. x \\<in> A #> x'", "using HA"], ["proof (prove)\nusing this:\n  x \\<in> H #> x'\n  H \\<subseteq> A\n\ngoal (1 subgoal):\n 1. x \\<in> A #> x'", "unfolding r_coset_def"], ["proof (prove)\nusing this:\n  x \\<in> (\\<Union>h\\<in>H. {h \\<otimes> x'})\n  H \\<subseteq> A\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<Union>h\\<in>A. {h \\<otimes> x'})", "by auto"], ["proof (state)\nthis:\n  x \\<in> A #> x'\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> carrier G \\<Longrightarrow> x \\<in> A", "thus \"x \\<in> A\""], ["proof (prove)\nusing this:\n  x \\<in> A #> x'\n\ngoal (1 subgoal):\n 1. x \\<in> A", "using x'(1)"], ["proof (prove)\nusing this:\n  x \\<in> A #> x'\n  x' \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> A", "unfolding r_coset_def"], ["proof (prove)\nusing this:\n  x \\<in> (\\<Union>h\\<in>A. {h \\<otimes> x'})\n  x' \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> A", "using subgroup.m_closed A(1) normal_imp_subgroup"], ["proof (prove)\nusing this:\n  x \\<in> (\\<Union>h\\<in>A. {h \\<otimes> x'})\n  x' \\<in> A\n  \\<lbrakk>subgroup ?H ?G; ?x \\<in> ?H; ?y \\<in> ?H\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes>\\<^bsub>?G\\<^esub> ?y \\<in> ?H\n  A \\<lhd> G\n  ?H \\<lhd> ?G \\<Longrightarrow> subgroup ?H ?G\n\ngoal (1 subgoal):\n 1. x \\<in> A", "by force"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  carrier G \\<subseteq> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A = carrier G\n\ngoal (1 subgoal):\n 1. rcosets\\<^bsub>G\\<lparr>carrier := A\\<rparr>\\<^esub> H =\n    carrier (G Mod H) \\<Longrightarrow>\n    False", "with A(3)"], ["proof (chain)\npicking this:\n  A \\<noteq> carrier G\n  A = carrier G", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<noteq> carrier G\n  A = carrier G\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> H \\<subseteq> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  max_normal_subgroup H G\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}