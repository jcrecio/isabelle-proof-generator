{"file_name": "/home/qj213/afp-2021-10-22/thys/Jordan_Hoelder/SndIsomorphismGrp.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Jordan_Hoelder", "problem_names": ["lemma (in group) triv_subgroup:\n  shows \"subgroup {\\<one>} G\"", "lemma (in group) triv_normal_subgroup:\n  shows \"{\\<one>} \\<lhd> G\"", "lemma (in group) normal_restrict_supergroup:\n  assumes SsubG:\"subgroup S G\"\n  assumes Nnormal:\"N \\<lhd> G\"\n  assumes \"N \\<subseteq> S\"\n  shows \"N \\<lhd> (G\\<lparr>carrier := S\\<rparr>)\"", "lemma (in group) trivial_factor_iso:\n  shows \"the_elem \\<in> iso (G Mod {\\<one>}) G\"", "lemma (in group) self_factor_iso:\n  shows \"(\\<lambda>X. the_elem ((\\<lambda>x. \\<one>) ` X)) \\<in> iso (G Mod (carrier G)) (G\\<lparr> carrier := {\\<one>} \\<rparr>)\"", "lemma normal_subgrp_intersection_normal:\n  shows \"S \\<inter> H \\<lhd> (G\\<lparr>carrier := S\\<rparr>)\"", "lemma normal_set_mult_subgroup:\n  shows \"subgroup (H <#> S) G\"", "lemma oneH:\"\\<one> \\<in> H\"", "lemma H_contained_in_set_mult:\n  shows \"H \\<subseteq> H <#> S\"", "lemma S_contained_in_set_mult:\n  shows \"S \\<subseteq> H <#> S\"", "lemma normal_intersection_hom:\n  shows \"group_hom (G\\<lparr>carrier := S\\<rparr>) ((G\\<lparr>carrier := H <#> S\\<rparr>) Mod H) (\\<lambda>g. H #> g)\"", "lemma normal_intersection_hom_kernel:\n  shows \"kernel (G\\<lparr>carrier := S\\<rparr>) ((G\\<lparr>carrier := H <#> S\\<rparr>) Mod H) (\\<lambda>g. H #> g) = H \\<inter> S\"", "lemma normal_intersection_hom_surj:\n  shows \"(\\<lambda>g. H #> g) ` carrier (G\\<lparr>carrier := S\\<rparr>) = carrier ((G\\<lparr>carrier := H <#> S\\<rparr>) Mod H)\"", "theorem normal_intersection_quotient_isom:\n  shows \"(\\<lambda>X. the_elem ((\\<lambda>g. H #> g) ` X)) \\<in> iso ((G\\<lparr>carrier := S\\<rparr>) Mod (H \\<inter> S)) (((G\\<lparr>carrier := H <#> S\\<rparr>)) Mod H)\""], "translations": [["", "lemma (in group) triv_subgroup:\n  shows \"subgroup {\\<one>} G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup {\\<one>} G", "unfolding subgroup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ({\\<one>} \\<subseteq> carrier G \\<and>\n     (\\<forall>x y.\n         x \\<in> {\\<one>} \\<longrightarrow>\n         y \\<in> {\\<one>} \\<longrightarrow>\n         x \\<otimes> y \\<in> {\\<one>})) \\<and>\n    \\<one> \\<in> {\\<one>} \\<and>\n    (\\<forall>x. x \\<in> {\\<one>} \\<longrightarrow> inv x \\<in> {\\<one>})", "by auto"], ["", "lemma (in group) triv_normal_subgroup:\n  shows \"{\\<one>} \\<lhd> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<one>} \\<lhd> G", "unfolding normal_def normal_axioms_def l_coset_def r_coset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup {\\<one>} G \\<and>\n    Group.group G \\<and>\n    (\\<forall>x\\<in>carrier G.\n        (\\<Union>h\\<in>{\\<one>}. {h \\<otimes> x}) =\n        (\\<Union>h\\<in>{\\<one>}. {x \\<otimes> h}))", "using is_group triv_subgroup"], ["proof (prove)\nusing this:\n  Group.group G\n  subgroup {\\<one>} G\n\ngoal (1 subgoal):\n 1. subgroup {\\<one>} G \\<and>\n    Group.group G \\<and>\n    (\\<forall>x\\<in>carrier G.\n        (\\<Union>h\\<in>{\\<one>}. {h \\<otimes> x}) =\n        (\\<Union>h\\<in>{\\<one>}. {x \\<otimes> h}))", "by auto"], ["", "lemma (in group) normal_restrict_supergroup:\n  assumes SsubG:\"subgroup S G\"\n  assumes Nnormal:\"N \\<lhd> G\"\n  assumes \"N \\<subseteq> S\"\n  shows \"N \\<lhd> (G\\<lparr>carrier := S\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<lhd> G\\<lparr>carrier := S\\<rparr>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. N \\<lhd> G\\<lparr>carrier := S\\<rparr>", "interpret Sgrp: group \"G\\<lparr>carrier := S\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (G\\<lparr>carrier := S\\<rparr>)", "using SsubG"], ["proof (prove)\nusing this:\n  subgroup S G\n\ngoal (1 subgoal):\n 1. Group.group (G\\<lparr>carrier := S\\<rparr>)", "by (rule subgroup_imp_group)"], ["proof (state)\ngoal (1 subgoal):\n 1. N \\<lhd> G\\<lparr>carrier := S\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<lhd> G\\<lparr>carrier := S\\<rparr>", "proof(rule Sgrp.normalI)"], ["proof (state)\ngoal (2 subgoals):\n 1. subgroup N (G\\<lparr>carrier := S\\<rparr>)\n 2. \\<forall>x\\<in>carrier (G\\<lparr>carrier := S\\<rparr>).\n       N #>\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x =\n       x <#\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> N", "show \"subgroup N (G\\<lparr>carrier := S\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup N (G\\<lparr>carrier := S\\<rparr>)", "using assms is_group"], ["proof (prove)\nusing this:\n  subgroup S G\n  N \\<lhd> G\n  N \\<subseteq> S\n  Group.group G\n\ngoal (1 subgoal):\n 1. subgroup N (G\\<lparr>carrier := S\\<rparr>)", "by (metis subgroup.subgroup_of_subset normal_inv_iff)"], ["proof (state)\nthis:\n  subgroup N (G\\<lparr>carrier := S\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>carrier (G\\<lparr>carrier := S\\<rparr>).\n       N #>\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x =\n       x <#\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> N", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>carrier (G\\<lparr>carrier := S\\<rparr>).\n       N #>\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x =\n       x <#\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> N", "from SsubG"], ["proof (chain)\npicking this:\n  subgroup S G", "have \"S \\<subseteq> carrier G\""], ["proof (prove)\nusing this:\n  subgroup S G\n\ngoal (1 subgoal):\n 1. S \\<subseteq> carrier G", "by (rule subgroup.subset)"], ["proof (state)\nthis:\n  S \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>carrier (G\\<lparr>carrier := S\\<rparr>).\n       N #>\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x =\n       x <#\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> N", "thus \"\\<forall>x\\<in>carrier (G\\<lparr>carrier := S\\<rparr>). N #>\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x = x <#\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> N\""], ["proof (prove)\nusing this:\n  S \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>carrier (G\\<lparr>carrier := S\\<rparr>).\n       N #>\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x =\n       x <#\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> N", "using Nnormal"], ["proof (prove)\nusing this:\n  S \\<subseteq> carrier G\n  N \\<lhd> G\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>carrier (G\\<lparr>carrier := S\\<rparr>).\n       N #>\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x =\n       x <#\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> N", "unfolding normal_def normal_axioms_def l_coset_def r_coset_def"], ["proof (prove)\nusing this:\n  S \\<subseteq> carrier G\n  subgroup N G \\<and>\n  Group.group G \\<and>\n  (\\<forall>x\\<in>carrier G.\n      (\\<Union>h\\<in>N. {h \\<otimes> x}) =\n      (\\<Union>h\\<in>N. {x \\<otimes> h}))\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>carrier (G\\<lparr>carrier := S\\<rparr>).\n       (\\<Union>h\\<in>N.\n           {h \\<otimes>\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x}) =\n       (\\<Union>h\\<in>N.\n           {x \\<otimes>\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> h})", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>x\\<in>carrier (G\\<lparr>carrier := S\\<rparr>).\n     N #>\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x =\n     x <#\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  N \\<lhd> G\\<lparr>carrier := S\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>As this is maybe the best place this fits in: Factorizing by the trivial subgroup\nis an isomorphism.\\<close>"], ["", "lemma (in group) trivial_factor_iso:\n  shows \"the_elem \\<in> iso (G Mod {\\<one>}) G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the_elem \\<in> Group.iso (G Mod {\\<one>}) G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. the_elem \\<in> Group.iso (G Mod {\\<one>}) G", "have \"group_hom G G (\\<lambda>x. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. group_hom G G (\\<lambda>x. x)", "unfolding group_hom_def group_hom_axioms_def hom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group G \\<and>\n    Group.group G \\<and>\n    (\\<lambda>x. x)\n    \\<in> {h \\<in> carrier G \\<rightarrow> carrier G.\n           \\<forall>x\\<in>carrier G.\n              \\<forall>y\\<in>carrier G.\n                 h (x \\<otimes> y) = h x \\<otimes> h y}", "using is_group"], ["proof (prove)\nusing this:\n  Group.group G\n\ngoal (1 subgoal):\n 1. Group.group G \\<and>\n    Group.group G \\<and>\n    (\\<lambda>x. x)\n    \\<in> {h \\<in> carrier G \\<rightarrow> carrier G.\n           \\<forall>x\\<in>carrier G.\n              \\<forall>y\\<in>carrier G.\n                 h (x \\<otimes> y) = h x \\<otimes> h y}", "by simp"], ["proof (state)\nthis:\n  group_hom G G (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. the_elem \\<in> Group.iso (G Mod {\\<one>}) G", "moreover"], ["proof (state)\nthis:\n  group_hom G G (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. the_elem \\<in> Group.iso (G Mod {\\<one>}) G", "have \"(\\<lambda>x. x) ` carrier G = carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x) ` carrier G = carrier G", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. x) ` carrier G = carrier G\n\ngoal (1 subgoal):\n 1. the_elem \\<in> Group.iso (G Mod {\\<one>}) G", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>x. x) ` carrier G = carrier G\n\ngoal (1 subgoal):\n 1. the_elem \\<in> Group.iso (G Mod {\\<one>}) G", "have \"kernel G G (\\<lambda>x. x) = {\\<one>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. kernel G G (\\<lambda>x. x) = {\\<one>}", "unfolding kernel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> carrier G. x = \\<one>} = {\\<one>}", "by auto"], ["proof (state)\nthis:\n  kernel G G (\\<lambda>x. x) = {\\<one>}\n\ngoal (1 subgoal):\n 1. the_elem \\<in> Group.iso (G Mod {\\<one>}) G", "ultimately"], ["proof (chain)\npicking this:\n  group_hom G G (\\<lambda>x. x)\n  (\\<lambda>x. x) ` carrier G = carrier G\n  kernel G G (\\<lambda>x. x) = {\\<one>}", "show ?thesis"], ["proof (prove)\nusing this:\n  group_hom G G (\\<lambda>x. x)\n  (\\<lambda>x. x) ` carrier G = carrier G\n  kernel G G (\\<lambda>x. x) = {\\<one>}\n\ngoal (1 subgoal):\n 1. the_elem \\<in> Group.iso (G Mod {\\<one>}) G", "using group_hom.FactGroup_iso_set"], ["proof (prove)\nusing this:\n  group_hom G G (\\<lambda>x. x)\n  (\\<lambda>x. x) ` carrier G = carrier G\n  kernel G G (\\<lambda>x. x) = {\\<one>}\n  \\<lbrakk>group_hom ?G ?H ?h; ?h ` carrier ?G = carrier ?H\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>X. the_elem (?h ` X))\n                    \\<in> Group.iso (?G Mod kernel ?G ?H ?h) ?H\n\ngoal (1 subgoal):\n 1. the_elem \\<in> Group.iso (G Mod {\\<one>}) G", "by force"], ["proof (state)\nthis:\n  the_elem \\<in> Group.iso (G Mod {\\<one>}) G\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>And the dual theorem to the previous one: Factorizing by the group itself gives the trivial group\\<close>"], ["", "lemma (in group) self_factor_iso:\n  shows \"(\\<lambda>X. the_elem ((\\<lambda>x. \\<one>) ` X)) \\<in> iso (G Mod (carrier G)) (G\\<lparr> carrier := {\\<one>} \\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>X. the_elem ((\\<lambda>x. \\<one>) ` X))\n    \\<in> Group.iso (G Mod carrier G) (G\\<lparr>carrier := {\\<one>}\\<rparr>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>X. the_elem ((\\<lambda>x. \\<one>) ` X))\n    \\<in> Group.iso (G Mod carrier G) (G\\<lparr>carrier := {\\<one>}\\<rparr>)", "have \"group (G\\<lparr>carrier := {\\<one>}\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (G\\<lparr>carrier := {\\<one>}\\<rparr>)", "by (metis subgroup_imp_group triv_subgroup)"], ["proof (state)\nthis:\n  Group.group (G\\<lparr>carrier := {\\<one>}\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<lambda>X. the_elem ((\\<lambda>x. \\<one>) ` X))\n    \\<in> Group.iso (G Mod carrier G) (G\\<lparr>carrier := {\\<one>}\\<rparr>)", "hence \"group_hom G (G\\<lparr>carrier := {\\<one>}\\<rparr>) (\\<lambda>x. \\<one>)\""], ["proof (prove)\nusing this:\n  Group.group (G\\<lparr>carrier := {\\<one>}\\<rparr>)\n\ngoal (1 subgoal):\n 1. group_hom G (G\\<lparr>carrier := {\\<one>}\\<rparr>) (\\<lambda>x. \\<one>)", "unfolding group_hom_def group_hom_axioms_def hom_def"], ["proof (prove)\nusing this:\n  Group.group (G\\<lparr>carrier := {\\<one>}\\<rparr>)\n\ngoal (1 subgoal):\n 1. Group.group G \\<and>\n    Group.group (G\\<lparr>carrier := {\\<one>}\\<rparr>) \\<and>\n    (\\<lambda>x. \\<one>)\n    \\<in> {h \\<in> carrier G \\<rightarrow>\n                   carrier (G\\<lparr>carrier := {\\<one>}\\<rparr>).\n           \\<forall>x\\<in>carrier G.\n              \\<forall>y\\<in>carrier G.\n                 h (x \\<otimes> y) =\n                 h x \\<otimes>\\<^bsub>G\\<lparr>carrier := {\\<one>}\\<rparr>\\<^esub>\n                 h y}", "using is_group"], ["proof (prove)\nusing this:\n  Group.group (G\\<lparr>carrier := {\\<one>}\\<rparr>)\n  Group.group G\n\ngoal (1 subgoal):\n 1. Group.group G \\<and>\n    Group.group (G\\<lparr>carrier := {\\<one>}\\<rparr>) \\<and>\n    (\\<lambda>x. \\<one>)\n    \\<in> {h \\<in> carrier G \\<rightarrow>\n                   carrier (G\\<lparr>carrier := {\\<one>}\\<rparr>).\n           \\<forall>x\\<in>carrier G.\n              \\<forall>y\\<in>carrier G.\n                 h (x \\<otimes> y) =\n                 h x \\<otimes>\\<^bsub>G\\<lparr>carrier := {\\<one>}\\<rparr>\\<^esub>\n                 h y}", "by auto"], ["proof (state)\nthis:\n  group_hom G (G\\<lparr>carrier := {\\<one>}\\<rparr>) (\\<lambda>x. \\<one>)\n\ngoal (1 subgoal):\n 1. (\\<lambda>X. the_elem ((\\<lambda>x. \\<one>) ` X))\n    \\<in> Group.iso (G Mod carrier G) (G\\<lparr>carrier := {\\<one>}\\<rparr>)", "moreover"], ["proof (state)\nthis:\n  group_hom G (G\\<lparr>carrier := {\\<one>}\\<rparr>) (\\<lambda>x. \\<one>)\n\ngoal (1 subgoal):\n 1. (\\<lambda>X. the_elem ((\\<lambda>x. \\<one>) ` X))\n    \\<in> Group.iso (G Mod carrier G) (G\\<lparr>carrier := {\\<one>}\\<rparr>)", "have \"(\\<lambda>x. \\<one>) ` carrier G = carrier (G\\<lparr>carrier := {\\<one>}\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<one>) ` carrier G =\n    carrier (G\\<lparr>carrier := {\\<one>}\\<rparr>)", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<one>) ` carrier G =\n  carrier (G\\<lparr>carrier := {\\<one>}\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<lambda>X. the_elem ((\\<lambda>x. \\<one>) ` X))\n    \\<in> Group.iso (G Mod carrier G) (G\\<lparr>carrier := {\\<one>}\\<rparr>)", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<one>) ` carrier G =\n  carrier (G\\<lparr>carrier := {\\<one>}\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<lambda>X. the_elem ((\\<lambda>x. \\<one>) ` X))\n    \\<in> Group.iso (G Mod carrier G) (G\\<lparr>carrier := {\\<one>}\\<rparr>)", "have \"kernel G (G\\<lparr>carrier := {\\<one>}\\<rparr>) (\\<lambda>x. \\<one>) = carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. kernel G (G\\<lparr>carrier := {\\<one>}\\<rparr>) (\\<lambda>x. \\<one>) =\n    carrier G", "unfolding kernel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> carrier G.\n     \\<one> = \\<one>\\<^bsub>G\\<lparr>carrier := {\\<one>}\\<rparr>\\<^esub>} =\n    carrier G", "by auto"], ["proof (state)\nthis:\n  kernel G (G\\<lparr>carrier := {\\<one>}\\<rparr>) (\\<lambda>x. \\<one>) =\n  carrier G\n\ngoal (1 subgoal):\n 1. (\\<lambda>X. the_elem ((\\<lambda>x. \\<one>) ` X))\n    \\<in> Group.iso (G Mod carrier G) (G\\<lparr>carrier := {\\<one>}\\<rparr>)", "ultimately"], ["proof (chain)\npicking this:\n  group_hom G (G\\<lparr>carrier := {\\<one>}\\<rparr>) (\\<lambda>x. \\<one>)\n  (\\<lambda>x. \\<one>) ` carrier G =\n  carrier (G\\<lparr>carrier := {\\<one>}\\<rparr>)\n  kernel G (G\\<lparr>carrier := {\\<one>}\\<rparr>) (\\<lambda>x. \\<one>) =\n  carrier G", "show ?thesis"], ["proof (prove)\nusing this:\n  group_hom G (G\\<lparr>carrier := {\\<one>}\\<rparr>) (\\<lambda>x. \\<one>)\n  (\\<lambda>x. \\<one>) ` carrier G =\n  carrier (G\\<lparr>carrier := {\\<one>}\\<rparr>)\n  kernel G (G\\<lparr>carrier := {\\<one>}\\<rparr>) (\\<lambda>x. \\<one>) =\n  carrier G\n\ngoal (1 subgoal):\n 1. (\\<lambda>X. the_elem ((\\<lambda>x. \\<one>) ` X))\n    \\<in> Group.iso (G Mod carrier G) (G\\<lparr>carrier := {\\<one>}\\<rparr>)", "using group_hom.FactGroup_iso_set"], ["proof (prove)\nusing this:\n  group_hom G (G\\<lparr>carrier := {\\<one>}\\<rparr>) (\\<lambda>x. \\<one>)\n  (\\<lambda>x. \\<one>) ` carrier G =\n  carrier (G\\<lparr>carrier := {\\<one>}\\<rparr>)\n  kernel G (G\\<lparr>carrier := {\\<one>}\\<rparr>) (\\<lambda>x. \\<one>) =\n  carrier G\n  \\<lbrakk>group_hom ?G ?H ?h; ?h ` carrier ?G = carrier ?H\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>X. the_elem (?h ` X))\n                    \\<in> Group.iso (?G Mod kernel ?G ?H ?h) ?H\n\ngoal (1 subgoal):\n 1. (\\<lambda>X. the_elem ((\\<lambda>x. \\<one>) ` X))\n    \\<in> Group.iso (G Mod carrier G) (G\\<lparr>carrier := {\\<one>}\\<rparr>)", "by force"], ["proof (state)\nthis:\n  (\\<lambda>X. the_elem ((\\<lambda>x. \\<one>) ` X))\n  \\<in> Group.iso (G Mod carrier G) (G\\<lparr>carrier := {\\<one>}\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>This theory provides a proof of the second isomorphism theorems for groups. \nThe theorems consist of several facts about normal subgroups.\\<close>"], ["", "text \\<open>The first lemma states that whenever we have a subgroup @{term S} and\na normal subgroup @{term H} of a group @{term G}, their intersection is normal\nin @{term G}\\<close>"], ["", "locale second_isomorphism_grp = normal +\n  fixes S::\"'a set\"\n  assumes subgrpS:\"subgroup S G\""], ["", "context second_isomorphism_grp\nbegin"], ["", "interpretation groupS: group \"G\\<lparr>carrier := S\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (G\\<lparr>carrier := S\\<rparr>)", "using subgrpS"], ["proof (prove)\nusing this:\n  subgroup S G\n\ngoal (1 subgoal):\n 1. Group.group (G\\<lparr>carrier := S\\<rparr>)", "by (metis subgroup_imp_group)"], ["", "lemma normal_subgrp_intersection_normal:\n  shows \"S \\<inter> H \\<lhd> (G\\<lparr>carrier := S\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<inter> H \\<lhd> G\\<lparr>carrier := S\\<rparr>", "proof(auto simp: groupS.normal_inv_iff)"], ["proof (state)\ngoal (3 subgoals):\n 1. subgroup (S \\<inter> H) (G\\<lparr>carrier := S\\<rparr>)\n 2. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> S\n 3. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> H", "from subgrpS is_subgroup"], ["proof (chain)\npicking this:\n  subgroup S G\n  subgroup H G", "have \"\\<And>x. x \\<in> {S, H} \\<Longrightarrow> subgroup x G\""], ["proof (prove)\nusing this:\n  subgroup S G\n  subgroup H G\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> {S, H} \\<Longrightarrow> subgroup x G", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> {S, H} \\<Longrightarrow> subgroup ?x G\n\ngoal (3 subgoals):\n 1. subgroup (S \\<inter> H) (G\\<lparr>carrier := S\\<rparr>)\n 2. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> S\n 3. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> H", "hence \"subgroup (\\<Inter> {S, H}) G\""], ["proof (prove)\nusing this:\n  ?x \\<in> {S, H} \\<Longrightarrow> subgroup ?x G\n\ngoal (1 subgoal):\n 1. subgroup (\\<Inter> {S, H}) G", "using subgroups_Inter"], ["proof (prove)\nusing this:\n  ?x \\<in> {S, H} \\<Longrightarrow> subgroup ?x G\n  \\<lbrakk>\\<And>H. H \\<in> ?A \\<Longrightarrow> subgroup H G;\n   ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> subgroup (\\<Inter> ?A) G\n\ngoal (1 subgoal):\n 1. subgroup (\\<Inter> {S, H}) G", "by blast"], ["proof (state)\nthis:\n  subgroup (\\<Inter> {S, H}) G\n\ngoal (3 subgoals):\n 1. subgroup (S \\<inter> H) (G\\<lparr>carrier := S\\<rparr>)\n 2. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> S\n 3. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> H", "hence \"subgroup (S \\<inter> H) G\""], ["proof (prove)\nusing this:\n  subgroup (\\<Inter> {S, H}) G\n\ngoal (1 subgoal):\n 1. subgroup (S \\<inter> H) G", "by auto"], ["proof (state)\nthis:\n  subgroup (S \\<inter> H) G\n\ngoal (3 subgoals):\n 1. subgroup (S \\<inter> H) (G\\<lparr>carrier := S\\<rparr>)\n 2. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> S\n 3. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> H", "moreover"], ["proof (state)\nthis:\n  subgroup (S \\<inter> H) G\n\ngoal (3 subgoals):\n 1. subgroup (S \\<inter> H) (G\\<lparr>carrier := S\\<rparr>)\n 2. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> S\n 3. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> H", "have \"S \\<inter> H \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<inter> H \\<subseteq> S", "by simp"], ["proof (state)\nthis:\n  S \\<inter> H \\<subseteq> S\n\ngoal (3 subgoals):\n 1. subgroup (S \\<inter> H) (G\\<lparr>carrier := S\\<rparr>)\n 2. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> S\n 3. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> H", "ultimately"], ["proof (chain)\npicking this:\n  subgroup (S \\<inter> H) G\n  S \\<inter> H \\<subseteq> S", "show \"subgroup (S \\<inter> H) (G\\<lparr>carrier := S\\<rparr>)\""], ["proof (prove)\nusing this:\n  subgroup (S \\<inter> H) G\n  S \\<inter> H \\<subseteq> S\n\ngoal (1 subgoal):\n 1. subgroup (S \\<inter> H) (G\\<lparr>carrier := S\\<rparr>)", "using is_group subgroup.subgroup_of_subset subgrpS"], ["proof (prove)\nusing this:\n  subgroup (S \\<inter> H) G\n  S \\<inter> H \\<subseteq> S\n  Group.group G\n  \\<lbrakk>subgroup ?H ?G; Group.group ?G; ?H \\<subseteq> ?K;\n   subgroup ?K ?G\\<rbrakk>\n  \\<Longrightarrow> subgroup ?H (?G\\<lparr>carrier := ?K\\<rparr>)\n  subgroup S G\n\ngoal (1 subgoal):\n 1. subgroup (S \\<inter> H) (G\\<lparr>carrier := S\\<rparr>)", "by metis"], ["proof (state)\nthis:\n  subgroup (S \\<inter> H) (G\\<lparr>carrier := S\\<rparr>)\n\ngoal (2 subgoals):\n 1. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> S\n 2. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> H", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> S\n 2. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> H", "fix g h"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> S\n 2. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> H", "assume g:\"g \\<in> S\" and hH:\"h \\<in> H\" and hS:\"h \\<in> S\""], ["proof (state)\nthis:\n  g \\<in> S\n  h \\<in> H\n  h \\<in> S\n\ngoal (2 subgoals):\n 1. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> S\n 2. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> H", "{"], ["proof (state)\nthis:\n  g \\<in> S\n  h \\<in> H\n  h \\<in> S\n\ngoal (2 subgoals):\n 1. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> S\n 2. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> H", "from g hH subgrpS"], ["proof (chain)\npicking this:\n  g \\<in> S\n  h \\<in> H\n  subgroup S G", "show \"g \\<otimes> h \\<otimes> inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> g \\<in> H\""], ["proof (prove)\nusing this:\n  g \\<in> S\n  h \\<in> H\n  subgroup S G\n\ngoal (1 subgoal):\n 1. g \\<otimes> h \\<otimes>\n    inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> g\n    \\<in> H", "by (metis inv_op_closed2 subgroup.mem_carrier m_inv_consistent)"], ["proof (state)\nthis:\n  g \\<otimes> h \\<otimes> inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> g\n  \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> S", "}"], ["proof (state)\nthis:\n  g \\<otimes> h \\<otimes> inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> g\n  \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> S", "{"], ["proof (state)\nthis:\n  g \\<otimes> h \\<otimes> inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> g\n  \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x h.\n       \\<lbrakk>x \\<in> S; h \\<in> S; h \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> h \\<otimes>\n                         inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> x\n                         \\<in> S", "from g hS subgrpS"], ["proof (chain)\npicking this:\n  g \\<in> S\n  h \\<in> S\n  subgroup S G", "show \"g \\<otimes> h \\<otimes> inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> g \\<in> S\""], ["proof (prove)\nusing this:\n  g \\<in> S\n  h \\<in> S\n  subgroup S G\n\ngoal (1 subgoal):\n 1. g \\<otimes> h \\<otimes>\n    inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> g\n    \\<in> S", "by (metis subgroup.m_closed subgroup.m_inv_closed m_inv_consistent)"], ["proof (state)\nthis:\n  g \\<otimes> h \\<otimes> inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> g\n  \\<in> S\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  g \\<otimes> h \\<otimes> inv\\<^bsub>G\\<lparr>carrier := S\\<rparr>\\<^esub> g\n  \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma normal_set_mult_subgroup:\n  shows \"subgroup (H <#> S) G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (H <#> S) G", "proof(rule subgroupI)"], ["proof (state)\ngoal (4 subgoals):\n 1. H <#> S \\<subseteq> carrier G\n 2. H <#> S \\<noteq> {}\n 3. \\<And>a. a \\<in> H <#> S \\<Longrightarrow> inv a \\<in> H <#> S\n 4. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "show \"H <#> S \\<subseteq> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H <#> S \\<subseteq> carrier G", "by (metis setmult_subset_G subgroup.subset subgrpS subset)"], ["proof (state)\nthis:\n  H <#> S \\<subseteq> carrier G\n\ngoal (3 subgoals):\n 1. H <#> S \\<noteq> {}\n 2. \\<And>a. a \\<in> H <#> S \\<Longrightarrow> inv a \\<in> H <#> S\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. H <#> S \\<noteq> {}\n 2. \\<And>a. a \\<in> H <#> S \\<Longrightarrow> inv a \\<in> H <#> S\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "have \"\\<one> \\<in> H\" \"\\<one> \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one> \\<in> H &&& \\<one> \\<in> S", "using is_subgroup subgrpS subgroup.one_closed"], ["proof (prove)\nusing this:\n  subgroup H G\n  subgroup S G\n  subgroup ?H ?G \\<Longrightarrow> \\<one>\\<^bsub>?G\\<^esub> \\<in> ?H\n\ngoal (1 subgoal):\n 1. \\<one> \\<in> H &&& \\<one> \\<in> S", "by auto"], ["proof (state)\nthis:\n  \\<one> \\<in> H\n  \\<one> \\<in> S\n\ngoal (3 subgoals):\n 1. H <#> S \\<noteq> {}\n 2. \\<And>a. a \\<in> H <#> S \\<Longrightarrow> inv a \\<in> H <#> S\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "hence \"\\<one> \\<otimes> \\<one> \\<in> H <#> S\""], ["proof (prove)\nusing this:\n  \\<one> \\<in> H\n  \\<one> \\<in> S\n\ngoal (1 subgoal):\n 1. \\<one> \\<otimes> \\<one> \\<in> H <#> S", "unfolding set_mult_def"], ["proof (prove)\nusing this:\n  \\<one> \\<in> H\n  \\<one> \\<in> S\n\ngoal (1 subgoal):\n 1. \\<one> \\<otimes> \\<one>\n    \\<in> (\\<Union>h\\<in>H. \\<Union>k\\<in>S. {h \\<otimes> k})", "by blast"], ["proof (state)\nthis:\n  \\<one> \\<otimes> \\<one> \\<in> H <#> S\n\ngoal (3 subgoals):\n 1. H <#> S \\<noteq> {}\n 2. \\<And>a. a \\<in> H <#> S \\<Longrightarrow> inv a \\<in> H <#> S\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "thus \"H <#> S \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<one> \\<otimes> \\<one> \\<in> H <#> S\n\ngoal (1 subgoal):\n 1. H <#> S \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  H <#> S \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> H <#> S \\<Longrightarrow> inv a \\<in> H <#> S\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> H <#> S \\<Longrightarrow> inv a \\<in> H <#> S\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "fix g"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> H <#> S \\<Longrightarrow> inv a \\<in> H <#> S\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "assume g:\"g \\<in> H <#> S\""], ["proof (state)\nthis:\n  g \\<in> H <#> S\n\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> H <#> S \\<Longrightarrow> inv a \\<in> H <#> S\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "then"], ["proof (chain)\npicking this:\n  g \\<in> H <#> S", "obtain h s where h:\"h \\<in> H\" and s:\"s \\<in> S\" and ghs:\"g = h \\<otimes> s\""], ["proof (prove)\nusing this:\n  g \\<in> H <#> S\n\ngoal (1 subgoal):\n 1. (\\<And>h s.\n        \\<lbrakk>h \\<in> H; s \\<in> S; g = h \\<otimes> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding set_mult_def"], ["proof (prove)\nusing this:\n  g \\<in> (\\<Union>h\\<in>H. \\<Union>k\\<in>S. {h \\<otimes> k})\n\ngoal (1 subgoal):\n 1. (\\<And>h s.\n        \\<lbrakk>h \\<in> H; s \\<in> S; g = h \\<otimes> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  h \\<in> H\n  s \\<in> S\n  g = h \\<otimes> s\n\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> H <#> S \\<Longrightarrow> inv a \\<in> H <#> S\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "hence \"s \\<in> carrier G\""], ["proof (prove)\nusing this:\n  h \\<in> H\n  s \\<in> S\n  g = h \\<otimes> s\n\ngoal (1 subgoal):\n 1. s \\<in> carrier G", "by (metis subgroup.mem_carrier subgrpS)"], ["proof (state)\nthis:\n  s \\<in> carrier G\n\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> H <#> S \\<Longrightarrow> inv a \\<in> H <#> S\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "with h ghs"], ["proof (chain)\npicking this:\n  h \\<in> H\n  g = h \\<otimes> s\n  s \\<in> carrier G", "obtain h' where h':\"h' \\<in> H\" and \"g = s \\<otimes> h'\""], ["proof (prove)\nusing this:\n  h \\<in> H\n  g = h \\<otimes> s\n  s \\<in> carrier G\n\ngoal (1 subgoal):\n 1. (\\<And>h'.\n        \\<lbrakk>h' \\<in> H; g = s \\<otimes> h'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using coset_eq"], ["proof (prove)\nusing this:\n  h \\<in> H\n  g = h \\<otimes> s\n  s \\<in> carrier G\n  \\<forall>x\\<in>carrier G. H #> x = x <# H\n\ngoal (1 subgoal):\n 1. (\\<And>h'.\n        \\<lbrakk>h' \\<in> H; g = s \\<otimes> h'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding r_coset_def l_coset_def"], ["proof (prove)\nusing this:\n  h \\<in> H\n  g = h \\<otimes> s\n  s \\<in> carrier G\n  \\<forall>x\\<in>carrier G.\n     (\\<Union>h\\<in>H. {h \\<otimes> x}) = (\\<Union>h\\<in>H. {x \\<otimes> h})\n\ngoal (1 subgoal):\n 1. (\\<And>h'.\n        \\<lbrakk>h' \\<in> H; g = s \\<otimes> h'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  h' \\<in> H\n  g = s \\<otimes> h'\n\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> H <#> S \\<Longrightarrow> inv a \\<in> H <#> S\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "with s"], ["proof (chain)\npicking this:\n  s \\<in> S\n  h' \\<in> H\n  g = s \\<otimes> h'", "have \"inv g = (inv h') \\<otimes> (inv s)\""], ["proof (prove)\nusing this:\n  s \\<in> S\n  h' \\<in> H\n  g = s \\<otimes> h'\n\ngoal (1 subgoal):\n 1. inv g = inv h' \\<otimes> inv s", "by (metis inv_mult_group mem_carrier subgroup.mem_carrier subgrpS)"], ["proof (state)\nthis:\n  inv g = inv h' \\<otimes> inv s\n\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> H <#> S \\<Longrightarrow> inv a \\<in> H <#> S\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "moreover"], ["proof (state)\nthis:\n  inv g = inv h' \\<otimes> inv s\n\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> H <#> S \\<Longrightarrow> inv a \\<in> H <#> S\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "from h' s subgrpS"], ["proof (chain)\npicking this:\n  h' \\<in> H\n  s \\<in> S\n  subgroup S G", "have \"inv h' \\<in> H\" \"inv s \\<in> S\""], ["proof (prove)\nusing this:\n  h' \\<in> H\n  s \\<in> S\n  subgroup S G\n\ngoal (1 subgoal):\n 1. inv h' \\<in> H &&& inv s \\<in> S", "using subgroup.m_inv_closed m_inv_closed"], ["proof (prove)\nusing this:\n  h' \\<in> H\n  s \\<in> S\n  subgroup S G\n  \\<lbrakk>subgroup ?H ?G; ?x \\<in> ?H\\<rbrakk>\n  \\<Longrightarrow> inv\\<^bsub>?G\\<^esub> ?x \\<in> ?H\n  ?x \\<in> H \\<Longrightarrow> inv ?x \\<in> H\n\ngoal (1 subgoal):\n 1. inv h' \\<in> H &&& inv s \\<in> S", "by auto"], ["proof (state)\nthis:\n  inv h' \\<in> H\n  inv s \\<in> S\n\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> H <#> S \\<Longrightarrow> inv a \\<in> H <#> S\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "ultimately"], ["proof (chain)\npicking this:\n  inv g = inv h' \\<otimes> inv s\n  inv h' \\<in> H\n  inv s \\<in> S", "show \"inv g \\<in> H <#> S\""], ["proof (prove)\nusing this:\n  inv g = inv h' \\<otimes> inv s\n  inv h' \\<in> H\n  inv s \\<in> S\n\ngoal (1 subgoal):\n 1. inv g \\<in> H <#> S", "unfolding set_mult_def"], ["proof (prove)\nusing this:\n  inv g = inv h' \\<otimes> inv s\n  inv h' \\<in> H\n  inv s \\<in> S\n\ngoal (1 subgoal):\n 1. inv g \\<in> (\\<Union>h\\<in>H. \\<Union>k\\<in>S. {h \\<otimes> k})", "by auto"], ["proof (state)\nthis:\n  inv g \\<in> H <#> S\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "fix g g'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "assume g:\"g \\<in> H <#> S\" and h:\"g' \\<in> H <#> S\""], ["proof (state)\nthis:\n  g \\<in> H <#> S\n  g' \\<in> H <#> S\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "then"], ["proof (chain)\npicking this:\n  g \\<in> H <#> S\n  g' \\<in> H <#> S", "obtain h h' s s' where hh'ss':\"h \\<in> H\" \"h' \\<in> H\" \"s \\<in> S\" \"s' \\<in> S\" and \"g = h \\<otimes> s\" and \"g' = h' \\<otimes> s'\""], ["proof (prove)\nusing this:\n  g \\<in> H <#> S\n  g' \\<in> H <#> S\n\ngoal (1 subgoal):\n 1. (\\<And>h h' s s'.\n        \\<lbrakk>h \\<in> H; h' \\<in> H; s \\<in> S; s' \\<in> S;\n         g = h \\<otimes> s; g' = h' \\<otimes> s'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding set_mult_def"], ["proof (prove)\nusing this:\n  g \\<in> (\\<Union>h\\<in>H. \\<Union>k\\<in>S. {h \\<otimes> k})\n  g' \\<in> (\\<Union>h\\<in>H. \\<Union>k\\<in>S. {h \\<otimes> k})\n\ngoal (1 subgoal):\n 1. (\\<And>h h' s s'.\n        \\<lbrakk>h \\<in> H; h' \\<in> H; s \\<in> S; s' \\<in> S;\n         g = h \\<otimes> s; g' = h' \\<otimes> s'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  h \\<in> H\n  h' \\<in> H\n  s \\<in> S\n  s' \\<in> S\n  g = h \\<otimes> s\n  g' = h' \\<otimes> s'\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "hence \"g \\<otimes> g' = (h \\<otimes> s) \\<otimes> (h' \\<otimes> s')\""], ["proof (prove)\nusing this:\n  h \\<in> H\n  h' \\<in> H\n  s \\<in> S\n  s' \\<in> S\n  g = h \\<otimes> s\n  g' = h' \\<otimes> s'\n\ngoal (1 subgoal):\n 1. g \\<otimes> g' = h \\<otimes> s \\<otimes> (h' \\<otimes> s')", "by metis"], ["proof (state)\nthis:\n  g \\<otimes> g' = h \\<otimes> s \\<otimes> (h' \\<otimes> s')\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "also"], ["proof (state)\nthis:\n  g \\<otimes> g' = h \\<otimes> s \\<otimes> (h' \\<otimes> s')\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "from hh'ss'"], ["proof (chain)\npicking this:\n  h \\<in> H\n  h' \\<in> H\n  s \\<in> S\n  s' \\<in> S", "have inG:\"h \\<in> carrier G\" \"h' \\<in> carrier G\" \"s \\<in> carrier G\" \"s' \\<in> carrier G\""], ["proof (prove)\nusing this:\n  h \\<in> H\n  h' \\<in> H\n  s \\<in> S\n  s' \\<in> S\n\ngoal (1 subgoal):\n 1. (h \\<in> carrier G &&& h' \\<in> carrier G) &&&\n    s \\<in> carrier G &&& s' \\<in> carrier G", "using subgrpS mem_carrier subgroup.mem_carrier"], ["proof (prove)\nusing this:\n  h \\<in> H\n  h' \\<in> H\n  s \\<in> S\n  s' \\<in> S\n  subgroup S G\n  ?x \\<in> H \\<Longrightarrow> ?x \\<in> carrier G\n  \\<lbrakk>subgroup ?H ?G; ?x \\<in> ?H\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> carrier ?G\n\ngoal (1 subgoal):\n 1. (h \\<in> carrier G &&& h' \\<in> carrier G) &&&\n    s \\<in> carrier G &&& s' \\<in> carrier G", "by force+"], ["proof (state)\nthis:\n  h \\<in> carrier G\n  h' \\<in> carrier G\n  s \\<in> carrier G\n  s' \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "hence \"(h \\<otimes> s) \\<otimes> (h' \\<otimes> s') = h \\<otimes> (s \\<otimes> h') \\<otimes> s'\""], ["proof (prove)\nusing this:\n  h \\<in> carrier G\n  h' \\<in> carrier G\n  s \\<in> carrier G\n  s' \\<in> carrier G\n\ngoal (1 subgoal):\n 1. h \\<otimes> s \\<otimes> (h' \\<otimes> s') =\n    h \\<otimes> (s \\<otimes> h') \\<otimes> s'", "using m_assoc"], ["proof (prove)\nusing this:\n  h \\<in> carrier G\n  h' \\<in> carrier G\n  s \\<in> carrier G\n  s' \\<in> carrier G\n  \\<lbrakk>?x \\<in> carrier G; ?y \\<in> carrier G;\n   ?z \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes> ?y \\<otimes> ?z =\n                    ?x \\<otimes> (?y \\<otimes> ?z)\n\ngoal (1 subgoal):\n 1. h \\<otimes> s \\<otimes> (h' \\<otimes> s') =\n    h \\<otimes> (s \\<otimes> h') \\<otimes> s'", "by auto"], ["proof (state)\nthis:\n  h \\<otimes> s \\<otimes> (h' \\<otimes> s') =\n  h \\<otimes> (s \\<otimes> h') \\<otimes> s'\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "also"], ["proof (state)\nthis:\n  h \\<otimes> s \\<otimes> (h' \\<otimes> s') =\n  h \\<otimes> (s \\<otimes> h') \\<otimes> s'\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "from hh'ss' inG"], ["proof (chain)\npicking this:\n  h \\<in> H\n  h' \\<in> H\n  s \\<in> S\n  s' \\<in> S\n  h \\<in> carrier G\n  h' \\<in> carrier G\n  s \\<in> carrier G\n  s' \\<in> carrier G", "obtain h'' where h'':\"h'' \\<in> H\" and \"s \\<otimes> h' = h'' \\<otimes> s\""], ["proof (prove)\nusing this:\n  h \\<in> H\n  h' \\<in> H\n  s \\<in> S\n  s' \\<in> S\n  h \\<in> carrier G\n  h' \\<in> carrier G\n  s \\<in> carrier G\n  s' \\<in> carrier G\n\ngoal (1 subgoal):\n 1. (\\<And>h''.\n        \\<lbrakk>h'' \\<in> H; s \\<otimes> h' = h'' \\<otimes> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using coset_eq"], ["proof (prove)\nusing this:\n  h \\<in> H\n  h' \\<in> H\n  s \\<in> S\n  s' \\<in> S\n  h \\<in> carrier G\n  h' \\<in> carrier G\n  s \\<in> carrier G\n  s' \\<in> carrier G\n  \\<forall>x\\<in>carrier G. H #> x = x <# H\n\ngoal (1 subgoal):\n 1. (\\<And>h''.\n        \\<lbrakk>h'' \\<in> H; s \\<otimes> h' = h'' \\<otimes> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding r_coset_def l_coset_def"], ["proof (prove)\nusing this:\n  h \\<in> H\n  h' \\<in> H\n  s \\<in> S\n  s' \\<in> S\n  h \\<in> carrier G\n  h' \\<in> carrier G\n  s \\<in> carrier G\n  s' \\<in> carrier G\n  \\<forall>x\\<in>carrier G.\n     (\\<Union>h\\<in>H. {h \\<otimes> x}) = (\\<Union>h\\<in>H. {x \\<otimes> h})\n\ngoal (1 subgoal):\n 1. (\\<And>h''.\n        \\<lbrakk>h'' \\<in> H; s \\<otimes> h' = h'' \\<otimes> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  h'' \\<in> H\n  s \\<otimes> h' = h'' \\<otimes> s\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "hence \"h \\<otimes> (s \\<otimes> h') \\<otimes> s' = h \\<otimes> (h'' \\<otimes> s) \\<otimes> s'\""], ["proof (prove)\nusing this:\n  h'' \\<in> H\n  s \\<otimes> h' = h'' \\<otimes> s\n\ngoal (1 subgoal):\n 1. h \\<otimes> (s \\<otimes> h') \\<otimes> s' =\n    h \\<otimes> (h'' \\<otimes> s) \\<otimes> s'", "by simp"], ["proof (state)\nthis:\n  h \\<otimes> (s \\<otimes> h') \\<otimes> s' =\n  h \\<otimes> (h'' \\<otimes> s) \\<otimes> s'\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "also"], ["proof (state)\nthis:\n  h \\<otimes> (s \\<otimes> h') \\<otimes> s' =\n  h \\<otimes> (h'' \\<otimes> s) \\<otimes> s'\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "from h'' inG"], ["proof (chain)\npicking this:\n  h'' \\<in> H\n  h \\<in> carrier G\n  h' \\<in> carrier G\n  s \\<in> carrier G\n  s' \\<in> carrier G", "have \"... = (h \\<otimes> h'') \\<otimes> (s \\<otimes> s')\""], ["proof (prove)\nusing this:\n  h'' \\<in> H\n  h \\<in> carrier G\n  h' \\<in> carrier G\n  s \\<in> carrier G\n  s' \\<in> carrier G\n\ngoal (1 subgoal):\n 1. h \\<otimes> (h'' \\<otimes> s) \\<otimes> s' =\n    h \\<otimes> h'' \\<otimes> (s \\<otimes> s')", "using m_assoc mem_carrier"], ["proof (prove)\nusing this:\n  h'' \\<in> H\n  h \\<in> carrier G\n  h' \\<in> carrier G\n  s \\<in> carrier G\n  s' \\<in> carrier G\n  \\<lbrakk>?x \\<in> carrier G; ?y \\<in> carrier G;\n   ?z \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes> ?y \\<otimes> ?z =\n                    ?x \\<otimes> (?y \\<otimes> ?z)\n  ?x \\<in> H \\<Longrightarrow> ?x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. h \\<otimes> (h'' \\<otimes> s) \\<otimes> s' =\n    h \\<otimes> h'' \\<otimes> (s \\<otimes> s')", "by auto"], ["proof (state)\nthis:\n  h \\<otimes> (h'' \\<otimes> s) \\<otimes> s' =\n  h \\<otimes> h'' \\<otimes> (s \\<otimes> s')\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "finally"], ["proof (chain)\npicking this:\n  g \\<otimes> g' = h \\<otimes> h'' \\<otimes> (s \\<otimes> s')", "have \"g \\<otimes> g' = h \\<otimes> h'' \\<otimes> (s \\<otimes> s')\""], ["proof (prove)\nusing this:\n  g \\<otimes> g' = h \\<otimes> h'' \\<otimes> (s \\<otimes> s')\n\ngoal (1 subgoal):\n 1. g \\<otimes> g' = h \\<otimes> h'' \\<otimes> (s \\<otimes> s')", "."], ["proof (state)\nthis:\n  g \\<otimes> g' = h \\<otimes> h'' \\<otimes> (s \\<otimes> s')\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "moreover"], ["proof (state)\nthis:\n  g \\<otimes> g' = h \\<otimes> h'' \\<otimes> (s \\<otimes> s')\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "with h'' hh'ss'"], ["proof (chain)\npicking this:\n  h'' \\<in> H\n  h \\<in> H\n  h' \\<in> H\n  s \\<in> S\n  s' \\<in> S\n  g \\<otimes> g' = h \\<otimes> h'' \\<otimes> (s \\<otimes> s')", "have \"... \\<in> H <#> S\""], ["proof (prove)\nusing this:\n  h'' \\<in> H\n  h \\<in> H\n  h' \\<in> H\n  s \\<in> S\n  s' \\<in> S\n  g \\<otimes> g' = h \\<otimes> h'' \\<otimes> (s \\<otimes> s')\n\ngoal (1 subgoal):\n 1. h \\<otimes> h'' \\<otimes> (s \\<otimes> s') \\<in> H <#> S", "unfolding set_mult_def"], ["proof (prove)\nusing this:\n  h'' \\<in> H\n  h \\<in> H\n  h' \\<in> H\n  s \\<in> S\n  s' \\<in> S\n  g \\<otimes> g' = h \\<otimes> h'' \\<otimes> (s \\<otimes> s')\n\ngoal (1 subgoal):\n 1. h \\<otimes> h'' \\<otimes> (s \\<otimes> s')\n    \\<in> (\\<Union>h\\<in>H. \\<Union>k\\<in>S. {h \\<otimes> k})", "using subgrpS subgroup.m_closed"], ["proof (prove)\nusing this:\n  h'' \\<in> H\n  h \\<in> H\n  h' \\<in> H\n  s \\<in> S\n  s' \\<in> S\n  g \\<otimes> g' = h \\<otimes> h'' \\<otimes> (s \\<otimes> s')\n  subgroup S G\n  \\<lbrakk>subgroup ?H ?G; ?x \\<in> ?H; ?y \\<in> ?H\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes>\\<^bsub>?G\\<^esub> ?y \\<in> ?H\n\ngoal (1 subgoal):\n 1. h \\<otimes> h'' \\<otimes> (s \\<otimes> s')\n    \\<in> (\\<Union>h\\<in>H. \\<Union>k\\<in>S. {h \\<otimes> k})", "by fastforce"], ["proof (state)\nthis:\n  h \\<otimes> h'' \\<otimes> (s \\<otimes> s') \\<in> H <#> S\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H <#> S; b \\<in> H <#> S\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<in> H <#> S", "ultimately"], ["proof (chain)\npicking this:\n  g \\<otimes> g' = h \\<otimes> h'' \\<otimes> (s \\<otimes> s')\n  h \\<otimes> h'' \\<otimes> (s \\<otimes> s') \\<in> H <#> S", "show \"g \\<otimes> g' \\<in> H <#> S\""], ["proof (prove)\nusing this:\n  g \\<otimes> g' = h \\<otimes> h'' \\<otimes> (s \\<otimes> s')\n  h \\<otimes> h'' \\<otimes> (s \\<otimes> s') \\<in> H <#> S\n\ngoal (1 subgoal):\n 1. g \\<otimes> g' \\<in> H <#> S", "by simp"], ["proof (state)\nthis:\n  g \\<otimes> g' \\<in> H <#> S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma oneH:\"\\<one> \\<in> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one> \\<in> H", "by (metis is_subgroup subgroup.one_closed)"], ["", "lemma H_contained_in_set_mult:\n  shows \"H \\<subseteq> H <#> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<subseteq> H <#> S", "proof auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> H \\<Longrightarrow> x \\<in> H <#> S", "have \"\\<one> \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one> \\<in> S", "by (metis subgroup.one_closed subgrpS)"], ["proof (state)\nthis:\n  \\<one> \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> H \\<Longrightarrow> x \\<in> H <#> S", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> H \\<Longrightarrow> x \\<in> H <#> S", "assume x:\"x \\<in> H\""], ["proof (state)\nthis:\n  x \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> H \\<Longrightarrow> x \\<in> H <#> S", "with \\<open>\\<one> \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  \\<one> \\<in> S\n  x \\<in> H", "have \"x \\<otimes> \\<one> \\<in> H <#> S\""], ["proof (prove)\nusing this:\n  \\<one> \\<in> S\n  x \\<in> H\n\ngoal (1 subgoal):\n 1. x \\<otimes> \\<one> \\<in> H <#> S", "unfolding set_mult_def"], ["proof (prove)\nusing this:\n  \\<one> \\<in> S\n  x \\<in> H\n\ngoal (1 subgoal):\n 1. x \\<otimes> \\<one>\n    \\<in> (\\<Union>h\\<in>H. \\<Union>k\\<in>S. {h \\<otimes> k})", "by force"], ["proof (state)\nthis:\n  x \\<otimes> \\<one> \\<in> H <#> S\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> H \\<Longrightarrow> x \\<in> H <#> S", "with x"], ["proof (chain)\npicking this:\n  x \\<in> H\n  x \\<otimes> \\<one> \\<in> H <#> S", "show  \"x \\<in> H <#> S\""], ["proof (prove)\nusing this:\n  x \\<in> H\n  x \\<otimes> \\<one> \\<in> H <#> S\n\ngoal (1 subgoal):\n 1. x \\<in> H <#> S", "by (metis mem_carrier r_one)"], ["proof (state)\nthis:\n  x \\<in> H <#> S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma S_contained_in_set_mult:\n  shows \"S \\<subseteq> H <#> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<subseteq> H <#> S", "proof auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> x \\<in> H <#> S", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> x \\<in> H <#> S", "assume s:\"s \\<in> S\""], ["proof (state)\nthis:\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> x \\<in> H <#> S", "with oneH"], ["proof (chain)\npicking this:\n  \\<one> \\<in> H\n  s \\<in> S", "have \"\\<one> \\<otimes> s \\<in> H <#> S\""], ["proof (prove)\nusing this:\n  \\<one> \\<in> H\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. \\<one> \\<otimes> s \\<in> H <#> S", "unfolding set_mult_def"], ["proof (prove)\nusing this:\n  \\<one> \\<in> H\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. \\<one> \\<otimes> s\n    \\<in> (\\<Union>h\\<in>H. \\<Union>k\\<in>S. {h \\<otimes> k})", "by force"], ["proof (state)\nthis:\n  \\<one> \\<otimes> s \\<in> H <#> S\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S \\<Longrightarrow> x \\<in> H <#> S", "with s"], ["proof (chain)\npicking this:\n  s \\<in> S\n  \\<one> \\<otimes> s \\<in> H <#> S", "show \"s \\<in> H <#> S\""], ["proof (prove)\nusing this:\n  s \\<in> S\n  \\<one> \\<otimes> s \\<in> H <#> S\n\ngoal (1 subgoal):\n 1. s \\<in> H <#> S", "using subgrpS subgroup.mem_carrier l_one"], ["proof (prove)\nusing this:\n  s \\<in> S\n  \\<one> \\<otimes> s \\<in> H <#> S\n  subgroup S G\n  \\<lbrakk>subgroup ?H ?G; ?x \\<in> ?H\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> carrier ?G\n  ?x \\<in> carrier G \\<Longrightarrow> \\<one> \\<otimes> ?x = ?x\n\ngoal (1 subgoal):\n 1. s \\<in> H <#> S", "by force"], ["proof (state)\nthis:\n  s \\<in> H <#> S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma normal_intersection_hom:\n  shows \"group_hom (G\\<lparr>carrier := S\\<rparr>) ((G\\<lparr>carrier := H <#> S\\<rparr>) Mod H) (\\<lambda>g. H #> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. group_hom (G\\<lparr>carrier := S\\<rparr>)\n     (G\\<lparr>carrier := H <#> S\\<rparr> Mod H) ((#>) H)", "proof (auto del: equalityI simp: group_hom_def group_hom_axioms_def hom_def groupS.is_group)"], ["proof (state)\ngoal (3 subgoals):\n 1. Group.group (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 2. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       H #> x \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> S; y \\<in> S\\<rbrakk>\n       \\<Longrightarrow> H #> x \\<otimes> y = H #> x <#> (H #> y)", "have  gr:\"group (G\\<lparr>carrier := H <#> S\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (G\\<lparr>carrier := H <#> S\\<rparr>)", "by (metis normal_set_mult_subgroup subgroup_imp_group)"], ["proof (state)\nthis:\n  Group.group (G\\<lparr>carrier := H <#> S\\<rparr>)\n\ngoal (3 subgoals):\n 1. Group.group (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 2. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       H #> x \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> S; y \\<in> S\\<rbrakk>\n       \\<Longrightarrow> H #> x \\<otimes> y = H #> x <#> (H #> y)", "moreover"], ["proof (state)\nthis:\n  Group.group (G\\<lparr>carrier := H <#> S\\<rparr>)\n\ngoal (3 subgoals):\n 1. Group.group (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 2. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       H #> x \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> S; y \\<in> S\\<rbrakk>\n       \\<Longrightarrow> H #> x \\<otimes> y = H #> x <#> (H #> y)", "have \"H \\<subseteq> H <#> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<subseteq> H <#> S", "by (rule H_contained_in_set_mult)"], ["proof (state)\nthis:\n  H \\<subseteq> H <#> S\n\ngoal (3 subgoals):\n 1. Group.group (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 2. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       H #> x \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> S; y \\<in> S\\<rbrakk>\n       \\<Longrightarrow> H #> x \\<otimes> y = H #> x <#> (H #> y)", "moreover"], ["proof (state)\nthis:\n  H \\<subseteq> H <#> S\n\ngoal (3 subgoals):\n 1. Group.group (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 2. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       H #> x \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> S; y \\<in> S\\<rbrakk>\n       \\<Longrightarrow> H #> x \\<otimes> y = H #> x <#> (H #> y)", "have \"subgroup (H <#> S) G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (H <#> S) G", "by (metis normal_set_mult_subgroup)"], ["proof (state)\nthis:\n  subgroup (H <#> S) G\n\ngoal (3 subgoals):\n 1. Group.group (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 2. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       H #> x \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> S; y \\<in> S\\<rbrakk>\n       \\<Longrightarrow> H #> x \\<otimes> y = H #> x <#> (H #> y)", "ultimately"], ["proof (chain)\npicking this:\n  Group.group (G\\<lparr>carrier := H <#> S\\<rparr>)\n  H \\<subseteq> H <#> S\n  subgroup (H <#> S) G", "have \"H \\<lhd> (G\\<lparr>carrier := H <#> S\\<rparr>)\""], ["proof (prove)\nusing this:\n  Group.group (G\\<lparr>carrier := H <#> S\\<rparr>)\n  H \\<subseteq> H <#> S\n  subgroup (H <#> S) G\n\ngoal (1 subgoal):\n 1. H \\<lhd> G\\<lparr>carrier := H <#> S\\<rparr>", "using normal_restrict_supergroup"], ["proof (prove)\nusing this:\n  Group.group (G\\<lparr>carrier := H <#> S\\<rparr>)\n  H \\<subseteq> H <#> S\n  subgroup (H <#> S) G\n  \\<lbrakk>subgroup ?S G; ?N \\<lhd> G; ?N \\<subseteq> ?S\\<rbrakk>\n  \\<Longrightarrow> ?N \\<lhd> G\\<lparr>carrier := ?S\\<rparr>\n\ngoal (1 subgoal):\n 1. H \\<lhd> G\\<lparr>carrier := H <#> S\\<rparr>", "by (metis inv_op_closed2 is_subgroup normal_inv_iff)"], ["proof (state)\nthis:\n  H \\<lhd> G\\<lparr>carrier := H <#> S\\<rparr>\n\ngoal (3 subgoals):\n 1. Group.group (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 2. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       H #> x \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> S; y \\<in> S\\<rbrakk>\n       \\<Longrightarrow> H #> x \\<otimes> y = H #> x <#> (H #> y)", "with gr"], ["proof (chain)\npicking this:\n  Group.group (G\\<lparr>carrier := H <#> S\\<rparr>)\n  H \\<lhd> G\\<lparr>carrier := H <#> S\\<rparr>", "show \"group ((G\\<lparr>carrier := H <#> S\\<rparr>) Mod H)\""], ["proof (prove)\nusing this:\n  Group.group (G\\<lparr>carrier := H <#> S\\<rparr>)\n  H \\<lhd> G\\<lparr>carrier := H <#> S\\<rparr>\n\ngoal (1 subgoal):\n 1. Group.group (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)", "by (metis normal.factorgroup_is_group)"], ["proof (state)\nthis:\n  Group.group (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       H #> x \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> S; y \\<in> S\\<rbrakk>\n       \\<Longrightarrow> H #> x \\<otimes> y = H #> x <#> (H #> y)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       H #> x \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> S; y \\<in> S\\<rbrakk>\n       \\<Longrightarrow> H #> x \\<otimes> y = H #> x <#> (H #> y)", "fix g"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       H #> x \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> S; y \\<in> S\\<rbrakk>\n       \\<Longrightarrow> H #> x \\<otimes> y = H #> x <#> (H #> y)", "assume g: \"g \\<in> S\""], ["proof (state)\nthis:\n  g \\<in> S\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       H #> x \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> S; y \\<in> S\\<rbrakk>\n       \\<Longrightarrow> H #> x \\<otimes> y = H #> x <#> (H #> y)", "with subgrpS"], ["proof (chain)\npicking this:\n  subgroup S G\n  g \\<in> S", "have \"\\<one> \\<otimes> g \\<in> H <#> S\""], ["proof (prove)\nusing this:\n  subgroup S G\n  g \\<in> S\n\ngoal (1 subgoal):\n 1. \\<one> \\<otimes> g \\<in> H <#> S", "unfolding set_mult_def"], ["proof (prove)\nusing this:\n  subgroup S G\n  g \\<in> S\n\ngoal (1 subgoal):\n 1. \\<one> \\<otimes> g\n    \\<in> (\\<Union>h\\<in>H. \\<Union>k\\<in>S. {h \\<otimes> k})", "by fastforce"], ["proof (state)\nthis:\n  \\<one> \\<otimes> g \\<in> H <#> S\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       H #> x \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> S; y \\<in> S\\<rbrakk>\n       \\<Longrightarrow> H #> x \\<otimes> y = H #> x <#> (H #> y)", "with g"], ["proof (chain)\npicking this:\n  g \\<in> S\n  \\<one> \\<otimes> g \\<in> H <#> S", "have \"g \\<in> H <#> S\""], ["proof (prove)\nusing this:\n  g \\<in> S\n  \\<one> \\<otimes> g \\<in> H <#> S\n\ngoal (1 subgoal):\n 1. g \\<in> H <#> S", "by (metis l_one subgroup.mem_carrier subgrpS)"], ["proof (state)\nthis:\n  g \\<in> H <#> S\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       H #> x \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> S; y \\<in> S\\<rbrakk>\n       \\<Longrightarrow> H #> x \\<otimes> y = H #> x <#> (H #> y)", "thus \"H #> g \\<in> carrier ((G\\<lparr>carrier := H <#> S\\<rparr>) Mod H)\""], ["proof (prove)\nusing this:\n  g \\<in> H <#> S\n\ngoal (1 subgoal):\n 1. H #> g \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)", "unfolding FactGroup_def RCOSETS_def r_coset_def"], ["proof (prove)\nusing this:\n  g \\<in> H <#> S\n\ngoal (1 subgoal):\n 1. (\\<Union>h\\<in>H. {h \\<otimes> g})\n    \\<in> carrier\n           \\<lparr>carrier =\n                     \\<Union>a\\<in>carrier\n                                    (G\\<lparr>carrier := H <#> S\\<rparr>).\n                        {\\<Union>h\\<in>H.\n                            {h \\<otimes>\\<^bsub>G\\<lparr>carrier := H <#> S\\<rparr>\\<^esub>\n                             a}},\n              monoid.mult =\n                (<#>\\<^bsub>G\\<lparr>carrier := H <#> S\\<rparr>\\<^esub>),\n              one = H\\<rparr>", "by auto"], ["proof (state)\nthis:\n  H #> g \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> S; y \\<in> S\\<rbrakk>\n       \\<Longrightarrow> H #> x \\<otimes> y = H #> x <#> (H #> y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> S; y \\<in> S\\<rbrakk>\n       \\<Longrightarrow> H #> x \\<otimes> y = H #> x <#> (H #> y)", "show \"\\<And>x y. \\<lbrakk>x \\<in> S; y \\<in> S\\<rbrakk> \\<Longrightarrow> H #> x \\<otimes> y = H #> x <#> (H #> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> S; y \\<in> S\\<rbrakk>\n       \\<Longrightarrow> H #> x \\<otimes> y = H #> x <#> (H #> y)", "using normal.rcos_sum normal_axioms subgroup.mem_carrier subgrpS"], ["proof (prove)\nusing this:\n  \\<lbrakk>?H \\<lhd> ?G; ?x \\<in> carrier ?G; ?y \\<in> carrier ?G\\<rbrakk>\n  \\<Longrightarrow> ?H #>\\<^bsub>?G\\<^esub> ?x <#>\\<^bsub>?G\\<^esub>\n                    (?H #>\\<^bsub>?G\\<^esub> ?y) =\n                    ?H #>\\<^bsub>?G\\<^esub>\n                    ?x \\<otimes>\\<^bsub>?G\\<^esub> ?y\n  H \\<lhd> G\n  \\<lbrakk>subgroup ?H ?G; ?x \\<in> ?H\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> carrier ?G\n  subgroup S G\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> S; y \\<in> S\\<rbrakk>\n       \\<Longrightarrow> H #> x \\<otimes> y = H #> x <#> (H #> y)", "by fastforce"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> S; ?y \\<in> S\\<rbrakk>\n  \\<Longrightarrow> H #> ?x \\<otimes> ?y = H #> ?x <#> (H #> ?y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma normal_intersection_hom_kernel:\n  shows \"kernel (G\\<lparr>carrier := S\\<rparr>) ((G\\<lparr>carrier := H <#> S\\<rparr>) Mod H) (\\<lambda>g. H #> g) = H \\<inter> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. kernel (G\\<lparr>carrier := S\\<rparr>)\n     (G\\<lparr>carrier := H <#> S\\<rparr> Mod H) ((#>) H) =\n    H \\<inter> S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. kernel (G\\<lparr>carrier := S\\<rparr>)\n     (G\\<lparr>carrier := H <#> S\\<rparr> Mod H) ((#>) H) =\n    H \\<inter> S", "have \"kernel (G\\<lparr>carrier := S\\<rparr>) ((G\\<lparr>carrier := H <#> S\\<rparr>) Mod H) (\\<lambda>g. H #> g)\n                 = {g \\<in> S. H #> g = \\<one>\\<^bsub>(G\\<lparr>carrier := H <#> S\\<rparr>) Mod H\\<^esub>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. kernel (G\\<lparr>carrier := S\\<rparr>)\n     (G\\<lparr>carrier := H <#> S\\<rparr> Mod H) ((#>) H) =\n    {g \\<in> S.\n     H #> g =\n     \\<one>\\<^bsub>G\\<lparr>carrier := H <#> S\\<rparr> Mod H\\<^esub>}", "unfolding kernel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> carrier (G\\<lparr>carrier := S\\<rparr>).\n     H #> x =\n     \\<one>\\<^bsub>G\\<lparr>carrier := H <#> S\\<rparr> Mod H\\<^esub>} =\n    {g \\<in> S.\n     H #> g =\n     \\<one>\\<^bsub>G\\<lparr>carrier := H <#> S\\<rparr> Mod H\\<^esub>}", "by auto"], ["proof (state)\nthis:\n  kernel (G\\<lparr>carrier := S\\<rparr>)\n   (G\\<lparr>carrier := H <#> S\\<rparr> Mod H) ((#>) H) =\n  {g \\<in> S.\n   H #> g = \\<one>\\<^bsub>G\\<lparr>carrier := H <#> S\\<rparr> Mod H\\<^esub>}\n\ngoal (1 subgoal):\n 1. kernel (G\\<lparr>carrier := S\\<rparr>)\n     (G\\<lparr>carrier := H <#> S\\<rparr> Mod H) ((#>) H) =\n    H \\<inter> S", "also"], ["proof (state)\nthis:\n  kernel (G\\<lparr>carrier := S\\<rparr>)\n   (G\\<lparr>carrier := H <#> S\\<rparr> Mod H) ((#>) H) =\n  {g \\<in> S.\n   H #> g = \\<one>\\<^bsub>G\\<lparr>carrier := H <#> S\\<rparr> Mod H\\<^esub>}\n\ngoal (1 subgoal):\n 1. kernel (G\\<lparr>carrier := S\\<rparr>)\n     (G\\<lparr>carrier := H <#> S\\<rparr> Mod H) ((#>) H) =\n    H \\<inter> S", "have \"... = {g \\<in> S. H #> g = H}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {g \\<in> S.\n     H #> g =\n     \\<one>\\<^bsub>G\\<lparr>carrier := H <#> S\\<rparr> Mod H\\<^esub>} =\n    {g \\<in> S. H #> g = H}", "unfolding FactGroup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {g \\<in> S.\n     H #> g =\n     \\<one>\\<^bsub>\\<lparr>carrier = rcosets\\<^bsub>G\\<lparr>carrier := H <#> S\\<rparr>\\<^esub> H, monoid.mult = (<#>\\<^bsub>G\\<lparr>carrier := H <#> S\\<rparr>\\<^esub>), one = H\\<rparr>\\<^esub>} =\n    {g \\<in> S. H #> g = H}", "by auto"], ["proof (state)\nthis:\n  {g \\<in> S.\n   H #> g =\n   \\<one>\\<^bsub>G\\<lparr>carrier := H <#> S\\<rparr> Mod H\\<^esub>} =\n  {g \\<in> S. H #> g = H}\n\ngoal (1 subgoal):\n 1. kernel (G\\<lparr>carrier := S\\<rparr>)\n     (G\\<lparr>carrier := H <#> S\\<rparr> Mod H) ((#>) H) =\n    H \\<inter> S", "also"], ["proof (state)\nthis:\n  {g \\<in> S.\n   H #> g =\n   \\<one>\\<^bsub>G\\<lparr>carrier := H <#> S\\<rparr> Mod H\\<^esub>} =\n  {g \\<in> S. H #> g = H}\n\ngoal (1 subgoal):\n 1. kernel (G\\<lparr>carrier := S\\<rparr>)\n     (G\\<lparr>carrier := H <#> S\\<rparr> Mod H) ((#>) H) =\n    H \\<inter> S", "have \"... = {g \\<in> S. g \\<in> H}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {g \\<in> S. H #> g = H} = {g \\<in> S. g \\<in> H}", "by (metis coset_eq is_subgroup lcoset_join2 rcos_self subgroup.mem_carrier subgrpS)"], ["proof (state)\nthis:\n  {g \\<in> S. H #> g = H} = {g \\<in> S. g \\<in> H}\n\ngoal (1 subgoal):\n 1. kernel (G\\<lparr>carrier := S\\<rparr>)\n     (G\\<lparr>carrier := H <#> S\\<rparr> Mod H) ((#>) H) =\n    H \\<inter> S", "also"], ["proof (state)\nthis:\n  {g \\<in> S. H #> g = H} = {g \\<in> S. g \\<in> H}\n\ngoal (1 subgoal):\n 1. kernel (G\\<lparr>carrier := S\\<rparr>)\n     (G\\<lparr>carrier := H <#> S\\<rparr> Mod H) ((#>) H) =\n    H \\<inter> S", "have \"... = H \\<inter> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {g \\<in> S. g \\<in> H} = H \\<inter> S", "by auto"], ["proof (state)\nthis:\n  {g \\<in> S. g \\<in> H} = H \\<inter> S\n\ngoal (1 subgoal):\n 1. kernel (G\\<lparr>carrier := S\\<rparr>)\n     (G\\<lparr>carrier := H <#> S\\<rparr> Mod H) ((#>) H) =\n    H \\<inter> S", "finally"], ["proof (chain)\npicking this:\n  kernel (G\\<lparr>carrier := S\\<rparr>)\n   (G\\<lparr>carrier := H <#> S\\<rparr> Mod H) ((#>) H) =\n  H \\<inter> S", "show ?thesis"], ["proof (prove)\nusing this:\n  kernel (G\\<lparr>carrier := S\\<rparr>)\n   (G\\<lparr>carrier := H <#> S\\<rparr> Mod H) ((#>) H) =\n  H \\<inter> S\n\ngoal (1 subgoal):\n 1. kernel (G\\<lparr>carrier := S\\<rparr>)\n     (G\\<lparr>carrier := H <#> S\\<rparr> Mod H) ((#>) H) =\n    H \\<inter> S", "."], ["proof (state)\nthis:\n  kernel (G\\<lparr>carrier := S\\<rparr>)\n   (G\\<lparr>carrier := H <#> S\\<rparr> Mod H) ((#>) H) =\n  H \\<inter> S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma normal_intersection_hom_surj:\n  shows \"(\\<lambda>g. H #> g) ` carrier (G\\<lparr>carrier := S\\<rparr>) = carrier ((G\\<lparr>carrier := H <#> S\\<rparr>) Mod H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (#>) H ` carrier (G\\<lparr>carrier := S\\<rparr>) =\n    carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> S \\<Longrightarrow>\n       H #> xa \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 2. \\<And>x.\n       x \\<in> carrier\n                (G\\<lparr>carrier := H <#> S\\<rparr> Mod\n                 H) \\<Longrightarrow>\n       x \\<in> (#>) H ` S", "fix g"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> S \\<Longrightarrow>\n       H #> xa \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 2. \\<And>x.\n       x \\<in> carrier\n                (G\\<lparr>carrier := H <#> S\\<rparr> Mod\n                 H) \\<Longrightarrow>\n       x \\<in> (#>) H ` S", "assume \"g \\<in> S\""], ["proof (state)\nthis:\n  g \\<in> S\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> S \\<Longrightarrow>\n       H #> xa \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 2. \\<And>x.\n       x \\<in> carrier\n                (G\\<lparr>carrier := H <#> S\\<rparr> Mod\n                 H) \\<Longrightarrow>\n       x \\<in> (#>) H ` S", "hence \"g \\<in> H <#> S\""], ["proof (prove)\nusing this:\n  g \\<in> S\n\ngoal (1 subgoal):\n 1. g \\<in> H <#> S", "using S_contained_in_set_mult"], ["proof (prove)\nusing this:\n  g \\<in> S\n  S \\<subseteq> H <#> S\n\ngoal (1 subgoal):\n 1. g \\<in> H <#> S", "by auto"], ["proof (state)\nthis:\n  g \\<in> H <#> S\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> S \\<Longrightarrow>\n       H #> xa \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n 2. \\<And>x.\n       x \\<in> carrier\n                (G\\<lparr>carrier := H <#> S\\<rparr> Mod\n                 H) \\<Longrightarrow>\n       x \\<in> (#>) H ` S", "thus \"H #> g \\<in> carrier ((G\\<lparr>carrier := H <#> S\\<rparr>) Mod H)\""], ["proof (prove)\nusing this:\n  g \\<in> H <#> S\n\ngoal (1 subgoal):\n 1. H #> g \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)", "unfolding FactGroup_def RCOSETS_def r_coset_def"], ["proof (prove)\nusing this:\n  g \\<in> H <#> S\n\ngoal (1 subgoal):\n 1. (\\<Union>h\\<in>H. {h \\<otimes> g})\n    \\<in> carrier\n           \\<lparr>carrier =\n                     \\<Union>a\\<in>carrier\n                                    (G\\<lparr>carrier := H <#> S\\<rparr>).\n                        {\\<Union>h\\<in>H.\n                            {h \\<otimes>\\<^bsub>G\\<lparr>carrier := H <#> S\\<rparr>\\<^esub>\n                             a}},\n              monoid.mult =\n                (<#>\\<^bsub>G\\<lparr>carrier := H <#> S\\<rparr>\\<^esub>),\n              one = H\\<rparr>", "by auto"], ["proof (state)\nthis:\n  H #> g \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier\n                (G\\<lparr>carrier := H <#> S\\<rparr> Mod\n                 H) \\<Longrightarrow>\n       x \\<in> (#>) H ` S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier\n                (G\\<lparr>carrier := H <#> S\\<rparr> Mod\n                 H) \\<Longrightarrow>\n       x \\<in> (#>) H ` S", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier\n                (G\\<lparr>carrier := H <#> S\\<rparr> Mod\n                 H) \\<Longrightarrow>\n       x \\<in> (#>) H ` S", "assume \"x \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\""], ["proof (state)\nthis:\n  x \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier\n                (G\\<lparr>carrier := H <#> S\\<rparr> Mod\n                 H) \\<Longrightarrow>\n       x \\<in> (#>) H ` S", "then"], ["proof (chain)\npicking this:\n  x \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)", "obtain h s where h:\"h \\<in> H\" and s:\"s \\<in> S\" and \"x = H #> (h \\<otimes> s)\""], ["proof (prove)\nusing this:\n  x \\<in> carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n\ngoal (1 subgoal):\n 1. (\\<And>h s.\n        \\<lbrakk>h \\<in> H; s \\<in> S; x = H #> h \\<otimes> s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding FactGroup_def RCOSETS_def r_coset_def set_mult_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n           \\<lparr>carrier =\n                     \\<Union>a\\<in>carrier\n                                    (G\\<lparr>carrier :=\n          \\<Union>h\\<in>H. \\<Union>k\\<in>S. {h \\<otimes> k}\\<rparr>).\n                        {\\<Union>h\\<in>H.\n                            {h \\<otimes>\\<^bsub>G\\<lparr>carrier := \\<Union>h\\<in>H. \\<Union>k\\<in>S. {h \\<otimes> k}\\<rparr>\\<^esub>\n                             a}},\n              monoid.mult =\n                \\<lambda>Ha K.\n                   \\<Union>h\\<in>Ha.\n                      \\<Union>k\\<in>K.\n                         {h \\<otimes>\\<^bsub>G\\<lparr>carrier := \\<Union>h\\<in>H. \\<Union>k\\<in>S. {h \\<otimes> k}\\<rparr>\\<^esub>\n                          k},\n              one = H\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>h s.\n        \\<lbrakk>h \\<in> H; s \\<in> S;\n         x = (\\<Union>ha\\<in>H. {ha \\<otimes> (h \\<otimes> s)})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  h \\<in> H\n  s \\<in> S\n  x = H #> h \\<otimes> s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier\n                (G\\<lparr>carrier := H <#> S\\<rparr> Mod\n                 H) \\<Longrightarrow>\n       x \\<in> (#>) H ` S", "hence \"x = (H #> h) #> s\""], ["proof (prove)\nusing this:\n  h \\<in> H\n  s \\<in> S\n  x = H #> h \\<otimes> s\n\ngoal (1 subgoal):\n 1. x = H #> h #> s", "by (metis h s coset_mult_assoc mem_carrier subgroup.mem_carrier subgrpS subset)"], ["proof (state)\nthis:\n  x = H #> h #> s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier\n                (G\\<lparr>carrier := H <#> S\\<rparr> Mod\n                 H) \\<Longrightarrow>\n       x \\<in> (#>) H ` S", "also"], ["proof (state)\nthis:\n  x = H #> h #> s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier\n                (G\\<lparr>carrier := H <#> S\\<rparr> Mod\n                 H) \\<Longrightarrow>\n       x \\<in> (#>) H ` S", "have \"... = H #> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H #> h #> s = H #> s", "by (metis h is_group rcos_const)"], ["proof (state)\nthis:\n  H #> h #> s = H #> s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier\n                (G\\<lparr>carrier := H <#> S\\<rparr> Mod\n                 H) \\<Longrightarrow>\n       x \\<in> (#>) H ` S", "finally"], ["proof (chain)\npicking this:\n  x = H #> s", "have \"x = H #> s\""], ["proof (prove)\nusing this:\n  x = H #> s\n\ngoal (1 subgoal):\n 1. x = H #> s", "."], ["proof (state)\nthis:\n  x = H #> s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier\n                (G\\<lparr>carrier := H <#> S\\<rparr> Mod\n                 H) \\<Longrightarrow>\n       x \\<in> (#>) H ` S", "with s"], ["proof (chain)\npicking this:\n  s \\<in> S\n  x = H #> s", "show \"x \\<in> (#>) H ` S\""], ["proof (prove)\nusing this:\n  s \\<in> S\n  x = H #> s\n\ngoal (1 subgoal):\n 1. x \\<in> (#>) H ` S", "by simp"], ["proof (state)\nthis:\n  x \\<in> (#>) H ` S\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Finally we can prove the actual isomorphism theorem:\\<close>"], ["", "theorem normal_intersection_quotient_isom:\n  shows \"(\\<lambda>X. the_elem ((\\<lambda>g. H #> g) ` X)) \\<in> iso ((G\\<lparr>carrier := S\\<rparr>) Mod (H \\<inter> S)) (((G\\<lparr>carrier := H <#> S\\<rparr>)) Mod H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>X. the_elem ((#>) H ` X))\n    \\<in> Group.iso (G\\<lparr>carrier := S\\<rparr> Mod H \\<inter> S)\n           (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)", "using normal_intersection_hom_kernel[symmetric] normal_intersection_hom normal_intersection_hom_surj"], ["proof (prove)\nusing this:\n  H \\<inter> S =\n  kernel (G\\<lparr>carrier := S\\<rparr>)\n   (G\\<lparr>carrier := H <#> S\\<rparr> Mod H) ((#>) H)\n  group_hom (G\\<lparr>carrier := S\\<rparr>)\n   (G\\<lparr>carrier := H <#> S\\<rparr> Mod H) ((#>) H)\n  (#>) H ` carrier (G\\<lparr>carrier := S\\<rparr>) =\n  carrier (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)\n\ngoal (1 subgoal):\n 1. (\\<lambda>X. the_elem ((#>) H ` X))\n    \\<in> Group.iso (G\\<lparr>carrier := S\\<rparr> Mod H \\<inter> S)\n           (G\\<lparr>carrier := H <#> S\\<rparr> Mod H)", "by (metis group_hom.FactGroup_iso_set)"], ["", "end"], ["", "end"]]}