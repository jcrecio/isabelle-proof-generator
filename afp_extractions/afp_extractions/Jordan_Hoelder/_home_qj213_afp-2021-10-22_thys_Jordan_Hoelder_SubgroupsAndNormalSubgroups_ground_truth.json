{"file_name": "/home/qj213/afp-2021-10-22/thys/Jordan_Hoelder/SubgroupsAndNormalSubgroups.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Jordan_Hoelder", "problem_names": ["lemma (in group) order_one_triv_iff:\n  shows \"(order G = 1) = (carrier G = {\\<one>})\"", "lemma (in group) finite_pos_order:\n  assumes finite:\"finite (carrier G)\"\n  shows \"0 < order G\"", "lemma iso_order_closed:\n  assumes \"\\<phi> \\<in> iso G H\"\n  shows \"order G = order H\"", "lemma (in subgroup) subgroup_of_restricted_group:\n  assumes \"subgroup U (G\\<lparr> carrier := H\\<rparr>)\"\n  shows \"U \\<subseteq> H\"", "lemma (in subgroup) subgroup_of_subgroup:\n  assumes \"group G\"\n  assumes \"subgroup U (G\\<lparr> carrier := H\\<rparr>)\"\n  shows \"subgroup U G\"", "lemma (in subgroup) surj_hom_subgroup:\n  assumes \\<phi>:\"group_hom G F \\<phi>\"\n  assumes \\<phi>surj:\"\\<phi> ` (carrier G) = carrier F\"\n  shows \"subgroup (\\<phi> ` H) F\"", "lemma iso_subgroup:\n  assumes groups:\"group G\" \"group F\"\n  assumes HG:\"subgroup H G\"\n  assumes \\<phi>:\"\\<phi> \\<in> iso G F\"\n  shows \"subgroup (\\<phi> ` H) F\"", "lemma iso_restrict:\n  assumes groups:\"group G\" \"group F\"\n  assumes HG:\"subgroup H G\"\n  assumes \\<phi>:\"\\<phi> \\<in> iso G F\"\n  shows \"(restrict \\<phi> H) \\<in> iso (G\\<lparr>carrier := H\\<rparr>) (F\\<lparr>carrier := \\<phi> ` H\\<rparr>)\"", "lemma (in group) subgroup_intersect:\n  assumes \"subgroup H G\"\n  assumes \"subgroup H' G\"\n  shows \"subgroup (H \\<inter> H') G\"", "lemma (in normal) is_normal:\n  shows \"H \\<lhd> G\"", "lemma (in normal) surj_hom_normal_subgroup:\n  assumes \\<phi>:\"group_hom G F \\<phi>\"\n  assumes \\<phi>surj:\"\\<phi> ` (carrier G) = carrier F\"\n  shows \"(\\<phi> ` H) \\<lhd> F\"", "lemma iso_normal_subgroup:\n  assumes groups:\"group G\" \"group F\"\n  assumes HG:\"H \\<lhd> G\"\n  assumes \\<phi>:\"\\<phi> \\<in> iso G F\"\n  shows \"(\\<phi> ` H) \\<lhd> F\"", "lemma (in group) triv_subgroup:\n  shows \"subgroup {\\<one>} G\"", "lemma (in group) card_rcosets_triv:\n  assumes \"finite (carrier G)\"\n  shows \"card (rcosets {\\<one>}) = order G\"", "lemma (in group) normal_subgroup_intersect:\n  assumes \"M \\<lhd> G\" and \"N \\<lhd> G\"\n  shows \"M \\<inter> N \\<lhd> G\"", "lemma (in group) setmult_lcos_assoc:\n     \"\\<lbrakk>H \\<subseteq> carrier G; K \\<subseteq> carrier G; x \\<in> carrier G\\<rbrakk>\n      \\<Longrightarrow> (x <# H) <#> K = x <# (H <#> K)\"", "lemma (in group) normal_subgroup_set_mult_closed:\n  assumes \"M \\<lhd> G\" and \"N \\<lhd> G\"\n  shows \"M <#> N \\<lhd> G\"", "lemma (in group) restrict_group_imp_subgroup:\n  assumes \"H \\<subseteq> carrier G\" \"group (G\\<lparr>carrier := H\\<rparr>)\"\n  shows \"subgroup H G\"", "lemma (in group) normal_subgroup_factorize:\n  assumes \"N \\<lhd> G\" and \"N \\<subseteq> H\" and \"subgroup H G\"\n  shows \"subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N) (G Mod N)\"", "lemma (in group) normality_factorization:\n  assumes NG:\"N \\<lhd> G\" and NH:\"N \\<subseteq> H\" and HG:\"H \\<lhd> G\"\n  shows \"(rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N) \\<lhd> (G Mod N)\"", "lemma (in normal) fact_group_trivial_iff:\n  assumes \"finite (carrier G)\"\n  shows \"(carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}) = (H = carrier G)\"", "lemma (in normal) factgroup_finite:\n  assumes \"finite (carrier G)\"\n  shows \"finite (rcosets H)\"", "lemma (in normal) factgroup_subgroup_union_char:\n  assumes \"subgroup A (G Mod H)\"\n  shows \"(\\<Union>A) = {x \\<in> carrier G. H #> x \\<in> A}\"", "lemma (in normal) factgroup_subgroup_union_subgroup:\n  assumes \"subgroup A (G Mod H)\"\n  shows \"subgroup (\\<Union>A) G\"", "lemma (in normal) factgroup_subgroup_union_normal:\n  assumes \"A \\<lhd> (G Mod H)\"\n  shows \"\\<Union>A \\<lhd> G\"", "lemma (in normal) factgroup_subgroup_union_factor:\n  assumes \"subgroup A (G Mod H)\"\n  shows \"A = rcosets\\<^bsub>G\\<lparr>carrier := \\<Union>A\\<rparr>\\<^esub> H\"", "lemma flatten_set_group_hom:\n  assumes group:\"group G\"\n  assumes inj:\"inj_on rep (carrier G)\"\n  shows \"rep \\<in> hom G (flatten G rep)\"", "lemma flatten_set_group:\n  assumes group:\"group G\"\n  assumes inj:\"inj_on rep (carrier G)\"\n  shows \"group (flatten G rep)\"", "lemma (in normal) flatten_set_group_mod_inj:\n  shows \"inj_on (\\<lambda>U. SOME g. g \\<in> U) (carrier (G Mod H))\"", "lemma (in normal) flatten_set_group_mod:\n  shows \"group (flatten (G Mod H) (\\<lambda>U. SOME g. g \\<in> U))\"", "lemma (in normal) flatten_set_group_mod_iso:\n  shows \"(\\<lambda>U. SOME g. g \\<in> U) \\<in> iso (G Mod H) (flatten (G Mod H) (\\<lambda>U. SOME g. g \\<in> U))\""], "translations": [["", "lemma (in group) order_one_triv_iff:\n  shows \"(order G = 1) = (carrier G = {\\<one>})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (order G = 1) = (carrier G = {\\<one>})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. order G = 1 \\<Longrightarrow> carrier G = {\\<one>}\n 2. carrier G = {\\<one>} \\<Longrightarrow> order G = 1", "assume order:\"order G = 1\""], ["proof (state)\nthis:\n  order G = 1\n\ngoal (2 subgoals):\n 1. order G = 1 \\<Longrightarrow> carrier G = {\\<one>}\n 2. carrier G = {\\<one>} \\<Longrightarrow> order G = 1", "then"], ["proof (chain)\npicking this:\n  order G = 1", "obtain x where x:\"carrier G = {x}\""], ["proof (prove)\nusing this:\n  order G = 1\n\ngoal (1 subgoal):\n 1. (\\<And>x. carrier G = {x} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding order_def"], ["proof (prove)\nusing this:\n  card (carrier G) = 1\n\ngoal (1 subgoal):\n 1. (\\<And>x. carrier G = {x} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: card_Suc_eq)"], ["proof (state)\nthis:\n  carrier G = {x}\n\ngoal (2 subgoals):\n 1. order G = 1 \\<Longrightarrow> carrier G = {\\<one>}\n 2. carrier G = {\\<one>} \\<Longrightarrow> order G = 1", "hence \"\\<one> = x\""], ["proof (prove)\nusing this:\n  carrier G = {x}\n\ngoal (1 subgoal):\n 1. \\<one> = x", "using one_closed"], ["proof (prove)\nusing this:\n  carrier G = {x}\n  \\<one> \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<one> = x", "by auto"], ["proof (state)\nthis:\n  \\<one> = x\n\ngoal (2 subgoals):\n 1. order G = 1 \\<Longrightarrow> carrier G = {\\<one>}\n 2. carrier G = {\\<one>} \\<Longrightarrow> order G = 1", "with x"], ["proof (chain)\npicking this:\n  carrier G = {x}\n  \\<one> = x", "show \"carrier G = {\\<one>}\""], ["proof (prove)\nusing this:\n  carrier G = {x}\n  \\<one> = x\n\ngoal (1 subgoal):\n 1. carrier G = {\\<one>}", "by simp"], ["proof (state)\nthis:\n  carrier G = {\\<one>}\n\ngoal (1 subgoal):\n 1. carrier G = {\\<one>} \\<Longrightarrow> order G = 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. carrier G = {\\<one>} \\<Longrightarrow> order G = 1", "assume \"carrier G = {\\<one>}\""], ["proof (state)\nthis:\n  carrier G = {\\<one>}\n\ngoal (1 subgoal):\n 1. carrier G = {\\<one>} \\<Longrightarrow> order G = 1", "thus \"order G = 1\""], ["proof (prove)\nusing this:\n  carrier G = {\\<one>}\n\ngoal (1 subgoal):\n 1. order G = 1", "unfolding order_def"], ["proof (prove)\nusing this:\n  carrier G = {\\<one>}\n\ngoal (1 subgoal):\n 1. card (carrier G) = 1", "by auto"], ["proof (state)\nthis:\n  order G = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in group) finite_pos_order:\n  assumes finite:\"finite (carrier G)\"\n  shows \"0 < order G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < order G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < order G", "from one_closed finite"], ["proof (chain)\npicking this:\n  \\<one> \\<in> carrier G\n  finite (carrier G)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<one> \\<in> carrier G\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. 0 < order G", "unfolding order_def"], ["proof (prove)\nusing this:\n  \\<one> \\<in> carrier G\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. 0 < card (carrier G)", "by (metis card_gt_0_iff subgroup_nonempty subgroup_self)"], ["proof (state)\nthis:\n  0 < order G\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iso_order_closed:\n  assumes \"\\<phi> \\<in> iso G H\"\n  shows \"order G = order H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order G = order H", "using assms"], ["proof (prove)\nusing this:\n  \\<phi> \\<in> Group.iso G H\n\ngoal (1 subgoal):\n 1. order G = order H", "unfolding order_def iso_def"], ["proof (prove)\nusing this:\n  \\<phi> \\<in> {h \\<in> hom G H. bij_betw h (carrier G) (carrier H)}\n\ngoal (1 subgoal):\n 1. card (carrier G) = card (carrier H)", "by (metis (no_types) bij_betw_same_card mem_Collect_eq)"], ["", "section \\<open>More Facts about Subgroups\\<close>"], ["", "lemma (in subgroup) subgroup_of_restricted_group:\n  assumes \"subgroup U (G\\<lparr> carrier := H\\<rparr>)\"\n  shows \"U \\<subseteq> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U \\<subseteq> H", "using assms subgroup.subset"], ["proof (prove)\nusing this:\n  subgroup U (G\\<lparr>carrier := H\\<rparr>)\n  subgroup ?H ?G \\<Longrightarrow> ?H \\<subseteq> carrier ?G\n\ngoal (1 subgoal):\n 1. U \\<subseteq> H", "by force"], ["", "lemma (in subgroup) subgroup_of_subgroup:\n  assumes \"group G\"\n  assumes \"subgroup U (G\\<lparr> carrier := H\\<rparr>)\"\n  shows \"subgroup U G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup U G", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. U \\<subseteq> carrier G\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> U; y \\<in> U\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> U\n 3. \\<one> \\<in> U\n 4. \\<And>x. x \\<in> U \\<Longrightarrow> inv x \\<in> U", "from assms(2)"], ["proof (chain)\npicking this:\n  subgroup U (G\\<lparr>carrier := H\\<rparr>)", "have \"U \\<subseteq> H\""], ["proof (prove)\nusing this:\n  subgroup U (G\\<lparr>carrier := H\\<rparr>)\n\ngoal (1 subgoal):\n 1. U \\<subseteq> H", "by (rule subgroup_of_restricted_group)"], ["proof (state)\nthis:\n  U \\<subseteq> H\n\ngoal (4 subgoals):\n 1. U \\<subseteq> carrier G\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> U; y \\<in> U\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> U\n 3. \\<one> \\<in> U\n 4. \\<And>x. x \\<in> U \\<Longrightarrow> inv x \\<in> U", "thus \"U \\<subseteq> carrier G\""], ["proof (prove)\nusing this:\n  U \\<subseteq> H\n\ngoal (1 subgoal):\n 1. U \\<subseteq> carrier G", "by (auto simp:subset)"], ["proof (state)\nthis:\n  U \\<subseteq> carrier G\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> U; y \\<in> U\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> U\n 2. \\<one> \\<in> U\n 3. \\<And>x. x \\<in> U \\<Longrightarrow> inv x \\<in> U", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> U; y \\<in> U\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> U\n 2. \\<one> \\<in> U\n 3. \\<And>x. x \\<in> U \\<Longrightarrow> inv x \\<in> U", "fix x y"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> U; y \\<in> U\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> U\n 2. \\<one> \\<in> U\n 3. \\<And>x. x \\<in> U \\<Longrightarrow> inv x \\<in> U", "have a:\"x \\<otimes> y = x \\<otimes>\\<^bsub>G\\<lparr> carrier := H\\<rparr>\\<^esub> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes> y =\n    x \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> y", "by simp"], ["proof (state)\nthis:\n  x \\<otimes> y = x \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> y\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> U; y \\<in> U\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> U\n 2. \\<one> \\<in> U\n 3. \\<And>x. x \\<in> U \\<Longrightarrow> inv x \\<in> U", "assume \"x \\<in> U\" \"y \\<in> U\""], ["proof (state)\nthis:\n  x \\<in> U\n  y \\<in> U\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> U; y \\<in> U\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> U\n 2. \\<one> \\<in> U\n 3. \\<And>x. x \\<in> U \\<Longrightarrow> inv x \\<in> U", "with assms a"], ["proof (chain)\npicking this:\n  Group.group G\n  subgroup U (G\\<lparr>carrier := H\\<rparr>)\n  x \\<otimes> y = x \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> y\n  x \\<in> U\n  y \\<in> U", "show \" x \\<otimes> y \\<in> U\""], ["proof (prove)\nusing this:\n  Group.group G\n  subgroup U (G\\<lparr>carrier := H\\<rparr>)\n  x \\<otimes> y = x \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> y\n  x \\<in> U\n  y \\<in> U\n\ngoal (1 subgoal):\n 1. x \\<otimes> y \\<in> U", "by (metis subgroup.m_closed)"], ["proof (state)\nthis:\n  x \\<otimes> y \\<in> U\n\ngoal (2 subgoals):\n 1. \\<one> \\<in> U\n 2. \\<And>x. x \\<in> U \\<Longrightarrow> inv x \\<in> U", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<one> \\<in> U\n 2. \\<And>x. x \\<in> U \\<Longrightarrow> inv x \\<in> U", "have \"\\<one>\\<^bsub>G\\<lparr> carrier := H\\<rparr>\\<^esub> = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> = \\<one>", "by simp"], ["proof (state)\nthis:\n  \\<one>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> = \\<one>\n\ngoal (2 subgoals):\n 1. \\<one> \\<in> U\n 2. \\<And>x. x \\<in> U \\<Longrightarrow> inv x \\<in> U", "with assms"], ["proof (chain)\npicking this:\n  Group.group G\n  subgroup U (G\\<lparr>carrier := H\\<rparr>)\n  \\<one>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> = \\<one>", "show \"\\<one> \\<in> U\""], ["proof (prove)\nusing this:\n  Group.group G\n  subgroup U (G\\<lparr>carrier := H\\<rparr>)\n  \\<one>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> = \\<one>\n\ngoal (1 subgoal):\n 1. \\<one> \\<in> U", "by (metis subgroup.one_closed)"], ["proof (state)\nthis:\n  \\<one> \\<in> U\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> U \\<Longrightarrow> inv x \\<in> U", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> U \\<Longrightarrow> inv x \\<in> U", "have \"subgroup H G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H G", ".."], ["proof (state)\nthis:\n  subgroup H G\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> U \\<Longrightarrow> inv x \\<in> U", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> U \\<Longrightarrow> inv x \\<in> U", "assume \"x \\<in> U\""], ["proof (state)\nthis:\n  x \\<in> U\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> U \\<Longrightarrow> inv x \\<in> U", "with assms(2)"], ["proof (chain)\npicking this:\n  subgroup U (G\\<lparr>carrier := H\\<rparr>)\n  x \\<in> U", "have \"inv\\<^bsub>G\\<lparr> carrier := H\\<rparr>\\<^esub> x \\<in> U\""], ["proof (prove)\nusing this:\n  subgroup U (G\\<lparr>carrier := H\\<rparr>)\n  x \\<in> U\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x \\<in> U", "by (rule subgroup.m_inv_closed)"], ["proof (state)\nthis:\n  inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x \\<in> U\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> U \\<Longrightarrow> inv x \\<in> U", "moreover"], ["proof (state)\nthis:\n  inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x \\<in> U\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> U \\<Longrightarrow> inv x \\<in> U", "from assms \\<open>x \\<in> U\\<close>"], ["proof (chain)\npicking this:\n  Group.group G\n  subgroup U (G\\<lparr>carrier := H\\<rparr>)\n  x \\<in> U", "have \"x \\<in> H\""], ["proof (prove)\nusing this:\n  Group.group G\n  subgroup U (G\\<lparr>carrier := H\\<rparr>)\n  x \\<in> U\n\ngoal (1 subgoal):\n 1. x \\<in> H", "by (metis in_mono subgroup_of_restricted_group)"], ["proof (state)\nthis:\n  x \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> U \\<Longrightarrow> inv x \\<in> U", "with assms(1) \\<open>subgroup H G\\<close>"], ["proof (chain)\npicking this:\n  Group.group G\n  subgroup H G\n  x \\<in> H", "have \"inv\\<^bsub>G\\<lparr> carrier := H\\<rparr>\\<^esub> x = inv x\""], ["proof (prove)\nusing this:\n  Group.group G\n  subgroup H G\n  x \\<in> H\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x = inv x", "by (rule group.m_inv_consistent)"], ["proof (state)\nthis:\n  inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x = inv x\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> U \\<Longrightarrow> inv x \\<in> U", "ultimately"], ["proof (chain)\npicking this:\n  inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x \\<in> U\n  inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x = inv x", "show \"inv x \\<in> U\""], ["proof (prove)\nusing this:\n  inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x \\<in> U\n  inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x = inv x\n\ngoal (1 subgoal):\n 1. inv x \\<in> U", "by simp"], ["proof (state)\nthis:\n  inv x \\<in> U\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Being a subgroup is preserved by surjective homomorphisms\\<close>"], ["", "lemma (in subgroup) surj_hom_subgroup:\n  assumes \\<phi>:\"group_hom G F \\<phi>\"\n  assumes \\<phi>surj:\"\\<phi> ` (carrier G) = carrier F\"\n  shows \"subgroup (\\<phi> ` H) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (\\<phi> ` H) F", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<phi> ` H \\<subseteq> carrier F\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<phi> ` H; y \\<in> \\<phi> ` H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub> y \\<in> \\<phi> ` H\n 3. \\<one>\\<^bsub>F\\<^esub> \\<in> \\<phi> ` H\n 4. \\<And>x.\n       x \\<in> \\<phi> ` H \\<Longrightarrow>\n       inv\\<^bsub>F\\<^esub> x \\<in> \\<phi> ` H", "from \\<phi>surj"], ["proof (chain)\npicking this:\n  \\<phi> ` carrier G = carrier F", "show img_subset:\"\\<phi> ` H \\<subseteq> carrier F\""], ["proof (prove)\nusing this:\n  \\<phi> ` carrier G = carrier F\n\ngoal (1 subgoal):\n 1. \\<phi> ` H \\<subseteq> carrier F", "unfolding iso_def bij_betw_def"], ["proof (prove)\nusing this:\n  \\<phi> ` carrier G = carrier F\n\ngoal (1 subgoal):\n 1. \\<phi> ` H \\<subseteq> carrier F", "by auto"], ["proof (state)\nthis:\n  \\<phi> ` H \\<subseteq> carrier F\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<phi> ` H; y \\<in> \\<phi> ` H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub> y \\<in> \\<phi> ` H\n 2. \\<one>\\<^bsub>F\\<^esub> \\<in> \\<phi> ` H\n 3. \\<And>x.\n       x \\<in> \\<phi> ` H \\<Longrightarrow>\n       inv\\<^bsub>F\\<^esub> x \\<in> \\<phi> ` H", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<phi> ` H; y \\<in> \\<phi> ` H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub> y \\<in> \\<phi> ` H\n 2. \\<one>\\<^bsub>F\\<^esub> \\<in> \\<phi> ` H\n 3. \\<And>x.\n       x \\<in> \\<phi> ` H \\<Longrightarrow>\n       inv\\<^bsub>F\\<^esub> x \\<in> \\<phi> ` H", "fix f f'"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<phi> ` H; y \\<in> \\<phi> ` H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub> y \\<in> \\<phi> ` H\n 2. \\<one>\\<^bsub>F\\<^esub> \\<in> \\<phi> ` H\n 3. \\<And>x.\n       x \\<in> \\<phi> ` H \\<Longrightarrow>\n       inv\\<^bsub>F\\<^esub> x \\<in> \\<phi> ` H", "assume h:\"f \\<in> \\<phi> ` H\" and h':\"f' \\<in> \\<phi> ` H\""], ["proof (state)\nthis:\n  f \\<in> \\<phi> ` H\n  f' \\<in> \\<phi> ` H\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<phi> ` H; y \\<in> \\<phi> ` H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub> y \\<in> \\<phi> ` H\n 2. \\<one>\\<^bsub>F\\<^esub> \\<in> \\<phi> ` H\n 3. \\<And>x.\n       x \\<in> \\<phi> ` H \\<Longrightarrow>\n       inv\\<^bsub>F\\<^esub> x \\<in> \\<phi> ` H", "with \\<phi>surj"], ["proof (chain)\npicking this:\n  \\<phi> ` carrier G = carrier F\n  f \\<in> \\<phi> ` H\n  f' \\<in> \\<phi> ` H", "obtain g g' where g:\"g \\<in> H\" \"f = \\<phi> g\" and g':\"g' \\<in> H\" \"f' = \\<phi> g'\""], ["proof (prove)\nusing this:\n  \\<phi> ` carrier G = carrier F\n  f \\<in> \\<phi> ` H\n  f' \\<in> \\<phi> ` H\n\ngoal (1 subgoal):\n 1. (\\<And>g g'.\n        \\<lbrakk>g \\<in> H; f = \\<phi> g; g' \\<in> H;\n         f' = \\<phi> g'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g \\<in> H\n  f = \\<phi> g\n  g' \\<in> H\n  f' = \\<phi> g'\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<phi> ` H; y \\<in> \\<phi> ` H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub> y \\<in> \\<phi> ` H\n 2. \\<one>\\<^bsub>F\\<^esub> \\<in> \\<phi> ` H\n 3. \\<And>x.\n       x \\<in> \\<phi> ` H \\<Longrightarrow>\n       inv\\<^bsub>F\\<^esub> x \\<in> \\<phi> ` H", "hence \"g \\<otimes>\\<^bsub>G\\<^esub> g' \\<in> H\""], ["proof (prove)\nusing this:\n  g \\<in> H\n  f = \\<phi> g\n  g' \\<in> H\n  f' = \\<phi> g'\n\ngoal (1 subgoal):\n 1. g \\<otimes> g' \\<in> H", "by (metis m_closed)"], ["proof (state)\nthis:\n  g \\<otimes> g' \\<in> H\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<phi> ` H; y \\<in> \\<phi> ` H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub> y \\<in> \\<phi> ` H\n 2. \\<one>\\<^bsub>F\\<^esub> \\<in> \\<phi> ` H\n 3. \\<And>x.\n       x \\<in> \\<phi> ` H \\<Longrightarrow>\n       inv\\<^bsub>F\\<^esub> x \\<in> \\<phi> ` H", "hence \"\\<phi> (g \\<otimes>\\<^bsub>G\\<^esub> g') \\<in> \\<phi> ` H\""], ["proof (prove)\nusing this:\n  g \\<otimes> g' \\<in> H\n\ngoal (1 subgoal):\n 1. \\<phi> (g \\<otimes> g') \\<in> \\<phi> ` H", "by simp"], ["proof (state)\nthis:\n  \\<phi> (g \\<otimes> g') \\<in> \\<phi> ` H\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> \\<phi> ` H; y \\<in> \\<phi> ` H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub> y \\<in> \\<phi> ` H\n 2. \\<one>\\<^bsub>F\\<^esub> \\<in> \\<phi> ` H\n 3. \\<And>x.\n       x \\<in> \\<phi> ` H \\<Longrightarrow>\n       inv\\<^bsub>F\\<^esub> x \\<in> \\<phi> ` H", "with g g' \\<phi>"], ["proof (chain)\npicking this:\n  g \\<in> H\n  f = \\<phi> g\n  g' \\<in> H\n  f' = \\<phi> g'\n  group_hom G F \\<phi>\n  \\<phi> (g \\<otimes> g') \\<in> \\<phi> ` H", "show \"f \\<otimes>\\<^bsub>F\\<^esub> f' \\<in> \\<phi> ` H\""], ["proof (prove)\nusing this:\n  g \\<in> H\n  f = \\<phi> g\n  g' \\<in> H\n  f' = \\<phi> g'\n  group_hom G F \\<phi>\n  \\<phi> (g \\<otimes> g') \\<in> \\<phi> ` H\n\ngoal (1 subgoal):\n 1. f \\<otimes>\\<^bsub>F\\<^esub> f' \\<in> \\<phi> ` H", "using group_hom.hom_mult"], ["proof (prove)\nusing this:\n  g \\<in> H\n  f = \\<phi> g\n  g' \\<in> H\n  f' = \\<phi> g'\n  group_hom G F \\<phi>\n  \\<phi> (g \\<otimes> g') \\<in> \\<phi> ` H\n  \\<lbrakk>group_hom ?G ?H ?h; ?x \\<in> carrier ?G;\n   ?y \\<in> carrier ?G\\<rbrakk>\n  \\<Longrightarrow> ?h (?x \\<otimes>\\<^bsub>?G\\<^esub> ?y) =\n                    ?h ?x \\<otimes>\\<^bsub>?H\\<^esub> ?h ?y\n\ngoal (1 subgoal):\n 1. f \\<otimes>\\<^bsub>F\\<^esub> f' \\<in> \\<phi> ` H", "by fastforce"], ["proof (state)\nthis:\n  f \\<otimes>\\<^bsub>F\\<^esub> f' \\<in> \\<phi> ` H\n\ngoal (2 subgoals):\n 1. \\<one>\\<^bsub>F\\<^esub> \\<in> \\<phi> ` H\n 2. \\<And>x.\n       x \\<in> \\<phi> ` H \\<Longrightarrow>\n       inv\\<^bsub>F\\<^esub> x \\<in> \\<phi> ` H", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<one>\\<^bsub>F\\<^esub> \\<in> \\<phi> ` H\n 2. \\<And>x.\n       x \\<in> \\<phi> ` H \\<Longrightarrow>\n       inv\\<^bsub>F\\<^esub> x \\<in> \\<phi> ` H", "have \"\\<phi> \\<one> \\<in> \\<phi> ` H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> \\<one> \\<in> \\<phi> ` H", "by auto"], ["proof (state)\nthis:\n  \\<phi> \\<one> \\<in> \\<phi> ` H\n\ngoal (2 subgoals):\n 1. \\<one>\\<^bsub>F\\<^esub> \\<in> \\<phi> ` H\n 2. \\<And>x.\n       x \\<in> \\<phi> ` H \\<Longrightarrow>\n       inv\\<^bsub>F\\<^esub> x \\<in> \\<phi> ` H", "with \\<phi>"], ["proof (chain)\npicking this:\n  group_hom G F \\<phi>\n  \\<phi> \\<one> \\<in> \\<phi> ` H", "show  \"\\<one>\\<^bsub>F\\<^esub> \\<in> \\<phi> ` H\""], ["proof (prove)\nusing this:\n  group_hom G F \\<phi>\n  \\<phi> \\<one> \\<in> \\<phi> ` H\n\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>F\\<^esub> \\<in> \\<phi> ` H", "by (metis group_hom.hom_one)"], ["proof (state)\nthis:\n  \\<one>\\<^bsub>F\\<^esub> \\<in> \\<phi> ` H\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<phi> ` H \\<Longrightarrow>\n       inv\\<^bsub>F\\<^esub> x \\<in> \\<phi> ` H", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<phi> ` H \\<Longrightarrow>\n       inv\\<^bsub>F\\<^esub> x \\<in> \\<phi> ` H", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<phi> ` H \\<Longrightarrow>\n       inv\\<^bsub>F\\<^esub> x \\<in> \\<phi> ` H", "assume f:\"f \\<in> \\<phi> ` H\""], ["proof (state)\nthis:\n  f \\<in> \\<phi> ` H\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<phi> ` H \\<Longrightarrow>\n       inv\\<^bsub>F\\<^esub> x \\<in> \\<phi> ` H", "then"], ["proof (chain)\npicking this:\n  f \\<in> \\<phi> ` H", "obtain g where g:\"g \\<in> H\" \"f = \\<phi> g\""], ["proof (prove)\nusing this:\n  f \\<in> \\<phi> ` H\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> H; f = \\<phi> g\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g \\<in> H\n  f = \\<phi> g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<phi> ` H \\<Longrightarrow>\n       inv\\<^bsub>F\\<^esub> x \\<in> \\<phi> ` H", "hence \"inv g \\<in> H\""], ["proof (prove)\nusing this:\n  g \\<in> H\n  f = \\<phi> g\n\ngoal (1 subgoal):\n 1. inv g \\<in> H", "by auto"], ["proof (state)\nthis:\n  inv g \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<phi> ` H \\<Longrightarrow>\n       inv\\<^bsub>F\\<^esub> x \\<in> \\<phi> ` H", "hence \"\\<phi> (inv g) \\<in> \\<phi> ` H\""], ["proof (prove)\nusing this:\n  inv g \\<in> H\n\ngoal (1 subgoal):\n 1. \\<phi> (inv g) \\<in> \\<phi> ` H", "by auto"], ["proof (state)\nthis:\n  \\<phi> (inv g) \\<in> \\<phi> ` H\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<phi> ` H \\<Longrightarrow>\n       inv\\<^bsub>F\\<^esub> x \\<in> \\<phi> ` H", "with \\<phi> g subset"], ["proof (chain)\npicking this:\n  group_hom G F \\<phi>\n  g \\<in> H\n  f = \\<phi> g\n  H \\<subseteq> carrier G\n  \\<phi> (inv g) \\<in> \\<phi> ` H", "show \"inv\\<^bsub>F\\<^esub> f \\<in> \\<phi> ` H\""], ["proof (prove)\nusing this:\n  group_hom G F \\<phi>\n  g \\<in> H\n  f = \\<phi> g\n  H \\<subseteq> carrier G\n  \\<phi> (inv g) \\<in> \\<phi> ` H\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>F\\<^esub> f \\<in> \\<phi> ` H", "using group_hom.hom_inv"], ["proof (prove)\nusing this:\n  group_hom G F \\<phi>\n  g \\<in> H\n  f = \\<phi> g\n  H \\<subseteq> carrier G\n  \\<phi> (inv g) \\<in> \\<phi> ` H\n  \\<lbrakk>group_hom ?G ?H ?h; ?x \\<in> carrier ?G\\<rbrakk>\n  \\<Longrightarrow> ?h (inv\\<^bsub>?G\\<^esub> ?x) =\n                    inv\\<^bsub>?H\\<^esub> ?h ?x\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>F\\<^esub> f \\<in> \\<phi> ` H", "by fastforce"], ["proof (state)\nthis:\n  inv\\<^bsub>F\\<^esub> f \\<in> \\<phi> ` H\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>... and thus of course by isomorphisms of groups.\\<close>"], ["", "lemma iso_subgroup:\n  assumes groups:\"group G\" \"group F\"\n  assumes HG:\"subgroup H G\"\n  assumes \\<phi>:\"\\<phi> \\<in> iso G F\"\n  shows \"subgroup (\\<phi> ` H) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (\\<phi> ` H) F", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subgroup (\\<phi> ` H) F", "from groups \\<phi>"], ["proof (chain)\npicking this:\n  Group.group G\n  Group.group F\n  \\<phi> \\<in> Group.iso G F", "have \"group_hom G F \\<phi>\""], ["proof (prove)\nusing this:\n  Group.group G\n  Group.group F\n  \\<phi> \\<in> Group.iso G F\n\ngoal (1 subgoal):\n 1. group_hom G F \\<phi>", "unfolding group_hom_def group_hom_axioms_def iso_def"], ["proof (prove)\nusing this:\n  Group.group G\n  Group.group F\n  \\<phi> \\<in> {h \\<in> hom G F. bij_betw h (carrier G) (carrier F)}\n\ngoal (1 subgoal):\n 1. Group.group G \\<and> Group.group F \\<and> \\<phi> \\<in> hom G F", "by auto"], ["proof (state)\nthis:\n  group_hom G F \\<phi>\n\ngoal (1 subgoal):\n 1. subgroup (\\<phi> ` H) F", "moreover"], ["proof (state)\nthis:\n  group_hom G F \\<phi>\n\ngoal (1 subgoal):\n 1. subgroup (\\<phi> ` H) F", "from \\<phi>"], ["proof (chain)\npicking this:\n  \\<phi> \\<in> Group.iso G F", "have \"\\<phi> ` (carrier G) = carrier F\""], ["proof (prove)\nusing this:\n  \\<phi> \\<in> Group.iso G F\n\ngoal (1 subgoal):\n 1. \\<phi> ` carrier G = carrier F", "unfolding iso_def bij_betw_def"], ["proof (prove)\nusing this:\n  \\<phi>\n  \\<in> {h \\<in> hom G F.\n         inj_on h (carrier G) \\<and> h ` carrier G = carrier F}\n\ngoal (1 subgoal):\n 1. \\<phi> ` carrier G = carrier F", "by simp"], ["proof (state)\nthis:\n  \\<phi> ` carrier G = carrier F\n\ngoal (1 subgoal):\n 1. subgroup (\\<phi> ` H) F", "moreover"], ["proof (state)\nthis:\n  \\<phi> ` carrier G = carrier F\n\ngoal (1 subgoal):\n 1. subgroup (\\<phi> ` H) F", "note HG"], ["proof (state)\nthis:\n  subgroup H G\n\ngoal (1 subgoal):\n 1. subgroup (\\<phi> ` H) F", "ultimately"], ["proof (chain)\npicking this:\n  group_hom G F \\<phi>\n  \\<phi> ` carrier G = carrier F\n  subgroup H G", "show ?thesis"], ["proof (prove)\nusing this:\n  group_hom G F \\<phi>\n  \\<phi> ` carrier G = carrier F\n  subgroup H G\n\ngoal (1 subgoal):\n 1. subgroup (\\<phi> ` H) F", "by (metis subgroup.surj_hom_subgroup)"], ["proof (state)\nthis:\n  subgroup (\\<phi> ` H) F\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>An isomorphism restricts to an isomorphism of subgroups.\\<close>"], ["", "lemma iso_restrict:\n  assumes groups:\"group G\" \"group F\"\n  assumes HG:\"subgroup H G\"\n  assumes \\<phi>:\"\\<phi> \\<in> iso G F\"\n  shows \"(restrict \\<phi> H) \\<in> iso (G\\<lparr>carrier := H\\<rparr>) (F\\<lparr>carrier := \\<phi> ` H\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict \\<phi> H\n    \\<in> Group.iso (G\\<lparr>carrier := H\\<rparr>)\n           (F\\<lparr>carrier := \\<phi> ` H\\<rparr>)", "unfolding iso_def hom_def bij_betw_def inj_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict \\<phi> H\n    \\<in> {h \\<in> {h \\<in> carrier\n                             (G\\<lparr>carrier := H\\<rparr>) \\<rightarrow>\n                            carrier\n                             (F\\<lparr>carrier := \\<phi> ` H\\<rparr>).\n                    \\<forall>x\\<in>carrier (G\\<lparr>carrier := H\\<rparr>).\n                       \\<forall>y\\<in>carrier\n (G\\<lparr>carrier := H\\<rparr>).\n                          h (x \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>\n                             y) =\n                          h x \\<otimes>\\<^bsub>F\\<lparr>carrier := \\<phi> ` H\\<rparr>\\<^esub>\n                          h y}.\n           (\\<forall>x\\<in>carrier (G\\<lparr>carrier := H\\<rparr>).\n               \\<forall>y\\<in>carrier (G\\<lparr>carrier := H\\<rparr>).\n                  h x = h y \\<longrightarrow> x = y) \\<and>\n           h ` carrier (G\\<lparr>carrier := H\\<rparr>) =\n           carrier (F\\<lparr>carrier := \\<phi> ` H\\<rparr>)}", "proof auto"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H;\n        x \\<otimes>\\<^bsub>G\\<^esub> y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n                         \\<phi> x \\<otimes>\\<^bsub>F\\<^esub> \\<phi> y\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H;\n        x \\<otimes>\\<^bsub>G\\<^esub> y \\<notin> H\\<rbrakk>\n       \\<Longrightarrow> undefined =\n                         \\<phi> x \\<otimes>\\<^bsub>F\\<^esub> \\<phi> y\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H; \\<phi> x = \\<phi> y\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix g h"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H;\n        x \\<otimes>\\<^bsub>G\\<^esub> y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n                         \\<phi> x \\<otimes>\\<^bsub>F\\<^esub> \\<phi> y\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H;\n        x \\<otimes>\\<^bsub>G\\<^esub> y \\<notin> H\\<rbrakk>\n       \\<Longrightarrow> undefined =\n                         \\<phi> x \\<otimes>\\<^bsub>F\\<^esub> \\<phi> y\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H; \\<phi> x = \\<phi> y\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume \"g \\<in> H\" \"h \\<in> H\""], ["proof (state)\nthis:\n  g \\<in> H\n  h \\<in> H\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H;\n        x \\<otimes>\\<^bsub>G\\<^esub> y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n                         \\<phi> x \\<otimes>\\<^bsub>F\\<^esub> \\<phi> y\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H;\n        x \\<otimes>\\<^bsub>G\\<^esub> y \\<notin> H\\<rbrakk>\n       \\<Longrightarrow> undefined =\n                         \\<phi> x \\<otimes>\\<^bsub>F\\<^esub> \\<phi> y\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H; \\<phi> x = \\<phi> y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence \"g \\<in> carrier G\" \"h \\<in> carrier G\""], ["proof (prove)\nusing this:\n  g \\<in> H\n  h \\<in> H\n\ngoal (1 subgoal):\n 1. g \\<in> carrier G &&& h \\<in> carrier G", "by (metis HG subgroup.mem_carrier)+"], ["proof (state)\nthis:\n  g \\<in> carrier G\n  h \\<in> carrier G\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H;\n        x \\<otimes>\\<^bsub>G\\<^esub> y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> \\<phi> (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n                         \\<phi> x \\<otimes>\\<^bsub>F\\<^esub> \\<phi> y\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H;\n        x \\<otimes>\\<^bsub>G\\<^esub> y \\<notin> H\\<rbrakk>\n       \\<Longrightarrow> undefined =\n                         \\<phi> x \\<otimes>\\<^bsub>F\\<^esub> \\<phi> y\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H; \\<phi> x = \\<phi> y\\<rbrakk>\n       \\<Longrightarrow> x = y", "thus \"\\<phi> (g \\<otimes>\\<^bsub>G\\<^esub> h) = \\<phi> g \\<otimes>\\<^bsub>F\\<^esub> \\<phi> h\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<phi> (g \\<otimes>\\<^bsub>G\\<^esub> h) =\n    \\<phi> g \\<otimes>\\<^bsub>F\\<^esub> \\<phi> h", "using \\<phi>"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  h \\<in> carrier G\n  \\<phi> \\<in> Group.iso G F\n\ngoal (1 subgoal):\n 1. \\<phi> (g \\<otimes>\\<^bsub>G\\<^esub> h) =\n    \\<phi> g \\<otimes>\\<^bsub>F\\<^esub> \\<phi> h", "unfolding iso_def hom_def"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  h \\<in> carrier G\n  \\<phi>\n  \\<in> {h \\<in> {h \\<in> carrier G \\<rightarrow> carrier F.\n                  \\<forall>x\\<in>carrier G.\n                     \\<forall>y\\<in>carrier G.\n                        h (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n                        h x \\<otimes>\\<^bsub>F\\<^esub> h y}.\n         bij_betw h (carrier G) (carrier F)}\n\ngoal (1 subgoal):\n 1. \\<phi> (g \\<otimes>\\<^bsub>G\\<^esub> h) =\n    \\<phi> g \\<otimes>\\<^bsub>F\\<^esub> \\<phi> h", "by auto"], ["proof (state)\nthis:\n  \\<phi> (g \\<otimes>\\<^bsub>G\\<^esub> h) =\n  \\<phi> g \\<otimes>\\<^bsub>F\\<^esub> \\<phi> h\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H;\n        x \\<otimes>\\<^bsub>G\\<^esub> y \\<notin> H\\<rbrakk>\n       \\<Longrightarrow> undefined =\n                         \\<phi> x \\<otimes>\\<^bsub>F\\<^esub> \\<phi> y\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H; \\<phi> x = \\<phi> y\\<rbrakk>\n       \\<Longrightarrow> x = y", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H;\n        x \\<otimes>\\<^bsub>G\\<^esub> y \\<notin> H\\<rbrakk>\n       \\<Longrightarrow> undefined =\n                         \\<phi> x \\<otimes>\\<^bsub>F\\<^esub> \\<phi> y\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H; \\<phi> x = \\<phi> y\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix g h"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H;\n        x \\<otimes>\\<^bsub>G\\<^esub> y \\<notin> H\\<rbrakk>\n       \\<Longrightarrow> undefined =\n                         \\<phi> x \\<otimes>\\<^bsub>F\\<^esub> \\<phi> y\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H; \\<phi> x = \\<phi> y\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume \"g \\<in> H\" \"h \\<in> H\" \"g \\<otimes>\\<^bsub>G\\<^esub> h \\<notin> H\""], ["proof (state)\nthis:\n  g \\<in> H\n  h \\<in> H\n  g \\<otimes>\\<^bsub>G\\<^esub> h \\<notin> H\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H;\n        x \\<otimes>\\<^bsub>G\\<^esub> y \\<notin> H\\<rbrakk>\n       \\<Longrightarrow> undefined =\n                         \\<phi> x \\<otimes>\\<^bsub>F\\<^esub> \\<phi> y\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H; \\<phi> x = \\<phi> y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence \"False\""], ["proof (prove)\nusing this:\n  g \\<in> H\n  h \\<in> H\n  g \\<otimes>\\<^bsub>G\\<^esub> h \\<notin> H\n\ngoal (1 subgoal):\n 1. False", "using HG"], ["proof (prove)\nusing this:\n  g \\<in> H\n  h \\<in> H\n  g \\<otimes>\\<^bsub>G\\<^esub> h \\<notin> H\n  subgroup H G\n\ngoal (1 subgoal):\n 1. False", "unfolding subgroup_def"], ["proof (prove)\nusing this:\n  g \\<in> H\n  h \\<in> H\n  g \\<otimes>\\<^bsub>G\\<^esub> h \\<notin> H\n  (H \\<subseteq> carrier G \\<and>\n   (\\<forall>x y.\n       x \\<in> H \\<longrightarrow>\n       y \\<in> H \\<longrightarrow>\n       x \\<otimes>\\<^bsub>G\\<^esub> y \\<in> H)) \\<and>\n  \\<one>\\<^bsub>G\\<^esub> \\<in> H \\<and>\n  (\\<forall>x. x \\<in> H \\<longrightarrow> inv\\<^bsub>G\\<^esub> x \\<in> H)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H;\n        x \\<otimes>\\<^bsub>G\\<^esub> y \\<notin> H\\<rbrakk>\n       \\<Longrightarrow> undefined =\n                         \\<phi> x \\<otimes>\\<^bsub>F\\<^esub> \\<phi> y\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H; \\<phi> x = \\<phi> y\\<rbrakk>\n       \\<Longrightarrow> x = y", "thus \"undefined = \\<phi> g \\<otimes>\\<^bsub>F\\<^esub> \\<phi> h\""], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. undefined = \\<phi> g \\<otimes>\\<^bsub>F\\<^esub> \\<phi> h", "by auto"], ["proof (state)\nthis:\n  undefined = \\<phi> g \\<otimes>\\<^bsub>F\\<^esub> \\<phi> h\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H; \\<phi> x = \\<phi> y\\<rbrakk>\n       \\<Longrightarrow> x = y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H; \\<phi> x = \\<phi> y\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix g h"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H; \\<phi> x = \\<phi> y\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume g:\"g \\<in> H\" and h:\"h \\<in> H\" and eq:\"\\<phi> g = \\<phi> h\""], ["proof (state)\nthis:\n  g \\<in> H\n  h \\<in> H\n  \\<phi> g = \\<phi> h\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H; \\<phi> x = \\<phi> y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence \"g \\<in> carrier G\" \"h \\<in> carrier G\""], ["proof (prove)\nusing this:\n  g \\<in> H\n  h \\<in> H\n  \\<phi> g = \\<phi> h\n\ngoal (1 subgoal):\n 1. g \\<in> carrier G &&& h \\<in> carrier G", "by (metis HG subgroup.mem_carrier)+"], ["proof (state)\nthis:\n  g \\<in> carrier G\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H; \\<phi> x = \\<phi> y\\<rbrakk>\n       \\<Longrightarrow> x = y", "with eq"], ["proof (chain)\npicking this:\n  \\<phi> g = \\<phi> h\n  g \\<in> carrier G\n  h \\<in> carrier G", "show \"g = h\""], ["proof (prove)\nusing this:\n  \\<phi> g = \\<phi> h\n  g \\<in> carrier G\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. g = h", "using \\<phi>"], ["proof (prove)\nusing this:\n  \\<phi> g = \\<phi> h\n  g \\<in> carrier G\n  h \\<in> carrier G\n  \\<phi> \\<in> Group.iso G F\n\ngoal (1 subgoal):\n 1. g = h", "unfolding iso_def bij_betw_def inj_on_def"], ["proof (prove)\nusing this:\n  \\<phi> g = \\<phi> h\n  g \\<in> carrier G\n  h \\<in> carrier G\n  \\<phi>\n  \\<in> {h \\<in> hom G F.\n         (\\<forall>x\\<in>carrier G.\n             \\<forall>y\\<in>carrier G.\n                h x = h y \\<longrightarrow> x = y) \\<and>\n         h ` carrier G = carrier F}\n\ngoal (1 subgoal):\n 1. g = h", "by auto"], ["proof (state)\nthis:\n  g = h\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The intersection of two subgroups is, again, a subgroup\\<close>"], ["", "lemma (in group) subgroup_intersect:\n  assumes \"subgroup H G\"\n  assumes \"subgroup H' G\"\n  shows \"subgroup (H \\<inter> H') G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (H \\<inter> H') G", "using assms"], ["proof (prove)\nusing this:\n  subgroup H G\n  subgroup H' G\n\ngoal (1 subgoal):\n 1. subgroup (H \\<inter> H') G", "unfolding subgroup_def"], ["proof (prove)\nusing this:\n  (H \\<subseteq> carrier G \\<and>\n   (\\<forall>x y.\n       x \\<in> H \\<longrightarrow>\n       y \\<in> H \\<longrightarrow> x \\<otimes> y \\<in> H)) \\<and>\n  \\<one> \\<in> H \\<and>\n  (\\<forall>x. x \\<in> H \\<longrightarrow> inv x \\<in> H)\n  (H' \\<subseteq> carrier G \\<and>\n   (\\<forall>x y.\n       x \\<in> H' \\<longrightarrow>\n       y \\<in> H' \\<longrightarrow> x \\<otimes> y \\<in> H')) \\<and>\n  \\<one> \\<in> H' \\<and>\n  (\\<forall>x. x \\<in> H' \\<longrightarrow> inv x \\<in> H')\n\ngoal (1 subgoal):\n 1. (H \\<inter> H' \\<subseteq> carrier G \\<and>\n     (\\<forall>x y.\n         x \\<in> H \\<inter> H' \\<longrightarrow>\n         y \\<in> H \\<inter> H' \\<longrightarrow>\n         x \\<otimes> y \\<in> H \\<inter> H')) \\<and>\n    \\<one> \\<in> H \\<inter> H' \\<and>\n    (\\<forall>x.\n        x \\<in> H \\<inter> H' \\<longrightarrow> inv x \\<in> H \\<inter> H')", "by auto"], ["", "section \\<open>Facts about Normal Subgroups\\<close>"], ["", "lemma (in normal) is_normal:\n  shows \"H \\<lhd> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<lhd> G", "by (metis coset_eq is_subgroup normalI)"], ["", "text \\<open>Being a normal subgroup is preserved by surjective homomorphisms.\\<close>"], ["", "lemma (in normal) surj_hom_normal_subgroup:\n  assumes \\<phi>:\"group_hom G F \\<phi>\"\n  assumes \\<phi>surj:\"\\<phi> ` (carrier G) = carrier F\"\n  shows \"(\\<phi> ` H) \\<lhd> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> ` H \\<lhd> F", "proof (rule group.normalI)"], ["proof (state)\ngoal (3 subgoals):\n 1. Group.group F\n 2. subgroup (\\<phi> ` H) F\n 3. \\<forall>x\\<in>carrier F.\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "from \\<phi>"], ["proof (chain)\npicking this:\n  group_hom G F \\<phi>", "show \"group F\""], ["proof (prove)\nusing this:\n  group_hom G F \\<phi>\n\ngoal (1 subgoal):\n 1. Group.group F", "unfolding group_hom_def group_hom_axioms_def"], ["proof (prove)\nusing this:\n  Group.group G \\<and> Group.group F \\<and> \\<phi> \\<in> hom G F\n\ngoal (1 subgoal):\n 1. Group.group F", "by simp"], ["proof (state)\nthis:\n  Group.group F\n\ngoal (2 subgoals):\n 1. subgroup (\\<phi> ` H) F\n 2. \\<forall>x\\<in>carrier F.\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. subgroup (\\<phi> ` H) F\n 2. \\<forall>x\\<in>carrier F.\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "from \\<phi> \\<phi>surj"], ["proof (chain)\npicking this:\n  group_hom G F \\<phi>\n  \\<phi> ` carrier G = carrier F", "show \"subgroup (\\<phi> ` H) F\""], ["proof (prove)\nusing this:\n  group_hom G F \\<phi>\n  \\<phi> ` carrier G = carrier F\n\ngoal (1 subgoal):\n 1. subgroup (\\<phi> ` H) F", "by (rule surj_hom_subgroup)"], ["proof (state)\nthis:\n  subgroup (\\<phi> ` H) F\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>carrier F.\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>carrier F.\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "show \"\\<forall>x\\<in>carrier F. \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>carrier F.\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "assume f:\"f \\<in> carrier F\""], ["proof (state)\nthis:\n  f \\<in> carrier F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "with \\<phi>surj"], ["proof (chain)\npicking this:\n  \\<phi> ` carrier G = carrier F\n  f \\<in> carrier F", "obtain g where g:\"g \\<in> carrier G\" \"f = \\<phi> g\""], ["proof (prove)\nusing this:\n  \\<phi> ` carrier G = carrier F\n  f \\<in> carrier F\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; f = \\<phi> g\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g \\<in> carrier G\n  f = \\<phi> g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "hence \"\\<phi> ` H #>\\<^bsub>F\\<^esub> f = \\<phi> ` H #>\\<^bsub>F\\<^esub> \\<phi> g\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  f = \\<phi> g\n\ngoal (1 subgoal):\n 1. \\<phi> ` H #>\\<^bsub>F\\<^esub> f =\n    \\<phi> ` H #>\\<^bsub>F\\<^esub> \\<phi> g", "by simp"], ["proof (state)\nthis:\n  \\<phi> ` H #>\\<^bsub>F\\<^esub> f = \\<phi> ` H #>\\<^bsub>F\\<^esub> \\<phi> g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "also"], ["proof (state)\nthis:\n  \\<phi> ` H #>\\<^bsub>F\\<^esub> f = \\<phi> ` H #>\\<^bsub>F\\<^esub> \\<phi> g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "have \"... = (\\<lambda>x. (\\<phi> x) \\<otimes>\\<^bsub>F\\<^esub> (\\<phi> g)) ` H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> ` H #>\\<^bsub>F\\<^esub> \\<phi> g =\n    (\\<lambda>x. \\<phi> x \\<otimes>\\<^bsub>F\\<^esub> \\<phi> g) ` H", "unfolding r_coset_def image_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union>\n     {y. \\<exists>x\\<in>{y. \\<exists>x\\<in>H. y = \\<phi> x}.\n            y = {x \\<otimes>\\<^bsub>F\\<^esub> \\<phi> g}} =\n    {y. \\<exists>x\\<in>H. y = \\<phi> x \\<otimes>\\<^bsub>F\\<^esub> \\<phi> g}", "by auto"], ["proof (state)\nthis:\n  \\<phi> ` H #>\\<^bsub>F\\<^esub> \\<phi> g =\n  (\\<lambda>x. \\<phi> x \\<otimes>\\<^bsub>F\\<^esub> \\<phi> g) ` H\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "also"], ["proof (state)\nthis:\n  \\<phi> ` H #>\\<^bsub>F\\<^esub> \\<phi> g =\n  (\\<lambda>x. \\<phi> x \\<otimes>\\<^bsub>F\\<^esub> \\<phi> g) ` H\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "have \"... = (\\<lambda>x. \\<phi> (x \\<otimes> g)) ` H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<phi> x \\<otimes>\\<^bsub>F\\<^esub> \\<phi> g) ` H =\n    (\\<lambda>x. \\<phi> (x \\<otimes> g)) ` H", "using subset g \\<phi> group_hom.hom_mult"], ["proof (prove)\nusing this:\n  H \\<subseteq> carrier G\n  g \\<in> carrier G\n  f = \\<phi> g\n  group_hom G F \\<phi>\n  \\<lbrakk>group_hom ?G ?H ?h; ?x \\<in> carrier ?G;\n   ?y \\<in> carrier ?G\\<rbrakk>\n  \\<Longrightarrow> ?h (?x \\<otimes>\\<^bsub>?G\\<^esub> ?y) =\n                    ?h ?x \\<otimes>\\<^bsub>?H\\<^esub> ?h ?y\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<phi> x \\<otimes>\\<^bsub>F\\<^esub> \\<phi> g) ` H =\n    (\\<lambda>x. \\<phi> (x \\<otimes> g)) ` H", "unfolding image_def"], ["proof (prove)\nusing this:\n  H \\<subseteq> carrier G\n  g \\<in> carrier G\n  f = \\<phi> g\n  group_hom G F \\<phi>\n  \\<lbrakk>group_hom ?G ?H ?h; ?x \\<in> carrier ?G;\n   ?y \\<in> carrier ?G\\<rbrakk>\n  \\<Longrightarrow> ?h (?x \\<otimes>\\<^bsub>?G\\<^esub> ?y) =\n                    ?h ?x \\<otimes>\\<^bsub>?H\\<^esub> ?h ?y\n\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>H.\n           y = \\<phi> x \\<otimes>\\<^bsub>F\\<^esub> \\<phi> g} =\n    {y. \\<exists>x\\<in>H. y = \\<phi> (x \\<otimes> g)}", "by fastforce"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<phi> x \\<otimes>\\<^bsub>F\\<^esub> \\<phi> g) ` H =\n  (\\<lambda>x. \\<phi> (x \\<otimes> g)) ` H\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<phi> x \\<otimes>\\<^bsub>F\\<^esub> \\<phi> g) ` H =\n  (\\<lambda>x. \\<phi> (x \\<otimes> g)) ` H\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "have \"... = \\<phi> ` (H #> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<phi> (x \\<otimes> g)) ` H = \\<phi> ` (H #> g)", "using \\<phi>"], ["proof (prove)\nusing this:\n  group_hom G F \\<phi>\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<phi> (x \\<otimes> g)) ` H = \\<phi> ` (H #> g)", "unfolding r_coset_def"], ["proof (prove)\nusing this:\n  group_hom G F \\<phi>\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<phi> (x \\<otimes> g)) ` H =\n    \\<phi> ` (\\<Union>h\\<in>H. {h \\<otimes> g})", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<phi> (x \\<otimes> g)) ` H = \\<phi> ` (H #> g)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<phi> (x \\<otimes> g)) ` H = \\<phi> ` (H #> g)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "have \"... = \\<phi> ` (g <# H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> ` (H #> g) = \\<phi> ` (g <# H)", "by (metis coset_eq g(1))"], ["proof (state)\nthis:\n  \\<phi> ` (H #> g) = \\<phi> ` (g <# H)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "also"], ["proof (state)\nthis:\n  \\<phi> ` (H #> g) = \\<phi> ` (g <# H)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "have \"... = (\\<lambda>x. \\<phi> (g \\<otimes> x)) ` H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> ` (g <# H) = (\\<lambda>x. \\<phi> (g \\<otimes> x)) ` H", "using \\<phi>"], ["proof (prove)\nusing this:\n  group_hom G F \\<phi>\n\ngoal (1 subgoal):\n 1. \\<phi> ` (g <# H) = (\\<lambda>x. \\<phi> (g \\<otimes> x)) ` H", "unfolding l_coset_def"], ["proof (prove)\nusing this:\n  group_hom G F \\<phi>\n\ngoal (1 subgoal):\n 1. \\<phi> ` (\\<Union>h\\<in>H. {g \\<otimes> h}) =\n    (\\<lambda>x. \\<phi> (g \\<otimes> x)) ` H", "by auto"], ["proof (state)\nthis:\n  \\<phi> ` (g <# H) = (\\<lambda>x. \\<phi> (g \\<otimes> x)) ` H\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "also"], ["proof (state)\nthis:\n  \\<phi> ` (g <# H) = (\\<lambda>x. \\<phi> (g \\<otimes> x)) ` H\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "have \"... = (\\<lambda>x. (\\<phi> g) \\<otimes>\\<^bsub>F\\<^esub> (\\<phi> x)) ` H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<phi> (g \\<otimes> x)) ` H =\n    (\\<lambda>x. \\<phi> g \\<otimes>\\<^bsub>F\\<^esub> \\<phi> x) ` H", "using subset g \\<phi> group_hom.hom_mult"], ["proof (prove)\nusing this:\n  H \\<subseteq> carrier G\n  g \\<in> carrier G\n  f = \\<phi> g\n  group_hom G F \\<phi>\n  \\<lbrakk>group_hom ?G ?H ?h; ?x \\<in> carrier ?G;\n   ?y \\<in> carrier ?G\\<rbrakk>\n  \\<Longrightarrow> ?h (?x \\<otimes>\\<^bsub>?G\\<^esub> ?y) =\n                    ?h ?x \\<otimes>\\<^bsub>?H\\<^esub> ?h ?y\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<phi> (g \\<otimes> x)) ` H =\n    (\\<lambda>x. \\<phi> g \\<otimes>\\<^bsub>F\\<^esub> \\<phi> x) ` H", "by fastforce"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<phi> (g \\<otimes> x)) ` H =\n  (\\<lambda>x. \\<phi> g \\<otimes>\\<^bsub>F\\<^esub> \\<phi> x) ` H\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<phi> (g \\<otimes> x)) ` H =\n  (\\<lambda>x. \\<phi> g \\<otimes>\\<^bsub>F\\<^esub> \\<phi> x) ` H\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "have \"... = \\<phi> g <#\\<^bsub>F\\<^esub> \\<phi> ` H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<phi> g \\<otimes>\\<^bsub>F\\<^esub> \\<phi> x) ` H =\n    \\<phi> g <#\\<^bsub>F\\<^esub> \\<phi> ` H", "unfolding l_coset_def image_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>H.\n           y = \\<phi> g \\<otimes>\\<^bsub>F\\<^esub> \\<phi> x} =\n    \\<Union>\n     {y. \\<exists>x\\<in>{y. \\<exists>x\\<in>H. y = \\<phi> x}.\n            y = {\\<phi> g \\<otimes>\\<^bsub>F\\<^esub> x}}", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<phi> g \\<otimes>\\<^bsub>F\\<^esub> \\<phi> x) ` H =\n  \\<phi> g <#\\<^bsub>F\\<^esub> \\<phi> ` H\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "also"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<phi> g \\<otimes>\\<^bsub>F\\<^esub> \\<phi> x) ` H =\n  \\<phi> g <#\\<^bsub>F\\<^esub> \\<phi> ` H\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "have \"... = f <#\\<^bsub>F\\<^esub> \\<phi> ` H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> g <#\\<^bsub>F\\<^esub> \\<phi> ` H =\n    f <#\\<^bsub>F\\<^esub> \\<phi> ` H", "using g"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  f = \\<phi> g\n\ngoal (1 subgoal):\n 1. \\<phi> g <#\\<^bsub>F\\<^esub> \\<phi> ` H =\n    f <#\\<^bsub>F\\<^esub> \\<phi> ` H", "by simp"], ["proof (state)\nthis:\n  \\<phi> g <#\\<^bsub>F\\<^esub> \\<phi> ` H = f <#\\<^bsub>F\\<^esub> \\<phi> ` H\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H", "finally"], ["proof (chain)\npicking this:\n  \\<phi> ` H #>\\<^bsub>F\\<^esub> f = f <#\\<^bsub>F\\<^esub> \\<phi> ` H", "show \"\\<phi> ` H #>\\<^bsub>F\\<^esub> f = f <#\\<^bsub>F\\<^esub> \\<phi> ` H\""], ["proof (prove)\nusing this:\n  \\<phi> ` H #>\\<^bsub>F\\<^esub> f = f <#\\<^bsub>F\\<^esub> \\<phi> ` H\n\ngoal (1 subgoal):\n 1. \\<phi> ` H #>\\<^bsub>F\\<^esub> f = f <#\\<^bsub>F\\<^esub> \\<phi> ` H", "."], ["proof (state)\nthis:\n  \\<phi> ` H #>\\<^bsub>F\\<^esub> f = f <#\\<^bsub>F\\<^esub> \\<phi> ` H\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x\\<in>carrier F.\n     \\<phi> ` H #>\\<^bsub>F\\<^esub> x = x <#\\<^bsub>F\\<^esub> \\<phi> ` H\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Being a normal subgroup is preserved by group isomorphisms.\\<close>"], ["", "lemma iso_normal_subgroup:\n  assumes groups:\"group G\" \"group F\"\n  assumes HG:\"H \\<lhd> G\"\n  assumes \\<phi>:\"\\<phi> \\<in> iso G F\"\n  shows \"(\\<phi> ` H) \\<lhd> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> ` H \\<lhd> F", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<phi> ` H \\<lhd> F", "from groups \\<phi>"], ["proof (chain)\npicking this:\n  Group.group G\n  Group.group F\n  \\<phi> \\<in> Group.iso G F", "have \"group_hom G F \\<phi>\""], ["proof (prove)\nusing this:\n  Group.group G\n  Group.group F\n  \\<phi> \\<in> Group.iso G F\n\ngoal (1 subgoal):\n 1. group_hom G F \\<phi>", "unfolding group_hom_def group_hom_axioms_def iso_def"], ["proof (prove)\nusing this:\n  Group.group G\n  Group.group F\n  \\<phi> \\<in> {h \\<in> hom G F. bij_betw h (carrier G) (carrier F)}\n\ngoal (1 subgoal):\n 1. Group.group G \\<and> Group.group F \\<and> \\<phi> \\<in> hom G F", "by auto"], ["proof (state)\nthis:\n  group_hom G F \\<phi>\n\ngoal (1 subgoal):\n 1. \\<phi> ` H \\<lhd> F", "moreover"], ["proof (state)\nthis:\n  group_hom G F \\<phi>\n\ngoal (1 subgoal):\n 1. \\<phi> ` H \\<lhd> F", "from \\<phi>"], ["proof (chain)\npicking this:\n  \\<phi> \\<in> Group.iso G F", "have \"\\<phi> ` (carrier G) = carrier F\""], ["proof (prove)\nusing this:\n  \\<phi> \\<in> Group.iso G F\n\ngoal (1 subgoal):\n 1. \\<phi> ` carrier G = carrier F", "unfolding iso_def bij_betw_def"], ["proof (prove)\nusing this:\n  \\<phi>\n  \\<in> {h \\<in> hom G F.\n         inj_on h (carrier G) \\<and> h ` carrier G = carrier F}\n\ngoal (1 subgoal):\n 1. \\<phi> ` carrier G = carrier F", "by simp"], ["proof (state)\nthis:\n  \\<phi> ` carrier G = carrier F\n\ngoal (1 subgoal):\n 1. \\<phi> ` H \\<lhd> F", "moreover"], ["proof (state)\nthis:\n  \\<phi> ` carrier G = carrier F\n\ngoal (1 subgoal):\n 1. \\<phi> ` H \\<lhd> F", "note HG"], ["proof (state)\nthis:\n  H \\<lhd> G\n\ngoal (1 subgoal):\n 1. \\<phi> ` H \\<lhd> F", "ultimately"], ["proof (chain)\npicking this:\n  group_hom G F \\<phi>\n  \\<phi> ` carrier G = carrier F\n  H \\<lhd> G", "show ?thesis"], ["proof (prove)\nusing this:\n  group_hom G F \\<phi>\n  \\<phi> ` carrier G = carrier F\n  H \\<lhd> G\n\ngoal (1 subgoal):\n 1. \\<phi> ` H \\<lhd> F", "using normal.surj_hom_normal_subgroup"], ["proof (prove)\nusing this:\n  group_hom G F \\<phi>\n  \\<phi> ` carrier G = carrier F\n  H \\<lhd> G\n  \\<lbrakk>?H \\<lhd> ?G; group_hom ?G ?F ?\\<phi>;\n   ?\\<phi> ` carrier ?G = carrier ?F\\<rbrakk>\n  \\<Longrightarrow> ?\\<phi> ` ?H \\<lhd> ?F\n\ngoal (1 subgoal):\n 1. \\<phi> ` H \\<lhd> F", "by metis"], ["proof (state)\nthis:\n  \\<phi> ` H \\<lhd> F\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The trivial subgroup is a subgroup:\\<close>"], ["", "lemma (in group) triv_subgroup:\n  shows \"subgroup {\\<one>} G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup {\\<one>} G", "unfolding subgroup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ({\\<one>} \\<subseteq> carrier G \\<and>\n     (\\<forall>x y.\n         x \\<in> {\\<one>} \\<longrightarrow>\n         y \\<in> {\\<one>} \\<longrightarrow>\n         x \\<otimes> y \\<in> {\\<one>})) \\<and>\n    \\<one> \\<in> {\\<one>} \\<and>\n    (\\<forall>x. x \\<in> {\\<one>} \\<longrightarrow> inv x \\<in> {\\<one>})", "by auto"], ["", "text \\<open>The cardinality of the right cosets of the trivial subgroup is the cardinality of the group itself:\\<close>"], ["", "lemma (in group) card_rcosets_triv:\n  assumes \"finite (carrier G)\"\n  shows \"card (rcosets {\\<one>}) = order G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (rcosets {\\<one>}) = order G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (rcosets {\\<one>}) = order G", "have \"subgroup {\\<one>} G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup {\\<one>} G", "by (rule triv_subgroup)"], ["proof (state)\nthis:\n  subgroup {\\<one>} G\n\ngoal (1 subgoal):\n 1. card (rcosets {\\<one>}) = order G", "with assms"], ["proof (chain)\npicking this:\n  finite (carrier G)\n  subgroup {\\<one>} G", "have \"card (rcosets {\\<one>}) * card {\\<one>} = order G\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n  subgroup {\\<one>} G\n\ngoal (1 subgoal):\n 1. card (rcosets {\\<one>}) * card {\\<one>} = order G", "using lagrange"], ["proof (prove)\nusing this:\n  finite (carrier G)\n  subgroup {\\<one>} G\n  subgroup ?H G \\<Longrightarrow> card (rcosets ?H) * card ?H = order G\n\ngoal (1 subgoal):\n 1. card (rcosets {\\<one>}) * card {\\<one>} = order G", "by blast"], ["proof (state)\nthis:\n  card (rcosets {\\<one>}) * card {\\<one>} = order G\n\ngoal (1 subgoal):\n 1. card (rcosets {\\<one>}) = order G", "thus ?thesis"], ["proof (prove)\nusing this:\n  card (rcosets {\\<one>}) * card {\\<one>} = order G\n\ngoal (1 subgoal):\n 1. card (rcosets {\\<one>}) = order G", "by (auto simp:card_Suc_eq)"], ["proof (state)\nthis:\n  card (rcosets {\\<one>}) = order G\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The intersection of two normal subgroups is, again, a normal subgroup.\\<close>"], ["", "lemma (in group) normal_subgroup_intersect:\n  assumes \"M \\<lhd> G\" and \"N \\<lhd> G\"\n  shows \"M \\<inter> N \\<lhd> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<inter> N \\<lhd> G", "using assms subgroup_intersect is_group normal_inv_iff"], ["proof (prove)\nusing this:\n  M \\<lhd> G\n  N \\<lhd> G\n  \\<lbrakk>subgroup ?H G; subgroup ?H' G\\<rbrakk>\n  \\<Longrightarrow> subgroup (?H \\<inter> ?H') G\n  Group.group G\n  ?N \\<lhd> G =\n  (subgroup ?N G \\<and>\n   (\\<forall>x\\<in>carrier G.\n       \\<forall>h\\<in>?N. x \\<otimes> h \\<otimes> inv x \\<in> ?N))\n\ngoal (1 subgoal):\n 1. M \\<inter> N \\<lhd> G", "by simp"], ["", "text \\<open>The set product of two normal subgroups is a normal subgroup.\\<close>"], ["", "lemma (in group) setmult_lcos_assoc:\n     \"\\<lbrakk>H \\<subseteq> carrier G; K \\<subseteq> carrier G; x \\<in> carrier G\\<rbrakk>\n      \\<Longrightarrow> (x <# H) <#> K = x <# (H <#> K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<subseteq> carrier G; K \\<subseteq> carrier G;\n     x \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> x <# H <#> K = x <# (H <#> K)", "by (force simp add: l_coset_def set_mult_def m_assoc)"], ["", "lemma (in group) normal_subgroup_set_mult_closed:\n  assumes \"M \\<lhd> G\" and \"N \\<lhd> G\"\n  shows \"M <#> N \\<lhd> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M <#> N \\<lhd> G", "proof (rule normalI)"], ["proof (state)\ngoal (2 subgoals):\n 1. subgroup (M <#> N) G\n 2. \\<forall>x\\<in>carrier G. M <#> N #> x = x <# (M <#> N)", "from assms"], ["proof (chain)\npicking this:\n  M \\<lhd> G\n  N \\<lhd> G", "show \"subgroup (M <#> N) G\""], ["proof (prove)\nusing this:\n  M \\<lhd> G\n  N \\<lhd> G\n\ngoal (1 subgoal):\n 1. subgroup (M <#> N) G", "using second_isomorphism_grp.normal_set_mult_subgroup normal_imp_subgroup"], ["proof (prove)\nusing this:\n  M \\<lhd> G\n  N \\<lhd> G\n  second_isomorphism_grp ?H ?G ?S \\<Longrightarrow>\n  subgroup (?H <#>\\<^bsub>?G\\<^esub> ?S) ?G\n  ?H \\<lhd> ?G \\<Longrightarrow> subgroup ?H ?G\n\ngoal (1 subgoal):\n 1. subgroup (M <#> N) G", "unfolding second_isomorphism_grp_def second_isomorphism_grp_axioms_def"], ["proof (prove)\nusing this:\n  M \\<lhd> G\n  N \\<lhd> G\n  ?H \\<lhd> ?G \\<and> subgroup ?S ?G \\<Longrightarrow>\n  subgroup (?H <#>\\<^bsub>?G\\<^esub> ?S) ?G\n  ?H \\<lhd> ?G \\<Longrightarrow> subgroup ?H ?G\n\ngoal (1 subgoal):\n 1. subgroup (M <#> N) G", "by force"], ["proof (state)\nthis:\n  subgroup (M <#> N) G\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>carrier G. M <#> N #> x = x <# (M <#> N)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>carrier G. M <#> N #> x = x <# (M <#> N)", "show \"\\<forall>x\\<in>carrier G. M <#> N #> x = x <# (M <#> N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>carrier G. M <#> N #> x = x <# (M <#> N)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow> M <#> N #> x = x <# (M <#> N)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow> M <#> N #> x = x <# (M <#> N)", "assume x:\"x \\<in> carrier G\""], ["proof (state)\nthis:\n  x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow> M <#> N #> x = x <# (M <#> N)", "have \"M <#> N #> x = M <#> (N #> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M <#> N #> x = M <#> (N #> x)", "by (metis assms(1,2) normal_inv_iff setmult_rcos_assoc subgroup.subset x)"], ["proof (state)\nthis:\n  M <#> N #> x = M <#> (N #> x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow> M <#> N #> x = x <# (M <#> N)", "also"], ["proof (state)\nthis:\n  M <#> N #> x = M <#> (N #> x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow> M <#> N #> x = x <# (M <#> N)", "have \"\\<dots> = M <#> (x <# N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M <#> (N #> x) = M <#> (x <# N)", "by (metis assms(2) normal.coset_eq x)"], ["proof (state)\nthis:\n  M <#> (N #> x) = M <#> (x <# N)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow> M <#> N #> x = x <# (M <#> N)", "also"], ["proof (state)\nthis:\n  M <#> (N #> x) = M <#> (x <# N)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow> M <#> N #> x = x <# (M <#> N)", "have \"\\<dots> = (M #> x) <#> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M <#> (x <# N) = M #> x <#> N", "by (metis assms(1,2) normal_imp_subgroup rcos_assoc_lcos subgroup.subset x)"], ["proof (state)\nthis:\n  M <#> (x <# N) = M #> x <#> N\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow> M <#> N #> x = x <# (M <#> N)", "also"], ["proof (state)\nthis:\n  M <#> (x <# N) = M #> x <#> N\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow> M <#> N #> x = x <# (M <#> N)", "have \"\\<dots> = (x <# M) <#> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M #> x <#> N = x <# M <#> N", "by (metis assms(1) normal.coset_eq x)"], ["proof (state)\nthis:\n  M #> x <#> N = x <# M <#> N\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow> M <#> N #> x = x <# (M <#> N)", "also"], ["proof (state)\nthis:\n  M #> x <#> N = x <# M <#> N\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow> M <#> N #> x = x <# (M <#> N)", "have \"\\<dots> = x <# (M <#> N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x <# M <#> N = x <# (M <#> N)", "by (metis assms(1,2) normal_imp_subgroup setmult_lcos_assoc subgroup.subset x)"], ["proof (state)\nthis:\n  x <# M <#> N = x <# (M <#> N)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow> M <#> N #> x = x <# (M <#> N)", "finally"], ["proof (chain)\npicking this:\n  M <#> N #> x = x <# (M <#> N)", "show \"M <#> N #> x = x <# (M <#> N)\""], ["proof (prove)\nusing this:\n  M <#> N #> x = x <# (M <#> N)\n\ngoal (1 subgoal):\n 1. M <#> N #> x = x <# (M <#> N)", "."], ["proof (state)\nthis:\n  M <#> N #> x = x <# (M <#> N)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x\\<in>carrier G. M <#> N #> x = x <# (M <#> N)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The following is a very basic lemma about subgroups: If restricting the carrier of\n  a group yields a group it's a subgroup of the group we've started with.\\<close>"], ["", "lemma (in group) restrict_group_imp_subgroup:\n  assumes \"H \\<subseteq> carrier G\" \"group (G\\<lparr>carrier := H\\<rparr>)\"\n  shows \"subgroup H G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup H G", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. H \\<subseteq> carrier G\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> H\n 3. \\<one> \\<in> H\n 4. \\<And>x. x \\<in> H \\<Longrightarrow> inv x \\<in> H", "from assms(1)"], ["proof (chain)\npicking this:\n  H \\<subseteq> carrier G", "show \"H \\<subseteq> carrier G\""], ["proof (prove)\nusing this:\n  H \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. H \\<subseteq> carrier G", "."], ["proof (state)\nthis:\n  H \\<subseteq> carrier G\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> H\n 2. \\<one> \\<in> H\n 3. \\<And>x. x \\<in> H \\<Longrightarrow> inv x \\<in> H", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> H\n 2. \\<one> \\<in> H\n 3. \\<And>x. x \\<in> H \\<Longrightarrow> inv x \\<in> H", "fix x y"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> H\n 2. \\<one> \\<in> H\n 3. \\<And>x. x \\<in> H \\<Longrightarrow> inv x \\<in> H", "assume \"x \\<in> H\" \"y \\<in> H\""], ["proof (state)\nthis:\n  x \\<in> H\n  y \\<in> H\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> H\n 2. \\<one> \\<in> H\n 3. \\<And>x. x \\<in> H \\<Longrightarrow> inv x \\<in> H", "hence \"x \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)\" \"y \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)\""], ["proof (prove)\nusing this:\n  x \\<in> H\n  y \\<in> H\n\ngoal (1 subgoal):\n 1. x \\<in> carrier (G\\<lparr>carrier := H\\<rparr>) &&&\n    y \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)", "by auto"], ["proof (state)\nthis:\n  x \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)\n  y \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> H; y \\<in> H\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y \\<in> H\n 2. \\<one> \\<in> H\n 3. \\<And>x. x \\<in> H \\<Longrightarrow> inv x \\<in> H", "with assms(2)"], ["proof (chain)\npicking this:\n  Group.group (G\\<lparr>carrier := H\\<rparr>)\n  x \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)\n  y \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)", "show \"x \\<otimes> y \\<in> H\""], ["proof (prove)\nusing this:\n  Group.group (G\\<lparr>carrier := H\\<rparr>)\n  x \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)\n  y \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)\n\ngoal (1 subgoal):\n 1. x \\<otimes> y \\<in> H", "using assms(2) group.is_monoid monoid.m_closed"], ["proof (prove)\nusing this:\n  Group.group (G\\<lparr>carrier := H\\<rparr>)\n  x \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)\n  y \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)\n  Group.group (G\\<lparr>carrier := H\\<rparr>)\n  Group.group ?G \\<Longrightarrow> Group.monoid ?G\n  \\<lbrakk>Group.monoid ?G; ?x \\<in> carrier ?G;\n   ?y \\<in> carrier ?G\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes>\\<^bsub>?G\\<^esub> ?y \\<in> carrier ?G\n\ngoal (1 subgoal):\n 1. x \\<otimes> y \\<in> H", "by fastforce"], ["proof (state)\nthis:\n  x \\<otimes> y \\<in> H\n\ngoal (2 subgoals):\n 1. \\<one> \\<in> H\n 2. \\<And>x. x \\<in> H \\<Longrightarrow> inv x \\<in> H", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<one> \\<in> H\n 2. \\<And>x. x \\<in> H \\<Longrightarrow> inv x \\<in> H", "show \"\\<one> \\<in> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one> \\<in> H", "using assms(2) group.is_monoid monoid.one_closed"], ["proof (prove)\nusing this:\n  Group.group (G\\<lparr>carrier := H\\<rparr>)\n  Group.group ?G \\<Longrightarrow> Group.monoid ?G\n  Group.monoid ?G \\<Longrightarrow>\n  \\<one>\\<^bsub>?G\\<^esub> \\<in> carrier ?G\n\ngoal (1 subgoal):\n 1. \\<one> \\<in> H", "by fastforce"], ["proof (state)\nthis:\n  \\<one> \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> H \\<Longrightarrow> inv x \\<in> H", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> H \\<Longrightarrow> inv x \\<in> H", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> H \\<Longrightarrow> inv x \\<in> H", "assume \"x \\<in> H\""], ["proof (state)\nthis:\n  x \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> H \\<Longrightarrow> inv x \\<in> H", "hence x:\"x \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)\""], ["proof (prove)\nusing this:\n  x \\<in> H\n\ngoal (1 subgoal):\n 1. x \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)", "by auto"], ["proof (state)\nthis:\n  x \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> H \\<Longrightarrow> inv x \\<in> H", "hence \"inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)\""], ["proof (prove)\nusing this:\n  x \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x\n    \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)", "using assms(2) group.inv_closed"], ["proof (prove)\nusing this:\n  x \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)\n  Group.group (G\\<lparr>carrier := H\\<rparr>)\n  \\<lbrakk>Group.group ?G; ?x \\<in> carrier ?G\\<rbrakk>\n  \\<Longrightarrow> inv\\<^bsub>?G\\<^esub> ?x \\<in> carrier ?G\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x\n    \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)", "by fastforce"], ["proof (state)\nthis:\n  inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x\n  \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> H \\<Longrightarrow> inv x \\<in> H", "hence \"inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x \\<in> carrier G\""], ["proof (prove)\nusing this:\n  inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x\n  \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x \\<in> carrier G", "using x assms(1)"], ["proof (prove)\nusing this:\n  inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x\n  \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)\n  x \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)\n  H \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x \\<in> carrier G", "by auto"], ["proof (state)\nthis:\n  inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> H \\<Longrightarrow> inv x \\<in> H", "moreover"], ["proof (state)\nthis:\n  inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> H \\<Longrightarrow> inv x \\<in> H", "have \"inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x \\<otimes> x = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x \\<otimes> x = \\<one>", "using assms(2) group.l_inv x"], ["proof (prove)\nusing this:\n  Group.group (G\\<lparr>carrier := H\\<rparr>)\n  \\<lbrakk>Group.group ?G; ?x \\<in> carrier ?G\\<rbrakk>\n  \\<Longrightarrow> inv\\<^bsub>?G\\<^esub> ?x \\<otimes>\\<^bsub>?G\\<^esub>\n                    ?x =\n                    \\<one>\\<^bsub>?G\\<^esub>\n  x \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x \\<otimes> x = \\<one>", "by fastforce"], ["proof (state)\nthis:\n  inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x \\<otimes> x = \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> H \\<Longrightarrow> inv x \\<in> H", "moreover"], ["proof (state)\nthis:\n  inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x \\<otimes> x = \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> H \\<Longrightarrow> inv x \\<in> H", "have \"x \\<in> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> carrier G", "using x assms(1)"], ["proof (prove)\nusing this:\n  x \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)\n  H \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. x \\<in> carrier G", "by auto"], ["proof (state)\nthis:\n  x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> H \\<Longrightarrow> inv x \\<in> H", "ultimately"], ["proof (chain)\npicking this:\n  inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x \\<in> carrier G\n  inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x \\<otimes> x = \\<one>\n  x \\<in> carrier G", "have \"inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x = inv x\""], ["proof (prove)\nusing this:\n  inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x \\<in> carrier G\n  inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x \\<otimes> x = \\<one>\n  x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x = inv x", "using inv_equality[symmetric]"], ["proof (prove)\nusing this:\n  inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x \\<in> carrier G\n  inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x \\<otimes> x = \\<one>\n  x \\<in> carrier G\n  \\<lbrakk>?t \\<otimes> ?x = \\<one>; ?x \\<in> carrier G;\n   ?t \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> ?t = inv ?x\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x = inv x", "by auto"], ["proof (state)\nthis:\n  inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x = inv x\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> H \\<Longrightarrow> inv x \\<in> H", "thus \"inv x \\<in> H\""], ["proof (prove)\nusing this:\n  inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x = inv x\n\ngoal (1 subgoal):\n 1. inv x \\<in> H", "using assms(2) group.inv_closed x"], ["proof (prove)\nusing this:\n  inv\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> x = inv x\n  Group.group (G\\<lparr>carrier := H\\<rparr>)\n  \\<lbrakk>Group.group ?G; ?x \\<in> carrier ?G\\<rbrakk>\n  \\<Longrightarrow> inv\\<^bsub>?G\\<^esub> ?x \\<in> carrier ?G\n  x \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)\n\ngoal (1 subgoal):\n 1. inv x \\<in> H", "by fastforce"], ["proof (state)\nthis:\n  inv x \\<in> H\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A subgroup relation survives factoring by a normal subgroup.\\<close>"], ["", "lemma (in group) normal_subgroup_factorize:\n  assumes \"N \\<lhd> G\" and \"N \\<subseteq> H\" and \"subgroup H G\"\n  shows \"subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N) (G Mod N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N)\n     (G Mod N)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N)\n     (G Mod N)", "interpret GModN: group \"G Mod N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (G Mod N)", "using assms(1)"], ["proof (prove)\nusing this:\n  N \\<lhd> G\n\ngoal (1 subgoal):\n 1. Group.group (G Mod N)", "by (rule normal.factorgroup_is_group)"], ["proof (state)\ngoal (1 subgoal):\n 1. subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N)\n     (G Mod N)", "have \"N \\<lhd> G\\<lparr>carrier := H\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<lhd> G\\<lparr>carrier := H\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  N \\<lhd> G\n  N \\<subseteq> H\n  subgroup H G\n\ngoal (1 subgoal):\n 1. N \\<lhd> G\\<lparr>carrier := H\\<rparr>", "by (metis normal_restrict_supergroup)"], ["proof (state)\nthis:\n  N \\<lhd> G\\<lparr>carrier := H\\<rparr>\n\ngoal (1 subgoal):\n 1. subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N)\n     (G Mod N)", "hence grpHN:\"group (G\\<lparr>carrier := H\\<rparr> Mod N)\""], ["proof (prove)\nusing this:\n  N \\<lhd> G\\<lparr>carrier := H\\<rparr>\n\ngoal (1 subgoal):\n 1. Group.group (G\\<lparr>carrier := H\\<rparr> Mod N)", "by (rule normal.factorgroup_is_group)"], ["proof (state)\nthis:\n  Group.group (G\\<lparr>carrier := H\\<rparr> Mod N)\n\ngoal (1 subgoal):\n 1. subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N)\n     (G Mod N)", "have \"(<#>\\<^bsub>G\\<lparr>carrier:=H\\<rparr>\\<^esub>) = (\\<lambda>U K. (\\<Union>h\\<in>U. \\<Union>k\\<in>K. {h \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> k}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (<#>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>) =\n    (\\<lambda>U K.\n        \\<Union>h\\<in>U.\n           \\<Union>k\\<in>K.\n              {h \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> k})", "using set_mult_def"], ["proof (prove)\nusing this:\n  ?H <#>\\<^bsub>?G\\<^esub> ?K =\n  (\\<Union>h\\<in>?H. \\<Union>k\\<in>?K. {h \\<otimes>\\<^bsub>?G\\<^esub> k})\n\ngoal (1 subgoal):\n 1. (<#>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>) =\n    (\\<lambda>U K.\n        \\<Union>h\\<in>U.\n           \\<Union>k\\<in>K.\n              {h \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> k})", "by metis"], ["proof (state)\nthis:\n  (<#>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>) =\n  (\\<lambda>U K.\n      \\<Union>h\\<in>U.\n         \\<Union>k\\<in>K.\n            {h \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> k})\n\ngoal (1 subgoal):\n 1. subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N)\n     (G Mod N)", "moreover"], ["proof (state)\nthis:\n  (<#>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>) =\n  (\\<lambda>U K.\n      \\<Union>h\\<in>U.\n         \\<Union>k\\<in>K.\n            {h \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> k})\n\ngoal (1 subgoal):\n 1. subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N)\n     (G Mod N)", "have \"\\<dots> = (\\<lambda>U K. (\\<Union>h\\<in>U. \\<Union>k\\<in>K. {h \\<otimes>\\<^bsub>G\\<^esub> k}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>U K.\n        \\<Union>h\\<in>U.\n           \\<Union>k\\<in>K.\n              {h \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>\n               k}) =\n    (\\<lambda>U K. \\<Union>h\\<in>U. \\<Union>k\\<in>K. {h \\<otimes> k})", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>U K.\n      \\<Union>h\\<in>U.\n         \\<Union>k\\<in>K.\n            {h \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> k}) =\n  (\\<lambda>U K. \\<Union>h\\<in>U. \\<Union>k\\<in>K. {h \\<otimes> k})\n\ngoal (1 subgoal):\n 1. subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N)\n     (G Mod N)", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>U K.\n      \\<Union>h\\<in>U.\n         \\<Union>k\\<in>K.\n            {h \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> k}) =\n  (\\<lambda>U K. \\<Union>h\\<in>U. \\<Union>k\\<in>K. {h \\<otimes> k})\n\ngoal (1 subgoal):\n 1. subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N)\n     (G Mod N)", "have \"(<#>) = (\\<lambda>U K. (\\<Union>h\\<in>U. \\<Union>k\\<in>K. {h \\<otimes> k}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (<#>) =\n    (\\<lambda>U K. \\<Union>h\\<in>U. \\<Union>k\\<in>K. {h \\<otimes> k})", "using set_mult_def"], ["proof (prove)\nusing this:\n  ?H <#>\\<^bsub>?G\\<^esub> ?K =\n  (\\<Union>h\\<in>?H. \\<Union>k\\<in>?K. {h \\<otimes>\\<^bsub>?G\\<^esub> k})\n\ngoal (1 subgoal):\n 1. (<#>) =\n    (\\<lambda>U K. \\<Union>h\\<in>U. \\<Union>k\\<in>K. {h \\<otimes> k})", "by metis"], ["proof (state)\nthis:\n  (<#>) = (\\<lambda>U K. \\<Union>h\\<in>U. \\<Union>k\\<in>K. {h \\<otimes> k})\n\ngoal (1 subgoal):\n 1. subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N)\n     (G Mod N)", "ultimately"], ["proof (chain)\npicking this:\n  (<#>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>) =\n  (\\<lambda>U K.\n      \\<Union>h\\<in>U.\n         \\<Union>k\\<in>K.\n            {h \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> k})\n  (\\<lambda>U K.\n      \\<Union>h\\<in>U.\n         \\<Union>k\\<in>K.\n            {h \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> k}) =\n  (\\<lambda>U K. \\<Union>h\\<in>U. \\<Union>k\\<in>K. {h \\<otimes> k})\n  (<#>) = (\\<lambda>U K. \\<Union>h\\<in>U. \\<Union>k\\<in>K. {h \\<otimes> k})", "have \"(<#>\\<^bsub>G\\<lparr>carrier:=H\\<rparr>\\<^esub>) = (<#>\\<^bsub>G\\<^esub>)\""], ["proof (prove)\nusing this:\n  (<#>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>) =\n  (\\<lambda>U K.\n      \\<Union>h\\<in>U.\n         \\<Union>k\\<in>K.\n            {h \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> k})\n  (\\<lambda>U K.\n      \\<Union>h\\<in>U.\n         \\<Union>k\\<in>K.\n            {h \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> k}) =\n  (\\<lambda>U K. \\<Union>h\\<in>U. \\<Union>k\\<in>K. {h \\<otimes> k})\n  (<#>) = (\\<lambda>U K. \\<Union>h\\<in>U. \\<Union>k\\<in>K. {h \\<otimes> k})\n\ngoal (1 subgoal):\n 1. (<#>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>) = (<#>)", "by simp"], ["proof (state)\nthis:\n  (<#>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>) = (<#>)\n\ngoal (1 subgoal):\n 1. subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N)\n     (G Mod N)", "with grpHN"], ["proof (chain)\npicking this:\n  Group.group (G\\<lparr>carrier := H\\<rparr> Mod N)\n  (<#>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>) = (<#>)", "have \"group ((G Mod N)\\<lparr>carrier := (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N)\\<rparr>)\""], ["proof (prove)\nusing this:\n  Group.group (G\\<lparr>carrier := H\\<rparr> Mod N)\n  (<#>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>) = (<#>)\n\ngoal (1 subgoal):\n 1. Group.group\n     ((G Mod N)\n      \\<lparr>carrier :=\n                rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\\<rparr>)", "unfolding FactGroup_def"], ["proof (prove)\nusing this:\n  Group.group\n   \\<lparr>carrier = rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N,\n      monoid.mult = (<#>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>),\n      one = N\\<rparr>\n  (<#>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>) = (<#>)\n\ngoal (1 subgoal):\n 1. Group.group\n     (\\<lparr>carrier = rcosets N, monoid.mult = (<#>), one = N\\<rparr>\n      \\<lparr>carrier :=\n                rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\\<rparr>)", "by auto"], ["proof (state)\nthis:\n  Group.group\n   ((G Mod N)\n    \\<lparr>carrier :=\n              rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\\<rparr>)\n\ngoal (1 subgoal):\n 1. subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N)\n     (G Mod N)", "moreover"], ["proof (state)\nthis:\n  Group.group\n   ((G Mod N)\n    \\<lparr>carrier :=\n              rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\\<rparr>)\n\ngoal (1 subgoal):\n 1. subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N)\n     (G Mod N)", "have \"rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N \\<subseteq> carrier (G Mod N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\n    \\<subseteq> carrier (G Mod N)", "unfolding FactGroup_def RCOSETS_def r_coset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>a\\<in>carrier (G\\<lparr>carrier := H\\<rparr>).\n        {\\<Union>h\\<in>N.\n            {h \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> a}})\n    \\<subseteq> carrier\n                 \\<lparr>carrier =\n                           \\<Union>a\\<in>carrier G.\n                              {\\<Union>h\\<in>N. {h \\<otimes> a}},\n                    monoid.mult = (<#>), one = N\\<rparr>", "using assms(3) subgroup.subset"], ["proof (prove)\nusing this:\n  subgroup H G\n  subgroup ?H ?G \\<Longrightarrow> ?H \\<subseteq> carrier ?G\n\ngoal (1 subgoal):\n 1. (\\<Union>a\\<in>carrier (G\\<lparr>carrier := H\\<rparr>).\n        {\\<Union>h\\<in>N.\n            {h \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> a}})\n    \\<subseteq> carrier\n                 \\<lparr>carrier =\n                           \\<Union>a\\<in>carrier G.\n                              {\\<Union>h\\<in>N. {h \\<otimes> a}},\n                    monoid.mult = (<#>), one = N\\<rparr>", "by fastforce"], ["proof (state)\nthis:\n  rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\n  \\<subseteq> carrier (G Mod N)\n\ngoal (1 subgoal):\n 1. subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N)\n     (G Mod N)", "ultimately"], ["proof (chain)\npicking this:\n  Group.group\n   ((G Mod N)\n    \\<lparr>carrier :=\n              rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\\<rparr>)\n  rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\n  \\<subseteq> carrier (G Mod N)", "show ?thesis"], ["proof (prove)\nusing this:\n  Group.group\n   ((G Mod N)\n    \\<lparr>carrier :=\n              rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\\<rparr>)\n  rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\n  \\<subseteq> carrier (G Mod N)\n\ngoal (1 subgoal):\n 1. subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N)\n     (G Mod N)", "using GModN.is_group group.restrict_group_imp_subgroup"], ["proof (prove)\nusing this:\n  Group.group\n   ((G Mod N)\n    \\<lparr>carrier :=\n              rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\\<rparr>)\n  rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\n  \\<subseteq> carrier (G Mod N)\n  Group.group (G Mod N)\n  \\<lbrakk>Group.group ?G; ?H \\<subseteq> carrier ?G;\n   Group.group (?G\\<lparr>carrier := ?H\\<rparr>)\\<rbrakk>\n  \\<Longrightarrow> subgroup ?H ?G\n\ngoal (1 subgoal):\n 1. subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N)\n     (G Mod N)", "by auto"], ["proof (state)\nthis:\n  subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N)\n   (G Mod N)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A normality relation survives factoring by a normal subgroup.\\<close>"], ["", "lemma (in group) normality_factorization:\n  assumes NG:\"N \\<lhd> G\" and NH:\"N \\<subseteq> H\" and HG:\"H \\<lhd> G\"\n  shows \"(rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N) \\<lhd> (G Mod N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N \\<lhd> G Mod N", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N \\<lhd> G Mod N", "from assms(1)"], ["proof (chain)\npicking this:\n  N \\<lhd> G", "interpret GModN: group \"G Mod N\""], ["proof (prove)\nusing this:\n  N \\<lhd> G\n\ngoal (1 subgoal):\n 1. Group.group (G Mod N)", "by (metis normal.factorgroup_is_group)"], ["proof (state)\ngoal (1 subgoal):\n 1. rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N \\<lhd> G Mod N", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N \\<lhd> G Mod N", "proof (auto simp: GModN.normal_inv_iff)"], ["proof (state)\ngoal (2 subgoals):\n 1. subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N)\n     (G Mod N)\n 2. \\<And>x h.\n       \\<lbrakk>x \\<in> carrier (G Mod N);\n        h \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\\<rbrakk>\n       \\<Longrightarrow> x <#> h <#> inv\\<^bsub>G Mod N\\<^esub> x\n                         \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N", "from assms"], ["proof (chain)\npicking this:\n  N \\<lhd> G\n  N \\<subseteq> H\n  H \\<lhd> G", "show \"subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N) (G Mod N)\""], ["proof (prove)\nusing this:\n  N \\<lhd> G\n  N \\<subseteq> H\n  H \\<lhd> G\n\ngoal (1 subgoal):\n 1. subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N)\n     (G Mod N)", "using normal_imp_subgroup normal_subgroup_factorize"], ["proof (prove)\nusing this:\n  N \\<lhd> G\n  N \\<subseteq> H\n  H \\<lhd> G\n  ?H \\<lhd> ?G \\<Longrightarrow> subgroup ?H ?G\n  \\<lbrakk>?N \\<lhd> G; ?N \\<subseteq> ?H; subgroup ?H G\\<rbrakk>\n  \\<Longrightarrow> subgroup\n                     (rcosets\\<^bsub>G\\<lparr>carrier := ?H\\<rparr>\\<^esub> ?N)\n                     (G Mod ?N)\n\ngoal (1 subgoal):\n 1. subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N)\n     (G Mod N)", "by force"], ["proof (state)\nthis:\n  subgroup (rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N)\n   (G Mod N)\n\ngoal (1 subgoal):\n 1. \\<And>x h.\n       \\<lbrakk>x \\<in> carrier (G Mod N);\n        h \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\\<rbrakk>\n       \\<Longrightarrow> x <#> h <#> inv\\<^bsub>G Mod N\\<^esub> x\n                         \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x h.\n       \\<lbrakk>x \\<in> carrier (G Mod N);\n        h \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\\<rbrakk>\n       \\<Longrightarrow> x <#> h <#> inv\\<^bsub>G Mod N\\<^esub> x\n                         \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N", "fix U V"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x h.\n       \\<lbrakk>x \\<in> carrier (G Mod N);\n        h \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\\<rbrakk>\n       \\<Longrightarrow> x <#> h <#> inv\\<^bsub>G Mod N\\<^esub> x\n                         \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N", "assume U:\"U \\<in> carrier (G Mod N)\" and V:\"V \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\""], ["proof (state)\nthis:\n  U \\<in> carrier (G Mod N)\n  V \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\n\ngoal (1 subgoal):\n 1. \\<And>x h.\n       \\<lbrakk>x \\<in> carrier (G Mod N);\n        h \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\\<rbrakk>\n       \\<Longrightarrow> x <#> h <#> inv\\<^bsub>G Mod N\\<^esub> x\n                         \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N", "then"], ["proof (chain)\npicking this:\n  U \\<in> carrier (G Mod N)\n  V \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N", "obtain g where g:\"g \\<in> carrier G\" \"U = N #> g\""], ["proof (prove)\nusing this:\n  U \\<in> carrier (G Mod N)\n  V \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; U = N #> g\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding FactGroup_def RCOSETS_def"], ["proof (prove)\nusing this:\n  U \\<in> carrier\n           \\<lparr>carrier = \\<Union>a\\<in>carrier G. {N #> a},\n              monoid.mult = (<#>), one = N\\<rparr>\n  V \\<in> (\\<Union>a\\<in>carrier (G\\<lparr>carrier := H\\<rparr>).\n              {N #>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> a})\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> carrier G; U = N #> g\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g \\<in> carrier G\n  U = N #> g\n\ngoal (1 subgoal):\n 1. \\<And>x h.\n       \\<lbrakk>x \\<in> carrier (G Mod N);\n        h \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\\<rbrakk>\n       \\<Longrightarrow> x <#> h <#> inv\\<^bsub>G Mod N\\<^esub> x\n                         \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N", "from V"], ["proof (chain)\npicking this:\n  V \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N", "obtain h where h:\"h \\<in> H\" \"V = N #> h\""], ["proof (prove)\nusing this:\n  V \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>h \\<in> H; V = N #> h\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding FactGroup_def RCOSETS_def r_coset_def"], ["proof (prove)\nusing this:\n  V \\<in> (\\<Union>a\\<in>carrier (G\\<lparr>carrier := H\\<rparr>).\n              {\\<Union>h\\<in>N.\n                  {h \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>\n                   a}})\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>h \\<in> H;\n         V = (\\<Union>ha\\<in>N. {ha \\<otimes> h})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  h \\<in> H\n  V = N #> h\n\ngoal (1 subgoal):\n 1. \\<And>x h.\n       \\<lbrakk>x \\<in> carrier (G Mod N);\n        h \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\\<rbrakk>\n       \\<Longrightarrow> x <#> h <#> inv\\<^bsub>G Mod N\\<^esub> x\n                         \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N", "hence hG:\"h \\<in> carrier G\""], ["proof (prove)\nusing this:\n  h \\<in> H\n  V = N #> h\n\ngoal (1 subgoal):\n 1. h \\<in> carrier G", "using HG normal_imp_subgroup subgroup.mem_carrier"], ["proof (prove)\nusing this:\n  h \\<in> H\n  V = N #> h\n  H \\<lhd> G\n  ?H \\<lhd> ?G \\<Longrightarrow> subgroup ?H ?G\n  \\<lbrakk>subgroup ?H ?G; ?x \\<in> ?H\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> carrier ?G\n\ngoal (1 subgoal):\n 1. h \\<in> carrier G", "by force"], ["proof (state)\nthis:\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x h.\n       \\<lbrakk>x \\<in> carrier (G Mod N);\n        h \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\\<rbrakk>\n       \\<Longrightarrow> x <#> h <#> inv\\<^bsub>G Mod N\\<^esub> x\n                         \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N", "hence ghG:\"g \\<otimes> h \\<in> carrier G\""], ["proof (prove)\nusing this:\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. g \\<otimes> h \\<in> carrier G", "using g m_closed"], ["proof (prove)\nusing this:\n  h \\<in> carrier G\n  g \\<in> carrier G\n  U = N #> g\n  \\<lbrakk>?x \\<in> carrier G; ?y \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes> ?y \\<in> carrier G\n\ngoal (1 subgoal):\n 1. g \\<otimes> h \\<in> carrier G", "by auto"], ["proof (state)\nthis:\n  g \\<otimes> h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x h.\n       \\<lbrakk>x \\<in> carrier (G Mod N);\n        h \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\\<rbrakk>\n       \\<Longrightarrow> x <#> h <#> inv\\<^bsub>G Mod N\\<^esub> x\n                         \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N", "from g h"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  U = N #> g\n  h \\<in> H\n  V = N #> h", "have \"g \\<otimes> h \\<otimes> inv g \\<in> H\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  U = N #> g\n  h \\<in> H\n  V = N #> h\n\ngoal (1 subgoal):\n 1. g \\<otimes> h \\<otimes> inv g \\<in> H", "using HG normal_inv_iff"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  U = N #> g\n  h \\<in> H\n  V = N #> h\n  H \\<lhd> G\n  ?N \\<lhd> G =\n  (subgroup ?N G \\<and>\n   (\\<forall>x\\<in>carrier G.\n       \\<forall>h\\<in>?N. x \\<otimes> h \\<otimes> inv x \\<in> ?N))\n\ngoal (1 subgoal):\n 1. g \\<otimes> h \\<otimes> inv g \\<in> H", "by auto"], ["proof (state)\nthis:\n  g \\<otimes> h \\<otimes> inv g \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x h.\n       \\<lbrakk>x \\<in> carrier (G Mod N);\n        h \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\\<rbrakk>\n       \\<Longrightarrow> x <#> h <#> inv\\<^bsub>G Mod N\\<^esub> x\n                         \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N", "moreover"], ["proof (state)\nthis:\n  g \\<otimes> h \\<otimes> inv g \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x h.\n       \\<lbrakk>x \\<in> carrier (G Mod N);\n        h \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\\<rbrakk>\n       \\<Longrightarrow> x <#> h <#> inv\\<^bsub>G Mod N\\<^esub> x\n                         \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N", "have \"U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U = N #> (g \\<otimes> h \\<otimes> inv g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U =\n    N #> g \\<otimes> h \\<otimes> inv g", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U =\n    N #> g \\<otimes> h \\<otimes> inv g", "from g U"], ["proof (chain)\npicking this:\n  g \\<in> carrier G\n  U = N #> g\n  U \\<in> carrier (G Mod N)", "have \"inv\\<^bsub>G Mod N\\<^esub> U = N #> inv g\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  U = N #> g\n  U \\<in> carrier (G Mod N)\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>G Mod N\\<^esub> U = N #> inv g", "using NG normal.inv_FactGroup normal.rcos_inv"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  U = N #> g\n  U \\<in> carrier (G Mod N)\n  N \\<lhd> G\n  \\<lbrakk>?H \\<lhd> ?G; ?X \\<in> carrier (?G Mod ?H)\\<rbrakk>\n  \\<Longrightarrow> inv\\<^bsub>?G Mod ?H\\<^esub> ?X =\n                    set_inv\\<^bsub>?G\\<^esub> ?X\n  \\<lbrakk>?H \\<lhd> ?G; ?x \\<in> carrier ?G\\<rbrakk>\n  \\<Longrightarrow> set_inv\\<^bsub>?G\\<^esub> (?H #>\\<^bsub>?G\\<^esub> ?x) =\n                    ?H #>\\<^bsub>?G\\<^esub> inv\\<^bsub>?G\\<^esub> ?x\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>G Mod N\\<^esub> U = N #> inv g", "by fastforce"], ["proof (state)\nthis:\n  inv\\<^bsub>G Mod N\\<^esub> U = N #> inv g\n\ngoal (1 subgoal):\n 1. U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U =\n    N #> g \\<otimes> h \\<otimes> inv g", "hence \"U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U = (N #> g) <#> (N #> h) <#> (N #> inv g)\""], ["proof (prove)\nusing this:\n  inv\\<^bsub>G Mod N\\<^esub> U = N #> inv g\n\ngoal (1 subgoal):\n 1. U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U =\n    N #> g <#> (N #> h) <#> (N #> inv g)", "using g h"], ["proof (prove)\nusing this:\n  inv\\<^bsub>G Mod N\\<^esub> U = N #> inv g\n  g \\<in> carrier G\n  U = N #> g\n  h \\<in> H\n  V = N #> h\n\ngoal (1 subgoal):\n 1. U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U =\n    N #> g <#> (N #> h) <#> (N #> inv g)", "by simp"], ["proof (state)\nthis:\n  U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U =\n  N #> g <#> (N #> h) <#> (N #> inv g)\n\ngoal (1 subgoal):\n 1. U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U =\n    N #> g \\<otimes> h \\<otimes> inv g", "also"], ["proof (state)\nthis:\n  U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U =\n  N #> g <#> (N #> h) <#> (N #> inv g)\n\ngoal (1 subgoal):\n 1. U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U =\n    N #> g \\<otimes> h \\<otimes> inv g", "have \"\\<dots> = N #> (g \\<otimes> h) <#> (N #> inv g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N #> g <#> (N #> h) <#> (N #> inv g) =\n    N #> g \\<otimes> h <#> (N #> inv g)", "using g hG NG normal.rcos_sum"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  U = N #> g\n  h \\<in> carrier G\n  N \\<lhd> G\n  \\<lbrakk>?H \\<lhd> ?G; ?x \\<in> carrier ?G; ?y \\<in> carrier ?G\\<rbrakk>\n  \\<Longrightarrow> ?H #>\\<^bsub>?G\\<^esub> ?x <#>\\<^bsub>?G\\<^esub>\n                    (?H #>\\<^bsub>?G\\<^esub> ?y) =\n                    ?H #>\\<^bsub>?G\\<^esub>\n                    ?x \\<otimes>\\<^bsub>?G\\<^esub> ?y\n\ngoal (1 subgoal):\n 1. N #> g <#> (N #> h) <#> (N #> inv g) =\n    N #> g \\<otimes> h <#> (N #> inv g)", "by force"], ["proof (state)\nthis:\n  N #> g <#> (N #> h) <#> (N #> inv g) = N #> g \\<otimes> h <#> (N #> inv g)\n\ngoal (1 subgoal):\n 1. U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U =\n    N #> g \\<otimes> h \\<otimes> inv g", "also"], ["proof (state)\nthis:\n  N #> g <#> (N #> h) <#> (N #> inv g) = N #> g \\<otimes> h <#> (N #> inv g)\n\ngoal (1 subgoal):\n 1. U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U =\n    N #> g \\<otimes> h \\<otimes> inv g", "have \"\\<dots> = N #> (g \\<otimes> h \\<otimes> inv g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N #> g \\<otimes> h <#> (N #> inv g) = N #> g \\<otimes> h \\<otimes> inv g", "using g inv_closed ghG NG normal.rcos_sum"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  U = N #> g\n  ?x \\<in> carrier G \\<Longrightarrow> inv ?x \\<in> carrier G\n  g \\<otimes> h \\<in> carrier G\n  N \\<lhd> G\n  \\<lbrakk>?H \\<lhd> ?G; ?x \\<in> carrier ?G; ?y \\<in> carrier ?G\\<rbrakk>\n  \\<Longrightarrow> ?H #>\\<^bsub>?G\\<^esub> ?x <#>\\<^bsub>?G\\<^esub>\n                    (?H #>\\<^bsub>?G\\<^esub> ?y) =\n                    ?H #>\\<^bsub>?G\\<^esub>\n                    ?x \\<otimes>\\<^bsub>?G\\<^esub> ?y\n\ngoal (1 subgoal):\n 1. N #> g \\<otimes> h <#> (N #> inv g) = N #> g \\<otimes> h \\<otimes> inv g", "by force"], ["proof (state)\nthis:\n  N #> g \\<otimes> h <#> (N #> inv g) = N #> g \\<otimes> h \\<otimes> inv g\n\ngoal (1 subgoal):\n 1. U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U =\n    N #> g \\<otimes> h \\<otimes> inv g", "finally"], ["proof (chain)\npicking this:\n  U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U =\n  N #> g \\<otimes> h \\<otimes> inv g", "show ?thesis"], ["proof (prove)\nusing this:\n  U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U =\n  N #> g \\<otimes> h \\<otimes> inv g\n\ngoal (1 subgoal):\n 1. U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U =\n    N #> g \\<otimes> h \\<otimes> inv g", "."], ["proof (state)\nthis:\n  U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U =\n  N #> g \\<otimes> h \\<otimes> inv g\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U =\n  N #> g \\<otimes> h \\<otimes> inv g\n\ngoal (1 subgoal):\n 1. \\<And>x h.\n       \\<lbrakk>x \\<in> carrier (G Mod N);\n        h \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\\<rbrakk>\n       \\<Longrightarrow> x <#> h <#> inv\\<^bsub>G Mod N\\<^esub> x\n                         \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N", "ultimately"], ["proof (chain)\npicking this:\n  g \\<otimes> h \\<otimes> inv g \\<in> H\n  U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U =\n  N #> g \\<otimes> h \\<otimes> inv g", "show \"U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\""], ["proof (prove)\nusing this:\n  g \\<otimes> h \\<otimes> inv g \\<in> H\n  U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U =\n  N #> g \\<otimes> h \\<otimes> inv g\n\ngoal (1 subgoal):\n 1. U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U\n    \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N", "unfolding RCOSETS_def r_coset_def"], ["proof (prove)\nusing this:\n  g \\<otimes> h \\<otimes> inv g \\<in> H\n  U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U =\n  (\\<Union>ha\\<in>N. {ha \\<otimes> (g \\<otimes> h \\<otimes> inv g)})\n\ngoal (1 subgoal):\n 1. U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U\n    \\<in> (\\<Union>a\\<in>carrier (G\\<lparr>carrier := H\\<rparr>).\n              {\\<Union>h\\<in>N.\n                  {h \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>\n                   a}})", "by auto"], ["proof (state)\nthis:\n  U <#> V <#> inv\\<^bsub>G Mod N\\<^esub> U\n  \\<in> rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rcosets\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> N \\<lhd> G Mod N\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Factoring by a normal subgroups yields the trivial group iff the subgroup is the whole group.\\<close>"], ["", "lemma (in normal) fact_group_trivial_iff:\n  assumes \"finite (carrier G)\"\n  shows \"(carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}) = (H = carrier G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}) = (H = carrier G)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>} \\<Longrightarrow>\n    H = carrier G\n 2. H = carrier G \\<Longrightarrow>\n    carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}", "assume \"carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}\""], ["proof (state)\nthis:\n  carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}\n\ngoal (2 subgoals):\n 1. carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>} \\<Longrightarrow>\n    H = carrier G\n 2. H = carrier G \\<Longrightarrow>\n    carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}", "moreover"], ["proof (state)\nthis:\n  carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}\n\ngoal (2 subgoals):\n 1. carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>} \\<Longrightarrow>\n    H = carrier G\n 2. H = carrier G \\<Longrightarrow>\n    carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}", "with assms lagrange"], ["proof (chain)\npicking this:\n  finite (carrier G)\n  subgroup ?H G \\<Longrightarrow> card (rcosets ?H) * card ?H = order G\n  carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}", "have \"order (G Mod H) * card H = order G\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n  subgroup ?H G \\<Longrightarrow> card (rcosets ?H) * card ?H = order G\n  carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}\n\ngoal (1 subgoal):\n 1. order (G Mod H) * card H = order G", "unfolding FactGroup_def order_def"], ["proof (prove)\nusing this:\n  finite (carrier G)\n  subgroup ?H G \\<Longrightarrow>\n  card (rcosets ?H) * card ?H = card (carrier G)\n  carrier\n   \\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr> =\n  {\\<one>\\<^bsub>\\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>\\<^esub>}\n\ngoal (1 subgoal):\n 1. card\n     (carrier\n       \\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>) *\n    card H =\n    card (carrier G)", "using is_subgroup"], ["proof (prove)\nusing this:\n  finite (carrier G)\n  subgroup ?H G \\<Longrightarrow>\n  card (rcosets ?H) * card ?H = card (carrier G)\n  carrier\n   \\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr> =\n  {\\<one>\\<^bsub>\\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>\\<^esub>}\n  subgroup H G\n\ngoal (1 subgoal):\n 1. card\n     (carrier\n       \\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>) *\n    card H =\n    card (carrier G)", "by force"], ["proof (state)\nthis:\n  order (G Mod H) * card H = order G\n\ngoal (2 subgoals):\n 1. carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>} \\<Longrightarrow>\n    H = carrier G\n 2. H = carrier G \\<Longrightarrow>\n    carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}", "ultimately"], ["proof (chain)\npicking this:\n  carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}\n  order (G Mod H) * card H = order G", "have \"card H = order G\""], ["proof (prove)\nusing this:\n  carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}\n  order (G Mod H) * card H = order G\n\ngoal (1 subgoal):\n 1. card H = order G", "unfolding order_def"], ["proof (prove)\nusing this:\n  carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}\n  card (carrier (G Mod H)) * card H = card (carrier G)\n\ngoal (1 subgoal):\n 1. card H = card (carrier G)", "by auto"], ["proof (state)\nthis:\n  card H = order G\n\ngoal (2 subgoals):\n 1. carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>} \\<Longrightarrow>\n    H = carrier G\n 2. H = carrier G \\<Longrightarrow>\n    carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}", "thus \"H = carrier G\""], ["proof (prove)\nusing this:\n  card H = order G\n\ngoal (1 subgoal):\n 1. H = carrier G", "using subgroup.subset is_subgroup assms card_subset_eq"], ["proof (prove)\nusing this:\n  card H = order G\n  subgroup ?H ?G \\<Longrightarrow> ?H \\<subseteq> carrier ?G\n  subgroup H G\n  finite (carrier G)\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B; card ?A = card ?B\\<rbrakk>\n  \\<Longrightarrow> ?A = ?B\n\ngoal (1 subgoal):\n 1. H = carrier G", "unfolding order_def"], ["proof (prove)\nusing this:\n  card H = card (carrier G)\n  subgroup ?H ?G \\<Longrightarrow> ?H \\<subseteq> carrier ?G\n  subgroup H G\n  finite (carrier G)\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B; card ?A = card ?B\\<rbrakk>\n  \\<Longrightarrow> ?A = ?B\n\ngoal (1 subgoal):\n 1. H = carrier G", "by metis"], ["proof (state)\nthis:\n  H = carrier G\n\ngoal (1 subgoal):\n 1. H = carrier G \\<Longrightarrow>\n    carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. H = carrier G \\<Longrightarrow>\n    carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}", "from assms"], ["proof (chain)\npicking this:\n  finite (carrier G)", "have ordergt0:\"order G > 0\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. 0 < order G", "unfolding order_def"], ["proof (prove)\nusing this:\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. 0 < card (carrier G)", "by (metis subgroup.finite_imp_card_positive subgroup_self)"], ["proof (state)\nthis:\n  0 < order G\n\ngoal (1 subgoal):\n 1. H = carrier G \\<Longrightarrow>\n    carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}", "assume \"H = carrier G\""], ["proof (state)\nthis:\n  H = carrier G\n\ngoal (1 subgoal):\n 1. H = carrier G \\<Longrightarrow>\n    carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}", "hence \"card H = order G\""], ["proof (prove)\nusing this:\n  H = carrier G\n\ngoal (1 subgoal):\n 1. card H = order G", "unfolding order_def"], ["proof (prove)\nusing this:\n  H = carrier G\n\ngoal (1 subgoal):\n 1. card H = card (carrier G)", "by simp"], ["proof (state)\nthis:\n  card H = order G\n\ngoal (1 subgoal):\n 1. H = carrier G \\<Longrightarrow>\n    carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}", "with assms is_subgroup lagrange"], ["proof (chain)\npicking this:\n  finite (carrier G)\n  subgroup H G\n  subgroup ?H G \\<Longrightarrow> card (rcosets ?H) * card ?H = order G\n  card H = order G", "have \"card (rcosets H) * order G = order G\""], ["proof (prove)\nusing this:\n  finite (carrier G)\n  subgroup H G\n  subgroup ?H G \\<Longrightarrow> card (rcosets ?H) * card ?H = order G\n  card H = order G\n\ngoal (1 subgoal):\n 1. card (rcosets H) * order G = order G", "by metis"], ["proof (state)\nthis:\n  card (rcosets H) * order G = order G\n\ngoal (1 subgoal):\n 1. H = carrier G \\<Longrightarrow>\n    carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}", "with ordergt0"], ["proof (chain)\npicking this:\n  0 < order G\n  card (rcosets H) * order G = order G", "have \"card (rcosets H) = 1\""], ["proof (prove)\nusing this:\n  0 < order G\n  card (rcosets H) * order G = order G\n\ngoal (1 subgoal):\n 1. card (rcosets H) = 1", "by (metis mult_eq_self_implies_10 mult.commute neq0_conv)"], ["proof (state)\nthis:\n  card (rcosets H) = 1\n\ngoal (1 subgoal):\n 1. H = carrier G \\<Longrightarrow>\n    carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}", "hence \"order (G Mod H) = 1\""], ["proof (prove)\nusing this:\n  card (rcosets H) = 1\n\ngoal (1 subgoal):\n 1. order (G Mod H) = 1", "unfolding order_def FactGroup_def"], ["proof (prove)\nusing this:\n  card (rcosets H) = 1\n\ngoal (1 subgoal):\n 1. card\n     (carrier\n       \\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>) =\n    1", "by auto"], ["proof (state)\nthis:\n  order (G Mod H) = 1\n\ngoal (1 subgoal):\n 1. H = carrier G \\<Longrightarrow>\n    carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}", "thus \"carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}\""], ["proof (prove)\nusing this:\n  order (G Mod H) = 1\n\ngoal (1 subgoal):\n 1. carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}", "using factorgroup_is_group"], ["proof (prove)\nusing this:\n  order (G Mod H) = 1\n  Group.group (G Mod H)\n\ngoal (1 subgoal):\n 1. carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}", "by (metis group.order_one_triv_iff)"], ["proof (state)\nthis:\n  carrier (G Mod H) = {\\<one>\\<^bsub>G Mod H\\<^esub>}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Finite groups have finite quotients.\\<close>"], ["", "lemma (in normal) factgroup_finite:\n  assumes \"finite (carrier G)\"\n  shows \"finite (rcosets H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (rcosets H)", "using assms"], ["proof (prove)\nusing this:\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. finite (rcosets H)", "unfolding RCOSETS_def"], ["proof (prove)\nusing this:\n  finite (carrier G)\n\ngoal (1 subgoal):\n 1. finite (\\<Union>a\\<in>carrier G. {H #> a})", "by auto"], ["", "text \\<open>The union of all the cosets contained in a subgroup of a quotient group acts as a represenation for that subgroup.\\<close>"], ["", "lemma (in normal) factgroup_subgroup_union_char:\n  assumes \"subgroup A (G Mod H)\"\n  shows \"(\\<Union>A) = {x \\<in> carrier G. H #> x \\<in> A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> A = {x \\<in> carrier G. H #> x \\<in> A}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Union> A \\<subseteq> {x \\<in> carrier G. H #> x \\<in> A}\n 2. {x \\<in> carrier G. H #> x \\<in> A} \\<subseteq> \\<Union> A", "show \"\\<Union>A \\<subseteq> {x \\<in> carrier G. H #> x \\<in> A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> A \\<subseteq> {x \\<in> carrier G. H #> x \\<in> A}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> A \\<Longrightarrow>\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> A \\<Longrightarrow>\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "assume x:\"x \\<in> \\<Union>A\""], ["proof (state)\nthis:\n  x \\<in> \\<Union> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> A \\<Longrightarrow>\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "then"], ["proof (chain)\npicking this:\n  x \\<in> \\<Union> A", "obtain a where a:\"a \\<in> A\" \"x \\<in> a\""], ["proof (prove)\nusing this:\n  x \\<in> \\<Union> A\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> A; x \\<in> a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a \\<in> A\n  x \\<in> a\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> A \\<Longrightarrow>\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "with assms"], ["proof (chain)\npicking this:\n  subgroup A (G Mod H)\n  a \\<in> A\n  x \\<in> a", "have xx:\"x \\<in> carrier G\""], ["proof (prove)\nusing this:\n  subgroup A (G Mod H)\n  a \\<in> A\n  x \\<in> a\n\ngoal (1 subgoal):\n 1. x \\<in> carrier G", "using subgroup.subset"], ["proof (prove)\nusing this:\n  subgroup A (G Mod H)\n  a \\<in> A\n  x \\<in> a\n  subgroup ?H ?G \\<Longrightarrow> ?H \\<subseteq> carrier ?G\n\ngoal (1 subgoal):\n 1. x \\<in> carrier G", "unfolding FactGroup_def RCOSETS_def r_coset_def"], ["proof (prove)\nusing this:\n  subgroup A\n   \\<lparr>carrier =\n             \\<Union>a\\<in>carrier G. {\\<Union>h\\<in>H. {h \\<otimes> a}},\n      monoid.mult = (<#>), one = H\\<rparr>\n  a \\<in> A\n  x \\<in> a\n  subgroup ?H ?G \\<Longrightarrow> ?H \\<subseteq> carrier ?G\n\ngoal (1 subgoal):\n 1. x \\<in> carrier G", "by force"], ["proof (state)\nthis:\n  x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> A \\<Longrightarrow>\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "from assms a"], ["proof (chain)\npicking this:\n  subgroup A (G Mod H)\n  a \\<in> A\n  x \\<in> a", "obtain y where y:\"y \\<in> carrier G\" \"a = H #> y\""], ["proof (prove)\nusing this:\n  subgroup A (G Mod H)\n  a \\<in> A\n  x \\<in> a\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> carrier G; a = H #> y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using subgroup.subset"], ["proof (prove)\nusing this:\n  subgroup A (G Mod H)\n  a \\<in> A\n  x \\<in> a\n  subgroup ?H ?G \\<Longrightarrow> ?H \\<subseteq> carrier ?G\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> carrier G; a = H #> y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding FactGroup_def RCOSETS_def"], ["proof (prove)\nusing this:\n  subgroup A\n   \\<lparr>carrier = \\<Union>a\\<in>carrier G. {H #> a}, monoid.mult = (<#>),\n      one = H\\<rparr>\n  a \\<in> A\n  x \\<in> a\n  subgroup ?H ?G \\<Longrightarrow> ?H \\<subseteq> carrier ?G\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> carrier G; a = H #> y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  y \\<in> carrier G\n  a = H #> y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> A \\<Longrightarrow>\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "with a"], ["proof (chain)\npicking this:\n  a \\<in> A\n  x \\<in> a\n  y \\<in> carrier G\n  a = H #> y", "have \"x \\<in> H #> y\""], ["proof (prove)\nusing this:\n  a \\<in> A\n  x \\<in> a\n  y \\<in> carrier G\n  a = H #> y\n\ngoal (1 subgoal):\n 1. x \\<in> H #> y", "by simp"], ["proof (state)\nthis:\n  x \\<in> H #> y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> A \\<Longrightarrow>\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "hence \"H #> y = H #> x\""], ["proof (prove)\nusing this:\n  x \\<in> H #> y\n\ngoal (1 subgoal):\n 1. H #> y = H #> x", "using y is_subgroup repr_independence"], ["proof (prove)\nusing this:\n  x \\<in> H #> y\n  y \\<in> carrier G\n  a = H #> y\n  subgroup H G\n  \\<lbrakk>?y \\<in> ?H #> ?x; ?x \\<in> carrier G; subgroup ?H G\\<rbrakk>\n  \\<Longrightarrow> ?H #> ?x = ?H #> ?y\n\ngoal (1 subgoal):\n 1. H #> y = H #> x", "by auto"], ["proof (state)\nthis:\n  H #> y = H #> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> A \\<Longrightarrow>\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "with y(2) a(1)"], ["proof (chain)\npicking this:\n  a = H #> y\n  a \\<in> A\n  H #> y = H #> x", "have \"H #> x \\<in> A\""], ["proof (prove)\nusing this:\n  a = H #> y\n  a \\<in> A\n  H #> y = H #> x\n\ngoal (1 subgoal):\n 1. H #> x \\<in> A", "by auto"], ["proof (state)\nthis:\n  H #> x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> A \\<Longrightarrow>\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "with xx"], ["proof (chain)\npicking this:\n  x \\<in> carrier G\n  H #> x \\<in> A", "show \"x \\<in> {x \\<in> carrier G. H #> x \\<in> A}\""], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  H #> x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "by simp"], ["proof (state)\nthis:\n  x \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Union> A \\<subseteq> {x \\<in> carrier G. H #> x \\<in> A}\n\ngoal (1 subgoal):\n 1. {x \\<in> carrier G. H #> x \\<in> A} \\<subseteq> \\<Union> A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {x \\<in> carrier G. H #> x \\<in> A} \\<subseteq> \\<Union> A", "show \"{x \\<in> carrier G. H #> x \\<in> A} \\<subseteq> \\<Union>A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> carrier G. H #> x \\<in> A} \\<subseteq> \\<Union> A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       x \\<in> \\<Union> A", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       x \\<in> \\<Union> A", "assume x:\"x \\<in> {x \\<in> carrier G. H #> x \\<in> A}\""], ["proof (state)\nthis:\n  x \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       x \\<in> \\<Union> A", "hence xx:\"x \\<in> carrier G\" \"H #> x \\<in> A\""], ["proof (prove)\nusing this:\n  x \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n\ngoal (1 subgoal):\n 1. x \\<in> carrier G &&& H #> x \\<in> A", "by auto"], ["proof (state)\nthis:\n  x \\<in> carrier G\n  H #> x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       x \\<in> \\<Union> A", "moreover"], ["proof (state)\nthis:\n  x \\<in> carrier G\n  H #> x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       x \\<in> \\<Union> A", "have \"x \\<in> H #> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> H #> x", "by (metis is_subgroup rcos_self xx(1))"], ["proof (state)\nthis:\n  x \\<in> H #> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       x \\<in> \\<Union> A", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> carrier G\n  H #> x \\<in> A\n  x \\<in> H #> x", "show \"x \\<in> \\<Union>A\""], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  H #> x \\<in> A\n  x \\<in> H #> x\n\ngoal (1 subgoal):\n 1. x \\<in> \\<Union> A", "by auto"], ["proof (state)\nthis:\n  x \\<in> \\<Union> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {x \\<in> carrier G. H #> x \\<in> A} \\<subseteq> \\<Union> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in normal) factgroup_subgroup_union_subgroup:\n  assumes \"subgroup A (G Mod H)\"\n  shows \"subgroup (\\<Union>A) G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (\\<Union> A) G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subgroup (\\<Union> A) G", "have \"subgroup {x \\<in> carrier G. H #> x \\<in> A} G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup {x \\<in> carrier G. H #> x \\<in> A} G", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. {x \\<in> carrier G. H #> x \\<in> A} \\<subseteq> carrier G\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> {x \\<in> carrier G. H #> x \\<in> A};\n        y \\<in> {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y\n                         \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n 3. \\<one> \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n 4. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "show \"{x \\<in> carrier G. H #> x \\<in> A} \\<subseteq> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> carrier G. H #> x \\<in> A} \\<subseteq> carrier G", "by auto"], ["proof (state)\nthis:\n  {x \\<in> carrier G. H #> x \\<in> A} \\<subseteq> carrier G\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x \\<in> carrier G. H #> x \\<in> A};\n        y \\<in> {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y\n                         \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<one> \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n 3. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x \\<in> carrier G. H #> x \\<in> A};\n        y \\<in> {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y\n                         \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<one> \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n 3. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "fix x y"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x \\<in> carrier G. H #> x \\<in> A};\n        y \\<in> {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y\n                         \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<one> \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n 3. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "assume \"x \\<in> {x \\<in> carrier G. H #> x \\<in> A}\" and \"y \\<in> {x \\<in> carrier G. H #> x \\<in> A}\""], ["proof (state)\nthis:\n  x \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n  y \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x \\<in> carrier G. H #> x \\<in> A};\n        y \\<in> {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y\n                         \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<one> \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n 3. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "hence x:\"x \\<in> carrier G\" \"H #> x \\<in> A\" and y:\"y \\<in> carrier G\" \"H #> y \\<in> A\""], ["proof (prove)\nusing this:\n  x \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n  y \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n\ngoal (1 subgoal):\n 1. (x \\<in> carrier G &&& H #> x \\<in> A) &&&\n    y \\<in> carrier G &&& H #> y \\<in> A", "by auto"], ["proof (state)\nthis:\n  x \\<in> carrier G\n  H #> x \\<in> A\n  y \\<in> carrier G\n  H #> y \\<in> A\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x \\<in> carrier G. H #> x \\<in> A};\n        y \\<in> {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y\n                         \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<one> \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n 3. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "hence xyG:\"x \\<otimes> y \\<in> carrier G\""], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  H #> x \\<in> A\n  y \\<in> carrier G\n  H #> y \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<otimes> y \\<in> carrier G", "by (metis m_closed)"], ["proof (state)\nthis:\n  x \\<otimes> y \\<in> carrier G\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x \\<in> carrier G. H #> x \\<in> A};\n        y \\<in> {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y\n                         \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<one> \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n 3. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "from assms x y"], ["proof (chain)\npicking this:\n  subgroup A (G Mod H)\n  x \\<in> carrier G\n  H #> x \\<in> A\n  y \\<in> carrier G\n  H #> y \\<in> A", "have \"(H #> x) <#> (H #> y) \\<in> A\""], ["proof (prove)\nusing this:\n  subgroup A (G Mod H)\n  x \\<in> carrier G\n  H #> x \\<in> A\n  y \\<in> carrier G\n  H #> y \\<in> A\n\ngoal (1 subgoal):\n 1. H #> x <#> (H #> y) \\<in> A", "using subgroup.m_closed"], ["proof (prove)\nusing this:\n  subgroup A (G Mod H)\n  x \\<in> carrier G\n  H #> x \\<in> A\n  y \\<in> carrier G\n  H #> y \\<in> A\n  \\<lbrakk>subgroup ?H ?G; ?x \\<in> ?H; ?y \\<in> ?H\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes>\\<^bsub>?G\\<^esub> ?y \\<in> ?H\n\ngoal (1 subgoal):\n 1. H #> x <#> (H #> y) \\<in> A", "unfolding FactGroup_def"], ["proof (prove)\nusing this:\n  subgroup A\n   \\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>\n  x \\<in> carrier G\n  H #> x \\<in> A\n  y \\<in> carrier G\n  H #> y \\<in> A\n  \\<lbrakk>subgroup ?H ?G; ?x \\<in> ?H; ?y \\<in> ?H\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes>\\<^bsub>?G\\<^esub> ?y \\<in> ?H\n\ngoal (1 subgoal):\n 1. H #> x <#> (H #> y) \\<in> A", "by fastforce"], ["proof (state)\nthis:\n  H #> x <#> (H #> y) \\<in> A\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x \\<in> carrier G. H #> x \\<in> A};\n        y \\<in> {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y\n                         \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<one> \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n 3. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "hence \"H #> (x \\<otimes> y) \\<in> A\""], ["proof (prove)\nusing this:\n  H #> x <#> (H #> y) \\<in> A\n\ngoal (1 subgoal):\n 1. H #> x \\<otimes> y \\<in> A", "by (metis rcos_sum x(1) y(1))"], ["proof (state)\nthis:\n  H #> x \\<otimes> y \\<in> A\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {x \\<in> carrier G. H #> x \\<in> A};\n        y \\<in> {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes> y\n                         \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<one> \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n 3. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "with xyG"], ["proof (chain)\npicking this:\n  x \\<otimes> y \\<in> carrier G\n  H #> x \\<otimes> y \\<in> A", "show \"x \\<otimes> y \\<in> {x \\<in> carrier G. H #> x \\<in> A}\""], ["proof (prove)\nusing this:\n  x \\<otimes> y \\<in> carrier G\n  H #> x \\<otimes> y \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<otimes> y \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "by simp"], ["proof (state)\nthis:\n  x \\<otimes> y \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n\ngoal (2 subgoals):\n 1. \\<one> \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<one> \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "have \"H #> \\<one> \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H #> \\<one> \\<in> A", "using assms subgroup.one_closed"], ["proof (prove)\nusing this:\n  subgroup A (G Mod H)\n  subgroup ?H ?G \\<Longrightarrow> \\<one>\\<^bsub>?G\\<^esub> \\<in> ?H\n\ngoal (1 subgoal):\n 1. H #> \\<one> \\<in> A", "unfolding FactGroup_def"], ["proof (prove)\nusing this:\n  subgroup A\n   \\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>\n  subgroup ?H ?G \\<Longrightarrow> \\<one>\\<^bsub>?G\\<^esub> \\<in> ?H\n\ngoal (1 subgoal):\n 1. H #> \\<one> \\<in> A", "by (metis coset_mult_one monoid.select_convs(2) subset)"], ["proof (state)\nthis:\n  H #> \\<one> \\<in> A\n\ngoal (2 subgoals):\n 1. \\<one> \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "with assms one_closed"], ["proof (chain)\npicking this:\n  subgroup A (G Mod H)\n  \\<one> \\<in> carrier G\n  H #> \\<one> \\<in> A", "show \"\\<one> \\<in> {x \\<in> carrier G. H #> x \\<in> A}\""], ["proof (prove)\nusing this:\n  subgroup A (G Mod H)\n  \\<one> \\<in> carrier G\n  H #> \\<one> \\<in> A\n\ngoal (1 subgoal):\n 1. \\<one> \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "by simp"], ["proof (state)\nthis:\n  \\<one> \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "assume \"x \\<in> {x \\<in> carrier G. H #> x \\<in> A}\""], ["proof (state)\nthis:\n  x \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "hence x:\"x \\<in> carrier G\" \"H #> x \\<in> A\""], ["proof (prove)\nusing this:\n  x \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n\ngoal (1 subgoal):\n 1. x \\<in> carrier G &&& H #> x \\<in> A", "by auto"], ["proof (state)\nthis:\n  x \\<in> carrier G\n  H #> x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "hence invx:\"inv x \\<in> carrier G\""], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  H #> x \\<in> A\n\ngoal (1 subgoal):\n 1. inv x \\<in> carrier G", "using inv_closed"], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  H #> x \\<in> A\n  ?x \\<in> carrier G \\<Longrightarrow> inv ?x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. inv x \\<in> carrier G", "by simp"], ["proof (state)\nthis:\n  inv x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "from assms x"], ["proof (chain)\npicking this:\n  subgroup A (G Mod H)\n  x \\<in> carrier G\n  H #> x \\<in> A", "have \"set_inv (H #> x) \\<in> A\""], ["proof (prove)\nusing this:\n  subgroup A (G Mod H)\n  x \\<in> carrier G\n  H #> x \\<in> A\n\ngoal (1 subgoal):\n 1. set_inv (H #> x) \\<in> A", "using subgroup.m_inv_closed"], ["proof (prove)\nusing this:\n  subgroup A (G Mod H)\n  x \\<in> carrier G\n  H #> x \\<in> A\n  \\<lbrakk>subgroup ?H ?G; ?x \\<in> ?H\\<rbrakk>\n  \\<Longrightarrow> inv\\<^bsub>?G\\<^esub> ?x \\<in> ?H\n\ngoal (1 subgoal):\n 1. set_inv (H #> x) \\<in> A", "by (metis inv_FactGroup subgroup.mem_carrier)"], ["proof (state)\nthis:\n  set_inv (H #> x) \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "hence \"H #> (inv x) \\<in> A\""], ["proof (prove)\nusing this:\n  set_inv (H #> x) \\<in> A\n\ngoal (1 subgoal):\n 1. H #> inv x \\<in> A", "by (metis rcos_inv x(1))"], ["proof (state)\nthis:\n  H #> inv x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {x \\<in> carrier G. H #> x \\<in> A} \\<Longrightarrow>\n       inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "with invx"], ["proof (chain)\npicking this:\n  inv x \\<in> carrier G\n  H #> inv x \\<in> A", "show \"inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}\""], ["proof (prove)\nusing this:\n  inv x \\<in> carrier G\n  H #> inv x \\<in> A\n\ngoal (1 subgoal):\n 1. inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "by simp"], ["proof (state)\nthis:\n  inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subgroup {x \\<in> carrier G. H #> x \\<in> A} G\n\ngoal (1 subgoal):\n 1. subgroup (\\<Union> A) G", "with assms factgroup_subgroup_union_char"], ["proof (chain)\npicking this:\n  subgroup A (G Mod H)\n  subgroup ?A (G Mod H) \\<Longrightarrow>\n  \\<Union> ?A = {x \\<in> carrier G. H #> x \\<in> ?A}\n  subgroup {x \\<in> carrier G. H #> x \\<in> A} G", "show ?thesis"], ["proof (prove)\nusing this:\n  subgroup A (G Mod H)\n  subgroup ?A (G Mod H) \\<Longrightarrow>\n  \\<Union> ?A = {x \\<in> carrier G. H #> x \\<in> ?A}\n  subgroup {x \\<in> carrier G. H #> x \\<in> A} G\n\ngoal (1 subgoal):\n 1. subgroup (\\<Union> A) G", "by auto"], ["proof (state)\nthis:\n  subgroup (\\<Union> A) G\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in normal) factgroup_subgroup_union_normal:\n  assumes \"A \\<lhd> (G Mod H)\"\n  shows \"\\<Union>A \\<lhd> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> A \\<lhd> G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Union> A \\<lhd> G", "have \"{x \\<in> carrier G. H #> x \\<in> A} \\<lhd> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> carrier G. H #> x \\<in> A} \\<lhd> G", "unfolding normal_def normal_axioms_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup {x \\<in> carrier G. H #> x \\<in> A} G \\<and>\n    Group.group G \\<and>\n    (\\<forall>x\\<in>carrier G.\n        {x \\<in> carrier G. H #> x \\<in> A} #> x =\n        x <# {x \\<in> carrier G. H #> x \\<in> A})", "proof auto"], ["proof (state)\ngoal (3 subgoals):\n 1. subgroup {x \\<in> carrier G. H #> x \\<in> A} G\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 3. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "(*(auto del: equalityI)*)"], ["proof (state)\ngoal (3 subgoals):\n 1. subgroup {x \\<in> carrier G. H #> x \\<in> A} G\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 3. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "from assms"], ["proof (chain)\npicking this:\n  A \\<lhd> G Mod H", "show \"subgroup {x \\<in> carrier G. H #> x \\<in> A} G\""], ["proof (prove)\nusing this:\n  A \\<lhd> G Mod H\n\ngoal (1 subgoal):\n 1. subgroup {x \\<in> carrier G. H #> x \\<in> A} G", "by (metis (full_types) factgroup_subgroup_union_char factgroup_subgroup_union_subgroup normal_imp_subgroup)"], ["proof (state)\nthis:\n  subgroup {x \\<in> carrier G. H #> x \\<in> A} G\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "interpret Anormal: normal A \"(G Mod H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<lhd> G Mod H", "using assms"], ["proof (prove)\nusing this:\n  A \\<lhd> G Mod H\n\ngoal (1 subgoal):\n 1. A \\<lhd> G Mod H", "by simp"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "fix x y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "assume x:\"x \\<in> carrier G\" \"y \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\""], ["proof (state)\nthis:\n  x \\<in> carrier G\n  y \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "then"], ["proof (chain)\npicking this:\n  x \\<in> carrier G\n  y \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "obtain x' where \"x' \\<in> {x \\<in> carrier G. H #> x \\<in> A}\" \"y = x' \\<otimes> x\""], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  y \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<in> {x \\<in> carrier G. H #> x \\<in> A};\n         y = x' \\<otimes> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding r_coset_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  y \\<in> (\\<Union>h\\<in>{x \\<in> carrier G.\n                          (\\<Union>h\\<in>H. {h \\<otimes> x}) \\<in> A}.\n              {h \\<otimes> x})\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<in> {x \\<in> carrier G.\n                           (\\<Union>h\\<in>H. {h \\<otimes> x}) \\<in> A};\n         y = x' \\<otimes> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x' \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n  y = x' \\<otimes> x\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "hence x':\"x' \\<in> carrier G\" \"H #> x' \\<in> A\""], ["proof (prove)\nusing this:\n  x' \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n  y = x' \\<otimes> x\n\ngoal (1 subgoal):\n 1. x' \\<in> carrier G &&& H #> x' \\<in> A", "by auto"], ["proof (state)\nthis:\n  x' \\<in> carrier G\n  H #> x' \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "from x(1)"], ["proof (chain)\npicking this:\n  x \\<in> carrier G", "have Hx:\"H #> x \\<in> carrier (G Mod H)\""], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. H #> x \\<in> carrier (G Mod H)", "unfolding FactGroup_def RCOSETS_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. H #> x\n    \\<in> carrier\n           \\<lparr>carrier = \\<Union>a\\<in>carrier G. {H #> a},\n              monoid.mult = (<#>), one = H\\<rparr>", "by force"], ["proof (state)\nthis:\n  H #> x \\<in> carrier (G Mod H)\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "with x'"], ["proof (chain)\npicking this:\n  x' \\<in> carrier G\n  H #> x' \\<in> A\n  H #> x \\<in> carrier (G Mod H)", "have \"(inv\\<^bsub>G Mod H\\<^esub> (H #> x)) \\<otimes>\\<^bsub>G Mod H\\<^esub> (H #> x') \\<otimes>\\<^bsub>G Mod H\\<^esub> (H #> x) \\<in> A\""], ["proof (prove)\nusing this:\n  x' \\<in> carrier G\n  H #> x' \\<in> A\n  H #> x \\<in> carrier (G Mod H)\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>G Mod H\\<^esub> (H #> x) \\<otimes>\\<^bsub>G Mod H\\<^esub>\n    (H #> x') \\<otimes>\\<^bsub>G Mod H\\<^esub>\n    (H #> x)\n    \\<in> A", "using Anormal.inv_op_closed1"], ["proof (prove)\nusing this:\n  x' \\<in> carrier G\n  H #> x' \\<in> A\n  H #> x \\<in> carrier (G Mod H)\n  \\<lbrakk>?x \\<in> carrier (G Mod H); ?h \\<in> A\\<rbrakk>\n  \\<Longrightarrow> inv\\<^bsub>G Mod H\\<^esub> ?x \\<otimes>\\<^bsub>G Mod H\\<^esub>\n                    ?h \\<otimes>\\<^bsub>G Mod H\\<^esub>\n                    ?x\n                    \\<in> A\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>G Mod H\\<^esub> (H #> x) \\<otimes>\\<^bsub>G Mod H\\<^esub>\n    (H #> x') \\<otimes>\\<^bsub>G Mod H\\<^esub>\n    (H #> x)\n    \\<in> A", "by auto"], ["proof (state)\nthis:\n  inv\\<^bsub>G Mod H\\<^esub> (H #> x) \\<otimes>\\<^bsub>G Mod H\\<^esub>\n  (H #> x') \\<otimes>\\<^bsub>G Mod H\\<^esub>\n  (H #> x)\n  \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "hence \"(set_inv (H #> x)) <#> (H #> x') <#> (H #> x) \\<in> A\""], ["proof (prove)\nusing this:\n  inv\\<^bsub>G Mod H\\<^esub> (H #> x) \\<otimes>\\<^bsub>G Mod H\\<^esub>\n  (H #> x') \\<otimes>\\<^bsub>G Mod H\\<^esub>\n  (H #> x)\n  \\<in> A\n\ngoal (1 subgoal):\n 1. set_inv (H #> x) <#> (H #> x') <#> (H #> x) \\<in> A", "using inv_FactGroup Hx"], ["proof (prove)\nusing this:\n  inv\\<^bsub>G Mod H\\<^esub> (H #> x) \\<otimes>\\<^bsub>G Mod H\\<^esub>\n  (H #> x') \\<otimes>\\<^bsub>G Mod H\\<^esub>\n  (H #> x)\n  \\<in> A\n  ?X \\<in> carrier (G Mod H) \\<Longrightarrow>\n  inv\\<^bsub>G Mod H\\<^esub> ?X = set_inv ?X\n  H #> x \\<in> carrier (G Mod H)\n\ngoal (1 subgoal):\n 1. set_inv (H #> x) <#> (H #> x') <#> (H #> x) \\<in> A", "unfolding FactGroup_def"], ["proof (prove)\nusing this:\n  inv\\<^bsub>\\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>\\<^esub> (H #>\n            x) \\<otimes>\\<^bsub>\\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>\\<^esub>\n  (H #>\n   x') \\<otimes>\\<^bsub>\\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>\\<^esub>\n  (H #> x)\n  \\<in> A\n  ?X \\<in> carrier\n            \\<lparr>carrier = rcosets H, monoid.mult = (<#>),\n               one = H\\<rparr> \\<Longrightarrow>\n  inv\\<^bsub>\\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>\\<^esub> ?X =\n  set_inv ?X\n  H #> x\n  \\<in> carrier\n         \\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>\n\ngoal (1 subgoal):\n 1. set_inv (H #> x) <#> (H #> x') <#> (H #> x) \\<in> A", "by auto"], ["proof (state)\nthis:\n  set_inv (H #> x) <#> (H #> x') <#> (H #> x) \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "hence \"(H #> (inv x)) <#> (H #> x') <#> (H #> x) \\<in> A\""], ["proof (prove)\nusing this:\n  set_inv (H #> x) <#> (H #> x') <#> (H #> x) \\<in> A\n\ngoal (1 subgoal):\n 1. H #> inv x <#> (H #> x') <#> (H #> x) \\<in> A", "using x(1)"], ["proof (prove)\nusing this:\n  set_inv (H #> x) <#> (H #> x') <#> (H #> x) \\<in> A\n  x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. H #> inv x <#> (H #> x') <#> (H #> x) \\<in> A", "by (metis rcos_inv)"], ["proof (state)\nthis:\n  H #> inv x <#> (H #> x') <#> (H #> x) \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "hence \"(H #> (inv x \\<otimes> x')) <#> (H #> x) \\<in> A\""], ["proof (prove)\nusing this:\n  H #> inv x <#> (H #> x') <#> (H #> x) \\<in> A\n\ngoal (1 subgoal):\n 1. H #> inv x \\<otimes> x' <#> (H #> x) \\<in> A", "by (metis inv_closed rcos_sum x'(1) x(1))"], ["proof (state)\nthis:\n  H #> inv x \\<otimes> x' <#> (H #> x) \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "hence \"H #> (inv x \\<otimes> x' \\<otimes> x) \\<in> A\""], ["proof (prove)\nusing this:\n  H #> inv x \\<otimes> x' <#> (H #> x) \\<in> A\n\ngoal (1 subgoal):\n 1. H #> inv x \\<otimes> x' \\<otimes> x \\<in> A", "by (metis inv_closed m_closed rcos_sum x'(1) x(1))"], ["proof (state)\nthis:\n  H #> inv x \\<otimes> x' \\<otimes> x \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "moreover"], ["proof (state)\nthis:\n  H #> inv x \\<otimes> x' \\<otimes> x \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "have \"inv x \\<otimes> x' \\<otimes> x \\<in> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv x \\<otimes> x' \\<otimes> x \\<in> carrier G", "using x x'"], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  y \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\n  x' \\<in> carrier G\n  H #> x' \\<in> A\n\ngoal (1 subgoal):\n 1. inv x \\<otimes> x' \\<otimes> x \\<in> carrier G", "by (metis inv_closed m_closed)"], ["proof (state)\nthis:\n  inv x \\<otimes> x' \\<otimes> x \\<in> carrier G\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "ultimately"], ["proof (chain)\npicking this:\n  H #> inv x \\<otimes> x' \\<otimes> x \\<in> A\n  inv x \\<otimes> x' \\<otimes> x \\<in> carrier G", "have \"inv x \\<otimes> x' \\<otimes> x \\<in> {x \\<in> carrier G. H #> x \\<in> A}\""], ["proof (prove)\nusing this:\n  H #> inv x \\<otimes> x' \\<otimes> x \\<in> A\n  inv x \\<otimes> x' \\<otimes> x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. inv x \\<otimes> x' \\<otimes> x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "by auto"], ["proof (state)\nthis:\n  inv x \\<otimes> x' \\<otimes> x \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "hence xcoset:\"x \\<otimes> (inv x \\<otimes> x' \\<otimes> x) \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\""], ["proof (prove)\nusing this:\n  inv x \\<otimes> x' \\<otimes> x \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n\ngoal (1 subgoal):\n 1. x \\<otimes> (inv x \\<otimes> x' \\<otimes> x)\n    \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}", "unfolding l_coset_def"], ["proof (prove)\nusing this:\n  inv x \\<otimes> x' \\<otimes> x \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n\ngoal (1 subgoal):\n 1. x \\<otimes> (inv x \\<otimes> x' \\<otimes> x)\n    \\<in> (\\<Union>h\\<in>{x \\<in> carrier G. H #> x \\<in> A}.\n              {x \\<otimes> h})", "using x(1)"], ["proof (prove)\nusing this:\n  inv x \\<otimes> x' \\<otimes> x \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n  x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. x \\<otimes> (inv x \\<otimes> x' \\<otimes> x)\n    \\<in> (\\<Union>h\\<in>{x \\<in> carrier G. H #> x \\<in> A}.\n              {x \\<otimes> h})", "by auto"], ["proof (state)\nthis:\n  x \\<otimes> (inv x \\<otimes> x' \\<otimes> x)\n  \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "have \"x \\<otimes> (inv x \\<otimes> x' \\<otimes> x) = (x \\<otimes> inv x) \\<otimes> x' \\<otimes> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes> (inv x \\<otimes> x' \\<otimes> x) =\n    x \\<otimes> inv x \\<otimes> x' \\<otimes> x", "by (metis Units_eq Units_inv_Units m_assoc m_closed x'(1) x(1))"], ["proof (state)\nthis:\n  x \\<otimes> (inv x \\<otimes> x' \\<otimes> x) =\n  x \\<otimes> inv x \\<otimes> x' \\<otimes> x\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "also"], ["proof (state)\nthis:\n  x \\<otimes> (inv x \\<otimes> x' \\<otimes> x) =\n  x \\<otimes> inv x \\<otimes> x' \\<otimes> x\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "have \"\\<dots> = x' \\<otimes> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes> inv x \\<otimes> x' \\<otimes> x = x' \\<otimes> x", "by (metis l_one r_inv x'(1) x(1))"], ["proof (state)\nthis:\n  x \\<otimes> inv x \\<otimes> x' \\<otimes> x = x' \\<otimes> x\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "also"], ["proof (state)\nthis:\n  x \\<otimes> inv x \\<otimes> x' \\<otimes> x = x' \\<otimes> x\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "have \"\\<dots> = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x' \\<otimes> x = y", "by (metis \\<open>y = x' \\<otimes> x\\<close>)"], ["proof (state)\nthis:\n  x' \\<otimes> x = y\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "finally"], ["proof (chain)\npicking this:\n  x \\<otimes> (inv x \\<otimes> x' \\<otimes> x) = y", "have \"x \\<otimes> (inv x \\<otimes> x' \\<otimes> x) = y\""], ["proof (prove)\nusing this:\n  x \\<otimes> (inv x \\<otimes> x' \\<otimes> x) = y\n\ngoal (1 subgoal):\n 1. x \\<otimes> (inv x \\<otimes> x' \\<otimes> x) = y", "."], ["proof (state)\nthis:\n  x \\<otimes> (inv x \\<otimes> x' \\<otimes> x) = y\n\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n 2. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "with xcoset"], ["proof (chain)\npicking this:\n  x \\<otimes> (inv x \\<otimes> x' \\<otimes> x)\n  \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n  x \\<otimes> (inv x \\<otimes> x' \\<otimes> x) = y", "show \"y \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\""], ["proof (prove)\nusing this:\n  x \\<otimes> (inv x \\<otimes> x' \\<otimes> x)\n  \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n  x \\<otimes> (inv x \\<otimes> x' \\<otimes> x) = y\n\ngoal (1 subgoal):\n 1. y \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}", "by auto"], ["proof (state)\nthis:\n  y \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "interpret Anormal: normal A \"(G Mod H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<lhd> G Mod H", "using assms"], ["proof (prove)\nusing this:\n  A \\<lhd> G Mod H\n\ngoal (1 subgoal):\n 1. A \\<lhd> G Mod H", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "assume x:\"x \\<in> carrier G\" \"y \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\""], ["proof (state)\nthis:\n  x \\<in> carrier G\n  y \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "then"], ["proof (chain)\npicking this:\n  x \\<in> carrier G\n  y \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}", "obtain x' where \"x' \\<in> {x \\<in> carrier G. H #> x \\<in> A}\" \"y = x \\<otimes> x'\""], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  y \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<in> {x \\<in> carrier G. H #> x \\<in> A};\n         y = x \\<otimes> x'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding l_coset_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  y \\<in> (\\<Union>h\\<in>{x \\<in> carrier G. H #> x \\<in> A}.\n              {x \\<otimes> h})\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<in> {x \\<in> carrier G. H #> x \\<in> A};\n         y = x \\<otimes> x'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x' \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n  y = x \\<otimes> x'\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "hence x':\"x' \\<in> carrier G\" \"H #> x' \\<in> A\""], ["proof (prove)\nusing this:\n  x' \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n  y = x \\<otimes> x'\n\ngoal (1 subgoal):\n 1. x' \\<in> carrier G &&& H #> x' \\<in> A", "by auto"], ["proof (state)\nthis:\n  x' \\<in> carrier G\n  H #> x' \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "from x(1)"], ["proof (chain)\npicking this:\n  x \\<in> carrier G", "have invx:\"inv x \\<in> carrier G\""], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. inv x \\<in> carrier G", "by (rule inv_closed)"], ["proof (state)\nthis:\n  inv x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "hence Hinvx:\"H #> (inv x) \\<in> carrier (G Mod H)\""], ["proof (prove)\nusing this:\n  inv x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. H #> inv x \\<in> carrier (G Mod H)", "unfolding FactGroup_def RCOSETS_def"], ["proof (prove)\nusing this:\n  inv x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. H #> inv x\n    \\<in> carrier\n           \\<lparr>carrier = \\<Union>a\\<in>carrier G. {H #> a},\n              monoid.mult = (<#>), one = H\\<rparr>", "by force"], ["proof (state)\nthis:\n  H #> inv x \\<in> carrier (G Mod H)\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "with x'"], ["proof (chain)\npicking this:\n  x' \\<in> carrier G\n  H #> x' \\<in> A\n  H #> inv x \\<in> carrier (G Mod H)", "have \"(inv\\<^bsub>G Mod H\\<^esub> (H #> inv x)) \\<otimes>\\<^bsub>G Mod H\\<^esub> (H #> x') \\<otimes>\\<^bsub>G Mod H\\<^esub> (H #> inv x) \\<in> A\""], ["proof (prove)\nusing this:\n  x' \\<in> carrier G\n  H #> x' \\<in> A\n  H #> inv x \\<in> carrier (G Mod H)\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>G Mod H\\<^esub> (H #> inv x) \\<otimes>\\<^bsub>G Mod H\\<^esub>\n    (H #> x') \\<otimes>\\<^bsub>G Mod H\\<^esub>\n    (H #> inv x)\n    \\<in> A", "using invx Anormal.inv_op_closed1"], ["proof (prove)\nusing this:\n  x' \\<in> carrier G\n  H #> x' \\<in> A\n  H #> inv x \\<in> carrier (G Mod H)\n  inv x \\<in> carrier G\n  \\<lbrakk>?x \\<in> carrier (G Mod H); ?h \\<in> A\\<rbrakk>\n  \\<Longrightarrow> inv\\<^bsub>G Mod H\\<^esub> ?x \\<otimes>\\<^bsub>G Mod H\\<^esub>\n                    ?h \\<otimes>\\<^bsub>G Mod H\\<^esub>\n                    ?x\n                    \\<in> A\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>G Mod H\\<^esub> (H #> inv x) \\<otimes>\\<^bsub>G Mod H\\<^esub>\n    (H #> x') \\<otimes>\\<^bsub>G Mod H\\<^esub>\n    (H #> inv x)\n    \\<in> A", "by auto"], ["proof (state)\nthis:\n  inv\\<^bsub>G Mod H\\<^esub> (H #> inv x) \\<otimes>\\<^bsub>G Mod H\\<^esub>\n  (H #> x') \\<otimes>\\<^bsub>G Mod H\\<^esub>\n  (H #> inv x)\n  \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "hence \"(set_inv (H #> inv x)) <#> (H #> x') <#> (H #> inv x) \\<in> A\""], ["proof (prove)\nusing this:\n  inv\\<^bsub>G Mod H\\<^esub> (H #> inv x) \\<otimes>\\<^bsub>G Mod H\\<^esub>\n  (H #> x') \\<otimes>\\<^bsub>G Mod H\\<^esub>\n  (H #> inv x)\n  \\<in> A\n\ngoal (1 subgoal):\n 1. set_inv (H #> inv x) <#> (H #> x') <#> (H #> inv x) \\<in> A", "using inv_FactGroup Hinvx"], ["proof (prove)\nusing this:\n  inv\\<^bsub>G Mod H\\<^esub> (H #> inv x) \\<otimes>\\<^bsub>G Mod H\\<^esub>\n  (H #> x') \\<otimes>\\<^bsub>G Mod H\\<^esub>\n  (H #> inv x)\n  \\<in> A\n  ?X \\<in> carrier (G Mod H) \\<Longrightarrow>\n  inv\\<^bsub>G Mod H\\<^esub> ?X = set_inv ?X\n  H #> inv x \\<in> carrier (G Mod H)\n\ngoal (1 subgoal):\n 1. set_inv (H #> inv x) <#> (H #> x') <#> (H #> inv x) \\<in> A", "unfolding FactGroup_def"], ["proof (prove)\nusing this:\n  inv\\<^bsub>\\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>\\<^esub> (H #>\n            inv x) \\<otimes>\\<^bsub>\\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>\\<^esub>\n  (H #>\n   x') \\<otimes>\\<^bsub>\\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>\\<^esub>\n  (H #> inv x)\n  \\<in> A\n  ?X \\<in> carrier\n            \\<lparr>carrier = rcosets H, monoid.mult = (<#>),\n               one = H\\<rparr> \\<Longrightarrow>\n  inv\\<^bsub>\\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>\\<^esub> ?X =\n  set_inv ?X\n  H #> inv x\n  \\<in> carrier\n         \\<lparr>carrier = rcosets H, monoid.mult = (<#>), one = H\\<rparr>\n\ngoal (1 subgoal):\n 1. set_inv (H #> inv x) <#> (H #> x') <#> (H #> inv x) \\<in> A", "by auto"], ["proof (state)\nthis:\n  set_inv (H #> inv x) <#> (H #> x') <#> (H #> inv x) \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "hence \"(H #> inv (inv x)) <#> (H #> x') <#> (H #> inv x) \\<in> A\""], ["proof (prove)\nusing this:\n  set_inv (H #> inv x) <#> (H #> x') <#> (H #> inv x) \\<in> A\n\ngoal (1 subgoal):\n 1. H #> inv (inv x) <#> (H #> x') <#> (H #> inv x) \\<in> A", "using invx"], ["proof (prove)\nusing this:\n  set_inv (H #> inv x) <#> (H #> x') <#> (H #> inv x) \\<in> A\n  inv x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. H #> inv (inv x) <#> (H #> x') <#> (H #> inv x) \\<in> A", "by (metis rcos_inv)"], ["proof (state)\nthis:\n  H #> inv (inv x) <#> (H #> x') <#> (H #> inv x) \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "hence \"(H #> x) <#> (H #> x') <#> (H #> inv x) \\<in> A\""], ["proof (prove)\nusing this:\n  H #> inv (inv x) <#> (H #> x') <#> (H #> inv x) \\<in> A\n\ngoal (1 subgoal):\n 1. H #> x <#> (H #> x') <#> (H #> inv x) \\<in> A", "by (metis inv_inv x(1))"], ["proof (state)\nthis:\n  H #> x <#> (H #> x') <#> (H #> inv x) \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "hence \"(H #> (x \\<otimes> x')) <#> (H #> inv x) \\<in> A\""], ["proof (prove)\nusing this:\n  H #> x <#> (H #> x') <#> (H #> inv x) \\<in> A\n\ngoal (1 subgoal):\n 1. H #> x \\<otimes> x' <#> (H #> inv x) \\<in> A", "by (metis rcos_sum x'(1) x(1))"], ["proof (state)\nthis:\n  H #> x \\<otimes> x' <#> (H #> inv x) \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "hence \"H #> (x \\<otimes> x' \\<otimes> inv x) \\<in> A\""], ["proof (prove)\nusing this:\n  H #> x \\<otimes> x' <#> (H #> inv x) \\<in> A\n\ngoal (1 subgoal):\n 1. H #> x \\<otimes> x' \\<otimes> inv x \\<in> A", "by (metis inv_closed m_closed rcos_sum x'(1) x(1))"], ["proof (state)\nthis:\n  H #> x \\<otimes> x' \\<otimes> inv x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "moreover"], ["proof (state)\nthis:\n  H #> x \\<otimes> x' \\<otimes> inv x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "have \"x \\<otimes> x' \\<otimes> inv x \\<in> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes> x' \\<otimes> inv x \\<in> carrier G", "using x x'"], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  y \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\n  x' \\<in> carrier G\n  H #> x' \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<otimes> x' \\<otimes> inv x \\<in> carrier G", "by (metis inv_closed m_closed)"], ["proof (state)\nthis:\n  x \\<otimes> x' \\<otimes> inv x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "ultimately"], ["proof (chain)\npicking this:\n  H #> x \\<otimes> x' \\<otimes> inv x \\<in> A\n  x \\<otimes> x' \\<otimes> inv x \\<in> carrier G", "have \"x \\<otimes> x' \\<otimes> inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}\""], ["proof (prove)\nusing this:\n  H #> x \\<otimes> x' \\<otimes> inv x \\<in> A\n  x \\<otimes> x' \\<otimes> inv x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. x \\<otimes> x' \\<otimes> inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}", "by auto"], ["proof (state)\nthis:\n  x \\<otimes> x' \\<otimes> inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "hence xcoset:\"(x \\<otimes> x' \\<otimes> inv x) \\<otimes> x \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\""], ["proof (prove)\nusing this:\n  x \\<otimes> x' \\<otimes> inv x \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n\ngoal (1 subgoal):\n 1. x \\<otimes> x' \\<otimes> inv x \\<otimes> x\n    \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "unfolding r_coset_def"], ["proof (prove)\nusing this:\n  x \\<otimes> x' \\<otimes> inv x\n  \\<in> {x \\<in> carrier G. (\\<Union>h\\<in>H. {h \\<otimes> x}) \\<in> A}\n\ngoal (1 subgoal):\n 1. x \\<otimes> x' \\<otimes> inv x \\<otimes> x\n    \\<in> (\\<Union>h\\<in>{x \\<in> carrier G.\n                          (\\<Union>h\\<in>H. {h \\<otimes> x}) \\<in> A}.\n              {h \\<otimes> x})", "using invx"], ["proof (prove)\nusing this:\n  x \\<otimes> x' \\<otimes> inv x\n  \\<in> {x \\<in> carrier G. (\\<Union>h\\<in>H. {h \\<otimes> x}) \\<in> A}\n  inv x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. x \\<otimes> x' \\<otimes> inv x \\<otimes> x\n    \\<in> (\\<Union>h\\<in>{x \\<in> carrier G.\n                          (\\<Union>h\\<in>H. {h \\<otimes> x}) \\<in> A}.\n              {h \\<otimes> x})", "by auto"], ["proof (state)\nthis:\n  x \\<otimes> x' \\<otimes> inv x \\<otimes> x\n  \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "have \"(x \\<otimes> x' \\<otimes> inv x) \\<otimes> x = (x \\<otimes> x') \\<otimes> (inv x \\<otimes> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes> x' \\<otimes> inv x \\<otimes> x =\n    x \\<otimes> x' \\<otimes> (inv x \\<otimes> x)", "by (metis Units_eq Units_inv_Units m_assoc m_closed x'(1) x(1))"], ["proof (state)\nthis:\n  x \\<otimes> x' \\<otimes> inv x \\<otimes> x =\n  x \\<otimes> x' \\<otimes> (inv x \\<otimes> x)\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "also"], ["proof (state)\nthis:\n  x \\<otimes> x' \\<otimes> inv x \\<otimes> x =\n  x \\<otimes> x' \\<otimes> (inv x \\<otimes> x)\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "have \"\\<dots> = x \\<otimes> x'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes> x' \\<otimes> (inv x \\<otimes> x) = x \\<otimes> x'", "using x(1) l_inv x'(1) m_closed r_one"], ["proof (prove)\nusing this:\n  x \\<in> carrier G\n  ?x \\<in> carrier G \\<Longrightarrow> inv ?x \\<otimes> ?x = \\<one>\n  x' \\<in> carrier G\n  \\<lbrakk>?x \\<in> carrier G; ?y \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes> ?y \\<in> carrier G\n  ?x \\<in> carrier G \\<Longrightarrow> ?x \\<otimes> \\<one> = ?x\n\ngoal (1 subgoal):\n 1. x \\<otimes> x' \\<otimes> (inv x \\<otimes> x) = x \\<otimes> x'", "by auto"], ["proof (state)\nthis:\n  x \\<otimes> x' \\<otimes> (inv x \\<otimes> x) = x \\<otimes> x'\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "also"], ["proof (state)\nthis:\n  x \\<otimes> x' \\<otimes> (inv x \\<otimes> x) = x \\<otimes> x'\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "have \"\\<dots> = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes> x' = y", "by (metis \\<open>y = x \\<otimes> x'\\<close>)"], ["proof (state)\nthis:\n  x \\<otimes> x' = y\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "finally"], ["proof (chain)\npicking this:\n  x \\<otimes> x' \\<otimes> inv x \\<otimes> x = y", "have \"x \\<otimes> x' \\<otimes> inv x \\<otimes> x = y\""], ["proof (prove)\nusing this:\n  x \\<otimes> x' \\<otimes> inv x \\<otimes> x = y\n\ngoal (1 subgoal):\n 1. x \\<otimes> x' \\<otimes> inv x \\<otimes> x = y", "."], ["proof (state)\nthis:\n  x \\<otimes> x' \\<otimes> inv x \\<otimes> x = y\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> carrier G;\n        xa \\<in> x <# {x \\<in> carrier G. H #> x \\<in> A}\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "with xcoset"], ["proof (chain)\npicking this:\n  x \\<otimes> x' \\<otimes> inv x \\<otimes> x\n  \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\n  x \\<otimes> x' \\<otimes> inv x \\<otimes> x = y", "show \"y \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\""], ["proof (prove)\nusing this:\n  x \\<otimes> x' \\<otimes> inv x \\<otimes> x\n  \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\n  x \\<otimes> x' \\<otimes> inv x \\<otimes> x = y\n\ngoal (1 subgoal):\n 1. y \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x", "by auto"], ["proof (state)\nthis:\n  y \\<in> {x \\<in> carrier G. H #> x \\<in> A} #> x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {x \\<in> carrier G. H #> x \\<in> A} \\<lhd> G\n\ngoal (1 subgoal):\n 1. \\<Union> A \\<lhd> G", "with assms"], ["proof (chain)\npicking this:\n  A \\<lhd> G Mod H\n  {x \\<in> carrier G. H #> x \\<in> A} \\<lhd> G", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<lhd> G Mod H\n  {x \\<in> carrier G. H #> x \\<in> A} \\<lhd> G\n\ngoal (1 subgoal):\n 1. \\<Union> A \\<lhd> G", "by (metis (full_types) factgroup_subgroup_union_char normal_imp_subgroup)"], ["proof (state)\nthis:\n  \\<Union> A \\<lhd> G\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in normal) factgroup_subgroup_union_factor:\n  assumes \"subgroup A (G Mod H)\"\n  shows \"A = rcosets\\<^bsub>G\\<lparr>carrier := \\<Union>A\\<rparr>\\<^esub> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = rcosets\\<^bsub>G\\<lparr>carrier := \\<Union> A\\<rparr>\\<^esub> H", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. A = rcosets\\<^bsub>G\\<lparr>carrier := \\<Union> A\\<rparr>\\<^esub> H", "have \"A = rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A =\n    rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       x \\<in> rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H\n 2. \\<And>x.\n       x \\<in> rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H \\<Longrightarrow>\n       x \\<in> A", "fix U"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       x \\<in> rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H\n 2. \\<And>x.\n       x \\<in> rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H \\<Longrightarrow>\n       x \\<in> A", "assume U:\"U \\<in> A\""], ["proof (state)\nthis:\n  U \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       x \\<in> rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H\n 2. \\<And>x.\n       x \\<in> rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H \\<Longrightarrow>\n       x \\<in> A", "then"], ["proof (chain)\npicking this:\n  U \\<in> A", "obtain x' where x':\"x' \\<in> carrier G\" \"U = H #> x'\""], ["proof (prove)\nusing this:\n  U \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<in> carrier G; U = H #> x'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms subgroup.subset"], ["proof (prove)\nusing this:\n  U \\<in> A\n  subgroup A (G Mod H)\n  subgroup ?H ?G \\<Longrightarrow> ?H \\<subseteq> carrier ?G\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<in> carrier G; U = H #> x'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding FactGroup_def RCOSETS_def"], ["proof (prove)\nusing this:\n  U \\<in> A\n  subgroup A\n   \\<lparr>carrier = \\<Union>a\\<in>carrier G. {H #> a}, monoid.mult = (<#>),\n      one = H\\<rparr>\n  subgroup ?H ?G \\<Longrightarrow> ?H \\<subseteq> carrier ?G\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<in> carrier G; U = H #> x'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  x' \\<in> carrier G\n  U = H #> x'\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       x \\<in> rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H\n 2. \\<And>x.\n       x \\<in> rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H \\<Longrightarrow>\n       x \\<in> A", "with U"], ["proof (chain)\npicking this:\n  U \\<in> A\n  x' \\<in> carrier G\n  U = H #> x'", "have \"H #> x' \\<in> A\""], ["proof (prove)\nusing this:\n  U \\<in> A\n  x' \\<in> carrier G\n  U = H #> x'\n\ngoal (1 subgoal):\n 1. H #> x' \\<in> A", "by simp"], ["proof (state)\nthis:\n  H #> x' \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       x \\<in> rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H\n 2. \\<And>x.\n       x \\<in> rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H \\<Longrightarrow>\n       x \\<in> A", "with x'"], ["proof (chain)\npicking this:\n  x' \\<in> carrier G\n  U = H #> x'\n  H #> x' \\<in> A", "show \"U \\<in> rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H\""], ["proof (prove)\nusing this:\n  x' \\<in> carrier G\n  U = H #> x'\n  H #> x' \\<in> A\n\ngoal (1 subgoal):\n 1. U \\<in> rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H", "unfolding RCOSETS_def r_coset_def"], ["proof (prove)\nusing this:\n  x' \\<in> carrier G\n  U = (\\<Union>h\\<in>H. {h \\<otimes> x'})\n  (\\<Union>h\\<in>H. {h \\<otimes> x'}) \\<in> A\n\ngoal (1 subgoal):\n 1. U \\<in> (\\<Union>a\\<in>carrier\n                            (G\\<lparr>carrier :=\n  {x \\<in> carrier G. (\\<Union>h\\<in>H. {h \\<otimes> x}) \\<in> A}\\<rparr>).\n                {\\<Union>h\\<in>H.\n                    {h \\<otimes>\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. (\\<Union>h\\<in>H. {h \\<otimes> x}) \\<in> A}\\<rparr>\\<^esub>\n                     a}})", "by auto"], ["proof (state)\nthis:\n  U \\<in> rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H \\<Longrightarrow>\n       x \\<in> A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H \\<Longrightarrow>\n       x \\<in> A", "fix U"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H \\<Longrightarrow>\n       x \\<in> A", "assume U:\"U \\<in> rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H\""], ["proof (state)\nthis:\n  U \\<in> rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H \\<Longrightarrow>\n       x \\<in> A", "then"], ["proof (chain)\npicking this:\n  U \\<in> rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H", "obtain x' where x':\"x' \\<in> {x \\<in> carrier G. H #> x \\<in> A}\" \"U = H #> x'\""], ["proof (prove)\nusing this:\n  U \\<in> rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<in> {x \\<in> carrier G. H #> x \\<in> A};\n         U = H #> x'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding RCOSETS_def r_coset_def"], ["proof (prove)\nusing this:\n  U \\<in> (\\<Union>a\\<in>carrier\n                          (G\\<lparr>carrier :=\n{x \\<in> carrier G. (\\<Union>h\\<in>H. {h \\<otimes> x}) \\<in> A}\\<rparr>).\n              {\\<Union>h\\<in>H.\n                  {h \\<otimes>\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. (\\<Union>h\\<in>H. {h \\<otimes> x}) \\<in> A}\\<rparr>\\<^esub>\n                   a}})\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<in> {x \\<in> carrier G.\n                           (\\<Union>h\\<in>H. {h \\<otimes> x}) \\<in> A};\n         U = (\\<Union>h\\<in>H. {h \\<otimes> x'})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x' \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n  U = H #> x'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H \\<Longrightarrow>\n       x \\<in> A", "hence \"x' \\<in> carrier G\" \"H #> x' \\<in> A\""], ["proof (prove)\nusing this:\n  x' \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n  U = H #> x'\n\ngoal (1 subgoal):\n 1. x' \\<in> carrier G &&& H #> x' \\<in> A", "by auto"], ["proof (state)\nthis:\n  x' \\<in> carrier G\n  H #> x' \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H \\<Longrightarrow>\n       x \\<in> A", "with x'"], ["proof (chain)\npicking this:\n  x' \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n  U = H #> x'\n  x' \\<in> carrier G\n  H #> x' \\<in> A", "show \"U \\<in> A\""], ["proof (prove)\nusing this:\n  x' \\<in> {x \\<in> carrier G. H #> x \\<in> A}\n  U = H #> x'\n  x' \\<in> carrier G\n  H #> x' \\<in> A\n\ngoal (1 subgoal):\n 1. U \\<in> A", "by simp"], ["proof (state)\nthis:\n  U \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A =\n  rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H\n\ngoal (1 subgoal):\n 1. A = rcosets\\<^bsub>G\\<lparr>carrier := \\<Union> A\\<rparr>\\<^esub> H", "with assms"], ["proof (chain)\npicking this:\n  subgroup A (G Mod H)\n  A =\n  rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H", "show ?thesis"], ["proof (prove)\nusing this:\n  subgroup A (G Mod H)\n  A =\n  rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H\n\ngoal (1 subgoal):\n 1. A = rcosets\\<^bsub>G\\<lparr>carrier := \\<Union> A\\<rparr>\\<^esub> H", "using factgroup_subgroup_union_char"], ["proof (prove)\nusing this:\n  subgroup A (G Mod H)\n  A =\n  rcosets\\<^bsub>G\\<lparr>carrier := {x \\<in> carrier G. H #> x \\<in> A}\\<rparr>\\<^esub> H\n  subgroup ?A (G Mod H) \\<Longrightarrow>\n  \\<Union> ?A = {x \\<in> carrier G. H #> x \\<in> ?A}\n\ngoal (1 subgoal):\n 1. A = rcosets\\<^bsub>G\\<lparr>carrier := \\<Union> A\\<rparr>\\<^esub> H", "by auto"], ["proof (state)\nthis:\n  A = rcosets\\<^bsub>G\\<lparr>carrier := \\<Union> A\\<rparr>\\<^esub> H\n\ngoal:\nNo subgoals!", "qed"], ["", "section  \\<open>Flattening the type of group carriers\\<close>"], ["", "text \\<open>Flattening here means to convert the type of group elements from 'a set to 'a.\nThis is possible whenever the empty set is not an element of the group.\\<close>"], ["", "definition flatten where\n  \"flatten (G::('a set, 'b) monoid_scheme) rep = \\<lparr>carrier=(rep ` (carrier G)),\n      monoid.mult=(\\<lambda> x y. rep ((the_inv_into (carrier G) rep x) \\<otimes>\\<^bsub>G\\<^esub> (the_inv_into (carrier G) rep y))), \n      one=rep \\<one>\\<^bsub>G\\<^esub> \\<rparr>\""], ["", "lemma flatten_set_group_hom:\n  assumes group:\"group G\"\n  assumes inj:\"inj_on rep (carrier G)\"\n  shows \"rep \\<in> hom G (flatten G rep)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rep \\<in> hom G (flatten G rep)", "unfolding hom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. rep\n    \\<in> {h \\<in> carrier G \\<rightarrow> carrier (flatten G rep).\n           \\<forall>x\\<in>carrier G.\n              \\<forall>y\\<in>carrier G.\n                 h (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n                 h x \\<otimes>\\<^bsub>flatten G rep\\<^esub> h y}", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow>\n       rep x \\<in> carrier (flatten G rep)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> rep (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n                         rep x \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep y", "fix g"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow>\n       rep x \\<in> carrier (flatten G rep)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> rep (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n                         rep x \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep y", "assume g:\"g \\<in> carrier G\""], ["proof (state)\nthis:\n  g \\<in> carrier G\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier G \\<Longrightarrow>\n       rep x \\<in> carrier (flatten G rep)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> rep (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n                         rep x \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep y", "thus \"rep g \\<in> carrier (flatten G rep)\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. rep g \\<in> carrier (flatten G rep)", "unfolding flatten_def"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. rep g\n    \\<in> carrier\n           \\<lparr>carrier = rep ` carrier G,\n              monoid.mult =\n                \\<lambda>x y.\n                   rep (the_inv_into (carrier G) rep\n                         x \\<otimes>\\<^bsub>G\\<^esub>\n                        the_inv_into (carrier G) rep y),\n              one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>", "by auto"], ["proof (state)\nthis:\n  rep g \\<in> carrier (flatten G rep)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> rep (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n                         rep x \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> rep (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n                         rep x \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep y", "fix g h"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> rep (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n                         rep x \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep y", "assume g:\"g \\<in> carrier G\" and h:\"h \\<in> carrier G\""], ["proof (state)\nthis:\n  g \\<in> carrier G\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> rep (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n                         rep x \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep y", "hence \"rep g \\<in> carrier (flatten G rep)\" \"rep h \\<in> carrier (flatten G rep)\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. rep g \\<in> carrier (flatten G rep) &&&\n    rep h \\<in> carrier (flatten G rep)", "unfolding flatten_def"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. rep g\n    \\<in> carrier\n           \\<lparr>carrier = rep ` carrier G,\n              monoid.mult =\n                \\<lambda>x y.\n                   rep (the_inv_into (carrier G) rep\n                         x \\<otimes>\\<^bsub>G\\<^esub>\n                        the_inv_into (carrier G) rep y),\n              one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr> &&&\n    rep h\n    \\<in> carrier\n           \\<lparr>carrier = rep ` carrier G,\n              monoid.mult =\n                \\<lambda>x y.\n                   rep (the_inv_into (carrier G) rep\n                         x \\<otimes>\\<^bsub>G\\<^esub>\n                        the_inv_into (carrier G) rep y),\n              one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>", "by auto"], ["proof (state)\nthis:\n  rep g \\<in> carrier (flatten G rep)\n  rep h \\<in> carrier (flatten G rep)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> rep (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n                         rep x \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep y", "hence \"rep g \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep h\n    = rep (the_inv_into (carrier G) rep (rep g) \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep (rep h))\""], ["proof (prove)\nusing this:\n  rep g \\<in> carrier (flatten G rep)\n  rep h \\<in> carrier (flatten G rep)\n\ngoal (1 subgoal):\n 1. rep g \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep h =\n    rep (the_inv_into (carrier G) rep (rep g) \\<otimes>\\<^bsub>G\\<^esub>\n         the_inv_into (carrier G) rep (rep h))", "unfolding flatten_def"], ["proof (prove)\nusing this:\n  rep g\n  \\<in> carrier\n         \\<lparr>carrier = rep ` carrier G,\n            monoid.mult =\n              \\<lambda>x y.\n                 rep (the_inv_into (carrier G) rep\n                       x \\<otimes>\\<^bsub>G\\<^esub>\n                      the_inv_into (carrier G) rep y),\n            one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\n  rep h\n  \\<in> carrier\n         \\<lparr>carrier = rep ` carrier G,\n            monoid.mult =\n              \\<lambda>x y.\n                 rep (the_inv_into (carrier G) rep\n                       x \\<otimes>\\<^bsub>G\\<^esub>\n                      the_inv_into (carrier G) rep y),\n            one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\n\ngoal (1 subgoal):\n 1. rep g \\<otimes>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub>\n    rep h =\n    rep (the_inv_into (carrier G) rep (rep g) \\<otimes>\\<^bsub>G\\<^esub>\n         the_inv_into (carrier G) rep (rep h))", "by auto"], ["proof (state)\nthis:\n  rep g \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep h =\n  rep (the_inv_into (carrier G) rep (rep g) \\<otimes>\\<^bsub>G\\<^esub>\n       the_inv_into (carrier G) rep (rep h))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> rep (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n                         rep x \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep y", "also"], ["proof (state)\nthis:\n  rep g \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep h =\n  rep (the_inv_into (carrier G) rep (rep g) \\<otimes>\\<^bsub>G\\<^esub>\n       the_inv_into (carrier G) rep (rep h))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> rep (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n                         rep x \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep y", "have \"\\<dots> = rep (g \\<otimes>\\<^bsub>G\\<^esub> h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rep (the_inv_into (carrier G) rep (rep g) \\<otimes>\\<^bsub>G\\<^esub>\n         the_inv_into (carrier G) rep (rep h)) =\n    rep (g \\<otimes>\\<^bsub>G\\<^esub> h)", "using inj g h"], ["proof (prove)\nusing this:\n  inj_on rep (carrier G)\n  g \\<in> carrier G\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. rep (the_inv_into (carrier G) rep (rep g) \\<otimes>\\<^bsub>G\\<^esub>\n         the_inv_into (carrier G) rep (rep h)) =\n    rep (g \\<otimes>\\<^bsub>G\\<^esub> h)", "by (metis the_inv_into_f_f)"], ["proof (state)\nthis:\n  rep (the_inv_into (carrier G) rep (rep g) \\<otimes>\\<^bsub>G\\<^esub>\n       the_inv_into (carrier G) rep (rep h)) =\n  rep (g \\<otimes>\\<^bsub>G\\<^esub> h)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier G; y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> rep (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n                         rep x \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep y", "finally"], ["proof (chain)\npicking this:\n  rep g \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep h =\n  rep (g \\<otimes>\\<^bsub>G\\<^esub> h)", "show \"rep (g \\<otimes>\\<^bsub>G\\<^esub> h) = rep g \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep h\""], ["proof (prove)\nusing this:\n  rep g \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep h =\n  rep (g \\<otimes>\\<^bsub>G\\<^esub> h)\n\ngoal (1 subgoal):\n 1. rep (g \\<otimes>\\<^bsub>G\\<^esub> h) =\n    rep g \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep h", ".."], ["proof (state)\nthis:\n  rep (g \\<otimes>\\<^bsub>G\\<^esub> h) =\n  rep g \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep h\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma flatten_set_group:\n  assumes group:\"group G\"\n  assumes inj:\"inj_on rep (carrier G)\"\n  shows \"group (flatten G rep)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (flatten G rep)", "proof (rule groupI)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub> y\n                         \\<in> carrier (flatten G rep)\n 2. \\<one>\\<^bsub>flatten G rep\\<^esub> \\<in> carrier (flatten G rep)\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 4. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 5. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "fix x y"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub> y\n                         \\<in> carrier (flatten G rep)\n 2. \\<one>\\<^bsub>flatten G rep\\<^esub> \\<in> carrier (flatten G rep)\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 4. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 5. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "assume x:\"x \\<in> carrier (flatten G rep)\" and y:\"y \\<in> carrier (flatten G rep)\""], ["proof (state)\nthis:\n  x \\<in> carrier (flatten G rep)\n  y \\<in> carrier (flatten G rep)\n\ngoal (5 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub> y\n                         \\<in> carrier (flatten G rep)\n 2. \\<one>\\<^bsub>flatten G rep\\<^esub> \\<in> carrier (flatten G rep)\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 4. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 5. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "define g h\n    where \"g = the_inv_into (carrier G) rep x\"\n      and \"h = the_inv_into (carrier G) rep y\""], ["proof (state)\nthis:\n  g = the_inv_into (carrier G) rep x\n  h = the_inv_into (carrier G) rep y\n\ngoal (5 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub> y\n                         \\<in> carrier (flatten G rep)\n 2. \\<one>\\<^bsub>flatten G rep\\<^esub> \\<in> carrier (flatten G rep)\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 4. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 5. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "hence \"x \\<otimes>\\<^bsub>flatten G rep\\<^esub> y = rep (g \\<otimes>\\<^bsub>G\\<^esub> h)\""], ["proof (prove)\nusing this:\n  g = the_inv_into (carrier G) rep x\n  h = the_inv_into (carrier G) rep y\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>flatten G rep\\<^esub> y =\n    rep (g \\<otimes>\\<^bsub>G\\<^esub> h)", "unfolding flatten_def"], ["proof (prove)\nusing this:\n  g = the_inv_into (carrier G) rep x\n  h = the_inv_into (carrier G) rep y\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub>\n    y =\n    rep (g \\<otimes>\\<^bsub>G\\<^esub> h)", "by auto"], ["proof (state)\nthis:\n  x \\<otimes>\\<^bsub>flatten G rep\\<^esub> y =\n  rep (g \\<otimes>\\<^bsub>G\\<^esub> h)\n\ngoal (5 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub> y\n                         \\<in> carrier (flatten G rep)\n 2. \\<one>\\<^bsub>flatten G rep\\<^esub> \\<in> carrier (flatten G rep)\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 4. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 5. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "moreover"], ["proof (state)\nthis:\n  x \\<otimes>\\<^bsub>flatten G rep\\<^esub> y =\n  rep (g \\<otimes>\\<^bsub>G\\<^esub> h)\n\ngoal (5 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub> y\n                         \\<in> carrier (flatten G rep)\n 2. \\<one>\\<^bsub>flatten G rep\\<^esub> \\<in> carrier (flatten G rep)\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 4. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 5. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "from g_def h_def"], ["proof (chain)\npicking this:\n  g = the_inv_into (carrier G) rep x\n  h = the_inv_into (carrier G) rep y", "have \"g \\<in> carrier G\" \"h \\<in> carrier G\""], ["proof (prove)\nusing this:\n  g = the_inv_into (carrier G) rep x\n  h = the_inv_into (carrier G) rep y\n\ngoal (1 subgoal):\n 1. g \\<in> carrier G &&& h \\<in> carrier G", "using inj x y the_inv_into_into"], ["proof (prove)\nusing this:\n  g = the_inv_into (carrier G) rep x\n  h = the_inv_into (carrier G) rep y\n  inj_on rep (carrier G)\n  x \\<in> carrier (flatten G rep)\n  y \\<in> carrier (flatten G rep)\n  \\<lbrakk>inj_on ?f ?A; ?x \\<in> ?f ` ?A; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> the_inv_into ?A ?f ?x \\<in> ?B\n\ngoal (1 subgoal):\n 1. g \\<in> carrier G &&& h \\<in> carrier G", "unfolding flatten_def"], ["proof (prove)\nusing this:\n  g = the_inv_into (carrier G) rep x\n  h = the_inv_into (carrier G) rep y\n  inj_on rep (carrier G)\n  x \\<in> carrier\n           \\<lparr>carrier = rep ` carrier G,\n              monoid.mult =\n                \\<lambda>x y.\n                   rep (the_inv_into (carrier G) rep\n                         x \\<otimes>\\<^bsub>G\\<^esub>\n                        the_inv_into (carrier G) rep y),\n              one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\n  y \\<in> carrier\n           \\<lparr>carrier = rep ` carrier G,\n              monoid.mult =\n                \\<lambda>x y.\n                   rep (the_inv_into (carrier G) rep\n                         x \\<otimes>\\<^bsub>G\\<^esub>\n                        the_inv_into (carrier G) rep y),\n              one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\n  \\<lbrakk>inj_on ?f ?A; ?x \\<in> ?f ` ?A; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> the_inv_into ?A ?f ?x \\<in> ?B\n\ngoal (1 subgoal):\n 1. g \\<in> carrier G &&& h \\<in> carrier G", "by (metis partial_object.select_convs(1) subset_refl)+"], ["proof (state)\nthis:\n  g \\<in> carrier G\n  h \\<in> carrier G\n\ngoal (5 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub> y\n                         \\<in> carrier (flatten G rep)\n 2. \\<one>\\<^bsub>flatten G rep\\<^esub> \\<in> carrier (flatten G rep)\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 4. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 5. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "hence \"g \\<otimes>\\<^bsub>G\\<^esub> h \\<in> carrier G\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. g \\<otimes>\\<^bsub>G\\<^esub> h \\<in> carrier G", "by (metis group group.is_monoid monoid.m_closed)"], ["proof (state)\nthis:\n  g \\<otimes>\\<^bsub>G\\<^esub> h \\<in> carrier G\n\ngoal (5 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub> y\n                         \\<in> carrier (flatten G rep)\n 2. \\<one>\\<^bsub>flatten G rep\\<^esub> \\<in> carrier (flatten G rep)\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 4. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 5. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "hence \"rep (g \\<otimes>\\<^bsub>G\\<^esub> h) \\<in> carrier (flatten G rep)\""], ["proof (prove)\nusing this:\n  g \\<otimes>\\<^bsub>G\\<^esub> h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. rep (g \\<otimes>\\<^bsub>G\\<^esub> h) \\<in> carrier (flatten G rep)", "unfolding flatten_def"], ["proof (prove)\nusing this:\n  g \\<otimes>\\<^bsub>G\\<^esub> h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. rep (g \\<otimes>\\<^bsub>G\\<^esub> h)\n    \\<in> carrier\n           \\<lparr>carrier = rep ` carrier G,\n              monoid.mult =\n                \\<lambda>x y.\n                   rep (the_inv_into (carrier G) rep\n                         x \\<otimes>\\<^bsub>G\\<^esub>\n                        the_inv_into (carrier G) rep y),\n              one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>", "by simp"], ["proof (state)\nthis:\n  rep (g \\<otimes>\\<^bsub>G\\<^esub> h) \\<in> carrier (flatten G rep)\n\ngoal (5 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub> y\n                         \\<in> carrier (flatten G rep)\n 2. \\<one>\\<^bsub>flatten G rep\\<^esub> \\<in> carrier (flatten G rep)\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 4. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 5. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "ultimately"], ["proof (chain)\npicking this:\n  x \\<otimes>\\<^bsub>flatten G rep\\<^esub> y =\n  rep (g \\<otimes>\\<^bsub>G\\<^esub> h)\n  rep (g \\<otimes>\\<^bsub>G\\<^esub> h) \\<in> carrier (flatten G rep)", "show \"x \\<otimes>\\<^bsub>flatten G rep\\<^esub> y \\<in> carrier (flatten G rep)\""], ["proof (prove)\nusing this:\n  x \\<otimes>\\<^bsub>flatten G rep\\<^esub> y =\n  rep (g \\<otimes>\\<^bsub>G\\<^esub> h)\n  rep (g \\<otimes>\\<^bsub>G\\<^esub> h) \\<in> carrier (flatten G rep)\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>flatten G rep\\<^esub> y \\<in> carrier (flatten G rep)", "by simp"], ["proof (state)\nthis:\n  x \\<otimes>\\<^bsub>flatten G rep\\<^esub> y \\<in> carrier (flatten G rep)\n\ngoal (4 subgoals):\n 1. \\<one>\\<^bsub>flatten G rep\\<^esub> \\<in> carrier (flatten G rep)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 3. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 4. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<one>\\<^bsub>flatten G rep\\<^esub> \\<in> carrier (flatten G rep)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 3. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 4. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "show \"\\<one>\\<^bsub>flatten G rep\\<^esub> \\<in> carrier (flatten G rep)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>flatten G rep\\<^esub> \\<in> carrier (flatten G rep)", "unfolding flatten_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub>\n    \\<in> carrier\n           \\<lparr>carrier = rep ` carrier G,\n              monoid.mult =\n                \\<lambda>x y.\n                   rep (the_inv_into (carrier G) rep\n                         x \\<otimes>\\<^bsub>G\\<^esub>\n                        the_inv_into (carrier G) rep y),\n              one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>", "by (simp add: group group.is_monoid)"], ["proof (state)\nthis:\n  \\<one>\\<^bsub>flatten G rep\\<^esub> \\<in> carrier (flatten G rep)\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 3. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 3. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "fix x y z"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 3. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "assume x:\"x \\<in> carrier (flatten G rep)\" and y:\"y \\<in> carrier (flatten G rep)\" and z:\"z \\<in> carrier (flatten G rep)\""], ["proof (state)\nthis:\n  x \\<in> carrier (flatten G rep)\n  y \\<in> carrier (flatten G rep)\n  z \\<in> carrier (flatten G rep)\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 3. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "define g h k\n    where \"g = the_inv_into (carrier G) rep x\"\n      and \"h = the_inv_into (carrier G) rep y\"\n      and \"k = the_inv_into (carrier G) rep z\""], ["proof (state)\nthis:\n  g = the_inv_into (carrier G) rep x\n  h = the_inv_into (carrier G) rep y\n  k = the_inv_into (carrier G) rep z\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 3. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "hence \"x \\<otimes>\\<^bsub>flatten G rep\\<^esub> y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z = (rep (g \\<otimes>\\<^bsub>G\\<^esub> h)) \\<otimes> \\<^bsub>flatten G rep\\<^esub> z\""], ["proof (prove)\nusing this:\n  g = the_inv_into (carrier G) rep x\n  h = the_inv_into (carrier G) rep y\n  k = the_inv_into (carrier G) rep z\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n    y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n    z =\n    rep (g \\<otimes>\\<^bsub>G\\<^esub>\n         h) \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n    z", "unfolding flatten_def"], ["proof (prove)\nusing this:\n  g = the_inv_into (carrier G) rep x\n  h = the_inv_into (carrier G) rep y\n  k = the_inv_into (carrier G) rep z\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub>\n    y \\<otimes>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub>\n    z =\n    rep (g \\<otimes>\\<^bsub>G\\<^esub>\n         h) \\<otimes>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub>\n    z", "by auto"], ["proof (state)\nthis:\n  x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  z =\n  rep (g \\<otimes>\\<^bsub>G\\<^esub>\n       h) \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  z\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 3. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "also"], ["proof (state)\nthis:\n  x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  z =\n  rep (g \\<otimes>\\<^bsub>G\\<^esub>\n       h) \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  z\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 3. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "have \"\\<dots> = rep (the_inv_into (carrier G) rep (rep (g \\<otimes>\\<^bsub>G\\<^esub> h)) \\<otimes>\\<^bsub>G\\<^esub> k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rep (g \\<otimes>\\<^bsub>G\\<^esub>\n         h) \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n    z =\n    rep (the_inv_into (carrier G) rep\n          (rep (g \\<otimes>\\<^bsub>G\\<^esub> h)) \\<otimes>\\<^bsub>G\\<^esub>\n         k)", "using k_def"], ["proof (prove)\nusing this:\n  k = the_inv_into (carrier G) rep z\n\ngoal (1 subgoal):\n 1. rep (g \\<otimes>\\<^bsub>G\\<^esub>\n         h) \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n    z =\n    rep (the_inv_into (carrier G) rep\n          (rep (g \\<otimes>\\<^bsub>G\\<^esub> h)) \\<otimes>\\<^bsub>G\\<^esub>\n         k)", "unfolding flatten_def"], ["proof (prove)\nusing this:\n  k = the_inv_into (carrier G) rep z\n\ngoal (1 subgoal):\n 1. rep (g \\<otimes>\\<^bsub>G\\<^esub>\n         h) \\<otimes>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub>\n    z =\n    rep (the_inv_into (carrier G) rep\n          (rep (g \\<otimes>\\<^bsub>G\\<^esub> h)) \\<otimes>\\<^bsub>G\\<^esub>\n         k)", "by auto"], ["proof (state)\nthis:\n  rep (g \\<otimes>\\<^bsub>G\\<^esub>\n       h) \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  z =\n  rep (the_inv_into (carrier G) rep\n        (rep (g \\<otimes>\\<^bsub>G\\<^esub> h)) \\<otimes>\\<^bsub>G\\<^esub>\n       k)\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 3. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "also"], ["proof (state)\nthis:\n  rep (g \\<otimes>\\<^bsub>G\\<^esub>\n       h) \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  z =\n  rep (the_inv_into (carrier G) rep\n        (rep (g \\<otimes>\\<^bsub>G\\<^esub> h)) \\<otimes>\\<^bsub>G\\<^esub>\n       k)\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 3. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "from g_def h_def k_def"], ["proof (chain)\npicking this:\n  g = the_inv_into (carrier G) rep x\n  h = the_inv_into (carrier G) rep y\n  k = the_inv_into (carrier G) rep z", "have ghkG:\"g \\<in> carrier G\" \"h \\<in> carrier G\" \"k \\<in> carrier G\""], ["proof (prove)\nusing this:\n  g = the_inv_into (carrier G) rep x\n  h = the_inv_into (carrier G) rep y\n  k = the_inv_into (carrier G) rep z\n\ngoal (1 subgoal):\n 1. g \\<in> carrier G &&& h \\<in> carrier G &&& k \\<in> carrier G", "using inj x y z the_inv_into_into"], ["proof (prove)\nusing this:\n  g = the_inv_into (carrier G) rep x\n  h = the_inv_into (carrier G) rep y\n  k = the_inv_into (carrier G) rep z\n  inj_on rep (carrier G)\n  x \\<in> carrier (flatten G rep)\n  y \\<in> carrier (flatten G rep)\n  z \\<in> carrier (flatten G rep)\n  \\<lbrakk>inj_on ?f ?A; ?x \\<in> ?f ` ?A; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> the_inv_into ?A ?f ?x \\<in> ?B\n\ngoal (1 subgoal):\n 1. g \\<in> carrier G &&& h \\<in> carrier G &&& k \\<in> carrier G", "unfolding flatten_def"], ["proof (prove)\nusing this:\n  g = the_inv_into (carrier G) rep x\n  h = the_inv_into (carrier G) rep y\n  k = the_inv_into (carrier G) rep z\n  inj_on rep (carrier G)\n  x \\<in> carrier\n           \\<lparr>carrier = rep ` carrier G,\n              monoid.mult =\n                \\<lambda>x y.\n                   rep (the_inv_into (carrier G) rep\n                         x \\<otimes>\\<^bsub>G\\<^esub>\n                        the_inv_into (carrier G) rep y),\n              one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\n  y \\<in> carrier\n           \\<lparr>carrier = rep ` carrier G,\n              monoid.mult =\n                \\<lambda>x y.\n                   rep (the_inv_into (carrier G) rep\n                         x \\<otimes>\\<^bsub>G\\<^esub>\n                        the_inv_into (carrier G) rep y),\n              one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\n  z \\<in> carrier\n           \\<lparr>carrier = rep ` carrier G,\n              monoid.mult =\n                \\<lambda>x y.\n                   rep (the_inv_into (carrier G) rep\n                         x \\<otimes>\\<^bsub>G\\<^esub>\n                        the_inv_into (carrier G) rep y),\n              one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\n  \\<lbrakk>inj_on ?f ?A; ?x \\<in> ?f ` ?A; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> the_inv_into ?A ?f ?x \\<in> ?B\n\ngoal (1 subgoal):\n 1. g \\<in> carrier G &&& h \\<in> carrier G &&& k \\<in> carrier G", "by fastforce+"], ["proof (state)\nthis:\n  g \\<in> carrier G\n  h \\<in> carrier G\n  k \\<in> carrier G\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 3. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "hence gh:\"g \\<otimes>\\<^bsub>G\\<^esub> h \\<in> carrier G\" and hk:\"h \\<otimes>\\<^bsub>G\\<^esub> k \\<in> carrier G\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  h \\<in> carrier G\n  k \\<in> carrier G\n\ngoal (1 subgoal):\n 1. g \\<otimes>\\<^bsub>G\\<^esub> h \\<in> carrier G &&&\n    h \\<otimes>\\<^bsub>G\\<^esub> k \\<in> carrier G", "by (metis group group.is_monoid monoid.m_closed)+"], ["proof (state)\nthis:\n  g \\<otimes>\\<^bsub>G\\<^esub> h \\<in> carrier G\n  h \\<otimes>\\<^bsub>G\\<^esub> k \\<in> carrier G\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 3. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "hence \"rep (the_inv_into (carrier G) rep (rep (g \\<otimes>\\<^bsub>G\\<^esub> h)) \\<otimes>\\<^bsub>G\\<^esub> k) = rep ((g \\<otimes>\\<^bsub>G\\<^esub> h) \\<otimes>\\<^bsub>G\\<^esub> k)\""], ["proof (prove)\nusing this:\n  g \\<otimes>\\<^bsub>G\\<^esub> h \\<in> carrier G\n  h \\<otimes>\\<^bsub>G\\<^esub> k \\<in> carrier G\n\ngoal (1 subgoal):\n 1. rep (the_inv_into (carrier G) rep\n          (rep (g \\<otimes>\\<^bsub>G\\<^esub> h)) \\<otimes>\\<^bsub>G\\<^esub>\n         k) =\n    rep (g \\<otimes>\\<^bsub>G\\<^esub> h \\<otimes>\\<^bsub>G\\<^esub> k)", "unfolding flatten_def"], ["proof (prove)\nusing this:\n  g \\<otimes>\\<^bsub>G\\<^esub> h \\<in> carrier G\n  h \\<otimes>\\<^bsub>G\\<^esub> k \\<in> carrier G\n\ngoal (1 subgoal):\n 1. rep (the_inv_into (carrier G) rep\n          (rep (g \\<otimes>\\<^bsub>G\\<^esub> h)) \\<otimes>\\<^bsub>G\\<^esub>\n         k) =\n    rep (g \\<otimes>\\<^bsub>G\\<^esub> h \\<otimes>\\<^bsub>G\\<^esub> k)", "using inj the_inv_into_f_f"], ["proof (prove)\nusing this:\n  g \\<otimes>\\<^bsub>G\\<^esub> h \\<in> carrier G\n  h \\<otimes>\\<^bsub>G\\<^esub> k \\<in> carrier G\n  inj_on rep (carrier G)\n  \\<lbrakk>inj_on ?f ?A; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> the_inv_into ?A ?f (?f ?x) = ?x\n\ngoal (1 subgoal):\n 1. rep (the_inv_into (carrier G) rep\n          (rep (g \\<otimes>\\<^bsub>G\\<^esub> h)) \\<otimes>\\<^bsub>G\\<^esub>\n         k) =\n    rep (g \\<otimes>\\<^bsub>G\\<^esub> h \\<otimes>\\<^bsub>G\\<^esub> k)", "by fastforce"], ["proof (state)\nthis:\n  rep (the_inv_into (carrier G) rep\n        (rep (g \\<otimes>\\<^bsub>G\\<^esub> h)) \\<otimes>\\<^bsub>G\\<^esub>\n       k) =\n  rep (g \\<otimes>\\<^bsub>G\\<^esub> h \\<otimes>\\<^bsub>G\\<^esub> k)\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 3. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "also"], ["proof (state)\nthis:\n  rep (the_inv_into (carrier G) rep\n        (rep (g \\<otimes>\\<^bsub>G\\<^esub> h)) \\<otimes>\\<^bsub>G\\<^esub>\n       k) =\n  rep (g \\<otimes>\\<^bsub>G\\<^esub> h \\<otimes>\\<^bsub>G\\<^esub> k)\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 3. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "have \"\\<dots> = rep (g \\<otimes>\\<^bsub>G\\<^esub> (h \\<otimes>\\<^bsub>G\\<^esub> k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rep (g \\<otimes>\\<^bsub>G\\<^esub> h \\<otimes>\\<^bsub>G\\<^esub> k) =\n    rep (g \\<otimes>\\<^bsub>G\\<^esub> (h \\<otimes>\\<^bsub>G\\<^esub> k))", "using group group.is_monoid ghkG monoid.m_assoc"], ["proof (prove)\nusing this:\n  Group.group G\n  Group.group ?G \\<Longrightarrow> Group.monoid ?G\n  g \\<in> carrier G\n  h \\<in> carrier G\n  k \\<in> carrier G\n  \\<lbrakk>Group.monoid ?G; ?x \\<in> carrier ?G; ?y \\<in> carrier ?G;\n   ?z \\<in> carrier ?G\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes>\\<^bsub>?G\\<^esub>\n                    ?y \\<otimes>\\<^bsub>?G\\<^esub>\n                    ?z =\n                    ?x \\<otimes>\\<^bsub>?G\\<^esub>\n                    (?y \\<otimes>\\<^bsub>?G\\<^esub> ?z)\n\ngoal (1 subgoal):\n 1. rep (g \\<otimes>\\<^bsub>G\\<^esub> h \\<otimes>\\<^bsub>G\\<^esub> k) =\n    rep (g \\<otimes>\\<^bsub>G\\<^esub> (h \\<otimes>\\<^bsub>G\\<^esub> k))", "by fastforce"], ["proof (state)\nthis:\n  rep (g \\<otimes>\\<^bsub>G\\<^esub> h \\<otimes>\\<^bsub>G\\<^esub> k) =\n  rep (g \\<otimes>\\<^bsub>G\\<^esub> (h \\<otimes>\\<^bsub>G\\<^esub> k))\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 3. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "also"], ["proof (state)\nthis:\n  rep (g \\<otimes>\\<^bsub>G\\<^esub> h \\<otimes>\\<^bsub>G\\<^esub> k) =\n  rep (g \\<otimes>\\<^bsub>G\\<^esub> (h \\<otimes>\\<^bsub>G\\<^esub> k))\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 3. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "have \"\\<dots> = x \\<otimes>\\<^bsub>flatten G rep\\<^esub> (rep (h \\<otimes>\\<^bsub>G\\<^esub> k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rep (g \\<otimes>\\<^bsub>G\\<^esub> (h \\<otimes>\\<^bsub>G\\<^esub> k)) =\n    x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n    rep (h \\<otimes>\\<^bsub>G\\<^esub> k)", "unfolding g_def flatten_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub>\n         (h \\<otimes>\\<^bsub>G\\<^esub> k)) =\n    x \\<otimes>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub>\n    rep (h \\<otimes>\\<^bsub>G\\<^esub> k)", "using hk inj the_inv_into_f_f"], ["proof (prove)\nusing this:\n  h \\<otimes>\\<^bsub>G\\<^esub> k \\<in> carrier G\n  inj_on rep (carrier G)\n  \\<lbrakk>inj_on ?f ?A; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> the_inv_into ?A ?f (?f ?x) = ?x\n\ngoal (1 subgoal):\n 1. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub>\n         (h \\<otimes>\\<^bsub>G\\<^esub> k)) =\n    x \\<otimes>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub>\n    rep (h \\<otimes>\\<^bsub>G\\<^esub> k)", "by fastforce"], ["proof (state)\nthis:\n  rep (g \\<otimes>\\<^bsub>G\\<^esub> (h \\<otimes>\\<^bsub>G\\<^esub> k)) =\n  x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  rep (h \\<otimes>\\<^bsub>G\\<^esub> k)\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 3. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "also"], ["proof (state)\nthis:\n  rep (g \\<otimes>\\<^bsub>G\\<^esub> (h \\<otimes>\\<^bsub>G\\<^esub> k)) =\n  x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  rep (h \\<otimes>\\<^bsub>G\\<^esub> k)\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 3. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "have \"\\<dots> = x \\<otimes>\\<^bsub>flatten G rep\\<^esub> (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n    rep (h \\<otimes>\\<^bsub>G\\<^esub> k) =\n    x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n    (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)", "unfolding h_def k_def flatten_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub>\n    rep (the_inv_into (carrier G) rep y \\<otimes>\\<^bsub>G\\<^esub>\n         the_inv_into (carrier G) rep z) =\n    x \\<otimes>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub>\n    (y \\<otimes>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub>\n     z)", "using x y"], ["proof (prove)\nusing this:\n  x \\<in> carrier (flatten G rep)\n  y \\<in> carrier (flatten G rep)\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub>\n    rep (the_inv_into (carrier G) rep y \\<otimes>\\<^bsub>G\\<^esub>\n         the_inv_into (carrier G) rep z) =\n    x \\<otimes>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub>\n    (y \\<otimes>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub>\n     z)", "by force"], ["proof (state)\nthis:\n  x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  rep (h \\<otimes>\\<^bsub>G\\<^esub> k) =\n  x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (flatten G rep);\n        y \\<in> carrier (flatten G rep);\n        z \\<in> carrier (flatten G rep)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n                         (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 3. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "finally"], ["proof (chain)\npicking this:\n  x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  z =\n  x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)", "show \"x \\<otimes>\\<^bsub>flatten G rep\\<^esub> y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z = x \\<otimes>\\<^bsub>flatten G rep\\<^esub> (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\""], ["proof (prove)\nusing this:\n  x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  z =\n  x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n    y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n    z =\n    x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n    (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)", "."], ["proof (state)\nthis:\n  x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  y \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  z =\n  x \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  (y \\<otimes>\\<^bsub>flatten G rep\\<^esub> z)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "assume x:\"x \\<in> carrier (flatten G rep)\""], ["proof (state)\nthis:\n  x \\<in> carrier (flatten G rep)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "define g where \"g = the_inv_into (carrier G) rep x\""], ["proof (state)\nthis:\n  g = the_inv_into (carrier G) rep x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "hence gG:\"g \\<in> carrier G\""], ["proof (prove)\nusing this:\n  g = the_inv_into (carrier G) rep x\n\ngoal (1 subgoal):\n 1. g \\<in> carrier G", "using inj x"], ["proof (prove)\nusing this:\n  g = the_inv_into (carrier G) rep x\n  inj_on rep (carrier G)\n  x \\<in> carrier (flatten G rep)\n\ngoal (1 subgoal):\n 1. g \\<in> carrier G", "unfolding flatten_def"], ["proof (prove)\nusing this:\n  g = the_inv_into (carrier G) rep x\n  inj_on rep (carrier G)\n  x \\<in> carrier\n           \\<lparr>carrier = rep ` carrier G,\n              monoid.mult =\n                \\<lambda>x y.\n                   rep (the_inv_into (carrier G) rep\n                         x \\<otimes>\\<^bsub>G\\<^esub>\n                        the_inv_into (carrier G) rep y),\n              one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\n\ngoal (1 subgoal):\n 1. g \\<in> carrier G", "using the_inv_into_into"], ["proof (prove)\nusing this:\n  g = the_inv_into (carrier G) rep x\n  inj_on rep (carrier G)\n  x \\<in> carrier\n           \\<lparr>carrier = rep ` carrier G,\n              monoid.mult =\n                \\<lambda>x y.\n                   rep (the_inv_into (carrier G) rep\n                         x \\<otimes>\\<^bsub>G\\<^esub>\n                        the_inv_into (carrier G) rep y),\n              one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\n  \\<lbrakk>inj_on ?f ?A; ?x \\<in> ?f ` ?A; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> the_inv_into ?A ?f ?x \\<in> ?B\n\ngoal (1 subgoal):\n 1. g \\<in> carrier G", "by force"], ["proof (state)\nthis:\n  g \\<in> carrier G\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "have \"\\<one>\\<^bsub>G\\<^esub> \\<in> (carrier G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>G\\<^esub> \\<in> carrier G", "by (simp add: group group.is_monoid)"], ["proof (state)\nthis:\n  \\<one>\\<^bsub>G\\<^esub> \\<in> carrier G\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "hence \"the_inv_into (carrier G) rep (\\<one>\\<^bsub>flatten G rep\\<^esub>) = \\<one>\\<^bsub>G\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<one>\\<^bsub>G\\<^esub> \\<in> carrier G\n\ngoal (1 subgoal):\n 1. the_inv_into (carrier G) rep \\<one>\\<^bsub>flatten G rep\\<^esub> =\n    \\<one>\\<^bsub>G\\<^esub>", "unfolding flatten_def"], ["proof (prove)\nusing this:\n  \\<one>\\<^bsub>G\\<^esub> \\<in> carrier G\n\ngoal (1 subgoal):\n 1. the_inv_into (carrier G) rep\n     \\<one>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub> =\n    \\<one>\\<^bsub>G\\<^esub>", "using the_inv_into_f_f inj"], ["proof (prove)\nusing this:\n  \\<one>\\<^bsub>G\\<^esub> \\<in> carrier G\n  \\<lbrakk>inj_on ?f ?A; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> the_inv_into ?A ?f (?f ?x) = ?x\n  inj_on rep (carrier G)\n\ngoal (1 subgoal):\n 1. the_inv_into (carrier G) rep\n     \\<one>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub> =\n    \\<one>\\<^bsub>G\\<^esub>", "by force"], ["proof (state)\nthis:\n  the_inv_into (carrier G) rep \\<one>\\<^bsub>flatten G rep\\<^esub> =\n  \\<one>\\<^bsub>G\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "hence \"\\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub> x = rep (\\<one>\\<^bsub>G\\<^esub> \\<otimes>\\<^bsub>G\\<^esub> g)\""], ["proof (prove)\nusing this:\n  the_inv_into (carrier G) rep \\<one>\\<^bsub>flatten G rep\\<^esub> =\n  \\<one>\\<^bsub>G\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n    x =\n    rep (\\<one>\\<^bsub>G\\<^esub> \\<otimes>\\<^bsub>G\\<^esub> g)", "unfolding flatten_def g_def"], ["proof (prove)\nusing this:\n  the_inv_into (carrier G) rep\n   \\<one>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub> =\n  \\<one>\\<^bsub>G\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub> \\<otimes>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub>\n    x =\n    rep (\\<one>\\<^bsub>G\\<^esub> \\<otimes>\\<^bsub>G\\<^esub>\n         the_inv_into (carrier G) rep x)", "by simp"], ["proof (state)\nthis:\n  \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  x =\n  rep (\\<one>\\<^bsub>G\\<^esub> \\<otimes>\\<^bsub>G\\<^esub> g)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "also"], ["proof (state)\nthis:\n  \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  x =\n  rep (\\<one>\\<^bsub>G\\<^esub> \\<otimes>\\<^bsub>G\\<^esub> g)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "have \"\\<dots> = rep g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rep (\\<one>\\<^bsub>G\\<^esub> \\<otimes>\\<^bsub>G\\<^esub> g) = rep g", "using gG group"], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n  Group.group G\n\ngoal (1 subgoal):\n 1. rep (\\<one>\\<^bsub>G\\<^esub> \\<otimes>\\<^bsub>G\\<^esub> g) = rep g", "by (metis group.is_monoid monoid.l_one)"], ["proof (state)\nthis:\n  rep (\\<one>\\<^bsub>G\\<^esub> \\<otimes>\\<^bsub>G\\<^esub> g) = rep g\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "also"], ["proof (state)\nthis:\n  rep (\\<one>\\<^bsub>G\\<^esub> \\<otimes>\\<^bsub>G\\<^esub> g) = rep g\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "have \"\\<dots> = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rep g = x", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. rep (the_inv_into (carrier G) rep x) = x", "using inj x f_the_inv_into_f"], ["proof (prove)\nusing this:\n  inj_on rep (carrier G)\n  x \\<in> carrier (flatten G rep)\n  \\<lbrakk>inj_on ?f ?A; ?y \\<in> ?f ` ?A\\<rbrakk>\n  \\<Longrightarrow> ?f (the_inv_into ?A ?f ?y) = ?y\n\ngoal (1 subgoal):\n 1. rep (the_inv_into (carrier G) rep x) = x", "unfolding flatten_def"], ["proof (prove)\nusing this:\n  inj_on rep (carrier G)\n  x \\<in> carrier\n           \\<lparr>carrier = rep ` carrier G,\n              monoid.mult =\n                \\<lambda>x y.\n                   rep (the_inv_into (carrier G) rep\n                         x \\<otimes>\\<^bsub>G\\<^esub>\n                        the_inv_into (carrier G) rep y),\n              one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\n  \\<lbrakk>inj_on ?f ?A; ?y \\<in> ?f ` ?A\\<rbrakk>\n  \\<Longrightarrow> ?f (the_inv_into ?A ?f ?y) = ?y\n\ngoal (1 subgoal):\n 1. rep (the_inv_into (carrier G) rep x) = x", "by force"], ["proof (state)\nthis:\n  rep g = x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n       x =\n       x\n 2. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "finally"], ["proof (chain)\npicking this:\n  \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  x =\n  x", "show \"\\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub> x = x\""], ["proof (prove)\nusing this:\n  \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  x =\n  x\n\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n    x =\n    x", "."], ["proof (state)\nthis:\n  \\<one>\\<^bsub>flatten G rep\\<^esub> \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n  x =\n  x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "from group inj"], ["proof (chain)\npicking this:\n  Group.group G\n  inj_on rep (carrier G)", "have hom:\"rep \\<in> hom G (flatten G rep)\""], ["proof (prove)\nusing this:\n  Group.group G\n  inj_on rep (carrier G)\n\ngoal (1 subgoal):\n 1. rep \\<in> hom G (flatten G rep)", "using flatten_set_group_hom"], ["proof (prove)\nusing this:\n  Group.group G\n  inj_on rep (carrier G)\n  \\<lbrakk>Group.group ?G; inj_on ?rep (carrier ?G)\\<rbrakk>\n  \\<Longrightarrow> ?rep \\<in> hom ?G (flatten ?G ?rep)\n\ngoal (1 subgoal):\n 1. rep \\<in> hom G (flatten G rep)", "by auto"], ["proof (state)\nthis:\n  rep \\<in> hom G (flatten G rep)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "assume x:\"x \\<in> carrier (flatten G rep)\""], ["proof (state)\nthis:\n  x \\<in> carrier (flatten G rep)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "define g where \"g = the_inv_into (carrier G) rep x\""], ["proof (state)\nthis:\n  g = the_inv_into (carrier G) rep x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "hence gG:\"g \\<in> carrier G\""], ["proof (prove)\nusing this:\n  g = the_inv_into (carrier G) rep x\n\ngoal (1 subgoal):\n 1. g \\<in> carrier G", "using inj x"], ["proof (prove)\nusing this:\n  g = the_inv_into (carrier G) rep x\n  inj_on rep (carrier G)\n  x \\<in> carrier (flatten G rep)\n\ngoal (1 subgoal):\n 1. g \\<in> carrier G", "unfolding flatten_def"], ["proof (prove)\nusing this:\n  g = the_inv_into (carrier G) rep x\n  inj_on rep (carrier G)\n  x \\<in> carrier\n           \\<lparr>carrier = rep ` carrier G,\n              monoid.mult =\n                \\<lambda>x y.\n                   rep (the_inv_into (carrier G) rep\n                         x \\<otimes>\\<^bsub>G\\<^esub>\n                        the_inv_into (carrier G) rep y),\n              one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\n\ngoal (1 subgoal):\n 1. g \\<in> carrier G", "using the_inv_into_into"], ["proof (prove)\nusing this:\n  g = the_inv_into (carrier G) rep x\n  inj_on rep (carrier G)\n  x \\<in> carrier\n           \\<lparr>carrier = rep ` carrier G,\n              monoid.mult =\n                \\<lambda>x y.\n                   rep (the_inv_into (carrier G) rep\n                         x \\<otimes>\\<^bsub>G\\<^esub>\n                        the_inv_into (carrier G) rep y),\n              one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\n  \\<lbrakk>inj_on ?f ?A; ?x \\<in> ?f ` ?A; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> the_inv_into ?A ?f ?x \\<in> ?B\n\ngoal (1 subgoal):\n 1. g \\<in> carrier G", "by force"], ["proof (state)\nthis:\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "hence invG:\"inv\\<^bsub>G\\<^esub> g \\<in> carrier G\""], ["proof (prove)\nusing this:\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>G\\<^esub> g \\<in> carrier G", "by (metis group group.inv_closed)"], ["proof (state)\nthis:\n  inv\\<^bsub>G\\<^esub> g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "hence \"rep (inv\\<^bsub>G\\<^esub> g) \\<in> carrier (flatten G rep)\""], ["proof (prove)\nusing this:\n  inv\\<^bsub>G\\<^esub> g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. rep (inv\\<^bsub>G\\<^esub> g) \\<in> carrier (flatten G rep)", "unfolding flatten_def"], ["proof (prove)\nusing this:\n  inv\\<^bsub>G\\<^esub> g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. rep (inv\\<^bsub>G\\<^esub> g)\n    \\<in> carrier\n           \\<lparr>carrier = rep ` carrier G,\n              monoid.mult =\n                \\<lambda>x y.\n                   rep (the_inv_into (carrier G) rep\n                         x \\<otimes>\\<^bsub>G\\<^esub>\n                        the_inv_into (carrier G) rep y),\n              one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>", "by auto"], ["proof (state)\nthis:\n  rep (inv\\<^bsub>G\\<^esub> g) \\<in> carrier (flatten G rep)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "moreover"], ["proof (state)\nthis:\n  rep (inv\\<^bsub>G\\<^esub> g) \\<in> carrier (flatten G rep)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "have \"rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x = rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> (rep g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n    rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n    rep g", "unfolding g_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. rep (inv\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep\n                               x) \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n    x =\n    rep (inv\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep\n                               x) \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n    rep (the_inv_into (carrier G) rep x)", "using f_the_inv_into_f inj x"], ["proof (prove)\nusing this:\n  \\<lbrakk>inj_on ?f ?A; ?y \\<in> ?f ` ?A\\<rbrakk>\n  \\<Longrightarrow> ?f (the_inv_into ?A ?f ?y) = ?y\n  inj_on rep (carrier G)\n  x \\<in> carrier (flatten G rep)\n\ngoal (1 subgoal):\n 1. rep (inv\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep\n                               x) \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n    x =\n    rep (inv\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep\n                               x) \\<otimes>\\<^bsub>flatten G rep\\<^esub>\n    rep (the_inv_into (carrier G) rep x)", "unfolding flatten_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>inj_on ?f ?A; ?y \\<in> ?f ` ?A\\<rbrakk>\n  \\<Longrightarrow> ?f (the_inv_into ?A ?f ?y) = ?y\n  inj_on rep (carrier G)\n  x \\<in> carrier\n           \\<lparr>carrier = rep ` carrier G,\n              monoid.mult =\n                \\<lambda>x y.\n                   rep (the_inv_into (carrier G) rep\n                         x \\<otimes>\\<^bsub>G\\<^esub>\n                        the_inv_into (carrier G) rep y),\n              one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\n\ngoal (1 subgoal):\n 1. rep (inv\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep\n                               x) \\<otimes>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub>\n    x =\n    rep (inv\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep\n                               x) \\<otimes>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub>\n    rep (the_inv_into (carrier G) rep x)", "by fastforce"], ["proof (state)\nthis:\n  rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n  rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "hence \"rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x = rep (inv\\<^bsub>G\\<^esub> g \\<otimes>\\<^bsub>G\\<^esub> g)\""], ["proof (prove)\nusing this:\n  rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n  rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep g\n\ngoal (1 subgoal):\n 1. rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n    rep (inv\\<^bsub>G\\<^esub> g \\<otimes>\\<^bsub>G\\<^esub> g)", "using hom"], ["proof (prove)\nusing this:\n  rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n  rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep g\n  rep \\<in> hom G (flatten G rep)\n\ngoal (1 subgoal):\n 1. rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n    rep (inv\\<^bsub>G\\<^esub> g \\<otimes>\\<^bsub>G\\<^esub> g)", "unfolding hom_def"], ["proof (prove)\nusing this:\n  rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n  rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep g\n  rep\n  \\<in> {h \\<in> carrier G \\<rightarrow> carrier (flatten G rep).\n         \\<forall>x\\<in>carrier G.\n            \\<forall>y\\<in>carrier G.\n               h (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n               h x \\<otimes>\\<^bsub>flatten G rep\\<^esub> h y}\n\ngoal (1 subgoal):\n 1. rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n    rep (inv\\<^bsub>G\\<^esub> g \\<otimes>\\<^bsub>G\\<^esub> g)", "using gG invG hom_def"], ["proof (prove)\nusing this:\n  rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n  rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> rep g\n  rep\n  \\<in> {h \\<in> carrier G \\<rightarrow> carrier (flatten G rep).\n         \\<forall>x\\<in>carrier G.\n            \\<forall>y\\<in>carrier G.\n               h (x \\<otimes>\\<^bsub>G\\<^esub> y) =\n               h x \\<otimes>\\<^bsub>flatten G rep\\<^esub> h y}\n  g \\<in> carrier G\n  inv\\<^bsub>G\\<^esub> g \\<in> carrier G\n  hom ?G ?H =\n  {h \\<in> carrier ?G \\<rightarrow> carrier ?H.\n   \\<forall>x\\<in>carrier ?G.\n      \\<forall>y\\<in>carrier ?G.\n         h (x \\<otimes>\\<^bsub>?G\\<^esub> y) =\n         h x \\<otimes>\\<^bsub>?H\\<^esub> h y}\n\ngoal (1 subgoal):\n 1. rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n    rep (inv\\<^bsub>G\\<^esub> g \\<otimes>\\<^bsub>G\\<^esub> g)", "by auto"], ["proof (state)\nthis:\n  rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n  rep (inv\\<^bsub>G\\<^esub> g \\<otimes>\\<^bsub>G\\<^esub> g)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "hence \"rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x = rep \\<one>\\<^bsub>G\\<^esub>\""], ["proof (prove)\nusing this:\n  rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n  rep (inv\\<^bsub>G\\<^esub> g \\<otimes>\\<^bsub>G\\<^esub> g)\n\ngoal (1 subgoal):\n 1. rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n    rep \\<one>\\<^bsub>G\\<^esub>", "using invG gG"], ["proof (prove)\nusing this:\n  rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n  rep (inv\\<^bsub>G\\<^esub> g \\<otimes>\\<^bsub>G\\<^esub> g)\n  inv\\<^bsub>G\\<^esub> g \\<in> carrier G\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n    rep \\<one>\\<^bsub>G\\<^esub>", "by (metis group group.l_inv)"], ["proof (state)\nthis:\n  rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n  rep \\<one>\\<^bsub>G\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "hence \"rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x = \\<one>\\<^bsub>flatten G rep\\<^esub>\""], ["proof (prove)\nusing this:\n  rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n  rep \\<one>\\<^bsub>G\\<^esub>\n\ngoal (1 subgoal):\n 1. rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n    \\<one>\\<^bsub>flatten G rep\\<^esub>", "unfolding flatten_def"], ["proof (prove)\nusing this:\n  rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub>\n  x =\n  rep \\<one>\\<^bsub>G\\<^esub>\n\ngoal (1 subgoal):\n 1. rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub>\n    x =\n    \\<one>\\<^bsub>\\<lparr>carrier = rep ` carrier G, monoid.mult = \\<lambda>x y. rep (the_inv_into (carrier G) rep x \\<otimes>\\<^bsub>G\\<^esub> the_inv_into (carrier G) rep y), one = rep \\<one>\\<^bsub>G\\<^esub>\\<rparr>\\<^esub>", "by auto"], ["proof (state)\nthis:\n  rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n  \\<one>\\<^bsub>flatten G rep\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (flatten G rep) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (flatten G rep).\n          y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n          \\<one>\\<^bsub>flatten G rep\\<^esub>", "ultimately"], ["proof (chain)\npicking this:\n  rep (inv\\<^bsub>G\\<^esub> g) \\<in> carrier (flatten G rep)\n  rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n  \\<one>\\<^bsub>flatten G rep\\<^esub>", "show \"\\<exists>y\\<in>carrier (flatten G rep). y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x = \\<one>\\<^bsub>flatten G rep\\<^esub>\""], ["proof (prove)\nusing this:\n  rep (inv\\<^bsub>G\\<^esub> g) \\<in> carrier (flatten G rep)\n  rep (inv\\<^bsub>G\\<^esub> g) \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n  \\<one>\\<^bsub>flatten G rep\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>carrier (flatten G rep).\n       y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n       \\<one>\\<^bsub>flatten G rep\\<^esub>", "by auto"], ["proof (state)\nthis:\n  \\<exists>y\\<in>carrier (flatten G rep).\n     y \\<otimes>\\<^bsub>flatten G rep\\<^esub> x =\n     \\<one>\\<^bsub>flatten G rep\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in normal) flatten_set_group_mod_inj:\n  shows \"inj_on (\\<lambda>U. SOME g. g \\<in> U) (carrier (G Mod H))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>U. SOME g. g \\<in> U) (carrier (G Mod H))", "proof (rule inj_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod H); y \\<in> carrier (G Mod H);\n        (SOME g. g \\<in> x) = (SOME g. g \\<in> y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix U V"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod H); y \\<in> carrier (G Mod H);\n        (SOME g. g \\<in> x) = (SOME g. g \\<in> y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume U:\"U \\<in> carrier (G Mod H)\" and V:\"V \\<in> carrier (G Mod H)\""], ["proof (state)\nthis:\n  U \\<in> carrier (G Mod H)\n  V \\<in> carrier (G Mod H)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod H); y \\<in> carrier (G Mod H);\n        (SOME g. g \\<in> x) = (SOME g. g \\<in> y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  U \\<in> carrier (G Mod H)\n  V \\<in> carrier (G Mod H)", "obtain g h where g:\"U = H #> g\" \"g \\<in> carrier G\" and h:\"V = H #> h\" \"h \\<in> carrier G\""], ["proof (prove)\nusing this:\n  U \\<in> carrier (G Mod H)\n  V \\<in> carrier (G Mod H)\n\ngoal (1 subgoal):\n 1. (\\<And>g h.\n        \\<lbrakk>U = H #> g; g \\<in> carrier G; V = H #> h;\n         h \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding FactGroup_def RCOSETS_def"], ["proof (prove)\nusing this:\n  U \\<in> carrier\n           \\<lparr>carrier = \\<Union>a\\<in>carrier G. {H #> a},\n              monoid.mult = (<#>), one = H\\<rparr>\n  V \\<in> carrier\n           \\<lparr>carrier = \\<Union>a\\<in>carrier G. {H #> a},\n              monoid.mult = (<#>), one = H\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<And>g h.\n        \\<lbrakk>U = H #> g; g \\<in> carrier G; V = H #> h;\n         h \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  U = H #> g\n  g \\<in> carrier G\n  V = H #> h\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod H); y \\<in> carrier (G Mod H);\n        (SOME g. g \\<in> x) = (SOME g. g \\<in> y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence notempty:\"U \\<noteq> {}\" \"V \\<noteq> {}\""], ["proof (prove)\nusing this:\n  U = H #> g\n  g \\<in> carrier G\n  V = H #> h\n  h \\<in> carrier G\n\ngoal (1 subgoal):\n 1. U \\<noteq> {} &&& V \\<noteq> {}", "by (metis empty_iff is_subgroup rcos_self)+"], ["proof (state)\nthis:\n  U \\<noteq> {}\n  V \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod H); y \\<in> carrier (G Mod H);\n        (SOME g. g \\<in> x) = (SOME g. g \\<in> y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume \"(SOME g. g \\<in> U) = (SOME g. g \\<in> V)\""], ["proof (state)\nthis:\n  (SOME g. g \\<in> U) = (SOME g. g \\<in> V)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod H); y \\<in> carrier (G Mod H);\n        (SOME g. g \\<in> x) = (SOME g. g \\<in> y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "with notempty"], ["proof (chain)\npicking this:\n  U \\<noteq> {}\n  V \\<noteq> {}\n  (SOME g. g \\<in> U) = (SOME g. g \\<in> V)", "have \"(SOME g. g \\<in> U) \\<in> U \\<inter> V\""], ["proof (prove)\nusing this:\n  U \\<noteq> {}\n  V \\<noteq> {}\n  (SOME g. g \\<in> U) = (SOME g. g \\<in> V)\n\ngoal (1 subgoal):\n 1. (SOME g. g \\<in> U) \\<in> U \\<inter> V", "by (metis IntI ex_in_conv someI)"], ["proof (state)\nthis:\n  (SOME g. g \\<in> U) \\<in> U \\<inter> V\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G Mod H); y \\<in> carrier (G Mod H);\n        (SOME g. g \\<in> x) = (SOME g. g \\<in> y)\\<rbrakk>\n       \\<Longrightarrow> x = y", "thus \"U = V\""], ["proof (prove)\nusing this:\n  (SOME g. g \\<in> U) \\<in> U \\<inter> V\n\ngoal (1 subgoal):\n 1. U = V", "by (metis Int_iff g h is_subgroup repr_independence)"], ["proof (state)\nthis:\n  U = V\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in normal) flatten_set_group_mod:\n  shows \"group (flatten (G Mod H) (\\<lambda>U. SOME g. g \\<in> U))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (flatten (G Mod H) (\\<lambda>U. SOME g. g \\<in> U))", "using factorgroup_is_group flatten_set_group_mod_inj"], ["proof (prove)\nusing this:\n  Group.group (G Mod H)\n  inj_on (\\<lambda>U. SOME g. g \\<in> U) (carrier (G Mod H))\n\ngoal (1 subgoal):\n 1. Group.group (flatten (G Mod H) (\\<lambda>U. SOME g. g \\<in> U))", "by (rule flatten_set_group)"], ["", "lemma (in normal) flatten_set_group_mod_iso:\n  shows \"(\\<lambda>U. SOME g. g \\<in> U) \\<in> iso (G Mod H) (flatten (G Mod H) (\\<lambda>U. SOME g. g \\<in> U))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>U. SOME g. g \\<in> U)\n    \\<in> Group.iso (G Mod H)\n           (flatten (G Mod H) (\\<lambda>U. SOME g. g \\<in> U))", "unfolding iso_def bij_betw_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>U. SOME g. g \\<in> U)\n    \\<in> {h \\<in> hom (G Mod H)\n                    (flatten (G Mod H) (\\<lambda>U. SOME g. g \\<in> U)).\n           inj_on h (carrier (G Mod H)) \\<and>\n           h ` carrier (G Mod H) =\n           carrier (flatten (G Mod H) (\\<lambda>U. SOME g. g \\<in> U))}", "apply (auto)"], ["proof (prove)\ngoal (4 subgoals):\n 1. (\\<lambda>U. SOME g. g \\<in> U)\n    \\<in> hom (G Mod H) (flatten (G Mod H) (\\<lambda>U. SOME g. g \\<in> U))\n 2. inj_on (\\<lambda>U. SOME g. g \\<in> U) (carrier (G Mod H))\n 3. \\<And>U.\n       U \\<in> carrier (G Mod H) \\<Longrightarrow>\n       (SOME g. g \\<in> U)\n       \\<in> carrier (flatten (G Mod H) (\\<lambda>U. SOME g. g \\<in> U))\n 4. \\<And>x.\n       x \\<in> carrier\n                (flatten (G Mod H)\n                  (\\<lambda>U. SOME g. g \\<in> U)) \\<Longrightarrow>\n       x \\<in> (\\<lambda>U. SOME g. g \\<in> U) ` carrier (G Mod H)", "apply (metis flatten_set_group_mod_inj factorgroup_is_group flatten_set_group_hom)"], ["proof (prove)\ngoal (3 subgoals):\n 1. inj_on (\\<lambda>U. SOME g. g \\<in> U) (carrier (G Mod H))\n 2. \\<And>U.\n       U \\<in> carrier (G Mod H) \\<Longrightarrow>\n       (SOME g. g \\<in> U)\n       \\<in> carrier (flatten (G Mod H) (\\<lambda>U. SOME g. g \\<in> U))\n 3. \\<And>x.\n       x \\<in> carrier\n                (flatten (G Mod H)\n                  (\\<lambda>U. SOME g. g \\<in> U)) \\<Longrightarrow>\n       x \\<in> (\\<lambda>U. SOME g. g \\<in> U) ` carrier (G Mod H)", "apply (rule flatten_set_group_mod_inj)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>U.\n       U \\<in> carrier (G Mod H) \\<Longrightarrow>\n       (SOME g. g \\<in> U)\n       \\<in> carrier (flatten (G Mod H) (\\<lambda>U. SOME g. g \\<in> U))\n 2. \\<And>x.\n       x \\<in> carrier\n                (flatten (G Mod H)\n                  (\\<lambda>U. SOME g. g \\<in> U)) \\<Longrightarrow>\n       x \\<in> (\\<lambda>U. SOME g. g \\<in> U) ` carrier (G Mod H)", "unfolding flatten_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>U.\n       U \\<in> carrier (G Mod H) \\<Longrightarrow>\n       (SOME g. g \\<in> U)\n       \\<in> carrier\n              \\<lparr>carrier =\n                        (\\<lambda>U. SOME g. g \\<in> U) ` carrier (G Mod H),\n                 monoid.mult =\n                   \\<lambda>x y.\n                      SOME g.\n                         g \\<in> the_inv_into (carrier (G Mod H))\n                                  (\\<lambda>U. SOME g. g \\<in> U)\n                                  x \\<otimes>\\<^bsub>G Mod H\\<^esub>\n                                 the_inv_into (carrier (G Mod H))\n                                  (\\<lambda>U. SOME g. g \\<in> U) y,\n                 one = SOME g. g \\<in> \\<one>\\<^bsub>G Mod H\\<^esub>\\<rparr>\n 2. \\<And>x.\n       x \\<in> carrier\n                \\<lparr>carrier =\n                          (\\<lambda>U. SOME g. g \\<in> U) `\n                          carrier (G Mod H),\n                   monoid.mult =\n                     \\<lambda>x y.\n                        SOME g.\n                           g \\<in> the_inv_into (carrier (G Mod H))\n                                    (\\<lambda>U. SOME g. g \\<in> U)\n                                    x \\<otimes>\\<^bsub>G Mod H\\<^esub>\n                                   the_inv_into (carrier (G Mod H))\n                                    (\\<lambda>U. SOME g. g \\<in> U) y,\n                   one =\n                     SOME g.\n                        g \\<in> \\<one>\\<^bsub>G Mod H\\<^esub>\\<rparr> \\<Longrightarrow>\n       x \\<in> (\\<lambda>U. SOME g. g \\<in> U) ` carrier (G Mod H)", "apply (auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}