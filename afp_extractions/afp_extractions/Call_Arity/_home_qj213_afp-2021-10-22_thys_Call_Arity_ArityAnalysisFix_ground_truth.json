{"file_name": "/home/qj213/afp-2021-10-22/thys/Call_Arity/ArityAnalysisFix.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Call_Arity", "problem_names": ["lemma Afix_eq: \"Afix \\<Gamma>\\<cdot>ae = (\\<mu> ae'. (ABinds \\<Gamma>\\<cdot>ae') \\<squnion> ae)\"", "lemma Afix_strict[simp]: \"Afix \\<Gamma>\\<cdot>\\<bottom> = \\<bottom>\"", "lemma Afix_least_below: \"ABinds \\<Gamma> \\<cdot> ae' \\<sqsubseteq> ae' \\<Longrightarrow> ae \\<sqsubseteq> ae' \\<Longrightarrow> Afix \\<Gamma> \\<cdot> ae \\<sqsubseteq> ae'\"", "lemma Afix_unroll: \"Afix \\<Gamma>\\<cdot>ae = ABinds \\<Gamma> \\<cdot> (Afix \\<Gamma>\\<cdot>ae) \\<squnion> ae\"", "lemma Abinds_below_Afix: \"ABinds \\<Delta> \\<sqsubseteq> Afix \\<Delta>\"", "lemma Afix_above_arg: \"ae \\<sqsubseteq> Afix \\<Gamma> \\<cdot> ae\"", "lemma Abinds_Afix_below[simp]: \"ABinds \\<Gamma>\\<cdot>(Afix \\<Gamma>\\<cdot>ae) \\<sqsubseteq> Afix \\<Gamma>\\<cdot>ae\"", "lemma Afix_reorder: \"map_of \\<Gamma> = map_of \\<Delta> \\<Longrightarrow> Afix \\<Gamma> = Afix \\<Delta>\"", "lemma Afix_repeat_singleton: \"(\\<mu> xa. Afix \\<Gamma>\\<cdot>(esing x\\<cdot>(n \\<squnion> xa x) \\<squnion> ae)) = Afix \\<Gamma>\\<cdot>(esing x\\<cdot>n \\<squnion> ae)\"", "lemma Afix_join_fresh: \"ae' ` (domA \\<Delta>) \\<subseteq> {\\<bottom>}  \\<Longrightarrow>  Afix \\<Delta>\\<cdot>(ae \\<squnion> ae') = (Afix \\<Delta>\\<cdot>ae) \\<squnion> ae'\"", "lemma Afix_restr_fresh:\n  assumes \"atom ` S \\<sharp>* \\<Gamma>\"\n  shows \"Afix \\<Gamma>\\<cdot>ae f|` (- S) = Afix \\<Gamma>\\<cdot>(ae  f|` (- S)) f|` (- S)\"", "lemma Afix_restr:\n  assumes \"domA \\<Gamma> \\<subseteq> S\"\n  shows \"Afix \\<Gamma>\\<cdot>ae f|` S = Afix \\<Gamma>\\<cdot>(ae  f|` S) f|` S\"", "lemma Afix_restr_subst':\n  assumes \"\\<And> x' e a. (x',e) \\<in> set \\<Gamma> \\<Longrightarrow> Aexp e[x::=y]\\<cdot>a f|` S = Aexp e\\<cdot>a f|` S\"\n  assumes \"x \\<notin> S\"\n  assumes \"y \\<notin> S\"\n  assumes \"domA \\<Gamma> \\<subseteq> S\"\n  shows \"Afix \\<Gamma>[x::h=y]\\<cdot>ae f|` S = Afix \\<Gamma>\\<cdot>(ae f|` S) f|` S\"", "lemma Afix_subst_approx:\n  assumes \"\\<And> v n. v \\<in> domA \\<Gamma> \\<Longrightarrow> Aexp (the (map_of \\<Gamma> v))[y::=x]\\<cdot>n \\<sqsubseteq> (Aexp (the (map_of \\<Gamma> v))\\<cdot>n)(y := \\<bottom>, x := up\\<cdot>0)\"\n  assumes \"x \\<notin> domA \\<Gamma>\"\n  assumes \"y \\<notin> domA \\<Gamma>\"\n  shows \"Afix \\<Gamma>[y::h= x]\\<cdot>(ae(y := \\<bottom>, x := up\\<cdot>0)) \\<sqsubseteq> (Afix \\<Gamma>\\<cdot>ae)(y := \\<bottom>, x := up\\<cdot>0)\"", "lemma Afix_eqvt[eqvt]: \"\\<pi> \\<bullet> (ArityAnalysis.Afix Aexp \\<Gamma>) = ArityAnalysis.Afix  (\\<pi> \\<bullet> Aexp) (\\<pi> \\<bullet> \\<Gamma>)\"", "lemma Afix_cong[fundef_cong]:\n  \"\\<lbrakk> (\\<And> e. e \\<in> snd ` set heap2 \\<Longrightarrow> aexp1 e = aexp2 e); heap1 = heap2 \\<rbrakk>\n      \\<Longrightarrow> ArityAnalysis.Afix aexp1 heap1 = ArityAnalysis.Afix aexp2 heap2\"", "lemma Afix_edom: \"edom (Afix \\<Gamma> \\<cdot> ae) \\<subseteq> fv \\<Gamma> \\<union> edom ae\"", "lemma ABinds_lookup_fresh:\n  \"atom v \\<sharp> \\<Gamma> \\<Longrightarrow> (ABinds \\<Gamma>\\<cdot>ae) v = \\<bottom>\"", "lemma Afix_lookup_fresh:\n  assumes \"atom v \\<sharp> \\<Gamma>\"\n  shows \"(Afix \\<Gamma>\\<cdot>ae) v = ae v\"", "lemma Afix_comp2join_fresh:\n  \"atom ` (domA \\<Delta>) \\<sharp>* \\<Gamma> \\<Longrightarrow> ABinds \\<Delta>\\<cdot>(Afix \\<Gamma>\\<cdot>ae) = ABinds \\<Delta>\\<cdot>ae\"", "lemma Afix_append_fresh:\n  assumes \"atom ` domA \\<Delta> \\<sharp>* \\<Gamma>\"\n  shows \"Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae = Afix \\<Gamma>\\<cdot>(Afix \\<Delta>\\<cdot>ae)\"", "lemma Afix_e_to_heap:\n   \"Afix (delete x \\<Gamma>)\\<cdot>(fup\\<cdot>(Aexp e)\\<cdot>n \\<squnion> ae) \\<sqsubseteq> Afix ((x, e) # delete x \\<Gamma>)\\<cdot>(esing x\\<cdot>n \\<squnion> ae)\"", "lemma Afix_e_to_heap':\n   \"Afix (delete x \\<Gamma>)\\<cdot>(Aexp e\\<cdot>n) \\<sqsubseteq> Afix ((x, e) # delete x \\<Gamma>)\\<cdot>(esing x\\<cdot>(up\\<cdot>n))\""], "translations": [["", "lemma Afix_eq: \"Afix \\<Gamma>\\<cdot>ae = (\\<mu> ae'. (ABinds \\<Gamma>\\<cdot>ae') \\<squnion> ae)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Afix \\<Gamma>\\<cdot>ae =\n    (\\<mu> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)", "unfolding Afix_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Lambda> ae. \\<mu> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>\n    ae =\n    (\\<mu> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)", "by simp"], ["", "lemma Afix_strict[simp]: \"Afix \\<Gamma>\\<cdot>\\<bottom> = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Afix \\<Gamma>\\<cdot>\\<bottom> = \\<bottom>", "unfolding Afix_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<mu> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> \\<bottom>) = \\<bottom>", "by (rule fix_eqI) auto"], ["", "lemma Afix_least_below: \"ABinds \\<Gamma> \\<cdot> ae' \\<sqsubseteq> ae' \\<Longrightarrow> ae \\<sqsubseteq> ae' \\<Longrightarrow> Afix \\<Gamma> \\<cdot> ae \\<sqsubseteq> ae'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ABinds \\<Gamma>\\<cdot>ae' \\<sqsubseteq> ae';\n     ae \\<sqsubseteq> ae'\\<rbrakk>\n    \\<Longrightarrow> Afix \\<Gamma>\\<cdot>ae \\<sqsubseteq> ae'", "unfolding Afix_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ABinds \\<Gamma>\\<cdot>ae' \\<sqsubseteq> ae';\n     ae \\<sqsubseteq> ae'\\<rbrakk>\n    \\<Longrightarrow> (\\<mu> x.\n                          ABinds \\<Gamma>\\<cdot>x \\<squnion>\n                          ae) \\<sqsubseteq>\n                      ae'", "by (auto intro: fix_least_below)"], ["", "lemma Afix_unroll: \"Afix \\<Gamma>\\<cdot>ae = ABinds \\<Gamma> \\<cdot> (Afix \\<Gamma>\\<cdot>ae) \\<squnion> ae\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Afix \\<Gamma>\\<cdot>ae =\n    ABinds \\<Gamma>\\<cdot>(Afix \\<Gamma>\\<cdot>ae) \\<squnion> ae", "unfolding Afix_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<mu> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae) =\n    ABinds \\<Gamma>\\<cdot>\n    (\\<mu> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae) \\<squnion>\n    ae", "apply (subst fix_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>\n    (\\<mu> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae) =\n    ABinds \\<Gamma>\\<cdot>\n    (\\<mu> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae) \\<squnion>\n    ae", "by simp"], ["", "lemma Abinds_below_Afix: \"ABinds \\<Delta> \\<sqsubseteq> Afix \\<Delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds \\<Delta> \\<sqsubseteq> Afix \\<Delta>", "apply (rule cfun_belowI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. ABinds \\<Delta>\\<cdot>x \\<sqsubseteq> Afix \\<Delta>\\<cdot>x", "apply (simp add: Afix_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       ABinds \\<Delta>\\<cdot>x \\<sqsubseteq>\n       (\\<mu> xa. x \\<squnion> ABinds \\<Delta>\\<cdot>xa)", "apply (subst fix_eq, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       ABinds \\<Delta>\\<cdot>x \\<sqsubseteq>\n       x \\<squnion>\n       ABinds \\<Delta>\\<cdot>\n       (\\<mu> xa. x \\<squnion> ABinds \\<Delta>\\<cdot>xa)", "apply (rule below_trans[OF _ join_above2])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       ABinds \\<Delta>\\<cdot>x \\<sqsubseteq>\n       ABinds \\<Delta>\\<cdot>\n       (\\<mu> xa. x \\<squnion> ABinds \\<Delta>\\<cdot>xa)", "apply (rule monofun_cfun_arg)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<sqsubseteq> (\\<mu> xa. x \\<squnion> ABinds \\<Delta>\\<cdot>xa)", "apply (subst fix_eq, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Afix_above_arg: \"ae \\<sqsubseteq> Afix \\<Gamma> \\<cdot> ae\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ae \\<sqsubseteq> Afix \\<Gamma>\\<cdot>ae", "by (subst Afix_unroll) simp"], ["", "lemma Abinds_Afix_below[simp]: \"ABinds \\<Gamma>\\<cdot>(Afix \\<Gamma>\\<cdot>ae) \\<sqsubseteq> Afix \\<Gamma>\\<cdot>ae\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds \\<Gamma>\\<cdot>(Afix \\<Gamma>\\<cdot>ae) \\<sqsubseteq>\n    Afix \\<Gamma>\\<cdot>ae", "apply (subst Afix_unroll)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds \\<Gamma>\\<cdot>\n    (ABinds \\<Gamma>\\<cdot>(Afix \\<Gamma>\\<cdot>ae) \\<squnion>\n     ae) \\<sqsubseteq>\n    Afix \\<Gamma>\\<cdot>ae", "back"], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds \\<Gamma>\\<cdot>(Afix \\<Gamma>\\<cdot>ae) \\<sqsubseteq>\n    ABinds \\<Gamma>\\<cdot>(Afix \\<Gamma>\\<cdot>ae) \\<squnion> ae", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*lemma Abinds_Afix[simp]: \"ABinds \\<Gamma>\\<cdot>(Afix \\<Gamma>\\<cdot>ae) = Afix \\<Gamma>\\<cdot>ae\"\n  unfolding Afix_eq\n  apply (subst fix_eq) back apply simp\n  apply (rule below_trans[OF ABinds_above_arg monofun_cfun_arg])\n  apply (subst fix_eq) apply simp\n  done\n*)"], ["", "lemma Afix_reorder: \"map_of \\<Gamma> = map_of \\<Delta> \\<Longrightarrow> Afix \\<Gamma> = Afix \\<Delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_of \\<Gamma> = map_of \\<Delta> \\<Longrightarrow>\n    Afix \\<Gamma> = Afix \\<Delta>", "by (intro cfun_eqI)(simp add: Afix_eq cong: Abinds_reorder)"], ["", "lemma Afix_repeat_singleton: \"(\\<mu> xa. Afix \\<Gamma>\\<cdot>(esing x\\<cdot>(n \\<squnion> xa x) \\<squnion> ae)) = Afix \\<Gamma>\\<cdot>(esing x\\<cdot>n \\<squnion> ae)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<mu> xa.\n        Afix \\<Gamma>\\<cdot>\n        (esing x\\<cdot>(n \\<squnion> xa x) \\<squnion> ae)) =\n    Afix \\<Gamma>\\<cdot>(esing x\\<cdot>n \\<squnion> ae)", "apply (rule below_antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<mu> xa.\n        Afix \\<Gamma>\\<cdot>\n        (esing x\\<cdot>(n \\<squnion> xa x) \\<squnion> ae)) \\<sqsubseteq>\n    Afix \\<Gamma>\\<cdot>(esing x\\<cdot>n \\<squnion> ae)\n 2. Afix \\<Gamma>\\<cdot>(esing x\\<cdot>n \\<squnion> ae) \\<sqsubseteq>\n    (\\<mu> xa.\n        Afix \\<Gamma>\\<cdot>\n        (esing x\\<cdot>(n \\<squnion> xa x) \\<squnion> ae))", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. Afix \\<Gamma>\\<cdot>(esing x\\<cdot>n \\<squnion> ae) \\<sqsubseteq>\n    (\\<mu> xa.\n        Afix \\<Gamma>\\<cdot>\n        (esing x\\<cdot>(n \\<squnion> xa x) \\<squnion> ae))\n 2. (\\<mu> xa.\n        Afix \\<Gamma>\\<cdot>\n        (esing x\\<cdot>(n \\<squnion> xa x) \\<squnion> ae)) \\<sqsubseteq>\n    Afix \\<Gamma>\\<cdot>(esing x\\<cdot>n \\<squnion> ae)", "apply (subst fix_eq, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Afix \\<Gamma>\\<cdot>(ae \\<squnion> esing x\\<cdot>n) \\<sqsubseteq>\n    Afix \\<Gamma>\\<cdot>\n    (ae \\<squnion>\n     esing x\\<cdot>\n     (n \\<squnion>\n      (\\<mu> xa.\n          Afix \\<Gamma>\\<cdot>\n          (ae \\<squnion> esing x\\<cdot>(n \\<squnion> xa x)))\n       x))\n 2. (\\<mu> xa.\n        Afix \\<Gamma>\\<cdot>\n        (esing x\\<cdot>(n \\<squnion> xa x) \\<squnion> ae)) \\<sqsubseteq>\n    Afix \\<Gamma>\\<cdot>(esing x\\<cdot>n \\<squnion> ae)", "apply (intro monofun_cfun_arg join_mono below_refl join_above1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<mu> xa.\n        Afix \\<Gamma>\\<cdot>\n        (esing x\\<cdot>(n \\<squnion> xa x) \\<squnion> ae)) \\<sqsubseteq>\n    Afix \\<Gamma>\\<cdot>(esing x\\<cdot>n \\<squnion> ae)", "apply (rule fix_least_below, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Afix \\<Gamma>\\<cdot>\n    (ae \\<squnion>\n     esing x\\<cdot>\n     (n \\<squnion>\n      (Afix \\<Gamma>\\<cdot>(ae \\<squnion> esing x\\<cdot>n))\n       x)) \\<sqsubseteq>\n    Afix \\<Gamma>\\<cdot>(ae \\<squnion> esing x\\<cdot>n)", "apply (rule Afix_least_below, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ae \\<squnion>\n    esing x\\<cdot>\n    (n \\<squnion>\n     (Afix \\<Gamma>\\<cdot>(ae \\<squnion> esing x\\<cdot>n)) x) \\<sqsubseteq>\n    Afix \\<Gamma>\\<cdot>(ae \\<squnion> esing x\\<cdot>n)", "apply (intro join_below below_refl iffD2[OF esing_below_iff] below_trans[OF _ fun_belowD[OF Afix_above_arg]]  below_trans[OF _ Afix_above_arg] join_above1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<sqsubseteq> (ae \\<squnion> esing x\\<cdot>n) x", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Afix_join_fresh: \"ae' ` (domA \\<Delta>) \\<subseteq> {\\<bottom>}  \\<Longrightarrow>  Afix \\<Delta>\\<cdot>(ae \\<squnion> ae') = (Afix \\<Delta>\\<cdot>ae) \\<squnion> ae'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ae' ` domA \\<Delta> \\<subseteq> {\\<bottom>} \\<Longrightarrow>\n    Afix \\<Delta>\\<cdot>(ae \\<squnion> ae') =\n    Afix \\<Delta>\\<cdot>ae \\<squnion> ae'", "apply (rule below_antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ae' ` domA \\<Delta> \\<subseteq> {\\<bottom>} \\<Longrightarrow>\n    Afix \\<Delta>\\<cdot>(ae \\<squnion> ae') \\<sqsubseteq>\n    Afix \\<Delta>\\<cdot>ae \\<squnion> ae'\n 2. ae' ` domA \\<Delta> \\<subseteq> {\\<bottom>} \\<Longrightarrow>\n    Afix \\<Delta>\\<cdot>ae \\<squnion> ae' \\<sqsubseteq>\n    Afix \\<Delta>\\<cdot>(ae \\<squnion> ae')", "apply (rule Afix_least_below)"], ["proof (prove)\ngoal (3 subgoals):\n 1. ae' ` domA \\<Delta> \\<subseteq> {\\<bottom>} \\<Longrightarrow>\n    ABinds \\<Delta>\\<cdot>\n    (Afix \\<Delta>\\<cdot>ae \\<squnion> ae') \\<sqsubseteq>\n    Afix \\<Delta>\\<cdot>ae \\<squnion> ae'\n 2. ae' ` domA \\<Delta> \\<subseteq> {\\<bottom>} \\<Longrightarrow>\n    ae \\<squnion> ae' \\<sqsubseteq> Afix \\<Delta>\\<cdot>ae \\<squnion> ae'\n 3. ae' ` domA \\<Delta> \\<subseteq> {\\<bottom>} \\<Longrightarrow>\n    Afix \\<Delta>\\<cdot>ae \\<squnion> ae' \\<sqsubseteq>\n    Afix \\<Delta>\\<cdot>(ae \\<squnion> ae')", "apply (subst Abinds_join_fresh, simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. ae' ` domA \\<Delta> \\<subseteq> {\\<bottom>} \\<Longrightarrow>\n    ABinds \\<Delta>\\<cdot>(Afix \\<Delta>\\<cdot>ae) \\<sqsubseteq>\n    Afix \\<Delta>\\<cdot>ae \\<squnion> ae'\n 2. ae' ` domA \\<Delta> \\<subseteq> {\\<bottom>} \\<Longrightarrow>\n    ae \\<squnion> ae' \\<sqsubseteq> Afix \\<Delta>\\<cdot>ae \\<squnion> ae'\n 3. ae' ` domA \\<Delta> \\<subseteq> {\\<bottom>} \\<Longrightarrow>\n    Afix \\<Delta>\\<cdot>ae \\<squnion> ae' \\<sqsubseteq>\n    Afix \\<Delta>\\<cdot>(ae \\<squnion> ae')", "apply (rule below_trans[OF Abinds_Afix_below join_above1])"], ["proof (prove)\ngoal (2 subgoals):\n 1. ae' ` domA \\<Delta> \\<subseteq> {\\<bottom>} \\<Longrightarrow>\n    ae \\<squnion> ae' \\<sqsubseteq> Afix \\<Delta>\\<cdot>ae \\<squnion> ae'\n 2. ae' ` domA \\<Delta> \\<subseteq> {\\<bottom>} \\<Longrightarrow>\n    Afix \\<Delta>\\<cdot>ae \\<squnion> ae' \\<sqsubseteq>\n    Afix \\<Delta>\\<cdot>(ae \\<squnion> ae')", "apply (rule join_below)"], ["proof (prove)\ngoal (3 subgoals):\n 1. ae' ` domA \\<Delta> \\<subseteq> {\\<bottom>} \\<Longrightarrow>\n    ae \\<sqsubseteq> Afix \\<Delta>\\<cdot>ae \\<squnion> ae'\n 2. ae' ` domA \\<Delta> \\<subseteq> {\\<bottom>} \\<Longrightarrow>\n    ae' \\<sqsubseteq> Afix \\<Delta>\\<cdot>ae \\<squnion> ae'\n 3. ae' ` domA \\<Delta> \\<subseteq> {\\<bottom>} \\<Longrightarrow>\n    Afix \\<Delta>\\<cdot>ae \\<squnion> ae' \\<sqsubseteq>\n    Afix \\<Delta>\\<cdot>(ae \\<squnion> ae')", "apply (rule below_trans[OF Afix_above_arg join_above1])"], ["proof (prove)\ngoal (2 subgoals):\n 1. ae' ` domA \\<Delta> \\<subseteq> {\\<bottom>} \\<Longrightarrow>\n    ae' \\<sqsubseteq> Afix \\<Delta>\\<cdot>ae \\<squnion> ae'\n 2. ae' ` domA \\<Delta> \\<subseteq> {\\<bottom>} \\<Longrightarrow>\n    Afix \\<Delta>\\<cdot>ae \\<squnion> ae' \\<sqsubseteq>\n    Afix \\<Delta>\\<cdot>(ae \\<squnion> ae')", "apply (rule join_above2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ae' ` domA \\<Delta> \\<subseteq> {\\<bottom>} \\<Longrightarrow>\n    Afix \\<Delta>\\<cdot>ae \\<squnion> ae' \\<sqsubseteq>\n    Afix \\<Delta>\\<cdot>(ae \\<squnion> ae')", "apply (rule join_below[OF monofun_cfun_arg [OF join_above1]])"], ["proof (prove)\ngoal (1 subgoal):\n 1. ae' ` domA \\<Delta> \\<subseteq> {\\<bottom>} \\<Longrightarrow>\n    ae' \\<sqsubseteq> Afix \\<Delta>\\<cdot>(ae \\<squnion> ae')", "apply (rule below_trans[OF join_above2 Afix_above_arg])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Afix_restr_fresh:\n  assumes \"atom ` S \\<sharp>* \\<Gamma>\"\n  shows \"Afix \\<Gamma>\\<cdot>ae f|` (- S) = Afix \\<Gamma>\\<cdot>(ae  f|` (- S)) f|` (- S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Afix \\<Gamma>\\<cdot>ae f|` (- S) =\n    Afix \\<Gamma>\\<cdot>(ae f|` (- S)) f|` (- S)", "unfolding Afix_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<mu> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae) f|` (- S) =\n    (\\<mu> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` (- S)) f|` (- S)", "proof (rule parallel_fix_ind[where P = \"\\<lambda> x y . x f|` (- S) = y  f|` (- S)\"], goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. adm (\\<lambda>x. fst x f|` (- S) = snd x f|` (- S))\n 2. \\<bottom> f|` (- S) = \\<bottom> f|` (- S)\n 3. \\<And>x y.\n       x f|` (- S) = y f|` (- S) \\<Longrightarrow>\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>x f|`\n       (- S) =\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` (- S))\\<cdot>\n       y f|`\n       (- S)", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. adm (\\<lambda>x. fst x f|` (- S) = snd x f|` (- S))\n 2. \\<bottom> f|` (- S) = \\<bottom> f|` (- S)\n 3. \\<And>x y.\n       x f|` (- S) = y f|` (- S) \\<Longrightarrow>\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>x f|`\n       (- S) =\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` (- S))\\<cdot>\n       y f|`\n       (- S)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. adm (\\<lambda>x. fst x f|` (- S) = snd x f|` (- S))", "by simp"], ["proof (state)\nthis:\n  adm (\\<lambda>x. fst x f|` (- S) = snd x f|` (- S))\n\ngoal (2 subgoals):\n 1. \\<bottom> f|` (- S) = \\<bottom> f|` (- S)\n 2. \\<And>x y.\n       x f|` (- S) = y f|` (- S) \\<Longrightarrow>\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>x f|`\n       (- S) =\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` (- S))\\<cdot>\n       y f|`\n       (- S)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<bottom> f|` (- S) = \\<bottom> f|` (- S)\n 2. \\<And>x y.\n       x f|` (- S) = y f|` (- S) \\<Longrightarrow>\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>x f|`\n       (- S) =\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` (- S))\\<cdot>\n       y f|`\n       (- S)", "case 2"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<bottom> f|` (- S) = \\<bottom> f|` (- S)\n 2. \\<And>x y.\n       x f|` (- S) = y f|` (- S) \\<Longrightarrow>\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>x f|`\n       (- S) =\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` (- S))\\<cdot>\n       y f|`\n       (- S)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bottom> f|` (- S) = \\<bottom> f|` (- S)", ".."], ["proof (state)\nthis:\n  \\<bottom> f|` (- S) = \\<bottom> f|` (- S)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x f|` (- S) = y f|` (- S) \\<Longrightarrow>\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>x f|`\n       (- S) =\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` (- S))\\<cdot>\n       y f|`\n       (- S)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x f|` (- S) = y f|` (- S) \\<Longrightarrow>\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>x f|`\n       (- S) =\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` (- S))\\<cdot>\n       y f|`\n       (- S)", "case prems: (3 aeL aeR)"], ["proof (state)\nthis:\n  aeL f|` (- S) = aeR f|` (- S)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x f|` (- S) = y f|` (- S) \\<Longrightarrow>\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>x f|`\n       (- S) =\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` (- S))\\<cdot>\n       y f|`\n       (- S)", "have \"(ABinds \\<Gamma>\\<cdot>aeL \\<squnion> ae) f|` (- S) = ABinds \\<Gamma>\\<cdot>aeL  f|` (- S) \\<squnion> ae  f|` (- S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ABinds \\<Gamma>\\<cdot>aeL \\<squnion> ae) f|` (- S) =\n    ABinds \\<Gamma>\\<cdot>aeL f|` (- S) \\<squnion> ae f|` (- S)", "by (simp add: env_restr_join)"], ["proof (state)\nthis:\n  (ABinds \\<Gamma>\\<cdot>aeL \\<squnion> ae) f|` (- S) =\n  ABinds \\<Gamma>\\<cdot>aeL f|` (- S) \\<squnion> ae f|` (- S)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x f|` (- S) = y f|` (- S) \\<Longrightarrow>\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>x f|`\n       (- S) =\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` (- S))\\<cdot>\n       y f|`\n       (- S)", "also"], ["proof (state)\nthis:\n  (ABinds \\<Gamma>\\<cdot>aeL \\<squnion> ae) f|` (- S) =\n  ABinds \\<Gamma>\\<cdot>aeL f|` (- S) \\<squnion> ae f|` (- S)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x f|` (- S) = y f|` (- S) \\<Longrightarrow>\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>x f|`\n       (- S) =\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` (- S))\\<cdot>\n       y f|`\n       (- S)", "have \"\\<dots> = ABinds \\<Gamma>\\<cdot>(aeL  f|` (- S)) f|` (- S) \\<squnion> ae  f|` (- S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds \\<Gamma>\\<cdot>aeL f|` (- S) \\<squnion> ae f|` (- S) =\n    ABinds \\<Gamma>\\<cdot>(aeL f|` (- S)) f|` (- S) \\<squnion> ae f|` (- S)", "by (rule arg_cong[OF ABinds_restr_fresh[OF assms]])"], ["proof (state)\nthis:\n  ABinds \\<Gamma>\\<cdot>aeL f|` (- S) \\<squnion> ae f|` (- S) =\n  ABinds \\<Gamma>\\<cdot>(aeL f|` (- S)) f|` (- S) \\<squnion> ae f|` (- S)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x f|` (- S) = y f|` (- S) \\<Longrightarrow>\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>x f|`\n       (- S) =\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` (- S))\\<cdot>\n       y f|`\n       (- S)", "also"], ["proof (state)\nthis:\n  ABinds \\<Gamma>\\<cdot>aeL f|` (- S) \\<squnion> ae f|` (- S) =\n  ABinds \\<Gamma>\\<cdot>(aeL f|` (- S)) f|` (- S) \\<squnion> ae f|` (- S)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x f|` (- S) = y f|` (- S) \\<Longrightarrow>\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>x f|`\n       (- S) =\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` (- S))\\<cdot>\n       y f|`\n       (- S)", "have \"\\<dots> = ABinds \\<Gamma>\\<cdot>(aeR  f|` (- S)) f|` (- S) \\<squnion> ae  f|` (- S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds \\<Gamma>\\<cdot>(aeL f|` (- S)) f|` (- S) \\<squnion>\n    ae f|` (- S) =\n    ABinds \\<Gamma>\\<cdot>(aeR f|` (- S)) f|` (- S) \\<squnion> ae f|` (- S)", "unfolding prems"], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds \\<Gamma>\\<cdot>(aeR f|` (- S)) f|` (- S) \\<squnion>\n    ae f|` (- S) =\n    ABinds \\<Gamma>\\<cdot>(aeR f|` (- S)) f|` (- S) \\<squnion> ae f|` (- S)", ".."], ["proof (state)\nthis:\n  ABinds \\<Gamma>\\<cdot>(aeL f|` (- S)) f|` (- S) \\<squnion> ae f|` (- S) =\n  ABinds \\<Gamma>\\<cdot>(aeR f|` (- S)) f|` (- S) \\<squnion> ae f|` (- S)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x f|` (- S) = y f|` (- S) \\<Longrightarrow>\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>x f|`\n       (- S) =\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` (- S))\\<cdot>\n       y f|`\n       (- S)", "also"], ["proof (state)\nthis:\n  ABinds \\<Gamma>\\<cdot>(aeL f|` (- S)) f|` (- S) \\<squnion> ae f|` (- S) =\n  ABinds \\<Gamma>\\<cdot>(aeR f|` (- S)) f|` (- S) \\<squnion> ae f|` (- S)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x f|` (- S) = y f|` (- S) \\<Longrightarrow>\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>x f|`\n       (- S) =\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` (- S))\\<cdot>\n       y f|`\n       (- S)", "have \"\\<dots> = ABinds \\<Gamma>\\<cdot>aeR f|` (- S) \\<squnion> ae  f|` (- S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds \\<Gamma>\\<cdot>(aeR f|` (- S)) f|` (- S) \\<squnion>\n    ae f|` (- S) =\n    ABinds \\<Gamma>\\<cdot>aeR f|` (- S) \\<squnion> ae f|` (- S)", "by (rule arg_cong[OF ABinds_restr_fresh[OF assms, symmetric]])"], ["proof (state)\nthis:\n  ABinds \\<Gamma>\\<cdot>(aeR f|` (- S)) f|` (- S) \\<squnion> ae f|` (- S) =\n  ABinds \\<Gamma>\\<cdot>aeR f|` (- S) \\<squnion> ae f|` (- S)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x f|` (- S) = y f|` (- S) \\<Longrightarrow>\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>x f|`\n       (- S) =\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` (- S))\\<cdot>\n       y f|`\n       (- S)", "also"], ["proof (state)\nthis:\n  ABinds \\<Gamma>\\<cdot>(aeR f|` (- S)) f|` (- S) \\<squnion> ae f|` (- S) =\n  ABinds \\<Gamma>\\<cdot>aeR f|` (- S) \\<squnion> ae f|` (- S)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x f|` (- S) = y f|` (- S) \\<Longrightarrow>\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>x f|`\n       (- S) =\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` (- S))\\<cdot>\n       y f|`\n       (- S)", "have \"\\<dots> = (ABinds \\<Gamma>\\<cdot>aeR \\<squnion> ae f|` (- S)) f|` (- S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds \\<Gamma>\\<cdot>aeR f|` (- S) \\<squnion> ae f|` (- S) =\n    (ABinds \\<Gamma>\\<cdot>aeR \\<squnion> ae f|` (- S)) f|` (- S)", "by (simp add: env_restr_join)"], ["proof (state)\nthis:\n  ABinds \\<Gamma>\\<cdot>aeR f|` (- S) \\<squnion> ae f|` (- S) =\n  (ABinds \\<Gamma>\\<cdot>aeR \\<squnion> ae f|` (- S)) f|` (- S)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x f|` (- S) = y f|` (- S) \\<Longrightarrow>\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>x f|`\n       (- S) =\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` (- S))\\<cdot>\n       y f|`\n       (- S)", "finally"], ["proof (chain)\npicking this:\n  (ABinds \\<Gamma>\\<cdot>aeL \\<squnion> ae) f|` (- S) =\n  (ABinds \\<Gamma>\\<cdot>aeR \\<squnion> ae f|` (- S)) f|` (- S)", "show ?case"], ["proof (prove)\nusing this:\n  (ABinds \\<Gamma>\\<cdot>aeL \\<squnion> ae) f|` (- S) =\n  (ABinds \\<Gamma>\\<cdot>aeR \\<squnion> ae f|` (- S)) f|` (- S)\n\ngoal (1 subgoal):\n 1. (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>aeL f|`\n    (- S) =\n    (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` (- S))\\<cdot>\n    aeR f|`\n    (- S)", "by simp"], ["proof (state)\nthis:\n  (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>aeL f|` (- S) =\n  (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` (- S))\\<cdot>\n  aeR f|`\n  (- S)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Afix_restr:\n  assumes \"domA \\<Gamma> \\<subseteq> S\"\n  shows \"Afix \\<Gamma>\\<cdot>ae f|` S = Afix \\<Gamma>\\<cdot>(ae  f|` S) f|` S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Afix \\<Gamma>\\<cdot>ae f|` S = Afix \\<Gamma>\\<cdot>(ae f|` S) f|` S", "unfolding Afix_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<mu> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae) f|` S =\n    (\\<mu> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` S) f|` S", "apply (rule parallel_fix_ind[where P = \"\\<lambda> x y . x f|`S = y  f|` S\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. adm (\\<lambda>x. fst x f|` S = snd x f|` S)\n 2. \\<bottom> f|` S = \\<bottom> f|` S\n 3. \\<And>x y.\n       x f|` S = y f|` S \\<Longrightarrow>\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>x f|` S =\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` S)\\<cdot>\n       y f|`\n       S", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<bottom> f|` S = \\<bottom> f|` S\n 2. \\<And>x y.\n       x f|` S = y f|` S \\<Longrightarrow>\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>x f|` S =\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` S)\\<cdot>\n       y f|`\n       S", "apply rule"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x f|` S = y f|` S \\<Longrightarrow>\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>x f|` S =\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` S)\\<cdot>\n       y f|`\n       S", "apply (auto   simp add: env_restr_join)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x f|` S = y f|` S \\<Longrightarrow>\n       ae f|` S \\<squnion> ABinds \\<Gamma>\\<cdot>x f|` S =\n       ae f|` S \\<squnion> ABinds \\<Gamma>\\<cdot>y f|` S", "apply (metis  ABinds_restr[OF assms, symmetric])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Afix_restr_subst':\n  assumes \"\\<And> x' e a. (x',e) \\<in> set \\<Gamma> \\<Longrightarrow> Aexp e[x::=y]\\<cdot>a f|` S = Aexp e\\<cdot>a f|` S\"\n  assumes \"x \\<notin> S\"\n  assumes \"y \\<notin> S\"\n  assumes \"domA \\<Gamma> \\<subseteq> S\"\n  shows \"Afix \\<Gamma>[x::h=y]\\<cdot>ae f|` S = Afix \\<Gamma>\\<cdot>(ae f|` S) f|` S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Afix \\<Gamma>[x::h=y]\\<cdot>ae f|` S =\n    Afix \\<Gamma>\\<cdot>(ae f|` S) f|` S", "unfolding Afix_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<mu> xa. ABinds \\<Gamma>[x::h=y]\\<cdot>xa \\<squnion> ae) f|` S =\n    (\\<mu> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` S) f|` S", "apply (rule parallel_fix_ind[where P = \"\\<lambda> x y . x f|`S = y  f|` S\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. adm (\\<lambda>x. fst x f|` S = snd x f|` S)\n 2. \\<bottom> f|` S = \\<bottom> f|` S\n 3. \\<And>xa ya.\n       xa f|` S = ya f|` S \\<Longrightarrow>\n       (\\<Lambda> xa. ABinds \\<Gamma>[x::h=y]\\<cdot>xa \\<squnion> ae)\\<cdot>\n       xa f|`\n       S =\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` S)\\<cdot>\n       ya f|`\n       S", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<bottom> f|` S = \\<bottom> f|` S\n 2. \\<And>xa ya.\n       xa f|` S = ya f|` S \\<Longrightarrow>\n       (\\<Lambda> xa. ABinds \\<Gamma>[x::h=y]\\<cdot>xa \\<squnion> ae)\\<cdot>\n       xa f|`\n       S =\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` S)\\<cdot>\n       ya f|`\n       S", "apply rule"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       xa f|` S = ya f|` S \\<Longrightarrow>\n       (\\<Lambda> xa. ABinds \\<Gamma>[x::h=y]\\<cdot>xa \\<squnion> ae)\\<cdot>\n       xa f|`\n       S =\n       (\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae f|` S)\\<cdot>\n       ya f|`\n       S", "apply (auto   simp add: env_restr_join)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       xa f|` S = ya f|` S \\<Longrightarrow>\n       ae f|` S \\<squnion> ABinds \\<Gamma>[x::h=y]\\<cdot>xa f|` S =\n       ae f|` S \\<squnion> ABinds \\<Gamma>\\<cdot>ya f|` S", "apply (subst ABinds_restr_subst[OF assms])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y x' e a.\n       \\<lbrakk>x f|` S = y f|` S; (x', e) \\<in> set \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> (?x'6 x y x' e a, e) \\<in> set \\<Gamma>\n 2. \\<And>x y.\n       x f|` S = y f|` S \\<Longrightarrow>\n       ae f|` S \\<squnion> ABinds \\<Gamma>\\<cdot>(x f|` S) f|` S =\n       ae f|` S \\<squnion> ABinds \\<Gamma>\\<cdot>y f|` S", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x f|` S = y f|` S \\<Longrightarrow>\n       ae f|` S \\<squnion> ABinds \\<Gamma>\\<cdot>(x f|` S) f|` S =\n       ae f|` S \\<squnion> ABinds \\<Gamma>\\<cdot>y f|` S", "apply (subst ABinds_restr[OF assms(4)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x f|` S = y f|` S \\<Longrightarrow>\n       ae f|` S \\<squnion> ABinds \\<Gamma>\\<cdot>(x f|` S f|` S) f|` S =\n       ae f|` S \\<squnion> ABinds \\<Gamma>\\<cdot>y f|` S", "back"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x f|` S = y f|` S \\<Longrightarrow>\n       ae f|` S \\<squnion> ABinds \\<Gamma>\\<cdot>(x f|` S) f|` S =\n       ae f|` S \\<squnion> ABinds \\<Gamma>\\<cdot>(y f|` S) f|` S", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Afix_subst_approx:\n  assumes \"\\<And> v n. v \\<in> domA \\<Gamma> \\<Longrightarrow> Aexp (the (map_of \\<Gamma> v))[y::=x]\\<cdot>n \\<sqsubseteq> (Aexp (the (map_of \\<Gamma> v))\\<cdot>n)(y := \\<bottom>, x := up\\<cdot>0)\"\n  assumes \"x \\<notin> domA \\<Gamma>\"\n  assumes \"y \\<notin> domA \\<Gamma>\"\n  shows \"Afix \\<Gamma>[y::h= x]\\<cdot>(ae(y := \\<bottom>, x := up\\<cdot>0)) \\<sqsubseteq> (Afix \\<Gamma>\\<cdot>ae)(y := \\<bottom>, x := up\\<cdot>0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Afix \\<Gamma>[y::h=x]\\<cdot>\n    (ae(y := \\<bottom>, x := up\\<cdot>0)) \\<sqsubseteq>\n    (Afix \\<Gamma>\\<cdot>ae)(y := \\<bottom>, x := up\\<cdot>0)", "unfolding Afix_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<mu> xa.\n        ABinds \\<Gamma>[y::h=x]\\<cdot>xa \\<squnion> ae\n        (y := \\<bottom>, x := up\\<cdot>0)) \\<sqsubseteq>\n    (\\<mu> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\n    (y := \\<bottom>, x := up\\<cdot>0)", "proof (rule parallel_fix_ind[where P = \"\\<lambda> aeL aeR . aeL \\<sqsubseteq> aeR(y := \\<bottom>, x := up\\<cdot>0)\"], goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. adm (\\<lambda>xa.\n            fst xa \\<sqsubseteq> (snd xa)(y := \\<bottom>, x := up\\<cdot>0))\n 2. \\<bottom> \\<sqsubseteq> \\<bottom>(y := \\<bottom>, x := up\\<cdot>0)\n 3. \\<And>xa ya.\n       xa \\<sqsubseteq> ya\n       (y := \\<bottom>, x := up\\<cdot>0) \\<Longrightarrow>\n       (\\<Lambda> xa.\n           ABinds \\<Gamma>[y::h=x]\\<cdot>xa \\<squnion> ae\n           (y := \\<bottom>, x := up\\<cdot>0))\\<cdot>\n       xa \\<sqsubseteq>\n       ((\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>ya)\n       (y := \\<bottom>, x := up\\<cdot>0)", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. adm (\\<lambda>xa.\n            fst xa \\<sqsubseteq> (snd xa)(y := \\<bottom>, x := up\\<cdot>0))\n 2. \\<bottom> \\<sqsubseteq> \\<bottom>(y := \\<bottom>, x := up\\<cdot>0)\n 3. \\<And>xa ya.\n       xa \\<sqsubseteq> ya\n       (y := \\<bottom>, x := up\\<cdot>0) \\<Longrightarrow>\n       (\\<Lambda> xa.\n           ABinds \\<Gamma>[y::h=x]\\<cdot>xa \\<squnion> ae\n           (y := \\<bottom>, x := up\\<cdot>0))\\<cdot>\n       xa \\<sqsubseteq>\n       ((\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>ya)\n       (y := \\<bottom>, x := up\\<cdot>0)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. adm (\\<lambda>xa.\n            fst xa \\<sqsubseteq> (snd xa)(y := \\<bottom>, x := up\\<cdot>0))", "by simp"], ["proof (state)\nthis:\n  adm (\\<lambda>xa.\n          fst xa \\<sqsubseteq> (snd xa)(y := \\<bottom>, x := up\\<cdot>0))\n\ngoal (2 subgoals):\n 1. \\<bottom> \\<sqsubseteq> \\<bottom>(y := \\<bottom>, x := up\\<cdot>0)\n 2. \\<And>xa ya.\n       xa \\<sqsubseteq> ya\n       (y := \\<bottom>, x := up\\<cdot>0) \\<Longrightarrow>\n       (\\<Lambda> xa.\n           ABinds \\<Gamma>[y::h=x]\\<cdot>xa \\<squnion> ae\n           (y := \\<bottom>, x := up\\<cdot>0))\\<cdot>\n       xa \\<sqsubseteq>\n       ((\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>ya)\n       (y := \\<bottom>, x := up\\<cdot>0)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<bottom> \\<sqsubseteq> \\<bottom>(y := \\<bottom>, x := up\\<cdot>0)\n 2. \\<And>xa ya.\n       xa \\<sqsubseteq> ya\n       (y := \\<bottom>, x := up\\<cdot>0) \\<Longrightarrow>\n       (\\<Lambda> xa.\n           ABinds \\<Gamma>[y::h=x]\\<cdot>xa \\<squnion> ae\n           (y := \\<bottom>, x := up\\<cdot>0))\\<cdot>\n       xa \\<sqsubseteq>\n       ((\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>ya)\n       (y := \\<bottom>, x := up\\<cdot>0)", "case 2"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<bottom> \\<sqsubseteq> \\<bottom>(y := \\<bottom>, x := up\\<cdot>0)\n 2. \\<And>xa ya.\n       xa \\<sqsubseteq> ya\n       (y := \\<bottom>, x := up\\<cdot>0) \\<Longrightarrow>\n       (\\<Lambda> xa.\n           ABinds \\<Gamma>[y::h=x]\\<cdot>xa \\<squnion> ae\n           (y := \\<bottom>, x := up\\<cdot>0))\\<cdot>\n       xa \\<sqsubseteq>\n       ((\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>ya)\n       (y := \\<bottom>, x := up\\<cdot>0)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bottom> \\<sqsubseteq> \\<bottom>(y := \\<bottom>, x := up\\<cdot>0)", ".."], ["proof (state)\nthis:\n  \\<bottom> \\<sqsubseteq> \\<bottom>(y := \\<bottom>, x := up\\<cdot>0)\n\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       xa \\<sqsubseteq> ya\n       (y := \\<bottom>, x := up\\<cdot>0) \\<Longrightarrow>\n       (\\<Lambda> xa.\n           ABinds \\<Gamma>[y::h=x]\\<cdot>xa \\<squnion> ae\n           (y := \\<bottom>, x := up\\<cdot>0))\\<cdot>\n       xa \\<sqsubseteq>\n       ((\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>ya)\n       (y := \\<bottom>, x := up\\<cdot>0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       xa \\<sqsubseteq> ya\n       (y := \\<bottom>, x := up\\<cdot>0) \\<Longrightarrow>\n       (\\<Lambda> xa.\n           ABinds \\<Gamma>[y::h=x]\\<cdot>xa \\<squnion> ae\n           (y := \\<bottom>, x := up\\<cdot>0))\\<cdot>\n       xa \\<sqsubseteq>\n       ((\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>ya)\n       (y := \\<bottom>, x := up\\<cdot>0)", "case (3 aeL aeR)"], ["proof (state)\nthis:\n  aeL \\<sqsubseteq> aeR(y := \\<bottom>, x := up\\<cdot>0)\n\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       xa \\<sqsubseteq> ya\n       (y := \\<bottom>, x := up\\<cdot>0) \\<Longrightarrow>\n       (\\<Lambda> xa.\n           ABinds \\<Gamma>[y::h=x]\\<cdot>xa \\<squnion> ae\n           (y := \\<bottom>, x := up\\<cdot>0))\\<cdot>\n       xa \\<sqsubseteq>\n       ((\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>ya)\n       (y := \\<bottom>, x := up\\<cdot>0)", "hence \"ABinds \\<Gamma>[y::h=x]\\<cdot>aeL \\<sqsubseteq> ABinds \\<Gamma>[y::h=x]\\<cdot>(aeR (y := \\<bottom>, x := up\\<cdot>0))\""], ["proof (prove)\nusing this:\n  aeL \\<sqsubseteq> aeR(y := \\<bottom>, x := up\\<cdot>0)\n\ngoal (1 subgoal):\n 1. ABinds \\<Gamma>[y::h=x]\\<cdot>aeL \\<sqsubseteq>\n    ABinds \\<Gamma>[y::h=x]\\<cdot>(aeR(y := \\<bottom>, x := up\\<cdot>0))", "by (rule monofun_cfun_arg)"], ["proof (state)\nthis:\n  ABinds \\<Gamma>[y::h=x]\\<cdot>aeL \\<sqsubseteq>\n  ABinds \\<Gamma>[y::h=x]\\<cdot>(aeR(y := \\<bottom>, x := up\\<cdot>0))\n\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       xa \\<sqsubseteq> ya\n       (y := \\<bottom>, x := up\\<cdot>0) \\<Longrightarrow>\n       (\\<Lambda> xa.\n           ABinds \\<Gamma>[y::h=x]\\<cdot>xa \\<squnion> ae\n           (y := \\<bottom>, x := up\\<cdot>0))\\<cdot>\n       xa \\<sqsubseteq>\n       ((\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>ya)\n       (y := \\<bottom>, x := up\\<cdot>0)", "also"], ["proof (state)\nthis:\n  ABinds \\<Gamma>[y::h=x]\\<cdot>aeL \\<sqsubseteq>\n  ABinds \\<Gamma>[y::h=x]\\<cdot>(aeR(y := \\<bottom>, x := up\\<cdot>0))\n\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       xa \\<sqsubseteq> ya\n       (y := \\<bottom>, x := up\\<cdot>0) \\<Longrightarrow>\n       (\\<Lambda> xa.\n           ABinds \\<Gamma>[y::h=x]\\<cdot>xa \\<squnion> ae\n           (y := \\<bottom>, x := up\\<cdot>0))\\<cdot>\n       xa \\<sqsubseteq>\n       ((\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>ya)\n       (y := \\<bottom>, x := up\\<cdot>0)", "have \"\\<dots>  \\<sqsubseteq> (ABinds \\<Gamma>\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds \\<Gamma>[y::h=x]\\<cdot>\n    (aeR(y := \\<bottom>, x := up\\<cdot>0)) \\<sqsubseteq>\n    (ABinds \\<Gamma>\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)", "using assms"], ["proof (prove)\nusing this:\n  ?v \\<in> domA \\<Gamma> \\<Longrightarrow>\n  \\<A>\\<^bsub>?n\\<^esub> (the (map_of \\<Gamma> ?v))[y::=x] \\<sqsubseteq>\n  (\\<A>\\<^bsub>?n\\<^esub> (the (map_of \\<Gamma> ?v)))\n  (y := \\<bottom>, x := up\\<cdot>0)\n  x \\<notin> domA \\<Gamma>\n  y \\<notin> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. ABinds \\<Gamma>[y::h=x]\\<cdot>\n    (aeR(y := \\<bottom>, x := up\\<cdot>0)) \\<sqsubseteq>\n    (ABinds \\<Gamma>\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)", "proof (induction rule: ABinds.induct, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>v n.\n                v \\<in> domA [] \\<Longrightarrow>\n                \\<A>\\<^bsub>n\\<^esub>\n                 (the (map_of [] v))[y::=x] \\<sqsubseteq>\n                (\\<A>\\<^bsub>n\\<^esub> (the (map_of [] v)))\n                (y := \\<bottom>, x := up\\<cdot>0);\n     x \\<notin> domA []; y \\<notin> domA []\\<rbrakk>\n    \\<Longrightarrow> ABinds [][y::h=x]\\<cdot>\n                      (aeR(y := \\<bottom>, x := up\\<cdot>0)) \\<sqsubseteq>\n                      (ABinds []\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)\n 2. \\<And>v e binds.\n       \\<lbrakk>\\<lbrakk>\\<And>va n.\n                            va \\<in> domA (delete v binds) \\<Longrightarrow>\n                            \\<A>\\<^bsub>n\\<^esub>\n                             (the (map_of (delete v binds)\n                                    va))[y::=x] \\<sqsubseteq>\n                            (\\<A>\\<^bsub>n\\<^esub>\n                              (the (map_of (delete v binds) va)))\n                            (y := \\<bottom>, x := up\\<cdot>0);\n                 x \\<notin> domA (delete v binds);\n                 y \\<notin> domA (delete v binds)\\<rbrakk>\n                \\<Longrightarrow> ABinds (delete v binds)[y::h=x]\\<cdot>\n                                  (aeR(y := \\<bottom>,\n x := up\\<cdot>0)) \\<sqsubseteq>\n                                  (ABinds (delete v binds)\\<cdot>aeR)\n                                  (y := \\<bottom>, x := up\\<cdot>0);\n        \\<And>va n.\n           va \\<in> domA ((v, e) # binds) \\<Longrightarrow>\n           \\<A>\\<^bsub>n\\<^esub>\n            (the (map_of ((v, e) # binds) va))[y::=x] \\<sqsubseteq>\n           (\\<A>\\<^bsub>n\\<^esub> (the (map_of ((v, e) # binds) va)))\n           (y := \\<bottom>, x := up\\<cdot>0);\n        x \\<notin> domA ((v, e) # binds);\n        y \\<notin> domA ((v, e) # binds)\\<rbrakk>\n       \\<Longrightarrow> ABinds ((v, e) # binds)[y::h=x]\\<cdot>\n                         (aeR(y := \\<bottom>,\n                              x := up\\<cdot>0)) \\<sqsubseteq>\n                         (ABinds ((v, e) # binds)\\<cdot>aeR)\n                         (y := \\<bottom>, x := up\\<cdot>0)", "case 1"], ["proof (state)\nthis:\n  ?v \\<in> domA [] \\<Longrightarrow>\n  \\<A>\\<^bsub>?n\\<^esub> (the (map_of [] ?v))[y::=x] \\<sqsubseteq>\n  (\\<A>\\<^bsub>?n\\<^esub> (the (map_of [] ?v)))\n  (y := \\<bottom>, x := up\\<cdot>0)\n  x \\<notin> domA []\n  y \\<notin> domA []\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>v n.\n                v \\<in> domA [] \\<Longrightarrow>\n                \\<A>\\<^bsub>n\\<^esub>\n                 (the (map_of [] v))[y::=x] \\<sqsubseteq>\n                (\\<A>\\<^bsub>n\\<^esub> (the (map_of [] v)))\n                (y := \\<bottom>, x := up\\<cdot>0);\n     x \\<notin> domA []; y \\<notin> domA []\\<rbrakk>\n    \\<Longrightarrow> ABinds [][y::h=x]\\<cdot>\n                      (aeR(y := \\<bottom>, x := up\\<cdot>0)) \\<sqsubseteq>\n                      (ABinds []\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)\n 2. \\<And>v e binds.\n       \\<lbrakk>\\<lbrakk>\\<And>va n.\n                            va \\<in> domA (delete v binds) \\<Longrightarrow>\n                            \\<A>\\<^bsub>n\\<^esub>\n                             (the (map_of (delete v binds)\n                                    va))[y::=x] \\<sqsubseteq>\n                            (\\<A>\\<^bsub>n\\<^esub>\n                              (the (map_of (delete v binds) va)))\n                            (y := \\<bottom>, x := up\\<cdot>0);\n                 x \\<notin> domA (delete v binds);\n                 y \\<notin> domA (delete v binds)\\<rbrakk>\n                \\<Longrightarrow> ABinds (delete v binds)[y::h=x]\\<cdot>\n                                  (aeR(y := \\<bottom>,\n x := up\\<cdot>0)) \\<sqsubseteq>\n                                  (ABinds (delete v binds)\\<cdot>aeR)\n                                  (y := \\<bottom>, x := up\\<cdot>0);\n        \\<And>va n.\n           va \\<in> domA ((v, e) # binds) \\<Longrightarrow>\n           \\<A>\\<^bsub>n\\<^esub>\n            (the (map_of ((v, e) # binds) va))[y::=x] \\<sqsubseteq>\n           (\\<A>\\<^bsub>n\\<^esub> (the (map_of ((v, e) # binds) va)))\n           (y := \\<bottom>, x := up\\<cdot>0);\n        x \\<notin> domA ((v, e) # binds);\n        y \\<notin> domA ((v, e) # binds)\\<rbrakk>\n       \\<Longrightarrow> ABinds ((v, e) # binds)[y::h=x]\\<cdot>\n                         (aeR(y := \\<bottom>,\n                              x := up\\<cdot>0)) \\<sqsubseteq>\n                         (ABinds ((v, e) # binds)\\<cdot>aeR)\n                         (y := \\<bottom>, x := up\\<cdot>0)", "thus ?case"], ["proof (prove)\nusing this:\n  ?v \\<in> domA [] \\<Longrightarrow>\n  \\<A>\\<^bsub>?n\\<^esub> (the (map_of [] ?v))[y::=x] \\<sqsubseteq>\n  (\\<A>\\<^bsub>?n\\<^esub> (the (map_of [] ?v)))\n  (y := \\<bottom>, x := up\\<cdot>0)\n  x \\<notin> domA []\n  y \\<notin> domA []\n\ngoal (1 subgoal):\n 1. ABinds [][y::h=x]\\<cdot>\n    (aeR(y := \\<bottom>, x := up\\<cdot>0)) \\<sqsubseteq>\n    (ABinds []\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)", "by simp"], ["proof (state)\nthis:\n  ABinds [][y::h=x]\\<cdot>\n  (aeR(y := \\<bottom>, x := up\\<cdot>0)) \\<sqsubseteq>\n  (ABinds []\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)\n\ngoal (1 subgoal):\n 1. \\<And>v e binds.\n       \\<lbrakk>\\<lbrakk>\\<And>va n.\n                            va \\<in> domA (delete v binds) \\<Longrightarrow>\n                            \\<A>\\<^bsub>n\\<^esub>\n                             (the (map_of (delete v binds)\n                                    va))[y::=x] \\<sqsubseteq>\n                            (\\<A>\\<^bsub>n\\<^esub>\n                              (the (map_of (delete v binds) va)))\n                            (y := \\<bottom>, x := up\\<cdot>0);\n                 x \\<notin> domA (delete v binds);\n                 y \\<notin> domA (delete v binds)\\<rbrakk>\n                \\<Longrightarrow> ABinds (delete v binds)[y::h=x]\\<cdot>\n                                  (aeR(y := \\<bottom>,\n x := up\\<cdot>0)) \\<sqsubseteq>\n                                  (ABinds (delete v binds)\\<cdot>aeR)\n                                  (y := \\<bottom>, x := up\\<cdot>0);\n        \\<And>va n.\n           va \\<in> domA ((v, e) # binds) \\<Longrightarrow>\n           \\<A>\\<^bsub>n\\<^esub>\n            (the (map_of ((v, e) # binds) va))[y::=x] \\<sqsubseteq>\n           (\\<A>\\<^bsub>n\\<^esub> (the (map_of ((v, e) # binds) va)))\n           (y := \\<bottom>, x := up\\<cdot>0);\n        x \\<notin> domA ((v, e) # binds);\n        y \\<notin> domA ((v, e) # binds)\\<rbrakk>\n       \\<Longrightarrow> ABinds ((v, e) # binds)[y::h=x]\\<cdot>\n                         (aeR(y := \\<bottom>,\n                              x := up\\<cdot>0)) \\<sqsubseteq>\n                         (ABinds ((v, e) # binds)\\<cdot>aeR)\n                         (y := \\<bottom>, x := up\\<cdot>0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v e binds.\n       \\<lbrakk>\\<lbrakk>\\<And>va n.\n                            va \\<in> domA (delete v binds) \\<Longrightarrow>\n                            \\<A>\\<^bsub>n\\<^esub>\n                             (the (map_of (delete v binds)\n                                    va))[y::=x] \\<sqsubseteq>\n                            (\\<A>\\<^bsub>n\\<^esub>\n                              (the (map_of (delete v binds) va)))\n                            (y := \\<bottom>, x := up\\<cdot>0);\n                 x \\<notin> domA (delete v binds);\n                 y \\<notin> domA (delete v binds)\\<rbrakk>\n                \\<Longrightarrow> ABinds (delete v binds)[y::h=x]\\<cdot>\n                                  (aeR(y := \\<bottom>,\n x := up\\<cdot>0)) \\<sqsubseteq>\n                                  (ABinds (delete v binds)\\<cdot>aeR)\n                                  (y := \\<bottom>, x := up\\<cdot>0);\n        \\<And>va n.\n           va \\<in> domA ((v, e) # binds) \\<Longrightarrow>\n           \\<A>\\<^bsub>n\\<^esub>\n            (the (map_of ((v, e) # binds) va))[y::=x] \\<sqsubseteq>\n           (\\<A>\\<^bsub>n\\<^esub> (the (map_of ((v, e) # binds) va)))\n           (y := \\<bottom>, x := up\\<cdot>0);\n        x \\<notin> domA ((v, e) # binds);\n        y \\<notin> domA ((v, e) # binds)\\<rbrakk>\n       \\<Longrightarrow> ABinds ((v, e) # binds)[y::h=x]\\<cdot>\n                         (aeR(y := \\<bottom>,\n                              x := up\\<cdot>0)) \\<sqsubseteq>\n                         (ABinds ((v, e) # binds)\\<cdot>aeR)\n                         (y := \\<bottom>, x := up\\<cdot>0)", "case prems: (2 v e \\<Gamma>)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>va n.\n              va \\<in> domA (delete v \\<Gamma>) \\<Longrightarrow>\n              \\<A>\\<^bsub>n\\<^esub>\n               (the (map_of (delete v \\<Gamma>) va))[y::=x] \\<sqsubseteq>\n              (\\<A>\\<^bsub>n\\<^esub> (the (map_of (delete v \\<Gamma>) va)))\n              (y := \\<bottom>, x := up\\<cdot>0);\n   x \\<notin> domA (delete v \\<Gamma>);\n   y \\<notin> domA (delete v \\<Gamma>)\\<rbrakk>\n  \\<Longrightarrow> ABinds (delete v \\<Gamma>)[y::h=x]\\<cdot>\n                    (aeR(y := \\<bottom>, x := up\\<cdot>0)) \\<sqsubseteq>\n                    (ABinds (delete v \\<Gamma>)\\<cdot>aeR)\n                    (y := \\<bottom>, x := up\\<cdot>0)\n  ?v \\<in> domA ((v, e) # \\<Gamma>) \\<Longrightarrow>\n  \\<A>\\<^bsub>?n\\<^esub>\n   (the (map_of ((v, e) # \\<Gamma>) ?v))[y::=x] \\<sqsubseteq>\n  (\\<A>\\<^bsub>?n\\<^esub> (the (map_of ((v, e) # \\<Gamma>) ?v)))\n  (y := \\<bottom>, x := up\\<cdot>0)\n  x \\<notin> domA ((v, e) # \\<Gamma>)\n  y \\<notin> domA ((v, e) # \\<Gamma>)\n\ngoal (1 subgoal):\n 1. \\<And>v e binds.\n       \\<lbrakk>\\<lbrakk>\\<And>va n.\n                            va \\<in> domA (delete v binds) \\<Longrightarrow>\n                            \\<A>\\<^bsub>n\\<^esub>\n                             (the (map_of (delete v binds)\n                                    va))[y::=x] \\<sqsubseteq>\n                            (\\<A>\\<^bsub>n\\<^esub>\n                              (the (map_of (delete v binds) va)))\n                            (y := \\<bottom>, x := up\\<cdot>0);\n                 x \\<notin> domA (delete v binds);\n                 y \\<notin> domA (delete v binds)\\<rbrakk>\n                \\<Longrightarrow> ABinds (delete v binds)[y::h=x]\\<cdot>\n                                  (aeR(y := \\<bottom>,\n x := up\\<cdot>0)) \\<sqsubseteq>\n                                  (ABinds (delete v binds)\\<cdot>aeR)\n                                  (y := \\<bottom>, x := up\\<cdot>0);\n        \\<And>va n.\n           va \\<in> domA ((v, e) # binds) \\<Longrightarrow>\n           \\<A>\\<^bsub>n\\<^esub>\n            (the (map_of ((v, e) # binds) va))[y::=x] \\<sqsubseteq>\n           (\\<A>\\<^bsub>n\\<^esub> (the (map_of ((v, e) # binds) va)))\n           (y := \\<bottom>, x := up\\<cdot>0);\n        x \\<notin> domA ((v, e) # binds);\n        y \\<notin> domA ((v, e) # binds)\\<rbrakk>\n       \\<Longrightarrow> ABinds ((v, e) # binds)[y::h=x]\\<cdot>\n                         (aeR(y := \\<bottom>,\n                              x := up\\<cdot>0)) \\<sqsubseteq>\n                         (ABinds ((v, e) # binds)\\<cdot>aeR)\n                         (y := \\<bottom>, x := up\\<cdot>0)", "have \"\\<And>n. Aexp e[y::=x]\\<cdot>n \\<sqsubseteq> (Aexp e\\<cdot>n)(y := \\<bottom>, x := up\\<cdot>0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<A>\\<^bsub>n\\<^esub> e[y::=x] \\<sqsubseteq>\n       (\\<A>\\<^bsub>n\\<^esub> e)(y := \\<bottom>, x := up\\<cdot>0)", "using prems(2)[where v = v]"], ["proof (prove)\nusing this:\n  v \\<in> domA ((v, e) # \\<Gamma>) \\<Longrightarrow>\n  \\<A>\\<^bsub>?n\\<^esub>\n   (the (map_of ((v, e) # \\<Gamma>) v))[y::=x] \\<sqsubseteq>\n  (\\<A>\\<^bsub>?n\\<^esub> (the (map_of ((v, e) # \\<Gamma>) v)))\n  (y := \\<bottom>, x := up\\<cdot>0)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<A>\\<^bsub>n\\<^esub> e[y::=x] \\<sqsubseteq>\n       (\\<A>\\<^bsub>n\\<^esub> e)(y := \\<bottom>, x := up\\<cdot>0)", "by auto"], ["proof (state)\nthis:\n  \\<A>\\<^bsub>?n\\<^esub> e[y::=x] \\<sqsubseteq> (\\<A>\\<^bsub>?n\\<^esub> e)\n  (y := \\<bottom>, x := up\\<cdot>0)\n\ngoal (1 subgoal):\n 1. \\<And>v e binds.\n       \\<lbrakk>\\<lbrakk>\\<And>va n.\n                            va \\<in> domA (delete v binds) \\<Longrightarrow>\n                            \\<A>\\<^bsub>n\\<^esub>\n                             (the (map_of (delete v binds)\n                                    va))[y::=x] \\<sqsubseteq>\n                            (\\<A>\\<^bsub>n\\<^esub>\n                              (the (map_of (delete v binds) va)))\n                            (y := \\<bottom>, x := up\\<cdot>0);\n                 x \\<notin> domA (delete v binds);\n                 y \\<notin> domA (delete v binds)\\<rbrakk>\n                \\<Longrightarrow> ABinds (delete v binds)[y::h=x]\\<cdot>\n                                  (aeR(y := \\<bottom>,\n x := up\\<cdot>0)) \\<sqsubseteq>\n                                  (ABinds (delete v binds)\\<cdot>aeR)\n                                  (y := \\<bottom>, x := up\\<cdot>0);\n        \\<And>va n.\n           va \\<in> domA ((v, e) # binds) \\<Longrightarrow>\n           \\<A>\\<^bsub>n\\<^esub>\n            (the (map_of ((v, e) # binds) va))[y::=x] \\<sqsubseteq>\n           (\\<A>\\<^bsub>n\\<^esub> (the (map_of ((v, e) # binds) va)))\n           (y := \\<bottom>, x := up\\<cdot>0);\n        x \\<notin> domA ((v, e) # binds);\n        y \\<notin> domA ((v, e) # binds)\\<rbrakk>\n       \\<Longrightarrow> ABinds ((v, e) # binds)[y::h=x]\\<cdot>\n                         (aeR(y := \\<bottom>,\n                              x := up\\<cdot>0)) \\<sqsubseteq>\n                         (ABinds ((v, e) # binds)\\<cdot>aeR)\n                         (y := \\<bottom>, x := up\\<cdot>0)", "hence IH1: \"\\<And> n. fup\\<cdot>(Aexp e[y::=x])\\<cdot>n \\<sqsubseteq> (fup\\<cdot>(Aexp e)\\<cdot>n)(y := \\<bottom>, x := up\\<cdot>0)\""], ["proof (prove)\nusing this:\n  \\<A>\\<^bsub>?n\\<^esub> e[y::=x] \\<sqsubseteq> (\\<A>\\<^bsub>?n\\<^esub> e)\n  (y := \\<bottom>, x := up\\<cdot>0)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<A>\\<^sup>\\<bottom>\\<^bsub>n\\<^esub> e[y::=x] \\<sqsubseteq>\n       (\\<A>\\<^sup>\\<bottom>\\<^bsub>n\\<^esub> e)\n       (y := \\<bottom>, x := up\\<cdot>0)", "by (case_tac n) auto"], ["proof (state)\nthis:\n  \\<A>\\<^sup>\\<bottom>\\<^bsub>?n\\<^esub> e[y::=x] \\<sqsubseteq>\n  (\\<A>\\<^sup>\\<bottom>\\<^bsub>?n\\<^esub> e)\n  (y := \\<bottom>, x := up\\<cdot>0)\n\ngoal (1 subgoal):\n 1. \\<And>v e binds.\n       \\<lbrakk>\\<lbrakk>\\<And>va n.\n                            va \\<in> domA (delete v binds) \\<Longrightarrow>\n                            \\<A>\\<^bsub>n\\<^esub>\n                             (the (map_of (delete v binds)\n                                    va))[y::=x] \\<sqsubseteq>\n                            (\\<A>\\<^bsub>n\\<^esub>\n                              (the (map_of (delete v binds) va)))\n                            (y := \\<bottom>, x := up\\<cdot>0);\n                 x \\<notin> domA (delete v binds);\n                 y \\<notin> domA (delete v binds)\\<rbrakk>\n                \\<Longrightarrow> ABinds (delete v binds)[y::h=x]\\<cdot>\n                                  (aeR(y := \\<bottom>,\n x := up\\<cdot>0)) \\<sqsubseteq>\n                                  (ABinds (delete v binds)\\<cdot>aeR)\n                                  (y := \\<bottom>, x := up\\<cdot>0);\n        \\<And>va n.\n           va \\<in> domA ((v, e) # binds) \\<Longrightarrow>\n           \\<A>\\<^bsub>n\\<^esub>\n            (the (map_of ((v, e) # binds) va))[y::=x] \\<sqsubseteq>\n           (\\<A>\\<^bsub>n\\<^esub> (the (map_of ((v, e) # binds) va)))\n           (y := \\<bottom>, x := up\\<cdot>0);\n        x \\<notin> domA ((v, e) # binds);\n        y \\<notin> domA ((v, e) # binds)\\<rbrakk>\n       \\<Longrightarrow> ABinds ((v, e) # binds)[y::h=x]\\<cdot>\n                         (aeR(y := \\<bottom>,\n                              x := up\\<cdot>0)) \\<sqsubseteq>\n                         (ABinds ((v, e) # binds)\\<cdot>aeR)\n                         (y := \\<bottom>, x := up\\<cdot>0)", "have \"ABinds (delete v \\<Gamma>)[y::h=x]\\<cdot>(aeR(y := \\<bottom>, x := up\\<cdot>0)) \\<sqsubseteq> (ABinds (delete v \\<Gamma>)\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds (delete v \\<Gamma>)[y::h=x]\\<cdot>\n    (aeR(y := \\<bottom>, x := up\\<cdot>0)) \\<sqsubseteq>\n    (ABinds (delete v \\<Gamma>)\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)", "apply (rule prems)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>va n.\n       va \\<in> domA (delete v \\<Gamma>) \\<Longrightarrow>\n       \\<A>\\<^bsub>n\\<^esub>\n        (the (map_of (delete v \\<Gamma>) va))[y::=x] \\<sqsubseteq>\n       (\\<A>\\<^bsub>n\\<^esub> (the (map_of (delete v \\<Gamma>) va)))\n       (y := \\<bottom>, x := up\\<cdot>0)\n 2. x \\<notin> domA (delete v \\<Gamma>)\n 3. y \\<notin> domA (delete v \\<Gamma>)", "using prems(2,3,4)"], ["proof (prove)\nusing this:\n  ?v \\<in> domA ((v, e) # \\<Gamma>) \\<Longrightarrow>\n  \\<A>\\<^bsub>?n\\<^esub>\n   (the (map_of ((v, e) # \\<Gamma>) ?v))[y::=x] \\<sqsubseteq>\n  (\\<A>\\<^bsub>?n\\<^esub> (the (map_of ((v, e) # \\<Gamma>) ?v)))\n  (y := \\<bottom>, x := up\\<cdot>0)\n  x \\<notin> domA ((v, e) # \\<Gamma>)\n  y \\<notin> domA ((v, e) # \\<Gamma>)\n\ngoal (3 subgoals):\n 1. \\<And>va n.\n       va \\<in> domA (delete v \\<Gamma>) \\<Longrightarrow>\n       \\<A>\\<^bsub>n\\<^esub>\n        (the (map_of (delete v \\<Gamma>) va))[y::=x] \\<sqsubseteq>\n       (\\<A>\\<^bsub>n\\<^esub> (the (map_of (delete v \\<Gamma>) va)))\n       (y := \\<bottom>, x := up\\<cdot>0)\n 2. x \\<notin> domA (delete v \\<Gamma>)\n 3. y \\<notin> domA (delete v \\<Gamma>)", "by fastforce+"], ["proof (state)\nthis:\n  ABinds (delete v \\<Gamma>)[y::h=x]\\<cdot>\n  (aeR(y := \\<bottom>, x := up\\<cdot>0)) \\<sqsubseteq>\n  (ABinds (delete v \\<Gamma>)\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)\n\ngoal (1 subgoal):\n 1. \\<And>v e binds.\n       \\<lbrakk>\\<lbrakk>\\<And>va n.\n                            va \\<in> domA (delete v binds) \\<Longrightarrow>\n                            \\<A>\\<^bsub>n\\<^esub>\n                             (the (map_of (delete v binds)\n                                    va))[y::=x] \\<sqsubseteq>\n                            (\\<A>\\<^bsub>n\\<^esub>\n                              (the (map_of (delete v binds) va)))\n                            (y := \\<bottom>, x := up\\<cdot>0);\n                 x \\<notin> domA (delete v binds);\n                 y \\<notin> domA (delete v binds)\\<rbrakk>\n                \\<Longrightarrow> ABinds (delete v binds)[y::h=x]\\<cdot>\n                                  (aeR(y := \\<bottom>,\n x := up\\<cdot>0)) \\<sqsubseteq>\n                                  (ABinds (delete v binds)\\<cdot>aeR)\n                                  (y := \\<bottom>, x := up\\<cdot>0);\n        \\<And>va n.\n           va \\<in> domA ((v, e) # binds) \\<Longrightarrow>\n           \\<A>\\<^bsub>n\\<^esub>\n            (the (map_of ((v, e) # binds) va))[y::=x] \\<sqsubseteq>\n           (\\<A>\\<^bsub>n\\<^esub> (the (map_of ((v, e) # binds) va)))\n           (y := \\<bottom>, x := up\\<cdot>0);\n        x \\<notin> domA ((v, e) # binds);\n        y \\<notin> domA ((v, e) # binds)\\<rbrakk>\n       \\<Longrightarrow> ABinds ((v, e) # binds)[y::h=x]\\<cdot>\n                         (aeR(y := \\<bottom>,\n                              x := up\\<cdot>0)) \\<sqsubseteq>\n                         (ABinds ((v, e) # binds)\\<cdot>aeR)\n                         (y := \\<bottom>, x := up\\<cdot>0)", "hence IH2: \"ABinds (delete v \\<Gamma>[y::h=x])\\<cdot>(aeR(y := \\<bottom>, x := up\\<cdot>0)) \\<sqsubseteq> (ABinds (delete v \\<Gamma>)\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)\""], ["proof (prove)\nusing this:\n  ABinds (delete v \\<Gamma>)[y::h=x]\\<cdot>\n  (aeR(y := \\<bottom>, x := up\\<cdot>0)) \\<sqsubseteq>\n  (ABinds (delete v \\<Gamma>)\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)\n\ngoal (1 subgoal):\n 1. ABinds (delete v \\<Gamma>[y::h=x])\\<cdot>\n    (aeR(y := \\<bottom>, x := up\\<cdot>0)) \\<sqsubseteq>\n    (ABinds (delete v \\<Gamma>)\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)", "unfolding subst_heap_delete"], ["proof (prove)\nusing this:\n  ABinds (delete v \\<Gamma>[y::h=x])\\<cdot>\n  (aeR(y := \\<bottom>, x := up\\<cdot>0)) \\<sqsubseteq>\n  (ABinds (delete v \\<Gamma>)\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)\n\ngoal (1 subgoal):\n 1. ABinds (delete v \\<Gamma>[y::h=x])\\<cdot>\n    (aeR(y := \\<bottom>, x := up\\<cdot>0)) \\<sqsubseteq>\n    (ABinds (delete v \\<Gamma>)\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)", "."], ["proof (state)\nthis:\n  ABinds (delete v \\<Gamma>[y::h=x])\\<cdot>\n  (aeR(y := \\<bottom>, x := up\\<cdot>0)) \\<sqsubseteq>\n  (ABinds (delete v \\<Gamma>)\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)\n\ngoal (1 subgoal):\n 1. \\<And>v e binds.\n       \\<lbrakk>\\<lbrakk>\\<And>va n.\n                            va \\<in> domA (delete v binds) \\<Longrightarrow>\n                            \\<A>\\<^bsub>n\\<^esub>\n                             (the (map_of (delete v binds)\n                                    va))[y::=x] \\<sqsubseteq>\n                            (\\<A>\\<^bsub>n\\<^esub>\n                              (the (map_of (delete v binds) va)))\n                            (y := \\<bottom>, x := up\\<cdot>0);\n                 x \\<notin> domA (delete v binds);\n                 y \\<notin> domA (delete v binds)\\<rbrakk>\n                \\<Longrightarrow> ABinds (delete v binds)[y::h=x]\\<cdot>\n                                  (aeR(y := \\<bottom>,\n x := up\\<cdot>0)) \\<sqsubseteq>\n                                  (ABinds (delete v binds)\\<cdot>aeR)\n                                  (y := \\<bottom>, x := up\\<cdot>0);\n        \\<And>va n.\n           va \\<in> domA ((v, e) # binds) \\<Longrightarrow>\n           \\<A>\\<^bsub>n\\<^esub>\n            (the (map_of ((v, e) # binds) va))[y::=x] \\<sqsubseteq>\n           (\\<A>\\<^bsub>n\\<^esub> (the (map_of ((v, e) # binds) va)))\n           (y := \\<bottom>, x := up\\<cdot>0);\n        x \\<notin> domA ((v, e) # binds);\n        y \\<notin> domA ((v, e) # binds)\\<rbrakk>\n       \\<Longrightarrow> ABinds ((v, e) # binds)[y::h=x]\\<cdot>\n                         (aeR(y := \\<bottom>,\n                              x := up\\<cdot>0)) \\<sqsubseteq>\n                         (ABinds ((v, e) # binds)\\<cdot>aeR)\n                         (y := \\<bottom>, x := up\\<cdot>0)", "have [simp]: \"(aeR(y := \\<bottom>, x := up\\<cdot>0)) v = aeR v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (aeR(y := \\<bottom>, x := up\\<cdot>0)) v = aeR v", "using prems(3,4)"], ["proof (prove)\nusing this:\n  x \\<notin> domA ((v, e) # \\<Gamma>)\n  y \\<notin> domA ((v, e) # \\<Gamma>)\n\ngoal (1 subgoal):\n 1. (aeR(y := \\<bottom>, x := up\\<cdot>0)) v = aeR v", "by auto"], ["proof (state)\nthis:\n  (aeR(y := \\<bottom>, x := up\\<cdot>0)) v = aeR v\n\ngoal (1 subgoal):\n 1. \\<And>v e binds.\n       \\<lbrakk>\\<lbrakk>\\<And>va n.\n                            va \\<in> domA (delete v binds) \\<Longrightarrow>\n                            \\<A>\\<^bsub>n\\<^esub>\n                             (the (map_of (delete v binds)\n                                    va))[y::=x] \\<sqsubseteq>\n                            (\\<A>\\<^bsub>n\\<^esub>\n                              (the (map_of (delete v binds) va)))\n                            (y := \\<bottom>, x := up\\<cdot>0);\n                 x \\<notin> domA (delete v binds);\n                 y \\<notin> domA (delete v binds)\\<rbrakk>\n                \\<Longrightarrow> ABinds (delete v binds)[y::h=x]\\<cdot>\n                                  (aeR(y := \\<bottom>,\n x := up\\<cdot>0)) \\<sqsubseteq>\n                                  (ABinds (delete v binds)\\<cdot>aeR)\n                                  (y := \\<bottom>, x := up\\<cdot>0);\n        \\<And>va n.\n           va \\<in> domA ((v, e) # binds) \\<Longrightarrow>\n           \\<A>\\<^bsub>n\\<^esub>\n            (the (map_of ((v, e) # binds) va))[y::=x] \\<sqsubseteq>\n           (\\<A>\\<^bsub>n\\<^esub> (the (map_of ((v, e) # binds) va)))\n           (y := \\<bottom>, x := up\\<cdot>0);\n        x \\<notin> domA ((v, e) # binds);\n        y \\<notin> domA ((v, e) # binds)\\<rbrakk>\n       \\<Longrightarrow> ABinds ((v, e) # binds)[y::h=x]\\<cdot>\n                         (aeR(y := \\<bottom>,\n                              x := up\\<cdot>0)) \\<sqsubseteq>\n                         (ABinds ((v, e) # binds)\\<cdot>aeR)\n                         (y := \\<bottom>, x := up\\<cdot>0)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds ((v, e) # \\<Gamma>)[y::h=x]\\<cdot>\n    (aeR(y := \\<bottom>, x := up\\<cdot>0)) \\<sqsubseteq>\n    (ABinds ((v, e) # \\<Gamma>)\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)", "by (simp del: fun_upd_apply join_comm) (rule join_mono[OF IH1 IH2])"], ["proof (state)\nthis:\n  ABinds ((v, e) # \\<Gamma>)[y::h=x]\\<cdot>\n  (aeR(y := \\<bottom>, x := up\\<cdot>0)) \\<sqsubseteq>\n  (ABinds ((v, e) # \\<Gamma>)\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ABinds \\<Gamma>[y::h=x]\\<cdot>\n  (aeR(y := \\<bottom>, x := up\\<cdot>0)) \\<sqsubseteq>\n  (ABinds \\<Gamma>\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)\n\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       xa \\<sqsubseteq> ya\n       (y := \\<bottom>, x := up\\<cdot>0) \\<Longrightarrow>\n       (\\<Lambda> xa.\n           ABinds \\<Gamma>[y::h=x]\\<cdot>xa \\<squnion> ae\n           (y := \\<bottom>, x := up\\<cdot>0))\\<cdot>\n       xa \\<sqsubseteq>\n       ((\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>ya)\n       (y := \\<bottom>, x := up\\<cdot>0)", "finally"], ["proof (chain)\npicking this:\n  cont (\\<lambda>a. a) \\<Longrightarrow>\n  ABinds \\<Gamma>[y::h=x]\\<cdot>aeL \\<sqsubseteq>\n  (ABinds \\<Gamma>\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)", "have \"ABinds \\<Gamma>[y::h=x]\\<cdot>aeL \\<sqsubseteq> (ABinds \\<Gamma>\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)\""], ["proof (prove)\nusing this:\n  cont (\\<lambda>a. a) \\<Longrightarrow>\n  ABinds \\<Gamma>[y::h=x]\\<cdot>aeL \\<sqsubseteq>\n  (ABinds \\<Gamma>\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)\n\ngoal (1 subgoal):\n 1. ABinds \\<Gamma>[y::h=x]\\<cdot>aeL \\<sqsubseteq>\n    (ABinds \\<Gamma>\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)", "by this simp"], ["proof (state)\nthis:\n  ABinds \\<Gamma>[y::h=x]\\<cdot>aeL \\<sqsubseteq>\n  (ABinds \\<Gamma>\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)\n\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       xa \\<sqsubseteq> ya\n       (y := \\<bottom>, x := up\\<cdot>0) \\<Longrightarrow>\n       (\\<Lambda> xa.\n           ABinds \\<Gamma>[y::h=x]\\<cdot>xa \\<squnion> ae\n           (y := \\<bottom>, x := up\\<cdot>0))\\<cdot>\n       xa \\<sqsubseteq>\n       ((\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>ya)\n       (y := \\<bottom>, x := up\\<cdot>0)", "thus ?case"], ["proof (prove)\nusing this:\n  ABinds \\<Gamma>[y::h=x]\\<cdot>aeL \\<sqsubseteq>\n  (ABinds \\<Gamma>\\<cdot>aeR)(y := \\<bottom>, x := up\\<cdot>0)\n\ngoal (1 subgoal):\n 1. (\\<Lambda> xa.\n        ABinds \\<Gamma>[y::h=x]\\<cdot>xa \\<squnion> ae\n        (y := \\<bottom>, x := up\\<cdot>0))\\<cdot>\n    aeL \\<sqsubseteq>\n    ((\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>aeR)\n    (y := \\<bottom>, x := up\\<cdot>0)", "by (auto simp add: join_below_iff elim: below_trans)"], ["proof (state)\nthis:\n  (\\<Lambda> xa.\n      ABinds \\<Gamma>[y::h=x]\\<cdot>xa \\<squnion> ae\n      (y := \\<bottom>, x := up\\<cdot>0))\\<cdot>\n  aeL \\<sqsubseteq>\n  ((\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>aeR)\n  (y := \\<bottom>, x := up\\<cdot>0)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma Afix_eqvt[eqvt]: \"\\<pi> \\<bullet> (ArityAnalysis.Afix Aexp \\<Gamma>) = ArityAnalysis.Afix  (\\<pi> \\<bullet> Aexp) (\\<pi> \\<bullet> \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<bullet> ArityAnalysis.Afix Aexp \\<Gamma> =\n    ArityAnalysis.Afix (\\<pi> \\<bullet> Aexp) (\\<pi> \\<bullet> \\<Gamma>)", "unfolding ArityAnalysis.Afix_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<bullet> (\\<Lambda> ae.\n                        \\<mu> x.\n                           ArityAnalysis.ABinds Aexp \\<Gamma>\\<cdot>\n                           x \\<squnion>\n                           ae) =\n    (\\<Lambda> ae.\n        \\<mu> x.\n           ArityAnalysis.ABinds (\\<pi> \\<bullet> Aexp)\n            (\\<pi> \\<bullet> \\<Gamma>)\\<cdot>\n           x \\<squnion>\n           ae)", "by perm_simp (simp add: Abs_cfun_eqvt)"], ["", "lemma Afix_cong[fundef_cong]:\n  \"\\<lbrakk> (\\<And> e. e \\<in> snd ` set heap2 \\<Longrightarrow> aexp1 e = aexp2 e); heap1 = heap2 \\<rbrakk>\n      \\<Longrightarrow> ArityAnalysis.Afix aexp1 heap1 = ArityAnalysis.Afix aexp2 heap2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>e.\n                e \\<in> snd ` set heap2 \\<Longrightarrow> aexp1 e = aexp2 e;\n     heap1 = heap2\\<rbrakk>\n    \\<Longrightarrow> ArityAnalysis.Afix aexp1 heap1 =\n                      ArityAnalysis.Afix aexp2 heap2", "unfolding ArityAnalysis.Afix_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>e.\n                e \\<in> snd ` set heap2 \\<Longrightarrow> aexp1 e = aexp2 e;\n     heap1 = heap2\\<rbrakk>\n    \\<Longrightarrow> (\\<Lambda> ae.\n                          \\<mu> x.\n                             ArityAnalysis.ABinds aexp1 heap1\\<cdot>\n                             x \\<squnion>\n                             ae) =\n                      (\\<Lambda> ae.\n                          \\<mu> x.\n                             ArityAnalysis.ABinds aexp2 heap2\\<cdot>\n                             x \\<squnion>\n                             ae)", "by (metis Abinds_cong)"], ["", "context EdomArityAnalysis\nbegin"], ["", "lemma Afix_edom: \"edom (Afix \\<Gamma> \\<cdot> ae) \\<subseteq> fv \\<Gamma> \\<union> edom ae\""], ["proof (prove)\ngoal (1 subgoal):\n 1. edom (Afix \\<Gamma>\\<cdot>ae) \\<subseteq> fv \\<Gamma> \\<union> edom ae", "unfolding Afix_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. edom (\\<mu> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\n    \\<subseteq> fv \\<Gamma> \\<union> edom ae", "by (rule fix_ind[where P = \"\\<lambda> ae' . edom ae' \\<subseteq> fv \\<Gamma> \\<union> edom ae\"] )\n     (auto dest: subsetD[OF edom_AnalBinds])"], ["", "lemma ABinds_lookup_fresh:\n  \"atom v \\<sharp> \\<Gamma> \\<Longrightarrow> (ABinds \\<Gamma>\\<cdot>ae) v = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom v \\<sharp> \\<Gamma> \\<Longrightarrow>\n    (ABinds \\<Gamma>\\<cdot>ae) v = \\<bottom>", "by (induct \\<Gamma> rule: ABinds.induct) (auto simp add: fresh_Cons fresh_Pair fup_Aexp_lookup_fresh fresh_delete)"], ["", "lemma Afix_lookup_fresh:\n  assumes \"atom v \\<sharp> \\<Gamma>\"\n  shows \"(Afix \\<Gamma>\\<cdot>ae) v = ae v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Afix \\<Gamma>\\<cdot>ae) v = ae v", "apply (rule below_antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (Afix \\<Gamma>\\<cdot>ae) v \\<sqsubseteq> ae v\n 2. ae v \\<sqsubseteq> (Afix \\<Gamma>\\<cdot>ae) v", "apply (subst Afix_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<mu> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae) v \\<sqsubseteq> ae v\n 2. ae v \\<sqsubseteq> (Afix \\<Gamma>\\<cdot>ae) v", "apply (rule fix_ind[where  P = \"\\<lambda> ae'. ae' v \\<sqsubseteq> ae v\"])"], ["proof (prove)\ngoal (4 subgoals):\n 1. adm (\\<lambda>ae'. ae' v \\<sqsubseteq> ae v)\n 2. \\<bottom> v \\<sqsubseteq> ae v\n 3. \\<And>x.\n       x v \\<sqsubseteq> ae v \\<Longrightarrow>\n       ((\\<Lambda> x. ABinds \\<Gamma>\\<cdot>x \\<squnion> ae)\\<cdot>x)\n        v \\<sqsubseteq>\n       ae v\n 4. ae v \\<sqsubseteq> (Afix \\<Gamma>\\<cdot>ae) v", "apply (auto simp add: ABinds_lookup_fresh[OF assms] fun_belowD[OF Afix_above_arg])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Afix_comp2join_fresh:\n  \"atom ` (domA \\<Delta>) \\<sharp>* \\<Gamma> \\<Longrightarrow> ABinds \\<Delta>\\<cdot>(Afix \\<Gamma>\\<cdot>ae) = ABinds \\<Delta>\\<cdot>ae\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom ` domA \\<Delta> \\<sharp>* \\<Gamma> \\<Longrightarrow>\n    ABinds \\<Delta>\\<cdot>(Afix \\<Gamma>\\<cdot>ae) =\n    ABinds \\<Delta>\\<cdot>ae", "proof (induct \\<Delta> rule: ABinds.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. atom ` domA [] \\<sharp>* \\<Gamma> \\<Longrightarrow>\n    ABinds []\\<cdot>(Afix \\<Gamma>\\<cdot>ae) = ABinds []\\<cdot>ae\n 2. \\<And>v e binds.\n       \\<lbrakk>atom `\n                domA (delete v binds) \\<sharp>* \\<Gamma> \\<Longrightarrow>\n                ABinds (delete v binds)\\<cdot>(Afix \\<Gamma>\\<cdot>ae) =\n                ABinds (delete v binds)\\<cdot>ae;\n        atom ` domA ((v, e) # binds) \\<sharp>* \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ABinds ((v, e) # binds)\\<cdot>\n                         (Afix \\<Gamma>\\<cdot>ae) =\n                         ABinds ((v, e) # binds)\\<cdot>ae", "case 1"], ["proof (state)\nthis:\n  atom ` domA [] \\<sharp>* \\<Gamma>\n\ngoal (2 subgoals):\n 1. atom ` domA [] \\<sharp>* \\<Gamma> \\<Longrightarrow>\n    ABinds []\\<cdot>(Afix \\<Gamma>\\<cdot>ae) = ABinds []\\<cdot>ae\n 2. \\<And>v e binds.\n       \\<lbrakk>atom `\n                domA (delete v binds) \\<sharp>* \\<Gamma> \\<Longrightarrow>\n                ABinds (delete v binds)\\<cdot>(Afix \\<Gamma>\\<cdot>ae) =\n                ABinds (delete v binds)\\<cdot>ae;\n        atom ` domA ((v, e) # binds) \\<sharp>* \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ABinds ((v, e) # binds)\\<cdot>\n                         (Afix \\<Gamma>\\<cdot>ae) =\n                         ABinds ((v, e) # binds)\\<cdot>ae", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds []\\<cdot>(Afix \\<Gamma>\\<cdot>ae) = ABinds []\\<cdot>ae", "by (simp add: Afix_above_arg del: fun_meet_simp)"], ["proof (state)\nthis:\n  ABinds []\\<cdot>(Afix \\<Gamma>\\<cdot>ae) = ABinds []\\<cdot>ae\n\ngoal (1 subgoal):\n 1. \\<And>v e binds.\n       \\<lbrakk>atom `\n                domA (delete v binds) \\<sharp>* \\<Gamma> \\<Longrightarrow>\n                ABinds (delete v binds)\\<cdot>(Afix \\<Gamma>\\<cdot>ae) =\n                ABinds (delete v binds)\\<cdot>ae;\n        atom ` domA ((v, e) # binds) \\<sharp>* \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ABinds ((v, e) # binds)\\<cdot>\n                         (Afix \\<Gamma>\\<cdot>ae) =\n                         ABinds ((v, e) # binds)\\<cdot>ae", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v e binds.\n       \\<lbrakk>atom `\n                domA (delete v binds) \\<sharp>* \\<Gamma> \\<Longrightarrow>\n                ABinds (delete v binds)\\<cdot>(Afix \\<Gamma>\\<cdot>ae) =\n                ABinds (delete v binds)\\<cdot>ae;\n        atom ` domA ((v, e) # binds) \\<sharp>* \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ABinds ((v, e) # binds)\\<cdot>\n                         (Afix \\<Gamma>\\<cdot>ae) =\n                         ABinds ((v, e) # binds)\\<cdot>ae", "case (2 v e \\<Delta>)"], ["proof (state)\nthis:\n  atom ` domA (delete v \\<Delta>) \\<sharp>* \\<Gamma> \\<Longrightarrow>\n  ABinds (delete v \\<Delta>)\\<cdot>(Afix \\<Gamma>\\<cdot>ae) =\n  ABinds (delete v \\<Delta>)\\<cdot>ae\n  atom ` domA ((v, e) # \\<Delta>) \\<sharp>* \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>v e binds.\n       \\<lbrakk>atom `\n                domA (delete v binds) \\<sharp>* \\<Gamma> \\<Longrightarrow>\n                ABinds (delete v binds)\\<cdot>(Afix \\<Gamma>\\<cdot>ae) =\n                ABinds (delete v binds)\\<cdot>ae;\n        atom ` domA ((v, e) # binds) \\<sharp>* \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ABinds ((v, e) # binds)\\<cdot>\n                         (Afix \\<Gamma>\\<cdot>ae) =\n                         ABinds ((v, e) # binds)\\<cdot>ae", "from 2(2)"], ["proof (chain)\npicking this:\n  atom ` domA ((v, e) # \\<Delta>) \\<sharp>* \\<Gamma>", "have \"atom v \\<sharp> \\<Gamma>\" and  \"atom ` domA (delete v \\<Delta>) \\<sharp>* \\<Gamma>\""], ["proof (prove)\nusing this:\n  atom ` domA ((v, e) # \\<Delta>) \\<sharp>* \\<Gamma>\n\ngoal (1 subgoal):\n 1. atom v \\<sharp> \\<Gamma> &&&\n    atom ` domA (delete v \\<Delta>) \\<sharp>* \\<Gamma>", "by (auto simp add: fresh_star_def)"], ["proof (state)\nthis:\n  atom v \\<sharp> \\<Gamma>\n  atom ` domA (delete v \\<Delta>) \\<sharp>* \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>v e binds.\n       \\<lbrakk>atom `\n                domA (delete v binds) \\<sharp>* \\<Gamma> \\<Longrightarrow>\n                ABinds (delete v binds)\\<cdot>(Afix \\<Gamma>\\<cdot>ae) =\n                ABinds (delete v binds)\\<cdot>ae;\n        atom ` domA ((v, e) # binds) \\<sharp>* \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> ABinds ((v, e) # binds)\\<cdot>\n                         (Afix \\<Gamma>\\<cdot>ae) =\n                         ABinds ((v, e) # binds)\\<cdot>ae", "from 2(1)[OF this(2)]"], ["proof (chain)\npicking this:\n  ABinds (delete v \\<Delta>)\\<cdot>(Afix \\<Gamma>\\<cdot>ae) =\n  ABinds (delete v \\<Delta>)\\<cdot>ae", "show ?case"], ["proof (prove)\nusing this:\n  ABinds (delete v \\<Delta>)\\<cdot>(Afix \\<Gamma>\\<cdot>ae) =\n  ABinds (delete v \\<Delta>)\\<cdot>ae\n\ngoal (1 subgoal):\n 1. ABinds ((v, e) # \\<Delta>)\\<cdot>(Afix \\<Gamma>\\<cdot>ae) =\n    ABinds ((v, e) # \\<Delta>)\\<cdot>ae", "by (simp del: fun_meet_simp add: Afix_lookup_fresh[OF \\<open>atom v \\<sharp> \\<Gamma>\\<close>])"], ["proof (state)\nthis:\n  ABinds ((v, e) # \\<Delta>)\\<cdot>(Afix \\<Gamma>\\<cdot>ae) =\n  ABinds ((v, e) # \\<Delta>)\\<cdot>ae\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Afix_append_fresh:\n  assumes \"atom ` domA \\<Delta> \\<sharp>* \\<Gamma>\"\n  shows \"Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae = Afix \\<Gamma>\\<cdot>(Afix \\<Delta>\\<cdot>ae)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae =\n    Afix \\<Gamma>\\<cdot>(Afix \\<Delta>\\<cdot>ae)", "proof (rule below_antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae \\<sqsubseteq>\n    Afix \\<Gamma>\\<cdot>(Afix \\<Delta>\\<cdot>ae)\n 2. Afix \\<Gamma>\\<cdot>(Afix \\<Delta>\\<cdot>ae) \\<sqsubseteq>\n    Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae", "show *: \"Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae \\<sqsubseteq> Afix \\<Gamma>\\<cdot>(Afix \\<Delta>\\<cdot>ae)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae \\<sqsubseteq>\n    Afix \\<Gamma>\\<cdot>(Afix \\<Delta>\\<cdot>ae)", "apply (rule Afix_least_below)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>\n    (Afix \\<Gamma>\\<cdot>(Afix \\<Delta>\\<cdot>ae)) \\<sqsubseteq>\n    Afix \\<Gamma>\\<cdot>(Afix \\<Delta>\\<cdot>ae)\n 2. ae \\<sqsubseteq> Afix \\<Gamma>\\<cdot>(Afix \\<Delta>\\<cdot>ae)", "apply (simp add: Abinds_append_disjoint[OF fresh_distinct[OF assms]] Afix_comp2join_fresh[OF assms])"], ["proof (prove)\ngoal (2 subgoals):\n 1. ABinds \\<Delta>\\<cdot>(Afix \\<Delta>\\<cdot>ae) \\<squnion>\n    ABinds \\<Gamma>\\<cdot>\n    (Afix \\<Gamma>\\<cdot>(Afix \\<Delta>\\<cdot>ae)) \\<sqsubseteq>\n    Afix \\<Gamma>\\<cdot>(Afix \\<Delta>\\<cdot>ae)\n 2. ae \\<sqsubseteq> Afix \\<Gamma>\\<cdot>(Afix \\<Delta>\\<cdot>ae)", "apply (rule below_trans[OF join_mono[OF Abinds_Afix_below Abinds_Afix_below]])"], ["proof (prove)\ngoal (2 subgoals):\n 1. Afix \\<Delta>\\<cdot>ae \\<squnion>\n    Afix \\<Gamma>\\<cdot>(Afix \\<Delta>\\<cdot>ae) \\<sqsubseteq>\n    Afix \\<Gamma>\\<cdot>(Afix \\<Delta>\\<cdot>ae)\n 2. ae \\<sqsubseteq> Afix \\<Gamma>\\<cdot>(Afix \\<Delta>\\<cdot>ae)", "apply (simp_all add: Afix_above_arg  below_trans[OF Afix_above_arg Afix_above_arg])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae \\<sqsubseteq>\n  Afix \\<Gamma>\\<cdot>(Afix \\<Delta>\\<cdot>ae)\n\ngoal (1 subgoal):\n 1. Afix \\<Gamma>\\<cdot>(Afix \\<Delta>\\<cdot>ae) \\<sqsubseteq>\n    Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Afix \\<Gamma>\\<cdot>(Afix \\<Delta>\\<cdot>ae) \\<sqsubseteq>\n    Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae", "show \"Afix \\<Gamma>\\<cdot>(Afix \\<Delta>\\<cdot>ae) \\<sqsubseteq> Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Afix \\<Gamma>\\<cdot>(Afix \\<Delta>\\<cdot>ae) \\<sqsubseteq>\n    Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae", "proof (rule Afix_least_below)"], ["proof (state)\ngoal (2 subgoals):\n 1. ABinds \\<Gamma>\\<cdot>\n    (Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae) \\<sqsubseteq>\n    Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae\n 2. Afix \\<Delta>\\<cdot>ae \\<sqsubseteq> Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae", "show \"ABinds \\<Gamma>\\<cdot>(Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae) \\<sqsubseteq> Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds \\<Gamma>\\<cdot>\n    (Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae) \\<sqsubseteq>\n    Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae", "apply (rule below_trans[OF _ Abinds_Afix_below])"], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds \\<Gamma>\\<cdot>\n    (Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae) \\<sqsubseteq>\n    ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>(Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae)", "apply (subst Abinds_append_disjoint[OF fresh_distinct[OF assms]])"], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds \\<Gamma>\\<cdot>\n    (Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae) \\<sqsubseteq>\n    ABinds \\<Delta>\\<cdot>(Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae) \\<squnion>\n    ABinds \\<Gamma>\\<cdot>(Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ABinds \\<Gamma>\\<cdot>(Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae) \\<sqsubseteq>\n  Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae\n\ngoal (1 subgoal):\n 1. Afix \\<Delta>\\<cdot>ae \\<sqsubseteq> Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae", "have \"ABinds \\<Delta>\\<cdot>(Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae) \\<sqsubseteq> Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds \\<Delta>\\<cdot>\n    (Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae) \\<sqsubseteq>\n    Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae", "apply (rule below_trans[OF _ Abinds_Afix_below])"], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds \\<Delta>\\<cdot>\n    (Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae) \\<sqsubseteq>\n    ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>(Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae)", "apply (subst Abinds_append_disjoint[OF fresh_distinct[OF assms]])"], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds \\<Delta>\\<cdot>\n    (Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae) \\<sqsubseteq>\n    ABinds \\<Delta>\\<cdot>(Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae) \\<squnion>\n    ABinds \\<Gamma>\\<cdot>(Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ABinds \\<Delta>\\<cdot>(Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae) \\<sqsubseteq>\n  Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae\n\ngoal (1 subgoal):\n 1. Afix \\<Delta>\\<cdot>ae \\<sqsubseteq> Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae", "thus \"Afix \\<Delta>\\<cdot>ae \\<sqsubseteq> Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae\""], ["proof (prove)\nusing this:\n  ABinds \\<Delta>\\<cdot>(Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae) \\<sqsubseteq>\n  Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae\n\ngoal (1 subgoal):\n 1. Afix \\<Delta>\\<cdot>ae \\<sqsubseteq> Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae", "apply (rule Afix_least_below)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ae \\<sqsubseteq> Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae", "apply (rule Afix_above_arg)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Afix \\<Delta>\\<cdot>ae \\<sqsubseteq> Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Afix \\<Gamma>\\<cdot>(Afix \\<Delta>\\<cdot>ae) \\<sqsubseteq>\n  Afix (\\<Delta> @ \\<Gamma>)\\<cdot>ae\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Afix_e_to_heap:\n   \"Afix (delete x \\<Gamma>)\\<cdot>(fup\\<cdot>(Aexp e)\\<cdot>n \\<squnion> ae) \\<sqsubseteq> Afix ((x, e) # delete x \\<Gamma>)\\<cdot>(esing x\\<cdot>n \\<squnion> ae)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Afix (delete x \\<Gamma>)\\<cdot>\n    (\\<A>\\<^sup>\\<bottom>\\<^bsub>n\\<^esub> e \\<squnion> ae) \\<sqsubseteq>\n    Afix ((x, e) # delete x \\<Gamma>)\\<cdot>(esing x\\<cdot>n \\<squnion> ae)", "apply (simp add: Afix_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<mu> xa.\n        ae \\<squnion>\n        (\\<A>\\<^sup>\\<bottom>\\<^bsub>n\\<^esub> e \\<squnion>\n         ABinds (delete x \\<Gamma>)\\<cdot>xa)) \\<sqsubseteq>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e)))", "apply (rule fix_least_below, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ae \\<squnion>\n    (\\<A>\\<^sup>\\<bottom>\\<^bsub>n\\<^esub> e \\<squnion>\n     ABinds (delete x \\<Gamma>)\\<cdot>\n     (\\<mu> xa.\n         ae \\<squnion>\n         (esing x\\<cdot>n \\<squnion>\n          (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n           \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e)))) \\<sqsubseteq>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e)))", "apply (intro join_below)"], ["proof (prove)\ngoal (3 subgoals):\n 1. ae \\<sqsubseteq>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e)))\n 2. \\<A>\\<^sup>\\<bottom>\\<^bsub>n\\<^esub> e \\<sqsubseteq>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e)))\n 3. ABinds (delete x \\<Gamma>)\\<cdot>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e))) \\<sqsubseteq>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e)))", "apply (subst fix_eq, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<A>\\<^sup>\\<bottom>\\<^bsub>n\\<^esub> e \\<sqsubseteq>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e)))\n 2. ABinds (delete x \\<Gamma>)\\<cdot>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e))) \\<sqsubseteq>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e)))", "apply (subst fix_eq, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<A>\\<^sup>\\<bottom>\\<^bsub>n\\<^esub> e \\<sqsubseteq>\n    ae \\<squnion>\n    (esing x\\<cdot>n \\<squnion>\n     (ABinds (delete x \\<Gamma>)\\<cdot>\n      (\\<mu> xa.\n          ae \\<squnion>\n          (esing x\\<cdot>n \\<squnion>\n           (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n            \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e))) \\<squnion>\n      \\<A>\\<^sup>\\<bottom>\\<^bsub>(\\<mu> xa.\nae \\<squnion>\n(esing x\\<cdot>n \\<squnion>\n (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n  \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e)))\n                                   x\\<^esub>\n       e))\n 2. ABinds (delete x \\<Gamma>)\\<cdot>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e))) \\<sqsubseteq>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e)))", "apply (rule below_trans[OF _ join_above2])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<A>\\<^sup>\\<bottom>\\<^bsub>n\\<^esub> e \\<sqsubseteq>\n    esing x\\<cdot>n \\<squnion>\n    (ABinds (delete x \\<Gamma>)\\<cdot>\n     (\\<mu> xa.\n         ae \\<squnion>\n         (esing x\\<cdot>n \\<squnion>\n          (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n           \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e))) \\<squnion>\n     \\<A>\\<^sup>\\<bottom>\\<^bsub>(\\<mu> xa.\n                                     ae \\<squnion>\n                                     (esing x\\<cdot>n \\<squnion>\n(ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e)))\n                                  x\\<^esub>\n      e)\n 2. ABinds (delete x \\<Gamma>)\\<cdot>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e))) \\<sqsubseteq>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e)))", "apply (rule below_trans[OF _ join_above2])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<A>\\<^sup>\\<bottom>\\<^bsub>n\\<^esub> e \\<sqsubseteq>\n    ABinds (delete x \\<Gamma>)\\<cdot>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e))) \\<squnion>\n    \\<A>\\<^sup>\\<bottom>\\<^bsub>(\\<mu> xa.\n                                    ae \\<squnion>\n                                    (esing x\\<cdot>n \\<squnion>\n                                     (ABinds (delete x \\<Gamma>)\\<cdot>\nxa \\<squnion>\n\\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e)))\n                                 x\\<^esub>\n     e\n 2. ABinds (delete x \\<Gamma>)\\<cdot>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e))) \\<sqsubseteq>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e)))", "apply (rule below_trans[OF _ join_above2])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<A>\\<^sup>\\<bottom>\\<^bsub>n\\<^esub> e \\<sqsubseteq>\n    \\<A>\\<^sup>\\<bottom>\\<^bsub>(\\<mu> xa.\n                                    ae \\<squnion>\n                                    (esing x\\<cdot>n \\<squnion>\n                                     (ABinds (delete x \\<Gamma>)\\<cdot>\nxa \\<squnion>\n\\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e)))\n                                 x\\<^esub>\n     e\n 2. ABinds (delete x \\<Gamma>)\\<cdot>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e))) \\<sqsubseteq>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e)))", "apply (rule monofun_cfun_arg)"], ["proof (prove)\ngoal (2 subgoals):\n 1. n \\<sqsubseteq>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e)))\n     x\n 2. ABinds (delete x \\<Gamma>)\\<cdot>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e))) \\<sqsubseteq>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e)))", "apply (subst fix_eq, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds (delete x \\<Gamma>)\\<cdot>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e))) \\<sqsubseteq>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e)))", "apply (subst fix_eq, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds (delete x \\<Gamma>)\\<cdot>\n    (ae \\<squnion>\n     (esing x\\<cdot>n \\<squnion>\n      (ABinds (delete x \\<Gamma>)\\<cdot>\n       (\\<mu> xa.\n           ae \\<squnion>\n           (esing x\\<cdot>n \\<squnion>\n            (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n             \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e))) \\<squnion>\n       \\<A>\\<^sup>\\<bottom>\\<^bsub>(\\<mu> xa.\n ae \\<squnion>\n (esing x\\<cdot>n \\<squnion>\n  (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n   \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e)))\n                                    x\\<^esub>\n        e))) \\<sqsubseteq>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e)))", "back"], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds (delete x \\<Gamma>)\\<cdot>\n    (\\<mu> xa.\n        ae \\<squnion>\n        (esing x\\<cdot>n \\<squnion>\n         (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n          \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e))) \\<sqsubseteq>\n    ae \\<squnion>\n    (esing x\\<cdot>n \\<squnion>\n     (ABinds (delete x \\<Gamma>)\\<cdot>\n      (\\<mu> xa.\n          ae \\<squnion>\n          (esing x\\<cdot>n \\<squnion>\n           (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n            \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e))) \\<squnion>\n      \\<A>\\<^sup>\\<bottom>\\<^bsub>(\\<mu> xa.\nae \\<squnion>\n(esing x\\<cdot>n \\<squnion>\n (ABinds (delete x \\<Gamma>)\\<cdot>xa \\<squnion>\n  \\<A>\\<^sup>\\<bottom>\\<^bsub>xa x\\<^esub> e)))\n                                   x\\<^esub>\n       e))", "apply (simp add: below_trans[OF _ join_above2])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Afix_e_to_heap':\n   \"Afix (delete x \\<Gamma>)\\<cdot>(Aexp e\\<cdot>n) \\<sqsubseteq> Afix ((x, e) # delete x \\<Gamma>)\\<cdot>(esing x\\<cdot>(up\\<cdot>n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Afix (delete x \\<Gamma>)\\<cdot>(\\<A>\\<^bsub>n\\<^esub> e) \\<sqsubseteq>\n    Afix ((x, e) # delete x \\<Gamma>)\\<cdot>(esing x\\<cdot>(up\\<cdot>n))", "using Afix_e_to_heap[where ae = \\<bottom> and n = \"up\\<cdot>n\"]"], ["proof (prove)\nusing this:\n  Afix (delete ?x ?\\<Gamma>)\\<cdot>\n  (\\<A>\\<^sup>\\<bottom>\\<^bsub>up\\<cdot>n\\<^esub> ?e \\<squnion>\n   \\<bottom>) \\<sqsubseteq>\n  Afix ((?x, ?e) # delete ?x ?\\<Gamma>)\\<cdot>\n  (esing ?x\\<cdot>(up\\<cdot>n) \\<squnion> \\<bottom>)\n\ngoal (1 subgoal):\n 1. Afix (delete x \\<Gamma>)\\<cdot>(\\<A>\\<^bsub>n\\<^esub> e) \\<sqsubseteq>\n    Afix ((x, e) # delete x \\<Gamma>)\\<cdot>(esing x\\<cdot>(up\\<cdot>n))", "by simp"], ["", "end"], ["", "end"]]}