{"file_name": "/home/qj213/afp-2021-10-22/thys/Call_Arity/ArityEtaExpansionSafe.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Call_Arity", "problem_names": ["lemma Aeta_expand_safe:\n  assumes \"Astack S \\<sqsubseteq> a\"\n  shows \"(\\<Gamma>, Aeta_expand a e, S) \\<Rightarrow>\\<^sup>* (\\<Gamma>, e, S)\""], "translations": [["", "lemma Aeta_expand_safe:\n  assumes \"Astack S \\<sqsubseteq> a\"\n  shows \"(\\<Gamma>, Aeta_expand a e, S) \\<Rightarrow>\\<^sup>* (\\<Gamma>, e, S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Gamma>, Aeta_expand a e, S) \\<Rightarrow>\\<^sup>* (\\<Gamma>, e, S)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Gamma>, Aeta_expand a e, S) \\<Rightarrow>\\<^sup>* (\\<Gamma>, e, S)", "have \"arg_prefix S = Rep_Arity (Astack S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arg_prefix S = Rep_Arity (Astack S)", "by (induction S arbitrary: a rule: arg_prefix.induct) (auto simp add: Arity.zero_Arity.rep_eq[symmetric])"], ["proof (state)\nthis:\n  arg_prefix S = Rep_Arity (Astack S)\n\ngoal (1 subgoal):\n 1. (\\<Gamma>, Aeta_expand a e, S) \\<Rightarrow>\\<^sup>* (\\<Gamma>, e, S)", "also"], ["proof (state)\nthis:\n  arg_prefix S = Rep_Arity (Astack S)\n\ngoal (1 subgoal):\n 1. (\\<Gamma>, Aeta_expand a e, S) \\<Rightarrow>\\<^sup>* (\\<Gamma>, e, S)", "from assms"], ["proof (chain)\npicking this:\n  Astack S \\<sqsubseteq> a", "have \"Rep_Arity a \\<le> Rep_Arity (Astack S)\""], ["proof (prove)\nusing this:\n  Astack S \\<sqsubseteq> a\n\ngoal (1 subgoal):\n 1. Rep_Arity a \\<le> Rep_Arity (Astack S)", "by (metis below_Arity.rep_eq)"], ["proof (state)\nthis:\n  Rep_Arity a \\<le> Rep_Arity (Astack S)\n\ngoal (1 subgoal):\n 1. (\\<Gamma>, Aeta_expand a e, S) \\<Rightarrow>\\<^sup>* (\\<Gamma>, e, S)", "finally"], ["proof (chain)\npicking this:\n  Rep_Arity a \\<le> arg_prefix S", "show ?thesis"], ["proof (prove)\nusing this:\n  Rep_Arity a \\<le> arg_prefix S\n\ngoal (1 subgoal):\n 1. (\\<Gamma>, Aeta_expand a e, S) \\<Rightarrow>\\<^sup>* (\\<Gamma>, e, S)", "by transfer (rule eta_expansion_safe')"], ["proof (state)\nthis:\n  (\\<Gamma>, Aeta_expand a e, S) \\<Rightarrow>\\<^sup>* (\\<Gamma>, e, S)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}