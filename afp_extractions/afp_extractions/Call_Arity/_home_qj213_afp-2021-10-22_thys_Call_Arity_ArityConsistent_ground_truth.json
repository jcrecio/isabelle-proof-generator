{"file_name": "/home/qj213/afp-2021-10-22/thys/Call_Arity/ArityConsistent.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Call_Arity", "problem_names": ["lemma a_consistent_restrictA:\n  assumes \"a_consistent (ae, a, as) (\\<Gamma>, e, S)\"\n  assumes \"edom ae \\<subseteq> V\"\n  shows \"a_consistent (ae, a, as) (restrictA V \\<Gamma>, e, S)\"", "lemma a_consistent_edom_subsetD:\n  \"a_consistent (ae, a, as) (\\<Gamma>, e, S) \\<Longrightarrow> edom ae \\<subseteq> domA \\<Gamma> \\<union> upds S\"", "lemma a_consistent_stackD:\n  \"a_consistent (ae, a, as) (\\<Gamma>, e, S) \\<Longrightarrow> Astack S \\<sqsubseteq> a\"", "lemma a_consistent_app\\<^sub>1:\n  \"a_consistent (ae, a, as) (\\<Gamma>, App e x, S) \\<Longrightarrow> a_consistent (ae, inc\\<cdot>a, as) (\\<Gamma>, e, Arg x # S)\"", "lemma a_consistent_app\\<^sub>2:\n  assumes \"a_consistent (ae, a, as) (\\<Gamma>, (Lam [y]. e), Arg x # S)\"\n  shows \"a_consistent (ae, (pred\\<cdot>a), as) (\\<Gamma>, e[y::=x], S)\"", "lemma a_consistent_thunk_0:\n  assumes \"a_consistent (ae, a, as) (\\<Gamma>, Var x, S)\"\n  assumes \"map_of \\<Gamma> x = Some e\"\n  assumes \"ae x = up\\<cdot>0\"\n  shows \"a_consistent (ae, 0, as) (delete x \\<Gamma>, e, Upd x # S)\"", "lemma a_consistent_thunk_once:\n  assumes \"a_consistent (ae, a, as) (\\<Gamma>, Var x, S)\"\n  assumes \"map_of \\<Gamma> x = Some e\"\n  assumes [simp]: \"ae x = up\\<cdot>u\"\n  assumes \"heap_upds_ok (\\<Gamma>, S)\"\n  shows \"a_consistent (env_delete x ae, u, as) (delete x \\<Gamma>, e, S)\"", "lemma a_consistent_lamvar:\n  assumes \"a_consistent (ae, a, as) (\\<Gamma>, Var x, S)\"\n  assumes \"map_of \\<Gamma> x = Some e\"\n  assumes [simp]: \"ae x = up\\<cdot>u\"\n  shows \"a_consistent (ae, u, as) ((x,e)# delete x \\<Gamma>, e, S)\"", "lemma \n  assumes \"a_consistent (ae, a, as) (\\<Gamma>, e, Upd x # S)\"\n  shows a_consistent_var\\<^sub>2: \"a_consistent (ae, a, as) ((x, e) # \\<Gamma>, e, S)\" \n    and a_consistent_UpdD: \"ae x = up\\<cdot>0\"\"a = 0\"", "lemma a_consistent_let:\n  assumes \"a_consistent (ae, a, as) (\\<Gamma>, Let \\<Delta> e, S)\"\n  assumes \"atom ` domA \\<Delta> \\<sharp>* \\<Gamma>\"\n  assumes \"atom ` domA \\<Delta> \\<sharp>* S\"\n  assumes \"edom ae \\<inter> domA \\<Delta> = {}\"\n  shows \"a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as) (\\<Delta> @ \\<Gamma>, e, S)\"", "lemma a_consistent_if\\<^sub>1:\n  assumes \"a_consistent (ae, a, as) (\\<Gamma>, scrut ? e1 : e2, S)\"\n  shows \"a_consistent (ae, 0, a#as) (\\<Gamma>, scrut, Alts e1 e2 # S)\"", "lemma a_consistent_if\\<^sub>2:\n  assumes \"a_consistent (ae, a, a'#as') (\\<Gamma>, Bool b, Alts e1 e2 # S)\"\n  shows \"a_consistent (ae, a', as') (\\<Gamma>, if b then e1 else e2, S)\"", "lemma a_consistent_alts_on_stack:\n  assumes \"a_consistent (ae, a, as) (\\<Gamma>, Bool b, Alts e1 e2 # S)\"\n  obtains a' as' where \"as = a' # as'\" \"a = 0\"", "lemma closed_a_consistent:\n  \"fv e = ({}::var set) \\<Longrightarrow> a_consistent (\\<bottom>, 0, []) ([], e, [])\""], "translations": [["", "lemma a_consistent_restrictA:\n  assumes \"a_consistent (ae, a, as) (\\<Gamma>, e, S)\"\n  assumes \"edom ae \\<subseteq> V\"\n  shows \"a_consistent (ae, a, as) (restrictA V \\<Gamma>, e, S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a_consistent (ae, a, as) (restrictA V \\<Gamma>, e, S)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. a_consistent (ae, a, as) (restrictA V \\<Gamma>, e, S)", "have \"domA \\<Gamma> \\<inter> V \\<union> upds S \\<subseteq> domA \\<Gamma> \\<union> upds S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. domA \\<Gamma> \\<inter> V \\<union> upds S\n    \\<subseteq> domA \\<Gamma> \\<union> upds S", "by auto"], ["proof (state)\nthis:\n  domA \\<Gamma> \\<inter> V \\<union> upds S\n  \\<subseteq> domA \\<Gamma> \\<union> upds S\n\ngoal (1 subgoal):\n 1. a_consistent (ae, a, as) (restrictA V \\<Gamma>, e, S)", "note * = below_trans[OF env_restr_mono2[OF this]]"], ["proof (state)\nthis:\n  ?m1 f|` (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq> ?z \\<Longrightarrow>\n  ?m1 f|` (domA \\<Gamma> \\<inter> V \\<union> upds S) \\<sqsubseteq> ?z\n\ngoal (1 subgoal):\n 1. a_consistent (ae, a, as) (restrictA V \\<Gamma>, e, S)", "show \" a_consistent (ae, a, as) (restrictA V \\<Gamma>, e, S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a_consistent (ae, a, as) (restrictA V \\<Gamma>, e, S)", "using assms"], ["proof (prove)\nusing this:\n  a_consistent (ae, a, as) (\\<Gamma>, e, S)\n  edom ae \\<subseteq> V\n\ngoal (1 subgoal):\n 1. a_consistent (ae, a, as) (restrictA V \\<Gamma>, e, S)", "by (auto simp add: a_consistent.simps env_restr_join join_below_iff ABinds_restrict_edom\n                  intro: * below_trans[OF env_restr_mono[OF ABinds_restrict_below]])"], ["proof (state)\nthis:\n  a_consistent (ae, a, as) (restrictA V \\<Gamma>, e, S)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma a_consistent_edom_subsetD:\n  \"a_consistent (ae, a, as) (\\<Gamma>, e, S) \\<Longrightarrow> edom ae \\<subseteq> domA \\<Gamma> \\<union> upds S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a_consistent (ae, a, as) (\\<Gamma>, e, S) \\<Longrightarrow>\n    edom ae \\<subseteq> domA \\<Gamma> \\<union> upds S", "by (rule a_consistentE)"], ["", "lemma a_consistent_stackD:\n  \"a_consistent (ae, a, as) (\\<Gamma>, e, S) \\<Longrightarrow> Astack S \\<sqsubseteq> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a_consistent (ae, a, as) (\\<Gamma>, e, S) \\<Longrightarrow>\n    Astack S \\<sqsubseteq> a", "by (rule a_consistentE)"], ["", "lemma a_consistent_app\\<^sub>1:\n  \"a_consistent (ae, a, as) (\\<Gamma>, App e x, S) \\<Longrightarrow> a_consistent (ae, inc\\<cdot>a, as) (\\<Gamma>, e, Arg x # S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a_consistent (ae, a, as) (\\<Gamma>, App e x, S) \\<Longrightarrow>\n    a_consistent (ae, inc\\<cdot>a, as) (\\<Gamma>, e, Arg x # S)", "by (auto simp add: join_below_iff env_restr_join a_consistent.simps\n           dest!: below_trans[OF env_restr_mono[OF Aexp_App]]\n           elim: below_trans)"], ["", "lemma a_consistent_app\\<^sub>2:\n  assumes \"a_consistent (ae, a, as) (\\<Gamma>, (Lam [y]. e), Arg x # S)\"\n  shows \"a_consistent (ae, (pred\\<cdot>a), as) (\\<Gamma>, e[y::=x], S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a_consistent (ae, pred\\<cdot>a, as) (\\<Gamma>, e[y::=x], S)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. a_consistent (ae, pred\\<cdot>a, as) (\\<Gamma>, e[y::=x], S)", "have \"Aexp (e[y::=x])\\<cdot>(pred\\<cdot>a) f|` (domA \\<Gamma> \\<union> upds S)  \\<sqsubseteq> (env_delete y ((Aexp e)\\<cdot>(pred\\<cdot>a)) \\<squnion> esing x\\<cdot>(up\\<cdot>0)) f|` (domA \\<Gamma> \\<union> upds S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e[y::=x] f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    (env_delete y (\\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e) \\<squnion>\n     esing x\\<cdot>(up\\<cdot>0)) f|`\n    (domA \\<Gamma> \\<union> upds S)", "by (rule env_restr_mono[OF Aexp_subst])"], ["proof (state)\nthis:\n  \\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e[y::=x] f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  (env_delete y (\\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e) \\<squnion>\n   esing x\\<cdot>(up\\<cdot>0)) f|`\n  (domA \\<Gamma> \\<union> upds S)\n\ngoal (1 subgoal):\n 1. a_consistent (ae, pred\\<cdot>a, as) (\\<Gamma>, e[y::=x], S)", "also"], ["proof (state)\nthis:\n  \\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e[y::=x] f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  (env_delete y (\\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e) \\<squnion>\n   esing x\\<cdot>(up\\<cdot>0)) f|`\n  (domA \\<Gamma> \\<union> upds S)\n\ngoal (1 subgoal):\n 1. a_consistent (ae, pred\\<cdot>a, as) (\\<Gamma>, e[y::=x], S)", "have \"\\<dots> =  env_delete y ((Aexp e)\\<cdot>(pred\\<cdot>a)) f|` (domA \\<Gamma> \\<union> upds S) \\<squnion> esing x\\<cdot>(up\\<cdot>0) f|` (domA \\<Gamma> \\<union> upds S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (env_delete y (\\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e) \\<squnion>\n     esing x\\<cdot>(up\\<cdot>0)) f|`\n    (domA \\<Gamma> \\<union> upds S) =\n    env_delete y (\\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e) f|`\n    (domA \\<Gamma> \\<union> upds S) \\<squnion>\n    esing x\\<cdot>(up\\<cdot>0) f|` (domA \\<Gamma> \\<union> upds S)", "by (simp add: env_restr_join)"], ["proof (state)\nthis:\n  (env_delete y (\\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e) \\<squnion>\n   esing x\\<cdot>(up\\<cdot>0)) f|`\n  (domA \\<Gamma> \\<union> upds S) =\n  env_delete y (\\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<squnion>\n  esing x\\<cdot>(up\\<cdot>0) f|` (domA \\<Gamma> \\<union> upds S)\n\ngoal (1 subgoal):\n 1. a_consistent (ae, pred\\<cdot>a, as) (\\<Gamma>, e[y::=x], S)", "also"], ["proof (state)\nthis:\n  (env_delete y (\\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e) \\<squnion>\n   esing x\\<cdot>(up\\<cdot>0)) f|`\n  (domA \\<Gamma> \\<union> upds S) =\n  env_delete y (\\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<squnion>\n  esing x\\<cdot>(up\\<cdot>0) f|` (domA \\<Gamma> \\<union> upds S)\n\ngoal (1 subgoal):\n 1. a_consistent (ae, pred\\<cdot>a, as) (\\<Gamma>, e[y::=x], S)", "have \"env_delete y ((Aexp e)\\<cdot>(pred\\<cdot>a)) \\<sqsubseteq> Aexp (Lam [y]. e)\\<cdot>a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. env_delete y (\\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e) \\<sqsubseteq>\n    \\<A>\\<^bsub>a\\<^esub> (Lam [y]. e)", "by (rule Aexp_Lam)"], ["proof (state)\nthis:\n  env_delete y (\\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e) \\<sqsubseteq>\n  \\<A>\\<^bsub>a\\<^esub> (Lam [y]. e)\n\ngoal (1 subgoal):\n 1. a_consistent (ae, pred\\<cdot>a, as) (\\<Gamma>, e[y::=x], S)", "also"], ["proof (state)\nthis:\n  env_delete y (\\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e) \\<sqsubseteq>\n  \\<A>\\<^bsub>a\\<^esub> (Lam [y]. e)\n\ngoal (1 subgoal):\n 1. a_consistent (ae, pred\\<cdot>a, as) (\\<Gamma>, e[y::=x], S)", "have \"\\<dots> f|` (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq> ae\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<A>\\<^bsub>a\\<^esub> (Lam [y]. e) f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    ae", "using assms"], ["proof (prove)\nusing this:\n  a_consistent (ae, a, as) (\\<Gamma>, Lam [y]. e, Arg x # S)\n\ngoal (1 subgoal):\n 1. \\<A>\\<^bsub>a\\<^esub> (Lam [y]. e) f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    ae", "by (auto simp add: join_below_iff env_restr_join a_consistent.simps)"], ["proof (state)\nthis:\n  \\<A>\\<^bsub>a\\<^esub> (Lam [y]. e) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (ae, pred\\<cdot>a, as) (\\<Gamma>, e[y::=x], S)", "also"], ["proof (state)\nthis:\n  \\<A>\\<^bsub>a\\<^esub> (Lam [y]. e) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (ae, pred\\<cdot>a, as) (\\<Gamma>, e[y::=x], S)", "have \"esing x\\<cdot>(up\\<cdot>0) f|` (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq> ae\""], ["proof (prove)\ngoal (1 subgoal):\n 1. esing x\\<cdot>(up\\<cdot>0) f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    ae", "using assms"], ["proof (prove)\nusing this:\n  a_consistent (ae, a, as) (\\<Gamma>, Lam [y]. e, Arg x # S)\n\ngoal (1 subgoal):\n 1. esing x\\<cdot>(up\\<cdot>0) f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    ae", "by (cases \"x\\<in>edom ae\") (auto simp add: env_restr_join join_below_iff a_consistent.simps)"], ["proof (state)\nthis:\n  esing x\\<cdot>(up\\<cdot>0) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (ae, pred\\<cdot>a, as) (\\<Gamma>, e[y::=x], S)", "also"], ["proof (state)\nthis:\n  esing x\\<cdot>(up\\<cdot>0) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (ae, pred\\<cdot>a, as) (\\<Gamma>, e[y::=x], S)", "have \"ae \\<squnion> ae = ae\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ae \\<squnion> ae = ae", "by simp"], ["proof (state)\nthis:\n  ae \\<squnion> ae = ae\n\ngoal (1 subgoal):\n 1. a_consistent (ae, pred\\<cdot>a, as) (\\<Gamma>, e[y::=x], S)", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>cont\n            (\\<lambda>a.\n                a f|` (domA \\<Gamma> \\<union> upds S) \\<squnion>\n                esing x\\<cdot>(up\\<cdot>0) f|`\n                (domA \\<Gamma> \\<union> upds S));\n   cont\n    (\\<lambda>a.\n        a \\<squnion>\n        esing x\\<cdot>(up\\<cdot>0) f|` (domA \\<Gamma> \\<union> upds S));\n   cont ((\\<squnion>) ae)\\<rbrakk>\n  \\<Longrightarrow> \\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e[y::=x] f|`\n                    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n                    ae", "have \"Aexp (e[y::=x])\\<cdot>(pred\\<cdot>a) f|` (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq> ae\""], ["proof (prove)\nusing this:\n  \\<lbrakk>cont\n            (\\<lambda>a.\n                a f|` (domA \\<Gamma> \\<union> upds S) \\<squnion>\n                esing x\\<cdot>(up\\<cdot>0) f|`\n                (domA \\<Gamma> \\<union> upds S));\n   cont\n    (\\<lambda>a.\n        a \\<squnion>\n        esing x\\<cdot>(up\\<cdot>0) f|` (domA \\<Gamma> \\<union> upds S));\n   cont ((\\<squnion>) ae)\\<rbrakk>\n  \\<Longrightarrow> \\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e[y::=x] f|`\n                    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n                    ae\n\ngoal (1 subgoal):\n 1. \\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e[y::=x] f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    ae", "by this simp_all"], ["proof (state)\nthis:\n  \\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e[y::=x] f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (ae, pred\\<cdot>a, as) (\\<Gamma>, e[y::=x], S)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e[y::=x] f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (ae, pred\\<cdot>a, as) (\\<Gamma>, e[y::=x], S)", "using assms"], ["proof (prove)\nusing this:\n  \\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e[y::=x] f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n  a_consistent (ae, a, as) (\\<Gamma>, Lam [y]. e, Arg x # S)\n\ngoal (1 subgoal):\n 1. a_consistent (ae, pred\\<cdot>a, as) (\\<Gamma>, e[y::=x], S)", "by (auto elim: below_trans edom_mono  simp add: join_below_iff env_restr_join a_consistent.simps)"], ["proof (state)\nthis:\n  a_consistent (ae, pred\\<cdot>a, as) (\\<Gamma>, e[y::=x], S)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma a_consistent_thunk_0:\n  assumes \"a_consistent (ae, a, as) (\\<Gamma>, Var x, S)\"\n  assumes \"map_of \\<Gamma> x = Some e\"\n  assumes \"ae x = up\\<cdot>0\"\n  shows \"a_consistent (ae, 0, as) (delete x \\<Gamma>, e, Upd x # S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a_consistent (ae, 0, as) (delete x \\<Gamma>, e, Upd x # S)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. a_consistent (ae, 0, as) (delete x \\<Gamma>, e, Upd x # S)", "from assms(2)"], ["proof (chain)\npicking this:\n  map_of \\<Gamma> x = Some e", "have [simp]: \"x \\<in> domA \\<Gamma>\""], ["proof (prove)\nusing this:\n  map_of \\<Gamma> x = Some e\n\ngoal (1 subgoal):\n 1. x \\<in> domA \\<Gamma>", "by (metis domI dom_map_of_conv_domA)"], ["proof (state)\nthis:\n  x \\<in> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. a_consistent (ae, 0, as) (delete x \\<Gamma>, e, Upd x # S)", "from assms(3)"], ["proof (chain)\npicking this:\n  ae x = up\\<cdot>0", "have [simp]: \"x \\<in> edom ae\""], ["proof (prove)\nusing this:\n  ae x = up\\<cdot>0\n\ngoal (1 subgoal):\n 1. x \\<in> edom ae", "by (auto simp add: edom_def)"], ["proof (state)\nthis:\n  x \\<in> edom ae\n\ngoal (1 subgoal):\n 1. a_consistent (ae, 0, as) (delete x \\<Gamma>, e, Upd x # S)", "have \"x \\<in> domA \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> domA \\<Gamma>", "by (metis assms(2) domI dom_map_of_conv_domA)"], ["proof (state)\nthis:\n  x \\<in> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. a_consistent (ae, 0, as) (delete x \\<Gamma>, e, Upd x # S)", "hence [simp]: \"insert x (domA \\<Gamma> - {x} \\<union> upds S)  = (domA \\<Gamma> \\<union> upds S)\""], ["proof (prove)\nusing this:\n  x \\<in> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. insert x (domA \\<Gamma> - {x} \\<union> upds S) =\n    domA \\<Gamma> \\<union> upds S", "by auto"], ["proof (state)\nthis:\n  insert x (domA \\<Gamma> - {x} \\<union> upds S) =\n  domA \\<Gamma> \\<union> upds S\n\ngoal (1 subgoal):\n 1. a_consistent (ae, 0, as) (delete x \\<Gamma>, e, Upd x # S)", "from Abinds_reorder1[OF \\<open>map_of \\<Gamma> x = Some e\\<close>] \\<open>ae x = up\\<cdot>0\\<close>"], ["proof (chain)\npicking this:\n  ABinds \\<Gamma> = ABind x e \\<squnion> ABinds (delete x \\<Gamma>)\n  ae x = up\\<cdot>0", "have \"ABinds (delete x \\<Gamma>)\\<cdot>ae \\<squnion> Aexp e\\<cdot>0 = ABinds \\<Gamma>\\<cdot>ae\""], ["proof (prove)\nusing this:\n  ABinds \\<Gamma> = ABind x e \\<squnion> ABinds (delete x \\<Gamma>)\n  ae x = up\\<cdot>0\n\ngoal (1 subgoal):\n 1. ABinds (delete x \\<Gamma>)\\<cdot>ae \\<squnion> \\<A>\\<^bsub>0\\<^esub> e =\n    ABinds \\<Gamma>\\<cdot>ae", "by (auto intro: join_comm)"], ["proof (state)\nthis:\n  ABinds (delete x \\<Gamma>)\\<cdot>ae \\<squnion> \\<A>\\<^bsub>0\\<^esub> e =\n  ABinds \\<Gamma>\\<cdot>ae\n\ngoal (1 subgoal):\n 1. a_consistent (ae, 0, as) (delete x \\<Gamma>, e, Upd x # S)", "moreover"], ["proof (state)\nthis:\n  ABinds (delete x \\<Gamma>)\\<cdot>ae \\<squnion> \\<A>\\<^bsub>0\\<^esub> e =\n  ABinds \\<Gamma>\\<cdot>ae\n\ngoal (1 subgoal):\n 1. a_consistent (ae, 0, as) (delete x \\<Gamma>, e, Upd x # S)", "have \"(\\<dots> \\<squnion> AEstack as S) f|` (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq> ae\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ABinds \\<Gamma>\\<cdot>ae \\<squnion> AEstack as S) f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    ae", "using assms(1)"], ["proof (prove)\nusing this:\n  a_consistent (ae, a, as) (\\<Gamma>, Var x, S)\n\ngoal (1 subgoal):\n 1. (ABinds \\<Gamma>\\<cdot>ae \\<squnion> AEstack as S) f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    ae", "by (auto simp add: join_below_iff env_restr_join a_consistent.simps)"], ["proof (state)\nthis:\n  (ABinds \\<Gamma>\\<cdot>ae \\<squnion> AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (ae, 0, as) (delete x \\<Gamma>, e, Upd x # S)", "ultimately"], ["proof (chain)\npicking this:\n  ABinds (delete x \\<Gamma>)\\<cdot>ae \\<squnion> \\<A>\\<^bsub>0\\<^esub> e =\n  ABinds \\<Gamma>\\<cdot>ae\n  (ABinds \\<Gamma>\\<cdot>ae \\<squnion> AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae", "have \"((ABinds (delete x \\<Gamma>))\\<cdot>ae \\<squnion> Aexp e\\<cdot>0 \\<squnion> AEstack as S) f|` (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq> ae\""], ["proof (prove)\nusing this:\n  ABinds (delete x \\<Gamma>)\\<cdot>ae \\<squnion> \\<A>\\<^bsub>0\\<^esub> e =\n  ABinds \\<Gamma>\\<cdot>ae\n  (ABinds \\<Gamma>\\<cdot>ae \\<squnion> AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. (ABinds (delete x \\<Gamma>)\\<cdot>ae \\<squnion>\n     \\<A>\\<^bsub>0\\<^esub> e \\<squnion>\n     AEstack as S) f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    ae", "by simp"], ["proof (state)\nthis:\n  (ABinds (delete x \\<Gamma>)\\<cdot>ae \\<squnion>\n   \\<A>\\<^bsub>0\\<^esub> e \\<squnion>\n   AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (ae, 0, as) (delete x \\<Gamma>, e, Upd x # S)", "then"], ["proof (chain)\npicking this:\n  (ABinds (delete x \\<Gamma>)\\<cdot>ae \\<squnion>\n   \\<A>\\<^bsub>0\\<^esub> e \\<squnion>\n   AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae", "show ?thesis"], ["proof (prove)\nusing this:\n  (ABinds (delete x \\<Gamma>)\\<cdot>ae \\<squnion>\n   \\<A>\\<^bsub>0\\<^esub> e \\<squnion>\n   AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (ae, 0, as) (delete x \\<Gamma>, e, Upd x # S)", "using \\<open>ae x = up\\<cdot>0\\<close> assms(1)"], ["proof (prove)\nusing this:\n  (ABinds (delete x \\<Gamma>)\\<cdot>ae \\<squnion>\n   \\<A>\\<^bsub>0\\<^esub> e \\<squnion>\n   AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n  ae x = up\\<cdot>0\n  a_consistent (ae, a, as) (\\<Gamma>, Var x, S)\n\ngoal (1 subgoal):\n 1. a_consistent (ae, 0, as) (delete x \\<Gamma>, e, Upd x # S)", "by (auto simp add: join_below_iff env_restr_join  a_consistent.simps)"], ["proof (state)\nthis:\n  a_consistent (ae, 0, as) (delete x \\<Gamma>, e, Upd x # S)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma a_consistent_thunk_once:\n  assumes \"a_consistent (ae, a, as) (\\<Gamma>, Var x, S)\"\n  assumes \"map_of \\<Gamma> x = Some e\"\n  assumes [simp]: \"ae x = up\\<cdot>u\"\n  assumes \"heap_upds_ok (\\<Gamma>, S)\"\n  shows \"a_consistent (env_delete x ae, u, as) (delete x \\<Gamma>, e, S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a_consistent (env_delete x ae, u, as) (delete x \\<Gamma>, e, S)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. a_consistent (env_delete x ae, u, as) (delete x \\<Gamma>, e, S)", "from assms(2)"], ["proof (chain)\npicking this:\n  map_of \\<Gamma> x = Some e", "have [simp]: \"x \\<in> domA \\<Gamma>\""], ["proof (prove)\nusing this:\n  map_of \\<Gamma> x = Some e\n\ngoal (1 subgoal):\n 1. x \\<in> domA \\<Gamma>", "by (metis domI dom_map_of_conv_domA)"], ["proof (state)\nthis:\n  x \\<in> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. a_consistent (env_delete x ae, u, as) (delete x \\<Gamma>, e, S)", "from assms(1)"], ["proof (chain)\npicking this:\n  a_consistent (ae, a, as) (\\<Gamma>, Var x, S)", "have \"Aexp (Var x)\\<cdot>a f|` (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq> ae\""], ["proof (prove)\nusing this:\n  a_consistent (ae, a, as) (\\<Gamma>, Var x, S)\n\ngoal (1 subgoal):\n 1. \\<A>\\<^bsub>a\\<^esub> (Var x) f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    ae", "by (auto simp add: join_below_iff env_restr_join a_consistent.simps)"], ["proof (state)\nthis:\n  \\<A>\\<^bsub>a\\<^esub> (Var x) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (env_delete x ae, u, as) (delete x \\<Gamma>, e, S)", "from fun_belowD[where x = x, OF this]"], ["proof (chain)\npicking this:\n  (\\<A>\\<^bsub>a\\<^esub> (Var x) f|` (domA \\<Gamma> \\<union> upds S))\n   x \\<sqsubseteq>\n  ae x", "have \"(Aexp (Var x)\\<cdot>a) x \\<sqsubseteq> up\\<cdot>u\""], ["proof (prove)\nusing this:\n  (\\<A>\\<^bsub>a\\<^esub> (Var x) f|` (domA \\<Gamma> \\<union> upds S))\n   x \\<sqsubseteq>\n  ae x\n\ngoal (1 subgoal):\n 1. \\<A>\\<^bsub>a\\<^esub> (Var x) x \\<sqsubseteq> up\\<cdot>u", "by simp"], ["proof (state)\nthis:\n  \\<A>\\<^bsub>a\\<^esub> (Var x) x \\<sqsubseteq> up\\<cdot>u\n\ngoal (1 subgoal):\n 1. a_consistent (env_delete x ae, u, as) (delete x \\<Gamma>, e, S)", "from below_trans[OF Aexp_Var this]"], ["proof (chain)\npicking this:\n  up\\<cdot>a \\<sqsubseteq> up\\<cdot>u", "have \"a \\<sqsubseteq> u\""], ["proof (prove)\nusing this:\n  up\\<cdot>a \\<sqsubseteq> up\\<cdot>u\n\ngoal (1 subgoal):\n 1. a \\<sqsubseteq> u", "by simp"], ["proof (state)\nthis:\n  a \\<sqsubseteq> u\n\ngoal (1 subgoal):\n 1. a_consistent (env_delete x ae, u, as) (delete x \\<Gamma>, e, S)", "from \\<open>heap_upds_ok (\\<Gamma>, S)\\<close>"], ["proof (chain)\npicking this:\n  heap_upds_ok (\\<Gamma>, S)", "have \"x \\<notin> upds S\""], ["proof (prove)\nusing this:\n  heap_upds_ok (\\<Gamma>, S)\n\ngoal (1 subgoal):\n 1. x \\<notin> upds S", "by (auto simp add: a_consistent.simps elim!: heap_upds_okE)"], ["proof (state)\nthis:\n  x \\<notin> upds S\n\ngoal (1 subgoal):\n 1. a_consistent (env_delete x ae, u, as) (delete x \\<Gamma>, e, S)", "hence [simp]: \"(- {x} \\<inter> (domA \\<Gamma> \\<union> upds S)) = (domA \\<Gamma> - {x} \\<union> upds S)\""], ["proof (prove)\nusing this:\n  x \\<notin> upds S\n\ngoal (1 subgoal):\n 1. - {x} \\<inter> (domA \\<Gamma> \\<union> upds S) =\n    domA \\<Gamma> - {x} \\<union> upds S", "by auto"], ["proof (state)\nthis:\n  - {x} \\<inter> (domA \\<Gamma> \\<union> upds S) =\n  domA \\<Gamma> - {x} \\<union> upds S\n\ngoal (1 subgoal):\n 1. a_consistent (env_delete x ae, u, as) (delete x \\<Gamma>, e, S)", "have \"Astack S \\<sqsubseteq> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Astack S \\<sqsubseteq> u", "using assms(1) \\<open>a \\<sqsubseteq> u\\<close>"], ["proof (prove)\nusing this:\n  a_consistent (ae, a, as) (\\<Gamma>, Var x, S)\n  a \\<sqsubseteq> u\n\ngoal (1 subgoal):\n 1. Astack S \\<sqsubseteq> u", "by (auto elim: below_trans simp add: a_consistent.simps)"], ["proof (state)\nthis:\n  Astack S \\<sqsubseteq> u\n\ngoal (1 subgoal):\n 1. a_consistent (env_delete x ae, u, as) (delete x \\<Gamma>, e, S)", "from Abinds_reorder1[OF \\<open>map_of \\<Gamma> x = Some e\\<close>] \\<open>ae x = up\\<cdot>u\\<close>"], ["proof (chain)\npicking this:\n  ABinds \\<Gamma> = ABind x e \\<squnion> ABinds (delete x \\<Gamma>)\n  ae x = up\\<cdot>u", "have \"ABinds (delete x \\<Gamma>)\\<cdot>ae \\<squnion> Aexp e\\<cdot>u = ABinds \\<Gamma>\\<cdot>ae\""], ["proof (prove)\nusing this:\n  ABinds \\<Gamma> = ABind x e \\<squnion> ABinds (delete x \\<Gamma>)\n  ae x = up\\<cdot>u\n\ngoal (1 subgoal):\n 1. ABinds (delete x \\<Gamma>)\\<cdot>ae \\<squnion> \\<A>\\<^bsub>u\\<^esub> e =\n    ABinds \\<Gamma>\\<cdot>ae", "by (auto intro: join_comm)"], ["proof (state)\nthis:\n  ABinds (delete x \\<Gamma>)\\<cdot>ae \\<squnion> \\<A>\\<^bsub>u\\<^esub> e =\n  ABinds \\<Gamma>\\<cdot>ae\n\ngoal (1 subgoal):\n 1. a_consistent (env_delete x ae, u, as) (delete x \\<Gamma>, e, S)", "moreover"], ["proof (state)\nthis:\n  ABinds (delete x \\<Gamma>)\\<cdot>ae \\<squnion> \\<A>\\<^bsub>u\\<^esub> e =\n  ABinds \\<Gamma>\\<cdot>ae\n\ngoal (1 subgoal):\n 1. a_consistent (env_delete x ae, u, as) (delete x \\<Gamma>, e, S)", "have \"(\\<dots> \\<squnion> AEstack as S) f|` (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq> ae\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ABinds \\<Gamma>\\<cdot>ae \\<squnion> AEstack as S) f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    ae", "using assms(1)"], ["proof (prove)\nusing this:\n  a_consistent (ae, a, as) (\\<Gamma>, Var x, S)\n\ngoal (1 subgoal):\n 1. (ABinds \\<Gamma>\\<cdot>ae \\<squnion> AEstack as S) f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    ae", "by (auto simp add: join_below_iff env_restr_join a_consistent.simps)"], ["proof (state)\nthis:\n  (ABinds \\<Gamma>\\<cdot>ae \\<squnion> AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (env_delete x ae, u, as) (delete x \\<Gamma>, e, S)", "ultimately"], ["proof (chain)\npicking this:\n  ABinds (delete x \\<Gamma>)\\<cdot>ae \\<squnion> \\<A>\\<^bsub>u\\<^esub> e =\n  ABinds \\<Gamma>\\<cdot>ae\n  (ABinds \\<Gamma>\\<cdot>ae \\<squnion> AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae", "have \"((ABinds (delete x \\<Gamma>))\\<cdot>ae \\<squnion> Aexp e\\<cdot>u \\<squnion> AEstack as S) f|` (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq> ae\""], ["proof (prove)\nusing this:\n  ABinds (delete x \\<Gamma>)\\<cdot>ae \\<squnion> \\<A>\\<^bsub>u\\<^esub> e =\n  ABinds \\<Gamma>\\<cdot>ae\n  (ABinds \\<Gamma>\\<cdot>ae \\<squnion> AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. (ABinds (delete x \\<Gamma>)\\<cdot>ae \\<squnion>\n     \\<A>\\<^bsub>u\\<^esub> e \\<squnion>\n     AEstack as S) f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    ae", "by simp"], ["proof (state)\nthis:\n  (ABinds (delete x \\<Gamma>)\\<cdot>ae \\<squnion>\n   \\<A>\\<^bsub>u\\<^esub> e \\<squnion>\n   AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (env_delete x ae, u, as) (delete x \\<Gamma>, e, S)", "hence \"((ABinds (delete x \\<Gamma>))\\<cdot>(env_delete x ae) \\<squnion> Aexp e\\<cdot>u \\<squnion> AEstack as S) f|` (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq> ae\""], ["proof (prove)\nusing this:\n  (ABinds (delete x \\<Gamma>)\\<cdot>ae \\<squnion>\n   \\<A>\\<^bsub>u\\<^esub> e \\<squnion>\n   AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. (ABinds (delete x \\<Gamma>)\\<cdot>(env_delete x ae) \\<squnion>\n     \\<A>\\<^bsub>u\\<^esub> e \\<squnion>\n     AEstack as S) f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    ae", "by (auto simp add: join_below_iff env_restr_join elim:  below_trans[OF env_restr_mono[OF monofun_cfun_arg[OF env_delete_below_arg]]])"], ["proof (state)\nthis:\n  (ABinds (delete x \\<Gamma>)\\<cdot>(env_delete x ae) \\<squnion>\n   \\<A>\\<^bsub>u\\<^esub> e \\<squnion>\n   AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (env_delete x ae, u, as) (delete x \\<Gamma>, e, S)", "hence \"env_delete x (((ABinds (delete x \\<Gamma>))\\<cdot>(env_delete x ae) \\<squnion> Aexp e\\<cdot>u \\<squnion> AEstack as S) f|` (domA \\<Gamma> \\<union> upds S)) \\<sqsubseteq> env_delete x ae\""], ["proof (prove)\nusing this:\n  (ABinds (delete x \\<Gamma>)\\<cdot>(env_delete x ae) \\<squnion>\n   \\<A>\\<^bsub>u\\<^esub> e \\<squnion>\n   AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. env_delete x\n     ((ABinds (delete x \\<Gamma>)\\<cdot>(env_delete x ae) \\<squnion>\n       \\<A>\\<^bsub>u\\<^esub> e \\<squnion>\n       AEstack as S) f|`\n      (domA \\<Gamma> \\<union> upds S)) \\<sqsubseteq>\n    env_delete x ae", "by (rule env_delete_mono)"], ["proof (state)\nthis:\n  env_delete x\n   ((ABinds (delete x \\<Gamma>)\\<cdot>(env_delete x ae) \\<squnion>\n     \\<A>\\<^bsub>u\\<^esub> e \\<squnion>\n     AEstack as S) f|`\n    (domA \\<Gamma> \\<union> upds S)) \\<sqsubseteq>\n  env_delete x ae\n\ngoal (1 subgoal):\n 1. a_consistent (env_delete x ae, u, as) (delete x \\<Gamma>, e, S)", "hence \"(((ABinds (delete x \\<Gamma>))\\<cdot>(env_delete x ae) \\<squnion> Aexp e\\<cdot>u \\<squnion> AEstack as S) f|` (domA (delete x \\<Gamma>) \\<union> upds S)) \\<sqsubseteq> env_delete x ae\""], ["proof (prove)\nusing this:\n  env_delete x\n   ((ABinds (delete x \\<Gamma>)\\<cdot>(env_delete x ae) \\<squnion>\n     \\<A>\\<^bsub>u\\<^esub> e \\<squnion>\n     AEstack as S) f|`\n    (domA \\<Gamma> \\<union> upds S)) \\<sqsubseteq>\n  env_delete x ae\n\ngoal (1 subgoal):\n 1. (ABinds (delete x \\<Gamma>)\\<cdot>(env_delete x ae) \\<squnion>\n     \\<A>\\<^bsub>u\\<^esub> e \\<squnion>\n     AEstack as S) f|`\n    (domA (delete x \\<Gamma>) \\<union> upds S) \\<sqsubseteq>\n    env_delete x ae", "by (simp add: env_delete_restr)"], ["proof (state)\nthis:\n  (ABinds (delete x \\<Gamma>)\\<cdot>(env_delete x ae) \\<squnion>\n   \\<A>\\<^bsub>u\\<^esub> e \\<squnion>\n   AEstack as S) f|`\n  (domA (delete x \\<Gamma>) \\<union> upds S) \\<sqsubseteq>\n  env_delete x ae\n\ngoal (1 subgoal):\n 1. a_consistent (env_delete x ae, u, as) (delete x \\<Gamma>, e, S)", "then"], ["proof (chain)\npicking this:\n  (ABinds (delete x \\<Gamma>)\\<cdot>(env_delete x ae) \\<squnion>\n   \\<A>\\<^bsub>u\\<^esub> e \\<squnion>\n   AEstack as S) f|`\n  (domA (delete x \\<Gamma>) \\<union> upds S) \\<sqsubseteq>\n  env_delete x ae", "show ?thesis"], ["proof (prove)\nusing this:\n  (ABinds (delete x \\<Gamma>)\\<cdot>(env_delete x ae) \\<squnion>\n   \\<A>\\<^bsub>u\\<^esub> e \\<squnion>\n   AEstack as S) f|`\n  (domA (delete x \\<Gamma>) \\<union> upds S) \\<sqsubseteq>\n  env_delete x ae\n\ngoal (1 subgoal):\n 1. a_consistent (env_delete x ae, u, as) (delete x \\<Gamma>, e, S)", "using \\<open>ae x = up\\<cdot>u\\<close> \\<open>Astack S \\<sqsubseteq> u\\<close> assms(1)"], ["proof (prove)\nusing this:\n  (ABinds (delete x \\<Gamma>)\\<cdot>(env_delete x ae) \\<squnion>\n   \\<A>\\<^bsub>u\\<^esub> e \\<squnion>\n   AEstack as S) f|`\n  (domA (delete x \\<Gamma>) \\<union> upds S) \\<sqsubseteq>\n  env_delete x ae\n  ae x = up\\<cdot>u\n  Astack S \\<sqsubseteq> u\n  a_consistent (ae, a, as) (\\<Gamma>, Var x, S)\n\ngoal (1 subgoal):\n 1. a_consistent (env_delete x ae, u, as) (delete x \\<Gamma>, e, S)", "by (auto simp add: join_below_iff env_restr_join  a_consistent.simps elim : below_trans)"], ["proof (state)\nthis:\n  a_consistent (env_delete x ae, u, as) (delete x \\<Gamma>, e, S)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma a_consistent_lamvar:\n  assumes \"a_consistent (ae, a, as) (\\<Gamma>, Var x, S)\"\n  assumes \"map_of \\<Gamma> x = Some e\"\n  assumes [simp]: \"ae x = up\\<cdot>u\"\n  shows \"a_consistent (ae, u, as) ((x,e)# delete x \\<Gamma>, e, S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a_consistent (ae, u, as) ((x, e) # delete x \\<Gamma>, e, S)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. a_consistent (ae, u, as) ((x, e) # delete x \\<Gamma>, e, S)", "have [simp]: \"x \\<in> domA \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> domA \\<Gamma>", "by (metis assms(2) domI dom_map_of_conv_domA)"], ["proof (state)\nthis:\n  x \\<in> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. a_consistent (ae, u, as) ((x, e) # delete x \\<Gamma>, e, S)", "have [simp]: \"insert x (domA \\<Gamma> \\<union> upds S) = (domA \\<Gamma> \\<union> upds S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert x (domA \\<Gamma> \\<union> upds S) = domA \\<Gamma> \\<union> upds S", "by auto"], ["proof (state)\nthis:\n  insert x (domA \\<Gamma> \\<union> upds S) = domA \\<Gamma> \\<union> upds S\n\ngoal (1 subgoal):\n 1. a_consistent (ae, u, as) ((x, e) # delete x \\<Gamma>, e, S)", "from assms(1)"], ["proof (chain)\npicking this:\n  a_consistent (ae, a, as) (\\<Gamma>, Var x, S)", "have \"Aexp (Var x)\\<cdot>a f|` (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq> ae\""], ["proof (prove)\nusing this:\n  a_consistent (ae, a, as) (\\<Gamma>, Var x, S)\n\ngoal (1 subgoal):\n 1. \\<A>\\<^bsub>a\\<^esub> (Var x) f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    ae", "by (auto simp add: join_below_iff env_restr_join a_consistent.simps)"], ["proof (state)\nthis:\n  \\<A>\\<^bsub>a\\<^esub> (Var x) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (ae, u, as) ((x, e) # delete x \\<Gamma>, e, S)", "from fun_belowD[where x = x, OF this]"], ["proof (chain)\npicking this:\n  (\\<A>\\<^bsub>a\\<^esub> (Var x) f|` (domA \\<Gamma> \\<union> upds S))\n   x \\<sqsubseteq>\n  ae x", "have \"(Aexp (Var x)\\<cdot>a) x \\<sqsubseteq> up\\<cdot>u\""], ["proof (prove)\nusing this:\n  (\\<A>\\<^bsub>a\\<^esub> (Var x) f|` (domA \\<Gamma> \\<union> upds S))\n   x \\<sqsubseteq>\n  ae x\n\ngoal (1 subgoal):\n 1. \\<A>\\<^bsub>a\\<^esub> (Var x) x \\<sqsubseteq> up\\<cdot>u", "by simp"], ["proof (state)\nthis:\n  \\<A>\\<^bsub>a\\<^esub> (Var x) x \\<sqsubseteq> up\\<cdot>u\n\ngoal (1 subgoal):\n 1. a_consistent (ae, u, as) ((x, e) # delete x \\<Gamma>, e, S)", "from below_trans[OF Aexp_Var this]"], ["proof (chain)\npicking this:\n  up\\<cdot>a \\<sqsubseteq> up\\<cdot>u", "have \"a \\<sqsubseteq> u\""], ["proof (prove)\nusing this:\n  up\\<cdot>a \\<sqsubseteq> up\\<cdot>u\n\ngoal (1 subgoal):\n 1. a \\<sqsubseteq> u", "by simp"], ["proof (state)\nthis:\n  a \\<sqsubseteq> u\n\ngoal (1 subgoal):\n 1. a_consistent (ae, u, as) ((x, e) # delete x \\<Gamma>, e, S)", "have \"Astack S \\<sqsubseteq> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Astack S \\<sqsubseteq> u", "using assms(1) \\<open>a \\<sqsubseteq> u\\<close>"], ["proof (prove)\nusing this:\n  a_consistent (ae, a, as) (\\<Gamma>, Var x, S)\n  a \\<sqsubseteq> u\n\ngoal (1 subgoal):\n 1. Astack S \\<sqsubseteq> u", "by (auto elim: below_trans simp add: a_consistent.simps)"], ["proof (state)\nthis:\n  Astack S \\<sqsubseteq> u\n\ngoal (1 subgoal):\n 1. a_consistent (ae, u, as) ((x, e) # delete x \\<Gamma>, e, S)", "from Abinds_reorder1[OF \\<open>map_of \\<Gamma> x = Some e\\<close>] \\<open>ae x = up\\<cdot>u\\<close>"], ["proof (chain)\npicking this:\n  ABinds \\<Gamma> = ABind x e \\<squnion> ABinds (delete x \\<Gamma>)\n  ae x = up\\<cdot>u", "have \"ABinds ((x,e) # delete x \\<Gamma>)\\<cdot>ae \\<squnion> Aexp e\\<cdot>u = ABinds \\<Gamma>\\<cdot>ae\""], ["proof (prove)\nusing this:\n  ABinds \\<Gamma> = ABind x e \\<squnion> ABinds (delete x \\<Gamma>)\n  ae x = up\\<cdot>u\n\ngoal (1 subgoal):\n 1. ABinds ((x, e) # delete x \\<Gamma>)\\<cdot>ae \\<squnion>\n    \\<A>\\<^bsub>u\\<^esub> e =\n    ABinds \\<Gamma>\\<cdot>ae", "by (auto intro: join_comm)"], ["proof (state)\nthis:\n  ABinds ((x, e) # delete x \\<Gamma>)\\<cdot>ae \\<squnion>\n  \\<A>\\<^bsub>u\\<^esub> e =\n  ABinds \\<Gamma>\\<cdot>ae\n\ngoal (1 subgoal):\n 1. a_consistent (ae, u, as) ((x, e) # delete x \\<Gamma>, e, S)", "moreover"], ["proof (state)\nthis:\n  ABinds ((x, e) # delete x \\<Gamma>)\\<cdot>ae \\<squnion>\n  \\<A>\\<^bsub>u\\<^esub> e =\n  ABinds \\<Gamma>\\<cdot>ae\n\ngoal (1 subgoal):\n 1. a_consistent (ae, u, as) ((x, e) # delete x \\<Gamma>, e, S)", "have \"(\\<dots> \\<squnion> AEstack as S) f|` (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq> ae\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ABinds \\<Gamma>\\<cdot>ae \\<squnion> AEstack as S) f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    ae", "using assms(1)"], ["proof (prove)\nusing this:\n  a_consistent (ae, a, as) (\\<Gamma>, Var x, S)\n\ngoal (1 subgoal):\n 1. (ABinds \\<Gamma>\\<cdot>ae \\<squnion> AEstack as S) f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    ae", "by (auto simp add: join_below_iff env_restr_join a_consistent.simps)"], ["proof (state)\nthis:\n  (ABinds \\<Gamma>\\<cdot>ae \\<squnion> AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (ae, u, as) ((x, e) # delete x \\<Gamma>, e, S)", "ultimately"], ["proof (chain)\npicking this:\n  ABinds ((x, e) # delete x \\<Gamma>)\\<cdot>ae \\<squnion>\n  \\<A>\\<^bsub>u\\<^esub> e =\n  ABinds \\<Gamma>\\<cdot>ae\n  (ABinds \\<Gamma>\\<cdot>ae \\<squnion> AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae", "have \"((ABinds ((x,e) # delete x \\<Gamma>))\\<cdot>ae \\<squnion> Aexp e\\<cdot>u \\<squnion> AEstack as S) f|` (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq> ae\""], ["proof (prove)\nusing this:\n  ABinds ((x, e) # delete x \\<Gamma>)\\<cdot>ae \\<squnion>\n  \\<A>\\<^bsub>u\\<^esub> e =\n  ABinds \\<Gamma>\\<cdot>ae\n  (ABinds \\<Gamma>\\<cdot>ae \\<squnion> AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. (ABinds ((x, e) # delete x \\<Gamma>)\\<cdot>ae \\<squnion>\n     \\<A>\\<^bsub>u\\<^esub> e \\<squnion>\n     AEstack as S) f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    ae", "by simp"], ["proof (state)\nthis:\n  (ABinds ((x, e) # delete x \\<Gamma>)\\<cdot>ae \\<squnion>\n   \\<A>\\<^bsub>u\\<^esub> e \\<squnion>\n   AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (ae, u, as) ((x, e) # delete x \\<Gamma>, e, S)", "then"], ["proof (chain)\npicking this:\n  (ABinds ((x, e) # delete x \\<Gamma>)\\<cdot>ae \\<squnion>\n   \\<A>\\<^bsub>u\\<^esub> e \\<squnion>\n   AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae", "show ?thesis"], ["proof (prove)\nusing this:\n  (ABinds ((x, e) # delete x \\<Gamma>)\\<cdot>ae \\<squnion>\n   \\<A>\\<^bsub>u\\<^esub> e \\<squnion>\n   AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (ae, u, as) ((x, e) # delete x \\<Gamma>, e, S)", "using \\<open>ae x = up\\<cdot>u\\<close> \\<open>Astack S \\<sqsubseteq> u\\<close> assms(1)"], ["proof (prove)\nusing this:\n  (ABinds ((x, e) # delete x \\<Gamma>)\\<cdot>ae \\<squnion>\n   \\<A>\\<^bsub>u\\<^esub> e \\<squnion>\n   AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n  ae x = up\\<cdot>u\n  Astack S \\<sqsubseteq> u\n  a_consistent (ae, a, as) (\\<Gamma>, Var x, S)\n\ngoal (1 subgoal):\n 1. a_consistent (ae, u, as) ((x, e) # delete x \\<Gamma>, e, S)", "by (auto simp add: join_below_iff env_restr_join  a_consistent.simps)"], ["proof (state)\nthis:\n  a_consistent (ae, u, as) ((x, e) # delete x \\<Gamma>, e, S)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \n  assumes \"a_consistent (ae, a, as) (\\<Gamma>, e, Upd x # S)\"\n  shows a_consistent_var\\<^sub>2: \"a_consistent (ae, a, as) ((x, e) # \\<Gamma>, e, S)\" \n    and a_consistent_UpdD: \"ae x = up\\<cdot>0\"\"a = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a_consistent (ae, a, as) ((x, e) # \\<Gamma>, e, S) &&&\n    ae x = up\\<cdot>0 &&& a = 0", "using assms"], ["proof (prove)\nusing this:\n  a_consistent (ae, a, as) (\\<Gamma>, e, Upd x # S)\n\ngoal (1 subgoal):\n 1. a_consistent (ae, a, as) ((x, e) # \\<Gamma>, e, S) &&&\n    ae x = up\\<cdot>0 &&& a = 0", "by (auto simp add: join_below_iff env_restr_join a_consistent.simps \n               elim:below_trans[OF env_restr_mono[OF ABinds_delete_below]])"], ["", "lemma a_consistent_let:\n  assumes \"a_consistent (ae, a, as) (\\<Gamma>, Let \\<Delta> e, S)\"\n  assumes \"atom ` domA \\<Delta> \\<sharp>* \\<Gamma>\"\n  assumes \"atom ` domA \\<Delta> \\<sharp>* S\"\n  assumes \"edom ae \\<inter> domA \\<Delta> = {}\"\n  shows \"a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as) (\\<Delta> @ \\<Gamma>, e, S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n     (\\<Delta> @ \\<Gamma>, e, S)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n     (\\<Delta> @ \\<Gamma>, e, S)", "txt \\<open>\n    First some boring stuff about scope:\n\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n     (\\<Delta> @ \\<Gamma>, e, S)", "have [simp]: \"\\<And> S. S \\<subseteq> domA \\<Delta> \\<Longrightarrow> ae f|` S = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>S.\n       S \\<subseteq> domA \\<Delta> \\<Longrightarrow> ae f|` S = \\<bottom>", "using assms(4)"], ["proof (prove)\nusing this:\n  edom ae \\<inter> domA \\<Delta> = {}\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       S \\<subseteq> domA \\<Delta> \\<Longrightarrow> ae f|` S = \\<bottom>", "by auto"], ["proof (state)\nthis:\n  ?S \\<subseteq> domA \\<Delta> \\<Longrightarrow> ae f|` ?S = \\<bottom>\n\ngoal (1 subgoal):\n 1. a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n     (\\<Delta> @ \\<Gamma>, e, S)", "have [simp]: \"ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a \\<squnion> ae) = ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a \\<squnion> ae) =\n    ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a)", "by (rule Abinds_env_restr_cong) (simp add: env_restr_join)"], ["proof (state)\nthis:\n  ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a \\<squnion> ae) =\n  ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a)\n\ngoal (1 subgoal):\n 1. a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n     (\\<Delta> @ \\<Gamma>, e, S)", "have [simp]: \"Aheap \\<Delta> e\\<cdot>a f|` domA \\<Gamma> = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Aheap \\<Delta> e\\<cdot>a f|` domA \\<Gamma> = \\<bottom>", "using fresh_distinct[OF assms(2)]"], ["proof (prove)\nusing this:\n  domA \\<Delta> \\<inter> domA \\<Gamma> = {}\n\ngoal (1 subgoal):\n 1. Aheap \\<Delta> e\\<cdot>a f|` domA \\<Gamma> = \\<bottom>", "by (auto intro: env_restr_empty dest!: subsetD[OF edom_Aheap])"], ["proof (state)\nthis:\n  Aheap \\<Delta> e\\<cdot>a f|` domA \\<Gamma> = \\<bottom>\n\ngoal (1 subgoal):\n 1. a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n     (\\<Delta> @ \\<Gamma>, e, S)", "have [simp]: \"ABinds \\<Gamma>\\<cdot>(Aheap \\<Delta> e\\<cdot>a \\<squnion> ae) = ABinds \\<Gamma>\\<cdot>ae\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds \\<Gamma>\\<cdot>(Aheap \\<Delta> e\\<cdot>a \\<squnion> ae) =\n    ABinds \\<Gamma>\\<cdot>ae", "by (rule Abinds_env_restr_cong) (simp add: env_restr_join)"], ["proof (state)\nthis:\n  ABinds \\<Gamma>\\<cdot>(Aheap \\<Delta> e\\<cdot>a \\<squnion> ae) =\n  ABinds \\<Gamma>\\<cdot>ae\n\ngoal (1 subgoal):\n 1. a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n     (\\<Delta> @ \\<Gamma>, e, S)", "have [simp]: \"ABinds \\<Gamma>\\<cdot>ae f|` (domA \\<Delta> \\<union> domA \\<Gamma> \\<union> upds S)  = ABinds \\<Gamma>\\<cdot>ae f|` (domA \\<Gamma> \\<union> upds S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds \\<Gamma>\\<cdot>ae f|`\n    (domA \\<Delta> \\<union> domA \\<Gamma> \\<union> upds S) =\n    ABinds \\<Gamma>\\<cdot>ae f|` (domA \\<Gamma> \\<union> upds S)", "using fresh_distinct_fv[OF assms(2)]"], ["proof (prove)\nusing this:\n  domA \\<Delta> \\<inter> fv \\<Gamma> = {}\n\ngoal (1 subgoal):\n 1. ABinds \\<Gamma>\\<cdot>ae f|`\n    (domA \\<Delta> \\<union> domA \\<Gamma> \\<union> upds S) =\n    ABinds \\<Gamma>\\<cdot>ae f|` (domA \\<Gamma> \\<union> upds S)", "by (auto intro: env_restr_cong dest!: subsetD[OF edom_AnalBinds])"], ["proof (state)\nthis:\n  ABinds \\<Gamma>\\<cdot>ae f|`\n  (domA \\<Delta> \\<union> domA \\<Gamma> \\<union> upds S) =\n  ABinds \\<Gamma>\\<cdot>ae f|` (domA \\<Gamma> \\<union> upds S)\n\ngoal (1 subgoal):\n 1. a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n     (\\<Delta> @ \\<Gamma>, e, S)", "have [simp]: \"AEstack as S f|` (domA \\<Delta> \\<union> domA \\<Gamma> \\<union> upds S) = AEstack as S f|` (domA \\<Gamma> \\<union> upds S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AEstack as S f|`\n    (domA \\<Delta> \\<union> domA \\<Gamma> \\<union> upds S) =\n    AEstack as S f|` (domA \\<Gamma> \\<union> upds S)", "using fresh_distinct_fv[OF assms(3)]"], ["proof (prove)\nusing this:\n  domA \\<Delta> \\<inter> fv S = {}\n\ngoal (1 subgoal):\n 1. AEstack as S f|`\n    (domA \\<Delta> \\<union> domA \\<Gamma> \\<union> upds S) =\n    AEstack as S f|` (domA \\<Gamma> \\<union> upds S)", "by (auto intro: env_restr_cong dest!:  subsetD[OF edom_AEstack])"], ["proof (state)\nthis:\n  AEstack as S f|` (domA \\<Delta> \\<union> domA \\<Gamma> \\<union> upds S) =\n  AEstack as S f|` (domA \\<Gamma> \\<union> upds S)\n\ngoal (1 subgoal):\n 1. a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n     (\\<Delta> @ \\<Gamma>, e, S)", "have [simp]: \"Aexp (Let \\<Delta> e)\\<cdot>a f|` (domA \\<Delta> \\<union> domA \\<Gamma> \\<union> upds S) = Aexp (Terms.Let \\<Delta> e)\\<cdot>a f|` (domA \\<Gamma> \\<union> upds S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e) f|`\n    (domA \\<Delta> \\<union> domA \\<Gamma> \\<union> upds S) =\n    \\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e) f|`\n    (domA \\<Gamma> \\<union> upds S)", "by (rule env_restr_cong) (auto dest!: subsetD[OF Aexp_edom])"], ["proof (state)\nthis:\n  \\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e) f|`\n  (domA \\<Delta> \\<union> domA \\<Gamma> \\<union> upds S) =\n  \\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e) f|`\n  (domA \\<Gamma> \\<union> upds S)\n\ngoal (1 subgoal):\n 1. a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n     (\\<Delta> @ \\<Gamma>, e, S)", "have [simp]: \"Aheap \\<Delta> e\\<cdot>a f|` (domA \\<Delta> \\<union> domA \\<Gamma> \\<union> upds S) = Aheap \\<Delta> e\\<cdot>a \""], ["proof (prove)\ngoal (1 subgoal):\n 1. Aheap \\<Delta> e\\<cdot>a f|`\n    (domA \\<Delta> \\<union> domA \\<Gamma> \\<union> upds S) =\n    Aheap \\<Delta> e\\<cdot>a", "by (rule env_restr_useless) (auto dest!: subsetD[OF edom_Aheap])"], ["proof (state)\nthis:\n  Aheap \\<Delta> e\\<cdot>a f|`\n  (domA \\<Delta> \\<union> domA \\<Gamma> \\<union> upds S) =\n  Aheap \\<Delta> e\\<cdot>a\n\ngoal (1 subgoal):\n 1. a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n     (\\<Delta> @ \\<Gamma>, e, S)", "have \"((ABinds \\<Gamma>)\\<cdot>ae \\<squnion> AEstack as S) f|` (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq> ae\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ABinds \\<Gamma>\\<cdot>ae \\<squnion> AEstack as S) f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    ae", "using assms(1)"], ["proof (prove)\nusing this:\n  a_consistent (ae, a, as) (\\<Gamma>, Terms.Let \\<Delta> e, S)\n\ngoal (1 subgoal):\n 1. (ABinds \\<Gamma>\\<cdot>ae \\<squnion> AEstack as S) f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    ae", "by (auto simp add: a_consistent.simps join_below_iff env_restr_join)"], ["proof (state)\nthis:\n  (ABinds \\<Gamma>\\<cdot>ae \\<squnion> AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n     (\\<Delta> @ \\<Gamma>, e, S)", "moreover"], ["proof (state)\nthis:\n  (ABinds \\<Gamma>\\<cdot>ae \\<squnion> AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n     (\\<Delta> @ \\<Gamma>, e, S)", "have\" Aexp (Let \\<Delta> e)\\<cdot>a f|` (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq> ae\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e) f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    ae", "using assms(1)"], ["proof (prove)\nusing this:\n  a_consistent (ae, a, as) (\\<Gamma>, Terms.Let \\<Delta> e, S)\n\ngoal (1 subgoal):\n 1. \\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e) f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    ae", "by (auto simp add: a_consistent.simps join_below_iff env_restr_join)"], ["proof (state)\nthis:\n  \\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n     (\\<Delta> @ \\<Gamma>, e, S)", "moreover"], ["proof (state)\nthis:\n  \\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n     (\\<Delta> @ \\<Gamma>, e, S)", "have \"ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a) \\<squnion> Aexp e\\<cdot>a \\<sqsubseteq> Aheap \\<Delta> e\\<cdot>a \\<squnion> Aexp (Let \\<Delta> e)\\<cdot>a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a) \\<squnion>\n    \\<A>\\<^bsub>a\\<^esub> e \\<sqsubseteq>\n    Aheap \\<Delta> e\\<cdot>a \\<squnion>\n    \\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e)", "by (rule Aexp_Let)"], ["proof (state)\nthis:\n  ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a) \\<squnion>\n  \\<A>\\<^bsub>a\\<^esub> e \\<sqsubseteq>\n  Aheap \\<Delta> e\\<cdot>a \\<squnion>\n  \\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e)\n\ngoal (1 subgoal):\n 1. a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n     (\\<Delta> @ \\<Gamma>, e, S)", "ultimately"], ["proof (chain)\npicking this:\n  (ABinds \\<Gamma>\\<cdot>ae \\<squnion> AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n  \\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n  ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a) \\<squnion>\n  \\<A>\\<^bsub>a\\<^esub> e \\<sqsubseteq>\n  Aheap \\<Delta> e\\<cdot>a \\<squnion>\n  \\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e)", "have \"(ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>(Aheap \\<Delta> e\\<cdot>a \\<squnion> ae) \\<squnion> Aexp e\\<cdot>a \\<squnion> AEstack as S) f|` (domA (\\<Delta>@\\<Gamma>) \\<union> upds S) \\<sqsubseteq> Aheap \\<Delta> e\\<cdot>a \\<squnion> ae\""], ["proof (prove)\nusing this:\n  (ABinds \\<Gamma>\\<cdot>ae \\<squnion> AEstack as S) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n  \\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n  ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a) \\<squnion>\n  \\<A>\\<^bsub>a\\<^esub> e \\<sqsubseteq>\n  Aheap \\<Delta> e\\<cdot>a \\<squnion>\n  \\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e)\n\ngoal (1 subgoal):\n 1. (ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>\n     (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae) \\<squnion>\n     \\<A>\\<^bsub>a\\<^esub> e \\<squnion>\n     AEstack as S) f|`\n    (domA (\\<Delta> @ \\<Gamma>) \\<union> upds S) \\<sqsubseteq>\n    Aheap \\<Delta> e\\<cdot>a \\<squnion> ae", "by (auto 4 4 simp add: env_restr_join Abinds_append_disjoint[OF fresh_distinct[OF assms(2)]] join_below_iff\n                 simp del: join_comm\n                 elim: below_trans below_trans[OF env_restr_mono])"], ["proof (state)\nthis:\n  (ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>\n   (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae) \\<squnion>\n   \\<A>\\<^bsub>a\\<^esub> e \\<squnion>\n   AEstack as S) f|`\n  (domA (\\<Delta> @ \\<Gamma>) \\<union> upds S) \\<sqsubseteq>\n  Aheap \\<Delta> e\\<cdot>a \\<squnion> ae\n\ngoal (1 subgoal):\n 1. a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n     (\\<Delta> @ \\<Gamma>, e, S)", "moreover"], ["proof (state)\nthis:\n  (ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>\n   (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae) \\<squnion>\n   \\<A>\\<^bsub>a\\<^esub> e \\<squnion>\n   AEstack as S) f|`\n  (domA (\\<Delta> @ \\<Gamma>) \\<union> upds S) \\<sqsubseteq>\n  Aheap \\<Delta> e\\<cdot>a \\<squnion> ae\n\ngoal (1 subgoal):\n 1. a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n     (\\<Delta> @ \\<Gamma>, e, S)", "note fresh_distinct[OF assms(2)]"], ["proof (state)\nthis:\n  domA \\<Delta> \\<inter> domA \\<Gamma> = {}\n\ngoal (1 subgoal):\n 1. a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n     (\\<Delta> @ \\<Gamma>, e, S)", "moreover"], ["proof (state)\nthis:\n  domA \\<Delta> \\<inter> domA \\<Gamma> = {}\n\ngoal (1 subgoal):\n 1. a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n     (\\<Delta> @ \\<Gamma>, e, S)", "from fresh_distinct_fv[OF assms(3)]"], ["proof (chain)\npicking this:\n  domA \\<Delta> \\<inter> fv S = {}", "have  \"domA \\<Delta> \\<inter> upds S = {}\""], ["proof (prove)\nusing this:\n  domA \\<Delta> \\<inter> fv S = {}\n\ngoal (1 subgoal):\n 1. domA \\<Delta> \\<inter> upds S = {}", "by (auto dest!: subsetD[OF ups_fv_subset])"], ["proof (state)\nthis:\n  domA \\<Delta> \\<inter> upds S = {}\n\ngoal (1 subgoal):\n 1. a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n     (\\<Delta> @ \\<Gamma>, e, S)", "ultimately"], ["proof (chain)\npicking this:\n  (ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>\n   (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae) \\<squnion>\n   \\<A>\\<^bsub>a\\<^esub> e \\<squnion>\n   AEstack as S) f|`\n  (domA (\\<Delta> @ \\<Gamma>) \\<union> upds S) \\<sqsubseteq>\n  Aheap \\<Delta> e\\<cdot>a \\<squnion> ae\n  domA \\<Delta> \\<inter> domA \\<Gamma> = {}\n  domA \\<Delta> \\<inter> upds S = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  (ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>\n   (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae) \\<squnion>\n   \\<A>\\<^bsub>a\\<^esub> e \\<squnion>\n   AEstack as S) f|`\n  (domA (\\<Delta> @ \\<Gamma>) \\<union> upds S) \\<sqsubseteq>\n  Aheap \\<Delta> e\\<cdot>a \\<squnion> ae\n  domA \\<Delta> \\<inter> domA \\<Gamma> = {}\n  domA \\<Delta> \\<inter> upds S = {}\n\ngoal (1 subgoal):\n 1. a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n     (\\<Delta> @ \\<Gamma>, e, S)", "using assms(1)"], ["proof (prove)\nusing this:\n  (ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>\n   (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae) \\<squnion>\n   \\<A>\\<^bsub>a\\<^esub> e \\<squnion>\n   AEstack as S) f|`\n  (domA (\\<Delta> @ \\<Gamma>) \\<union> upds S) \\<sqsubseteq>\n  Aheap \\<Delta> e\\<cdot>a \\<squnion> ae\n  domA \\<Delta> \\<inter> domA \\<Gamma> = {}\n  domA \\<Delta> \\<inter> upds S = {}\n  a_consistent (ae, a, as) (\\<Gamma>, Terms.Let \\<Delta> e, S)\n\ngoal (1 subgoal):\n 1. a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n     (\\<Delta> @ \\<Gamma>, e, S)", "by (auto simp add: a_consistent.simps dest!: subsetD[OF edom_Aheap] intro: heap_upds_ok_append)"], ["proof (state)\nthis:\n  a_consistent (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae, a, as)\n   (\\<Delta> @ \\<Gamma>, e, S)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma a_consistent_if\\<^sub>1:\n  assumes \"a_consistent (ae, a, as) (\\<Gamma>, scrut ? e1 : e2, S)\"\n  shows \"a_consistent (ae, 0, a#as) (\\<Gamma>, scrut, Alts e1 e2 # S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a_consistent (ae, 0, a # as) (\\<Gamma>, scrut, Alts e1 e2 # S)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. a_consistent (ae, 0, a # as) (\\<Gamma>, scrut, Alts e1 e2 # S)", "from assms"], ["proof (chain)\npicking this:\n  a_consistent (ae, a, as) (\\<Gamma>, scrut ? e1 : e2, S)", "have \"Aexp (scrut ? e1 : e2)\\<cdot>a f|` (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq> ae\""], ["proof (prove)\nusing this:\n  a_consistent (ae, a, as) (\\<Gamma>, scrut ? e1 : e2, S)\n\ngoal (1 subgoal):\n 1. \\<A>\\<^bsub>a\\<^esub> (scrut ? e1 : e2) f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    ae", "by (auto simp add: a_consistent.simps env_restr_join join_below_iff)"], ["proof (state)\nthis:\n  \\<A>\\<^bsub>a\\<^esub> (scrut ? e1 : e2) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (ae, 0, a # as) (\\<Gamma>, scrut, Alts e1 e2 # S)", "hence \"(Aexp scrut\\<cdot>0 \\<squnion> Aexp e1\\<cdot>a \\<squnion> Aexp e2\\<cdot>a) f|` (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq> ae\""], ["proof (prove)\nusing this:\n  \\<A>\\<^bsub>a\\<^esub> (scrut ? e1 : e2) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. (\\<A>\\<^bsub>0\\<^esub> scrut \\<squnion>\n     \\<A>\\<^bsub>a\\<^esub> e1 \\<squnion>\n     \\<A>\\<^bsub>a\\<^esub> e2) f|`\n    (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n    ae", "by (rule below_trans[OF env_restr_mono[OF Aexp_IfThenElse]])"], ["proof (state)\nthis:\n  (\\<A>\\<^bsub>0\\<^esub> scrut \\<squnion>\n   \\<A>\\<^bsub>a\\<^esub> e1 \\<squnion>\n   \\<A>\\<^bsub>a\\<^esub> e2) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (ae, 0, a # as) (\\<Gamma>, scrut, Alts e1 e2 # S)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<A>\\<^bsub>0\\<^esub> scrut \\<squnion>\n   \\<A>\\<^bsub>a\\<^esub> e1 \\<squnion>\n   \\<A>\\<^bsub>a\\<^esub> e2) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n\ngoal (1 subgoal):\n 1. a_consistent (ae, 0, a # as) (\\<Gamma>, scrut, Alts e1 e2 # S)", "using assms"], ["proof (prove)\nusing this:\n  (\\<A>\\<^bsub>0\\<^esub> scrut \\<squnion>\n   \\<A>\\<^bsub>a\\<^esub> e1 \\<squnion>\n   \\<A>\\<^bsub>a\\<^esub> e2) f|`\n  (domA \\<Gamma> \\<union> upds S) \\<sqsubseteq>\n  ae\n  a_consistent (ae, a, as) (\\<Gamma>, scrut ? e1 : e2, S)\n\ngoal (1 subgoal):\n 1. a_consistent (ae, 0, a # as) (\\<Gamma>, scrut, Alts e1 e2 # S)", "by (auto simp add: a_consistent.simps join_below_iff env_restr_join)"], ["proof (state)\nthis:\n  a_consistent (ae, 0, a # as) (\\<Gamma>, scrut, Alts e1 e2 # S)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma a_consistent_if\\<^sub>2:\n  assumes \"a_consistent (ae, a, a'#as') (\\<Gamma>, Bool b, Alts e1 e2 # S)\"\n  shows \"a_consistent (ae, a', as') (\\<Gamma>, if b then e1 else e2, S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a_consistent (ae, a', as') (\\<Gamma>, if b then e1 else e2, S)", "using assms"], ["proof (prove)\nusing this:\n  a_consistent (ae, a, a' # as') (\\<Gamma>, Bool b, Alts e1 e2 # S)\n\ngoal (1 subgoal):\n 1. a_consistent (ae, a', as') (\\<Gamma>, if b then e1 else e2, S)", "by (auto simp add: a_consistent.simps join_below_iff env_restr_join)"], ["", "lemma a_consistent_alts_on_stack:\n  assumes \"a_consistent (ae, a, as) (\\<Gamma>, Bool b, Alts e1 e2 # S)\"\n  obtains a' as' where \"as = a' # as'\" \"a = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a' as'.\n        \\<lbrakk>as = a' # as'; a = 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  a_consistent (ae, a, as) (\\<Gamma>, Bool b, Alts e1 e2 # S)\n\ngoal (1 subgoal):\n 1. (\\<And>a' as'.\n        \\<lbrakk>as = a' # as'; a = 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: a_consistent.simps)"], ["", "lemma closed_a_consistent:\n  \"fv e = ({}::var set) \\<Longrightarrow> a_consistent (\\<bottom>, 0, []) ([], e, [])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fv e = {} \\<Longrightarrow> a_consistent (\\<bottom>, 0, []) ([], e, [])", "by (auto simp add: edom_empty_iff_bot a_consistent.simps  dest!: subsetD[OF Aexp_edom])"], ["", "end"], ["", "end"]]}