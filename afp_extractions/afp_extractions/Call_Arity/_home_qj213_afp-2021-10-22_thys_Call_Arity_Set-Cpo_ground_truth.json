{"file_name": "/home/qj213/afp-2021-10-22/thys/Call_Arity/Set-Cpo.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Call_Arity", "problem_names": ["lemma is_lub_set:\n  \"S <<| \\<Union>S\"", "lemma lub_set: \"lub S = \\<Union>S\"", "lemma minimal_set: \"{} \\<sqsubseteq> S\"", "lemma set_contI:\n  assumes  \"\\<And> Y. chain Y \\<Longrightarrow> f (\\<Squnion> i. Y i) = \\<Union> (f ` range Y)\"\n  shows \"cont f\"", "lemma set_set_contI:\n  assumes  \"\\<And> S. f (\\<Union>S) = \\<Union> (f ` S)\"\n  shows \"cont f\"", "lemma adm_subseteq[simp]:\n  assumes \"cont f\"\n  shows \"adm (\\<lambda>a. f a \\<subseteq> S)\"", "lemma adm_Ball[simp]: \"adm (\\<lambda>S. \\<forall>x\\<in>S. P x)\"", "lemma finite_subset_chain:\n  fixes Y :: \"nat \\<Rightarrow> 'a set\"\n  assumes \"chain Y\"\n  assumes \"S \\<subseteq> \\<Union>(Y ` UNIV)\"\n  assumes \"finite S\"\n  shows \"\\<exists>i. S \\<subseteq> Y i\"", "lemma diff_cont[THEN cont_compose, simp, cont2cont]:\n  fixes S' :: \"'a set\"\n  shows  \"cont (\\<lambda>S. S - S')\""], "translations": [["", "lemma is_lub_set:\n  \"S <<| \\<Union>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S <<| \\<Union> S", "by(auto simp add: is_lub_def below_set_def is_ub_def)"], ["", "lemma lub_set: \"lub S = \\<Union>S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lub S = \\<Union> S", "by (metis is_lub_set lub_eqI)"], ["", "instance set  :: (type) cpo"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a set, cpo_class)", "by standard (rule exI, rule is_lub_set)"], ["", "lemma minimal_set: \"{} \\<sqsubseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<sqsubseteq> S", "unfolding below_set_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<subseteq> S", "by simp"], ["", "instance set  :: (type) pcpo"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a set, pcpo_class)", "by standard (rule+, rule minimal_set)"], ["", "lemma set_contI:\n  assumes  \"\\<And> Y. chain Y \\<Longrightarrow> f (\\<Squnion> i. Y i) = \\<Union> (f ` range Y)\"\n  shows \"cont f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cont f", "proof(rule contI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Y.\n       chain Y \\<Longrightarrow>\n       range (\\<lambda>i. f (Y i)) <<| f (\\<Squnion>i. Y i)", "fix Y :: \"nat \\<Rightarrow> 'a\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Y.\n       chain Y \\<Longrightarrow>\n       range (\\<lambda>i. f (Y i)) <<| f (\\<Squnion>i. Y i)", "assume \"chain Y\""], ["proof (state)\nthis:\n  chain Y\n\ngoal (1 subgoal):\n 1. \\<And>Y.\n       chain Y \\<Longrightarrow>\n       range (\\<lambda>i. f (Y i)) <<| f (\\<Squnion>i. Y i)", "hence \"f (\\<Squnion> i. Y i) = \\<Union> (f ` range Y)\""], ["proof (prove)\nusing this:\n  chain Y\n\ngoal (1 subgoal):\n 1. f (\\<Squnion>i. Y i) = \\<Union> (f ` range Y)", "by (rule assms)"], ["proof (state)\nthis:\n  f (\\<Squnion>i. Y i) = \\<Union> (f ` range Y)\n\ngoal (1 subgoal):\n 1. \\<And>Y.\n       chain Y \\<Longrightarrow>\n       range (\\<lambda>i. f (Y i)) <<| f (\\<Squnion>i. Y i)", "also"], ["proof (state)\nthis:\n  f (\\<Squnion>i. Y i) = \\<Union> (f ` range Y)\n\ngoal (1 subgoal):\n 1. \\<And>Y.\n       chain Y \\<Longrightarrow>\n       range (\\<lambda>i. f (Y i)) <<| f (\\<Squnion>i. Y i)", "have \"\\<dots> = \\<Union> (range (\\<lambda>i. f (Y i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (f ` range Y) = (\\<Union>i. f (Y i))", "by simp"], ["proof (state)\nthis:\n  \\<Union> (f ` range Y) = (\\<Union>i. f (Y i))\n\ngoal (1 subgoal):\n 1. \\<And>Y.\n       chain Y \\<Longrightarrow>\n       range (\\<lambda>i. f (Y i)) <<| f (\\<Squnion>i. Y i)", "finally"], ["proof (chain)\npicking this:\n  f (\\<Squnion>i. Y i) = (\\<Union>i. f (Y i))", "show \"range (\\<lambda>i. f (Y i)) <<| f (\\<Squnion> i. Y i)\""], ["proof (prove)\nusing this:\n  f (\\<Squnion>i. Y i) = (\\<Union>i. f (Y i))\n\ngoal (1 subgoal):\n 1. range (\\<lambda>i. f (Y i)) <<| f (\\<Squnion>i. Y i)", "using is_lub_set"], ["proof (prove)\nusing this:\n  f (\\<Squnion>i. Y i) = (\\<Union>i. f (Y i))\n  ?S <<| \\<Union> ?S\n\ngoal (1 subgoal):\n 1. range (\\<lambda>i. f (Y i)) <<| f (\\<Squnion>i. Y i)", "by metis"], ["proof (state)\nthis:\n  range (\\<lambda>i. f (Y i)) <<| f (\\<Squnion>i. Y i)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma set_set_contI:\n  assumes  \"\\<And> S. f (\\<Union>S) = \\<Union> (f ` S)\"\n  shows \"cont f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cont f", "by (metis set_contI assms is_lub_set  lub_eqI)"], ["", "lemma adm_subseteq[simp]:\n  assumes \"cont f\"\n  shows \"adm (\\<lambda>a. f a \\<subseteq> S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. adm (\\<lambda>a. f a \\<subseteq> S)", "by (rule admI)(auto simp add: cont2contlubE[OF assms] lub_set)"], ["", "lemma adm_Ball[simp]: \"adm (\\<lambda>S. \\<forall>x\\<in>S. P x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. adm (\\<lambda>S. \\<forall>x\\<in>S. P x)", "by (auto intro!: admI  simp add: lub_set)"], ["", "lemma finite_subset_chain:\n  fixes Y :: \"nat \\<Rightarrow> 'a set\"\n  assumes \"chain Y\"\n  assumes \"S \\<subseteq> \\<Union>(Y ` UNIV)\"\n  assumes \"finite S\"\n  shows \"\\<exists>i. S \\<subseteq> Y i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i. S \\<subseteq> Y i", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i. S \\<subseteq> Y i", "from assms(2)"], ["proof (chain)\npicking this:\n  S \\<subseteq> \\<Union> (range Y)", "have \"\\<forall>x \\<in> S. \\<exists> i. x \\<in> Y i\""], ["proof (prove)\nusing this:\n  S \\<subseteq> \\<Union> (range Y)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>S. \\<exists>i. x \\<in> Y i", "by auto"], ["proof (state)\nthis:\n  \\<forall>x\\<in>S. \\<exists>i. x \\<in> Y i\n\ngoal (1 subgoal):\n 1. \\<exists>i. S \\<subseteq> Y i", "then"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>S. \\<exists>i. x \\<in> Y i", "obtain f where f: \"\\<forall> x\\<in> S. x \\<in> Y (f x)\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>S. \\<exists>i. x \\<in> Y i\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<forall>x\\<in>S. x \\<in> Y (f x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<forall>x\\<in>S. x \\<in> Y (f x)\n\ngoal (1 subgoal):\n 1. \\<exists>i. S \\<subseteq> Y i", "define i where \"i = Max (f ` S)\""], ["proof (state)\nthis:\n  i = Max (f ` S)\n\ngoal (1 subgoal):\n 1. \\<exists>i. S \\<subseteq> Y i", "from \\<open>finite S\\<close>"], ["proof (chain)\npicking this:\n  finite S", "have \"finite (f ` S)\""], ["proof (prove)\nusing this:\n  finite S\n\ngoal (1 subgoal):\n 1. finite (f ` S)", "by simp"], ["proof (state)\nthis:\n  finite (f ` S)\n\ngoal (1 subgoal):\n 1. \\<exists>i. S \\<subseteq> Y i", "hence \"\\<forall> x\\<in>S. f x \\<le> i\""], ["proof (prove)\nusing this:\n  finite (f ` S)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>S. f x \\<le> i", "unfolding i_def"], ["proof (prove)\nusing this:\n  finite (f ` S)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>S. f x \\<le> Max (f ` S)", "by auto"], ["proof (state)\nthis:\n  \\<forall>x\\<in>S. f x \\<le> i\n\ngoal (1 subgoal):\n 1. \\<exists>i. S \\<subseteq> Y i", "with chain_mono[OF \\<open>chain Y\\<close>]"], ["proof (chain)\npicking this:\n  ?i \\<le> ?j \\<Longrightarrow> Y ?i \\<sqsubseteq> Y ?j\n  \\<forall>x\\<in>S. f x \\<le> i", "have \"\\<forall> x\\<in>S. Y (f x) \\<subseteq> Y i\""], ["proof (prove)\nusing this:\n  ?i \\<le> ?j \\<Longrightarrow> Y ?i \\<sqsubseteq> Y ?j\n  \\<forall>x\\<in>S. f x \\<le> i\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>S. Y (f x) \\<subseteq> Y i", "by (auto simp add: below_set_def)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>S. Y (f x) \\<subseteq> Y i\n\ngoal (1 subgoal):\n 1. \\<exists>i. S \\<subseteq> Y i", "with f"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>S. x \\<in> Y (f x)\n  \\<forall>x\\<in>S. Y (f x) \\<subseteq> Y i", "have \"S \\<subseteq> Y i\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>S. x \\<in> Y (f x)\n  \\<forall>x\\<in>S. Y (f x) \\<subseteq> Y i\n\ngoal (1 subgoal):\n 1. S \\<subseteq> Y i", "by auto"], ["proof (state)\nthis:\n  S \\<subseteq> Y i\n\ngoal (1 subgoal):\n 1. \\<exists>i. S \\<subseteq> Y i", "thus ?thesis"], ["proof (prove)\nusing this:\n  S \\<subseteq> Y i\n\ngoal (1 subgoal):\n 1. \\<exists>i. S \\<subseteq> Y i", ".."], ["proof (state)\nthis:\n  \\<exists>i. S \\<subseteq> Y i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diff_cont[THEN cont_compose, simp, cont2cont]:\n  fixes S' :: \"'a set\"\n  shows  \"cont (\\<lambda>S. S - S')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cont (\\<lambda>S. S - S')", "by (rule set_set_contI) simp"], ["", "end"]]}