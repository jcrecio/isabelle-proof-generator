{"file_name": "/home/qj213/afp-2021-10-22/thys/Call_Arity/NoCardinalityAnalysis.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Call_Arity", "problem_names": ["lemma a2c_simp: \"a2c\\<cdot>a = (if a \\<sqsubseteq> \\<bottom> then \\<bottom> else many)\"", "lemma a2c_eqvt[eqvt]: \"\\<pi> \\<bullet> a2c = a2c\"", "lemma ae2ce_cont: \"cont ae2ce\"", "lemmas cont_compose[OF ae2ce_cont, cont2cont, simp]", "lemma ae2ce_eqvt[eqvt]: \"\\<pi> \\<bullet> ae2ce ae x = ae2ce (\\<pi> \\<bullet> ae) (\\<pi> \\<bullet> x)\"", "lemma ae2ce_to_env_restr: \"ae2ce ae = (\\<lambda>_ . many) f|` edom ae\"", "lemma edom_ae2ce[simp]: \"edom (ae2ce ae) = edom ae\"", "lemma cHeap_simp[simp]: \"cHeap \\<Gamma> e\\<cdot>a = ae2ce (Aheap \\<Gamma> e\\<cdot>a)\"", "lemma record_all_noop[simp]:\n  \"record_call x\\<cdot>((\\<lambda>_. many) f|` S) = (\\<lambda>_. many) f|` S\"", "lemma const_on_restr_constI[intro]:\n  \"S' \\<subseteq> S \\<Longrightarrow> const_on ((\\<lambda> _. x) f|` S) S' x\"", "lemma ap_subset_edom_AEstack: \"ap S \\<subseteq> edom (AEstack as S)\""], "translations": [["", "lemma a2c_simp: \"a2c\\<cdot>a = (if a \\<sqsubseteq> \\<bottom> then \\<bottom> else many)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a2c\\<cdot>a = (if a \\<sqsubseteq> \\<bottom> then none else many)", "unfolding a2c_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Lambda> a. if a \\<sqsubseteq> \\<bottom> then none else many)\\<cdot>\n    a =\n    (if a \\<sqsubseteq> \\<bottom> then none else many)", "by (rule beta_cfun[OF cont_if_else_above]) auto"], ["", "lemma a2c_eqvt[eqvt]: \"\\<pi> \\<bullet> a2c = a2c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<bullet> a2c = a2c", "unfolding a2c_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<bullet> (\\<Lambda> a.\n                        if a \\<sqsubseteq> \\<bottom> then none else many) =\n    (\\<Lambda> a. if a \\<sqsubseteq> \\<bottom> then none else many)", "apply perm_simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<pi> \\<bullet> Abs_cfun)\n     (\\<lambda>x. if x \\<sqsubseteq> \\<bottom> then none else many) =\n    (\\<Lambda> a. if a \\<sqsubseteq> \\<bottom> then none else many)", "apply (rule Abs_cfun_eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. cont (\\<lambda>x. if x \\<sqsubseteq> \\<bottom> then none else many)", "apply (rule cont_if_else_above)"], ["proof (prove)\ngoal (5 subgoals):\n 1. cont (\\<lambda>x. none)\n 2. cont (\\<lambda>x. many)\n 3. \\<And>x. none \\<sqsubseteq> many\n 4. \\<And>x y.\n       \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> \\<bottom>\\<rbrakk>\n       \\<Longrightarrow> x \\<sqsubseteq> \\<bottom>\n 5. adm (\\<lambda>x. x \\<sqsubseteq> \\<bottom>)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition ae2ce :: \"AEnv \\<Rightarrow> (var \\<Rightarrow> two)\" where \"ae2ce ae x = a2c\\<cdot>(ae x)\""], ["", "lemma ae2ce_cont: \"cont ae2ce\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cont ae2ce", "by (auto simp add: ae2ce_def)"], ["", "lemmas cont_compose[OF ae2ce_cont, cont2cont, simp]"], ["", "lemma ae2ce_eqvt[eqvt]: \"\\<pi> \\<bullet> ae2ce ae x = ae2ce (\\<pi> \\<bullet> ae) (\\<pi> \\<bullet> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<bullet> ae2ce ae x =\n    ae2ce (\\<pi> \\<bullet> ae) (\\<pi> \\<bullet> x)", "unfolding ae2ce_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<bullet> a2c\\<cdot>(ae x) =\n    a2c\\<cdot>((\\<pi> \\<bullet> ae) (\\<pi> \\<bullet> x))", "by perm_simp rule"], ["", "lemma ae2ce_to_env_restr: \"ae2ce ae = (\\<lambda>_ . many) f|` edom ae\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ae2ce ae = (\\<lambda>_. many) f|` edom ae", "by (auto simp add: ae2ce_def lookup_env_restr_eq edom_def a2c_simp)"], ["", "lemma edom_ae2ce[simp]: \"edom (ae2ce ae) = edom ae\""], ["proof (prove)\ngoal (1 subgoal):\n 1. edom (ae2ce ae) = edom ae", "unfolding edom_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. ae2ce ae x \\<noteq> none} = {x. ae x \\<noteq> \\<bottom>}", "by (auto simp add: ae2ce_def  a2c_simp)"], ["", "definition cHeap :: \"heap \\<Rightarrow> exp \\<Rightarrow> Arity \\<rightarrow> (var \\<Rightarrow> two)\"\n  where \"cHeap \\<Gamma> e = (\\<Lambda> a. ae2ce (Aheap \\<Gamma> e\\<cdot>a))\""], ["", "lemma cHeap_simp[simp]: \"cHeap \\<Gamma> e\\<cdot>a = ae2ce (Aheap \\<Gamma> e\\<cdot>a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cHeap \\<Gamma> e\\<cdot>a = ae2ce (Aheap \\<Gamma> e\\<cdot>a)", "unfolding cHeap_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Lambda> a. ae2ce (Aheap \\<Gamma> e\\<cdot>a))\\<cdot>a =\n    ae2ce (Aheap \\<Gamma> e\\<cdot>a)", "by simp"], ["", "sublocale CardinalityHeap cHeap"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "sublocale CardinalityHeapSafe cHeap Aheap"], ["proof (prove)\ngoal (1 subgoal):\n 1. CardinalityHeapSafe cHeap Aheap", "apply standard"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x \\<Gamma> e a.\n       \\<lbrakk>x \\<in> thunks \\<Gamma>;\n        many \\<sqsubseteq> (cHeap \\<Gamma> e\\<cdot>a) x\\<rbrakk>\n       \\<Longrightarrow> (Aheap \\<Gamma> e\\<cdot>a) x = up\\<cdot>0\n 2. \\<And>\\<Delta> e a.\n       edom (cHeap \\<Delta> e\\<cdot>a) = edom (Aheap \\<Delta> e\\<cdot>a)", "apply (erule Aheap_thunk)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<Delta> e a.\n       edom (cHeap \\<Delta> e\\<cdot>a) = edom (Aheap \\<Delta> e\\<cdot>a)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "fun prognosis where \n  \"prognosis ae as a (\\<Gamma>, e, S) = ((\\<lambda>_. many) f|` (edom (ABinds \\<Gamma>\\<cdot>ae) \\<union> edom (Aexp e\\<cdot>a) \\<union> edom (AEstack as S)))\""], ["", "lemma record_all_noop[simp]:\n  \"record_call x\\<cdot>((\\<lambda>_. many) f|` S) = (\\<lambda>_. many) f|` S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. record_call x\\<cdot>((\\<lambda>_. many) f|` S) =\n    (\\<lambda>_. many) f|` S", "by (auto simp add: record_call_def lookup_env_restr_eq)"], ["", "lemma const_on_restr_constI[intro]:\n  \"S' \\<subseteq> S \\<Longrightarrow> const_on ((\\<lambda> _. x) f|` S) S' x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S' \\<subseteq> S \\<Longrightarrow> const_on ((\\<lambda>_. x) f|` S) S' x", "by fastforce"], ["", "lemma ap_subset_edom_AEstack: \"ap S \\<subseteq> edom (AEstack as S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ap S \\<subseteq> edom (AEstack as S)", "by (induction as S rule:AEstack.induct) (auto simp del: fun_meet_simp)"], ["", "sublocale CardinalityPrognosis prognosis"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "sublocale CardinalityPrognosisShape prognosis"], ["proof (prove)\ngoal (1 subgoal):\n 1. CardinalityPrognosisShape prognosis", "proof (standard, goal_cases)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma> ae ae' as u e S.\n       ae f|` domA \\<Gamma> = ae' f|` domA \\<Gamma> \\<Longrightarrow>\n       prognosis ae as u (\\<Gamma>, e, S) =\n       prognosis ae' as u (\\<Gamma>, e, S)\n 2. \\<And>\\<Gamma> \\<Delta> ae as u e S.\n       map_of \\<Gamma> = map_of \\<Delta> \\<Longrightarrow>\n       prognosis ae as u (\\<Gamma>, e, S) =\n       prognosis ae as u (\\<Delta>, e, S)\n 3. \\<And>ae as a \\<Gamma> e S.\n       const_on (prognosis ae as a (\\<Gamma>, e, S)) (ap S) many\n 4. \\<And>ae as u \\<Gamma> e S x.\n       prognosis ae as u (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as u (\\<Gamma>, e, Upd x # S)\n 5. \\<And>ae x as a \\<Gamma> e S.\n       ae x = \\<bottom> \\<Longrightarrow>\n       prognosis ae as a (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as a (delete x \\<Gamma>, e, S)\n 6. \\<And>ae as a \\<Gamma> x S.\n       once \\<sqsubseteq> prognosis ae as a (\\<Gamma>, Var x, S) x", "case 1"], ["proof (state)\nthis:\n  ae_ f|` domA \\<Gamma>_ = ae'_ f|` domA \\<Gamma>_\n\ngoal (6 subgoals):\n 1. \\<And>\\<Gamma> ae ae' as u e S.\n       ae f|` domA \\<Gamma> = ae' f|` domA \\<Gamma> \\<Longrightarrow>\n       prognosis ae as u (\\<Gamma>, e, S) =\n       prognosis ae' as u (\\<Gamma>, e, S)\n 2. \\<And>\\<Gamma> \\<Delta> ae as u e S.\n       map_of \\<Gamma> = map_of \\<Delta> \\<Longrightarrow>\n       prognosis ae as u (\\<Gamma>, e, S) =\n       prognosis ae as u (\\<Delta>, e, S)\n 3. \\<And>ae as a \\<Gamma> e S.\n       const_on (prognosis ae as a (\\<Gamma>, e, S)) (ap S) many\n 4. \\<And>ae as u \\<Gamma> e S x.\n       prognosis ae as u (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as u (\\<Gamma>, e, Upd x # S)\n 5. \\<And>ae x as a \\<Gamma> e S.\n       ae x = \\<bottom> \\<Longrightarrow>\n       prognosis ae as a (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as a (delete x \\<Gamma>, e, S)\n 6. \\<And>ae as a \\<Gamma> x S.\n       once \\<sqsubseteq> prognosis ae as a (\\<Gamma>, Var x, S) x", "thus ?case"], ["proof (prove)\nusing this:\n  ae_ f|` domA \\<Gamma>_ = ae'_ f|` domA \\<Gamma>_\n\ngoal (1 subgoal):\n 1. prognosis ae_ as_ u_ (\\<Gamma>_, e_, S_) =\n    prognosis ae'_ as_ u_ (\\<Gamma>_, e_, S_)", "by (simp cong: Abinds_env_restr_cong)"], ["proof (state)\nthis:\n  prognosis ae_ as_ u_ (\\<Gamma>_, e_, S_) =\n  prognosis ae'_ as_ u_ (\\<Gamma>_, e_, S_)\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> \\<Delta> ae as u e S.\n       map_of \\<Gamma> = map_of \\<Delta> \\<Longrightarrow>\n       prognosis ae as u (\\<Gamma>, e, S) =\n       prognosis ae as u (\\<Delta>, e, S)\n 2. \\<And>ae as a \\<Gamma> e S.\n       const_on (prognosis ae as a (\\<Gamma>, e, S)) (ap S) many\n 3. \\<And>ae as u \\<Gamma> e S x.\n       prognosis ae as u (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as u (\\<Gamma>, e, Upd x # S)\n 4. \\<And>ae x as a \\<Gamma> e S.\n       ae x = \\<bottom> \\<Longrightarrow>\n       prognosis ae as a (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as a (delete x \\<Gamma>, e, S)\n 5. \\<And>ae as a \\<Gamma> x S.\n       once \\<sqsubseteq> prognosis ae as a (\\<Gamma>, Var x, S) x", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> \\<Delta> ae as u e S.\n       map_of \\<Gamma> = map_of \\<Delta> \\<Longrightarrow>\n       prognosis ae as u (\\<Gamma>, e, S) =\n       prognosis ae as u (\\<Delta>, e, S)\n 2. \\<And>ae as a \\<Gamma> e S.\n       const_on (prognosis ae as a (\\<Gamma>, e, S)) (ap S) many\n 3. \\<And>ae as u \\<Gamma> e S x.\n       prognosis ae as u (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as u (\\<Gamma>, e, Upd x # S)\n 4. \\<And>ae x as a \\<Gamma> e S.\n       ae x = \\<bottom> \\<Longrightarrow>\n       prognosis ae as a (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as a (delete x \\<Gamma>, e, S)\n 5. \\<And>ae as a \\<Gamma> x S.\n       once \\<sqsubseteq> prognosis ae as a (\\<Gamma>, Var x, S) x", "case 2"], ["proof (state)\nthis:\n  map_of \\<Gamma>_ = map_of \\<Delta>_\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> \\<Delta> ae as u e S.\n       map_of \\<Gamma> = map_of \\<Delta> \\<Longrightarrow>\n       prognosis ae as u (\\<Gamma>, e, S) =\n       prognosis ae as u (\\<Delta>, e, S)\n 2. \\<And>ae as a \\<Gamma> e S.\n       const_on (prognosis ae as a (\\<Gamma>, e, S)) (ap S) many\n 3. \\<And>ae as u \\<Gamma> e S x.\n       prognosis ae as u (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as u (\\<Gamma>, e, Upd x # S)\n 4. \\<And>ae x as a \\<Gamma> e S.\n       ae x = \\<bottom> \\<Longrightarrow>\n       prognosis ae as a (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as a (delete x \\<Gamma>, e, S)\n 5. \\<And>ae as a \\<Gamma> x S.\n       once \\<sqsubseteq> prognosis ae as a (\\<Gamma>, Var x, S) x", "thus ?case"], ["proof (prove)\nusing this:\n  map_of \\<Gamma>_ = map_of \\<Delta>_\n\ngoal (1 subgoal):\n 1. prognosis ae_ as_ u_ (\\<Gamma>_, e_, S_) =\n    prognosis ae_ as_ u_ (\\<Delta>_, e_, S_)", "by (simp cong: Abinds_reorder)"], ["proof (state)\nthis:\n  prognosis ae_ as_ u_ (\\<Gamma>_, e_, S_) =\n  prognosis ae_ as_ u_ (\\<Delta>_, e_, S_)\n\ngoal (4 subgoals):\n 1. \\<And>ae as a \\<Gamma> e S.\n       const_on (prognosis ae as a (\\<Gamma>, e, S)) (ap S) many\n 2. \\<And>ae as u \\<Gamma> e S x.\n       prognosis ae as u (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as u (\\<Gamma>, e, Upd x # S)\n 3. \\<And>ae x as a \\<Gamma> e S.\n       ae x = \\<bottom> \\<Longrightarrow>\n       prognosis ae as a (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as a (delete x \\<Gamma>, e, S)\n 4. \\<And>ae as a \\<Gamma> x S.\n       once \\<sqsubseteq> prognosis ae as a (\\<Gamma>, Var x, S) x", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>ae as a \\<Gamma> e S.\n       const_on (prognosis ae as a (\\<Gamma>, e, S)) (ap S) many\n 2. \\<And>ae as u \\<Gamma> e S x.\n       prognosis ae as u (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as u (\\<Gamma>, e, Upd x # S)\n 3. \\<And>ae x as a \\<Gamma> e S.\n       ae x = \\<bottom> \\<Longrightarrow>\n       prognosis ae as a (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as a (delete x \\<Gamma>, e, S)\n 4. \\<And>ae as a \\<Gamma> x S.\n       once \\<sqsubseteq> prognosis ae as a (\\<Gamma>, Var x, S) x", "case 3"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. \\<And>ae as a \\<Gamma> e S.\n       const_on (prognosis ae as a (\\<Gamma>, e, S)) (ap S) many\n 2. \\<And>ae as u \\<Gamma> e S x.\n       prognosis ae as u (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as u (\\<Gamma>, e, Upd x # S)\n 3. \\<And>ae x as a \\<Gamma> e S.\n       ae x = \\<bottom> \\<Longrightarrow>\n       prognosis ae as a (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as a (delete x \\<Gamma>, e, S)\n 4. \\<And>ae as a \\<Gamma> x S.\n       once \\<sqsubseteq> prognosis ae as a (\\<Gamma>, Var x, S) x", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. const_on (prognosis ae_ as_ a_ (\\<Gamma>_, e_, S_)) (ap S_) many", "by (auto dest: subsetD[OF ap_subset_edom_AEstack])"], ["proof (state)\nthis:\n  const_on (prognosis ae_ as_ a_ (\\<Gamma>_, e_, S_)) (ap S_) many\n\ngoal (3 subgoals):\n 1. \\<And>ae as u \\<Gamma> e S x.\n       prognosis ae as u (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as u (\\<Gamma>, e, Upd x # S)\n 2. \\<And>ae x as a \\<Gamma> e S.\n       ae x = \\<bottom> \\<Longrightarrow>\n       prognosis ae as a (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as a (delete x \\<Gamma>, e, S)\n 3. \\<And>ae as a \\<Gamma> x S.\n       once \\<sqsubseteq> prognosis ae as a (\\<Gamma>, Var x, S) x", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ae as u \\<Gamma> e S x.\n       prognosis ae as u (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as u (\\<Gamma>, e, Upd x # S)\n 2. \\<And>ae x as a \\<Gamma> e S.\n       ae x = \\<bottom> \\<Longrightarrow>\n       prognosis ae as a (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as a (delete x \\<Gamma>, e, S)\n 3. \\<And>ae as a \\<Gamma> x S.\n       once \\<sqsubseteq> prognosis ae as a (\\<Gamma>, Var x, S) x", "case 4"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. \\<And>ae as u \\<Gamma> e S x.\n       prognosis ae as u (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as u (\\<Gamma>, e, Upd x # S)\n 2. \\<And>ae x as a \\<Gamma> e S.\n       ae x = \\<bottom> \\<Longrightarrow>\n       prognosis ae as a (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as a (delete x \\<Gamma>, e, S)\n 3. \\<And>ae as a \\<Gamma> x S.\n       once \\<sqsubseteq> prognosis ae as a (\\<Gamma>, Var x, S) x", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. prognosis ae_ as_ u_ (\\<Gamma>_, e_, S_) \\<sqsubseteq>\n    prognosis ae_ as_ u_ (\\<Gamma>_, e_, Upd x_ # S_)", "by (auto intro: env_restr_mono2 )"], ["proof (state)\nthis:\n  prognosis ae_ as_ u_ (\\<Gamma>_, e_, S_) \\<sqsubseteq>\n  prognosis ae_ as_ u_ (\\<Gamma>_, e_, Upd x_ # S_)\n\ngoal (2 subgoals):\n 1. \\<And>ae x as a \\<Gamma> e S.\n       ae x = \\<bottom> \\<Longrightarrow>\n       prognosis ae as a (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as a (delete x \\<Gamma>, e, S)\n 2. \\<And>ae as a \\<Gamma> x S.\n       once \\<sqsubseteq> prognosis ae as a (\\<Gamma>, Var x, S) x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ae x as a \\<Gamma> e S.\n       ae x = \\<bottom> \\<Longrightarrow>\n       prognosis ae as a (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as a (delete x \\<Gamma>, e, S)\n 2. \\<And>ae as a \\<Gamma> x S.\n       once \\<sqsubseteq> prognosis ae as a (\\<Gamma>, Var x, S) x", "case (5 ae x as a \\<Gamma> e S)"], ["proof (state)\nthis:\n  ae x = \\<bottom>\n\ngoal (2 subgoals):\n 1. \\<And>ae x as a \\<Gamma> e S.\n       ae x = \\<bottom> \\<Longrightarrow>\n       prognosis ae as a (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as a (delete x \\<Gamma>, e, S)\n 2. \\<And>ae as a \\<Gamma> x S.\n       once \\<sqsubseteq> prognosis ae as a (\\<Gamma>, Var x, S) x", "from \\<open>ae x = \\<bottom>\\<close>"], ["proof (chain)\npicking this:\n  ae x = \\<bottom>", "have \"ABinds (delete x \\<Gamma>)\\<cdot>ae = ABinds \\<Gamma>\\<cdot>ae\""], ["proof (prove)\nusing this:\n  ae x = \\<bottom>\n\ngoal (1 subgoal):\n 1. ABinds (delete x \\<Gamma>)\\<cdot>ae = ABinds \\<Gamma>\\<cdot>ae", "by (rule ABinds_delete_bot)"], ["proof (state)\nthis:\n  ABinds (delete x \\<Gamma>)\\<cdot>ae = ABinds \\<Gamma>\\<cdot>ae\n\ngoal (2 subgoals):\n 1. \\<And>ae x as a \\<Gamma> e S.\n       ae x = \\<bottom> \\<Longrightarrow>\n       prognosis ae as a (\\<Gamma>, e, S) \\<sqsubseteq>\n       prognosis ae as a (delete x \\<Gamma>, e, S)\n 2. \\<And>ae as a \\<Gamma> x S.\n       once \\<sqsubseteq> prognosis ae as a (\\<Gamma>, Var x, S) x", "thus ?case"], ["proof (prove)\nusing this:\n  ABinds (delete x \\<Gamma>)\\<cdot>ae = ABinds \\<Gamma>\\<cdot>ae\n\ngoal (1 subgoal):\n 1. prognosis ae as a (\\<Gamma>, e, S) \\<sqsubseteq>\n    prognosis ae as a (delete x \\<Gamma>, e, S)", "by simp"], ["proof (state)\nthis:\n  prognosis ae as a (\\<Gamma>, e, S) \\<sqsubseteq>\n  prognosis ae as a (delete x \\<Gamma>, e, S)\n\ngoal (1 subgoal):\n 1. \\<And>ae as a \\<Gamma> x S.\n       once \\<sqsubseteq> prognosis ae as a (\\<Gamma>, Var x, S) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ae as a \\<Gamma> x S.\n       once \\<sqsubseteq> prognosis ae as a (\\<Gamma>, Var x, S) x", "case (6 ae as a \\<Gamma> x S)"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>ae as a \\<Gamma> x S.\n       once \\<sqsubseteq> prognosis ae as a (\\<Gamma>, Var x, S) x", "from Aexp_Var[where n = a and x = x]"], ["proof (chain)\npicking this:\n  up\\<cdot>a \\<sqsubseteq> \\<A>\\<^bsub>a\\<^esub> (Var x) x", "have \"(Aexp (Var x)\\<cdot>a) x \\<noteq> \\<bottom>\""], ["proof (prove)\nusing this:\n  up\\<cdot>a \\<sqsubseteq> \\<A>\\<^bsub>a\\<^esub> (Var x) x\n\ngoal (1 subgoal):\n 1. \\<A>\\<^bsub>a\\<^esub> (Var x) x \\<noteq> \\<bottom>", "by auto"], ["proof (state)\nthis:\n  \\<A>\\<^bsub>a\\<^esub> (Var x) x \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. \\<And>ae as a \\<Gamma> x S.\n       once \\<sqsubseteq> prognosis ae as a (\\<Gamma>, Var x, S) x", "hence \"x \\<in> edom (Aexp (Var x)\\<cdot>a)\""], ["proof (prove)\nusing this:\n  \\<A>\\<^bsub>a\\<^esub> (Var x) x \\<noteq> \\<bottom>\n\ngoal (1 subgoal):\n 1. x \\<in> edom (\\<A>\\<^bsub>a\\<^esub> (Var x))", "by (simp add: edomIff)"], ["proof (state)\nthis:\n  x \\<in> edom (\\<A>\\<^bsub>a\\<^esub> (Var x))\n\ngoal (1 subgoal):\n 1. \\<And>ae as a \\<Gamma> x S.\n       once \\<sqsubseteq> prognosis ae as a (\\<Gamma>, Var x, S) x", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<in> edom (\\<A>\\<^bsub>a\\<^esub> (Var x))\n\ngoal (1 subgoal):\n 1. once \\<sqsubseteq> prognosis ae as a (\\<Gamma>, Var x, S) x", "by simp"], ["proof (state)\nthis:\n  once \\<sqsubseteq> prognosis ae as a (\\<Gamma>, Var x, S) x\n\ngoal:\nNo subgoals!", "qed"], ["", "sublocale CardinalityPrognosisApp prognosis"], ["proof (prove)\ngoal (1 subgoal):\n 1. CardinalityPrognosisApp prognosis", "proof (standard, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ae as a \\<Gamma> e x S.\n       prognosis ae as (inc\\<cdot>a) (\\<Gamma>, e, Arg x # S) \\<sqsubseteq>\n       prognosis ae as a (\\<Gamma>, App e x, S)", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>ae as a \\<Gamma> e x S.\n       prognosis ae as (inc\\<cdot>a) (\\<Gamma>, e, Arg x # S) \\<sqsubseteq>\n       prognosis ae as a (\\<Gamma>, App e x, S)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. prognosis ae_ as_ (inc\\<cdot>a_)\n     (\\<Gamma>_, e_, Arg x_ # S_) \\<sqsubseteq>\n    prognosis ae_ as_ a_ (\\<Gamma>_, App e_ x_, S_)", "using edom_mono[OF Aexp_App]"], ["proof (prove)\nusing this:\n  edom\n   (\\<A>\\<^bsub>inc\\<cdot>?n1\\<^esub> ?e1 \\<squnion>\n    esing ?x1\\<cdot>(up\\<cdot>0))\n  \\<subseteq> edom (\\<A>\\<^bsub>?n1\\<^esub> (App ?e1 ?x1))\n\ngoal (1 subgoal):\n 1. prognosis ae_ as_ (inc\\<cdot>a_)\n     (\\<Gamma>_, e_, Arg x_ # S_) \\<sqsubseteq>\n    prognosis ae_ as_ a_ (\\<Gamma>_, App e_ x_, S_)", "by (auto intro!: env_restr_mono2)"], ["proof (state)\nthis:\n  prognosis ae_ as_ (inc\\<cdot>a_)\n   (\\<Gamma>_, e_, Arg x_ # S_) \\<sqsubseteq>\n  prognosis ae_ as_ a_ (\\<Gamma>_, App e_ x_, S_)\n\ngoal:\nNo subgoals!", "qed"], ["", "sublocale CardinalityPrognosisLam prognosis"], ["proof (prove)\ngoal (1 subgoal):\n 1. CardinalityPrognosisLam prognosis", "proof (standard, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ae as a \\<Gamma> e y x S.\n       prognosis ae as (pred\\<cdot>a) (\\<Gamma>, e[y::=x], S) \\<sqsubseteq>\n       prognosis ae as a (\\<Gamma>, Lam [y]. e, Arg x # S)", "case (1 ae as a \\<Gamma> e y x S)"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>ae as a \\<Gamma> e y x S.\n       prognosis ae as (pred\\<cdot>a) (\\<Gamma>, e[y::=x], S) \\<sqsubseteq>\n       prognosis ae as a (\\<Gamma>, Lam [y]. e, Arg x # S)", "have \"edom (Aexp e[y::=x]\\<cdot>(pred\\<cdot>a)) \\<subseteq> insert x (edom (env_delete y (Aexp e\\<cdot>(pred\\<cdot>a))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. edom (\\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e[y::=x])\n    \\<subseteq> insert x\n                 (edom (env_delete y (\\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e)))", "by (auto dest: subsetD[OF edom_mono[OF Aexp_subst]] )"], ["proof (state)\nthis:\n  edom (\\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e[y::=x])\n  \\<subseteq> insert x\n               (edom (env_delete y (\\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e)))\n\ngoal (1 subgoal):\n 1. \\<And>ae as a \\<Gamma> e y x S.\n       prognosis ae as (pred\\<cdot>a) (\\<Gamma>, e[y::=x], S) \\<sqsubseteq>\n       prognosis ae as a (\\<Gamma>, Lam [y]. e, Arg x # S)", "also"], ["proof (state)\nthis:\n  edom (\\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e[y::=x])\n  \\<subseteq> insert x\n               (edom (env_delete y (\\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e)))\n\ngoal (1 subgoal):\n 1. \\<And>ae as a \\<Gamma> e y x S.\n       prognosis ae as (pred\\<cdot>a) (\\<Gamma>, e[y::=x], S) \\<sqsubseteq>\n       prognosis ae as a (\\<Gamma>, Lam [y]. e, Arg x # S)", "have \"\\<dots> \\<subseteq> insert x (edom (Aexp (Lam [y]. e)\\<cdot>a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert x (edom (env_delete y (\\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e)))\n    \\<subseteq> insert x (edom (\\<A>\\<^bsub>a\\<^esub> (Lam [y]. e)))", "using edom_mono[OF Aexp_Lam]"], ["proof (prove)\nusing this:\n  edom (env_delete ?y1 (\\<A>\\<^bsub>pred\\<cdot>?n1\\<^esub> ?e1))\n  \\<subseteq> edom (\\<A>\\<^bsub>?n1\\<^esub> (Lam [?y1]. ?e1))\n\ngoal (1 subgoal):\n 1. insert x (edom (env_delete y (\\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e)))\n    \\<subseteq> insert x (edom (\\<A>\\<^bsub>a\\<^esub> (Lam [y]. e)))", "by auto"], ["proof (state)\nthis:\n  insert x (edom (env_delete y (\\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e)))\n  \\<subseteq> insert x (edom (\\<A>\\<^bsub>a\\<^esub> (Lam [y]. e)))\n\ngoal (1 subgoal):\n 1. \\<And>ae as a \\<Gamma> e y x S.\n       prognosis ae as (pred\\<cdot>a) (\\<Gamma>, e[y::=x], S) \\<sqsubseteq>\n       prognosis ae as a (\\<Gamma>, Lam [y]. e, Arg x # S)", "finally"], ["proof (chain)\npicking this:\n  edom (\\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e[y::=x])\n  \\<subseteq> insert x (edom (\\<A>\\<^bsub>a\\<^esub> (Lam [y]. e)))", "show ?case"], ["proof (prove)\nusing this:\n  edom (\\<A>\\<^bsub>pred\\<cdot>a\\<^esub> e[y::=x])\n  \\<subseteq> insert x (edom (\\<A>\\<^bsub>a\\<^esub> (Lam [y]. e)))\n\ngoal (1 subgoal):\n 1. prognosis ae as (pred\\<cdot>a) (\\<Gamma>, e[y::=x], S) \\<sqsubseteq>\n    prognosis ae as a (\\<Gamma>, Lam [y]. e, Arg x # S)", "by (auto intro!: env_restr_mono2)"], ["proof (state)\nthis:\n  prognosis ae as (pred\\<cdot>a) (\\<Gamma>, e[y::=x], S) \\<sqsubseteq>\n  prognosis ae as a (\\<Gamma>, Lam [y]. e, Arg x # S)\n\ngoal:\nNo subgoals!", "qed"], ["", "sublocale CardinalityPrognosisVar prognosis"], ["proof (prove)\ngoal (1 subgoal):\n 1. CardinalityPrognosisVar prognosis", "proof (standard, goal_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> x e ae u as S a.\n       \\<lbrakk>map_of \\<Gamma> x = Some e; ae x = up\\<cdot>u;\n        isVal e\\<rbrakk>\n       \\<Longrightarrow> prognosis ae as u (\\<Gamma>, e, S) \\<sqsubseteq>\n                         record_call x\\<cdot>\n                         (prognosis ae as a (\\<Gamma>, Var x, S))\n 2. \\<And>\\<Gamma> x e ae u as S a.\n       \\<lbrakk>map_of \\<Gamma> x = Some e; ae x = up\\<cdot>u;\n        \\<not> isVal e\\<rbrakk>\n       \\<Longrightarrow> prognosis ae as u\n                          (delete x \\<Gamma>, e, Upd x # S) \\<sqsubseteq>\n                         record_call x\\<cdot>\n                         (prognosis ae as a (\\<Gamma>, Var x, S))\n 3. \\<And>e x \\<Gamma> ae as S.\n       \\<lbrakk>isVal e; x \\<notin> domA \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> prognosis ae as 0\n                          ((x, e) # \\<Gamma>, e, S) \\<sqsubseteq>\n                         prognosis ae as 0 (\\<Gamma>, e, Upd x # S)", "case prems: 1"], ["proof (state)\nthis:\n  map_of \\<Gamma>_ x_ = Some e_\n  ae_ x_ = up\\<cdot>u_\n  isVal e_\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> x e ae u as S a.\n       \\<lbrakk>map_of \\<Gamma> x = Some e; ae x = up\\<cdot>u;\n        isVal e\\<rbrakk>\n       \\<Longrightarrow> prognosis ae as u (\\<Gamma>, e, S) \\<sqsubseteq>\n                         record_call x\\<cdot>\n                         (prognosis ae as a (\\<Gamma>, Var x, S))\n 2. \\<And>\\<Gamma> x e ae u as S a.\n       \\<lbrakk>map_of \\<Gamma> x = Some e; ae x = up\\<cdot>u;\n        \\<not> isVal e\\<rbrakk>\n       \\<Longrightarrow> prognosis ae as u\n                          (delete x \\<Gamma>, e, Upd x # S) \\<sqsubseteq>\n                         record_call x\\<cdot>\n                         (prognosis ae as a (\\<Gamma>, Var x, S))\n 3. \\<And>e x \\<Gamma> ae as S.\n       \\<lbrakk>isVal e; x \\<notin> domA \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> prognosis ae as 0\n                          ((x, e) # \\<Gamma>, e, S) \\<sqsubseteq>\n                         prognosis ae as 0 (\\<Gamma>, e, Upd x # S)", "thus ?case"], ["proof (prove)\nusing this:\n  map_of \\<Gamma>_ x_ = Some e_\n  ae_ x_ = up\\<cdot>u_\n  isVal e_\n\ngoal (1 subgoal):\n 1. prognosis ae_ as_ u_ (\\<Gamma>_, e_, S_) \\<sqsubseteq>\n    record_call x_\\<cdot>(prognosis ae_ as_ a_ (\\<Gamma>_, Var x_, S_))", "by (auto intro!: env_restr_mono2 simp add: Abinds_reorder1[OF prems(1)])"], ["proof (state)\nthis:\n  prognosis ae_ as_ u_ (\\<Gamma>_, e_, S_) \\<sqsubseteq>\n  record_call x_\\<cdot>(prognosis ae_ as_ a_ (\\<Gamma>_, Var x_, S_))\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> x e ae u as S a.\n       \\<lbrakk>map_of \\<Gamma> x = Some e; ae x = up\\<cdot>u;\n        \\<not> isVal e\\<rbrakk>\n       \\<Longrightarrow> prognosis ae as u\n                          (delete x \\<Gamma>, e, Upd x # S) \\<sqsubseteq>\n                         record_call x\\<cdot>\n                         (prognosis ae as a (\\<Gamma>, Var x, S))\n 2. \\<And>e x \\<Gamma> ae as S.\n       \\<lbrakk>isVal e; x \\<notin> domA \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> prognosis ae as 0\n                          ((x, e) # \\<Gamma>, e, S) \\<sqsubseteq>\n                         prognosis ae as 0 (\\<Gamma>, e, Upd x # S)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> x e ae u as S a.\n       \\<lbrakk>map_of \\<Gamma> x = Some e; ae x = up\\<cdot>u;\n        \\<not> isVal e\\<rbrakk>\n       \\<Longrightarrow> prognosis ae as u\n                          (delete x \\<Gamma>, e, Upd x # S) \\<sqsubseteq>\n                         record_call x\\<cdot>\n                         (prognosis ae as a (\\<Gamma>, Var x, S))\n 2. \\<And>e x \\<Gamma> ae as S.\n       \\<lbrakk>isVal e; x \\<notin> domA \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> prognosis ae as 0\n                          ((x, e) # \\<Gamma>, e, S) \\<sqsubseteq>\n                         prognosis ae as 0 (\\<Gamma>, e, Upd x # S)", "case prems: 2"], ["proof (state)\nthis:\n  map_of \\<Gamma>_ x_ = Some e_\n  ae_ x_ = up\\<cdot>u_\n  \\<not> isVal e_\n\ngoal (2 subgoals):\n 1. \\<And>\\<Gamma> x e ae u as S a.\n       \\<lbrakk>map_of \\<Gamma> x = Some e; ae x = up\\<cdot>u;\n        \\<not> isVal e\\<rbrakk>\n       \\<Longrightarrow> prognosis ae as u\n                          (delete x \\<Gamma>, e, Upd x # S) \\<sqsubseteq>\n                         record_call x\\<cdot>\n                         (prognosis ae as a (\\<Gamma>, Var x, S))\n 2. \\<And>e x \\<Gamma> ae as S.\n       \\<lbrakk>isVal e; x \\<notin> domA \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> prognosis ae as 0\n                          ((x, e) # \\<Gamma>, e, S) \\<sqsubseteq>\n                         prognosis ae as 0 (\\<Gamma>, e, Upd x # S)", "thus ?case"], ["proof (prove)\nusing this:\n  map_of \\<Gamma>_ x_ = Some e_\n  ae_ x_ = up\\<cdot>u_\n  \\<not> isVal e_\n\ngoal (1 subgoal):\n 1. prognosis ae_ as_ u_\n     (delete x_ \\<Gamma>_, e_, Upd x_ # S_) \\<sqsubseteq>\n    record_call x_\\<cdot>(prognosis ae_ as_ a_ (\\<Gamma>_, Var x_, S_))", "by (auto intro!: env_restr_mono2 simp add: Abinds_reorder1[OF prems(1)])\n       (metis Aexp_Var edomIff not_up_less_UU)"], ["proof (state)\nthis:\n  prognosis ae_ as_ u_ (delete x_ \\<Gamma>_, e_, Upd x_ # S_) \\<sqsubseteq>\n  record_call x_\\<cdot>(prognosis ae_ as_ a_ (\\<Gamma>_, Var x_, S_))\n\ngoal (1 subgoal):\n 1. \\<And>e x \\<Gamma> ae as S.\n       \\<lbrakk>isVal e; x \\<notin> domA \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> prognosis ae as 0\n                          ((x, e) # \\<Gamma>, e, S) \\<sqsubseteq>\n                         prognosis ae as 0 (\\<Gamma>, e, Upd x # S)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e x \\<Gamma> ae as S.\n       \\<lbrakk>isVal e; x \\<notin> domA \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> prognosis ae as 0\n                          ((x, e) # \\<Gamma>, e, S) \\<sqsubseteq>\n                         prognosis ae as 0 (\\<Gamma>, e, Upd x # S)", "case (3 e x \\<Gamma> ae as S)"], ["proof (state)\nthis:\n  isVal e\n  x \\<notin> domA \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<And>e x \\<Gamma> ae as S.\n       \\<lbrakk>isVal e; x \\<notin> domA \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> prognosis ae as 0\n                          ((x, e) # \\<Gamma>, e, S) \\<sqsubseteq>\n                         prognosis ae as 0 (\\<Gamma>, e, Upd x # S)", "have \"fup\\<cdot>(Aexp e)\\<cdot>(ae x) \\<sqsubseteq> Aexp e\\<cdot>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<A>\\<^sup>\\<bottom>\\<^bsub>ae x\\<^esub> e \\<sqsubseteq>\n    \\<A>\\<^bsub>0\\<^esub> e", "by (cases \"ae x\") (auto intro: monofun_cfun_arg)"], ["proof (state)\nthis:\n  \\<A>\\<^sup>\\<bottom>\\<^bsub>ae x\\<^esub> e \\<sqsubseteq>\n  \\<A>\\<^bsub>0\\<^esub> e\n\ngoal (1 subgoal):\n 1. \\<And>e x \\<Gamma> ae as S.\n       \\<lbrakk>isVal e; x \\<notin> domA \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> prognosis ae as 0\n                          ((x, e) # \\<Gamma>, e, S) \\<sqsubseteq>\n                         prognosis ae as 0 (\\<Gamma>, e, Upd x # S)", "from edom_mono[OF this]"], ["proof (chain)\npicking this:\n  edom (\\<A>\\<^sup>\\<bottom>\\<^bsub>ae x\\<^esub> e)\n  \\<subseteq> edom (\\<A>\\<^bsub>0\\<^esub> e)", "show ?case"], ["proof (prove)\nusing this:\n  edom (\\<A>\\<^sup>\\<bottom>\\<^bsub>ae x\\<^esub> e)\n  \\<subseteq> edom (\\<A>\\<^bsub>0\\<^esub> e)\n\ngoal (1 subgoal):\n 1. prognosis ae as 0 ((x, e) # \\<Gamma>, e, S) \\<sqsubseteq>\n    prognosis ae as 0 (\\<Gamma>, e, Upd x # S)", "by (auto intro!: env_restr_mono2 dest: subsetD[OF edom_mono[OF ABinds_delete_below]])"], ["proof (state)\nthis:\n  prognosis ae as 0 ((x, e) # \\<Gamma>, e, S) \\<sqsubseteq>\n  prognosis ae as 0 (\\<Gamma>, e, Upd x # S)\n\ngoal:\nNo subgoals!", "qed"], ["", "sublocale CardinalityPrognosisIfThenElse prognosis"], ["proof (prove)\ngoal (1 subgoal):\n 1. CardinalityPrognosisIfThenElse prognosis", "proof (standard, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ae a as \\<Gamma> scrut e1 e2 S.\n       prognosis ae (a # as) 0\n        (\\<Gamma>, scrut, Alts e1 e2 # S) \\<sqsubseteq>\n       prognosis ae as a (\\<Gamma>, scrut ? e1 : e2, S)\n 2. \\<And>ae as a \\<Gamma> b e1 e2 S.\n       prognosis ae as a (\\<Gamma>, if b then e1 else e2, S) \\<sqsubseteq>\n       prognosis ae (a # as) 0 (\\<Gamma>, Bool b, Alts e1 e2 # S)", "case (1 ae a as \\<Gamma> scrut e1 e2 S)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>ae a as \\<Gamma> scrut e1 e2 S.\n       prognosis ae (a # as) 0\n        (\\<Gamma>, scrut, Alts e1 e2 # S) \\<sqsubseteq>\n       prognosis ae as a (\\<Gamma>, scrut ? e1 : e2, S)\n 2. \\<And>ae as a \\<Gamma> b e1 e2 S.\n       prognosis ae as a (\\<Gamma>, if b then e1 else e2, S) \\<sqsubseteq>\n       prognosis ae (a # as) 0 (\\<Gamma>, Bool b, Alts e1 e2 # S)", "have \"edom (Aexp scrut\\<cdot>0 \\<squnion> Aexp e1\\<cdot>a \\<squnion> Aexp e2\\<cdot>a) \\<subseteq> edom (Aexp (scrut ? e1 : e2)\\<cdot>a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. edom\n     (\\<A>\\<^bsub>0\\<^esub> scrut \\<squnion>\n      \\<A>\\<^bsub>a\\<^esub> e1 \\<squnion>\n      \\<A>\\<^bsub>a\\<^esub> e2)\n    \\<subseteq> edom (\\<A>\\<^bsub>a\\<^esub> (scrut ? e1 : e2))", "by (rule edom_mono[OF Aexp_IfThenElse])"], ["proof (state)\nthis:\n  edom\n   (\\<A>\\<^bsub>0\\<^esub> scrut \\<squnion>\n    \\<A>\\<^bsub>a\\<^esub> e1 \\<squnion>\n    \\<A>\\<^bsub>a\\<^esub> e2)\n  \\<subseteq> edom (\\<A>\\<^bsub>a\\<^esub> (scrut ? e1 : e2))\n\ngoal (2 subgoals):\n 1. \\<And>ae a as \\<Gamma> scrut e1 e2 S.\n       prognosis ae (a # as) 0\n        (\\<Gamma>, scrut, Alts e1 e2 # S) \\<sqsubseteq>\n       prognosis ae as a (\\<Gamma>, scrut ? e1 : e2, S)\n 2. \\<And>ae as a \\<Gamma> b e1 e2 S.\n       prognosis ae as a (\\<Gamma>, if b then e1 else e2, S) \\<sqsubseteq>\n       prognosis ae (a # as) 0 (\\<Gamma>, Bool b, Alts e1 e2 # S)", "thus ?case"], ["proof (prove)\nusing this:\n  edom\n   (\\<A>\\<^bsub>0\\<^esub> scrut \\<squnion>\n    \\<A>\\<^bsub>a\\<^esub> e1 \\<squnion>\n    \\<A>\\<^bsub>a\\<^esub> e2)\n  \\<subseteq> edom (\\<A>\\<^bsub>a\\<^esub> (scrut ? e1 : e2))\n\ngoal (1 subgoal):\n 1. prognosis ae (a # as) 0 (\\<Gamma>, scrut, Alts e1 e2 # S) \\<sqsubseteq>\n    prognosis ae as a (\\<Gamma>, scrut ? e1 : e2, S)", "by (auto intro!: env_restr_mono2)"], ["proof (state)\nthis:\n  prognosis ae (a # as) 0 (\\<Gamma>, scrut, Alts e1 e2 # S) \\<sqsubseteq>\n  prognosis ae as a (\\<Gamma>, scrut ? e1 : e2, S)\n\ngoal (1 subgoal):\n 1. \\<And>ae as a \\<Gamma> b e1 e2 S.\n       prognosis ae as a (\\<Gamma>, if b then e1 else e2, S) \\<sqsubseteq>\n       prognosis ae (a # as) 0 (\\<Gamma>, Bool b, Alts e1 e2 # S)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ae as a \\<Gamma> b e1 e2 S.\n       prognosis ae as a (\\<Gamma>, if b then e1 else e2, S) \\<sqsubseteq>\n       prognosis ae (a # as) 0 (\\<Gamma>, Bool b, Alts e1 e2 # S)", "case (2 ae as a \\<Gamma> b e1 e2 S)"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>ae as a \\<Gamma> b e1 e2 S.\n       prognosis ae as a (\\<Gamma>, if b then e1 else e2, S) \\<sqsubseteq>\n       prognosis ae (a # as) 0 (\\<Gamma>, Bool b, Alts e1 e2 # S)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. prognosis ae as a (\\<Gamma>, if b then e1 else e2, S) \\<sqsubseteq>\n    prognosis ae (a # as) 0 (\\<Gamma>, Bool b, Alts e1 e2 # S)", "by (auto intro!: env_restr_mono2)"], ["proof (state)\nthis:\n  prognosis ae as a (\\<Gamma>, if b then e1 else e2, S) \\<sqsubseteq>\n  prognosis ae (a # as) 0 (\\<Gamma>, Bool b, Alts e1 e2 # S)\n\ngoal:\nNo subgoals!", "qed"], ["", "sublocale CardinalityPrognosisLet prognosis  cHeap Aheap"], ["proof (prove)\ngoal (1 subgoal):\n 1. CardinalityPrognosisLet prognosis cHeap Aheap", "proof (standard, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<Delta> \\<Gamma> S ae e a as.\n       \\<lbrakk>atom ` domA \\<Delta> \\<sharp>* \\<Gamma>;\n        atom ` domA \\<Delta> \\<sharp>* S;\n        edom ae \\<subseteq> domA \\<Gamma> \\<union> upds S\\<rbrakk>\n       \\<Longrightarrow> prognosis (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)\n                          as a (\\<Delta> @ \\<Gamma>, e, S) \\<sqsubseteq>\n                         cHeap \\<Delta> e\\<cdot>a \\<squnion>\n                         prognosis ae as a\n                          (\\<Gamma>, Terms.Let \\<Delta> e, S)", "case prems: (1 \\<Delta> \\<Gamma> S ae e a as)"], ["proof (state)\nthis:\n  atom ` domA \\<Delta> \\<sharp>* \\<Gamma>\n  atom ` domA \\<Delta> \\<sharp>* S\n  edom ae \\<subseteq> domA \\<Gamma> \\<union> upds S\n\ngoal (1 subgoal):\n 1. \\<And>\\<Delta> \\<Gamma> S ae e a as.\n       \\<lbrakk>atom ` domA \\<Delta> \\<sharp>* \\<Gamma>;\n        atom ` domA \\<Delta> \\<sharp>* S;\n        edom ae \\<subseteq> domA \\<Gamma> \\<union> upds S\\<rbrakk>\n       \\<Longrightarrow> prognosis (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)\n                          as a (\\<Delta> @ \\<Gamma>, e, S) \\<sqsubseteq>\n                         cHeap \\<Delta> e\\<cdot>a \\<squnion>\n                         prognosis ae as a\n                          (\\<Gamma>, Terms.Let \\<Delta> e, S)", "from subsetD[OF prems(3)] fresh_distinct[OF prems(1)] fresh_distinct_fv[OF prems(2)]"], ["proof (chain)\npicking this:\n  ?c \\<in> edom ae \\<Longrightarrow> ?c \\<in> domA \\<Gamma> \\<union> upds S\n  domA \\<Delta> \\<inter> domA \\<Gamma> = {}\n  domA \\<Delta> \\<inter> fv S = {}", "have  \"ae f|` domA \\<Delta> = \\<bottom>\""], ["proof (prove)\nusing this:\n  ?c \\<in> edom ae \\<Longrightarrow> ?c \\<in> domA \\<Gamma> \\<union> upds S\n  domA \\<Delta> \\<inter> domA \\<Gamma> = {}\n  domA \\<Delta> \\<inter> fv S = {}\n\ngoal (1 subgoal):\n 1. ae f|` domA \\<Delta> = \\<bottom>", "by (auto dest: subsetD[OF ups_fv_subset])"], ["proof (state)\nthis:\n  ae f|` domA \\<Delta> = \\<bottom>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Delta> \\<Gamma> S ae e a as.\n       \\<lbrakk>atom ` domA \\<Delta> \\<sharp>* \\<Gamma>;\n        atom ` domA \\<Delta> \\<sharp>* S;\n        edom ae \\<subseteq> domA \\<Gamma> \\<union> upds S\\<rbrakk>\n       \\<Longrightarrow> prognosis (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)\n                          as a (\\<Delta> @ \\<Gamma>, e, S) \\<sqsubseteq>\n                         cHeap \\<Delta> e\\<cdot>a \\<squnion>\n                         prognosis ae as a\n                          (\\<Gamma>, Terms.Let \\<Delta> e, S)", "hence [simp]: \"ABinds \\<Delta>\\<cdot>(ae \\<squnion> Aheap \\<Delta> e\\<cdot>a) = ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a)\""], ["proof (prove)\nusing this:\n  ae f|` domA \\<Delta> = \\<bottom>\n\ngoal (1 subgoal):\n 1. ABinds \\<Delta>\\<cdot>(ae \\<squnion> Aheap \\<Delta> e\\<cdot>a) =\n    ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a)", "by (simp cong: Abinds_env_restr_cong add: env_restr_join)"], ["proof (state)\nthis:\n  ABinds \\<Delta>\\<cdot>(ae \\<squnion> Aheap \\<Delta> e\\<cdot>a) =\n  ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Delta> \\<Gamma> S ae e a as.\n       \\<lbrakk>atom ` domA \\<Delta> \\<sharp>* \\<Gamma>;\n        atom ` domA \\<Delta> \\<sharp>* S;\n        edom ae \\<subseteq> domA \\<Gamma> \\<union> upds S\\<rbrakk>\n       \\<Longrightarrow> prognosis (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)\n                          as a (\\<Delta> @ \\<Gamma>, e, S) \\<sqsubseteq>\n                         cHeap \\<Delta> e\\<cdot>a \\<squnion>\n                         prognosis ae as a\n                          (\\<Gamma>, Terms.Let \\<Delta> e, S)", "from  fresh_distinct[OF prems(1)]"], ["proof (chain)\npicking this:\n  domA \\<Delta> \\<inter> domA \\<Gamma> = {}", "have \"Aheap \\<Delta> e\\<cdot>a f|` domA \\<Gamma> = \\<bottom>\""], ["proof (prove)\nusing this:\n  domA \\<Delta> \\<inter> domA \\<Gamma> = {}\n\ngoal (1 subgoal):\n 1. Aheap \\<Delta> e\\<cdot>a f|` domA \\<Gamma> = \\<bottom>", "by (auto dest!: subsetD[OF edom_Aheap])"], ["proof (state)\nthis:\n  Aheap \\<Delta> e\\<cdot>a f|` domA \\<Gamma> = \\<bottom>\n\ngoal (1 subgoal):\n 1. \\<And>\\<Delta> \\<Gamma> S ae e a as.\n       \\<lbrakk>atom ` domA \\<Delta> \\<sharp>* \\<Gamma>;\n        atom ` domA \\<Delta> \\<sharp>* S;\n        edom ae \\<subseteq> domA \\<Gamma> \\<union> upds S\\<rbrakk>\n       \\<Longrightarrow> prognosis (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)\n                          as a (\\<Delta> @ \\<Gamma>, e, S) \\<sqsubseteq>\n                         cHeap \\<Delta> e\\<cdot>a \\<squnion>\n                         prognosis ae as a\n                          (\\<Gamma>, Terms.Let \\<Delta> e, S)", "hence [simp]: \"ABinds \\<Gamma>\\<cdot>(ae \\<squnion> Aheap \\<Delta> e\\<cdot>a) = ABinds \\<Gamma>\\<cdot>ae\""], ["proof (prove)\nusing this:\n  Aheap \\<Delta> e\\<cdot>a f|` domA \\<Gamma> = \\<bottom>\n\ngoal (1 subgoal):\n 1. ABinds \\<Gamma>\\<cdot>(ae \\<squnion> Aheap \\<Delta> e\\<cdot>a) =\n    ABinds \\<Gamma>\\<cdot>ae", "by (simp cong: Abinds_env_restr_cong add: env_restr_join)"], ["proof (state)\nthis:\n  ABinds \\<Gamma>\\<cdot>(ae \\<squnion> Aheap \\<Delta> e\\<cdot>a) =\n  ABinds \\<Gamma>\\<cdot>ae\n\ngoal (1 subgoal):\n 1. \\<And>\\<Delta> \\<Gamma> S ae e a as.\n       \\<lbrakk>atom ` domA \\<Delta> \\<sharp>* \\<Gamma>;\n        atom ` domA \\<Delta> \\<sharp>* S;\n        edom ae \\<subseteq> domA \\<Gamma> \\<union> upds S\\<rbrakk>\n       \\<Longrightarrow> prognosis (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)\n                          as a (\\<Delta> @ \\<Gamma>, e, S) \\<sqsubseteq>\n                         cHeap \\<Delta> e\\<cdot>a \\<squnion>\n                         prognosis ae as a\n                          (\\<Gamma>, Terms.Let \\<Delta> e, S)", "have \"edom (ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>(Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)) \\<union> edom (Aexp e\\<cdot>a)  = edom (ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a)) \\<union> edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>  edom (Aexp e\\<cdot>a) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. edom\n     (ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>\n      (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)) \\<union>\n    edom (\\<A>\\<^bsub>a\\<^esub> e) =\n    edom (ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a)) \\<union>\n    edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n    edom (\\<A>\\<^bsub>a\\<^esub> e)", "by (simp add: Abinds_append_disjoint[OF fresh_distinct[OF prems(1)]] Un_commute)"], ["proof (state)\nthis:\n  edom\n   (ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>\n    (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)) \\<union>\n  edom (\\<A>\\<^bsub>a\\<^esub> e) =\n  edom (ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a)) \\<union>\n  edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n  edom (\\<A>\\<^bsub>a\\<^esub> e)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Delta> \\<Gamma> S ae e a as.\n       \\<lbrakk>atom ` domA \\<Delta> \\<sharp>* \\<Gamma>;\n        atom ` domA \\<Delta> \\<sharp>* S;\n        edom ae \\<subseteq> domA \\<Gamma> \\<union> upds S\\<rbrakk>\n       \\<Longrightarrow> prognosis (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)\n                          as a (\\<Delta> @ \\<Gamma>, e, S) \\<sqsubseteq>\n                         cHeap \\<Delta> e\\<cdot>a \\<squnion>\n                         prognosis ae as a\n                          (\\<Gamma>, Terms.Let \\<Delta> e, S)", "also"], ["proof (state)\nthis:\n  edom\n   (ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>\n    (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)) \\<union>\n  edom (\\<A>\\<^bsub>a\\<^esub> e) =\n  edom (ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a)) \\<union>\n  edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n  edom (\\<A>\\<^bsub>a\\<^esub> e)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Delta> \\<Gamma> S ae e a as.\n       \\<lbrakk>atom ` domA \\<Delta> \\<sharp>* \\<Gamma>;\n        atom ` domA \\<Delta> \\<sharp>* S;\n        edom ae \\<subseteq> domA \\<Gamma> \\<union> upds S\\<rbrakk>\n       \\<Longrightarrow> prognosis (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)\n                          as a (\\<Delta> @ \\<Gamma>, e, S) \\<sqsubseteq>\n                         cHeap \\<Delta> e\\<cdot>a \\<squnion>\n                         prognosis ae as a\n                          (\\<Gamma>, Terms.Let \\<Delta> e, S)", "have \"\\<dots> = edom (ABinds \\<Gamma>\\<cdot>ae) \\<union> edom (ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a) \\<squnion> Aexp e\\<cdot>a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. edom (ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a)) \\<union>\n    edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n    edom (\\<A>\\<^bsub>a\\<^esub> e) =\n    edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n    edom\n     (ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a) \\<squnion>\n      \\<A>\\<^bsub>a\\<^esub> e)", "by force"], ["proof (state)\nthis:\n  edom (ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a)) \\<union>\n  edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n  edom (\\<A>\\<^bsub>a\\<^esub> e) =\n  edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n  edom\n   (ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a) \\<squnion>\n    \\<A>\\<^bsub>a\\<^esub> e)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Delta> \\<Gamma> S ae e a as.\n       \\<lbrakk>atom ` domA \\<Delta> \\<sharp>* \\<Gamma>;\n        atom ` domA \\<Delta> \\<sharp>* S;\n        edom ae \\<subseteq> domA \\<Gamma> \\<union> upds S\\<rbrakk>\n       \\<Longrightarrow> prognosis (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)\n                          as a (\\<Delta> @ \\<Gamma>, e, S) \\<sqsubseteq>\n                         cHeap \\<Delta> e\\<cdot>a \\<squnion>\n                         prognosis ae as a\n                          (\\<Gamma>, Terms.Let \\<Delta> e, S)", "also"], ["proof (state)\nthis:\n  edom (ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a)) \\<union>\n  edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n  edom (\\<A>\\<^bsub>a\\<^esub> e) =\n  edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n  edom\n   (ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a) \\<squnion>\n    \\<A>\\<^bsub>a\\<^esub> e)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Delta> \\<Gamma> S ae e a as.\n       \\<lbrakk>atom ` domA \\<Delta> \\<sharp>* \\<Gamma>;\n        atom ` domA \\<Delta> \\<sharp>* S;\n        edom ae \\<subseteq> domA \\<Gamma> \\<union> upds S\\<rbrakk>\n       \\<Longrightarrow> prognosis (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)\n                          as a (\\<Delta> @ \\<Gamma>, e, S) \\<sqsubseteq>\n                         cHeap \\<Delta> e\\<cdot>a \\<squnion>\n                         prognosis ae as a\n                          (\\<Gamma>, Terms.Let \\<Delta> e, S)", "have \"\\<dots> \\<subseteq> edom (ABinds \\<Gamma>\\<cdot>ae) \\<union> edom (Aheap \\<Delta> e\\<cdot>a \\<squnion> Aexp (Let \\<Delta> e)\\<cdot>a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n    edom\n     (ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a) \\<squnion>\n      \\<A>\\<^bsub>a\\<^esub> e)\n    \\<subseteq> edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n                edom\n                 (Aheap \\<Delta> e\\<cdot>a \\<squnion>\n                  \\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e))", "using  edom_mono[OF Aexp_Let]"], ["proof (prove)\nusing this:\n  edom\n   (ABinds ?\\<Gamma>1\\<cdot>(Aheap ?\\<Gamma>1 ?e1\\<cdot>?a1) \\<squnion>\n    \\<A>\\<^bsub>?a1\\<^esub> ?e1)\n  \\<subseteq> edom\n               (Aheap ?\\<Gamma>1 ?e1\\<cdot>?a1 \\<squnion>\n                \\<A>\\<^bsub>?a1\\<^esub> (Terms.Let ?\\<Gamma>1 ?e1))\n\ngoal (1 subgoal):\n 1. edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n    edom\n     (ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a) \\<squnion>\n      \\<A>\\<^bsub>a\\<^esub> e)\n    \\<subseteq> edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n                edom\n                 (Aheap \\<Delta> e\\<cdot>a \\<squnion>\n                  \\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e))", "by force"], ["proof (state)\nthis:\n  edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n  edom\n   (ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a) \\<squnion>\n    \\<A>\\<^bsub>a\\<^esub> e)\n  \\<subseteq> edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n              edom\n               (Aheap \\<Delta> e\\<cdot>a \\<squnion>\n                \\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e))\n\ngoal (1 subgoal):\n 1. \\<And>\\<Delta> \\<Gamma> S ae e a as.\n       \\<lbrakk>atom ` domA \\<Delta> \\<sharp>* \\<Gamma>;\n        atom ` domA \\<Delta> \\<sharp>* S;\n        edom ae \\<subseteq> domA \\<Gamma> \\<union> upds S\\<rbrakk>\n       \\<Longrightarrow> prognosis (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)\n                          as a (\\<Delta> @ \\<Gamma>, e, S) \\<sqsubseteq>\n                         cHeap \\<Delta> e\\<cdot>a \\<squnion>\n                         prognosis ae as a\n                          (\\<Gamma>, Terms.Let \\<Delta> e, S)", "also"], ["proof (state)\nthis:\n  edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n  edom\n   (ABinds \\<Delta>\\<cdot>(Aheap \\<Delta> e\\<cdot>a) \\<squnion>\n    \\<A>\\<^bsub>a\\<^esub> e)\n  \\<subseteq> edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n              edom\n               (Aheap \\<Delta> e\\<cdot>a \\<squnion>\n                \\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e))\n\ngoal (1 subgoal):\n 1. \\<And>\\<Delta> \\<Gamma> S ae e a as.\n       \\<lbrakk>atom ` domA \\<Delta> \\<sharp>* \\<Gamma>;\n        atom ` domA \\<Delta> \\<sharp>* S;\n        edom ae \\<subseteq> domA \\<Gamma> \\<union> upds S\\<rbrakk>\n       \\<Longrightarrow> prognosis (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)\n                          as a (\\<Delta> @ \\<Gamma>, e, S) \\<sqsubseteq>\n                         cHeap \\<Delta> e\\<cdot>a \\<squnion>\n                         prognosis ae as a\n                          (\\<Gamma>, Terms.Let \\<Delta> e, S)", "have \"\\<dots> = edom (Aheap \\<Delta> e\\<cdot>a) \\<union> edom (ABinds \\<Gamma>\\<cdot>ae) \\<union> edom (Aexp (Let \\<Delta> e)\\<cdot>a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n    edom\n     (Aheap \\<Delta> e\\<cdot>a \\<squnion>\n      \\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e)) =\n    edom (Aheap \\<Delta> e\\<cdot>a) \\<union>\n    edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n    edom (\\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e))", "by auto"], ["proof (state)\nthis:\n  edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n  edom\n   (Aheap \\<Delta> e\\<cdot>a \\<squnion>\n    \\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e)) =\n  edom (Aheap \\<Delta> e\\<cdot>a) \\<union>\n  edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n  edom (\\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e))\n\ngoal (1 subgoal):\n 1. \\<And>\\<Delta> \\<Gamma> S ae e a as.\n       \\<lbrakk>atom ` domA \\<Delta> \\<sharp>* \\<Gamma>;\n        atom ` domA \\<Delta> \\<sharp>* S;\n        edom ae \\<subseteq> domA \\<Gamma> \\<union> upds S\\<rbrakk>\n       \\<Longrightarrow> prognosis (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)\n                          as a (\\<Delta> @ \\<Gamma>, e, S) \\<sqsubseteq>\n                         cHeap \\<Delta> e\\<cdot>a \\<squnion>\n                         prognosis ae as a\n                          (\\<Gamma>, Terms.Let \\<Delta> e, S)", "finally"], ["proof (chain)\npicking this:\n  edom\n   (ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>\n    (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)) \\<union>\n  edom (\\<A>\\<^bsub>a\\<^esub> e)\n  \\<subseteq> edom (Aheap \\<Delta> e\\<cdot>a) \\<union>\n              edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n              edom (\\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e))", "have \"edom (ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>(Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)) \\<union> edom (Aexp e\\<cdot>a) \\<subseteq> edom (Aheap \\<Delta> e\\<cdot>a) \\<union> edom (ABinds \\<Gamma>\\<cdot>ae) \\<union> edom (Aexp (Let \\<Delta> e)\\<cdot>a)\""], ["proof (prove)\nusing this:\n  edom\n   (ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>\n    (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)) \\<union>\n  edom (\\<A>\\<^bsub>a\\<^esub> e)\n  \\<subseteq> edom (Aheap \\<Delta> e\\<cdot>a) \\<union>\n              edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n              edom (\\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e))\n\ngoal (1 subgoal):\n 1. edom\n     (ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>\n      (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)) \\<union>\n    edom (\\<A>\\<^bsub>a\\<^esub> e)\n    \\<subseteq> edom (Aheap \\<Delta> e\\<cdot>a) \\<union>\n                edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n                edom (\\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e))", "."], ["proof (state)\nthis:\n  edom\n   (ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>\n    (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)) \\<union>\n  edom (\\<A>\\<^bsub>a\\<^esub> e)\n  \\<subseteq> edom (Aheap \\<Delta> e\\<cdot>a) \\<union>\n              edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n              edom (\\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e))\n\ngoal (1 subgoal):\n 1. \\<And>\\<Delta> \\<Gamma> S ae e a as.\n       \\<lbrakk>atom ` domA \\<Delta> \\<sharp>* \\<Gamma>;\n        atom ` domA \\<Delta> \\<sharp>* S;\n        edom ae \\<subseteq> domA \\<Gamma> \\<union> upds S\\<rbrakk>\n       \\<Longrightarrow> prognosis (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)\n                          as a (\\<Delta> @ \\<Gamma>, e, S) \\<sqsubseteq>\n                         cHeap \\<Delta> e\\<cdot>a \\<squnion>\n                         prognosis ae as a\n                          (\\<Gamma>, Terms.Let \\<Delta> e, S)", "hence \"edom (ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>(Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)) \\<union> edom (Aexp e\\<cdot>a) \\<union> edom (AEstack as S) \\<subseteq> edom (Aheap \\<Delta> e\\<cdot>a) \\<union> edom (ABinds \\<Gamma>\\<cdot>ae) \\<union> edom (Aexp (Let \\<Delta> e)\\<cdot>a) \\<union> edom (AEstack as S)\""], ["proof (prove)\nusing this:\n  edom\n   (ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>\n    (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)) \\<union>\n  edom (\\<A>\\<^bsub>a\\<^esub> e)\n  \\<subseteq> edom (Aheap \\<Delta> e\\<cdot>a) \\<union>\n              edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n              edom (\\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e))\n\ngoal (1 subgoal):\n 1. edom\n     (ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>\n      (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)) \\<union>\n    edom (\\<A>\\<^bsub>a\\<^esub> e) \\<union>\n    edom (AEstack as S)\n    \\<subseteq> edom (Aheap \\<Delta> e\\<cdot>a) \\<union>\n                edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n                edom (\\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e)) \\<union>\n                edom (AEstack as S)", "by auto"], ["proof (state)\nthis:\n  edom\n   (ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>\n    (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)) \\<union>\n  edom (\\<A>\\<^bsub>a\\<^esub> e) \\<union>\n  edom (AEstack as S)\n  \\<subseteq> edom (Aheap \\<Delta> e\\<cdot>a) \\<union>\n              edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n              edom (\\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e)) \\<union>\n              edom (AEstack as S)\n\ngoal (1 subgoal):\n 1. \\<And>\\<Delta> \\<Gamma> S ae e a as.\n       \\<lbrakk>atom ` domA \\<Delta> \\<sharp>* \\<Gamma>;\n        atom ` domA \\<Delta> \\<sharp>* S;\n        edom ae \\<subseteq> domA \\<Gamma> \\<union> upds S\\<rbrakk>\n       \\<Longrightarrow> prognosis (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)\n                          as a (\\<Delta> @ \\<Gamma>, e, S) \\<sqsubseteq>\n                         cHeap \\<Delta> e\\<cdot>a \\<squnion>\n                         prognosis ae as a\n                          (\\<Gamma>, Terms.Let \\<Delta> e, S)", "thus ?case"], ["proof (prove)\nusing this:\n  edom\n   (ABinds (\\<Delta> @ \\<Gamma>)\\<cdot>\n    (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae)) \\<union>\n  edom (\\<A>\\<^bsub>a\\<^esub> e) \\<union>\n  edom (AEstack as S)\n  \\<subseteq> edom (Aheap \\<Delta> e\\<cdot>a) \\<union>\n              edom (ABinds \\<Gamma>\\<cdot>ae) \\<union>\n              edom (\\<A>\\<^bsub>a\\<^esub> (Terms.Let \\<Delta> e)) \\<union>\n              edom (AEstack as S)\n\ngoal (1 subgoal):\n 1. prognosis (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae) as a\n     (\\<Delta> @ \\<Gamma>, e, S) \\<sqsubseteq>\n    cHeap \\<Delta> e\\<cdot>a \\<squnion>\n    prognosis ae as a (\\<Gamma>, Terms.Let \\<Delta> e, S)", "by (simp add: ae2ce_to_env_restr env_restr_join2 Un_assoc[symmetric] env_restr_mono2)"], ["proof (state)\nthis:\n  prognosis (Aheap \\<Delta> e\\<cdot>a \\<squnion> ae) as a\n   (\\<Delta> @ \\<Gamma>, e, S) \\<sqsubseteq>\n  cHeap \\<Delta> e\\<cdot>a \\<squnion>\n  prognosis ae as a (\\<Gamma>, Terms.Let \\<Delta> e, S)\n\ngoal:\nNo subgoals!", "qed"], ["", "sublocale CardinalityPrognosisEdom prognosis"], ["proof (prove)\ngoal (1 subgoal):\n 1. CardinalityPrognosisEdom prognosis", "by standard (auto dest: subsetD[OF Aexp_edom] subsetD[OF ap_fv_subset] subsetD[OF edom_AnalBinds]  subsetD[OF edom_AEstack])"], ["", "sublocale CardinalityPrognosisSafe prognosis cHeap Aheap Aexp"], ["proof (prove)\ngoal (1 subgoal):\n 1. CardinalityPrognosisSafe prognosis cHeap Aheap Aexp", ".."], ["", "end"], ["", "end"]]}