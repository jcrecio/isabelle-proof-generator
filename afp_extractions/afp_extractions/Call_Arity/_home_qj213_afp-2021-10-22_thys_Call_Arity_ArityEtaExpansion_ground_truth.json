{"file_name": "/home/qj213/afp-2021-10-22/thys/Call_Arity/ArityEtaExpansion.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Call_Arity", "problem_names": ["lemma Aeta_expand_eqvt[eqvt]: \"\\<pi> \\<bullet> Aeta_expand a e = Aeta_expand (\\<pi> \\<bullet> a) (\\<pi> \\<bullet> e)\"", "lemma Aeta_expand_0[simp]: \"Aeta_expand 0 e = e\"", "lemma Aeta_expand_inc[simp]: \"Aeta_expand (inc\\<cdot>n) e = (Lam [fresh_var e]. Aeta_expand n (App e (fresh_var e)))\"", "lemma subst_Aeta_expand:\n  \"(Aeta_expand n e)[x::=y] = Aeta_expand n e[x::=y]\"", "lemma isLam_Aeta_expand: \"isLam e \\<Longrightarrow> isLam (Aeta_expand a e)\"", "lemma isVal_Aeta_expand: \"isVal e \\<Longrightarrow> isVal (Aeta_expand a e)\"", "lemma Aeta_expand_fresh[simp]: \"a \\<sharp> Aeta_expand n e = a \\<sharp> e\"", "lemma Aeta_expand_fresh_star[simp]: \"a \\<sharp>* Aeta_expand n e = a \\<sharp>* e\""], "translations": [["", "lemma Aeta_expand_eqvt[eqvt]: \"\\<pi> \\<bullet> Aeta_expand a e = Aeta_expand (\\<pi> \\<bullet> a) (\\<pi> \\<bullet> e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<bullet> Aeta_expand a e =\n    Aeta_expand (\\<pi> \\<bullet> a) (\\<pi> \\<bullet> e)", "apply (cases a)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>a = to_Arity y; y \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<pi> \\<bullet> Aeta_expand a e =\n                         Aeta_expand (\\<pi> \\<bullet> a) (\\<pi> \\<bullet> e)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       a = to_Arity y \\<Longrightarrow>\n       \\<pi> \\<bullet> Aeta_expand (to_Arity y) e =\n       Aeta_expand (to_Arity y) (\\<pi> \\<bullet> e)", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y a \\<pi> e.\n       a = y \\<Longrightarrow>\n       \\<pi> \\<bullet> eta_expand y e = eta_expand y (\\<pi> \\<bullet> e)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Aeta_expand_0[simp]: \"Aeta_expand 0 e = e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Aeta_expand 0 e = e", "by transfer simp"], ["", "lemma Aeta_expand_inc[simp]: \"Aeta_expand (inc\\<cdot>n) e = (Lam [fresh_var e]. Aeta_expand n (App e (fresh_var e)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Aeta_expand (inc\\<cdot>n) e =\n    Lam [fresh_var e]. Aeta_expand n (App e (fresh_var e))", "apply (simp add: inc_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Aeta_expand (inc_Arity n) e =\n    Lam [fresh_var e]. Aeta_expand n (App e (fresh_var e))", "by transfer simp"], ["", "lemma subst_Aeta_expand:\n  \"(Aeta_expand n e)[x::=y] = Aeta_expand n e[x::=y]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Aeta_expand n e)[x::=y] = Aeta_expand n e[x::=y]", "by transfer (rule subst_eta_expand)"], ["", "lemma isLam_Aeta_expand: \"isLam e \\<Longrightarrow> isLam (Aeta_expand a e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isLam e \\<Longrightarrow> isLam (Aeta_expand a e)", "by transfer (rule isLam_eta_expand)"], ["", "lemma isVal_Aeta_expand: \"isVal e \\<Longrightarrow> isVal (Aeta_expand a e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isVal e \\<Longrightarrow> isVal (Aeta_expand a e)", "by transfer (rule isVal_eta_expand)"], ["", "lemma Aeta_expand_fresh[simp]: \"a \\<sharp> Aeta_expand n e = a \\<sharp> e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sharp> Aeta_expand n e = a \\<sharp> e", "by transfer simp"], ["", "lemma Aeta_expand_fresh_star[simp]: \"a \\<sharp>* Aeta_expand n e = a \\<sharp>* e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sharp>* Aeta_expand n e = a \\<sharp>* e", "by (auto simp add: fresh_star_def)"], ["", "interpretation supp_bounded_transform Aeta_expand"], ["proof (prove)\ngoal (1 subgoal):\n 1. supp_bounded_transform Aeta_expand", "apply standard"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a e. supp (Aeta_expand a e) \\<subseteq> supp e", "using Aeta_expand_fresh"], ["proof (prove)\nusing this:\n  ?a \\<sharp> Aeta_expand ?n ?e = ?a \\<sharp> ?e\n\ngoal (1 subgoal):\n 1. \\<And>a e. supp (Aeta_expand a e) \\<subseteq> supp e", "apply (auto simp add: fresh_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}