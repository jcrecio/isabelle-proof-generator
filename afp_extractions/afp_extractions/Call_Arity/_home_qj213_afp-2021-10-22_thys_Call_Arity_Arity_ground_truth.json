{"file_name": "/home/qj213/afp-2021-10-22/thys/Call_Arity/Arity.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Call_Arity", "problem_names": ["lemma inc_Arity_cont[simp]: \"cont inc_Arity\"", "lemma pred_Arity_cont[simp]: \"cont pred_Arity\"", "lemma inc_inj[simp]: \"inc\\<cdot>n = inc\\<cdot>n' \\<longleftrightarrow> n = n'\"", "lemma pred_inc[simp]: \"pred\\<cdot>(inc\\<cdot>n) = n\"", "lemma inc_below_inc[simp]: \"inc\\<cdot>a \\<sqsubseteq> inc\\<cdot>b \\<longleftrightarrow> a \\<sqsubseteq> b\"", "lemma inc_below_below_pred[elim]:\n  \"inc\\<cdot>a \\<sqsubseteq> b \\<Longrightarrow> a \\<sqsubseteq> pred \\<cdot> b\"", "lemma Rep_Arity_inc[simp]: \"Rep_Arity (inc\\<cdot>a') = Suc (Rep_Arity a')\"", "lemma one_is_inc_zero: \"1 = inc\\<cdot>0\"", "lemma inc_not_0[simp]: \"inc\\<cdot>n = 0 \\<longleftrightarrow> False\"", "lemma pred_0[simp]: \"pred\\<cdot>0 = 0\"", "lemma Arity_ind:  \"P 0 \\<Longrightarrow> (\\<And> n. P n \\<Longrightarrow> P (inc\\<cdot>n)) \\<Longrightarrow> P n\"", "lemma Arity_total:   \n  fixes x y :: Arity\n  shows \"x \\<sqsubseteq> y \\<or> y \\<sqsubseteq> x\"", "lemma Arity_zero_top[simp]: \"(x :: Arity) \\<sqsubseteq> 0\"", "lemma Arity_above_top[simp]: \"0 \\<sqsubseteq> (a :: Arity) \\<longleftrightarrow> a = 0\"", "lemma Arity_zero_join[simp]: \"(x :: Arity) \\<squnion> 0 = 0\"", "lemma Arity_zero_join2[simp]: \"0 \\<squnion> (x :: Arity) = 0\"", "lemma Arity_up_zero_join[simp]: \"(x :: Arity\\<^sub>\\<bottom>) \\<squnion> up\\<cdot>0 = up\\<cdot>0\"", "lemma Arity_up_zero_join2[simp]: \"up\\<cdot>0 \\<squnion> (x :: Arity\\<^sub>\\<bottom>) = up\\<cdot>0\"", "lemma up_zero_top[simp]: \"x \\<sqsubseteq> up\\<cdot>(0::Arity)\"", "lemma Arity_above_up_top[simp]: \"up\\<cdot>0 \\<sqsubseteq> (a :: Arity\\<^sub>\\<bottom>) \\<longleftrightarrow> a = up\\<cdot>0\"", "lemma Arity_exhaust: \"(y = 0 \\<Longrightarrow> P) \\<Longrightarrow> (\\<And>x. y = inc \\<cdot> x \\<Longrightarrow> P) \\<Longrightarrow> P\""], "translations": [["", "lemma inc_Arity_cont[simp]: \"cont inc_Arity\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cont inc_Arity", "apply (rule chfindom_monofun2cont)"], ["proof (prove)\ngoal (1 subgoal):\n 1. monofun inc_Arity", "apply (rule monofunI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x \\<sqsubseteq> y \\<Longrightarrow>\n       inc_Arity x \\<sqsubseteq> inc_Arity y", "apply (transfer, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma pred_Arity_cont[simp]: \"cont pred_Arity\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cont pred_Arity", "apply (rule chfindom_monofun2cont)"], ["proof (prove)\ngoal (1 subgoal):\n 1. monofun pred_Arity", "apply (rule monofunI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x \\<sqsubseteq> y \\<Longrightarrow>\n       pred_Arity x \\<sqsubseteq> pred_Arity y", "apply (transfer, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition inc :: \"Arity \\<rightarrow> Arity\" where\n  \"inc = (\\<Lambda> x. inc_Arity x)\""], ["", "definition pred :: \"Arity \\<rightarrow> Arity\" where\n  \"pred = (\\<Lambda> x. pred_Arity x)\""], ["", "lemma inc_inj[simp]: \"inc\\<cdot>n = inc\\<cdot>n' \\<longleftrightarrow> n = n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (inc\\<cdot>n = inc\\<cdot>n') = (n = n')", "by (simp add: inc_def pred_def, transfer, simp)"], ["", "lemma pred_inc[simp]: \"pred\\<cdot>(inc\\<cdot>n) = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pred\\<cdot>(inc\\<cdot>n) = n", "by (simp add: inc_def pred_def, transfer, simp)"], ["", "lemma inc_below_inc[simp]: \"inc\\<cdot>a \\<sqsubseteq> inc\\<cdot>b \\<longleftrightarrow> a \\<sqsubseteq> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (inc\\<cdot>a \\<sqsubseteq> inc\\<cdot>b) = (a \\<sqsubseteq> b)", "by (simp add: inc_def pred_def, transfer, simp)"], ["", "lemma inc_below_below_pred[elim]:\n  \"inc\\<cdot>a \\<sqsubseteq> b \\<Longrightarrow> a \\<sqsubseteq> pred \\<cdot> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inc\\<cdot>a \\<sqsubseteq> b \\<Longrightarrow>\n    a \\<sqsubseteq> pred\\<cdot>b", "by (simp add: inc_def pred_def, transfer, simp)"], ["", "lemma Rep_Arity_inc[simp]: \"Rep_Arity (inc\\<cdot>a') = Suc (Rep_Arity a')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_Arity (inc\\<cdot>a') = Suc (Rep_Arity a')", "by (simp add: inc_def pred_def, transfer, simp)"], ["", "instantiation Arity :: zero\nbegin"], ["", "lift_definition zero_Arity :: Arity is 0"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(Arity, zero_class)", ".."], ["", "end"], ["", "instantiation Arity :: one\nbegin"], ["", "lift_definition one_Arity :: Arity is 1"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(Arity, one_class)", ".."], ["", "end"], ["", "lemma one_is_inc_zero: \"1 = inc\\<cdot>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 = inc\\<cdot>0", "by (simp add: inc_def, transfer, simp)"], ["", "lemma inc_not_0[simp]: \"inc\\<cdot>n = 0 \\<longleftrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (inc\\<cdot>n = 0) = False", "by (simp add: inc_def pred_def, transfer, simp)"], ["", "lemma pred_0[simp]: \"pred\\<cdot>0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pred\\<cdot>0 = 0", "by (simp add: inc_def pred_def, transfer, simp)"], ["", "lemma Arity_ind:  \"P 0 \\<Longrightarrow> (\\<And> n. P n \\<Longrightarrow> P (inc\\<cdot>n)) \\<Longrightarrow> P n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P 0; \\<And>n. P n \\<Longrightarrow> P (inc\\<cdot>n)\\<rbrakk>\n    \\<Longrightarrow> P n", "apply (simp add: inc_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P 0; \\<And>n. P n \\<Longrightarrow> P (inc_Arity n)\\<rbrakk>\n    \\<Longrightarrow> P n", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P x.\n       \\<lbrakk>P 0; \\<And>n. P n \\<Longrightarrow> P (Suc n)\\<rbrakk>\n       \\<Longrightarrow> P x", "by (rule nat.induct)"], ["", "lemma Arity_total:   \n  fixes x y :: Arity\n  shows \"x \\<sqsubseteq> y \\<or> y \\<sqsubseteq> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> y \\<or> y \\<sqsubseteq> x", "by transfer auto"], ["", "instance Arity :: Finite_Join_cpo"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(Arity, Finite_Join_cpo_class)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. compatible x y", "fix x y :: Arity"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. compatible x y", "show \"compatible x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compatible x y", "by (metis Arity_total compatibleI)"], ["proof (state)\nthis:\n  compatible x y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Arity_zero_top[simp]: \"(x :: Arity) \\<sqsubseteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> 0", "by transfer simp"], ["", "lemma Arity_above_top[simp]: \"0 \\<sqsubseteq> (a :: Arity) \\<longleftrightarrow> a = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 \\<sqsubseteq> a) = (a = 0)", "by transfer simp"], ["", "lemma Arity_zero_join[simp]: \"(x :: Arity) \\<squnion> 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> 0 = 0", "by transfer simp"], ["", "lemma Arity_zero_join2[simp]: \"0 \\<squnion> (x :: Arity) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<squnion> x = 0", "by transfer simp"], ["", "lemma Arity_up_zero_join[simp]: \"(x :: Arity\\<^sub>\\<bottom>) \\<squnion> up\\<cdot>0 = up\\<cdot>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> up\\<cdot>0 = up\\<cdot>0", "by (cases x) auto"], ["", "lemma Arity_up_zero_join2[simp]: \"up\\<cdot>0 \\<squnion> (x :: Arity\\<^sub>\\<bottom>) = up\\<cdot>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. up\\<cdot>0 \\<squnion> x = up\\<cdot>0", "by (cases x) auto"], ["", "lemma up_zero_top[simp]: \"x \\<sqsubseteq> up\\<cdot>(0::Arity)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> up\\<cdot>0", "by (cases x) auto"], ["", "lemma Arity_above_up_top[simp]: \"up\\<cdot>0 \\<sqsubseteq> (a :: Arity\\<^sub>\\<bottom>) \\<longleftrightarrow> a = up\\<cdot>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (up\\<cdot>0 \\<sqsubseteq> a) = (a = up\\<cdot>0)", "by (metis Arity_up_zero_join2 join_self_below(4))"], ["", "lemma Arity_exhaust: \"(y = 0 \\<Longrightarrow> P) \\<Longrightarrow> (\\<And>x. y = inc \\<cdot> x \\<Longrightarrow> P) \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y = 0 \\<Longrightarrow> P;\n     \\<And>x. y = inc\\<cdot>x \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by (metis Abs_cfun_inverse2 Arity.inc_def Rep_Arity_inverse inc_Arity.abs_eq inc_Arity_cont list_decode.cases zero_Arity_def)"], ["", "end"]]}