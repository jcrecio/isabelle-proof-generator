{"file_name": "/home/qj213/afp-2021-10-22/thys/Call_Arity/List-Interleavings.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Call_Arity", "problem_names": ["lemma elim_interleave'[pred_set_conv]: \"interleave' xs ys zs \\<longleftrightarrow> zs \\<in> xs \\<otimes> ys\"", "lemmas interleave_intros[intro?] = interleave'.intros[to_set]", "lemmas interleave_intros(1)[simp]", "lemmas interleave_induct[consumes 1, induct set: interleave, case_names Nil left right] = interleave'.induct[to_set]", "lemmas interleave_cases[consumes 1, cases set: interleave] = interleave'.cases[to_set]", "lemmas interleave_simps = interleave'.simps[to_set]", "lemma interleave_comm: \"xs \\<in> ys \\<otimes> zs \\<Longrightarrow> xs \\<in> zs \\<otimes> ys\"", "lemma interleave_Nil1[simp]: \"[] \\<otimes> xs = {xs}\"", "lemma interleave_Nil2[simp]: \"xs \\<otimes> [] = {xs}\"", "lemma interleave_nil_simp[simp]: \"[] \\<in> xs \\<otimes> ys \\<longleftrightarrow> xs = [] \\<and> ys = []\"", "lemma append_interleave: \"xs @ ys \\<in> xs \\<otimes> ys\"", "lemma interleave_assoc1: \"a \\<in> xs \\<otimes> ys \\<Longrightarrow> b \\<in> a \\<otimes> zs \\<Longrightarrow> \\<exists> c. c \\<in> ys \\<otimes> zs \\<and>  b \\<in> xs  \\<otimes> c\"", "lemma interleave_assoc2: \"a \\<in> ys \\<otimes> zs \\<Longrightarrow> b \\<in> xs \\<otimes> a \\<Longrightarrow> \\<exists> c. c \\<in> xs \\<otimes> ys \\<and>  b \\<in> c \\<otimes> zs\"", "lemma interleave_set: \"zs \\<in> xs \\<otimes> ys \\<Longrightarrow> set zs = set xs \\<union> set ys\"", "lemma interleave_tl: \"xs \\<in> ys \\<otimes> zs \\<Longrightarrow> tl xs \\<in> tl ys \\<otimes> zs \\<or> tl xs \\<in> ys \\<otimes> (tl zs)\"", "lemma interleave_butlast: \"xs \\<in> ys \\<otimes> zs \\<Longrightarrow> butlast xs \\<in> butlast ys \\<otimes> zs \\<or> butlast xs \\<in> ys \\<otimes> (butlast zs)\"", "lemma interleave_take: \"zs \\<in> xs \\<otimes> ys \\<Longrightarrow> \\<exists> n\\<^sub>1 n\\<^sub>2. n = n\\<^sub>1 + n\\<^sub>2 \\<and>  take n zs \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys\"", "lemma filter_interleave: \"xs \\<in> ys \\<otimes> zs \\<Longrightarrow> filter P xs \\<in> filter P ys \\<otimes> filter P zs\"", "lemma interleave_filtered: \"xs \\<in> interleave (filter P xs)  (filter (\\<lambda>x'. \\<not> P x') xs)\"", "lemmas list_induct2'' = foo.induct[case_names NilNil ConsNil NilCons ConsCons]", "lemma interleave_filter:\n  assumes \"xs \\<in> filter P ys \\<otimes> filter P zs\"\n  obtains xs' where \"xs' \\<in> ys \\<otimes> zs\" and \"xs = filter P xs'\""], "translations": [["", "lemma elim_interleave'[pred_set_conv]: \"interleave' xs ys zs \\<longleftrightarrow> zs \\<in> xs \\<otimes> ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interleave' xs ys zs = (zs \\<in> xs \\<otimes> ys)", "unfolding interleave_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. interleave' xs ys zs = (zs \\<in> Collect (interleave' xs ys))", "by simp"], ["", "lemmas interleave_intros[intro?] = interleave'.intros[to_set]"], ["", "lemmas interleave_intros(1)[simp]"], ["", "lemmas interleave_induct[consumes 1, induct set: interleave, case_names Nil left right] = interleave'.induct[to_set]"], ["", "lemmas interleave_cases[consumes 1, cases set: interleave] = interleave'.cases[to_set]"], ["", "lemmas interleave_simps = interleave'.simps[to_set]"], ["", "inductive_cases interleave_ConsE[elim]: \"(x#xs) \\<in> ys \\<otimes> zs\""], ["", "inductive_cases interleave_ConsConsE[elim]: \"xs \\<in> y#ys \\<otimes> z#zs\""], ["", "inductive_cases interleave_ConsE2[elim]: \"xs \\<in> x#ys \\<otimes> zs\""], ["", "inductive_cases interleave_ConsE3[elim]: \"xs \\<in> ys \\<otimes> x#zs\""], ["", "lemma interleave_comm: \"xs \\<in> ys \\<otimes> zs \\<Longrightarrow> xs \\<in> zs \\<otimes> ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<in> ys \\<otimes> zs \\<Longrightarrow> xs \\<in> zs \\<otimes> ys", "by (induction rule: interleave_induct) (auto intro: interleave_intros)"], ["", "lemma interleave_Nil1[simp]: \"[] \\<otimes> xs = {xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [] \\<otimes> xs = {xs}", "by (induction xs) (auto intro: interleave_intros elim: interleave_cases)"], ["", "lemma interleave_Nil2[simp]: \"xs \\<otimes> [] = {xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<otimes> [] = {xs}", "by (induction xs) (auto intro: interleave_intros elim: interleave_cases)"], ["", "lemma interleave_nil_simp[simp]: \"[] \\<in> xs \\<otimes> ys \\<longleftrightarrow> xs = [] \\<and> ys = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([] \\<in> xs \\<otimes> ys) = (xs = [] \\<and> ys = [])", "by (auto elim: interleave_cases)"], ["", "lemma append_interleave: \"xs @ ys \\<in> xs \\<otimes> ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs @ ys \\<in> xs \\<otimes> ys", "by (induction xs) (auto intro: interleave_intros)"], ["", "lemma interleave_assoc1: \"a \\<in> xs \\<otimes> ys \\<Longrightarrow> b \\<in> a \\<otimes> zs \\<Longrightarrow> \\<exists> c. c \\<in> ys \\<otimes> zs \\<and>  b \\<in> xs  \\<otimes> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> xs \\<otimes> ys; b \\<in> a \\<otimes> zs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         c \\<in> ys \\<otimes> zs \\<and>\n                         b \\<in> xs \\<otimes> c", "by (induction b arbitrary: a  xs ys zs)\n     (simp, fastforce del: interleave_ConsE elim!: interleave_ConsE  intro: interleave_intros)"], ["", "lemma interleave_assoc2: \"a \\<in> ys \\<otimes> zs \\<Longrightarrow> b \\<in> xs \\<otimes> a \\<Longrightarrow> \\<exists> c. c \\<in> xs \\<otimes> ys \\<and>  b \\<in> c \\<otimes> zs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> ys \\<otimes> zs; b \\<in> xs \\<otimes> a\\<rbrakk>\n    \\<Longrightarrow> \\<exists>c.\n                         c \\<in> xs \\<otimes> ys \\<and>\n                         b \\<in> c \\<otimes> zs", "by (induction b arbitrary: a  xs ys zs )\n     (simp, fastforce del: interleave_ConsE elim!: interleave_ConsE  intro: interleave_intros)"], ["", "lemma interleave_set: \"zs \\<in> xs \\<otimes> ys \\<Longrightarrow> set zs = set xs \\<union> set ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zs \\<in> xs \\<otimes> ys \\<Longrightarrow>\n    set zs = set xs \\<union> set ys", "by(induction rule:interleave_induct) auto"], ["", "lemma interleave_tl: \"xs \\<in> ys \\<otimes> zs \\<Longrightarrow> tl xs \\<in> tl ys \\<otimes> zs \\<or> tl xs \\<in> ys \\<otimes> (tl zs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<in> ys \\<otimes> zs \\<Longrightarrow>\n    tl xs \\<in> tl ys \\<otimes> zs \\<or> tl xs \\<in> ys \\<otimes> tl zs", "by(induction rule:interleave_induct) auto"], ["", "lemma interleave_butlast: \"xs \\<in> ys \\<otimes> zs \\<Longrightarrow> butlast xs \\<in> butlast ys \\<otimes> zs \\<or> butlast xs \\<in> ys \\<otimes> (butlast zs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<in> ys \\<otimes> zs \\<Longrightarrow>\n    butlast xs \\<in> butlast ys \\<otimes> zs \\<or>\n    butlast xs \\<in> ys \\<otimes> butlast zs", "by (induction rule:interleave_induct) (auto intro: interleave_intros)"], ["", "lemma interleave_take: \"zs \\<in> xs \\<otimes> ys \\<Longrightarrow> \\<exists> n\\<^sub>1 n\\<^sub>2. n = n\\<^sub>1 + n\\<^sub>2 \\<and>  take n zs \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. zs \\<in> xs \\<otimes> ys \\<Longrightarrow>\n    \\<exists>n\\<^sub>1 n\\<^sub>2.\n       n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n       take n zs \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys", "apply(induction arbitrary: n rule:interleave_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n.\n       \\<exists>n\\<^sub>1 n\\<^sub>2.\n          n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n          take n [] \\<in> take n\\<^sub>1 [] \\<otimes> take n\\<^sub>2 []\n 2. \\<And>xs ys zs x n.\n       \\<lbrakk>zs \\<in> xs \\<otimes> ys;\n        \\<And>n.\n           \\<exists>n\\<^sub>1 n\\<^sub>2.\n              n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n              take n zs\n              \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<^sub>1 n\\<^sub>2.\n                            n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n                            take n (x # zs)\n                            \\<in> take n\\<^sub>1 (x # xs) \\<otimes>\n                                  take n\\<^sub>2 ys\n 3. \\<And>xs ys zs x n.\n       \\<lbrakk>zs \\<in> xs \\<otimes> ys;\n        \\<And>n.\n           \\<exists>n\\<^sub>1 n\\<^sub>2.\n              n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n              take n zs\n              \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<^sub>1 n\\<^sub>2.\n                            n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n                            take n (x # zs)\n                            \\<in> take n\\<^sub>1 xs \\<otimes>\n                                  take n\\<^sub>2 (x # ys)", "apply auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n. \\<exists>n\\<^sub>1 n\\<^sub>2. n = n\\<^sub>1 + n\\<^sub>2\n 2. \\<And>xs ys zs x n.\n       \\<lbrakk>zs \\<in> xs \\<otimes> ys;\n        \\<And>n.\n           \\<exists>n\\<^sub>1 n\\<^sub>2.\n              n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n              take n zs\n              \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<^sub>1 n\\<^sub>2.\n                            n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n                            take n (x # zs)\n                            \\<in> take n\\<^sub>1 (x # xs) \\<otimes>\n                                  take n\\<^sub>2 ys\n 3. \\<And>xs ys zs x n.\n       \\<lbrakk>zs \\<in> xs \\<otimes> ys;\n        \\<And>n.\n           \\<exists>n\\<^sub>1 n\\<^sub>2.\n              n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n              take n zs\n              \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<^sub>1 n\\<^sub>2.\n                            n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n                            take n (x # zs)\n                            \\<in> take n\\<^sub>1 xs \\<otimes>\n                                  take n\\<^sub>2 (x # ys)", "apply arith"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xs ys zs x n.\n       \\<lbrakk>zs \\<in> xs \\<otimes> ys;\n        \\<And>n.\n           \\<exists>n\\<^sub>1 n\\<^sub>2.\n              n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n              take n zs\n              \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<^sub>1 n\\<^sub>2.\n                            n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n                            take n (x # zs)\n                            \\<in> take n\\<^sub>1 (x # xs) \\<otimes>\n                                  take n\\<^sub>2 ys\n 2. \\<And>xs ys zs x n.\n       \\<lbrakk>zs \\<in> xs \\<otimes> ys;\n        \\<And>n.\n           \\<exists>n\\<^sub>1 n\\<^sub>2.\n              n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n              take n zs\n              \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<^sub>1 n\\<^sub>2.\n                            n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n                            take n (x # zs)\n                            \\<in> take n\\<^sub>1 xs \\<otimes>\n                                  take n\\<^sub>2 (x # ys)", "apply (case_tac n, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xs ys zs x n nat.\n       \\<lbrakk>zs \\<in> xs \\<otimes> ys;\n        \\<And>n.\n           \\<exists>n\\<^sub>1 n\\<^sub>2.\n              n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n              take n zs \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys;\n        n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<^sub>1 n\\<^sub>2.\n                            n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n                            take n (x # zs)\n                            \\<in> take n\\<^sub>1 (x # xs) \\<otimes>\n                                  take n\\<^sub>2 ys\n 2. \\<And>xs ys zs x n.\n       \\<lbrakk>zs \\<in> xs \\<otimes> ys;\n        \\<And>n.\n           \\<exists>n\\<^sub>1 n\\<^sub>2.\n              n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n              take n zs\n              \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<^sub>1 n\\<^sub>2.\n                            n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n                            take n (x # zs)\n                            \\<in> take n\\<^sub>1 xs \\<otimes>\n                                  take n\\<^sub>2 (x # ys)", "apply (drule_tac x = nat in meta_spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xs ys zs x n nat.\n       \\<lbrakk>zs \\<in> xs \\<otimes> ys; n = Suc nat;\n        \\<exists>n\\<^sub>1 n\\<^sub>2.\n           nat = n\\<^sub>1 + n\\<^sub>2 \\<and>\n           take nat zs\n           \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<^sub>1 n\\<^sub>2.\n                            n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n                            take n (x # zs)\n                            \\<in> take n\\<^sub>1 (x # xs) \\<otimes>\n                                  take n\\<^sub>2 ys\n 2. \\<And>xs ys zs x n.\n       \\<lbrakk>zs \\<in> xs \\<otimes> ys;\n        \\<And>n.\n           \\<exists>n\\<^sub>1 n\\<^sub>2.\n              n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n              take n zs\n              \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<^sub>1 n\\<^sub>2.\n                            n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n                            take n (x # zs)\n                            \\<in> take n\\<^sub>1 xs \\<otimes>\n                                  take n\\<^sub>2 (x # ys)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xs ys zs x n\\<^sub>1 n\\<^sub>2.\n       \\<lbrakk>zs \\<in> xs \\<otimes> ys;\n        take (n\\<^sub>1 + n\\<^sub>2) zs\n        \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<^sub>1' n\\<^sub>2'.\n                            Suc (n\\<^sub>1 + n\\<^sub>2) =\n                            n\\<^sub>1' + n\\<^sub>2' \\<and>\n                            x # take (n\\<^sub>1 + n\\<^sub>2) zs\n                            \\<in> take n\\<^sub>1' (x # xs) \\<otimes>\n                                  take n\\<^sub>2' ys\n 2. \\<And>xs ys zs x n.\n       \\<lbrakk>zs \\<in> xs \\<otimes> ys;\n        \\<And>n.\n           \\<exists>n\\<^sub>1 n\\<^sub>2.\n              n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n              take n zs\n              \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<^sub>1 n\\<^sub>2.\n                            n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n                            take n (x # zs)\n                            \\<in> take n\\<^sub>1 xs \\<otimes>\n                                  take n\\<^sub>2 (x # ys)", "apply (rule_tac x = \"Suc n\\<^sub>1\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xs ys zs x n\\<^sub>1 n\\<^sub>2.\n       \\<lbrakk>zs \\<in> xs \\<otimes> ys;\n        take (n\\<^sub>1 + n\\<^sub>2) zs\n        \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<^sub>2'.\n                            Suc (n\\<^sub>1 + n\\<^sub>2) =\n                            Suc n\\<^sub>1 + n\\<^sub>2' \\<and>\n                            x # take (n\\<^sub>1 + n\\<^sub>2) zs\n                            \\<in> take (Suc n\\<^sub>1) (x # xs) \\<otimes>\n                                  take n\\<^sub>2' ys\n 2. \\<And>xs ys zs x n.\n       \\<lbrakk>zs \\<in> xs \\<otimes> ys;\n        \\<And>n.\n           \\<exists>n\\<^sub>1 n\\<^sub>2.\n              n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n              take n zs\n              \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<^sub>1 n\\<^sub>2.\n                            n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n                            take n (x # zs)\n                            \\<in> take n\\<^sub>1 xs \\<otimes>\n                                  take n\\<^sub>2 (x # ys)", "apply (rule_tac x = \"n\\<^sub>2\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xs ys zs x n\\<^sub>1 n\\<^sub>2.\n       \\<lbrakk>zs \\<in> xs \\<otimes> ys;\n        take (n\\<^sub>1 + n\\<^sub>2) zs\n        \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys\\<rbrakk>\n       \\<Longrightarrow> Suc (n\\<^sub>1 + n\\<^sub>2) =\n                         Suc n\\<^sub>1 + n\\<^sub>2 \\<and>\n                         x # take (n\\<^sub>1 + n\\<^sub>2) zs\n                         \\<in> take (Suc n\\<^sub>1) (x # xs) \\<otimes>\n                               take n\\<^sub>2 ys\n 2. \\<And>xs ys zs x n.\n       \\<lbrakk>zs \\<in> xs \\<otimes> ys;\n        \\<And>n.\n           \\<exists>n\\<^sub>1 n\\<^sub>2.\n              n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n              take n zs\n              \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<^sub>1 n\\<^sub>2.\n                            n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n                            take n (x # zs)\n                            \\<in> take n\\<^sub>1 xs \\<otimes>\n                                  take n\\<^sub>2 (x # ys)", "apply (auto intro: interleave_intros)[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xs ys zs x n.\n       \\<lbrakk>zs \\<in> xs \\<otimes> ys;\n        \\<And>n.\n           \\<exists>n\\<^sub>1 n\\<^sub>2.\n              n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n              take n zs\n              \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<^sub>1 n\\<^sub>2.\n                            n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n                            take n (x # zs)\n                            \\<in> take n\\<^sub>1 xs \\<otimes>\n                                  take n\\<^sub>2 (x # ys)", "apply (case_tac n, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xs ys zs x n nat.\n       \\<lbrakk>zs \\<in> xs \\<otimes> ys;\n        \\<And>n.\n           \\<exists>n\\<^sub>1 n\\<^sub>2.\n              n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n              take n zs \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys;\n        n = Suc nat\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<^sub>1 n\\<^sub>2.\n                            n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n                            take n (x # zs)\n                            \\<in> take n\\<^sub>1 xs \\<otimes>\n                                  take n\\<^sub>2 (x # ys)", "apply (drule_tac x = nat in meta_spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xs ys zs x n nat.\n       \\<lbrakk>zs \\<in> xs \\<otimes> ys; n = Suc nat;\n        \\<exists>n\\<^sub>1 n\\<^sub>2.\n           nat = n\\<^sub>1 + n\\<^sub>2 \\<and>\n           take nat zs\n           \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<^sub>1 n\\<^sub>2.\n                            n = n\\<^sub>1 + n\\<^sub>2 \\<and>\n                            take n (x # zs)\n                            \\<in> take n\\<^sub>1 xs \\<otimes>\n                                  take n\\<^sub>2 (x # ys)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xs ys zs x n\\<^sub>1 n\\<^sub>2.\n       \\<lbrakk>zs \\<in> xs \\<otimes> ys;\n        take (n\\<^sub>1 + n\\<^sub>2) zs\n        \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<^sub>1' n\\<^sub>2'.\n                            Suc (n\\<^sub>1 + n\\<^sub>2) =\n                            n\\<^sub>1' + n\\<^sub>2' \\<and>\n                            x # take (n\\<^sub>1 + n\\<^sub>2) zs\n                            \\<in> take n\\<^sub>1' xs \\<otimes>\n                                  take n\\<^sub>2' (x # ys)", "apply (rule_tac x = \"n\\<^sub>1\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xs ys zs x n\\<^sub>1 n\\<^sub>2.\n       \\<lbrakk>zs \\<in> xs \\<otimes> ys;\n        take (n\\<^sub>1 + n\\<^sub>2) zs\n        \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n\\<^sub>2'.\n                            Suc (n\\<^sub>1 + n\\<^sub>2) =\n                            n\\<^sub>1 + n\\<^sub>2' \\<and>\n                            x # take (n\\<^sub>1 + n\\<^sub>2) zs\n                            \\<in> take n\\<^sub>1 xs \\<otimes>\n                                  take n\\<^sub>2' (x # ys)", "apply (rule_tac x = \"Suc n\\<^sub>2\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xs ys zs x n\\<^sub>1 n\\<^sub>2.\n       \\<lbrakk>zs \\<in> xs \\<otimes> ys;\n        take (n\\<^sub>1 + n\\<^sub>2) zs\n        \\<in> take n\\<^sub>1 xs \\<otimes> take n\\<^sub>2 ys\\<rbrakk>\n       \\<Longrightarrow> Suc (n\\<^sub>1 + n\\<^sub>2) =\n                         n\\<^sub>1 + Suc n\\<^sub>2 \\<and>\n                         x # take (n\\<^sub>1 + n\\<^sub>2) zs\n                         \\<in> take n\\<^sub>1 xs \\<otimes>\n                               take (Suc n\\<^sub>2) (x # ys)", "apply (auto intro: interleave_intros)[1]"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma filter_interleave: \"xs \\<in> ys \\<otimes> zs \\<Longrightarrow> filter P xs \\<in> filter P ys \\<otimes> filter P zs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<in> ys \\<otimes> zs \\<Longrightarrow>\n    filter P xs \\<in> filter P ys \\<otimes> filter P zs", "by (induction rule: interleave_induct)  (auto intro: interleave_intros)"], ["", "lemma interleave_filtered: \"xs \\<in> interleave (filter P xs)  (filter (\\<lambda>x'. \\<not> P x') xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<in> filter P xs \\<otimes> filter (\\<lambda>x'. \\<not> P x') xs", "by (induction xs) (auto intro: interleave_intros)"], ["", "function foo where \n  \"foo [] [] = undefined\"\n| \"foo xs [] = undefined\"\n| \"foo [] ys = undefined\"\n| \"foo (x#xs) (y#ys) = undefined (foo xs (y#ys)) (foo (x#xs) ys)\""], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>x = ([], []) \\<Longrightarrow> P;\n        \\<And>xs. x = (xs, []) \\<Longrightarrow> P;\n        \\<And>ys. x = ([], ys) \\<Longrightarrow> P;\n        \\<And>xa xs y ys. x = (xa # xs, y # ys) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. ([], []) = ([], []) \\<Longrightarrow> undefined = undefined\n 3. \\<And>xs. ([], []) = (xs, []) \\<Longrightarrow> undefined = undefined\n 4. \\<And>ys. ([], []) = ([], ys) \\<Longrightarrow> undefined = undefined\n 5. \\<And>x xs y ys.\n       ([], []) = (x # xs, y # ys) \\<Longrightarrow>\n       undefined = undefined (foo_sumC (xs, y # ys)) (foo_sumC (x # xs, ys))\n 6. \\<And>xs xsa.\n       (xs, []) = (xsa, []) \\<Longrightarrow> undefined = undefined\n 7. \\<And>xs ys. (xs, []) = ([], ys) \\<Longrightarrow> undefined = undefined\n 8. \\<And>xs x xsa y ys.\n       (xs, []) = (x # xsa, y # ys) \\<Longrightarrow>\n       undefined =\n       undefined (foo_sumC (xsa, y # ys)) (foo_sumC (x # xsa, ys))\n 9. \\<And>ys ysa.\n       ([], ys) = ([], ysa) \\<Longrightarrow> undefined = undefined\n 10. \\<And>ys x xs y ysa.\n        ([], ys) = (x # xs, y # ysa) \\<Longrightarrow>\n        undefined =\n        undefined (foo_sumC (xs, y # ysa)) (foo_sumC (x # xs, ysa))\nA total of 11 subgoals...", "by pat_completeness auto"], ["", "termination"], ["proof (prove)\ngoal (1 subgoal):\n 1. All foo_dom", "by lexicographic_order"], ["", "lemmas list_induct2'' = foo.induct[case_names NilNil ConsNil NilCons ConsCons]"], ["", "lemma interleave_filter:\n  assumes \"xs \\<in> filter P ys \\<otimes> filter P zs\"\n  obtains xs' where \"xs' \\<in> ys \\<otimes> zs\" and \"xs = filter P xs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>xs'.\n        \\<lbrakk>xs' \\<in> ys \\<otimes> zs; xs = filter P xs'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  xs \\<in> filter P ys \\<otimes> filter P zs\n\ngoal (1 subgoal):\n 1. (\\<And>xs'.\n        \\<lbrakk>xs' \\<in> ys \\<otimes> zs; xs = filter P xs'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "apply atomize_elim"], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<in> filter P ys \\<otimes> filter P zs \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> ys \\<otimes> zs \\<and> xs = filter P xs'", "proof(induction ys zs arbitrary: xs rule: list_induct2'')"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>xs.\n       xs \\<in> filter P [] \\<otimes> filter P [] \\<Longrightarrow>\n       \\<exists>xs'. xs' \\<in> [] \\<otimes> [] \\<and> xs = filter P xs'\n 2. \\<And>xs xsa.\n       xsa \\<in> filter P xs \\<otimes> filter P [] \\<Longrightarrow>\n       \\<exists>xs'. xs' \\<in> xs \\<otimes> [] \\<and> xsa = filter P xs'\n 3. \\<And>ys xs.\n       xs \\<in> filter P [] \\<otimes> filter P ys \\<Longrightarrow>\n       \\<exists>xs'. xs' \\<in> [] \\<otimes> ys \\<and> xs = filter P xs'\n 4. \\<And>x xs y ys xsa.\n       \\<lbrakk>\\<And>xsa.\n                   xsa\n                   \\<in> filter P xs \\<otimes>\n                         filter P (y # ys) \\<Longrightarrow>\n                   \\<exists>xs'.\n                      xs' \\<in> xs \\<otimes> y # ys \\<and>\n                      xsa = filter P xs';\n        \\<And>xsa.\n           xsa\n           \\<in> filter P (x # xs) \\<otimes> filter P ys \\<Longrightarrow>\n           \\<exists>xs'.\n              xs' \\<in> x # xs \\<otimes> ys \\<and> xsa = filter P xs';\n        xsa \\<in> filter P (x # xs) \\<otimes> filter P (y # ys)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> x # xs \\<otimes> y # ys \\<and>\n                            xsa = filter P xs'", "case NilNil"], ["proof (state)\nthis:\n  xs \\<in> filter P [] \\<otimes> filter P []\n\ngoal (4 subgoals):\n 1. \\<And>xs.\n       xs \\<in> filter P [] \\<otimes> filter P [] \\<Longrightarrow>\n       \\<exists>xs'. xs' \\<in> [] \\<otimes> [] \\<and> xs = filter P xs'\n 2. \\<And>xs xsa.\n       xsa \\<in> filter P xs \\<otimes> filter P [] \\<Longrightarrow>\n       \\<exists>xs'. xs' \\<in> xs \\<otimes> [] \\<and> xsa = filter P xs'\n 3. \\<And>ys xs.\n       xs \\<in> filter P [] \\<otimes> filter P ys \\<Longrightarrow>\n       \\<exists>xs'. xs' \\<in> [] \\<otimes> ys \\<and> xs = filter P xs'\n 4. \\<And>x xs y ys xsa.\n       \\<lbrakk>\\<And>xsa.\n                   xsa\n                   \\<in> filter P xs \\<otimes>\n                         filter P (y # ys) \\<Longrightarrow>\n                   \\<exists>xs'.\n                      xs' \\<in> xs \\<otimes> y # ys \\<and>\n                      xsa = filter P xs';\n        \\<And>xsa.\n           xsa\n           \\<in> filter P (x # xs) \\<otimes> filter P ys \\<Longrightarrow>\n           \\<exists>xs'.\n              xs' \\<in> x # xs \\<otimes> ys \\<and> xsa = filter P xs';\n        xsa \\<in> filter P (x # xs) \\<otimes> filter P (y # ys)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> x # xs \\<otimes> y # ys \\<and>\n                            xsa = filter P xs'", "thus ?case"], ["proof (prove)\nusing this:\n  xs \\<in> filter P [] \\<otimes> filter P []\n\ngoal (1 subgoal):\n 1. \\<exists>xs'. xs' \\<in> [] \\<otimes> [] \\<and> xs = filter P xs'", "by simp"], ["proof (state)\nthis:\n  \\<exists>xs'. xs' \\<in> [] \\<otimes> [] \\<and> xs = filter P xs'\n\ngoal (3 subgoals):\n 1. \\<And>xs xsa.\n       xsa \\<in> filter P xs \\<otimes> filter P [] \\<Longrightarrow>\n       \\<exists>xs'. xs' \\<in> xs \\<otimes> [] \\<and> xsa = filter P xs'\n 2. \\<And>ys xs.\n       xs \\<in> filter P [] \\<otimes> filter P ys \\<Longrightarrow>\n       \\<exists>xs'. xs' \\<in> [] \\<otimes> ys \\<and> xs = filter P xs'\n 3. \\<And>x xs y ys xsa.\n       \\<lbrakk>\\<And>xsa.\n                   xsa\n                   \\<in> filter P xs \\<otimes>\n                         filter P (y # ys) \\<Longrightarrow>\n                   \\<exists>xs'.\n                      xs' \\<in> xs \\<otimes> y # ys \\<and>\n                      xsa = filter P xs';\n        \\<And>xsa.\n           xsa\n           \\<in> filter P (x # xs) \\<otimes> filter P ys \\<Longrightarrow>\n           \\<exists>xs'.\n              xs' \\<in> x # xs \\<otimes> ys \\<and> xsa = filter P xs';\n        xsa \\<in> filter P (x # xs) \\<otimes> filter P (y # ys)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> x # xs \\<otimes> y # ys \\<and>\n                            xsa = filter P xs'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>xs xsa.\n       xsa \\<in> filter P xs \\<otimes> filter P [] \\<Longrightarrow>\n       \\<exists>xs'. xs' \\<in> xs \\<otimes> [] \\<and> xsa = filter P xs'\n 2. \\<And>ys xs.\n       xs \\<in> filter P [] \\<otimes> filter P ys \\<Longrightarrow>\n       \\<exists>xs'. xs' \\<in> [] \\<otimes> ys \\<and> xs = filter P xs'\n 3. \\<And>x xs y ys xsa.\n       \\<lbrakk>\\<And>xsa.\n                   xsa\n                   \\<in> filter P xs \\<otimes>\n                         filter P (y # ys) \\<Longrightarrow>\n                   \\<exists>xs'.\n                      xs' \\<in> xs \\<otimes> y # ys \\<and>\n                      xsa = filter P xs';\n        \\<And>xsa.\n           xsa\n           \\<in> filter P (x # xs) \\<otimes> filter P ys \\<Longrightarrow>\n           \\<exists>xs'.\n              xs' \\<in> x # xs \\<otimes> ys \\<and> xsa = filter P xs';\n        xsa \\<in> filter P (x # xs) \\<otimes> filter P (y # ys)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> x # xs \\<otimes> y # ys \\<and>\n                            xsa = filter P xs'", "case (ConsNil ys xs)"], ["proof (state)\nthis:\n  xs \\<in> filter P ys \\<otimes> filter P []\n\ngoal (3 subgoals):\n 1. \\<And>xs xsa.\n       xsa \\<in> filter P xs \\<otimes> filter P [] \\<Longrightarrow>\n       \\<exists>xs'. xs' \\<in> xs \\<otimes> [] \\<and> xsa = filter P xs'\n 2. \\<And>ys xs.\n       xs \\<in> filter P [] \\<otimes> filter P ys \\<Longrightarrow>\n       \\<exists>xs'. xs' \\<in> [] \\<otimes> ys \\<and> xs = filter P xs'\n 3. \\<And>x xs y ys xsa.\n       \\<lbrakk>\\<And>xsa.\n                   xsa\n                   \\<in> filter P xs \\<otimes>\n                         filter P (y # ys) \\<Longrightarrow>\n                   \\<exists>xs'.\n                      xs' \\<in> xs \\<otimes> y # ys \\<and>\n                      xsa = filter P xs';\n        \\<And>xsa.\n           xsa\n           \\<in> filter P (x # xs) \\<otimes> filter P ys \\<Longrightarrow>\n           \\<exists>xs'.\n              xs' \\<in> x # xs \\<otimes> ys \\<and> xsa = filter P xs';\n        xsa \\<in> filter P (x # xs) \\<otimes> filter P (y # ys)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> x # xs \\<otimes> y # ys \\<and>\n                            xsa = filter P xs'", "thus ?case"], ["proof (prove)\nusing this:\n  xs \\<in> filter P ys \\<otimes> filter P []\n\ngoal (1 subgoal):\n 1. \\<exists>xs'. xs' \\<in> ys \\<otimes> [] \\<and> xs = filter P xs'", "by auto"], ["proof (state)\nthis:\n  \\<exists>xs'. xs' \\<in> ys \\<otimes> [] \\<and> xs = filter P xs'\n\ngoal (2 subgoals):\n 1. \\<And>ys xs.\n       xs \\<in> filter P [] \\<otimes> filter P ys \\<Longrightarrow>\n       \\<exists>xs'. xs' \\<in> [] \\<otimes> ys \\<and> xs = filter P xs'\n 2. \\<And>x xs y ys xsa.\n       \\<lbrakk>\\<And>xsa.\n                   xsa\n                   \\<in> filter P xs \\<otimes>\n                         filter P (y # ys) \\<Longrightarrow>\n                   \\<exists>xs'.\n                      xs' \\<in> xs \\<otimes> y # ys \\<and>\n                      xsa = filter P xs';\n        \\<And>xsa.\n           xsa\n           \\<in> filter P (x # xs) \\<otimes> filter P ys \\<Longrightarrow>\n           \\<exists>xs'.\n              xs' \\<in> x # xs \\<otimes> ys \\<and> xsa = filter P xs';\n        xsa \\<in> filter P (x # xs) \\<otimes> filter P (y # ys)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> x # xs \\<otimes> y # ys \\<and>\n                            xsa = filter P xs'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys xs.\n       xs \\<in> filter P [] \\<otimes> filter P ys \\<Longrightarrow>\n       \\<exists>xs'. xs' \\<in> [] \\<otimes> ys \\<and> xs = filter P xs'\n 2. \\<And>x xs y ys xsa.\n       \\<lbrakk>\\<And>xsa.\n                   xsa\n                   \\<in> filter P xs \\<otimes>\n                         filter P (y # ys) \\<Longrightarrow>\n                   \\<exists>xs'.\n                      xs' \\<in> xs \\<otimes> y # ys \\<and>\n                      xsa = filter P xs';\n        \\<And>xsa.\n           xsa\n           \\<in> filter P (x # xs) \\<otimes> filter P ys \\<Longrightarrow>\n           \\<exists>xs'.\n              xs' \\<in> x # xs \\<otimes> ys \\<and> xsa = filter P xs';\n        xsa \\<in> filter P (x # xs) \\<otimes> filter P (y # ys)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> x # xs \\<otimes> y # ys \\<and>\n                            xsa = filter P xs'", "case (NilCons zs xs)"], ["proof (state)\nthis:\n  xs \\<in> filter P [] \\<otimes> filter P zs\n\ngoal (2 subgoals):\n 1. \\<And>ys xs.\n       xs \\<in> filter P [] \\<otimes> filter P ys \\<Longrightarrow>\n       \\<exists>xs'. xs' \\<in> [] \\<otimes> ys \\<and> xs = filter P xs'\n 2. \\<And>x xs y ys xsa.\n       \\<lbrakk>\\<And>xsa.\n                   xsa\n                   \\<in> filter P xs \\<otimes>\n                         filter P (y # ys) \\<Longrightarrow>\n                   \\<exists>xs'.\n                      xs' \\<in> xs \\<otimes> y # ys \\<and>\n                      xsa = filter P xs';\n        \\<And>xsa.\n           xsa\n           \\<in> filter P (x # xs) \\<otimes> filter P ys \\<Longrightarrow>\n           \\<exists>xs'.\n              xs' \\<in> x # xs \\<otimes> ys \\<and> xsa = filter P xs';\n        xsa \\<in> filter P (x # xs) \\<otimes> filter P (y # ys)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> x # xs \\<otimes> y # ys \\<and>\n                            xsa = filter P xs'", "thus ?case"], ["proof (prove)\nusing this:\n  xs \\<in> filter P [] \\<otimes> filter P zs\n\ngoal (1 subgoal):\n 1. \\<exists>xs'. xs' \\<in> [] \\<otimes> zs \\<and> xs = filter P xs'", "by auto"], ["proof (state)\nthis:\n  \\<exists>xs'. xs' \\<in> [] \\<otimes> zs \\<and> xs = filter P xs'\n\ngoal (1 subgoal):\n 1. \\<And>x xs y ys xsa.\n       \\<lbrakk>\\<And>xsa.\n                   xsa\n                   \\<in> filter P xs \\<otimes>\n                         filter P (y # ys) \\<Longrightarrow>\n                   \\<exists>xs'.\n                      xs' \\<in> xs \\<otimes> y # ys \\<and>\n                      xsa = filter P xs';\n        \\<And>xsa.\n           xsa\n           \\<in> filter P (x # xs) \\<otimes> filter P ys \\<Longrightarrow>\n           \\<exists>xs'.\n              xs' \\<in> x # xs \\<otimes> ys \\<and> xsa = filter P xs';\n        xsa \\<in> filter P (x # xs) \\<otimes> filter P (y # ys)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> x # xs \\<otimes> y # ys \\<and>\n                            xsa = filter P xs'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xs y ys xsa.\n       \\<lbrakk>\\<And>xsa.\n                   xsa\n                   \\<in> filter P xs \\<otimes>\n                         filter P (y # ys) \\<Longrightarrow>\n                   \\<exists>xs'.\n                      xs' \\<in> xs \\<otimes> y # ys \\<and>\n                      xsa = filter P xs';\n        \\<And>xsa.\n           xsa\n           \\<in> filter P (x # xs) \\<otimes> filter P ys \\<Longrightarrow>\n           \\<exists>xs'.\n              xs' \\<in> x # xs \\<otimes> ys \\<and> xsa = filter P xs';\n        xsa \\<in> filter P (x # xs) \\<otimes> filter P (y # ys)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> x # xs \\<otimes> y # ys \\<and>\n                            xsa = filter P xs'", "case (ConsCons y ys z zs xs)"], ["proof (state)\nthis:\n  ?xs \\<in> filter P ys \\<otimes> filter P (z # zs) \\<Longrightarrow>\n  \\<exists>xs'. xs' \\<in> ys \\<otimes> z # zs \\<and> ?xs = filter P xs'\n  ?xs \\<in> filter P (y # ys) \\<otimes> filter P zs \\<Longrightarrow>\n  \\<exists>xs'. xs' \\<in> y # ys \\<otimes> zs \\<and> ?xs = filter P xs'\n  xs \\<in> filter P (y # ys) \\<otimes> filter P (z # zs)\n\ngoal (1 subgoal):\n 1. \\<And>x xs y ys xsa.\n       \\<lbrakk>\\<And>xsa.\n                   xsa\n                   \\<in> filter P xs \\<otimes>\n                         filter P (y # ys) \\<Longrightarrow>\n                   \\<exists>xs'.\n                      xs' \\<in> xs \\<otimes> y # ys \\<and>\n                      xsa = filter P xs';\n        \\<And>xsa.\n           xsa\n           \\<in> filter P (x # xs) \\<otimes> filter P ys \\<Longrightarrow>\n           \\<exists>xs'.\n              xs' \\<in> x # xs \\<otimes> ys \\<and> xsa = filter P xs';\n        xsa \\<in> filter P (x # xs) \\<otimes> filter P (y # ys)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> x # xs \\<otimes> y # ys \\<and>\n                            xsa = filter P xs'", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "proof(cases \"P y\")"], ["proof (state)\ngoal (2 subgoals):\n 1. P y \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'\n 2. \\<not> P y \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "case False"], ["proof (state)\nthis:\n  \\<not> P y\n\ngoal (2 subgoals):\n 1. P y \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'\n 2. \\<not> P y \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "with ConsCons.prems(1)"], ["proof (chain)\npicking this:\n  xs \\<in> filter P (y # ys) \\<otimes> filter P (z # zs)\n  \\<not> P y", "have \"xs \\<in> filter P ys \\<otimes> filter P (z#zs)\""], ["proof (prove)\nusing this:\n  xs \\<in> filter P (y # ys) \\<otimes> filter P (z # zs)\n  \\<not> P y\n\ngoal (1 subgoal):\n 1. xs \\<in> filter P ys \\<otimes> filter P (z # zs)", "by simp"], ["proof (state)\nthis:\n  xs \\<in> filter P ys \\<otimes> filter P (z # zs)\n\ngoal (2 subgoals):\n 1. P y \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'\n 2. \\<not> P y \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "from ConsCons.IH(1)[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>xs'. xs' \\<in> ys \\<otimes> z # zs \\<and> xs = filter P xs'", "obtain xs' where \"xs' \\<in> ys \\<otimes> (z # zs)\" \"xs = filter P xs'\""], ["proof (prove)\nusing this:\n  \\<exists>xs'. xs' \\<in> ys \\<otimes> z # zs \\<and> xs = filter P xs'\n\ngoal (1 subgoal):\n 1. (\\<And>xs'.\n        \\<lbrakk>xs' \\<in> ys \\<otimes> z # zs; xs = filter P xs'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  xs' \\<in> ys \\<otimes> z # zs\n  xs = filter P xs'\n\ngoal (2 subgoals):\n 1. P y \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'\n 2. \\<not> P y \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "hence \"y#xs' \\<in> y#ys \\<otimes> z#zs\" and \"xs = filter P (y#xs')\""], ["proof (prove)\nusing this:\n  xs' \\<in> ys \\<otimes> z # zs\n  xs = filter P xs'\n\ngoal (1 subgoal):\n 1. y # xs' \\<in> y # ys \\<otimes> z # zs &&& xs = filter P (y # xs')", "using False"], ["proof (prove)\nusing this:\n  xs' \\<in> ys \\<otimes> z # zs\n  xs = filter P xs'\n  \\<not> P y\n\ngoal (1 subgoal):\n 1. y # xs' \\<in> y # ys \\<otimes> z # zs &&& xs = filter P (y # xs')", "by (auto intro: interleave_intros)"], ["proof (state)\nthis:\n  y # xs' \\<in> y # ys \\<otimes> z # zs\n  xs = filter P (y # xs')\n\ngoal (2 subgoals):\n 1. P y \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'\n 2. \\<not> P y \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "thus ?thesis"], ["proof (prove)\nusing this:\n  y # xs' \\<in> y # ys \\<otimes> z # zs\n  xs = filter P (y # xs')\n\ngoal (1 subgoal):\n 1. \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "by blast"], ["proof (state)\nthis:\n  \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'\n\ngoal (1 subgoal):\n 1. P y \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P y \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "case True"], ["proof (state)\nthis:\n  P y\n\ngoal (1 subgoal):\n 1. P y \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "proof(cases \"P z\")"], ["proof (state)\ngoal (2 subgoals):\n 1. P z \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'\n 2. \\<not> P z \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "case False"], ["proof (state)\nthis:\n  \\<not> P z\n\ngoal (2 subgoals):\n 1. P z \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'\n 2. \\<not> P z \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "with ConsCons.prems(1)"], ["proof (chain)\npicking this:\n  xs \\<in> filter P (y # ys) \\<otimes> filter P (z # zs)\n  \\<not> P z", "have \"xs \\<in> filter P (y#ys) \\<otimes> filter P zs\""], ["proof (prove)\nusing this:\n  xs \\<in> filter P (y # ys) \\<otimes> filter P (z # zs)\n  \\<not> P z\n\ngoal (1 subgoal):\n 1. xs \\<in> filter P (y # ys) \\<otimes> filter P zs", "by simp"], ["proof (state)\nthis:\n  xs \\<in> filter P (y # ys) \\<otimes> filter P zs\n\ngoal (2 subgoals):\n 1. P z \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'\n 2. \\<not> P z \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "from ConsCons.IH(2)[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>xs'. xs' \\<in> y # ys \\<otimes> zs \\<and> xs = filter P xs'", "obtain xs' where \"xs' \\<in> y#ys \\<otimes> zs\" \"xs = filter P xs'\""], ["proof (prove)\nusing this:\n  \\<exists>xs'. xs' \\<in> y # ys \\<otimes> zs \\<and> xs = filter P xs'\n\ngoal (1 subgoal):\n 1. (\\<And>xs'.\n        \\<lbrakk>xs' \\<in> y # ys \\<otimes> zs; xs = filter P xs'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  xs' \\<in> y # ys \\<otimes> zs\n  xs = filter P xs'\n\ngoal (2 subgoals):\n 1. P z \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'\n 2. \\<not> P z \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "hence \"z#xs' \\<in> y#ys \\<otimes> z#zs\" and \"xs = filter P (z#xs')\""], ["proof (prove)\nusing this:\n  xs' \\<in> y # ys \\<otimes> zs\n  xs = filter P xs'\n\ngoal (1 subgoal):\n 1. z # xs' \\<in> y # ys \\<otimes> z # zs &&& xs = filter P (z # xs')", "using False"], ["proof (prove)\nusing this:\n  xs' \\<in> y # ys \\<otimes> zs\n  xs = filter P xs'\n  \\<not> P z\n\ngoal (1 subgoal):\n 1. z # xs' \\<in> y # ys \\<otimes> z # zs &&& xs = filter P (z # xs')", "by (auto intro: interleave_intros)"], ["proof (state)\nthis:\n  z # xs' \\<in> y # ys \\<otimes> z # zs\n  xs = filter P (z # xs')\n\ngoal (2 subgoals):\n 1. P z \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'\n 2. \\<not> P z \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "thus ?thesis"], ["proof (prove)\nusing this:\n  z # xs' \\<in> y # ys \\<otimes> z # zs\n  xs = filter P (z # xs')\n\ngoal (1 subgoal):\n 1. \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "by blast"], ["proof (state)\nthis:\n  \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'\n\ngoal (1 subgoal):\n 1. P z \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P z \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "case True"], ["proof (state)\nthis:\n  P z\n\ngoal (1 subgoal):\n 1. P z \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "from ConsCons.prems(1) \\<open>P y\\<close> \\<open>P z\\<close>"], ["proof (chain)\npicking this:\n  xs \\<in> filter P (y # ys) \\<otimes> filter P (z # zs)\n  P y\n  P z", "have \"xs \\<in> y # filter P ys  \\<otimes> z # filter P zs\""], ["proof (prove)\nusing this:\n  xs \\<in> filter P (y # ys) \\<otimes> filter P (z # zs)\n  P y\n  P z\n\ngoal (1 subgoal):\n 1. xs \\<in> y # filter P ys \\<otimes> z # filter P zs", "by simp"], ["proof (state)\nthis:\n  xs \\<in> y # filter P ys \\<otimes> z # filter P zs\n\ngoal (1 subgoal):\n 1. P z \\<Longrightarrow>\n    \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "thus ?thesis"], ["proof (prove)\nusing this:\n  xs \\<in> y # filter P ys \\<otimes> z # filter P zs\n\ngoal (1 subgoal):\n 1. \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "proof(rule interleave_ConsConsE)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>zs.\n       \\<lbrakk>xs = y # zs;\n        zs \\<in> filter P ys \\<otimes> z # filter P zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> y # ys \\<otimes> z # zs \\<and>\n                            xs = filter P xs'\n 2. \\<And>zs.\n       \\<lbrakk>xs = z # zs;\n        zs \\<in> y # filter P ys \\<otimes> filter P zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> y # ys \\<otimes> z # zs \\<and>\n                            xs = filter P xs'", "fix xs'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>zs.\n       \\<lbrakk>xs = y # zs;\n        zs \\<in> filter P ys \\<otimes> z # filter P zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> y # ys \\<otimes> z # zs \\<and>\n                            xs = filter P xs'\n 2. \\<And>zs.\n       \\<lbrakk>xs = z # zs;\n        zs \\<in> y # filter P ys \\<otimes> filter P zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> y # ys \\<otimes> z # zs \\<and>\n                            xs = filter P xs'", "assume \"xs = y # xs'\" and \"xs' \\<in> interleave (filter P ys) (z # filter P zs)\""], ["proof (state)\nthis:\n  xs = y # xs'\n  xs' \\<in> filter P ys \\<otimes> z # filter P zs\n\ngoal (2 subgoals):\n 1. \\<And>zs.\n       \\<lbrakk>xs = y # zs;\n        zs \\<in> filter P ys \\<otimes> z # filter P zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> y # ys \\<otimes> z # zs \\<and>\n                            xs = filter P xs'\n 2. \\<And>zs.\n       \\<lbrakk>xs = z # zs;\n        zs \\<in> y # filter P ys \\<otimes> filter P zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> y # ys \\<otimes> z # zs \\<and>\n                            xs = filter P xs'", "hence \"xs' \\<in> filter P ys  \\<otimes> filter P (z#zs)\""], ["proof (prove)\nusing this:\n  xs = y # xs'\n  xs' \\<in> filter P ys \\<otimes> z # filter P zs\n\ngoal (1 subgoal):\n 1. xs' \\<in> filter P ys \\<otimes> filter P (z # zs)", "using \\<open>P z\\<close>"], ["proof (prove)\nusing this:\n  xs = y # xs'\n  xs' \\<in> filter P ys \\<otimes> z # filter P zs\n  P z\n\ngoal (1 subgoal):\n 1. xs' \\<in> filter P ys \\<otimes> filter P (z # zs)", "by simp"], ["proof (state)\nthis:\n  xs' \\<in> filter P ys \\<otimes> filter P (z # zs)\n\ngoal (2 subgoals):\n 1. \\<And>zs.\n       \\<lbrakk>xs = y # zs;\n        zs \\<in> filter P ys \\<otimes> z # filter P zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> y # ys \\<otimes> z # zs \\<and>\n                            xs = filter P xs'\n 2. \\<And>zs.\n       \\<lbrakk>xs = z # zs;\n        zs \\<in> y # filter P ys \\<otimes> filter P zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> y # ys \\<otimes> z # zs \\<and>\n                            xs = filter P xs'", "from ConsCons.IH(1)[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>xs'a. xs'a \\<in> ys \\<otimes> z # zs \\<and> xs' = filter P xs'a", "obtain xs'' where \"xs'' \\<in> ys \\<otimes> (z # zs)\" and \"xs' = filter P xs''\""], ["proof (prove)\nusing this:\n  \\<exists>xs'a. xs'a \\<in> ys \\<otimes> z # zs \\<and> xs' = filter P xs'a\n\ngoal (1 subgoal):\n 1. (\\<And>xs''.\n        \\<lbrakk>xs'' \\<in> ys \\<otimes> z # zs;\n         xs' = filter P xs''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  xs'' \\<in> ys \\<otimes> z # zs\n  xs' = filter P xs''\n\ngoal (2 subgoals):\n 1. \\<And>zs.\n       \\<lbrakk>xs = y # zs;\n        zs \\<in> filter P ys \\<otimes> z # filter P zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> y # ys \\<otimes> z # zs \\<and>\n                            xs = filter P xs'\n 2. \\<And>zs.\n       \\<lbrakk>xs = z # zs;\n        zs \\<in> y # filter P ys \\<otimes> filter P zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> y # ys \\<otimes> z # zs \\<and>\n                            xs = filter P xs'", "hence \"y#xs'' \\<in> y#ys  \\<otimes> z#zs\" and \"y#xs' = filter P (y#xs'')\""], ["proof (prove)\nusing this:\n  xs'' \\<in> ys \\<otimes> z # zs\n  xs' = filter P xs''\n\ngoal (1 subgoal):\n 1. y # xs'' \\<in> y # ys \\<otimes> z # zs &&& y # xs' = filter P (y # xs'')", "using \\<open>P y\\<close>"], ["proof (prove)\nusing this:\n  xs'' \\<in> ys \\<otimes> z # zs\n  xs' = filter P xs''\n  P y\n\ngoal (1 subgoal):\n 1. y # xs'' \\<in> y # ys \\<otimes> z # zs &&& y # xs' = filter P (y # xs'')", "by (auto intro: interleave_intros)"], ["proof (state)\nthis:\n  y # xs'' \\<in> y # ys \\<otimes> z # zs\n  y # xs' = filter P (y # xs'')\n\ngoal (2 subgoals):\n 1. \\<And>zs.\n       \\<lbrakk>xs = y # zs;\n        zs \\<in> filter P ys \\<otimes> z # filter P zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> y # ys \\<otimes> z # zs \\<and>\n                            xs = filter P xs'\n 2. \\<And>zs.\n       \\<lbrakk>xs = z # zs;\n        zs \\<in> y # filter P ys \\<otimes> filter P zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> y # ys \\<otimes> z # zs \\<and>\n                            xs = filter P xs'", "thus ?thesis"], ["proof (prove)\nusing this:\n  y # xs'' \\<in> y # ys \\<otimes> z # zs\n  y # xs' = filter P (y # xs'')\n\ngoal (1 subgoal):\n 1. \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "using \\<open>xs = _\\<close>"], ["proof (prove)\nusing this:\n  y # xs'' \\<in> y # ys \\<otimes> z # zs\n  y # xs' = filter P (y # xs'')\n  xs = y # xs'\n\ngoal (1 subgoal):\n 1. \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "by blast"], ["proof (state)\nthis:\n  \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'\n\ngoal (1 subgoal):\n 1. \\<And>zs.\n       \\<lbrakk>xs = z # zs;\n        zs \\<in> y # filter P ys \\<otimes> filter P zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> y # ys \\<otimes> z # zs \\<and>\n                            xs = filter P xs'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>zs.\n       \\<lbrakk>xs = z # zs;\n        zs \\<in> y # filter P ys \\<otimes> filter P zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> y # ys \\<otimes> z # zs \\<and>\n                            xs = filter P xs'", "fix xs'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>zs.\n       \\<lbrakk>xs = z # zs;\n        zs \\<in> y # filter P ys \\<otimes> filter P zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> y # ys \\<otimes> z # zs \\<and>\n                            xs = filter P xs'", "assume \"xs = z # xs'\" and \"xs' \\<in> y # filter P ys  \\<otimes> filter P zs\""], ["proof (state)\nthis:\n  xs = z # xs'\n  xs' \\<in> y # filter P ys \\<otimes> filter P zs\n\ngoal (1 subgoal):\n 1. \\<And>zs.\n       \\<lbrakk>xs = z # zs;\n        zs \\<in> y # filter P ys \\<otimes> filter P zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> y # ys \\<otimes> z # zs \\<and>\n                            xs = filter P xs'", "hence \"xs' \\<in> filter P (y#ys) \\<otimes> filter P zs\""], ["proof (prove)\nusing this:\n  xs = z # xs'\n  xs' \\<in> y # filter P ys \\<otimes> filter P zs\n\ngoal (1 subgoal):\n 1. xs' \\<in> filter P (y # ys) \\<otimes> filter P zs", "using \\<open>P y\\<close>"], ["proof (prove)\nusing this:\n  xs = z # xs'\n  xs' \\<in> y # filter P ys \\<otimes> filter P zs\n  P y\n\ngoal (1 subgoal):\n 1. xs' \\<in> filter P (y # ys) \\<otimes> filter P zs", "by simp"], ["proof (state)\nthis:\n  xs' \\<in> filter P (y # ys) \\<otimes> filter P zs\n\ngoal (1 subgoal):\n 1. \\<And>zs.\n       \\<lbrakk>xs = z # zs;\n        zs \\<in> y # filter P ys \\<otimes> filter P zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> y # ys \\<otimes> z # zs \\<and>\n                            xs = filter P xs'", "from ConsCons.IH(2)[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>xs'a. xs'a \\<in> y # ys \\<otimes> zs \\<and> xs' = filter P xs'a", "obtain xs'' where \"xs'' \\<in> y#ys \\<otimes> zs\" and \"xs' = filter P xs''\""], ["proof (prove)\nusing this:\n  \\<exists>xs'a. xs'a \\<in> y # ys \\<otimes> zs \\<and> xs' = filter P xs'a\n\ngoal (1 subgoal):\n 1. (\\<And>xs''.\n        \\<lbrakk>xs'' \\<in> y # ys \\<otimes> zs;\n         xs' = filter P xs''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  xs'' \\<in> y # ys \\<otimes> zs\n  xs' = filter P xs''\n\ngoal (1 subgoal):\n 1. \\<And>zs.\n       \\<lbrakk>xs = z # zs;\n        zs \\<in> y # filter P ys \\<otimes> filter P zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> y # ys \\<otimes> z # zs \\<and>\n                            xs = filter P xs'", "hence \"z#xs'' \\<in> y#ys \\<otimes> z#zs\" and \"z#xs' = filter P (z#xs'')\""], ["proof (prove)\nusing this:\n  xs'' \\<in> y # ys \\<otimes> zs\n  xs' = filter P xs''\n\ngoal (1 subgoal):\n 1. z # xs'' \\<in> y # ys \\<otimes> z # zs &&& z # xs' = filter P (z # xs'')", "using \\<open>P z\\<close>"], ["proof (prove)\nusing this:\n  xs'' \\<in> y # ys \\<otimes> zs\n  xs' = filter P xs''\n  P z\n\ngoal (1 subgoal):\n 1. z # xs'' \\<in> y # ys \\<otimes> z # zs &&& z # xs' = filter P (z # xs'')", "by (auto intro: interleave_intros)"], ["proof (state)\nthis:\n  z # xs'' \\<in> y # ys \\<otimes> z # zs\n  z # xs' = filter P (z # xs'')\n\ngoal (1 subgoal):\n 1. \\<And>zs.\n       \\<lbrakk>xs = z # zs;\n        zs \\<in> y # filter P ys \\<otimes> filter P zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs'.\n                            xs' \\<in> y # ys \\<otimes> z # zs \\<and>\n                            xs = filter P xs'", "thus ?thesis"], ["proof (prove)\nusing this:\n  z # xs'' \\<in> y # ys \\<otimes> z # zs\n  z # xs' = filter P (z # xs'')\n\ngoal (1 subgoal):\n 1. \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "using \\<open>xs = _\\<close>"], ["proof (prove)\nusing this:\n  z # xs'' \\<in> y # ys \\<otimes> z # zs\n  z # xs' = filter P (z # xs'')\n  xs = z # xs'\n\ngoal (1 subgoal):\n 1. \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'", "by blast"], ["proof (state)\nthis:\n  \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>xs'. xs' \\<in> y # ys \\<otimes> z # zs \\<and> xs = filter P xs'\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}