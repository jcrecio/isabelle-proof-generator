{"file_name": "/home/qj213/afp-2021-10-22/thys/Root_Balanced_Tree/Root_Balanced_Tree.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Root_Balanced_Tree", "problem_names": ["lemma size_tree_Leaf[simp,code]: \"size_tree \\<langle>\\<rangle> = 0\"", "lemma size_tree_Node[simp,code]:\n  \"size_tree \\<langle>l, x, r\\<rangle> =\n  (let m = size_tree l;\n       n = size_tree r\n   in m+n+1)\"", "lemma size_tree: \"size_tree t = size t\"", "lemma T_size_tree_Leaf: \"T_size_tree \\<langle>\\<rangle> = 1\"", "lemma T_size_tree_Node:\n  \"T_size_tree \\<langle>l, x, r\\<rangle> = T_size_tree l + T_size_tree r + 1\"", "lemma T_size_tree: \"T_size_tree t = 2 * size t + 1\"", "lemma inorder2_Leaf[simp,code]: \"inorder2 \\<langle>\\<rangle> xs = xs\"", "lemma inorder2_Node[simp,code]:\n  \"inorder2 \\<langle>l, x, r\\<rangle> xs = (let rs = inorder2 r xs in inorder2 l (x # rs))\"", "lemma inorder2: \"inorder2 t xs = Tree.inorder2 t xs\"", "lemma T_inorder2_Leaf: \"T_inorder2 \\<langle>\\<rangle> xs = 1\"", "lemma T_inorder2_Node:\n  \"T_inorder2 \\<langle>l, x, r\\<rangle> xs = T_inorder2 r xs + T_inorder2 l (x # inorder2 r xs) + 1\"", "lemma T_inorder2: \"T_inorder2 t xs = 2*size t + 1\"", "lemma split_min_Node[simp,code]:\n  \"split_min (Node l x r) =\n  (if l = Leaf then (x,r)\n   else let (y,l') = split_min l in (y, Node l' x r))\"", "lemma T_split_min_Node[simp]:\n  \"T_split_min (Node l x r) = (if l = Leaf then 1 else T_split_min l + 1)\"", "lemma split_minD:\n  \"split_min t = (x,t') \\<Longrightarrow> t \\<noteq> Leaf \\<Longrightarrow> x # inorder t' = inorder t\"", "lemma bal_tm_simps:\n  \"bal_tm 0 xs =1 return(Leaf, xs)\"\n  \"n > 0 \\<Longrightarrow>\n   bal_tm n xs =1\n  (let m = n div 2\n   in do { (l, ys) \\<leftarrow> bal_tm m xs;\n           (r, zs) \\<leftarrow> bal_tm (n-1-m) (tl ys);\n           return (Node l (hd ys) r, zs)})\"", "lemma bal_def2[code]:\n\"bal n xs =\n  (if n=0 then (Leaf,xs) else\n  (let m = n div 2;\n       (l, ys) = bal m xs;\n       (r, zs) = bal (n-1-m) (tl ys)\n   in (Node l (hd ys) r, zs)))\"", "lemma bal_simps:\n  \"bal 0 xs = (Leaf, xs)\"\n  \"n > 0 \\<Longrightarrow>\n   bal n xs =\n  (let m = n div 2;\n      (l, ys) = bal m xs;\n      (r, zs) = bal (n-1-m) (tl ys)\n  in (Node l (hd ys) r, zs))\"", "lemma bal_eq: \"bal n xs = Balance.bal n xs\"", "lemma T_bal: \"T_bal n xs = 2*n+1\"", "lemma bal_list_def2[code]: \"bal_list n xs = (let (t,ys) = bal n xs in t)\"", "lemma bal_list: \"bal_list n xs = Balance.bal_list n xs\"", "lemma bal_tree_def2[code]:\n  \"bal_tree n t = (let xs = inorder2 t [] in bal_list n xs)\"", "lemma bal_tree: \"bal_tree n t = Balance.bal_tree n t\"", "lemma T_bal_tree: \"n = size xs \\<Longrightarrow> T_bal_tree n xs = 4*n+3\"", "lemma height_balance: \"\\<lbrakk> \\<not> bal_i (size t) h \\<rbrakk>\n  \\<Longrightarrow> height (balance_tree (t::'a::linorder tree)) < h\"", "lemma mono_bal_i':\n  \"\\<lbrakk> ASSUMPTION(bal_i n h); n \\<le> n'; h' \\<le> h \\<rbrakk> \\<Longrightarrow> bal_i n' h'\"", "lemma inorder_ins: \"sorted(inorder t) \\<Longrightarrow>\n  (ins n d x t = Same \\<longrightarrow> ins_list x (inorder t) = inorder t) \\<and>\n  (ins n d x t = Bal t' \\<longrightarrow> ins_list x (inorder t) = inorder t') \\<and>\n  (ins n d x t = Unbal t' \\<longrightarrow> ins_list x (inorder t) = inorder t')\"", "lemma ins_size:\nshows \"ins n d x t = Bal t' \\<Longrightarrow> size t' = size t + 1\"\nand \"ins n d x t = Unbal t' \\<Longrightarrow> size t' = size t + 1\"", "lemma ins_height:\nshows \"ins n d x t = Bal t' \\<Longrightarrow> height t' \\<le> height t + 1\"\nand \"ins n d x t = Unbal t' \\<Longrightarrow> height t \\<le> height t' \\<and> height t' \\<le> height t + 1\"", "lemma bal_i0: \"bal_i 0 0\"", "lemma bal_i1: \"bal_i 1 1\"", "lemma bal_i_ins_Unbal:\n  assumes \"ins n d x t = Unbal t'\" shows \"bal_i (size t') (height t')\"", "lemma unbal_ins_Unbal:\n  \"ins n d x t = Unbal t' \\<Longrightarrow> \\<not> bal_i (n+1) (height t' + d)\"", "lemma height_Unbal_l: assumes \"ins n (d+1) x l = Unbal l'\"\n  \"bal_i n (height \\<langle>l, y, r\\<rangle> + d)\"\nshows \"height r < height l'\" (is ?P)", "lemma height_Unbal_r: assumes \"ins n (d+1) x r = Unbal r'\"\n  \"bal_i n (height \\<langle>l, y, r\\<rangle> + d)\"\nshows \"height l < height r'\" (is ?P)", "lemma ins_bal_i_Bal:\n  \"\\<lbrakk> ins n d x t = Bal t'; bal_i n (height t + d) \\<rbrakk>\n  \\<Longrightarrow> bal_i (n+1) (height t' + d)\"", "lemma ins0_neq_Unbal: assumes \"n \\<ge> size t\" shows \"ins n 0 a t \\<noteq> Unbal t'\"", "lemma inorder_insert: \"sorted(inorder t)\n  \\<Longrightarrow> inorder (insert x t) = ins_list x (inorder t)\"", "lemma bal_i_insert: assumes \"bal_i (size t) (height t)\"\nshows \"bal_i (size(insert x t)) (height(insert x t))\"", "lemma imbal0_if_wbalanced: \"wbalanced t \\<Longrightarrow> imbal t = 0\"", "lemma size1_imbal:\n  assumes \"\\<not> bal_log t\" and \"bal_log (hchild t)\" and \"t \\<noteq> Leaf\"\n  shows \"imbal t > (2 powr (1 - 1/c) - 1) * size1 (t) - 1\"", "lemma size1_imbal2:\n  assumes \"\\<not> bal_log t\" and \"bal_log (hchild t)\" and \"t \\<noteq> Leaf\"\n  shows \"size1 (t) < (2 powr (1/c) / (2 - 2 powr (1/c))) * (imbal t + 1)\"", "lemma up3_def2[simp,code]:\n  \"up3 x sib twist u = (case u of\n  Same2 \\<Rightarrow> Same2 |\n  Bal2 t \\<Rightarrow> Bal2 (node twist t x sib) |\n  Unbal2 t n1 h1 \\<Rightarrow>\n     let n2 = size_tree sib; t' = node twist t x sib; n' = n1 + n2 + 1; h' = h1 + 1\n     in if bal_i n' h' then Unbal2 t' n' h'\n        else let t'' = bal_tree n' t' in Bal2 t'')\"", "lemma T_up3_def2[simp]: \"T_up3 x sib twist u =\n (case u of Same2 \\<Rightarrow> 1 |\n   Bal2 t \\<Rightarrow> 1 |\n   Unbal2 t n1 h1 \\<Rightarrow>\n     let n2 = size sib; t' = node twist t x sib; h' = h1 + 1; n' = n1+n2+1\n     in 2 * size sib + 1 + (if bal_i n' h' then 1 else T_bal_tree n' t' + 1))\"", "lemma ins3_Leaf[simp,code]:\n  \"ins3 n d x Leaf =\n  (if bal_i (n+1) (d+1) then Bal2 (Node Leaf x Leaf) else Unbal2 (Node Leaf x Leaf) 1 1)\"", "lemma ins3_Node[simp,code]:\n  \"ins3 n d x (Node l y r) =\n  (case cmp x y of\n     LT \\<Rightarrow> let l' = ins3 n (d+1) x l in up3 y r False l' |\n     EQ \\<Rightarrow> Same2 |\n     GT \\<Rightarrow> let r' = ins3 n (d+1) x r in up3 y l True r')\"", "lemma T_ins3_Leaf[simp]: \"T_ins3 n d x Leaf = 1\"", "lemma T_ins3_Node[simp]: \"T_ins3 n d x (Node l y r) =\n  (case cmp x y of\n     LT \\<Rightarrow> T_ins3 n (d+1) x l + T_up3 y r False (ins3 n (d+1) x l) |\n     EQ \\<Rightarrow> 0 |\n     GT \\<Rightarrow> T_ins3 n (d+1) x r + T_up3 y l True (ins3 n (d+1) x r)) + 1\"", "lemma insert3_def2[simp]: \"insert3 x (t,n) =\n  (let t' = ins3 n 0 x t in\n   case t' of\n     Same2 \\<Rightarrow> (t,n) |\n     Bal2 t' \\<Rightarrow> (t',n+1))\"", "lemma T_insert3_def2: \"T_insert3 x (t,n) = T_ins3 n 0 x t + 1\"", "lemma ins_ins2:\nshows \"ins2 n d x t = Same2 \\<Longrightarrow> ins n d x t = Same\"\nand \"ins2 n d x t = Bal2 t' \\<Longrightarrow> ins n d x t = Bal t'\"\nand \"ins2 n d x t = Unbal2 t' n' h'\n  \\<Longrightarrow> ins n d x t = Unbal t' \\<and> n' = size t' \\<and> h' = height t'\"", "lemma ins2_ins:\nshows \"ins n d x t = Same \\<Longrightarrow> ins2 n d x t = Same2\"\nand \"ins n d x t = Bal t' \\<Longrightarrow> ins2 n d x t = Bal2 t'\"\nand \"ins n d x t = Unbal t'\n  \\<Longrightarrow> ins2 n d x t = Unbal2 t' (size t') (height t')\"", "lemma ins3_ins2:\n  \"bal_i n (height t + d) \\<Longrightarrow> ins3 n d x t = ins2 n d x t\"", "lemma insert2_insert:\n  \"insert2 x (t,size t) = (t',n') \\<longleftrightarrow> t' = insert x t \\<and> n' = size t'\"", "lemma insert3_insert2:\n  \"bal_i n (height t) \\<Longrightarrow> insert3 x (t,n) = insert2 x (t,n)\"", "lemma \\<Phi>_nn: \"\\<Phi> t \\<ge> 0\"", "lemma \\<Phi>_sum_mset: \"\\<Phi> t = (\\<Sum>s \\<in># subtrees_mset t. 6*e*imbal s)\"", "lemma \\<Phi>_wbalanced: assumes \"wbalanced t\" shows \"\\<Phi> t = 0\"", "lemma imbal_ins_Bal: \"ins n d x t = Bal t' \\<Longrightarrow>\n real(imbal (node tw t' y s)) - imbal (node tw t y s) \\<le> 1\"", "lemma imbal_ins_Unbal: \"ins n d x t = Unbal t' \\<Longrightarrow>\n real(imbal (node tw t' y s)) - imbal (node tw t y s) \\<le> 1\"", "lemma T_ins3_Same:\n  \"ins3 n d x t = Same2 \\<Longrightarrow> T_ins3 n d x t \\<le> 2 * height t + 1\"", "lemma T_ins3_Unbal:\n  \"\\<lbrakk> ins3 n d x t = Unbal2 t' n' h';  bal_i n (height t + d) \\<rbrakk> \\<Longrightarrow>\n  T_ins3 n d x t \\<le> 2 * size t + 1 + height t\"", "lemma Phi_diff_Unbal:\n  \"\\<lbrakk> ins3 n d x t = Unbal2 t' n' h';  bal_i n (height t + d) \\<rbrakk> \\<Longrightarrow>\n  \\<Phi> t' - \\<Phi> t \\<le> 6*e * height t\"", "lemma amor_Unbal:\n  \"\\<lbrakk> ins3 n d x t = Unbal2 t' n' h';  bal_i n (height t + d) \\<rbrakk> \\<Longrightarrow> \n  T_ins3 n d x t + \\<Phi> t' - \\<Phi> t \\<le> 2*size1 t + (6*e + 1) * height t\"", "lemma T_ins3_Bal:\n  \"\\<lbrakk> ins3 n d x t = Bal2 t'; bal_i n (height t + d) \\<rbrakk>\n  \\<Longrightarrow> T_ins3 n d x t + \\<Phi> t' - \\<Phi> t \\<le> (6*e+2) * (height t + 1)\"", "lemma T_insert3_amor: assumes \"n = size t\" \"bal_i (size t) (height t)\"\n  \"insert3 a (t,n) = (t',n')\"\nshows \"T_insert3 a (t,n) + \\<Phi> t' - \\<Phi> t \\<le> (6*e+2) * (height t + 1) + 1\"", "lemma bal_d0: \"bal_d n 0\"", "lemma mono_bal_d: \"\\<lbrakk> bal_d n dl; n \\<le> n' \\<rbrakk> \\<Longrightarrow> bal_d n' dl\"", "lemma del_Leaf[simp]: \"del x Leaf = None\"", "lemma del_Node[simp]: \"del x (Node l y r) =\n  (case cmp x y of\n     LT \\<Rightarrow> let l' = del x l in up_d y r False l' |\n     EQ \\<Rightarrow> if r = Leaf then Some l\n           else let (a',r') = split_min r in Some(Node l a' r') |\n     GT \\<Rightarrow> let r' = del x r in up_d y l True r')\"", "lemma T_del_Leaf[simp]: \"T_del x Leaf = 1\"", "lemma T_del_Node[simp]: \"T_del x (Node l y r) =\n  (case cmp x y of\n     LT \\<Rightarrow> T_del x l + 1 |\n     EQ \\<Rightarrow> if r = Leaf then 1 else T_split_min r + 1 |\n     GT \\<Rightarrow> T_del x r + 1)\"", "lemma size_insert_d: \"insert_d x (t,dl) = (t',dl') \\<Longrightarrow> size t \\<le> size t'\"", "lemma inorder_insert_d: \"insert_d x (t,dl) = (t',dl') \\<Longrightarrow> sorted(inorder t)\n  \\<Longrightarrow> inorder t' = ins_list x (inorder t)\"", "lemma bal_i_insert_d: assumes \"insert_d x (t,dl) = (t',dl')\" \"bal_i (size t + dl) (height t)\"\nshows \"bal_i (size t' + dl) (height t')\"", "lemma inorder_del:\n  \"sorted(inorder t) \\<Longrightarrow>\n  inorder(case del x t of None \\<Rightarrow> t | Some t' \\<Rightarrow> t') = del_list x (inorder t)\"", "lemma inorder_delete:\n  \"\\<lbrakk> delete x (t,dl) = (t',dl'); sorted(inorder t) \\<rbrakk> \\<Longrightarrow>\n  inorder t' = del_list x (inorder t)\"", "lemma size_split_min:\n  \"\\<lbrakk> split_min t = (a,t'); t \\<noteq> Leaf \\<rbrakk> \\<Longrightarrow> size t' = size t - 1\"", "lemma height_split_min:\n  \"\\<lbrakk> split_min t = (a,t'); t \\<noteq> Leaf \\<rbrakk> \\<Longrightarrow> height t' \\<le> height t\"", "lemma size_del: \"del x t = Some t' \\<Longrightarrow> size t' = size t - 1\"", "lemma height_del: \"del x t = Some t' \\<Longrightarrow> height t' \\<le> height t\"", "lemma bal_i_delete:\nassumes \"bal_i (size t + dl) (height t)\" \"delete x (t,dl) = (t',dl')\"\nshows \"bal_i (size t' + dl') (height t')\"", "lemma bal_d_delete:\n  \"\\<lbrakk> bal_d (size t) dl; delete x (t,dl) = (t',dl') \\<rbrakk>\n   \\<Longrightarrow> bal_d (size t') dl'\"", "lemma insert3_d_def2[simp,code]: \"insert3_d x (t,n,dl) =\n  (let t' = ins3 (n+dl) 0 x t in\n   case t' of\n     Same2 \\<Rightarrow> (t,n,dl) |\n     Bal2 t' \\<Rightarrow> (t',n+1,dl) |\n     Unbal2 _ _ _ \\<Rightarrow> undefined)\"", "lemma T_insert3_d_def2[simp]:\n  \"T_insert3_d x (t,n,dl) = (T_ins3 (n+dl) 0 x t + 1)\"", "lemma delete2_def2:\n  \"delete2 x (t,n,dl) =\n  (let t' = del x t in\n   case t' of\n    None \\<Rightarrow> (t,n,dl) |\n    Some t' \\<Rightarrow> (let n' = n-1; dl' = dl + 1\n      in if bal_d n' dl' then (t',n',dl')\n         else let t'' = bal_tree n' t' in (t'', n', 0)))\"", "lemma T_delete2_def2:\n  \"T_delete2 x (t,n,dl) = (T_del x t +\n  (case del x t of\n     None \\<Rightarrow> 1 |\n     Some t' \\<Rightarrow> (let n' = n-1; dl' = dl + 1\n       in if bal_d n' dl' then 1 else T_bal_tree n' t' + 1)))\"", "lemma insert2_insert_d:\n  \"insert2_d x (t,size t,dl) = (t',n',dl') \\<longleftrightarrow>\n   (t',dl') = insert_d x (t,dl) \\<and> n' = size t'\"", "lemma insert3_insert2_d:\n  \"bal_i (n+dl) (height t) \\<Longrightarrow> insert3_d x (t,n,dl) = insert2_d x (t,n,dl)\"", "lemma delete2_delete:\n  \"delete2 x (t,size t,dl) = (t',n',dl') \\<longleftrightarrow>\n  (t',dl') = delete x (t,dl) \\<and> n' = size t'\"", "lemma \\<Phi>\\<^sub>d_case: \"\\<Phi>\\<^sub>d tndl = (case tndl of (t,n,dl) \\<Rightarrow> \\<Phi> t + 4*dl/cd)\"", "lemma imbal_diff_decr:\n  \"size r' = size r - 1 \\<Longrightarrow>\n   real(imbal (Node l x' r')) - imbal (Node l x r) \\<le> 1\"", "lemma tinsert_d_amor:\nassumes \"n = size t\" \"insert_d a (t,dl) = (t',dl')\" \"bal_i (size t + dl) (height t)\"\nshows \"T_insert3_d a (t,n,dl) + \\<Phi> t' - \\<Phi> t \\<le> (6*e+2) * (height t + 1) + 1\"", "lemma T_split_min_ub:\n  \"t \\<noteq> Leaf \\<Longrightarrow> T_split_min t \\<le> height t + 1\"", "lemma T_del_ub:\n  \"T_del x t \\<le> height t + 1\"", "lemma imbal_split_min:\n  \"split_min t = (x,t') \\<Longrightarrow> t \\<noteq> Leaf \\<Longrightarrow> real(imbal t') - imbal t \\<le> 1\"", "lemma imbal_del_Some:\n  \"del x t = Some t' \\<Longrightarrow> real(imbal t') - imbal t \\<le> 1\"", "lemma Phi_diff_split_min:\n  \"split_min t = (x, t') \\<Longrightarrow> t \\<noteq> Leaf \\<Longrightarrow> \\<Phi> t' - \\<Phi> t \\<le> 6*e*height t\"", "lemma Phi_diff_del_Some:\n  \"del x t = Some t' \\<Longrightarrow> \\<Phi> t' - \\<Phi> t \\<le> 6*e * height t\"", "lemma amor_del_Some:\n  \"del x t = Some t' \\<Longrightarrow>\n  T_del x t + \\<Phi> t' - \\<Phi> t \\<le> (6*e + 1) * height t + 1\"", "lemma cd1: \"1/cd > 0\"", "lemma T_delete_amor: assumes \"n = size t\"\nshows \"T_delete2 x (t,n,dl) + \\<Phi>\\<^sub>d (delete2 x (t,n,dl)) - \\<Phi>\\<^sub>d (t,n,dl)\n       \\<le> (6*e+1) * height t + 4/cd + 4\"", "lemma assumes \"bal_i (size t + dl) (height t)\" \"bal_d (size t) dl\"\nshows \"height t \\<le> ceiling(c * log 2 (size1 t) + b)\""], "translations": [["", "lemma size_tree_Leaf[simp,code]: \"size_tree \\<langle>\\<rangle> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Root_Balanced_Tree.size_tree \\<langle>\\<rangle> = 0", "using val_cong[OF size_tree_tm.simps(1)]"], ["proof (prove)\nusing this:\n  Time_Monad.val (size_tree_tm \\<langle>\\<rangle>) =\n  Time_Monad.val (return 0 \\<bind> tick)\n\ngoal (1 subgoal):\n 1. Root_Balanced_Tree.size_tree \\<langle>\\<rangle> = 0", "by(simp only: size_tree_def val_simps)"], ["", "lemma size_tree_Node[simp,code]:\n  \"size_tree \\<langle>l, x, r\\<rangle> =\n  (let m = size_tree l;\n       n = size_tree r\n   in m+n+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Root_Balanced_Tree.size_tree \\<langle>l, x, r\\<rangle> =\n    (let m = Root_Balanced_Tree.size_tree l;\n         n = Root_Balanced_Tree.size_tree r\n     in m + n + 1)", "using val_cong[OF size_tree_tm.simps(2)]"], ["proof (prove)\nusing this:\n  Time_Monad.val (size_tree_tm \\<langle>?l1, ?x1, ?r1\\<rangle>) =\n  Time_Monad.val\n   (size_tree_tm ?l1 \\<bind>\n    (\\<lambda>m.\n        size_tree_tm ?r1 \\<bind> (\\<lambda>n. return (m + n + 1))) \\<bind>\n    tick)\n\ngoal (1 subgoal):\n 1. Root_Balanced_Tree.size_tree \\<langle>l, x, r\\<rangle> =\n    (let m = Root_Balanced_Tree.size_tree l;\n         n = Root_Balanced_Tree.size_tree r\n     in m + n + 1)", "by(simp only: size_tree_def val_simps)"], ["", "lemma size_tree: \"size_tree t = size t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Root_Balanced_Tree.size_tree t = size t", "by(induction t rule: size_tree_tm.induct)(auto)"], ["", "definition T_size_tree :: \"'a tree \\<Rightarrow> nat\" where\n\"T_size_tree t = time(size_tree_tm t)\""], ["", "lemma T_size_tree_Leaf: \"T_size_tree \\<langle>\\<rangle> = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T_size_tree \\<langle>\\<rangle> = 1", "by(simp add: T_size_tree_def tm_simps)"], ["", "lemma T_size_tree_Node:\n  \"T_size_tree \\<langle>l, x, r\\<rangle> = T_size_tree l + T_size_tree r + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T_size_tree \\<langle>l, x, r\\<rangle> =\n    T_size_tree l + T_size_tree r + 1", "by(simp add: T_size_tree_def size_tree_def tm_simps split: tm.split)"], ["", "lemma T_size_tree: \"T_size_tree t = 2 * size t + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T_size_tree t = 2 * size t + 1", "by(induction t)(auto simp: T_size_tree_Leaf T_size_tree_Node)"], ["", "subsubsection \\<open>@{const inorder}\\<close>"], ["", "fun inorder2_tm :: \"'a tree \\<Rightarrow> 'a list \\<Rightarrow> 'a list tm\" where\n\"inorder2_tm \\<langle>\\<rangle> xs =1 return xs\" |\n\"inorder2_tm \\<langle>l, x, r\\<rangle> xs =1\n  do { rs \\<leftarrow> inorder2_tm r xs; inorder2_tm l (x#rs) }\""], ["", "definition inorder2 :: \"'a tree \\<Rightarrow> 'a list \\<Rightarrow> 'a list\" where\n\"inorder2 t xs = val(inorder2_tm t xs)\""], ["", "lemma inorder2_Leaf[simp,code]: \"inorder2 \\<langle>\\<rangle> xs = xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Root_Balanced_Tree.inorder2 \\<langle>\\<rangle> xs = xs", "using val_cong[OF inorder2_tm.simps(1)]"], ["proof (prove)\nusing this:\n  Time_Monad.val (inorder2_tm \\<langle>\\<rangle> ?xs1) =\n  Time_Monad.val (return ?xs1 \\<bind> tick)\n\ngoal (1 subgoal):\n 1. Root_Balanced_Tree.inorder2 \\<langle>\\<rangle> xs = xs", "by(simp only: inorder2_def val_simps)"], ["", "lemma inorder2_Node[simp,code]:\n  \"inorder2 \\<langle>l, x, r\\<rangle> xs = (let rs = inorder2 r xs in inorder2 l (x # rs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Root_Balanced_Tree.inorder2 \\<langle>l, x, r\\<rangle> xs =\n    (let rs = Root_Balanced_Tree.inorder2 r xs\n     in Root_Balanced_Tree.inorder2 l (x # rs))", "using val_cong[OF inorder2_tm.simps(2), of l]"], ["proof (prove)\nusing this:\n  Time_Monad.val (inorder2_tm \\<langle>l, ?x1, ?r1\\<rangle> ?xs1) =\n  Time_Monad.val\n   (inorder2_tm ?r1 ?xs1 \\<bind>\n    (\\<lambda>rs. inorder2_tm l (?x1 # rs)) \\<bind>\n    tick)\n\ngoal (1 subgoal):\n 1. Root_Balanced_Tree.inorder2 \\<langle>l, x, r\\<rangle> xs =\n    (let rs = Root_Balanced_Tree.inorder2 r xs\n     in Root_Balanced_Tree.inorder2 l (x # rs))", "by(simp only: inorder2_def val_simps)"], ["", "lemma inorder2: \"inorder2 t xs = Tree.inorder2 t xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Root_Balanced_Tree.inorder2 t xs = Tree.inorder2 t xs", "by(induction t xs rule: inorder2_tm.induct)(auto)"], ["", "definition T_inorder2 :: \"'a tree \\<Rightarrow> 'a list \\<Rightarrow> nat\" where\n\"T_inorder2 t xs = time(inorder2_tm t xs)\""], ["", "lemma T_inorder2_Leaf: \"T_inorder2 \\<langle>\\<rangle> xs = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T_inorder2 \\<langle>\\<rangle> xs = 1", "by(simp add: T_inorder2_def tm_simps)"], ["", "lemma T_inorder2_Node:\n  \"T_inorder2 \\<langle>l, x, r\\<rangle> xs = T_inorder2 r xs + T_inorder2 l (x # inorder2 r xs) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T_inorder2 \\<langle>l, x, r\\<rangle> xs =\n    T_inorder2 r xs + T_inorder2 l (x # Root_Balanced_Tree.inorder2 r xs) +\n    1", "by(simp add: T_inorder2_def inorder2_def tm_simps split: tm.split)"], ["", "lemma T_inorder2: \"T_inorder2 t xs = 2*size t + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T_inorder2 t xs = 2 * size t + 1", "by(induction t arbitrary: xs)(auto simp: T_inorder2_Leaf T_inorder2_Node)"], ["", "subsubsection \\<open>@{const split_min}\\<close>"], ["", "fun split_min_tm :: \"'a tree \\<Rightarrow> ('a * 'a tree) tm\" where\n\"split_min_tm Leaf =1 return undefined\" |\n\"split_min_tm (Node l x r) =1\n  (if l = Leaf then return (x,r)\n   else do { (y,l') \\<leftarrow> split_min_tm l; return (y, Node l' x r)})\""], ["", "definition split_min :: \"'a tree \\<Rightarrow> ('a * 'a tree)\" where\n\"split_min t = val (split_min_tm t)\""], ["", "lemma split_min_Node[simp,code]:\n  \"split_min (Node l x r) =\n  (if l = Leaf then (x,r)\n   else let (y,l') = split_min l in (y, Node l' x r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Root_Balanced_Tree.split_min \\<langle>l, x, r\\<rangle> =\n    (if l = \\<langle>\\<rangle> then (x, r)\n     else let (y, l') = Root_Balanced_Tree.split_min l\n          in (y, \\<langle>l', x, r\\<rangle>))", "using val_cong[OF split_min_tm.simps(2)]"], ["proof (prove)\nusing this:\n  Time_Monad.val (split_min_tm \\<langle>?l1, ?x1, ?r1\\<rangle>) =\n  Time_Monad.val\n   ((if ?l1 = \\<langle>\\<rangle> then return (?x1, ?r1)\n     else split_min_tm ?l1 \\<bind>\n          (\\<lambda>(y, l').\n              return (y, \\<langle>l', ?x1, ?r1\\<rangle>))) \\<bind>\n    tick)\n\ngoal (1 subgoal):\n 1. Root_Balanced_Tree.split_min \\<langle>l, x, r\\<rangle> =\n    (if l = \\<langle>\\<rangle> then (x, r)\n     else let (y, l') = Root_Balanced_Tree.split_min l\n          in (y, \\<langle>l', x, r\\<rangle>))", "by(simp only: split_min_def val_simps)"], ["", "definition T_split_min :: \"'a tree \\<Rightarrow> nat\" where\n\"T_split_min t = time (split_min_tm t)\""], ["", "lemma T_split_min_Node[simp]:\n  \"T_split_min (Node l x r) = (if l = Leaf then 1 else T_split_min l + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T_split_min \\<langle>l, x, r\\<rangle> =\n    (if l = \\<langle>\\<rangle> then 1 else T_split_min l + 1)", "using val_cong[OF split_min_tm.simps(2)]"], ["proof (prove)\nusing this:\n  Time_Monad.val (split_min_tm \\<langle>?l1, ?x1, ?r1\\<rangle>) =\n  Time_Monad.val\n   ((if ?l1 = \\<langle>\\<rangle> then return (?x1, ?r1)\n     else split_min_tm ?l1 \\<bind>\n          (\\<lambda>(y, l').\n              return (y, \\<langle>l', ?x1, ?r1\\<rangle>))) \\<bind>\n    tick)\n\ngoal (1 subgoal):\n 1. T_split_min \\<langle>l, x, r\\<rangle> =\n    (if l = \\<langle>\\<rangle> then 1 else T_split_min l + 1)", "by(simp add: T_split_min_def tm_simps split: tm.split)"], ["", "lemma split_minD:\n  \"split_min t = (x,t') \\<Longrightarrow> t \\<noteq> Leaf \\<Longrightarrow> x # inorder t' = inorder t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Root_Balanced_Tree.split_min t = (x, t');\n     t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> x # inorder t' = inorder t", "by(induction t arbitrary: t' rule: split_min.induct)\n  (auto simp: sorted_lems split: prod.splits if_splits)"], ["", "subsubsection \\<open>Balancing\\<close>"], ["", "fun bal_tm :: \"nat \\<Rightarrow> 'a list \\<Rightarrow> ('a tree * 'a list) tm\" where\n\"bal_tm n xs =1\n  (if n=0 then return (Leaf,xs) else\n  (let m = n div 2\n   in do { (l, ys) \\<leftarrow> bal_tm m xs;\n           (r, zs) \\<leftarrow> bal_tm (n-1-m) (tl ys);\n           return (Node l (hd ys) r, zs)}))\""], ["", "declare bal_tm.simps[simp del]"], ["", "lemma bal_tm_simps:\n  \"bal_tm 0 xs =1 return(Leaf, xs)\"\n  \"n > 0 \\<Longrightarrow>\n   bal_tm n xs =1\n  (let m = n div 2\n   in do { (l, ys) \\<leftarrow> bal_tm m xs;\n           (r, zs) \\<leftarrow> bal_tm (n-1-m) (tl ys);\n           return (Node l (hd ys) r, zs)})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal_tm 0 xs =1 return (\\<langle>\\<rangle>, xs) &&&\n    (0 < n \\<Longrightarrow>\n     bal_tm n xs =1\n     (let m = n div 2\n      in bal_tm m xs \\<bind>\n         (\\<lambda>(l, ys).\n             bal_tm (n - 1 - m) (tl ys) \\<bind>\n             (\\<lambda>(r, zs).\n                 return (\\<langle>l, hd ys, r\\<rangle>, zs)))))", "by(simp_all add: bal_tm.simps)"], ["", "definition bal :: \"nat \\<Rightarrow> 'a list \\<Rightarrow> ('a tree * 'a list)\" where\n\"bal n xs = val (bal_tm n xs)\""], ["", "lemma bal_def2[code]:\n\"bal n xs =\n  (if n=0 then (Leaf,xs) else\n  (let m = n div 2;\n       (l, ys) = bal m xs;\n       (r, zs) = bal (n-1-m) (tl ys)\n   in (Node l (hd ys) r, zs)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal n xs =\n    (if n = 0 then (\\<langle>\\<rangle>, xs)\n     else let m = n div 2; (l, ys) = bal m xs;\n              (r, zs) = bal (n - 1 - m) (tl ys)\n          in (\\<langle>l, hd ys, r\\<rangle>, zs))", "using val_cong[OF bal_tm.simps(1)]"], ["proof (prove)\nusing this:\n  Time_Monad.val (bal_tm ?n1 ?xs1) =\n  Time_Monad.val\n   ((if ?n1 = 0 then return (\\<langle>\\<rangle>, ?xs1)\n     else let m = ?n1 div 2\n          in bal_tm m ?xs1 \\<bind>\n             (\\<lambda>(l, ys).\n                 bal_tm (?n1 - 1 - m) (tl ys) \\<bind>\n                 (\\<lambda>(r, zs).\n                     return (\\<langle>l, hd ys, r\\<rangle>, zs)))) \\<bind>\n    tick)\n\ngoal (1 subgoal):\n 1. bal n xs =\n    (if n = 0 then (\\<langle>\\<rangle>, xs)\n     else let m = n div 2; (l, ys) = bal m xs;\n              (r, zs) = bal (n - 1 - m) (tl ys)\n          in (\\<langle>l, hd ys, r\\<rangle>, zs))", "by(simp only: bal_def val_simps)"], ["", "lemma bal_simps:\n  \"bal 0 xs = (Leaf, xs)\"\n  \"n > 0 \\<Longrightarrow>\n   bal n xs =\n  (let m = n div 2;\n      (l, ys) = bal m xs;\n      (r, zs) = bal (n-1-m) (tl ys)\n  in (Node l (hd ys) r, zs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal 0 xs = (\\<langle>\\<rangle>, xs) &&&\n    (0 < n \\<Longrightarrow>\n     bal n xs =\n     (let m = n div 2; (l, ys) = bal m xs; (r, zs) = bal (n - 1 - m) (tl ys)\n      in (\\<langle>l, hd ys, r\\<rangle>, zs)))", "by(simp_all add: bal_def2)"], ["", "lemma bal_eq: \"bal n xs = Balance.bal n xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal n xs = Balance.bal n xs", "apply(induction n xs rule: bal.induct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n xs.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>n \\<noteq> 0; x = n div 2\\<rbrakk>\n                   \\<Longrightarrow> bal x xs = Balance.bal x xs;\n        \\<And>x xa xb y.\n           \\<lbrakk>n \\<noteq> 0; x = n div 2; xa = Balance.bal x xs;\n            (xb, y) = xa\\<rbrakk>\n           \\<Longrightarrow> bal (n - 1 - x) (tl y) =\n                             Balance.bal (n - 1 - x) (tl y)\\<rbrakk>\n       \\<Longrightarrow> bal n xs = Balance.bal n xs", "apply(case_tac \"n=0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xs.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>n \\<noteq> 0; x = n div 2\\<rbrakk>\n                   \\<Longrightarrow> bal x xs = Balance.bal x xs;\n        \\<And>x xa xb y.\n           \\<lbrakk>n \\<noteq> 0; x = n div 2; xa = Balance.bal x xs;\n            (xb, y) = xa\\<rbrakk>\n           \\<Longrightarrow> bal (n - 1 - x) (tl y) =\n                             Balance.bal (n - 1 - x) (tl y);\n        n = 0\\<rbrakk>\n       \\<Longrightarrow> bal n xs = Balance.bal n xs\n 2. \\<And>n xs.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>n \\<noteq> 0; x = n div 2\\<rbrakk>\n                   \\<Longrightarrow> bal x xs = Balance.bal x xs;\n        \\<And>x xa xb y.\n           \\<lbrakk>n \\<noteq> 0; x = n div 2; xa = Balance.bal x xs;\n            (xb, y) = xa\\<rbrakk>\n           \\<Longrightarrow> bal (n - 1 - x) (tl y) =\n                             Balance.bal (n - 1 - x) (tl y);\n        n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> bal n xs = Balance.bal n xs", "apply(simp add: bal_simps Balance.bal_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n xs.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>n \\<noteq> 0; x = n div 2\\<rbrakk>\n                   \\<Longrightarrow> bal x xs = Balance.bal x xs;\n        \\<And>x xa xb y.\n           \\<lbrakk>n \\<noteq> 0; x = n div 2; xa = Balance.bal x xs;\n            (xb, y) = xa\\<rbrakk>\n           \\<Longrightarrow> bal (n - 1 - x) (tl y) =\n                             Balance.bal (n - 1 - x) (tl y);\n        n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> bal n xs = Balance.bal n xs", "apply(simp add: bal_simps Balance.bal_simps split: prod.split)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition T_bal :: \"nat \\<Rightarrow> 'a list \\<Rightarrow> nat\" where\n\"T_bal n xs = time (bal_tm n xs)\""], ["", "lemma T_bal: \"T_bal n xs = 2*n+1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T_bal n xs = 2 * n + 1", "unfolding T_bal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. time (bal_tm n xs) = 2 * n + 1", "apply(induction n xs rule: bal_tm.induct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n xs.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>n \\<noteq> 0; x = n div 2\\<rbrakk>\n                   \\<Longrightarrow> time (bal_tm x xs) = 2 * x + 1;\n        \\<And>x xa xb.\n           \\<lbrakk>n \\<noteq> 0; x = n div 2\\<rbrakk>\n           \\<Longrightarrow> time (bal_tm (n - 1 - x) (tl xb)) =\n                             2 * (n - 1 - x) + 1\\<rbrakk>\n       \\<Longrightarrow> time (bal_tm n xs) = 2 * n + 1", "apply(case_tac \"n=0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xs.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>n \\<noteq> 0; x = n div 2\\<rbrakk>\n                   \\<Longrightarrow> time (bal_tm x xs) = 2 * x + 1;\n        \\<And>x xa xb.\n           \\<lbrakk>n \\<noteq> 0; x = n div 2\\<rbrakk>\n           \\<Longrightarrow> time (bal_tm (n - 1 - x) (tl xb)) =\n                             2 * (n - 1 - x) + 1;\n        n = 0\\<rbrakk>\n       \\<Longrightarrow> time (bal_tm n xs) = 2 * n + 1\n 2. \\<And>n xs.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>n \\<noteq> 0; x = n div 2\\<rbrakk>\n                   \\<Longrightarrow> time (bal_tm x xs) = 2 * x + 1;\n        \\<And>x xa xb.\n           \\<lbrakk>n \\<noteq> 0; x = n div 2\\<rbrakk>\n           \\<Longrightarrow> time (bal_tm (n - 1 - x) (tl xb)) =\n                             2 * (n - 1 - x) + 1;\n        n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> time (bal_tm n xs) = 2 * n + 1", "apply(simp add: bal_tm_simps)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n xs.\n       n = 0 \\<Longrightarrow>\n       time (return (\\<langle>\\<rangle>, xs) \\<bind> tick) = Suc 0\n 2. \\<And>n xs.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>n \\<noteq> 0; x = n div 2\\<rbrakk>\n                   \\<Longrightarrow> time (bal_tm x xs) = 2 * x + 1;\n        \\<And>x xa xb.\n           \\<lbrakk>n \\<noteq> 0; x = n div 2\\<rbrakk>\n           \\<Longrightarrow> time (bal_tm (n - 1 - x) (tl xb)) =\n                             2 * (n - 1 - x) + 1;\n        n \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> time (bal_tm n xs) = 2 * n + 1", "apply(auto simp add: bal_tm_simps tm_simps simp del: subst_all split: tm.split)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n xs a b aa ba x2 x2a.\n       \\<lbrakk>\\<And>x.\n                   x = n div 2 \\<Longrightarrow> x2a = Suc (2 * (n div 2));\n        \\<And>x xb.\n           x = n div 2 \\<Longrightarrow>\n           time (bal_tm (n - Suc (n div 2)) (tl xb)) =\n           Suc (2 * (n - Suc (n div 2)));\n        0 < n;\n        bal_tm (n - Suc (n div 2)) (tl b) = ??.Time_Monad.tm.TM (aa, ba) x2;\n        bal_tm (n div 2) xs =\n        ??.Time_Monad.tm.TM (a, b) (Suc (2 * (n div 2)))\\<rbrakk>\n       \\<Longrightarrow> Suc (2 * (n div 2) + x2) = 2 * n", "subgoal premises p for n xs t1 xs1"], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (2 * (n div 2) + x2_) = 2 * n", "using p(2)[OF refl,of xs1] p(3-)"], ["proof (prove)\nusing this:\n  time (bal_tm (n - Suc (n div 2)) (tl xs1)) = Suc (2 * (n - Suc (n div 2)))\n  0 < n\n  bal_tm (n - Suc (n div 2)) (tl xs1) = ??.Time_Monad.tm.TM (aa_, ba_) x2_\n  bal_tm (n div 2) xs = ??.Time_Monad.tm.TM (t1, xs1) (Suc (2 * (n div 2)))\n\ngoal (1 subgoal):\n 1. Suc (2 * (n div 2) + x2_) = 2 * n", "by(simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition bal_list_tm :: \"nat \\<Rightarrow> 'a list \\<Rightarrow> 'a tree tm\" where\n\"bal_list_tm n xs = do { (t,_) \\<leftarrow> bal_tm n xs; return t }\""], ["", "definition bal_list :: \"nat \\<Rightarrow> 'a list \\<Rightarrow> 'a tree\" where\n\"bal_list n xs = val (bal_list_tm n xs)\""], ["", "lemma bal_list_def2[code]: \"bal_list n xs = (let (t,ys) = bal n xs in t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Root_Balanced_Tree.bal_list n xs = (let (t, ys) = bal n xs in t)", "using val_cong[OF bal_list_tm_def]"], ["proof (prove)\nusing this:\n  Time_Monad.val (bal_list_tm ?n1 ?xs1) =\n  Time_Monad.val (bal_tm ?n1 ?xs1 \\<bind> (\\<lambda>(t, uu_). return t))\n\ngoal (1 subgoal):\n 1. Root_Balanced_Tree.bal_list n xs = (let (t, ys) = bal n xs in t)", "by(simp only: bal_list_def bal_def val_simps)"], ["", "lemma bal_list: \"bal_list n xs = Balance.bal_list n xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Root_Balanced_Tree.bal_list n xs = Balance.bal_list n xs", "by(auto simp add: bal_list_def2 Balance.bal_list_def bal_eq split: prod.split)"], ["", "definition bal_tree_tm :: \"nat \\<Rightarrow> 'a tree \\<Rightarrow> 'a tree tm\" where\n\"bal_tree_tm n t =1 do { xs \\<leftarrow> inorder2_tm t []; bal_list_tm n xs }\""], ["", "definition bal_tree :: \"nat \\<Rightarrow> 'a tree \\<Rightarrow> 'a tree\" where\n\"bal_tree n t = val (bal_tree_tm n t)\""], ["", "lemma bal_tree_def2[code]:\n  \"bal_tree n t = (let xs = inorder2 t [] in bal_list n xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Root_Balanced_Tree.bal_tree n t =\n    Let (Root_Balanced_Tree.inorder2 t []) (Root_Balanced_Tree.bal_list n)", "using val_cong[OF bal_tree_tm_def, of n t]"], ["proof (prove)\nusing this:\n  Time_Monad.val (bal_tree_tm n t) =\n  Time_Monad.val (inorder2_tm t [] \\<bind> bal_list_tm n \\<bind> tick)\n\ngoal (1 subgoal):\n 1. Root_Balanced_Tree.bal_tree n t =\n    Let (Root_Balanced_Tree.inorder2 t []) (Root_Balanced_Tree.bal_list n)", "by(simp only: bal_tree_def bal_list_def inorder2_def val_simps)"], ["", "lemma bal_tree: \"bal_tree n t = Balance.bal_tree n t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Root_Balanced_Tree.bal_tree n t = Balance.bal_tree n t", "by(simp add: bal_tree_def2 Balance.bal_tree_def bal_list inorder2 inorder2_inorder)"], ["", "definition T_bal_tree :: \"nat \\<Rightarrow> 'a tree \\<Rightarrow> nat\" where\n\"T_bal_tree n xs = time (bal_tree_tm n xs)\""], ["", "lemma T_bal_tree: \"n = size xs \\<Longrightarrow> T_bal_tree n xs = 4*n+3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = size xs \\<Longrightarrow> T_bal_tree n xs = 4 * n + 3", "by(simp add: T_bal_tree_def bal_tree_tm_def tm_simps bal_list_tm_def\n    surj_TM[OF inorder2_def T_inorder2_def] T_inorder2\n    surj_TM[OF bal_def T_bal_def] T_bal size1_size\n    split: tm.split prod.split)"], ["", "subsection \"Naive implementation (insert only)\""], ["", "fun node :: \"bool \\<Rightarrow> 'a tree \\<Rightarrow> 'a \\<Rightarrow> 'a tree \\<Rightarrow> 'a tree\" where\n\"node twist s x t = (if twist then Node t x s else Node s x t)\""], ["", "datatype 'a up = Same | Bal \"'a tree\" | Unbal \"'a tree\""], ["", "locale RBTi1 =\nfixes bal_i :: \"nat \\<Rightarrow> nat \\<Rightarrow> bool\"\nassumes bal_i_balance:\n  \"bal_i (size t) (height (balance_tree (t::'a::linorder tree)))\"\nassumes mono_bal_i: \"\\<lbrakk> bal_i n h; n \\<le> n'; h' \\<le> h \\<rbrakk> \\<Longrightarrow> bal_i n' h'\"\nbegin"], ["", "subsubsection \\<open>Functions\\<close>"], ["", "definition up :: \"'a \\<Rightarrow> 'a tree \\<Rightarrow> bool \\<Rightarrow> 'a up \\<Rightarrow> 'a up\" where\n\"up x sib twist u = (case u of Same \\<Rightarrow> Same |\n   Bal t \\<Rightarrow> Bal(node twist t x sib) |\n   Unbal t \\<Rightarrow> let t' = node twist t x sib; h' = height t'; n' = size t'\n              in if bal_i n' h' then Unbal t'\n                 else Bal(balance_tree t'))\""], ["", "declare up_def[simp]"], ["", "fun ins :: \"nat \\<Rightarrow> nat \\<Rightarrow> 'a::linorder \\<Rightarrow> 'a tree \\<Rightarrow> 'a up\" where\n\"ins n d x Leaf =\n  (if bal_i (n+1) (d+1) then Bal (Node Leaf x Leaf) else Unbal (Node Leaf x Leaf))\" |\n\"ins n d x (Node l y r) =\n  (case cmp x y of\n     LT \\<Rightarrow> up y r False (ins n (d+1) x l) |\n     EQ \\<Rightarrow> Same |\n     GT \\<Rightarrow> up  y l True (ins n (d+1) x r))\""], ["", "fun insert :: \"'a::linorder \\<Rightarrow> 'a tree \\<Rightarrow> 'a tree\" where\n\"insert x t =\n  (case ins (size t) 0 x t of\n    Same \\<Rightarrow> t |\n    Bal t' \\<Rightarrow> t')\""], ["", "(* Unbal unreachable *)"], ["", "subsubsection \\<open>Functional Correctness and Invariants\\<close>"], ["", "lemma height_balance: \"\\<lbrakk> \\<not> bal_i (size t) h \\<rbrakk>\n  \\<Longrightarrow> height (balance_tree (t::'a::linorder tree)) < h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> bal_i (size t) h \\<Longrightarrow> height (balance_tree t) < h", "by (meson bal_i_balance leI le_refl mono_bal_i)"], ["", "lemma mono_bal_i':\n  \"\\<lbrakk> ASSUMPTION(bal_i n h); n \\<le> n'; h' \\<le> h \\<rbrakk> \\<Longrightarrow> bal_i n' h'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ASSUMPTION (bal_i n h); n \\<le> n'; h' \\<le> h\\<rbrakk>\n    \\<Longrightarrow> bal_i n' h'", "unfolding ASSUMPTION_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>bal_i n h; n \\<le> n'; h' \\<le> h\\<rbrakk>\n    \\<Longrightarrow> bal_i n' h'", "by(rule mono_bal_i)"], ["", "lemma inorder_ins: \"sorted(inorder t) \\<Longrightarrow>\n  (ins n d x t = Same \\<longrightarrow> ins_list x (inorder t) = inorder t) \\<and>\n  (ins n d x t = Bal t' \\<longrightarrow> ins_list x (inorder t) = inorder t') \\<and>\n  (ins n d x t = Unbal t' \\<longrightarrow> ins_list x (inorder t) = inorder t')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sorted_Less.sorted (inorder t) \\<Longrightarrow>\n    (ins n d x t = Same \\<longrightarrow>\n     ins_list x (inorder t) = inorder t) \\<and>\n    (ins n d x t = Bal t' \\<longrightarrow>\n     ins_list x (inorder t) = inorder t') \\<and>\n    (ins n d x t = Unbal t' \\<longrightarrow>\n     ins_list x (inorder t) = inorder t')", "by(induction t arbitrary: d t')\n  (auto simp: ins_list_simps bal.simps[of \"Suc 0\"] bal.simps[of 0]\n        split!: if_splits prod.splits up.splits)"], ["", "lemma ins_size:\nshows \"ins n d x t = Bal t' \\<Longrightarrow> size t' = size t + 1\"\nand \"ins n d x t = Unbal t' \\<Longrightarrow> size t' = size t + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ins n d x t = Bal t' \\<Longrightarrow> size t' = size t + 1) &&&\n    (ins n d x t = Unbal t' \\<Longrightarrow> size t' = size t + 1)", "by(induction t arbitrary: d t')\n  (auto split: if_splits up.splits)"], ["", "lemma ins_height:\nshows \"ins n d x t = Bal t' \\<Longrightarrow> height t' \\<le> height t + 1\"\nand \"ins n d x t = Unbal t' \\<Longrightarrow> height t \\<le> height t' \\<and> height t' \\<le> height t + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ins n d x t = Bal t' \\<Longrightarrow>\n     height t' \\<le> height t + 1) &&&\n    (ins n d x t = Unbal t' \\<Longrightarrow>\n     height t \\<le> height t' \\<and> height t' \\<le> height t + 1)", "proof(induction t arbitrary: d t')"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>d t'.\n       ins n d x \\<langle>\\<rangle> = Bal t' \\<Longrightarrow>\n       height t' \\<le> height \\<langle>\\<rangle> + 1\n 2. \\<And>d t'.\n       ins n d x \\<langle>\\<rangle> = Unbal t' \\<Longrightarrow>\n       height \\<langle>\\<rangle> \\<le> height t' \\<and>\n       height t' \\<le> height \\<langle>\\<rangle> + 1\n 3. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Bal t'\\<rbrakk>\n       \\<Longrightarrow> height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1\n 4. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Unbal t'\\<rbrakk>\n       \\<Longrightarrow> height \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> height t' \\<and>\n                         height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1", "case Leaf"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. \\<And>d t'.\n       ins n d x \\<langle>\\<rangle> = Bal t' \\<Longrightarrow>\n       height t' \\<le> height \\<langle>\\<rangle> + 1\n 2. \\<And>d t'.\n       ins n d x \\<langle>\\<rangle> = Unbal t' \\<Longrightarrow>\n       height \\<langle>\\<rangle> \\<le> height t' \\<and>\n       height t' \\<le> height \\<langle>\\<rangle> + 1\n 3. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Bal t'\\<rbrakk>\n       \\<Longrightarrow> height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1\n 4. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Unbal t'\\<rbrakk>\n       \\<Longrightarrow> height \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> height t' \\<and>\n                         height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1", "{"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. \\<And>d t'.\n       ins n d x \\<langle>\\<rangle> = Bal t' \\<Longrightarrow>\n       height t' \\<le> height \\<langle>\\<rangle> + 1\n 2. \\<And>d t'.\n       ins n d x \\<langle>\\<rangle> = Unbal t' \\<Longrightarrow>\n       height \\<langle>\\<rangle> \\<le> height t' \\<and>\n       height t' \\<le> height \\<langle>\\<rangle> + 1\n 3. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Bal t'\\<rbrakk>\n       \\<Longrightarrow> height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1\n 4. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Unbal t'\\<rbrakk>\n       \\<Longrightarrow> height \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> height t' \\<and>\n                         height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1", "case 1"], ["proof (state)\nthis:\n  ins n d x \\<langle>\\<rangle> = Bal t'\n\ngoal (4 subgoals):\n 1. \\<And>d t'.\n       ins n d x \\<langle>\\<rangle> = Bal t' \\<Longrightarrow>\n       height t' \\<le> height \\<langle>\\<rangle> + 1\n 2. \\<And>d t'.\n       ins n d x \\<langle>\\<rangle> = Unbal t' \\<Longrightarrow>\n       height \\<langle>\\<rangle> \\<le> height t' \\<and>\n       height t' \\<le> height \\<langle>\\<rangle> + 1\n 3. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Bal t'\\<rbrakk>\n       \\<Longrightarrow> height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1\n 4. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Unbal t'\\<rbrakk>\n       \\<Longrightarrow> height \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> height t' \\<and>\n                         height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1", "thus ?case"], ["proof (prove)\nusing this:\n  ins n d x \\<langle>\\<rangle> = Bal t'\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>\\<rangle> + 1", "by (auto split: if_splits)"], ["proof (state)\nthis:\n  height t' \\<le> height \\<langle>\\<rangle> + 1\n\ngoal (3 subgoals):\n 1. \\<And>d t'.\n       ins n d x \\<langle>\\<rangle> = Unbal t' \\<Longrightarrow>\n       height \\<langle>\\<rangle> \\<le> height t' \\<and>\n       height t' \\<le> height \\<langle>\\<rangle> + 1\n 2. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Bal t'\\<rbrakk>\n       \\<Longrightarrow> height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1\n 3. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Unbal t'\\<rbrakk>\n       \\<Longrightarrow> height \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> height t' \\<and>\n                         height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>d t'.\n       ins n d x \\<langle>\\<rangle> = Unbal t' \\<Longrightarrow>\n       height \\<langle>\\<rangle> \\<le> height t' \\<and>\n       height t' \\<le> height \\<langle>\\<rangle> + 1\n 2. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Bal t'\\<rbrakk>\n       \\<Longrightarrow> height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1\n 3. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Unbal t'\\<rbrakk>\n       \\<Longrightarrow> height \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> height t' \\<and>\n                         height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1", "case 2"], ["proof (state)\nthis:\n  ins n d x \\<langle>\\<rangle> = Unbal t'\n\ngoal (3 subgoals):\n 1. \\<And>d t'.\n       ins n d x \\<langle>\\<rangle> = Unbal t' \\<Longrightarrow>\n       height \\<langle>\\<rangle> \\<le> height t' \\<and>\n       height t' \\<le> height \\<langle>\\<rangle> + 1\n 2. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Bal t'\\<rbrakk>\n       \\<Longrightarrow> height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1\n 3. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Unbal t'\\<rbrakk>\n       \\<Longrightarrow> height \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> height t' \\<and>\n                         height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1", "thus ?case"], ["proof (prove)\nusing this:\n  ins n d x \\<langle>\\<rangle> = Unbal t'\n\ngoal (1 subgoal):\n 1. height \\<langle>\\<rangle> \\<le> height t' \\<and>\n    height t' \\<le> height \\<langle>\\<rangle> + 1", "by (auto split: if_splits)"], ["proof (state)\nthis:\n  height \\<langle>\\<rangle> \\<le> height t' \\<and>\n  height t' \\<le> height \\<langle>\\<rangle> + 1\n\ngoal (2 subgoals):\n 1. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Bal t'\\<rbrakk>\n       \\<Longrightarrow> height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1\n 2. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Unbal t'\\<rbrakk>\n       \\<Longrightarrow> height \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> height t' \\<and>\n                         height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1", "}"], ["proof (state)\nthis:\n  ins n ?da2 x \\<langle>\\<rangle> = Unbal ?t'a2 \\<Longrightarrow>\n  height \\<langle>\\<rangle> \\<le> height ?t'a2 \\<and>\n  height ?t'a2 \\<le> height \\<langle>\\<rangle> + 1\n\ngoal (2 subgoals):\n 1. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Bal t'\\<rbrakk>\n       \\<Longrightarrow> height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1\n 2. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Unbal t'\\<rbrakk>\n       \\<Longrightarrow> height \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> height t' \\<and>\n                         height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Bal t'\\<rbrakk>\n       \\<Longrightarrow> height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1\n 2. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Unbal t'\\<rbrakk>\n       \\<Longrightarrow> height \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> height t' \\<and>\n                         height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1", "case (Node l y r)"], ["proof (state)\nthis:\n  ins n ?d x l = Bal ?t' \\<Longrightarrow> height ?t' \\<le> height l + 1\n  ins n ?d x l = Unbal ?t' \\<Longrightarrow>\n  height l \\<le> height ?t' \\<and> height ?t' \\<le> height l + 1\n  ins n ?d x r = Bal ?t' \\<Longrightarrow> height ?t' \\<le> height r + 1\n  ins n ?d x r = Unbal ?t' \\<Longrightarrow>\n  height r \\<le> height ?t' \\<and> height ?t' \\<le> height r + 1\n\ngoal (2 subgoals):\n 1. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Bal t'\\<rbrakk>\n       \\<Longrightarrow> height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1\n 2. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Unbal t'\\<rbrakk>\n       \\<Longrightarrow> height \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> height t' \\<and>\n                         height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1", "{"], ["proof (state)\nthis:\n  ins n ?d x l = Bal ?t' \\<Longrightarrow> height ?t' \\<le> height l + 1\n  ins n ?d x l = Unbal ?t' \\<Longrightarrow>\n  height l \\<le> height ?t' \\<and> height ?t' \\<le> height l + 1\n  ins n ?d x r = Bal ?t' \\<Longrightarrow> height ?t' \\<le> height r + 1\n  ins n ?d x r = Unbal ?t' \\<Longrightarrow>\n  height r \\<le> height ?t' \\<and> height ?t' \\<le> height r + 1\n\ngoal (2 subgoals):\n 1. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Bal t'\\<rbrakk>\n       \\<Longrightarrow> height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1\n 2. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Unbal t'\\<rbrakk>\n       \\<Longrightarrow> height \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> height t' \\<and>\n                         height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1", "case 1"], ["proof (state)\nthis:\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n\ngoal (2 subgoals):\n 1. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Bal t'\\<rbrakk>\n       \\<Longrightarrow> height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1\n 2. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Unbal t'\\<rbrakk>\n       \\<Longrightarrow> height \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> height t' \\<and>\n                         height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1", "consider (ls) \"x < y\" | (eq) \"x = y\" | (gr) \"x > y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y \\<Longrightarrow> thesis; x = y \\<Longrightarrow> thesis;\n     y < x \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by(metis less_linear)"], ["proof (state)\nthis:\n  \\<lbrakk>x < y \\<Longrightarrow> ?thesis; x = y \\<Longrightarrow> ?thesis;\n   y < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Bal t'\\<rbrakk>\n       \\<Longrightarrow> height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1\n 2. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Unbal t'\\<rbrakk>\n       \\<Longrightarrow> height \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> height t' \\<and>\n                         height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>x < y \\<Longrightarrow> ?thesis; x = y \\<Longrightarrow> ?thesis;\n   y < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n 2. x = y \\<Longrightarrow>\n    height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n 3. y < x \\<Longrightarrow>\n    height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "case ls"], ["proof (state)\nthis:\n  x < y\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n 2. x = y \\<Longrightarrow>\n    height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n 3. y < x \\<Longrightarrow>\n    height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "proof (cases \"ins n (d+1) x l\")"], ["proof (state)\ngoal (3 subgoals):\n 1. ins n (d + 1) x l = Same \\<Longrightarrow>\n    height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n 2. \\<And>x2.\n       ins n (d + 1) x l = Bal x2 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n 3. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "case Same"], ["proof (state)\nthis:\n  ins n (d + 1) x l = Same\n\ngoal (3 subgoals):\n 1. ins n (d + 1) x l = Same \\<Longrightarrow>\n    height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n 2. \\<And>x2.\n       ins n (d + 1) x l = Bal x2 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n 3. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  ins n (d + 1) x l = Same\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "using 1 ls"], ["proof (prove)\nusing this:\n  ins n (d + 1) x l = Same\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n  x < y\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "by (simp)"], ["proof (state)\nthis:\n  height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins n (d + 1) x l = Bal x2 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n 2. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins n (d + 1) x l = Bal x2 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n 2. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "case Bal"], ["proof (state)\nthis:\n  ins n (d + 1) x l = Bal x2_\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins n (d + 1) x l = Bal x2 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n 2. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  ins n (d + 1) x l = Bal x2_\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "using 1 ls"], ["proof (prove)\nusing this:\n  ins n (d + 1) x l = Bal x2_\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n  x < y\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "by (auto simp: max_def dest: Node)"], ["proof (state)\nthis:\n  height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "case (Unbal l')"], ["proof (state)\nthis:\n  ins n (d + 1) x l = Unbal l'\n\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "let ?t = \"Node l' y r\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "let ?h = \"height ?t\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "let ?n = \"size ?t\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "have \"\\<not> bal_i ?n ?h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> bal_i (size \\<langle>l', y, r\\<rangle>)\n            (height \\<langle>l', y, r\\<rangle>)", "using 1 ls Unbal"], ["proof (prove)\nusing this:\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n  x < y\n  ins n (d + 1) x l = Unbal l'\n\ngoal (1 subgoal):\n 1. \\<not> bal_i (size \\<langle>l', y, r\\<rangle>)\n            (height \\<langle>l', y, r\\<rangle>)", "by (auto)"], ["proof (state)\nthis:\n  \\<not> bal_i (size \\<langle>l', y, r\\<rangle>)\n          (height \\<langle>l', y, r\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> bal_i (size \\<langle>l', y, r\\<rangle>)\n          (height \\<langle>l', y, r\\<rangle>)\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "using 1 ls Unbal Node.IH(2)[OF Unbal]\n            height_balance[of ?t \"height ?t\"]"], ["proof (prove)\nusing this:\n  \\<not> bal_i (size \\<langle>l', y, r\\<rangle>)\n          (height \\<langle>l', y, r\\<rangle>)\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n  x < y\n  ins n (d + 1) x l = Unbal l'\n  height l \\<le> height l' \\<and> height l' \\<le> height l + 1\n  \\<not> bal_i (size \\<langle>l', y, r\\<rangle>)\n          (height \\<langle>l', y, r\\<rangle>) \\<Longrightarrow>\n  height (balance_tree \\<langle>l', y, r\\<rangle>)\n  < height \\<langle>l', y, r\\<rangle>\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "by(auto)"], ["proof (state)\nthis:\n  height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n 2. y < x \\<Longrightarrow>\n    height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n 2. y < x \\<Longrightarrow>\n    height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "case eq"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n 2. y < x \\<Longrightarrow>\n    height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "using 1"], ["proof (prove)\nusing this:\n  x = y\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "by(simp)"], ["proof (state)\nthis:\n  height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "case gr"], ["proof (state)\nthis:\n  y < x\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "proof (cases \"ins n (d+1) x r\")"], ["proof (state)\ngoal (3 subgoals):\n 1. ins n (d + 1) x r = Same \\<Longrightarrow>\n    height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n 2. \\<And>x2.\n       ins n (d + 1) x r = Bal x2 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n 3. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "case Same"], ["proof (state)\nthis:\n  ins n (d + 1) x r = Same\n\ngoal (3 subgoals):\n 1. ins n (d + 1) x r = Same \\<Longrightarrow>\n    height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n 2. \\<And>x2.\n       ins n (d + 1) x r = Bal x2 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n 3. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  ins n (d + 1) x r = Same\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "using 1 gr"], ["proof (prove)\nusing this:\n  ins n (d + 1) x r = Same\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n  y < x\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "by (simp)"], ["proof (state)\nthis:\n  height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins n (d + 1) x r = Bal x2 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n 2. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins n (d + 1) x r = Bal x2 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n 2. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "case Bal"], ["proof (state)\nthis:\n  ins n (d + 1) x r = Bal x2_\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins n (d + 1) x r = Bal x2 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n 2. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  ins n (d + 1) x r = Bal x2_\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "using 1 gr"], ["proof (prove)\nusing this:\n  ins n (d + 1) x r = Bal x2_\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n  y < x\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "by (auto simp: max_def dest: Node)"], ["proof (state)\nthis:\n  height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "case (Unbal r')"], ["proof (state)\nthis:\n  ins n (d + 1) x r = Unbal r'\n\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "let ?t = \"Node l y r'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "let ?h = \"height ?t\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "let ?n = \"size ?t\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "have \"\\<not> bal_i ?n ?h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> bal_i (size \\<langle>l, y, r'\\<rangle>)\n            (height \\<langle>l, y, r'\\<rangle>)", "using 1 gr Unbal"], ["proof (prove)\nusing this:\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n  y < x\n  ins n (d + 1) x r = Unbal r'\n\ngoal (1 subgoal):\n 1. \\<not> bal_i (size \\<langle>l, y, r'\\<rangle>)\n            (height \\<langle>l, y, r'\\<rangle>)", "by (auto)"], ["proof (state)\nthis:\n  \\<not> bal_i (size \\<langle>l, y, r'\\<rangle>)\n          (height \\<langle>l, y, r'\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> bal_i (size \\<langle>l, y, r'\\<rangle>)\n          (height \\<langle>l, y, r'\\<rangle>)\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "using 1 gr Unbal Node.IH(4)[OF Unbal]\n            height_balance[of ?t \"height ?t\"]"], ["proof (prove)\nusing this:\n  \\<not> bal_i (size \\<langle>l, y, r'\\<rangle>)\n          (height \\<langle>l, y, r'\\<rangle>)\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n  y < x\n  ins n (d + 1) x r = Unbal r'\n  height r \\<le> height r' \\<and> height r' \\<le> height r + 1\n  \\<not> bal_i (size \\<langle>l, y, r'\\<rangle>)\n          (height \\<langle>l, y, r'\\<rangle>) \\<Longrightarrow>\n  height (balance_tree \\<langle>l, y, r'\\<rangle>)\n  < height \\<langle>l, y, r'\\<rangle>\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "by(auto)"], ["proof (state)\nthis:\n  height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Unbal t'\\<rbrakk>\n       \\<Longrightarrow> height \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> height t' \\<and>\n                         height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Unbal t'\\<rbrakk>\n       \\<Longrightarrow> height \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> height t' \\<and>\n                         height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1", "case 2"], ["proof (state)\nthis:\n  ins n d x \\<langle>l, y, r\\<rangle> = Unbal t'\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Bal t' \\<Longrightarrow>\n                   height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t1 = Unbal t' \\<Longrightarrow>\n           height t1 \\<le> height t' \\<and> height t' \\<le> height t1 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Bal t' \\<Longrightarrow>\n           height t' \\<le> height t2 + 1;\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           height t2 \\<le> height t' \\<and> height t' \\<le> height t2 + 1;\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Unbal t'\\<rbrakk>\n       \\<Longrightarrow> height \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> height t' \\<and>\n                         height t'\n                         \\<le> height \\<langle>t1, x2, t2\\<rangle> + 1", "thus ?case"], ["proof (prove)\nusing this:\n  ins n d x \\<langle>l, y, r\\<rangle> = Unbal t'\n\ngoal (1 subgoal):\n 1. height \\<langle>l, y, r\\<rangle> \\<le> height t' \\<and>\n    height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1", "by(auto simp: max_def dest: Node split: if_splits up.splits)"], ["proof (state)\nthis:\n  height \\<langle>l, y, r\\<rangle> \\<le> height t' \\<and>\n  height t' \\<le> height \\<langle>l, y, r\\<rangle> + 1\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  ins n ?da2 x \\<langle>l, y, r\\<rangle> = Unbal ?t'a2 \\<Longrightarrow>\n  height \\<langle>l, y, r\\<rangle> \\<le> height ?t'a2 \\<and>\n  height ?t'a2 \\<le> height \\<langle>l, y, r\\<rangle> + 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bal_i0: \"bal_i 0 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal_i 0 0", "using bal_i_balance[of Leaf]"], ["proof (prove)\nusing this:\n  bal_i (size \\<langle>\\<rangle>) (height (balance_tree \\<langle>\\<rangle>))\n\ngoal (1 subgoal):\n 1. bal_i 0 0", "by(auto simp add: Balance.bal_tree_def balance_tree_def Balance.bal_list_def Balance.bal_simps)"], ["", "lemma bal_i1: \"bal_i 1 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal_i 1 1", "using bal_i_balance[of \"Node Leaf undefined Leaf\"]"], ["proof (prove)\nusing this:\n  bal_i\n   (size\n     \\<langle>\\<langle>\\<rangle>, undefined, \\<langle>\\<rangle>\\<rangle>)\n   (height\n     (balance_tree\n       \\<langle>\\<langle>\\<rangle>, undefined, \\<langle>\\<rangle>\\<rangle>))\n\ngoal (1 subgoal):\n 1. bal_i 1 1", "by(auto simp add: balance_tree_def Balance.bal_tree_def Balance.bal_list_def Balance.bal_simps)"], ["", "lemma bal_i_ins_Unbal:\n  assumes \"ins n d x t = Unbal t'\" shows \"bal_i (size t') (height t')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal_i (size t') (height t')", "proof(cases t)"], ["proof (state)\ngoal (2 subgoals):\n 1. t = \\<langle>\\<rangle> \\<Longrightarrow> bal_i (size t') (height t')\n 2. \\<And>x21 x22 x23.\n       t = \\<langle>x21, x22, x23\\<rangle> \\<Longrightarrow>\n       bal_i (size t') (height t')", "case Leaf"], ["proof (state)\nthis:\n  t = \\<langle>\\<rangle>\n\ngoal (2 subgoals):\n 1. t = \\<langle>\\<rangle> \\<Longrightarrow> bal_i (size t') (height t')\n 2. \\<And>x21 x22 x23.\n       t = \\<langle>x21, x22, x23\\<rangle> \\<Longrightarrow>\n       bal_i (size t') (height t')", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = \\<langle>\\<rangle>\n\ngoal (1 subgoal):\n 1. bal_i (size t') (height t')", "using assms bal_i1"], ["proof (prove)\nusing this:\n  t = \\<langle>\\<rangle>\n  ins n d x t = Unbal t'\n  bal_i 1 1\n\ngoal (1 subgoal):\n 1. bal_i (size t') (height t')", "by(auto split: if_splits)"], ["proof (state)\nthis:\n  bal_i (size t') (height t')\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       t = \\<langle>x21, x22, x23\\<rangle> \\<Longrightarrow>\n       bal_i (size t') (height t')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       t = \\<langle>x21, x22, x23\\<rangle> \\<Longrightarrow>\n       bal_i (size t') (height t')", "case Node"], ["proof (state)\nthis:\n  t = \\<langle>x21_, x22_, x23_\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       t = \\<langle>x21, x22, x23\\<rangle> \\<Longrightarrow>\n       bal_i (size t') (height t')", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = \\<langle>x21_, x22_, x23_\\<rangle>\n\ngoal (1 subgoal):\n 1. bal_i (size t') (height t')", "using assms"], ["proof (prove)\nusing this:\n  t = \\<langle>x21_, x22_, x23_\\<rangle>\n  ins n d x t = Unbal t'\n\ngoal (1 subgoal):\n 1. bal_i (size t') (height t')", "by(auto split: if_splits up.splits)"], ["proof (state)\nthis:\n  bal_i (size t') (height t')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unbal_ins_Unbal:\n  \"ins n d x t = Unbal t' \\<Longrightarrow> \\<not> bal_i (n+1) (height t' + d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ins n d x t = Unbal t' \\<Longrightarrow>\n    \\<not> bal_i (n + 1) (height t' + d)", "proof(induction t arbitrary: d t')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d t'.\n       ins n d x \\<langle>\\<rangle> = Unbal t' \\<Longrightarrow>\n       \\<not> bal_i (n + 1) (height t' + d)\n 2. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Unbal t' \\<Longrightarrow>\n                   \\<not> bal_i (n + 1) (height t' + d);\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           \\<not> bal_i (n + 1) (height t' + d);\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Unbal t'\\<rbrakk>\n       \\<Longrightarrow> \\<not> bal_i (n + 1) (height t' + d)", "case Leaf"], ["proof (state)\nthis:\n  ins n d x \\<langle>\\<rangle> = Unbal t'\n\ngoal (2 subgoals):\n 1. \\<And>d t'.\n       ins n d x \\<langle>\\<rangle> = Unbal t' \\<Longrightarrow>\n       \\<not> bal_i (n + 1) (height t' + d)\n 2. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Unbal t' \\<Longrightarrow>\n                   \\<not> bal_i (n + 1) (height t' + d);\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           \\<not> bal_i (n + 1) (height t' + d);\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Unbal t'\\<rbrakk>\n       \\<Longrightarrow> \\<not> bal_i (n + 1) (height t' + d)", "thus ?case"], ["proof (prove)\nusing this:\n  ins n d x \\<langle>\\<rangle> = Unbal t'\n\ngoal (1 subgoal):\n 1. \\<not> bal_i (n + 1) (height t' + d)", "by (auto split: if_splits)"], ["proof (state)\nthis:\n  \\<not> bal_i (n + 1) (height t' + d)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Unbal t' \\<Longrightarrow>\n                   \\<not> bal_i (n + 1) (height t' + d);\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           \\<not> bal_i (n + 1) (height t' + d);\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Unbal t'\\<rbrakk>\n       \\<Longrightarrow> \\<not> bal_i (n + 1) (height t' + d)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Unbal t' \\<Longrightarrow>\n                   \\<not> bal_i (n + 1) (height t' + d);\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           \\<not> bal_i (n + 1) (height t' + d);\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Unbal t'\\<rbrakk>\n       \\<Longrightarrow> \\<not> bal_i (n + 1) (height t' + d)", "case Node"], ["proof (state)\nthis:\n  ins n ?d x t1_ = Unbal ?t' \\<Longrightarrow>\n  \\<not> bal_i (n + 1) (height ?t' + ?d)\n  ins n ?d x t2_ = Unbal ?t' \\<Longrightarrow>\n  \\<not> bal_i (n + 1) (height ?t' + ?d)\n  ins n d x \\<langle>t1_, x2_, t2_\\<rangle> = Unbal t'\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   ins n d x t1 = Unbal t' \\<Longrightarrow>\n                   \\<not> bal_i (n + 1) (height t' + d);\n        \\<And>d t'.\n           ins n d x t2 = Unbal t' \\<Longrightarrow>\n           \\<not> bal_i (n + 1) (height t' + d);\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Unbal t'\\<rbrakk>\n       \\<Longrightarrow> \\<not> bal_i (n + 1) (height t' + d)", "thus ?case"], ["proof (prove)\nusing this:\n  ins n ?d x t1_ = Unbal ?t' \\<Longrightarrow>\n  \\<not> bal_i (n + 1) (height ?t' + ?d)\n  ins n ?d x t2_ = Unbal ?t' \\<Longrightarrow>\n  \\<not> bal_i (n + 1) (height ?t' + ?d)\n  ins n d x \\<langle>t1_, x2_, t2_\\<rangle> = Unbal t'\n\ngoal (1 subgoal):\n 1. \\<not> bal_i (n + 1) (height t' + d)", "by(fastforce simp: mono_bal_i' split: if_splits up.splits)"], ["proof (state)\nthis:\n  \\<not> bal_i (n + 1) (height t' + d)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma height_Unbal_l: assumes \"ins n (d+1) x l = Unbal l'\"\n  \"bal_i n (height \\<langle>l, y, r\\<rangle> + d)\"\nshows \"height r < height l'\" (is ?P)"], ["proof (prove)\ngoal (1 subgoal):\n 1. height r < height l'", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> height r < height l' \\<Longrightarrow> False", "assume \"\\<not> ?P\""], ["proof (state)\nthis:\n  \\<not> height r < height l'\n\ngoal (1 subgoal):\n 1. \\<not> height r < height l' \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  \\<not> height r < height l'\n\ngoal (1 subgoal):\n 1. False", "using assms(2) unbal_ins_Unbal[OF assms(1)]"], ["proof (prove)\nusing this:\n  \\<not> height r < height l'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n  \\<not> bal_i (n + 1) (height l' + (d + 1))\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: mono_bal_i')"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma height_Unbal_r: assumes \"ins n (d+1) x r = Unbal r'\"\n  \"bal_i n (height \\<langle>l, y, r\\<rangle> + d)\"\nshows \"height l < height r'\" (is ?P)"], ["proof (prove)\ngoal (1 subgoal):\n 1. height l < height r'", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> height l < height r' \\<Longrightarrow> False", "assume \"\\<not> ?P\""], ["proof (state)\nthis:\n  \\<not> height l < height r'\n\ngoal (1 subgoal):\n 1. \\<not> height l < height r' \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  \\<not> height l < height r'\n\ngoal (1 subgoal):\n 1. False", "using assms(2) unbal_ins_Unbal[OF assms(1)]"], ["proof (prove)\nusing this:\n  \\<not> height l < height r'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n  \\<not> bal_i (n + 1) (height r' + (d + 1))\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: mono_bal_i' split: if_splits)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ins_bal_i_Bal:\n  \"\\<lbrakk> ins n d x t = Bal t'; bal_i n (height t + d) \\<rbrakk>\n  \\<Longrightarrow> bal_i (n+1) (height t' + d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ins n d x t = Bal t'; bal_i n (height t + d)\\<rbrakk>\n    \\<Longrightarrow> bal_i (n + 1) (height t' + d)", "proof(induction t arbitrary: d t')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d t'.\n       \\<lbrakk>ins n d x \\<langle>\\<rangle> = Bal t';\n        bal_i n (height \\<langle>\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> bal_i (n + 1) (height t' + d)\n 2. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   \\<lbrakk>ins n d x t1 = Bal t';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> bal_i (n + 1) (height t' + d);\n        \\<And>d t'.\n           \\<lbrakk>ins n d x t2 = Bal t'; bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> bal_i (n + 1) (height t' + d);\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Bal t';\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> bal_i (n + 1) (height t' + d)", "case Leaf"], ["proof (state)\nthis:\n  ins n d x \\<langle>\\<rangle> = Bal t'\n  bal_i n (height \\<langle>\\<rangle> + d)\n\ngoal (2 subgoals):\n 1. \\<And>d t'.\n       \\<lbrakk>ins n d x \\<langle>\\<rangle> = Bal t';\n        bal_i n (height \\<langle>\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> bal_i (n + 1) (height t' + d)\n 2. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   \\<lbrakk>ins n d x t1 = Bal t';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> bal_i (n + 1) (height t' + d);\n        \\<And>d t'.\n           \\<lbrakk>ins n d x t2 = Bal t'; bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> bal_i (n + 1) (height t' + d);\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Bal t';\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> bal_i (n + 1) (height t' + d)", "thus ?case"], ["proof (prove)\nusing this:\n  ins n d x \\<langle>\\<rangle> = Bal t'\n  bal_i n (height \\<langle>\\<rangle> + d)\n\ngoal (1 subgoal):\n 1. bal_i (n + 1) (height t' + d)", "by (auto split: if_splits)"], ["proof (state)\nthis:\n  bal_i (n + 1) (height t' + d)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   \\<lbrakk>ins n d x t1 = Bal t';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> bal_i (n + 1) (height t' + d);\n        \\<And>d t'.\n           \\<lbrakk>ins n d x t2 = Bal t'; bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> bal_i (n + 1) (height t' + d);\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Bal t';\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> bal_i (n + 1) (height t' + d)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   \\<lbrakk>ins n d x t1 = Bal t';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> bal_i (n + 1) (height t' + d);\n        \\<And>d t'.\n           \\<lbrakk>ins n d x t2 = Bal t'; bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> bal_i (n + 1) (height t' + d);\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Bal t';\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> bal_i (n + 1) (height t' + d)", "case (Node l y r)"], ["proof (state)\nthis:\n  \\<lbrakk>ins n ?d x l = Bal ?t'; bal_i n (height l + ?d)\\<rbrakk>\n  \\<Longrightarrow> bal_i (n + 1) (height ?t' + ?d)\n  \\<lbrakk>ins n ?d x r = Bal ?t'; bal_i n (height r + ?d)\\<rbrakk>\n  \\<Longrightarrow> bal_i (n + 1) (height ?t' + ?d)\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   \\<lbrakk>ins n d x t1 = Bal t';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> bal_i (n + 1) (height t' + d);\n        \\<And>d t'.\n           \\<lbrakk>ins n d x t2 = Bal t'; bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> bal_i (n + 1) (height t' + d);\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Bal t';\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> bal_i (n + 1) (height t' + d)", "consider (ls) \"x < y\" | (eq) \"x = y\" | (gr) \"x > y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y \\<Longrightarrow> thesis; x = y \\<Longrightarrow> thesis;\n     y < x \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by(metis less_linear)"], ["proof (state)\nthis:\n  \\<lbrakk>x < y \\<Longrightarrow> ?thesis; x = y \\<Longrightarrow> ?thesis;\n   y < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   \\<lbrakk>ins n d x t1 = Bal t';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> bal_i (n + 1) (height t' + d);\n        \\<And>d t'.\n           \\<lbrakk>ins n d x t2 = Bal t'; bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> bal_i (n + 1) (height t' + d);\n        ins n d x \\<langle>t1, x2, t2\\<rangle> = Bal t';\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> bal_i (n + 1) (height t' + d)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>x < y \\<Longrightarrow> ?thesis; x = y \\<Longrightarrow> ?thesis;\n   y < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. bal_i (n + 1) (height t' + d)", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> bal_i (n + 1) (height t' + d)\n 2. x = y \\<Longrightarrow> bal_i (n + 1) (height t' + d)\n 3. y < x \\<Longrightarrow> bal_i (n + 1) (height t' + d)", "case ls"], ["proof (state)\nthis:\n  x < y\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> bal_i (n + 1) (height t' + d)\n 2. x = y \\<Longrightarrow> bal_i (n + 1) (height t' + d)\n 3. y < x \\<Longrightarrow> bal_i (n + 1) (height t' + d)", "have 2: \"bal_i n (height l + (d + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal_i n (height l + (d + 1))", "using Node.prems(2)"], ["proof (prove)\nusing this:\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n\ngoal (1 subgoal):\n 1. bal_i n (height l + (d + 1))", "by (simp add: mono_bal_i')"], ["proof (state)\nthis:\n  bal_i n (height l + (d + 1))\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> bal_i (n + 1) (height t' + d)\n 2. x = y \\<Longrightarrow> bal_i (n + 1) (height t' + d)\n 3. y < x \\<Longrightarrow> bal_i (n + 1) (height t' + d)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. bal_i (n + 1) (height t' + d)", "proof (cases \"ins n (d+1) x l\")"], ["proof (state)\ngoal (3 subgoals):\n 1. ins n (d + 1) x l = Same \\<Longrightarrow> bal_i (n + 1) (height t' + d)\n 2. \\<And>x2.\n       ins n (d + 1) x l = Bal x2 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)\n 3. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "case Same"], ["proof (state)\nthis:\n  ins n (d + 1) x l = Same\n\ngoal (3 subgoals):\n 1. ins n (d + 1) x l = Same \\<Longrightarrow> bal_i (n + 1) (height t' + d)\n 2. \\<And>x2.\n       ins n (d + 1) x l = Bal x2 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)\n 3. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ins n (d + 1) x l = Same\n\ngoal (1 subgoal):\n 1. bal_i (n + 1) (height t' + d)", "using Node.prems ls"], ["proof (prove)\nusing this:\n  ins n (d + 1) x l = Same\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n  x < y\n\ngoal (1 subgoal):\n 1. bal_i (n + 1) (height t' + d)", "by (simp)"], ["proof (state)\nthis:\n  bal_i (n + 1) (height t' + d)\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins n (d + 1) x l = Bal x2 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)\n 2. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins n (d + 1) x l = Bal x2 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)\n 2. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "case Bal"], ["proof (state)\nthis:\n  ins n (d + 1) x l = Bal x2_\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins n (d + 1) x l = Bal x2 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)\n 2. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ins n (d + 1) x l = Bal x2_\n\ngoal (1 subgoal):\n 1. bal_i (n + 1) (height t' + d)", "using Node.prems ls ins_height(1)[OF Bal] Node.IH(1)[OF Bal 2]"], ["proof (prove)\nusing this:\n  ins n (d + 1) x l = Bal x2_\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n  x < y\n  height x2_ \\<le> height l + 1\n  bal_i (n + 1) (height x2_ + (d + 1))\n\ngoal (1 subgoal):\n 1. bal_i (n + 1) (height t' + d)", "by (auto simp: max_def mono_bal_i')"], ["proof (state)\nthis:\n  bal_i (n + 1) (height t' + d)\n\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "case (Unbal l')"], ["proof (state)\nthis:\n  ins n (d + 1) x l = Unbal l'\n\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "let ?t = \"Node l' y r\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "let ?h = \"height ?t\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "let ?n = \"size ?t\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "have \"\\<not> bal_i ?n ?h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> bal_i (size \\<langle>l', y, r\\<rangle>)\n            (height \\<langle>l', y, r\\<rangle>)", "using Node.prems ls Unbal"], ["proof (prove)\nusing this:\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n  x < y\n  ins n (d + 1) x l = Unbal l'\n\ngoal (1 subgoal):\n 1. \\<not> bal_i (size \\<langle>l', y, r\\<rangle>)\n            (height \\<langle>l', y, r\\<rangle>)", "by (auto)"], ["proof (state)\nthis:\n  \\<not> bal_i (size \\<langle>l', y, r\\<rangle>)\n          (height \\<langle>l', y, r\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x l = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> bal_i (size \\<langle>l', y, r\\<rangle>)\n          (height \\<langle>l', y, r\\<rangle>)\n\ngoal (1 subgoal):\n 1. bal_i (n + 1) (height t' + d)", "using Node.prems ls Unbal height_balance[of ?t \"height ?t\"]\n          ins_height(2)[OF Unbal]"], ["proof (prove)\nusing this:\n  \\<not> bal_i (size \\<langle>l', y, r\\<rangle>)\n          (height \\<langle>l', y, r\\<rangle>)\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n  x < y\n  ins n (d + 1) x l = Unbal l'\n  \\<not> bal_i (size \\<langle>l', y, r\\<rangle>)\n          (height \\<langle>l', y, r\\<rangle>) \\<Longrightarrow>\n  height (balance_tree \\<langle>l', y, r\\<rangle>)\n  < height \\<langle>l', y, r\\<rangle>\n  height l \\<le> height l' \\<and> height l' \\<le> height l + 1\n\ngoal (1 subgoal):\n 1. bal_i (n + 1) (height t' + d)", "by (auto simp: mono_bal_i')"], ["proof (state)\nthis:\n  bal_i (n + 1) (height t' + d)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bal_i (n + 1) (height t' + d)\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> bal_i (n + 1) (height t' + d)\n 2. y < x \\<Longrightarrow> bal_i (n + 1) (height t' + d)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> bal_i (n + 1) (height t' + d)\n 2. y < x \\<Longrightarrow> bal_i (n + 1) (height t' + d)", "case eq"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> bal_i (n + 1) (height t' + d)\n 2. y < x \\<Longrightarrow> bal_i (n + 1) (height t' + d)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. bal_i (n + 1) (height t' + d)", "using Node.prems"], ["proof (prove)\nusing this:\n  x = y\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n\ngoal (1 subgoal):\n 1. bal_i (n + 1) (height t' + d)", "by(simp)"], ["proof (state)\nthis:\n  bal_i (n + 1) (height t' + d)\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> bal_i (n + 1) (height t' + d)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> bal_i (n + 1) (height t' + d)", "case gr"], ["proof (state)\nthis:\n  y < x\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> bal_i (n + 1) (height t' + d)", "have 2: \"bal_i n (height r + (d + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal_i n (height r + (d + 1))", "using Node.prems(2)"], ["proof (prove)\nusing this:\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n\ngoal (1 subgoal):\n 1. bal_i n (height r + (d + 1))", "by(simp add: mono_bal_i')"], ["proof (state)\nthis:\n  bal_i n (height r + (d + 1))\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> bal_i (n + 1) (height t' + d)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. bal_i (n + 1) (height t' + d)", "proof (cases \"ins n (d+1) x r\")"], ["proof (state)\ngoal (3 subgoals):\n 1. ins n (d + 1) x r = Same \\<Longrightarrow> bal_i (n + 1) (height t' + d)\n 2. \\<And>x2.\n       ins n (d + 1) x r = Bal x2 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)\n 3. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "case Same"], ["proof (state)\nthis:\n  ins n (d + 1) x r = Same\n\ngoal (3 subgoals):\n 1. ins n (d + 1) x r = Same \\<Longrightarrow> bal_i (n + 1) (height t' + d)\n 2. \\<And>x2.\n       ins n (d + 1) x r = Bal x2 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)\n 3. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ins n (d + 1) x r = Same\n\ngoal (1 subgoal):\n 1. bal_i (n + 1) (height t' + d)", "using Node.prems gr"], ["proof (prove)\nusing this:\n  ins n (d + 1) x r = Same\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n  y < x\n\ngoal (1 subgoal):\n 1. bal_i (n + 1) (height t' + d)", "by (simp)"], ["proof (state)\nthis:\n  bal_i (n + 1) (height t' + d)\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins n (d + 1) x r = Bal x2 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)\n 2. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins n (d + 1) x r = Bal x2 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)\n 2. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "case Bal"], ["proof (state)\nthis:\n  ins n (d + 1) x r = Bal x2_\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins n (d + 1) x r = Bal x2 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)\n 2. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ins n (d + 1) x r = Bal x2_\n\ngoal (1 subgoal):\n 1. bal_i (n + 1) (height t' + d)", "using Node.prems gr ins_height(1)[OF Bal] Node.IH(2)[OF Bal 2]"], ["proof (prove)\nusing this:\n  ins n (d + 1) x r = Bal x2_\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n  y < x\n  height x2_ \\<le> height r + 1\n  bal_i (n + 1) (height x2_ + (d + 1))\n\ngoal (1 subgoal):\n 1. bal_i (n + 1) (height t' + d)", "by (auto simp: max_def mono_bal_i')"], ["proof (state)\nthis:\n  bal_i (n + 1) (height t' + d)\n\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "case (Unbal r')"], ["proof (state)\nthis:\n  ins n (d + 1) x r = Unbal r'\n\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "let ?t = \"Node l y r'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "let ?h = \"height ?t\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "let ?n = \"size ?t\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "have \"\\<not> bal_i ?n ?h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> bal_i (size \\<langle>l, y, r'\\<rangle>)\n            (height \\<langle>l, y, r'\\<rangle>)", "using Node.prems gr Unbal"], ["proof (prove)\nusing this:\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n  y < x\n  ins n (d + 1) x r = Unbal r'\n\ngoal (1 subgoal):\n 1. \\<not> bal_i (size \\<langle>l, y, r'\\<rangle>)\n            (height \\<langle>l, y, r'\\<rangle>)", "by (auto)"], ["proof (state)\nthis:\n  \\<not> bal_i (size \\<langle>l, y, r'\\<rangle>)\n          (height \\<langle>l, y, r'\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins n (d + 1) x r = Unbal x3 \\<Longrightarrow>\n       bal_i (n + 1) (height t' + d)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> bal_i (size \\<langle>l, y, r'\\<rangle>)\n          (height \\<langle>l, y, r'\\<rangle>)\n\ngoal (1 subgoal):\n 1. bal_i (n + 1) (height t' + d)", "using Node.prems gr Unbal\n          height_balance[of ?t \"height ?t\"] ins_height(2)[OF Unbal]"], ["proof (prove)\nusing this:\n  \\<not> bal_i (size \\<langle>l, y, r'\\<rangle>)\n          (height \\<langle>l, y, r'\\<rangle>)\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n  y < x\n  ins n (d + 1) x r = Unbal r'\n  \\<not> bal_i (size \\<langle>l, y, r'\\<rangle>)\n          (height \\<langle>l, y, r'\\<rangle>) \\<Longrightarrow>\n  height (balance_tree \\<langle>l, y, r'\\<rangle>)\n  < height \\<langle>l, y, r'\\<rangle>\n  height r \\<le> height r' \\<and> height r' \\<le> height r + 1\n\ngoal (1 subgoal):\n 1. bal_i (n + 1) (height t' + d)", "by (auto simp: mono_bal_i')"], ["proof (state)\nthis:\n  bal_i (n + 1) (height t' + d)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bal_i (n + 1) (height t' + d)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bal_i (n + 1) (height t' + d)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ins0_neq_Unbal: assumes \"n \\<ge> size t\" shows \"ins n 0 a t \\<noteq> Unbal t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ins n 0 a t \\<noteq> Unbal t'", "proof(cases t)"], ["proof (state)\ngoal (2 subgoals):\n 1. t = \\<langle>\\<rangle> \\<Longrightarrow> ins n 0 a t \\<noteq> Unbal t'\n 2. \\<And>x21 x22 x23.\n       t = \\<langle>x21, x22, x23\\<rangle> \\<Longrightarrow>\n       ins n 0 a t \\<noteq> Unbal t'", "case Leaf"], ["proof (state)\nthis:\n  t = \\<langle>\\<rangle>\n\ngoal (2 subgoals):\n 1. t = \\<langle>\\<rangle> \\<Longrightarrow> ins n 0 a t \\<noteq> Unbal t'\n 2. \\<And>x21 x22 x23.\n       t = \\<langle>x21, x22, x23\\<rangle> \\<Longrightarrow>\n       ins n 0 a t \\<noteq> Unbal t'", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = \\<langle>\\<rangle>\n\ngoal (1 subgoal):\n 1. ins n 0 a t \\<noteq> Unbal t'", "using bal_i1"], ["proof (prove)\nusing this:\n  t = \\<langle>\\<rangle>\n  bal_i 1 1\n\ngoal (1 subgoal):\n 1. ins n 0 a t \\<noteq> Unbal t'", "by(simp add: numeral_eq_Suc mono_bal_i')"], ["proof (state)\nthis:\n  ins n 0 a t \\<noteq> Unbal t'\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       t = \\<langle>x21, x22, x23\\<rangle> \\<Longrightarrow>\n       ins n 0 a t \\<noteq> Unbal t'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       t = \\<langle>x21, x22, x23\\<rangle> \\<Longrightarrow>\n       ins n 0 a t \\<noteq> Unbal t'", "case Node"], ["proof (state)\nthis:\n  t = \\<langle>x21_, x22_, x23_\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       t = \\<langle>x21, x22, x23\\<rangle> \\<Longrightarrow>\n       ins n 0 a t \\<noteq> Unbal t'", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = \\<langle>x21_, x22_, x23_\\<rangle>\n\ngoal (1 subgoal):\n 1. ins n 0 a t \\<noteq> Unbal t'", "using unbal_ins_Unbal[of \"n\" 0 a t t'] assms"], ["proof (prove)\nusing this:\n  t = \\<langle>x21_, x22_, x23_\\<rangle>\n  ins n 0 a t = Unbal t' \\<Longrightarrow>\n  \\<not> bal_i (n + 1) (height t' + 0)\n  size t \\<le> n\n\ngoal (1 subgoal):\n 1. ins n 0 a t \\<noteq> Unbal t'", "by(auto simp: ins_size mono_bal_i' split: up.splits)"], ["proof (state)\nthis:\n  ins n 0 a t \\<noteq> Unbal t'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inorder_insert: \"sorted(inorder t)\n  \\<Longrightarrow> inorder (insert x t) = ins_list x (inorder t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sorted_Less.sorted (inorder t) \\<Longrightarrow>\n    inorder (local.insert x t) = ins_list x (inorder t)", "using ins0_neq_Unbal"], ["proof (prove)\nusing this:\n  size ?t \\<le> ?n \\<Longrightarrow> ins ?n 0 ?a ?t \\<noteq> Unbal ?t'\n\ngoal (1 subgoal):\n 1. Sorted_Less.sorted (inorder t) \\<Longrightarrow>\n    inorder (local.insert x t) = ins_list x (inorder t)", "by(auto simp add: insert_def inorder_ins split: prod.split up.split)"], ["", "lemma bal_i_insert: assumes \"bal_i (size t) (height t)\"\nshows \"bal_i (size(insert x t)) (height(insert x t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal_i (size (local.insert x t)) (height (local.insert x t))", "proof (cases \"ins (size t) 0 x t\")"], ["proof (state)\ngoal (3 subgoals):\n 1. ins (size t) 0 x t = Same \\<Longrightarrow>\n    bal_i (size (local.insert x t)) (height (local.insert x t))\n 2. \\<And>x2.\n       ins (size t) 0 x t = Bal x2 \\<Longrightarrow>\n       bal_i (size (local.insert x t)) (height (local.insert x t))\n 3. \\<And>x3.\n       ins (size t) 0 x t = Unbal x3 \\<Longrightarrow>\n       bal_i (size (local.insert x t)) (height (local.insert x t))", "case Same"], ["proof (state)\nthis:\n  ins (size t) 0 x t = Same\n\ngoal (3 subgoals):\n 1. ins (size t) 0 x t = Same \\<Longrightarrow>\n    bal_i (size (local.insert x t)) (height (local.insert x t))\n 2. \\<And>x2.\n       ins (size t) 0 x t = Bal x2 \\<Longrightarrow>\n       bal_i (size (local.insert x t)) (height (local.insert x t))\n 3. \\<And>x3.\n       ins (size t) 0 x t = Unbal x3 \\<Longrightarrow>\n       bal_i (size (local.insert x t)) (height (local.insert x t))", "with assms"], ["proof (chain)\npicking this:\n  bal_i (size t) (height t)\n  ins (size t) 0 x t = Same", "show ?thesis"], ["proof (prove)\nusing this:\n  bal_i (size t) (height t)\n  ins (size t) 0 x t = Same\n\ngoal (1 subgoal):\n 1. bal_i (size (local.insert x t)) (height (local.insert x t))", "by simp"], ["proof (state)\nthis:\n  bal_i (size (local.insert x t)) (height (local.insert x t))\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins (size t) 0 x t = Bal x2 \\<Longrightarrow>\n       bal_i (size (local.insert x t)) (height (local.insert x t))\n 2. \\<And>x3.\n       ins (size t) 0 x t = Unbal x3 \\<Longrightarrow>\n       bal_i (size (local.insert x t)) (height (local.insert x t))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins (size t) 0 x t = Bal x2 \\<Longrightarrow>\n       bal_i (size (local.insert x t)) (height (local.insert x t))\n 2. \\<And>x3.\n       ins (size t) 0 x t = Unbal x3 \\<Longrightarrow>\n       bal_i (size (local.insert x t)) (height (local.insert x t))", "case Bal"], ["proof (state)\nthis:\n  ins (size t) 0 x t = Bal x2_\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins (size t) 0 x t = Bal x2 \\<Longrightarrow>\n       bal_i (size (local.insert x t)) (height (local.insert x t))\n 2. \\<And>x3.\n       ins (size t) 0 x t = Unbal x3 \\<Longrightarrow>\n       bal_i (size (local.insert x t)) (height (local.insert x t))", "thus ?thesis"], ["proof (prove)\nusing this:\n  ins (size t) 0 x t = Bal x2_\n\ngoal (1 subgoal):\n 1. bal_i (size (local.insert x t)) (height (local.insert x t))", "using ins_bal_i_Bal[OF Bal] assms ins_size"], ["proof (prove)\nusing this:\n  ins (size t) 0 x t = Bal x2_\n  bal_i (size t) (height t + 0) \\<Longrightarrow>\n  bal_i (size t + 1) (height x2_ + 0)\n  bal_i (size t) (height t)\n  ins ?n ?d ?x ?t = Bal ?t' \\<Longrightarrow> size ?t' = size ?t + 1\n  ins ?n ?d ?x ?t = Unbal ?t' \\<Longrightarrow> size ?t' = size ?t + 1\n\ngoal (1 subgoal):\n 1. bal_i (size (local.insert x t)) (height (local.insert x t))", "by(simp add: size1_size)"], ["proof (state)\nthis:\n  bal_i (size (local.insert x t)) (height (local.insert x t))\n\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins (size t) 0 x t = Unbal x3 \\<Longrightarrow>\n       bal_i (size (local.insert x t)) (height (local.insert x t))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins (size t) 0 x t = Unbal x3 \\<Longrightarrow>\n       bal_i (size (local.insert x t)) (height (local.insert x t))", "case (Unbal t')"], ["proof (state)\nthis:\n  ins (size t) 0 x t = Unbal t'\n\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins (size t) 0 x t = Unbal x3 \\<Longrightarrow>\n       bal_i (size (local.insert x t)) (height (local.insert x t))", "hence False"], ["proof (prove)\nusing this:\n  ins (size t) 0 x t = Unbal t'\n\ngoal (1 subgoal):\n 1. False", "using ins0_neq_Unbal"], ["proof (prove)\nusing this:\n  ins (size t) 0 x t = Unbal t'\n  size ?t \\<le> ?n \\<Longrightarrow> ins ?n 0 ?a ?t \\<noteq> Unbal ?t'\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins (size t) 0 x t = Unbal x3 \\<Longrightarrow>\n       bal_i (size (local.insert x t)) (height (local.insert x t))", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. bal_i (size (local.insert x t)) (height (local.insert x t))", ".."], ["proof (state)\nthis:\n  bal_i (size (local.insert x t)) (height (local.insert x t))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* RBTi1 *)"], ["", "text \\<open>This is just a test that (a simplified version of) the intended\ninterpretation works (so far):\\<close>"], ["", "interpretation Test: RBTi1 \"\\<lambda>n h. h \\<le> log 2 (real(n + 1)) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RBTi1 TYPE('a) (\\<lambda>x xa. real xa \\<le> log 2 (real (x + 1)) + 1)", "proof (standard, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t.\n       real (height (balance_tree t)) \\<le> log 2 (real (size t + 1)) + 1\n 2. \\<And>n h n' h'.\n       \\<lbrakk>real h \\<le> log 2 (real (n + 1)) + 1; n \\<le> n';\n        h' \\<le> h\\<rbrakk>\n       \\<Longrightarrow> real h' \\<le> log 2 (real (n' + 1)) + 1", "case (1 t)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>t.\n       real (height (balance_tree t)) \\<le> log 2 (real (size t + 1)) + 1\n 2. \\<And>n h n' h'.\n       \\<lbrakk>real h \\<le> log 2 (real (n + 1)) + 1; n \\<le> n';\n        h' \\<le> h\\<rbrakk>\n       \\<Longrightarrow> real h' \\<le> log 2 (real (n' + 1)) + 1", "have *: \"log 2 (1 + real(size t)) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> log 2 (1 + real (size t))", "by (simp)"], ["proof (state)\nthis:\n  0 \\<le> log 2 (1 + real (size t))\n\ngoal (2 subgoals):\n 1. \\<And>t.\n       real (height (balance_tree t)) \\<le> log 2 (real (size t + 1)) + 1\n 2. \\<And>n h n' h'.\n       \\<lbrakk>real h \\<le> log 2 (real (n + 1)) + 1; n \\<le> n';\n        h' \\<le> h\\<rbrakk>\n       \\<Longrightarrow> real h' \\<le> log 2 (real (n' + 1)) + 1", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (height (balance_tree t)) \\<le> log 2 (real (size t + 1)) + 1", "apply(simp add: height_balance_tree)"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (nat \\<lceil>log 2 (1 + real (size t))\\<rceil>)\n    \\<le> log 2 (1 + real (size t)) + 1", "using *"], ["proof (prove)\nusing this:\n  0 \\<le> log 2 (1 + real (size t))\n\ngoal (1 subgoal):\n 1. real (nat \\<lceil>log 2 (1 + real (size t))\\<rceil>)\n    \\<le> log 2 (1 + real (size t)) + 1", "by linarith"], ["proof (state)\nthis:\n  real (height (balance_tree t)) \\<le> log 2 (real (size t + 1)) + 1\n\ngoal (1 subgoal):\n 1. \\<And>n h n' h'.\n       \\<lbrakk>real h \\<le> log 2 (real (n + 1)) + 1; n \\<le> n';\n        h' \\<le> h\\<rbrakk>\n       \\<Longrightarrow> real h' \\<le> log 2 (real (n' + 1)) + 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n h n' h'.\n       \\<lbrakk>real h \\<le> log 2 (real (n + 1)) + 1; n \\<le> n';\n        h' \\<le> h\\<rbrakk>\n       \\<Longrightarrow> real h' \\<le> log 2 (real (n' + 1)) + 1", "case (2 n h n' h')"], ["proof (state)\nthis:\n  real h \\<le> log 2 (real (n + 1)) + 1\n  n \\<le> n'\n  h' \\<le> h\n\ngoal (1 subgoal):\n 1. \\<And>n h n' h'.\n       \\<lbrakk>real h \\<le> log 2 (real (n + 1)) + 1; n \\<le> n';\n        h' \\<le> h\\<rbrakk>\n       \\<Longrightarrow> real h' \\<le> log 2 (real (n' + 1)) + 1", "have \"real h' \\<le> real h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real h' \\<le> real h", "by(simp add: 2)"], ["proof (state)\nthis:\n  real h' \\<le> real h\n\ngoal (1 subgoal):\n 1. \\<And>n h n' h'.\n       \\<lbrakk>real h \\<le> log 2 (real (n + 1)) + 1; n \\<le> n';\n        h' \\<le> h\\<rbrakk>\n       \\<Longrightarrow> real h' \\<le> log 2 (real (n' + 1)) + 1", "also"], ["proof (state)\nthis:\n  real h' \\<le> real h\n\ngoal (1 subgoal):\n 1. \\<And>n h n' h'.\n       \\<lbrakk>real h \\<le> log 2 (real (n + 1)) + 1; n \\<le> n';\n        h' \\<le> h\\<rbrakk>\n       \\<Longrightarrow> real h' \\<le> log 2 (real (n' + 1)) + 1", "have \"\\<dots> \\<le> log 2 (n+1) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real h \\<le> log 2 (real (n + 1)) + 1", "by(rule 2)"], ["proof (state)\nthis:\n  real h \\<le> log 2 (real (n + 1)) + 1\n\ngoal (1 subgoal):\n 1. \\<And>n h n' h'.\n       \\<lbrakk>real h \\<le> log 2 (real (n + 1)) + 1; n \\<le> n';\n        h' \\<le> h\\<rbrakk>\n       \\<Longrightarrow> real h' \\<le> log 2 (real (n' + 1)) + 1", "also"], ["proof (state)\nthis:\n  real h \\<le> log 2 (real (n + 1)) + 1\n\ngoal (1 subgoal):\n 1. \\<And>n h n' h'.\n       \\<lbrakk>real h \\<le> log 2 (real (n + 1)) + 1; n \\<le> n';\n        h' \\<le> h\\<rbrakk>\n       \\<Longrightarrow> real h' \\<le> log 2 (real (n' + 1)) + 1", "have \"\\<dots> \\<le> log 2 (n'+1) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. log 2 (real (n + 1)) + 1 \\<le> log 2 (real (n' + 1)) + 1", "using \"2\"(2,3)"], ["proof (prove)\nusing this:\n  n \\<le> n'\n  h' \\<le> h\n\ngoal (1 subgoal):\n 1. log 2 (real (n + 1)) + 1 \\<le> log 2 (real (n' + 1)) + 1", "by(simp)"], ["proof (state)\nthis:\n  log 2 (real (n + 1)) + 1 \\<le> log 2 (real (n' + 1)) + 1\n\ngoal (1 subgoal):\n 1. \\<And>n h n' h'.\n       \\<lbrakk>real h \\<le> log 2 (real (n + 1)) + 1; n \\<le> n';\n        h' \\<le> h\\<rbrakk>\n       \\<Longrightarrow> real h' \\<le> log 2 (real (n' + 1)) + 1", "finally"], ["proof (chain)\npicking this:\n  real h' \\<le> log 2 (real (n' + 1)) + 1", "show ?case"], ["proof (prove)\nusing this:\n  real h' \\<le> log 2 (real (n' + 1)) + 1\n\ngoal (1 subgoal):\n 1. real h' \\<le> log 2 (real (n' + 1)) + 1", "."], ["proof (state)\nthis:\n  real h' \\<le> log 2 (real (n' + 1)) + 1\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Efficient Implementation (insert only)\""], ["", "fun imbal :: \"'a tree \\<Rightarrow> nat\" where\n\"imbal Leaf = 0\" |\n\"imbal (Node l _ r) = nat(abs(int(size l) - int(size r))) - 1\""], ["", "declare imbal.simps [simp del]"], ["", "lemma imbal0_if_wbalanced: \"wbalanced t \\<Longrightarrow> imbal t = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wbalanced t \\<Longrightarrow> imbal t = 0", "by (cases t) (auto simp add: imbal.simps)"], ["", "text \\<open>The degree of imbalance allowed:\nhow far from the perfect balance may the tree degenerate.\\<close>"], ["", "axiomatization c :: real where\nc1: \"c > 1\""], ["", "definition bal_log :: \"'a tree \\<Rightarrow> bool\" where\n\"bal_log t = (height t \\<le> ceiling(c * log 2 (size1 t)))\""], ["", "fun hchild :: \"'a tree \\<Rightarrow> 'a tree\" where\n\"hchild (Node l _ r) = (if height l \\<le> height r then r else l)\""], ["", "lemma size1_imbal:\n  assumes \"\\<not> bal_log t\" and \"bal_log (hchild t)\" and \"t \\<noteq> Leaf\"\n  shows \"imbal t > (2 powr (1 - 1/c) - 1) * size1 (t) - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 powr (1 - 1 / c) - 1) * real (size1 t) - 1 < real (imbal t)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (2 powr (1 - 1 / c) - 1) * real (size1 t) - 1 < real (imbal t)", "obtain l x r where t: \"t = Node l x r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l x r.\n        t = \\<langle>l, x, r\\<rangle> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<open>t \\<noteq> Leaf\\<close>"], ["proof (prove)\nusing this:\n  t \\<noteq> \\<langle>\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>l x r.\n        t = \\<langle>l, x, r\\<rangle> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(auto simp: neq_Leaf_iff)"], ["proof (state)\nthis:\n  t = \\<langle>l, x, r\\<rangle>\n\ngoal (1 subgoal):\n 1. (2 powr (1 - 1 / c) - 1) * real (size1 t) - 1 < real (imbal t)", "let ?sh = \"hchild t\""], ["proof (state)\ngoal (1 subgoal):\n 1. (2 powr (1 - 1 / c) - 1) * real (size1 t) - 1 < real (imbal t)", "have *: \"c * log 2 (size1 ?sh) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> c * log 2 (real (size1 (hchild t)))", "using c1"], ["proof (prove)\nusing this:\n  1 < c\n\ngoal (1 subgoal):\n 1. 0 \\<le> c * log 2 (real (size1 (hchild t)))", "apply(simp add: zero_le_mult_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < c \\<Longrightarrow> 1 \\<le> real (size1 (hchild t))", "using size1_ge0[of ?sh]"], ["proof (prove)\nusing this:\n  0 < size1 (hchild t)\n\ngoal (1 subgoal):\n 1. 1 < c \\<Longrightarrow> 1 \\<le> real (size1 (hchild t))", "by linarith"], ["proof (state)\nthis:\n  0 \\<le> c * log 2 (real (size1 (hchild t)))\n\ngoal (1 subgoal):\n 1. (2 powr (1 - 1 / c) - 1) * real (size1 t) - 1 < real (imbal t)", "have \"(2 powr (1 - 1/c) - 1) * size1 t - 1\n    = 2 powr (1 - 1/c) * size1 t - size1 t - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 powr (1 - 1 / c) - 1) * real (size1 t) - 1 =\n    2 powr (1 - 1 / c) * real (size1 t) - real (size1 t) - 1", "by (simp add: ring_distribs)"], ["proof (state)\nthis:\n  (2 powr (1 - 1 / c) - 1) * real (size1 t) - 1 =\n  2 powr (1 - 1 / c) * real (size1 t) - real (size1 t) - 1\n\ngoal (1 subgoal):\n 1. (2 powr (1 - 1 / c) - 1) * real (size1 t) - 1 < real (imbal t)", "also"], ["proof (state)\nthis:\n  (2 powr (1 - 1 / c) - 1) * real (size1 t) - 1 =\n  2 powr (1 - 1 / c) * real (size1 t) - real (size1 t) - 1\n\ngoal (1 subgoal):\n 1. (2 powr (1 - 1 / c) - 1) * real (size1 t) - 1 < real (imbal t)", "have \"\\<dots> = 2 * (2 powr (- 1/c) * size1 t) - size1 t - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 powr (1 - 1 / c) * real (size1 t) - real (size1 t) - 1 =\n    2 * (2 powr (- 1 / c) * real (size1 t)) - real (size1 t) - 1", "using c1"], ["proof (prove)\nusing this:\n  1 < c\n\ngoal (1 subgoal):\n 1. 2 powr (1 - 1 / c) * real (size1 t) - real (size1 t) - 1 =\n    2 * (2 powr (- 1 / c) * real (size1 t)) - real (size1 t) - 1", "by(simp add: powr_minus powr_add[symmetric] field_simps)"], ["proof (state)\nthis:\n  2 powr (1 - 1 / c) * real (size1 t) - real (size1 t) - 1 =\n  2 * (2 powr (- 1 / c) * real (size1 t)) - real (size1 t) - 1\n\ngoal (1 subgoal):\n 1. (2 powr (1 - 1 / c) - 1) * real (size1 t) - 1 < real (imbal t)", "also"], ["proof (state)\nthis:\n  2 powr (1 - 1 / c) * real (size1 t) - real (size1 t) - 1 =\n  2 * (2 powr (- 1 / c) * real (size1 t)) - real (size1 t) - 1\n\ngoal (1 subgoal):\n 1. (2 powr (1 - 1 / c) - 1) * real (size1 t) - 1 < real (imbal t)", "have \"2 powr (- 1/c) * size1 t < size1 ?sh\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 powr (- 1 / c) * real (size1 t) < real (size1 (hchild t))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 powr (- 1 / c) * real (size1 t) < real (size1 (hchild t))", "have \"ceiling(c * log 2 (size1 t)) < ceiling (c * log 2 (size1 ?sh)) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lceil>c * log 2 (real (size1 t))\\<rceil>\n    < \\<lceil>c * log 2 (real (size1 (hchild t)))\\<rceil> + 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lceil>c * log 2 (real (size1 t))\\<rceil>\n    < \\<lceil>c * log 2 (real (size1 (hchild t)))\\<rceil> + 1", "have \"ceiling(c * log 2 (size1 t)) < height t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lceil>c * log 2 (real (size1 t))\\<rceil> < int (height t)", "using assms(1)"], ["proof (prove)\nusing this:\n  \\<not> bal_log t\n\ngoal (1 subgoal):\n 1. \\<lceil>c * log 2 (real (size1 t))\\<rceil> < int (height t)", "by (simp add: bal_log_def)"], ["proof (state)\nthis:\n  \\<lceil>c * log 2 (real (size1 t))\\<rceil> < int (height t)\n\ngoal (1 subgoal):\n 1. \\<lceil>c * log 2 (real (size1 t))\\<rceil>\n    < \\<lceil>c * log 2 (real (size1 (hchild t)))\\<rceil> + 1", "also"], ["proof (state)\nthis:\n  \\<lceil>c * log 2 (real (size1 t))\\<rceil> < int (height t)\n\ngoal (1 subgoal):\n 1. \\<lceil>c * log 2 (real (size1 t))\\<rceil>\n    < \\<lceil>c * log 2 (real (size1 (hchild t)))\\<rceil> + 1", "have \"\\<dots> = height(?sh) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int (height t) = int (height (hchild t) + 1)", "by(simp add: t max_def)"], ["proof (state)\nthis:\n  int (height t) = int (height (hchild t) + 1)\n\ngoal (1 subgoal):\n 1. \\<lceil>c * log 2 (real (size1 t))\\<rceil>\n    < \\<lceil>c * log 2 (real (size1 (hchild t)))\\<rceil> + 1", "finally"], ["proof (chain)\npicking this:\n  \\<lceil>c * log 2 (real (size1 t))\\<rceil> < int (height (hchild t) + 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lceil>c * log 2 (real (size1 t))\\<rceil> < int (height (hchild t) + 1)\n\ngoal (1 subgoal):\n 1. \\<lceil>c * log 2 (real (size1 t))\\<rceil>\n    < \\<lceil>c * log 2 (real (size1 (hchild t)))\\<rceil> + 1", "using assms(2)"], ["proof (prove)\nusing this:\n  \\<lceil>c * log 2 (real (size1 t))\\<rceil> < int (height (hchild t) + 1)\n  bal_log (hchild t)\n\ngoal (1 subgoal):\n 1. \\<lceil>c * log 2 (real (size1 t))\\<rceil>\n    < \\<lceil>c * log 2 (real (size1 (hchild t)))\\<rceil> + 1", "unfolding bal_log_def"], ["proof (prove)\nusing this:\n  \\<lceil>c * log 2 (real (size1 t))\\<rceil> < int (height (hchild t) + 1)\n  int (height (hchild t))\n  \\<le> \\<lceil>c * log 2 (real (size1 (hchild t)))\\<rceil>\n\ngoal (1 subgoal):\n 1. \\<lceil>c * log 2 (real (size1 t))\\<rceil>\n    < \\<lceil>c * log 2 (real (size1 (hchild t)))\\<rceil> + 1", "by linarith"], ["proof (state)\nthis:\n  \\<lceil>c * log 2 (real (size1 t))\\<rceil>\n  < \\<lceil>c * log 2 (real (size1 (hchild t)))\\<rceil> + 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lceil>c * log 2 (real (size1 t))\\<rceil>\n  < \\<lceil>c * log 2 (real (size1 (hchild t)))\\<rceil> + 1\n\ngoal (1 subgoal):\n 1. 2 powr (- 1 / c) * real (size1 t) < real (size1 (hchild t))", "hence \"c * log 2 (size1 t) < c * log 2 (size1 ?sh) + 1\""], ["proof (prove)\nusing this:\n  \\<lceil>c * log 2 (real (size1 t))\\<rceil>\n  < \\<lceil>c * log 2 (real (size1 (hchild t)))\\<rceil> + 1\n\ngoal (1 subgoal):\n 1. c * log 2 (real (size1 t)) < c * log 2 (real (size1 (hchild t))) + 1", "using *"], ["proof (prove)\nusing this:\n  \\<lceil>c * log 2 (real (size1 t))\\<rceil>\n  < \\<lceil>c * log 2 (real (size1 (hchild t)))\\<rceil> + 1\n  0 \\<le> c * log 2 (real (size1 (hchild t)))\n\ngoal (1 subgoal):\n 1. c * log 2 (real (size1 t)) < c * log 2 (real (size1 (hchild t))) + 1", "by linarith"], ["proof (state)\nthis:\n  c * log 2 (real (size1 t)) < c * log 2 (real (size1 (hchild t))) + 1\n\ngoal (1 subgoal):\n 1. 2 powr (- 1 / c) * real (size1 t) < real (size1 (hchild t))", "hence \"log 2 (size1 t) - 1/c < log 2 (size1 ?sh)\""], ["proof (prove)\nusing this:\n  c * log 2 (real (size1 t)) < c * log 2 (real (size1 (hchild t))) + 1\n\ngoal (1 subgoal):\n 1. log 2 (real (size1 t)) - 1 / c < log 2 (real (size1 (hchild t)))", "using c1"], ["proof (prove)\nusing this:\n  c * log 2 (real (size1 t)) < c * log 2 (real (size1 (hchild t))) + 1\n  1 < c\n\ngoal (1 subgoal):\n 1. log 2 (real (size1 t)) - 1 / c < log 2 (real (size1 (hchild t)))", "by(simp add: field_simps)"], ["proof (state)\nthis:\n  log 2 (real (size1 t)) - 1 / c < log 2 (real (size1 (hchild t)))\n\ngoal (1 subgoal):\n 1. 2 powr (- 1 / c) * real (size1 t) < real (size1 (hchild t))", "from powr_less_mono[OF this, of 2]"], ["proof (chain)\npicking this:\n  1 < 2 \\<Longrightarrow>\n  2 powr (log 2 (real (size1 t)) - 1 / c)\n  < 2 powr log 2 (real (size1 (hchild t)))", "show ?thesis"], ["proof (prove)\nusing this:\n  1 < 2 \\<Longrightarrow>\n  2 powr (log 2 (real (size1 t)) - 1 / c)\n  < 2 powr log 2 (real (size1 (hchild t)))\n\ngoal (1 subgoal):\n 1. 2 powr (- 1 / c) * real (size1 t) < real (size1 (hchild t))", "by (simp add: powr_diff powr_minus field_simps)"], ["proof (state)\nthis:\n  2 powr (- 1 / c) * real (size1 t) < real (size1 (hchild t))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 powr (- 1 / c) * real (size1 t) < real (size1 (hchild t))\n\ngoal (1 subgoal):\n 1. (2 powr (1 - 1 / c) - 1) * real (size1 t) - 1 < real (imbal t)", "also"], ["proof (state)\nthis:\n  2 powr (- 1 / c) * real (size1 t) < real (size1 (hchild t))\n\ngoal (1 subgoal):\n 1. (2 powr (1 - 1 / c) - 1) * real (size1 t) - 1 < real (imbal t)", "have \"2 * real(size1 ?sh) - size1 t - 1\n           = real(size1 ?sh) - (real(size1 t) - size1 ?sh) - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * real (size1 (hchild t)) - real (size1 t) - 1 =\n    real (size1 (hchild t)) - (real (size1 t) - real (size1 (hchild t))) - 1", "by (simp add: assms(1))"], ["proof (state)\nthis:\n  2 * real (size1 (hchild t)) - real (size1 t) - 1 =\n  real (size1 (hchild t)) - (real (size1 t) - real (size1 (hchild t))) - 1\n\ngoal (1 subgoal):\n 1. (2 powr (1 - 1 / c) - 1) * real (size1 t) - 1 < real (imbal t)", "also"], ["proof (state)\nthis:\n  2 * real (size1 (hchild t)) - real (size1 t) - 1 =\n  real (size1 (hchild t)) - (real (size1 t) - real (size1 (hchild t))) - 1\n\ngoal (1 subgoal):\n 1. (2 powr (1 - 1 / c) - 1) * real (size1 t) - 1 < real (imbal t)", "have \"\\<dots> \\<le> imbal t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (size1 (hchild t)) - (real (size1 t) - real (size1 (hchild t))) - 1\n    \\<le> real (imbal t)", "by (auto simp add: t assms(1) imbal.simps size1_size)"], ["proof (state)\nthis:\n  real (size1 (hchild t)) - (real (size1 t) - real (size1 (hchild t))) - 1\n  \\<le> real (imbal t)\n\ngoal (1 subgoal):\n 1. (2 powr (1 - 1 / c) - 1) * real (size1 t) - 1 < real (imbal t)", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x < y \\<Longrightarrow>\n      2 * x - real (size1 t) - 1\n      < 2 * y - real (size1 t) - 1) \\<Longrightarrow>\n  (2 powr (1 - 1 / c) - 1) * real (size1 t) - 1 < real (imbal t)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x < y \\<Longrightarrow>\n      2 * x - real (size1 t) - 1\n      < 2 * y - real (size1 t) - 1) \\<Longrightarrow>\n  (2 powr (1 - 1 / c) - 1) * real (size1 t) - 1 < real (imbal t)\n\ngoal (1 subgoal):\n 1. (2 powr (1 - 1 / c) - 1) * real (size1 t) - 1 < real (imbal t)", "by simp"], ["proof (state)\nthis:\n  (2 powr (1 - 1 / c) - 1) * real (size1 t) - 1 < real (imbal t)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>The following key lemma shows that \\<open>imbal\\<close> is a suitable potential because\nit can pay for the linear-time cost of restructuring a tree\nthat is not balanced but whose higher son is.\\<close>"], ["", "lemma size1_imbal2:\n  assumes \"\\<not> bal_log t\" and \"bal_log (hchild t)\" and \"t \\<noteq> Leaf\"\n  shows \"size1 (t) < (2 powr (1/c) / (2 - 2 powr (1/c))) * (imbal t + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (size1 t)\n    < 2 powr (1 / c) / (2 - 2 powr (1 / c)) * real (imbal t + 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real (size1 t)\n    < 2 powr (1 / c) / (2 - 2 powr (1 / c)) * real (imbal t + 1)", "have *: \"2 powr (1 - 1 / c) - 1 > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 2 powr (1 - 1 / c) - 1", "using c1"], ["proof (prove)\nusing this:\n  1 < c\n\ngoal (1 subgoal):\n 1. 0 < 2 powr (1 - 1 / c) - 1", "by(simp add: field_simps log_less_iff[symmetric])"], ["proof (state)\nthis:\n  0 < 2 powr (1 - 1 / c) - 1\n\ngoal (1 subgoal):\n 1. real (size1 t)\n    < 2 powr (1 / c) / (2 - 2 powr (1 / c)) * real (imbal t + 1)", "have \"(2 powr (1 - 1 / c) - 1) * size1 t < imbal t + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 powr (1 - 1 / c) - 1) * real (size1 t) < real (imbal t + 1)", "using size1_imbal[OF assms]"], ["proof (prove)\nusing this:\n  (2 powr (1 - 1 / c) - 1) * real (size1 t) - 1 < real (imbal t)\n\ngoal (1 subgoal):\n 1. (2 powr (1 - 1 / c) - 1) * real (size1 t) < real (imbal t + 1)", "by linarith"], ["proof (state)\nthis:\n  (2 powr (1 - 1 / c) - 1) * real (size1 t) < real (imbal t + 1)\n\ngoal (1 subgoal):\n 1. real (size1 t)\n    < 2 powr (1 / c) / (2 - 2 powr (1 / c)) * real (imbal t + 1)", "hence \"size1 t < 1 / (2 powr (1 - 1 / c) - 1) * (imbal t + 1)\""], ["proof (prove)\nusing this:\n  (2 powr (1 - 1 / c) - 1) * real (size1 t) < real (imbal t + 1)\n\ngoal (1 subgoal):\n 1. real (size1 t) < 1 / (2 powr (1 - 1 / c) - 1) * real (imbal t + 1)", "using *"], ["proof (prove)\nusing this:\n  (2 powr (1 - 1 / c) - 1) * real (size1 t) < real (imbal t + 1)\n  0 < 2 powr (1 - 1 / c) - 1\n\ngoal (1 subgoal):\n 1. real (size1 t) < 1 / (2 powr (1 - 1 / c) - 1) * real (imbal t + 1)", "by(simp add: field_simps)"], ["proof (state)\nthis:\n  real (size1 t) < 1 / (2 powr (1 - 1 / c) - 1) * real (imbal t + 1)\n\ngoal (1 subgoal):\n 1. real (size1 t)\n    < 2 powr (1 / c) / (2 - 2 powr (1 / c)) * real (imbal t + 1)", "also"], ["proof (state)\nthis:\n  real (size1 t) < 1 / (2 powr (1 - 1 / c) - 1) * real (imbal t + 1)\n\ngoal (1 subgoal):\n 1. real (size1 t)\n    < 2 powr (1 / c) / (2 - 2 powr (1 / c)) * real (imbal t + 1)", "have \"1 / (2 powr (1 - 1 / c) - 1) = 2 powr (1/c) / (2 - 2 powr (1/c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / (2 powr (1 - 1 / c) - 1) = 2 powr (1 / c) / (2 - 2 powr (1 / c))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 / (2 powr (1 - 1 / c) - 1) = 2 powr (1 / c) / (2 - 2 powr (1 / c))", "have \"1 / (2 powr (1 - 1 / c) - 1) = 1 / (2 / 2 powr (1/c) - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / (2 powr (1 - 1 / c) - 1) = 1 / (2 / 2 powr (1 / c) - 1)", "by(simp add: powr_diff)"], ["proof (state)\nthis:\n  1 / (2 powr (1 - 1 / c) - 1) = 1 / (2 / 2 powr (1 / c) - 1)\n\ngoal (1 subgoal):\n 1. 1 / (2 powr (1 - 1 / c) - 1) = 2 powr (1 / c) / (2 - 2 powr (1 / c))", "also"], ["proof (state)\nthis:\n  1 / (2 powr (1 - 1 / c) - 1) = 1 / (2 / 2 powr (1 / c) - 1)\n\ngoal (1 subgoal):\n 1. 1 / (2 powr (1 - 1 / c) - 1) = 2 powr (1 / c) / (2 - 2 powr (1 / c))", "have \"\\<dots> = 2 powr (1/c) / (2 - 2 powr (1/c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / (2 / 2 powr (1 / c) - 1) = 2 powr (1 / c) / (2 - 2 powr (1 / c))", "by(simp add: field_simps)"], ["proof (state)\nthis:\n  1 / (2 / 2 powr (1 / c) - 1) = 2 powr (1 / c) / (2 - 2 powr (1 / c))\n\ngoal (1 subgoal):\n 1. 1 / (2 powr (1 - 1 / c) - 1) = 2 powr (1 / c) / (2 - 2 powr (1 / c))", "finally"], ["proof (chain)\npicking this:\n  1 / (2 powr (1 - 1 / c) - 1) = 2 powr (1 / c) / (2 - 2 powr (1 / c))", "show ?thesis"], ["proof (prove)\nusing this:\n  1 / (2 powr (1 - 1 / c) - 1) = 2 powr (1 / c) / (2 - 2 powr (1 / c))\n\ngoal (1 subgoal):\n 1. 1 / (2 powr (1 - 1 / c) - 1) = 2 powr (1 / c) / (2 - 2 powr (1 / c))", "."], ["proof (state)\nthis:\n  1 / (2 powr (1 - 1 / c) - 1) = 2 powr (1 / c) / (2 - 2 powr (1 / c))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  1 / (2 powr (1 - 1 / c) - 1) = 2 powr (1 / c) / (2 - 2 powr (1 / c))\n\ngoal (1 subgoal):\n 1. real (size1 t)\n    < 2 powr (1 / c) / (2 - 2 powr (1 / c)) * real (imbal t + 1)", "finally"], ["proof (chain)\npicking this:\n  real (size1 t)\n  < 2 powr (1 / c) / (2 - 2 powr (1 / c)) * real (imbal t + 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  real (size1 t)\n  < 2 powr (1 / c) / (2 - 2 powr (1 / c)) * real (imbal t + 1)\n\ngoal (1 subgoal):\n 1. real (size1 t)\n    < 2 powr (1 / c) / (2 - 2 powr (1 / c)) * real (imbal t + 1)", "."], ["proof (state)\nthis:\n  real (size1 t)\n  < 2 powr (1 / c) / (2 - 2 powr (1 / c)) * real (imbal t + 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "datatype 'a up2 = Same2 | Bal2 \"'a tree\" | Unbal2 \"'a tree\" nat nat"], ["", "type_synonym 'a rbt1 = \"'a tree * nat\""], ["", "text \\<open>An implementation where size and height are computed incrementally:\\<close>"], ["", "locale RBTi2 = RBTi1 +\nfixes e :: real\nassumes e0: \"e > 0\"\nassumes imbal_size:\n  \"\\<lbrakk> \\<not> bal_i (size t) (height t);\n     bal_i (size(hchild t)) (height(hchild t));\n     t \\<noteq> Leaf \\<rbrakk>\n    \\<Longrightarrow> e * (imbal t + 1) \\<ge> size1 (t::'a::linorder tree)\"\nbegin"], ["", "subsubsection \\<open>Functions\\<close>"], ["", "definition up2 :: \"'a \\<Rightarrow> 'a tree \\<Rightarrow> bool \\<Rightarrow> 'a up2 \\<Rightarrow> 'a up2\" where\n\"up2 x sib twist u = (case u of Same2 \\<Rightarrow> Same2 |\n   Bal2 t \\<Rightarrow> Bal2(node twist t x sib) |\n   Unbal2 t n1 h1 \\<Rightarrow>\n     let n2 = size sib; h2 = height sib;\n         t' = node twist t x sib;\n         n' = n1+n2+1; h' = max h1 h2 + 1\n     in if bal_i n' h' then Unbal2 t' n' h'\n        else Bal2(bal_tree n' t'))\""], ["", "declare up2_def[simp]"], ["", "text\\<open>@{const up2} traverses \\<open>sib\\<close> twice; unnecessarily, as it turns out: \\<close>"], ["", "definition up3_tm :: \"'a \\<Rightarrow> 'a tree \\<Rightarrow> bool \\<Rightarrow> 'a up2 \\<Rightarrow> 'a up2 tm\" where\n\"up3_tm x sib twist u =1 (case u of\n   Same2 \\<Rightarrow> return Same2 |\n   Bal2 t \\<Rightarrow> return (Bal2(node twist t x sib)) |\n   Unbal2 t n1 h1 \\<Rightarrow>\n     do { n2 \\<leftarrow> size_tree_tm sib;\n          let t' = node twist t x sib;\n              n' = n1+n2+1;\n              h' = h1 + 1\n          in if bal_i n' h' then return (Unbal2 t' n' h')\n             else do { t'' \\<leftarrow> bal_tree_tm n' t';\n                       return (Bal2 t'')}})\""], ["", "definition up3 :: \"'a \\<Rightarrow> 'a tree \\<Rightarrow> bool \\<Rightarrow> 'a up2 \\<Rightarrow> 'a up2\" where\n\"up3 a sib twist u = val (up3_tm a sib twist u)\""], ["", "lemma up3_def2[simp,code]:\n  \"up3 x sib twist u = (case u of\n  Same2 \\<Rightarrow> Same2 |\n  Bal2 t \\<Rightarrow> Bal2 (node twist t x sib) |\n  Unbal2 t n1 h1 \\<Rightarrow>\n     let n2 = size_tree sib; t' = node twist t x sib; n' = n1 + n2 + 1; h' = h1 + 1\n     in if bal_i n' h' then Unbal2 t' n' h'\n        else let t'' = bal_tree n' t' in Bal2 t'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. up3 x sib twist u =\n    (case u of Same2 \\<Rightarrow> Same2\n     | Bal2 t \\<Rightarrow> Bal2 (node twist t x sib)\n     | Unbal2 t n1 h1 \\<Rightarrow>\n         let n2 = Root_Balanced_Tree.size_tree sib; t' = node twist t x sib;\n             n' = n1 + n2 + 1; h' = h1 + 1\n         in if bal_i n' h' then Unbal2 t' n' h'\n            else Let (Root_Balanced_Tree.bal_tree n' t') Bal2)", "using val_cong[OF up3_tm_def]"], ["proof (prove)\nusing this:\n  Time_Monad.val (up3_tm ?x1 ?sib1 ?twist1 ?u1) =\n  Time_Monad.val\n   ((case ?u1 of Same2 \\<Rightarrow> return Same2\n     | Bal2 t \\<Rightarrow> return (Bal2 (node ?twist1 t ?x1 ?sib1))\n     | Unbal2 t n1 h1 \\<Rightarrow>\n         size_tree_tm ?sib1 \\<bind>\n         (\\<lambda>n2.\n             let t' = node ?twist1 t ?x1 ?sib1; n' = n1 + n2 + 1;\n                 h' = h1 + 1\n             in if bal_i n' h' then return (Unbal2 t' n' h')\n                else bal_tree_tm n' t' \\<bind>\n                     (\\<lambda>t''. return (Bal2 t'')))) \\<bind>\n    tick)\n\ngoal (1 subgoal):\n 1. up3 x sib twist u =\n    (case u of Same2 \\<Rightarrow> Same2\n     | Bal2 t \\<Rightarrow> Bal2 (node twist t x sib)\n     | Unbal2 t n1 h1 \\<Rightarrow>\n         let n2 = Root_Balanced_Tree.size_tree sib; t' = node twist t x sib;\n             n' = n1 + n2 + 1; h' = h1 + 1\n         in if bal_i n' h' then Unbal2 t' n' h'\n            else Let (Root_Balanced_Tree.bal_tree n' t') Bal2)", "by(simp only: up3_def size_tree_def bal_tree_def val_simps up2.case_distrib[of val])"], ["", "definition T_up3 :: \"'a \\<Rightarrow> 'a tree \\<Rightarrow> bool \\<Rightarrow> 'a up2 \\<Rightarrow> nat\" where\n\"T_up3 x sib twist u = time (up3_tm x sib twist u)\""], ["", "lemma T_up3_def2[simp]: \"T_up3 x sib twist u =\n (case u of Same2 \\<Rightarrow> 1 |\n   Bal2 t \\<Rightarrow> 1 |\n   Unbal2 t n1 h1 \\<Rightarrow>\n     let n2 = size sib; t' = node twist t x sib; h' = h1 + 1; n' = n1+n2+1\n     in 2 * size sib + 1 + (if bal_i n' h' then 1 else T_bal_tree n' t' + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T_up3 x sib twist u =\n    (case u of\n     Unbal2 t n1 h1 \\<Rightarrow>\n       let n2 = size sib; t' = node twist t x sib; h' = h1 + 1;\n           n' = n1 + n2 + 1\n       in 2 * size sib + 1 +\n          (if bal_i n' h' then 1 else T_bal_tree n' t' + 1)\n     | _ \\<Rightarrow> 1)", "by(simp add: T_up3_def up3_tm_def surj_TM[OF size_tree_def T_size_tree_def]\n    size_tree T_size_tree T_bal_tree_def tm_simps split: tm.split up2.split)"], ["", "fun ins2 :: \"nat \\<Rightarrow> nat \\<Rightarrow> 'a::linorder \\<Rightarrow> 'a tree \\<Rightarrow> 'a up2\" where\n\"ins2 n d x Leaf =\n  (if bal_i (n+1) (d+1) then Bal2 (Node Leaf x Leaf) else Unbal2 (Node Leaf x Leaf) 1 1)\" |\n\"ins2 n d x (Node l y r) =\n  (case cmp x y of\n     LT \\<Rightarrow> up2 y r False (ins2 n (d+1) x l) |\n     EQ \\<Rightarrow> Same2 |\n     GT \\<Rightarrow> up2 y l True (ins2 n (d+1) x r))\""], ["", "text\\<open>Definition of timed final insertion function:\\<close>"], ["", "fun ins3_tm :: \"nat \\<Rightarrow> nat \\<Rightarrow> 'a::linorder \\<Rightarrow> 'a tree \\<Rightarrow> 'a up2 tm\" where\n\"ins3_tm n d x Leaf =1\n   (if bal_i (n+1) (d+1) then return(Bal2 (Node Leaf x Leaf))\n   else return(Unbal2 (Node Leaf x Leaf) 1 1))\" |\n\"ins3_tm n d x (Node l y r) =1\n  (case cmp x y of\n     LT \\<Rightarrow> do {l' \\<leftarrow> ins3_tm n (d+1) x l; up3_tm y r False l'} |\n     EQ \\<Rightarrow> return Same2 |\n     GT \\<Rightarrow> do {r' \\<leftarrow> ins3_tm n (d+1) x r; up3_tm y l True r'})\""], ["", "definition ins3 :: \"nat \\<Rightarrow> nat \\<Rightarrow> 'a::linorder \\<Rightarrow> 'a tree \\<Rightarrow> 'a up2\" where\n\"ins3 n d x t = val(ins3_tm n d x t)\""], ["", "lemma ins3_Leaf[simp,code]:\n  \"ins3 n d x Leaf =\n  (if bal_i (n+1) (d+1) then Bal2 (Node Leaf x Leaf) else Unbal2 (Node Leaf x Leaf) 1 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ins3 n d x \\<langle>\\<rangle> =\n    (if bal_i (n + 1) (d + 1)\n     then Bal2 \\<langle>\\<langle>\\<rangle>, x, \\<langle>\\<rangle>\\<rangle>\n     else Unbal2 \\<langle>\\<langle>\\<rangle>, x, \\<langle>\\<rangle>\\<rangle>\n           1 1)", "using val_cong[OF ins3_tm.simps(1)]"], ["proof (prove)\nusing this:\n  Time_Monad.val (ins3_tm ?n1 ?d1 ?x1 \\<langle>\\<rangle>) =\n  Time_Monad.val\n   ((if bal_i (?n1 + 1) (?d1 + 1)\n     then return\n           (Bal2\n             \\<langle>\\<langle>\\<rangle>, ?x1, \\<langle>\\<rangle>\\<rangle>)\n     else return\n           (Unbal2\n             \\<langle>\\<langle>\\<rangle>, ?x1, \\<langle>\\<rangle>\\<rangle> 1\n             1)) \\<bind>\n    tick)\n\ngoal (1 subgoal):\n 1. ins3 n d x \\<langle>\\<rangle> =\n    (if bal_i (n + 1) (d + 1)\n     then Bal2 \\<langle>\\<langle>\\<rangle>, x, \\<langle>\\<rangle>\\<rangle>\n     else Unbal2 \\<langle>\\<langle>\\<rangle>, x, \\<langle>\\<rangle>\\<rangle>\n           1 1)", "by(simp only: ins3_def val_simps cmp_val.case_distrib[of val])"], ["", "lemma ins3_Node[simp,code]:\n  \"ins3 n d x (Node l y r) =\n  (case cmp x y of\n     LT \\<Rightarrow> let l' = ins3 n (d+1) x l in up3 y r False l' |\n     EQ \\<Rightarrow> Same2 |\n     GT \\<Rightarrow> let r' = ins3 n (d+1) x r in up3 y l True r')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ins3 n d x \\<langle>l, y, r\\<rangle> =\n    (case cmp x y of\n     LT \\<Rightarrow> Let (ins3 n (d + 1) x l) (up3 y r False)\n     | EQ \\<Rightarrow> Same2\n     | GT \\<Rightarrow> Let (ins3 n (d + 1) x r) (up3 y l True))", "using val_cong[OF ins3_tm.simps(2)]"], ["proof (prove)\nusing this:\n  Time_Monad.val (ins3_tm ?n1 ?d1 ?x1 \\<langle>?l1, ?y1, ?r1\\<rangle>) =\n  Time_Monad.val\n   ((case cmp ?x1 ?y1 of\n     LT \\<Rightarrow>\n       ins3_tm ?n1 (?d1 + 1) ?x1 ?l1 \\<bind> up3_tm ?y1 ?r1 False\n     | EQ \\<Rightarrow> return Same2\n     | GT \\<Rightarrow>\n         ins3_tm ?n1 (?d1 + 1) ?x1 ?r1 \\<bind> up3_tm ?y1 ?l1 True) \\<bind>\n    tick)\n\ngoal (1 subgoal):\n 1. ins3 n d x \\<langle>l, y, r\\<rangle> =\n    (case cmp x y of\n     LT \\<Rightarrow> Let (ins3 n (d + 1) x l) (up3 y r False)\n     | EQ \\<Rightarrow> Same2\n     | GT \\<Rightarrow> Let (ins3 n (d + 1) x r) (up3 y l True))", "by(simp only: ins3_def up3_def val_simps cmp_val.case_distrib[of val])"], ["", "definition T_ins3 :: \"nat \\<Rightarrow> nat \\<Rightarrow> 'a::linorder \\<Rightarrow> 'a tree \\<Rightarrow> nat\" where\n\"T_ins3 n d x t = time(ins3_tm n d x t)\""], ["", "lemma T_ins3_Leaf[simp]: \"T_ins3 n d x Leaf = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T_ins3 n d x \\<langle>\\<rangle> = 1", "by(simp add: tm_simps T_ins3_def)"], ["", "lemma T_ins3_Node[simp]: \"T_ins3 n d x (Node l y r) =\n  (case cmp x y of\n     LT \\<Rightarrow> T_ins3 n (d+1) x l + T_up3 y r False (ins3 n (d+1) x l) |\n     EQ \\<Rightarrow> 0 |\n     GT \\<Rightarrow> T_ins3 n (d+1) x r + T_up3 y l True (ins3 n (d+1) x r)) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T_ins3 n d x \\<langle>l, y, r\\<rangle> =\n    (case cmp x y of\n     LT \\<Rightarrow>\n       T_ins3 n (d + 1) x l + T_up3 y r False (ins3 n (d + 1) x l)\n     | EQ \\<Rightarrow> 0\n     | GT \\<Rightarrow>\n         T_ins3 n (d + 1) x r + T_up3 y l True (ins3 n (d + 1) x r)) +\n    1", "apply(subst T_ins3_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. time (ins3_tm n d x \\<langle>l, y, r\\<rangle>) =\n    (case cmp x y of\n     LT \\<Rightarrow>\n       T_ins3 n (d + 1) x l + T_up3 y r False (ins3 n (d + 1) x l)\n     | EQ \\<Rightarrow> 0\n     | GT \\<Rightarrow>\n         T_ins3 n (d + 1) x r + T_up3 y l True (ins3 n (d + 1) x r)) +\n    1", "apply(subst ins3_tm.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. time\n     ((case cmp x y of\n       LT \\<Rightarrow> ins3_tm n (d + 1) x l \\<bind> up3_tm y r False\n       | EQ \\<Rightarrow> return Same2\n       | GT \\<Rightarrow>\n           ins3_tm n (d + 1) x r \\<bind> up3_tm y l True) \\<bind>\n      tick) =\n    (case cmp x y of\n     LT \\<Rightarrow>\n       T_ins3 n (d + 1) x l + T_up3 y r False (ins3 n (d + 1) x l)\n     | EQ \\<Rightarrow> 0\n     | GT \\<Rightarrow>\n         T_ins3 n (d + 1) x r + T_up3 y l True (ins3 n (d + 1) x r)) +\n    1", "apply(auto simp add: tm_simps surj_TM[OF ins3_def T_ins3_def] surj_TM[OF up3_def T_up3_def]\n           simp del: T_up3_def2 split: tm.splits up2.split)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*FIXME simp del: T_up3_def2 T_ins3_Node[simp] *)"], ["", "fun insert2 :: \"'a::linorder \\<Rightarrow> 'a rbt1 \\<Rightarrow> 'a rbt1\" where\n\"insert2 x (t,n) =\n  (case ins2 n 0 x t of\n     Same2 \\<Rightarrow> (t,n) |\n     Bal2 t' \\<Rightarrow> (t',n+1))\""], ["", "(* Unbal unreachable *)"], ["", "fun insert3_tm :: \"'a::linorder \\<Rightarrow> 'a rbt1 \\<Rightarrow> 'a rbt1 tm\" where\n\"insert3_tm x (t,n) =1\n  (do { u \\<leftarrow> ins3_tm n 0 x t;\n        case u of\n          Same2 \\<Rightarrow> return (t,n) |\n          Bal2 t' \\<Rightarrow> return (t',n+1) |\n          Unbal2 _ _ _ \\<Rightarrow> return undefined })\""], ["", "(* Unbal unreachable *)"], ["", "definition insert3 :: \"'a::linorder \\<Rightarrow> 'a rbt1 \\<Rightarrow> 'a rbt1\" where\n\"insert3 a t = val (insert3_tm a t)\""], ["", "lemma insert3_def2[simp]: \"insert3 x (t,n) =\n  (let t' = ins3 n 0 x t in\n   case t' of\n     Same2 \\<Rightarrow> (t,n) |\n     Bal2 t' \\<Rightarrow> (t',n+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert3 x (t, n) =\n    (let t' = ins3 n 0 x t\n     in case t' of Same2 \\<Rightarrow> (t, n)\n        | Bal2 t' \\<Rightarrow> (t', n + 1))", "using val_cong[OF insert3_tm.simps(1)]"], ["proof (prove)\nusing this:\n  Time_Monad.val (insert3_tm ?x1 (?t1, ?n1)) =\n  Time_Monad.val\n   (ins3_tm ?n1 0 ?x1 ?t1 \\<bind>\n    case_up2 (return (?t1, ?n1)) (\\<lambda>t'. return (t', ?n1 + 1))\n     (\\<lambda>x xa xb. return undefined) \\<bind>\n    tick)\n\ngoal (1 subgoal):\n 1. insert3 x (t, n) =\n    (let t' = ins3 n 0 x t\n     in case t' of Same2 \\<Rightarrow> (t, n)\n        | Bal2 t' \\<Rightarrow> (t', n + 1))", "by(simp only: insert3_def ins3_def val_simps up2.case_distrib[of val])"], ["", "definition T_insert3 :: \"'a::linorder \\<Rightarrow> 'a rbt1 \\<Rightarrow> nat\" where\n\"T_insert3 a t = time (insert3_tm a t)\""], ["", "lemma T_insert3_def2: \"T_insert3 x (t,n) = T_ins3 n 0 x t + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T_insert3 x (t, n) = T_ins3 n 0 x t + 1", "by(simp add: T_insert3_def ins3_def T_ins3_def tm_simps split: tm.split up2.split)"], ["", "subsubsection \"Equivalence Proofs\""], ["", "lemma ins_ins2:\nshows \"ins2 n d x t = Same2 \\<Longrightarrow> ins n d x t = Same\"\nand \"ins2 n d x t = Bal2 t' \\<Longrightarrow> ins n d x t = Bal t'\"\nand \"ins2 n d x t = Unbal2 t' n' h'\n  \\<Longrightarrow> ins n d x t = Unbal t' \\<and> n' = size t' \\<and> h' = height t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ins2 n d x t = Same2 \\<Longrightarrow> ins n d x t = Same) &&&\n    (ins2 n d x t = Bal2 t' \\<Longrightarrow> ins n d x t = Bal t') &&&\n    (ins2 n d x t = Unbal2 t' n' h' \\<Longrightarrow>\n     ins n d x t = Unbal t' \\<and> n' = size t' \\<and> h' = height t')", "by(induction t arbitrary: d t' n' h')\n  (auto simp: size_height add.commute max.commute balance_tree_def bal_tree\n    split: if_splits up2.splits prod.splits)"], ["", "lemma ins2_ins:\nshows \"ins n d x t = Same \\<Longrightarrow> ins2 n d x t = Same2\"\nand \"ins n d x t = Bal t' \\<Longrightarrow> ins2 n d x t = Bal2 t'\"\nand \"ins n d x t = Unbal t'\n  \\<Longrightarrow> ins2 n d x t = Unbal2 t' (size t') (height t')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ins n d x t = Same \\<Longrightarrow> ins2 n d x t = Same2) &&&\n    (ins n d x t = Bal t' \\<Longrightarrow> ins2 n d x t = Bal2 t') &&&\n    (ins n d x t = Unbal t' \\<Longrightarrow>\n     ins2 n d x t = Unbal2 t' (size t') (height t'))", "by(induction t arbitrary: d t')\n  (auto simp: size_height add.commute max.commute balance_tree_def bal_tree\n    split: if_splits up.splits prod.splits)"], ["", "corollary ins2_iff_ins:\nshows \"ins2 n d x t = Same2 \\<longleftrightarrow> ins n d x t = Same\"\nand \"ins2 n d x t = Bal2 t' \\<longleftrightarrow> ins n d x t = Bal t'\"\nand \"ins2 n d x t = Unbal2 t' n' h' \\<longleftrightarrow>\n  ins n d x t = Unbal t' \\<and> n' = size t' \\<and> h' = height t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ins2 n d x t = Same2) = (ins n d x t = Same) &&&\n    (ins2 n d x t = Bal2 t') = (ins n d x t = Bal t') &&&\n    (ins2 n d x t = Unbal2 t' n' h') =\n    (ins n d x t = Unbal t' \\<and> n' = size t' \\<and> h' = height t')", "using ins2_ins(1) ins_ins2(1)"], ["proof (prove)\nusing this:\n  ins ?n ?d ?x ?t = Same \\<Longrightarrow> ins2 ?n ?d ?x ?t = Same2\n  ins2 ?n ?d ?x ?t = Same2 \\<Longrightarrow> ins ?n ?d ?x ?t = Same\n\ngoal (1 subgoal):\n 1. (ins2 n d x t = Same2) = (ins n d x t = Same) &&&\n    (ins2 n d x t = Bal2 t') = (ins n d x t = Bal t') &&&\n    (ins2 n d x t = Unbal2 t' n' h') =\n    (ins n d x t = Unbal t' \\<and> n' = size t' \\<and> h' = height t')", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. (ins2 n d x t = Bal2 t') = (ins n d x t = Bal t')\n 2. (ins2 n d x t = Unbal2 t' n' h') =\n    (ins n d x t = Unbal t' \\<and> n' = size t' \\<and> h' = height t')", "using ins2_ins(2) ins_ins2(2)"], ["proof (prove)\nusing this:\n  ins ?n ?d ?x ?t = Bal ?t' \\<Longrightarrow> ins2 ?n ?d ?x ?t = Bal2 ?t'\n  ins2 ?n ?d ?x ?t = Bal2 ?t' \\<Longrightarrow> ins ?n ?d ?x ?t = Bal ?t'\n\ngoal (2 subgoals):\n 1. (ins2 n d x t = Bal2 t') = (ins n d x t = Bal t')\n 2. (ins2 n d x t = Unbal2 t' n' h') =\n    (ins n d x t = Unbal t' \\<and> n' = size t' \\<and> h' = height t')", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. (ins2 n d x t = Unbal2 t' n' h') =\n    (ins n d x t = Unbal t' \\<and> n' = size t' \\<and> h' = height t')", "using ins2_ins(3) ins_ins2(3)"], ["proof (prove)\nusing this:\n  ins ?n ?d ?x ?t = Unbal ?t' \\<Longrightarrow>\n  ins2 ?n ?d ?x ?t = Unbal2 ?t' (size ?t') (height ?t')\n  ins2 ?n ?d ?x ?t = Unbal2 ?t' ?n' ?h' \\<Longrightarrow>\n  ins ?n ?d ?x ?t = Unbal ?t' \\<and> ?n' = size ?t' \\<and> ?h' = height ?t'\n\ngoal (1 subgoal):\n 1. (ins2 n d x t = Unbal2 t' n' h') =\n    (ins n d x t = Unbal t' \\<and> n' = size t' \\<and> h' = height t')", "by blast"], ["", "lemma ins3_ins2:\n  \"bal_i n (height t + d) \\<Longrightarrow> ins3 n d x t = ins2 n d x t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal_i n (height t + d) \\<Longrightarrow> ins3 n d x t = ins2 n d x t", "proof(induction t arbitrary: d)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d.\n       bal_i n (height \\<langle>\\<rangle> + d) \\<Longrightarrow>\n       ins3 n d x \\<langle>\\<rangle> = ins2 n d x \\<langle>\\<rangle>\n 2. \\<And>t1 x2 t2 d.\n       \\<lbrakk>\\<And>d.\n                   bal_i n (height t1 + d) \\<Longrightarrow>\n                   ins3 n d x t1 = ins2 n d x t1;\n        \\<And>d.\n           bal_i n (height t2 + d) \\<Longrightarrow>\n           ins3 n d x t2 = ins2 n d x t2;\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> ins3 n d x \\<langle>t1, x2, t2\\<rangle> =\n                         ins2 n d x \\<langle>t1, x2, t2\\<rangle>", "case Leaf"], ["proof (state)\nthis:\n  bal_i n (height \\<langle>\\<rangle> + d)\n\ngoal (2 subgoals):\n 1. \\<And>d.\n       bal_i n (height \\<langle>\\<rangle> + d) \\<Longrightarrow>\n       ins3 n d x \\<langle>\\<rangle> = ins2 n d x \\<langle>\\<rangle>\n 2. \\<And>t1 x2 t2 d.\n       \\<lbrakk>\\<And>d.\n                   bal_i n (height t1 + d) \\<Longrightarrow>\n                   ins3 n d x t1 = ins2 n d x t1;\n        \\<And>d.\n           bal_i n (height t2 + d) \\<Longrightarrow>\n           ins3 n d x t2 = ins2 n d x t2;\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> ins3 n d x \\<langle>t1, x2, t2\\<rangle> =\n                         ins2 n d x \\<langle>t1, x2, t2\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  bal_i n (height \\<langle>\\<rangle> + d)\n\ngoal (1 subgoal):\n 1. ins3 n d x \\<langle>\\<rangle> = ins2 n d x \\<langle>\\<rangle>", "by (auto)"], ["proof (state)\nthis:\n  ins3 n d x \\<langle>\\<rangle> = ins2 n d x \\<langle>\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d.\n       \\<lbrakk>\\<And>d.\n                   bal_i n (height t1 + d) \\<Longrightarrow>\n                   ins3 n d x t1 = ins2 n d x t1;\n        \\<And>d.\n           bal_i n (height t2 + d) \\<Longrightarrow>\n           ins3 n d x t2 = ins2 n d x t2;\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> ins3 n d x \\<langle>t1, x2, t2\\<rangle> =\n                         ins2 n d x \\<langle>t1, x2, t2\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d.\n       \\<lbrakk>\\<And>d.\n                   bal_i n (height t1 + d) \\<Longrightarrow>\n                   ins3 n d x t1 = ins2 n d x t1;\n        \\<And>d.\n           bal_i n (height t2 + d) \\<Longrightarrow>\n           ins3 n d x t2 = ins2 n d x t2;\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> ins3 n d x \\<langle>t1, x2, t2\\<rangle> =\n                         ins2 n d x \\<langle>t1, x2, t2\\<rangle>", "case (Node l y r)"], ["proof (state)\nthis:\n  bal_i n (height l + ?d) \\<Longrightarrow> ins3 n ?d x l = ins2 n ?d x l\n  bal_i n (height r + ?d) \\<Longrightarrow> ins3 n ?d x r = ins2 n ?d x r\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d.\n       \\<lbrakk>\\<And>d.\n                   bal_i n (height t1 + d) \\<Longrightarrow>\n                   ins3 n d x t1 = ins2 n d x t1;\n        \\<And>d.\n           bal_i n (height t2 + d) \\<Longrightarrow>\n           ins3 n d x t2 = ins2 n d x t2;\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> ins3 n d x \\<langle>t1, x2, t2\\<rangle> =\n                         ins2 n d x \\<langle>t1, x2, t2\\<rangle>", "consider (ls) \"x < y\" | (eq) \"x = y\" | (gr) \"x > y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y \\<Longrightarrow> thesis; x = y \\<Longrightarrow> thesis;\n     y < x \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by(metis less_linear)"], ["proof (state)\nthis:\n  \\<lbrakk>x < y \\<Longrightarrow> ?thesis; x = y \\<Longrightarrow> ?thesis;\n   y < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d.\n       \\<lbrakk>\\<And>d.\n                   bal_i n (height t1 + d) \\<Longrightarrow>\n                   ins3 n d x t1 = ins2 n d x t1;\n        \\<And>d.\n           bal_i n (height t2 + d) \\<Longrightarrow>\n           ins3 n d x t2 = ins2 n d x t2;\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> ins3 n d x \\<langle>t1, x2, t2\\<rangle> =\n                         ins2 n d x \\<langle>t1, x2, t2\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>x < y \\<Longrightarrow> ?thesis; x = y \\<Longrightarrow> ?thesis;\n   y < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>\n 2. x = y \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>\n 3. y < x \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "case ls"], ["proof (state)\nthis:\n  x < y\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>\n 2. x = y \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>\n 3. y < x \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "have *: \"bal_i n (height l + (d + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal_i n (height l + (d + 1))", "using Node.prems"], ["proof (prove)\nusing this:\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n\ngoal (1 subgoal):\n 1. bal_i n (height l + (d + 1))", "by (simp add: mono_bal_i')"], ["proof (state)\nthis:\n  bal_i n (height l + (d + 1))\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>\n 2. x = y \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>\n 3. y < x \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "note IH = Node.IH(1)[OF *]"], ["proof (state)\nthis:\n  ins3 n (d + 1) x l = ins2 n (d + 1) x l\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>\n 2. x = y \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>\n 3. y < x \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "proof (cases \"ins2 n (d+1) x l\")"], ["proof (state)\ngoal (3 subgoals):\n 1. ins2 n (d + 1) x l = Same2 \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>\n 2. \\<And>x2.\n       ins2 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>\n 3. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "case Same2"], ["proof (state)\nthis:\n  ins2 n (d + 1) x l = Same2\n\ngoal (3 subgoals):\n 1. ins2 n (d + 1) x l = Same2 \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>\n 2. \\<And>x2.\n       ins2 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>\n 3. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  ins2 n (d + 1) x l = Same2\n\ngoal (1 subgoal):\n 1. ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "using IH ls"], ["proof (prove)\nusing this:\n  ins2 n (d + 1) x l = Same2\n  ins3 n (d + 1) x l = ins2 n (d + 1) x l\n  x < y\n\ngoal (1 subgoal):\n 1. ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "by (simp)"], ["proof (state)\nthis:\n  ins3 n d x \\<langle>l, y, r\\<rangle> =\n  ins2 n d x \\<langle>l, y, r\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins2 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>\n 2. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins2 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>\n 2. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "case Bal2"], ["proof (state)\nthis:\n  ins2 n (d + 1) x l = Bal2 x2_\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins2 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>\n 2. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  ins2 n (d + 1) x l = Bal2 x2_\n\ngoal (1 subgoal):\n 1. ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "using IH ls"], ["proof (prove)\nusing this:\n  ins2 n (d + 1) x l = Bal2 x2_\n  ins3 n (d + 1) x l = ins2 n (d + 1) x l\n  x < y\n\ngoal (1 subgoal):\n 1. ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "by (simp)"], ["proof (state)\nthis:\n  ins3 n d x \\<langle>l, y, r\\<rangle> =\n  ins2 n d x \\<langle>l, y, r\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "case (Unbal2 l' nl' hl')"], ["proof (state)\nthis:\n  ins2 n (d + 1) x l = Unbal2 l' nl' hl'\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "let ?t' = \"Node l' y r\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "let ?h' = \"height ?t'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "let ?n' = \"size ?t'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "have ins: \"ins n (d+1) x l = Unbal l'\"\n        and \"nl' = size l' \\<and> hl' = height l'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ins n (d + 1) x l = Unbal l' &&& nl' = size l' \\<and> hl' = height l'", "using ins2_iff_ins(3)[THEN iffD1, OF Unbal2]"], ["proof (prove)\nusing this:\n  ins n (d + 1) x l = Unbal l' \\<and> nl' = size l' \\<and> hl' = height l'\n\ngoal (1 subgoal):\n 1. ins n (d + 1) x l = Unbal l' &&& nl' = size l' \\<and> hl' = height l'", "by auto"], ["proof (state)\nthis:\n  ins n (d + 1) x l = Unbal l'\n  nl' = size l' \\<and> hl' = height l'\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  ins n (d + 1) x l = Unbal l'\n  nl' = size l' \\<and> hl' = height l'\n\ngoal (1 subgoal):\n 1. ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "using ls IH Unbal2 height_Unbal_l[OF ins Node.prems(1)]"], ["proof (prove)\nusing this:\n  ins n (d + 1) x l = Unbal l'\n  nl' = size l' \\<and> hl' = height l'\n  x < y\n  ins3 n (d + 1) x l = ins2 n (d + 1) x l\n  ins2 n (d + 1) x l = Unbal2 l' nl' hl'\n  height r < height l'\n\ngoal (1 subgoal):\n 1. ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "by(auto simp add: size_height mono_bal_i size_tree)"], ["proof (state)\nthis:\n  ins3 n d x \\<langle>l, y, r\\<rangle> =\n  ins2 n d x \\<langle>l, y, r\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ins3 n d x \\<langle>l, y, r\\<rangle> =\n  ins2 n d x \\<langle>l, y, r\\<rangle>\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>\n 2. y < x \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>\n 2. y < x \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "case eq"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>\n 2. y < x \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "using Node.prems"], ["proof (prove)\nusing this:\n  x = y\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n\ngoal (1 subgoal):\n 1. ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "by(simp)"], ["proof (state)\nthis:\n  ins3 n d x \\<langle>l, y, r\\<rangle> =\n  ins2 n d x \\<langle>l, y, r\\<rangle>\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "case gr"], ["proof (state)\nthis:\n  y < x\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "have *: \"bal_i n (height r + (d + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal_i n (height r + (d + 1))", "using Node.prems"], ["proof (prove)\nusing this:\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n\ngoal (1 subgoal):\n 1. bal_i n (height r + (d + 1))", "by (simp add: mono_bal_i')"], ["proof (state)\nthis:\n  bal_i n (height r + (d + 1))\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "note IH = Node.IH(2)[OF *]"], ["proof (state)\nthis:\n  ins3 n (d + 1) x r = ins2 n (d + 1) x r\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "proof (cases \"ins2 n (d+1) x r\")"], ["proof (state)\ngoal (3 subgoals):\n 1. ins2 n (d + 1) x r = Same2 \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>\n 2. \\<And>x2.\n       ins2 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>\n 3. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "case Same2"], ["proof (state)\nthis:\n  ins2 n (d + 1) x r = Same2\n\ngoal (3 subgoals):\n 1. ins2 n (d + 1) x r = Same2 \\<Longrightarrow>\n    ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>\n 2. \\<And>x2.\n       ins2 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>\n 3. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  ins2 n (d + 1) x r = Same2\n\ngoal (1 subgoal):\n 1. ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "using IH gr"], ["proof (prove)\nusing this:\n  ins2 n (d + 1) x r = Same2\n  ins3 n (d + 1) x r = ins2 n (d + 1) x r\n  y < x\n\ngoal (1 subgoal):\n 1. ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "by (simp)"], ["proof (state)\nthis:\n  ins3 n d x \\<langle>l, y, r\\<rangle> =\n  ins2 n d x \\<langle>l, y, r\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins2 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>\n 2. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins2 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>\n 2. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "case Bal2"], ["proof (state)\nthis:\n  ins2 n (d + 1) x r = Bal2 x2_\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins2 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>\n 2. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  ins2 n (d + 1) x r = Bal2 x2_\n\ngoal (1 subgoal):\n 1. ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "using IH gr"], ["proof (prove)\nusing this:\n  ins2 n (d + 1) x r = Bal2 x2_\n  ins3 n (d + 1) x r = ins2 n (d + 1) x r\n  y < x\n\ngoal (1 subgoal):\n 1. ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "by (simp)"], ["proof (state)\nthis:\n  ins3 n d x \\<langle>l, y, r\\<rangle> =\n  ins2 n d x \\<langle>l, y, r\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "case (Unbal2 r' nr' hr')"], ["proof (state)\nthis:\n  ins2 n (d + 1) x r = Unbal2 r' nr' hr'\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "let ?t' = \"Node r' y r\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "let ?h' = \"height ?t'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "let ?n' = \"size ?t'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "have ins: \"ins n (d+1) x r = Unbal r'\"\n        and \"nr' = size r' \\<and> hr' = height r'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ins n (d + 1) x r = Unbal r' &&& nr' = size r' \\<and> hr' = height r'", "using ins2_iff_ins(3)[THEN iffD1, OF Unbal2]"], ["proof (prove)\nusing this:\n  ins n (d + 1) x r = Unbal r' \\<and> nr' = size r' \\<and> hr' = height r'\n\ngoal (1 subgoal):\n 1. ins n (d + 1) x r = Unbal r' &&& nr' = size r' \\<and> hr' = height r'", "by auto"], ["proof (state)\nthis:\n  ins n (d + 1) x r = Unbal r'\n  nr' = size r' \\<and> hr' = height r'\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins2 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       ins3 n d x \\<langle>l, y, r\\<rangle> =\n       ins2 n d x \\<langle>l, y, r\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  ins n (d + 1) x r = Unbal r'\n  nr' = size r' \\<and> hr' = height r'\n\ngoal (1 subgoal):\n 1. ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "using gr IH Unbal2 height_Unbal_r[OF ins Node.prems]"], ["proof (prove)\nusing this:\n  ins n (d + 1) x r = Unbal r'\n  nr' = size r' \\<and> hr' = height r'\n  y < x\n  ins3 n (d + 1) x r = ins2 n (d + 1) x r\n  ins2 n (d + 1) x r = Unbal2 r' nr' hr'\n  height l < height r'\n\ngoal (1 subgoal):\n 1. ins3 n d x \\<langle>l, y, r\\<rangle> =\n    ins2 n d x \\<langle>l, y, r\\<rangle>", "by(auto simp add: size_height mono_bal_i size_tree)"], ["proof (state)\nthis:\n  ins3 n d x \\<langle>l, y, r\\<rangle> =\n  ins2 n d x \\<langle>l, y, r\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ins3 n d x \\<langle>l, y, r\\<rangle> =\n  ins2 n d x \\<langle>l, y, r\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ins3 n d x \\<langle>l, y, r\\<rangle> =\n  ins2 n d x \\<langle>l, y, r\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma insert2_insert:\n  \"insert2 x (t,size t) = (t',n') \\<longleftrightarrow> t' = insert x t \\<and> n' = size t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (insert2 x (t, size t) = (t', n')) =\n    (t' = local.insert x t \\<and> n' = size t')", "using ins0_neq_Unbal"], ["proof (prove)\nusing this:\n  size ?t \\<le> ?n \\<Longrightarrow> ins ?n 0 ?a ?t \\<noteq> Unbal ?t'\n\ngoal (1 subgoal):\n 1. (insert2 x (t, size t) = (t', n')) =\n    (t' = local.insert x t \\<and> n' = size t')", "by(auto simp: ins2_iff_ins ins_size split: up2.split up.split)"], ["", "lemma insert3_insert2:\n  \"bal_i n (height t) \\<Longrightarrow> insert3 x (t,n) = insert2 x (t,n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal_i n (height t) \\<Longrightarrow> insert3 x (t, n) = insert2 x (t, n)", "by(simp add: ins3_ins2 split: up2.split)"], ["", "subsubsection \\<open>Amortized Complexity\\<close>"], ["", "fun \\<Phi> :: \"'a tree \\<Rightarrow> real\" where\n\"\\<Phi> Leaf = 0\" |\n\"\\<Phi> (Node l x r) = 6 * e * imbal (Node l x r) + \\<Phi> l + \\<Phi> r\""], ["", "lemma \\<Phi>_nn: \"\\<Phi> t \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> \\<Phi> t", "by(induction t) (use e0 in auto)"], ["", "lemma \\<Phi>_sum_mset: \"\\<Phi> t = (\\<Sum>s \\<in># subtrees_mset t. 6*e*imbal s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Phi> t = (\\<Sum>s\\<in>#subtrees_mset t. 6 * e * real (imbal s))", "proof(induction t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Phi> \\<langle>\\<rangle> =\n    (\\<Sum>s\\<in>#subtrees_mset \\<langle>\\<rangle>. 6 * e * real (imbal s))\n 2. \\<And>t1 x2 t2.\n       \\<lbrakk>\\<Phi> t1 =\n                (\\<Sum>s\\<in>#subtrees_mset t1. 6 * e * real (imbal s));\n        \\<Phi> t2 =\n        (\\<Sum>s\\<in>#subtrees_mset t2. 6 * e * real (imbal s))\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> \\<langle>t1, x2, t2\\<rangle> =\n                         (\\<Sum>s\\<in>#subtrees_mset\n  \\<langle>t1, x2, t2\\<rangle>. 6 * e * real (imbal s))", "case Leaf"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<Phi> \\<langle>\\<rangle> =\n    (\\<Sum>s\\<in>#subtrees_mset \\<langle>\\<rangle>. 6 * e * real (imbal s))\n 2. \\<And>t1 x2 t2.\n       \\<lbrakk>\\<Phi> t1 =\n                (\\<Sum>s\\<in>#subtrees_mset t1. 6 * e * real (imbal s));\n        \\<Phi> t2 =\n        (\\<Sum>s\\<in>#subtrees_mset t2. 6 * e * real (imbal s))\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> \\<langle>t1, x2, t2\\<rangle> =\n                         (\\<Sum>s\\<in>#subtrees_mset\n  \\<langle>t1, x2, t2\\<rangle>. 6 * e * real (imbal s))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Phi> \\<langle>\\<rangle> =\n    (\\<Sum>s\\<in>#subtrees_mset \\<langle>\\<rangle>. 6 * e * real (imbal s))", "by(simp add: imbal.simps)"], ["proof (state)\nthis:\n  \\<Phi> \\<langle>\\<rangle> =\n  (\\<Sum>s\\<in>#subtrees_mset \\<langle>\\<rangle>. 6 * e * real (imbal s))\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>\\<Phi> t1 =\n                (\\<Sum>s\\<in>#subtrees_mset t1. 6 * e * real (imbal s));\n        \\<Phi> t2 =\n        (\\<Sum>s\\<in>#subtrees_mset t2. 6 * e * real (imbal s))\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> \\<langle>t1, x2, t2\\<rangle> =\n                         (\\<Sum>s\\<in>#subtrees_mset\n  \\<langle>t1, x2, t2\\<rangle>. 6 * e * real (imbal s))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>\\<Phi> t1 =\n                (\\<Sum>s\\<in>#subtrees_mset t1. 6 * e * real (imbal s));\n        \\<Phi> t2 =\n        (\\<Sum>s\\<in>#subtrees_mset t2. 6 * e * real (imbal s))\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> \\<langle>t1, x2, t2\\<rangle> =\n                         (\\<Sum>s\\<in>#subtrees_mset\n  \\<langle>t1, x2, t2\\<rangle>. 6 * e * real (imbal s))", "case Node"], ["proof (state)\nthis:\n  \\<Phi> t1_ = (\\<Sum>s\\<in>#subtrees_mset t1_. 6 * e * real (imbal s))\n  \\<Phi> t2_ = (\\<Sum>s\\<in>#subtrees_mset t2_. 6 * e * real (imbal s))\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2.\n       \\<lbrakk>\\<Phi> t1 =\n                (\\<Sum>s\\<in>#subtrees_mset t1. 6 * e * real (imbal s));\n        \\<Phi> t2 =\n        (\\<Sum>s\\<in>#subtrees_mset t2. 6 * e * real (imbal s))\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> \\<langle>t1, x2, t2\\<rangle> =\n                         (\\<Sum>s\\<in>#subtrees_mset\n  \\<langle>t1, x2, t2\\<rangle>. 6 * e * real (imbal s))", "thus ?case"], ["proof (prove)\nusing this:\n  \\<Phi> t1_ = (\\<Sum>s\\<in>#subtrees_mset t1_. 6 * e * real (imbal s))\n  \\<Phi> t2_ = (\\<Sum>s\\<in>#subtrees_mset t2_. 6 * e * real (imbal s))\n\ngoal (1 subgoal):\n 1. \\<Phi> \\<langle>t1_, x2_, t2_\\<rangle> =\n    (\\<Sum>s\\<in>#subtrees_mset\n                   \\<langle>t1_, x2_, t2_\\<rangle>. 6 * e * real (imbal s))", "by(auto)"], ["proof (state)\nthis:\n  \\<Phi> \\<langle>t1_, x2_, t2_\\<rangle> =\n  (\\<Sum>s\\<in>#subtrees_mset\n                 \\<langle>t1_, x2_, t2_\\<rangle>. 6 * e * real (imbal s))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<Phi>_wbalanced: assumes \"wbalanced t\" shows \"\\<Phi> t = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Phi> t = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Phi> t = 0", "have \"\\<Phi> t = 6*e * (\\<Sum>s\\<in>#subtrees_mset t. real (imbal s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Phi> t = 6 * e * (\\<Sum>s\\<in>#subtrees_mset t. real (imbal s))", "by(simp add: \\<Phi>_sum_mset sum_mset_distrib_left)"], ["proof (state)\nthis:\n  \\<Phi> t = 6 * e * (\\<Sum>s\\<in>#subtrees_mset t. real (imbal s))\n\ngoal (1 subgoal):\n 1. \\<Phi> t = 0", "also"], ["proof (state)\nthis:\n  \\<Phi> t = 6 * e * (\\<Sum>s\\<in>#subtrees_mset t. real (imbal s))\n\ngoal (1 subgoal):\n 1. \\<Phi> t = 0", "have \"\\<dots> = (6*e) * real(\\<Sum>s\\<in>#subtrees_mset t. imbal s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 * e * (\\<Sum>s\\<in>#subtrees_mset t. real (imbal s)) =\n    6 * e * real (\\<Sum>\\<^sub># (image_mset imbal (subtrees_mset t)))", "using e0"], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. 6 * e * (\\<Sum>s\\<in>#subtrees_mset t. real (imbal s)) =\n    6 * e * real (\\<Sum>\\<^sub># (image_mset imbal (subtrees_mset t)))", "by (simp add: multiset.map_comp o_def)"], ["proof (state)\nthis:\n  6 * e * (\\<Sum>s\\<in>#subtrees_mset t. real (imbal s)) =\n  6 * e * real (\\<Sum>\\<^sub># (image_mset imbal (subtrees_mset t)))\n\ngoal (1 subgoal):\n 1. \\<Phi> t = 0", "also"], ["proof (state)\nthis:\n  6 * e * (\\<Sum>s\\<in>#subtrees_mset t. real (imbal s)) =\n  6 * e * real (\\<Sum>\\<^sub># (image_mset imbal (subtrees_mset t)))\n\ngoal (1 subgoal):\n 1. \\<Phi> t = 0", "have \"\\<dots> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 * e * real (\\<Sum>\\<^sub># (image_mset imbal (subtrees_mset t))) = 0", "using e0 assms"], ["proof (prove)\nusing this:\n  0 < e\n  wbalanced t\n\ngoal (1 subgoal):\n 1. 6 * e * real (\\<Sum>\\<^sub># (image_mset imbal (subtrees_mset t))) = 0", "by(simp add: imbal0_if_wbalanced wbalanced_subtrees del: of_nat_sum_mset)"], ["proof (state)\nthis:\n  6 * e * real (\\<Sum>\\<^sub># (image_mset imbal (subtrees_mset t))) = 0\n\ngoal (1 subgoal):\n 1. \\<Phi> t = 0", "finally"], ["proof (chain)\npicking this:\n  \\<Phi> t = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Phi> t = 0\n\ngoal (1 subgoal):\n 1. \\<Phi> t = 0", "."], ["proof (state)\nthis:\n  \\<Phi> t = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma imbal_ins_Bal: \"ins n d x t = Bal t' \\<Longrightarrow>\n real(imbal (node tw t' y s)) - imbal (node tw t y s) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ins n d x t = Bal t' \\<Longrightarrow>\n    real (imbal (node tw t' y s)) - real (imbal (node tw t y s)) \\<le> 1", "apply(drule ins_size)"], ["proof (prove)\ngoal (1 subgoal):\n 1. size t' = size t + 1 \\<Longrightarrow>\n    real (imbal (node tw t' y s)) - real (imbal (node tw t y s)) \\<le> 1", "apply(auto simp add: size1_size imbal.simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma imbal_ins_Unbal: \"ins n d x t = Unbal t' \\<Longrightarrow>\n real(imbal (node tw t' y s)) - imbal (node tw t y s) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ins n d x t = Unbal t' \\<Longrightarrow>\n    real (imbal (node tw t' y s)) - real (imbal (node tw t y s)) \\<le> 1", "apply(drule ins_size)"], ["proof (prove)\ngoal (1 subgoal):\n 1. size t' = size t + 1 \\<Longrightarrow>\n    real (imbal (node tw t' y s)) - real (imbal (node tw t y s)) \\<le> 1", "apply(auto simp add: size1_size imbal.simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma T_ins3_Same:\n  \"ins3 n d x t = Same2 \\<Longrightarrow> T_ins3 n d x t \\<le> 2 * height t + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ins3 n d x t = Same2 \\<Longrightarrow>\n    T_ins3 n d x t \\<le> 2 * height t + 1", "apply(induction t arbitrary: d)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>d.\n       ins3 n d x \\<langle>\\<rangle> = Same2 \\<Longrightarrow>\n       T_ins3 n d x \\<langle>\\<rangle>\n       \\<le> 2 * height \\<langle>\\<rangle> + 1\n 2. \\<And>t1 x2 t2 d.\n       \\<lbrakk>\\<And>d.\n                   ins3 n d x t1 = Same2 \\<Longrightarrow>\n                   T_ins3 n d x t1 \\<le> 2 * height t1 + 1;\n        \\<And>d.\n           ins3 n d x t2 = Same2 \\<Longrightarrow>\n           T_ins3 n d x t2 \\<le> 2 * height t2 + 1;\n        ins3 n d x \\<langle>t1, x2, t2\\<rangle> = Same2\\<rbrakk>\n       \\<Longrightarrow> T_ins3 n d x \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 2 * height \\<langle>t1, x2, t2\\<rangle> + 1", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d.\n       \\<lbrakk>\\<And>d.\n                   ins3 n d x t1 = Same2 \\<Longrightarrow>\n                   T_ins3 n d x t1 \\<le> 2 * height t1 + 1;\n        \\<And>d.\n           ins3 n d x t2 = Same2 \\<Longrightarrow>\n           T_ins3 n d x t2 \\<le> 2 * height t2 + 1;\n        ins3 n d x \\<langle>t1, x2, t2\\<rangle> = Same2\\<rbrakk>\n       \\<Longrightarrow> T_ins3 n d x \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 2 * height \\<langle>t1, x2, t2\\<rangle> + 1", "apply (force simp: max_def split!: up2.splits if_splits)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma T_ins3_Unbal:\n  \"\\<lbrakk> ins3 n d x t = Unbal2 t' n' h';  bal_i n (height t + d) \\<rbrakk> \\<Longrightarrow>\n  T_ins3 n d x t \\<le> 2 * size t + 1 + height t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ins3 n d x t = Unbal2 t' n' h'; bal_i n (height t + d)\\<rbrakk>\n    \\<Longrightarrow> T_ins3 n d x t \\<le> 2 * size t + 1 + height t", "apply(induction t arbitrary: d t' n' h')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>d t' n' h'.\n       \\<lbrakk>ins3 n d x \\<langle>\\<rangle> = Unbal2 t' n' h';\n        bal_i n (height \\<langle>\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> T_ins3 n d x \\<langle>\\<rangle>\n                         \\<le> 2 * size \\<langle>\\<rangle> + 1 +\n                               height \\<langle>\\<rangle>\n 2. \\<And>t1 x2 t2 d t' n' h'.\n       \\<lbrakk>\\<And>d t' n' h'.\n                   \\<lbrakk>ins3 n d x t1 = Unbal2 t' n' h';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> T_ins3 n d x t1\n                                     \\<le> 2 * size t1 + 1 + height t1;\n        \\<And>d t' n' h'.\n           \\<lbrakk>ins3 n d x t2 = Unbal2 t' n' h';\n            bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> T_ins3 n d x t2\n                             \\<le> 2 * size t2 + 1 + height t2;\n        ins3 n d x \\<langle>t1, x2, t2\\<rangle> = Unbal2 t' n' h';\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> T_ins3 n d x \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 2 * size \\<langle>t1, x2, t2\\<rangle> + 1 +\n                               height \\<langle>t1, x2, t2\\<rangle>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d t' n' h'.\n       \\<lbrakk>\\<And>d t' n' h'.\n                   \\<lbrakk>ins3 n d x t1 = Unbal2 t' n' h';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> T_ins3 n d x t1\n                                     \\<le> 2 * size t1 + 1 + height t1;\n        \\<And>d t' n' h'.\n           \\<lbrakk>ins3 n d x t2 = Unbal2 t' n' h';\n            bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> T_ins3 n d x t2\n                             \\<le> 2 * size t2 + 1 + height t2;\n        ins3 n d x \\<langle>t1, x2, t2\\<rangle> = Unbal2 t' n' h';\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> T_ins3 n d x \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 2 * size \\<langle>t1, x2, t2\\<rangle> + 1 +\n                               height \\<langle>t1, x2, t2\\<rangle>", "apply (auto simp: ins3_ins2 ins2_iff_ins ins_height size_tree size1_size max_def mono_bal_i'\n         dest: unbal_ins_Unbal split!: up2.splits if_splits)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1 x2 t2 d x31.\n       \\<lbrakk>\\<And>d t'.\n                   \\<lbrakk>ins n d x t1 = Unbal t';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> T_ins3 n d x t1\n                                     \\<le> Suc (2 * size t1 + height t1);\n        \\<And>d t'.\n           \\<lbrakk>ins n d x t2 = Unbal t';\n            bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> T_ins3 n d x t2\n                             \\<le> Suc (2 * size t2 + height t2);\n        bal_i n (Suc (height t2 + d)); x < x2; height t1 \\<le> height t2;\n        ins n (Suc d) x t1 = Unbal x31;\n        bal_i (Suc (size x31 + size t2)) (Suc (height x31))\\<rbrakk>\n       \\<Longrightarrow> T_ins3 n (Suc d) x t1\n                         \\<le> Suc (2 * size t1 + height t2)\n 2. \\<And>t1 x2 t2 d x31.\n       \\<lbrakk>\\<And>d t'.\n                   \\<lbrakk>ins n d x t1 = Unbal t';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> T_ins3 n d x t1\n                                     \\<le> Suc (2 * size t1 + height t1);\n        \\<And>d t'.\n           \\<lbrakk>ins n d x t2 = Unbal t';\n            bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> T_ins3 n d x t2\n                             \\<le> Suc (2 * size t2 + height t2);\n        bal_i n (Suc (height t1 + d)); x2 < x;\n        \\<not> height t1 \\<le> height t2; ins n (Suc d) x t2 = Unbal x31;\n        bal_i (Suc (size x31 + size t1)) (Suc (height x31))\\<rbrakk>\n       \\<Longrightarrow> T_ins3 n (Suc d) x t2\n                         \\<le> Suc (2 * size t2 + height t1)", "apply (fastforce simp: mono_bal_i')+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Phi_diff_Unbal:\n  \"\\<lbrakk> ins3 n d x t = Unbal2 t' n' h';  bal_i n (height t + d) \\<rbrakk> \\<Longrightarrow>\n  \\<Phi> t' - \\<Phi> t \\<le> 6*e * height t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ins3 n d x t = Unbal2 t' n' h'; bal_i n (height t + d)\\<rbrakk>\n    \\<Longrightarrow> \\<Phi> t' - \\<Phi> t \\<le> 6 * e * real (height t)", "proof(induction t arbitrary: d t' n' h')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d t' n' h'.\n       \\<lbrakk>ins3 n d x \\<langle>\\<rangle> = Unbal2 t' n' h';\n        bal_i n (height \\<langle>\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>\\<rangle>\n                         \\<le> 6 * e * real (height \\<langle>\\<rangle>)\n 2. \\<And>t1 x2 t2 d t' n' h'.\n       \\<lbrakk>\\<And>d t' n' h'.\n                   \\<lbrakk>ins3 n d x t1 = Unbal2 t' n' h';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> \\<Phi> t' - \\<Phi> t1\n                                     \\<le> 6 * e * real (height t1);\n        \\<And>d t' n' h'.\n           \\<lbrakk>ins3 n d x t2 = Unbal2 t' n' h';\n            bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> \\<Phi> t' - \\<Phi> t2\n                             \\<le> 6 * e * real (height t2);\n        ins3 n d x \\<langle>t1, x2, t2\\<rangle> = Unbal2 t' n' h';\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 6 * e *\n                               real (height \\<langle>t1, x2, t2\\<rangle>)", "case Leaf"], ["proof (state)\nthis:\n  ins3 n d x \\<langle>\\<rangle> = Unbal2 t' n' h'\n  bal_i n (height \\<langle>\\<rangle> + d)\n\ngoal (2 subgoals):\n 1. \\<And>d t' n' h'.\n       \\<lbrakk>ins3 n d x \\<langle>\\<rangle> = Unbal2 t' n' h';\n        bal_i n (height \\<langle>\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>\\<rangle>\n                         \\<le> 6 * e * real (height \\<langle>\\<rangle>)\n 2. \\<And>t1 x2 t2 d t' n' h'.\n       \\<lbrakk>\\<And>d t' n' h'.\n                   \\<lbrakk>ins3 n d x t1 = Unbal2 t' n' h';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> \\<Phi> t' - \\<Phi> t1\n                                     \\<le> 6 * e * real (height t1);\n        \\<And>d t' n' h'.\n           \\<lbrakk>ins3 n d x t2 = Unbal2 t' n' h';\n            bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> \\<Phi> t' - \\<Phi> t2\n                             \\<le> 6 * e * real (height t2);\n        ins3 n d x \\<langle>t1, x2, t2\\<rangle> = Unbal2 t' n' h';\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 6 * e *\n                               real (height \\<langle>t1, x2, t2\\<rangle>)", "thus ?case"], ["proof (prove)\nusing this:\n  ins3 n d x \\<langle>\\<rangle> = Unbal2 t' n' h'\n  bal_i n (height \\<langle>\\<rangle> + d)\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>\\<rangle>)", "by (auto simp: imbal.simps split: if_splits)"], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d t' n' h'.\n       \\<lbrakk>\\<And>d t' n' h'.\n                   \\<lbrakk>ins3 n d x t1 = Unbal2 t' n' h';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> \\<Phi> t' - \\<Phi> t1\n                                     \\<le> 6 * e * real (height t1);\n        \\<And>d t' n' h'.\n           \\<lbrakk>ins3 n d x t2 = Unbal2 t' n' h';\n            bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> \\<Phi> t' - \\<Phi> t2\n                             \\<le> 6 * e * real (height t2);\n        ins3 n d x \\<langle>t1, x2, t2\\<rangle> = Unbal2 t' n' h';\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 6 * e *\n                               real (height \\<langle>t1, x2, t2\\<rangle>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d t' n' h'.\n       \\<lbrakk>\\<And>d t' n' h'.\n                   \\<lbrakk>ins3 n d x t1 = Unbal2 t' n' h';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> \\<Phi> t' - \\<Phi> t1\n                                     \\<le> 6 * e * real (height t1);\n        \\<And>d t' n' h'.\n           \\<lbrakk>ins3 n d x t2 = Unbal2 t' n' h';\n            bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> \\<Phi> t' - \\<Phi> t2\n                             \\<le> 6 * e * real (height t2);\n        ins3 n d x \\<langle>t1, x2, t2\\<rangle> = Unbal2 t' n' h';\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 6 * e *\n                               real (height \\<langle>t1, x2, t2\\<rangle>)", "case (Node l y r)"], ["proof (state)\nthis:\n  \\<lbrakk>ins3 n ?d x l = Unbal2 ?t' ?n' ?h';\n   bal_i n (height l + ?d)\\<rbrakk>\n  \\<Longrightarrow> \\<Phi> ?t' - \\<Phi> l \\<le> 6 * e * real (height l)\n  \\<lbrakk>ins3 n ?d x r = Unbal2 ?t' ?n' ?h';\n   bal_i n (height r + ?d)\\<rbrakk>\n  \\<Longrightarrow> \\<Phi> ?t' - \\<Phi> r \\<le> 6 * e * real (height r)\n  ins3 n d x \\<langle>l, y, r\\<rangle> = Unbal2 t' n' h'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d t' n' h'.\n       \\<lbrakk>\\<And>d t' n' h'.\n                   \\<lbrakk>ins3 n d x t1 = Unbal2 t' n' h';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> \\<Phi> t' - \\<Phi> t1\n                                     \\<le> 6 * e * real (height t1);\n        \\<And>d t' n' h'.\n           \\<lbrakk>ins3 n d x t2 = Unbal2 t' n' h';\n            bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> \\<Phi> t' - \\<Phi> t2\n                             \\<le> 6 * e * real (height t2);\n        ins3 n d x \\<langle>t1, x2, t2\\<rangle> = Unbal2 t' n' h';\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 6 * e *\n                               real (height \\<langle>t1, x2, t2\\<rangle>)", "have ins: \"ins n d x \\<langle>l, y, r\\<rangle> = Unbal t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ins n d x \\<langle>l, y, r\\<rangle> = Unbal t'", "using Node.prems(1)"], ["proof (prove)\nusing this:\n  ins3 n d x \\<langle>l, y, r\\<rangle> = Unbal2 t' n' h'\n\ngoal (1 subgoal):\n 1. ins n d x \\<langle>l, y, r\\<rangle> = Unbal t'", "by (simp only: ins2_iff_ins(3) ins3_ins2[OF Node.prems(2)])"], ["proof (state)\nthis:\n  ins n d x \\<langle>l, y, r\\<rangle> = Unbal t'\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d t' n' h'.\n       \\<lbrakk>\\<And>d t' n' h'.\n                   \\<lbrakk>ins3 n d x t1 = Unbal2 t' n' h';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> \\<Phi> t' - \\<Phi> t1\n                                     \\<le> 6 * e * real (height t1);\n        \\<And>d t' n' h'.\n           \\<lbrakk>ins3 n d x t2 = Unbal2 t' n' h';\n            bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> \\<Phi> t' - \\<Phi> t2\n                             \\<le> 6 * e * real (height t2);\n        ins3 n d x \\<langle>t1, x2, t2\\<rangle> = Unbal2 t' n' h';\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 6 * e *\n                               real (height \\<langle>t1, x2, t2\\<rangle>)", "consider (ls) \"x < y\" | (eq) \"x = y\" | (gr) \"x > y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y \\<Longrightarrow> thesis; x = y \\<Longrightarrow> thesis;\n     y < x \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by(metis less_linear)"], ["proof (state)\nthis:\n  \\<lbrakk>x < y \\<Longrightarrow> ?thesis; x = y \\<Longrightarrow> ?thesis;\n   y < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d t' n' h'.\n       \\<lbrakk>\\<And>d t' n' h'.\n                   \\<lbrakk>ins3 n d x t1 = Unbal2 t' n' h';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> \\<Phi> t' - \\<Phi> t1\n                                     \\<le> 6 * e * real (height t1);\n        \\<And>d t' n' h'.\n           \\<lbrakk>ins3 n d x t2 = Unbal2 t' n' h';\n            bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> \\<Phi> t' - \\<Phi> t2\n                             \\<le> 6 * e * real (height t2);\n        ins3 n d x \\<langle>t1, x2, t2\\<rangle> = Unbal2 t' n' h';\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 6 * e *\n                               real (height \\<langle>t1, x2, t2\\<rangle>)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>x < y \\<Longrightarrow> ?thesis; x = y \\<Longrightarrow> ?thesis;\n   y < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "case ls"], ["proof (state)\nthis:\n  x < y\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "with Node.prems"], ["proof (chain)\npicking this:\n  ins3 n d x \\<langle>l, y, r\\<rangle> = Unbal2 t' n' h'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n  x < y", "obtain l' nl' nh' where rec: \"ins3 n (d+1) x l = Unbal2 l' nl' nh'\"\n      and t': \"t' = Node l' y r\""], ["proof (prove)\nusing this:\n  ins3 n d x \\<langle>l, y, r\\<rangle> = Unbal2 t' n' h'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n  x < y\n\ngoal (1 subgoal):\n 1. (\\<And>l' nl' nh'.\n        \\<lbrakk>ins3 n (d + 1) x l = Unbal2 l' nl' nh';\n         t' = \\<langle>l', y, r\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto split: up2.splits if_splits)"], ["proof (state)\nthis:\n  ins3 n (d + 1) x l = Unbal2 l' nl' nh'\n  t' = \\<langle>l', y, r\\<rangle>\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have bal: \"bal_i n (height l + (d+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal_i n (height l + (d + 1))", "using Node.prems(2)"], ["proof (prove)\nusing this:\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n\ngoal (1 subgoal):\n 1. bal_i n (height l + (d + 1))", "by (simp add: mono_bal_i' split: if_splits)"], ["proof (state)\nthis:\n  bal_i n (height l + (d + 1))\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have rec': \"ins n (d+1) x l = Unbal l'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ins n (d + 1) x l = Unbal l'", "using rec ins_ins2(3) ins3_ins2[OF bal]"], ["proof (prove)\nusing this:\n  ins3 n (d + 1) x l = Unbal2 l' nl' nh'\n  ins2 ?n ?d ?x ?t = Unbal2 ?t' ?n' ?h' \\<Longrightarrow>\n  ins ?n ?d ?x ?t = Unbal ?t' \\<and> ?n' = size ?t' \\<and> ?h' = height ?t'\n  ins3 n (d + 1) ?x l = ins2 n (d + 1) ?x l\n\ngoal (1 subgoal):\n 1. ins n (d + 1) x l = Unbal l'", "by simp"], ["proof (state)\nthis:\n  ins n (d + 1) x l = Unbal l'\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have \"\\<Phi> t' - \\<Phi> \\<langle>l,y,r\\<rangle> = 6*e*imbal\\<langle>l',y,r\\<rangle> - 6*e*imbal\\<langle>l,y,r\\<rangle> + \\<Phi> l' - \\<Phi> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle> =\n    6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n    \\<Phi> l' -\n    \\<Phi> l", "using t'"], ["proof (prove)\nusing this:\n  t' = \\<langle>l', y, r\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle> =\n    6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n    \\<Phi> l' -\n    \\<Phi> l", "by simp"], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle> =\n  6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  \\<Phi> l' -\n  \\<Phi> l\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "also"], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle> =\n  6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  \\<Phi> l' -\n  \\<Phi> l\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have \"\\<dots> = 6*e * (real(imbal\\<langle>l',y,r\\<rangle>) - imbal\\<langle>l,y,r\\<rangle>) + \\<Phi> l' - \\<Phi> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n    \\<Phi> l' -\n    \\<Phi> l =\n    6 * e *\n    (real (imbal \\<langle>l', y, r\\<rangle>) -\n     real (imbal \\<langle>l, y, r\\<rangle>)) +\n    \\<Phi> l' -\n    \\<Phi> l", "by (simp add: ring_distribs)"], ["proof (state)\nthis:\n  6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  \\<Phi> l' -\n  \\<Phi> l =\n  6 * e *\n  (real (imbal \\<langle>l', y, r\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  \\<Phi> l' -\n  \\<Phi> l\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "also"], ["proof (state)\nthis:\n  6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  \\<Phi> l' -\n  \\<Phi> l =\n  6 * e *\n  (real (imbal \\<langle>l', y, r\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  \\<Phi> l' -\n  \\<Phi> l\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have \"\\<dots> \\<le> 6*e + \\<Phi> l' - \\<Phi> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 * e *\n    (real (imbal \\<langle>l', y, r\\<rangle>) -\n     real (imbal \\<langle>l, y, r\\<rangle>)) +\n    \\<Phi> l' -\n    \\<Phi> l\n    \\<le> 6 * e + \\<Phi> l' - \\<Phi> l", "using imbal_ins_Unbal[OF rec', of False y r] e0 t'"], ["proof (prove)\nusing this:\n  real (imbal (node False l' y r)) - real (imbal (node False l y r)) \\<le> 1\n  0 < e\n  t' = \\<langle>l', y, r\\<rangle>\n\ngoal (1 subgoal):\n 1. 6 * e *\n    (real (imbal \\<langle>l', y, r\\<rangle>) -\n     real (imbal \\<langle>l, y, r\\<rangle>)) +\n    \\<Phi> l' -\n    \\<Phi> l\n    \\<le> 6 * e + \\<Phi> l' - \\<Phi> l", "by (simp)"], ["proof (state)\nthis:\n  6 * e *\n  (real (imbal \\<langle>l', y, r\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  \\<Phi> l' -\n  \\<Phi> l\n  \\<le> 6 * e + \\<Phi> l' - \\<Phi> l\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "also"], ["proof (state)\nthis:\n  6 * e *\n  (real (imbal \\<langle>l', y, r\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  \\<Phi> l' -\n  \\<Phi> l\n  \\<le> 6 * e + \\<Phi> l' - \\<Phi> l\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have \"\\<dots> \\<le> 6*e * (height l + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 * e + \\<Phi> l' - \\<Phi> l \\<le> 6 * e * real (height l + 1)", "using Node.IH(1)[OF rec bal]"], ["proof (prove)\nusing this:\n  \\<Phi> l' - \\<Phi> l \\<le> 6 * e * real (height l)\n\ngoal (1 subgoal):\n 1. 6 * e + \\<Phi> l' - \\<Phi> l \\<le> 6 * e * real (height l + 1)", "by (simp add: ring_distribs)"], ["proof (state)\nthis:\n  6 * e + \\<Phi> l' - \\<Phi> l \\<le> 6 * e * real (height l + 1)\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "also"], ["proof (state)\nthis:\n  6 * e + \\<Phi> l' - \\<Phi> l \\<le> 6 * e * real (height l + 1)\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have \"\\<dots> \\<le> 6*e * height \\<langle>l, y, r\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 * e * real (height l + 1)\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "using e0"], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. 6 * e * real (height l + 1)\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "by(simp del: times_divide_eq_left)"], ["proof (state)\nthis:\n  6 * e * real (height l + 1)\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "finally"], ["proof (chain)\npicking this:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "."], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "case eq"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "using Node.prems"], ["proof (prove)\nusing this:\n  x = y\n  ins3 n d x \\<langle>l, y, r\\<rangle> = Unbal2 t' n' h'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "by(simp)"], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "case gr"], ["proof (state)\nthis:\n  y < x\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "with Node.prems"], ["proof (chain)\npicking this:\n  ins3 n d x \\<langle>l, y, r\\<rangle> = Unbal2 t' n' h'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n  y < x", "obtain r' rn' rh' where rec: \"ins3 n (d+1) x r = Unbal2 r' rn' rh'\"\n      and t': \"t' = Node l y r'\""], ["proof (prove)\nusing this:\n  ins3 n d x \\<langle>l, y, r\\<rangle> = Unbal2 t' n' h'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n  y < x\n\ngoal (1 subgoal):\n 1. (\\<And>r' rn' rh'.\n        \\<lbrakk>ins3 n (d + 1) x r = Unbal2 r' rn' rh';\n         t' = \\<langle>l, y, r'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto split: up2.splits if_splits)"], ["proof (state)\nthis:\n  ins3 n (d + 1) x r = Unbal2 r' rn' rh'\n  t' = \\<langle>l, y, r'\\<rangle>\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have bal: \"bal_i n (height r + (d+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal_i n (height r + (d + 1))", "using Node.prems(2)"], ["proof (prove)\nusing this:\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n\ngoal (1 subgoal):\n 1. bal_i n (height r + (d + 1))", "by (simp add: mono_bal_i' split: if_splits)"], ["proof (state)\nthis:\n  bal_i n (height r + (d + 1))\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have rec': \"ins n (d+1) x r = Unbal r'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ins n (d + 1) x r = Unbal r'", "using rec ins_ins2(3) ins3_ins2[OF bal]"], ["proof (prove)\nusing this:\n  ins3 n (d + 1) x r = Unbal2 r' rn' rh'\n  ins2 ?n ?d ?x ?t = Unbal2 ?t' ?n' ?h' \\<Longrightarrow>\n  ins ?n ?d ?x ?t = Unbal ?t' \\<and> ?n' = size ?t' \\<and> ?h' = height ?t'\n  ins3 n (d + 1) ?x r = ins2 n (d + 1) ?x r\n\ngoal (1 subgoal):\n 1. ins n (d + 1) x r = Unbal r'", "by simp"], ["proof (state)\nthis:\n  ins n (d + 1) x r = Unbal r'\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have \"\\<Phi> t' - \\<Phi> \\<langle>l,y,r\\<rangle> = 6*e*imbal\\<langle>l,y,r'\\<rangle> - 6*e*imbal\\<langle>l,y,r\\<rangle> + \\<Phi> r' - \\<Phi> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle> =\n    6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n    \\<Phi> r' -\n    \\<Phi> r", "using t'"], ["proof (prove)\nusing this:\n  t' = \\<langle>l, y, r'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle> =\n    6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n    \\<Phi> r' -\n    \\<Phi> r", "by simp"], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle> =\n  6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  \\<Phi> r' -\n  \\<Phi> r\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "also"], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle> =\n  6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  \\<Phi> r' -\n  \\<Phi> r\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have \"\\<dots> = 6*e * (real(imbal\\<langle>l,y,r'\\<rangle>) - imbal\\<langle>l,y,r\\<rangle>) + \\<Phi> r' - \\<Phi> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n    \\<Phi> r' -\n    \\<Phi> r =\n    6 * e *\n    (real (imbal \\<langle>l, y, r'\\<rangle>) -\n     real (imbal \\<langle>l, y, r\\<rangle>)) +\n    \\<Phi> r' -\n    \\<Phi> r", "by (simp add: ring_distribs)"], ["proof (state)\nthis:\n  6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  \\<Phi> r' -\n  \\<Phi> r =\n  6 * e *\n  (real (imbal \\<langle>l, y, r'\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  \\<Phi> r' -\n  \\<Phi> r\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "also"], ["proof (state)\nthis:\n  6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  \\<Phi> r' -\n  \\<Phi> r =\n  6 * e *\n  (real (imbal \\<langle>l, y, r'\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  \\<Phi> r' -\n  \\<Phi> r\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have \"\\<dots> \\<le> 6*e + \\<Phi> r' - \\<Phi> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 * e *\n    (real (imbal \\<langle>l, y, r'\\<rangle>) -\n     real (imbal \\<langle>l, y, r\\<rangle>)) +\n    \\<Phi> r' -\n    \\<Phi> r\n    \\<le> 6 * e + \\<Phi> r' - \\<Phi> r", "using imbal_ins_Unbal[OF rec', of True y l] e0 t'"], ["proof (prove)\nusing this:\n  real (imbal (node True r' y l)) - real (imbal (node True r y l)) \\<le> 1\n  0 < e\n  t' = \\<langle>l, y, r'\\<rangle>\n\ngoal (1 subgoal):\n 1. 6 * e *\n    (real (imbal \\<langle>l, y, r'\\<rangle>) -\n     real (imbal \\<langle>l, y, r\\<rangle>)) +\n    \\<Phi> r' -\n    \\<Phi> r\n    \\<le> 6 * e + \\<Phi> r' - \\<Phi> r", "by (simp)"], ["proof (state)\nthis:\n  6 * e *\n  (real (imbal \\<langle>l, y, r'\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  \\<Phi> r' -\n  \\<Phi> r\n  \\<le> 6 * e + \\<Phi> r' - \\<Phi> r\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "also"], ["proof (state)\nthis:\n  6 * e *\n  (real (imbal \\<langle>l, y, r'\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  \\<Phi> r' -\n  \\<Phi> r\n  \\<le> 6 * e + \\<Phi> r' - \\<Phi> r\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have \"\\<dots> \\<le> 6*e * (height r + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 * e + \\<Phi> r' - \\<Phi> r \\<le> 6 * e * real (height r + 1)", "using Node.IH(2)[OF rec bal]"], ["proof (prove)\nusing this:\n  \\<Phi> r' - \\<Phi> r \\<le> 6 * e * real (height r)\n\ngoal (1 subgoal):\n 1. 6 * e + \\<Phi> r' - \\<Phi> r \\<le> 6 * e * real (height r + 1)", "by (simp add: ring_distribs)"], ["proof (state)\nthis:\n  6 * e + \\<Phi> r' - \\<Phi> r \\<le> 6 * e * real (height r + 1)\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "also"], ["proof (state)\nthis:\n  6 * e + \\<Phi> r' - \\<Phi> r \\<le> 6 * e * real (height r + 1)\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have \"\\<dots> \\<le> 6*e * height \\<langle>l, y, r\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 * e * real (height r + 1)\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "using e0"], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. 6 * e * real (height r + 1)\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "by(simp del: times_divide_eq_left)"], ["proof (state)\nthis:\n  6 * e * real (height r + 1)\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "finally"], ["proof (chain)\npicking this:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "."], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma amor_Unbal:\n  \"\\<lbrakk> ins3 n d x t = Unbal2 t' n' h';  bal_i n (height t + d) \\<rbrakk> \\<Longrightarrow> \n  T_ins3 n d x t + \\<Phi> t' - \\<Phi> t \\<le> 2*size1 t + (6*e + 1) * height t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ins3 n d x t = Unbal2 t' n' h'; bal_i n (height t + d)\\<rbrakk>\n    \\<Longrightarrow> real (T_ins3 n d x t) + \\<Phi> t' - \\<Phi> t\n                      \\<le> real (2 * size1 t) +\n                            (6 * e + 1) * real (height t)", "apply(frule (1) T_ins3_Unbal)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ins3 n d x t = Unbal2 t' n' h'; bal_i n (height t + d);\n     T_ins3 n d x t \\<le> 2 * size t + 1 + height t\\<rbrakk>\n    \\<Longrightarrow> real (T_ins3 n d x t) + \\<Phi> t' - \\<Phi> t\n                      \\<le> real (2 * size1 t) +\n                            (6 * e + 1) * real (height t)", "apply(drule (1) Phi_diff_Unbal)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>bal_i n (height t + d);\n     T_ins3 n d x t \\<le> 2 * size t + 1 + height t;\n     \\<Phi> t' - \\<Phi> t \\<le> 6 * e * real (height t)\\<rbrakk>\n    \\<Longrightarrow> real (T_ins3 n d x t) + \\<Phi> t' - \\<Phi> t\n                      \\<le> real (2 * size1 t) +\n                            (6 * e + 1) * real (height t)", "by(simp add: ring_distribs size1_size)"], ["", "lemma T_ins3_Bal:\n  \"\\<lbrakk> ins3 n d x t = Bal2 t'; bal_i n (height t + d) \\<rbrakk>\n  \\<Longrightarrow> T_ins3 n d x t + \\<Phi> t' - \\<Phi> t \\<le> (6*e+2) * (height t + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ins3 n d x t = Bal2 t'; bal_i n (height t + d)\\<rbrakk>\n    \\<Longrightarrow> real (T_ins3 n d x t) + \\<Phi> t' - \\<Phi> t\n                      \\<le> (6 * e + 2) * real (height t + 1)", "proof(induction t arbitrary: d t')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d t'.\n       \\<lbrakk>ins3 n d x \\<langle>\\<rangle> = Bal2 t';\n        bal_i n (height \\<langle>\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> real (T_ins3 n d x \\<langle>\\<rangle>) +\n                         \\<Phi> t' -\n                         \\<Phi> \\<langle>\\<rangle>\n                         \\<le> (6 * e + 2) *\n                               real (height \\<langle>\\<rangle> + 1)\n 2. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   \\<lbrakk>ins3 n d x t1 = Bal2 t';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> real (T_ins3 n d x t1) + \\<Phi> t' -\n                                     \\<Phi> t1\n                                     \\<le> (6 * e + 2) *\n     real (height t1 + 1);\n        \\<And>d t'.\n           \\<lbrakk>ins3 n d x t2 = Bal2 t';\n            bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> real (T_ins3 n d x t2) + \\<Phi> t' - \\<Phi> t2\n                             \\<le> (6 * e + 2) * real (height t2 + 1);\n        ins3 n d x \\<langle>t1, x2, t2\\<rangle> = Bal2 t';\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> real (T_ins3 n d x \\<langle>t1, x2, t2\\<rangle>) +\n                         \\<Phi> t' -\n                         \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> (6 * e + 2) *\n                               real\n                                (height \\<langle>t1, x2, t2\\<rangle> + 1)", "case Leaf"], ["proof (state)\nthis:\n  ins3 n d x \\<langle>\\<rangle> = Bal2 t'\n  bal_i n (height \\<langle>\\<rangle> + d)\n\ngoal (2 subgoals):\n 1. \\<And>d t'.\n       \\<lbrakk>ins3 n d x \\<langle>\\<rangle> = Bal2 t';\n        bal_i n (height \\<langle>\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> real (T_ins3 n d x \\<langle>\\<rangle>) +\n                         \\<Phi> t' -\n                         \\<Phi> \\<langle>\\<rangle>\n                         \\<le> (6 * e + 2) *\n                               real (height \\<langle>\\<rangle> + 1)\n 2. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   \\<lbrakk>ins3 n d x t1 = Bal2 t';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> real (T_ins3 n d x t1) + \\<Phi> t' -\n                                     \\<Phi> t1\n                                     \\<le> (6 * e + 2) *\n     real (height t1 + 1);\n        \\<And>d t'.\n           \\<lbrakk>ins3 n d x t2 = Bal2 t';\n            bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> real (T_ins3 n d x t2) + \\<Phi> t' - \\<Phi> t2\n                             \\<le> (6 * e + 2) * real (height t2 + 1);\n        ins3 n d x \\<langle>t1, x2, t2\\<rangle> = Bal2 t';\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> real (T_ins3 n d x \\<langle>t1, x2, t2\\<rangle>) +\n                         \\<Phi> t' -\n                         \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> (6 * e + 2) *\n                               real\n                                (height \\<langle>t1, x2, t2\\<rangle> + 1)", "thus ?case"], ["proof (prove)\nusing this:\n  ins3 n d x \\<langle>\\<rangle> = Bal2 t'\n  bal_i n (height \\<langle>\\<rangle> + d)\n\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>\\<rangle> + 1)", "using e0"], ["proof (prove)\nusing this:\n  ins3 n d x \\<langle>\\<rangle> = Bal2 t'\n  bal_i n (height \\<langle>\\<rangle> + d)\n  0 < e\n\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>\\<rangle> + 1)", "by (auto simp: imbal.simps split: if_splits)"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>\\<rangle>\n  \\<le> (6 * e + 2) * real (height \\<langle>\\<rangle> + 1)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   \\<lbrakk>ins3 n d x t1 = Bal2 t';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> real (T_ins3 n d x t1) + \\<Phi> t' -\n                                     \\<Phi> t1\n                                     \\<le> (6 * e + 2) *\n     real (height t1 + 1);\n        \\<And>d t'.\n           \\<lbrakk>ins3 n d x t2 = Bal2 t';\n            bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> real (T_ins3 n d x t2) + \\<Phi> t' - \\<Phi> t2\n                             \\<le> (6 * e + 2) * real (height t2 + 1);\n        ins3 n d x \\<langle>t1, x2, t2\\<rangle> = Bal2 t';\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> real (T_ins3 n d x \\<langle>t1, x2, t2\\<rangle>) +\n                         \\<Phi> t' -\n                         \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> (6 * e + 2) *\n                               real\n                                (height \\<langle>t1, x2, t2\\<rangle> + 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   \\<lbrakk>ins3 n d x t1 = Bal2 t';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> real (T_ins3 n d x t1) + \\<Phi> t' -\n                                     \\<Phi> t1\n                                     \\<le> (6 * e + 2) *\n     real (height t1 + 1);\n        \\<And>d t'.\n           \\<lbrakk>ins3 n d x t2 = Bal2 t';\n            bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> real (T_ins3 n d x t2) + \\<Phi> t' - \\<Phi> t2\n                             \\<le> (6 * e + 2) * real (height t2 + 1);\n        ins3 n d x \\<langle>t1, x2, t2\\<rangle> = Bal2 t';\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> real (T_ins3 n d x \\<langle>t1, x2, t2\\<rangle>) +\n                         \\<Phi> t' -\n                         \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> (6 * e + 2) *\n                               real\n                                (height \\<langle>t1, x2, t2\\<rangle> + 1)", "case (Node l y r)"], ["proof (state)\nthis:\n  \\<lbrakk>ins3 n ?d x l = Bal2 ?t'; bal_i n (height l + ?d)\\<rbrakk>\n  \\<Longrightarrow> real (T_ins3 n ?d x l) + \\<Phi> ?t' - \\<Phi> l\n                    \\<le> (6 * e + 2) * real (height l + 1)\n  \\<lbrakk>ins3 n ?d x r = Bal2 ?t'; bal_i n (height r + ?d)\\<rbrakk>\n  \\<Longrightarrow> real (T_ins3 n ?d x r) + \\<Phi> ?t' - \\<Phi> r\n                    \\<le> (6 * e + 2) * real (height r + 1)\n  ins3 n d x \\<langle>l, y, r\\<rangle> = Bal2 t'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   \\<lbrakk>ins3 n d x t1 = Bal2 t';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> real (T_ins3 n d x t1) + \\<Phi> t' -\n                                     \\<Phi> t1\n                                     \\<le> (6 * e + 2) *\n     real (height t1 + 1);\n        \\<And>d t'.\n           \\<lbrakk>ins3 n d x t2 = Bal2 t';\n            bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> real (T_ins3 n d x t2) + \\<Phi> t' - \\<Phi> t2\n                             \\<le> (6 * e + 2) * real (height t2 + 1);\n        ins3 n d x \\<langle>t1, x2, t2\\<rangle> = Bal2 t';\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> real (T_ins3 n d x \\<langle>t1, x2, t2\\<rangle>) +\n                         \\<Phi> t' -\n                         \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> (6 * e + 2) *\n                               real\n                                (height \\<langle>t1, x2, t2\\<rangle> + 1)", "have Bal: \"ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ins n d x \\<langle>l, y, r\\<rangle> = Bal t'", "by (metis Node.prems ins3_ins2 ins_ins2(2))"], ["proof (state)\nthis:\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   \\<lbrakk>ins3 n d x t1 = Bal2 t';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> real (T_ins3 n d x t1) + \\<Phi> t' -\n                                     \\<Phi> t1\n                                     \\<le> (6 * e + 2) *\n     real (height t1 + 1);\n        \\<And>d t'.\n           \\<lbrakk>ins3 n d x t2 = Bal2 t';\n            bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> real (T_ins3 n d x t2) + \\<Phi> t' - \\<Phi> t2\n                             \\<le> (6 * e + 2) * real (height t2 + 1);\n        ins3 n d x \\<langle>t1, x2, t2\\<rangle> = Bal2 t';\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> real (T_ins3 n d x \\<langle>t1, x2, t2\\<rangle>) +\n                         \\<Phi> t' -\n                         \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> (6 * e + 2) *\n                               real\n                                (height \\<langle>t1, x2, t2\\<rangle> + 1)", "consider (ls) \"x < y\" | (eq) \"x = y\" | (gr) \"x > y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y \\<Longrightarrow> thesis; x = y \\<Longrightarrow> thesis;\n     y < x \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by(metis less_linear)"], ["proof (state)\nthis:\n  \\<lbrakk>x < y \\<Longrightarrow> ?thesis; x = y \\<Longrightarrow> ?thesis;\n   y < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 d t'.\n       \\<lbrakk>\\<And>d t'.\n                   \\<lbrakk>ins3 n d x t1 = Bal2 t';\n                    bal_i n (height t1 + d)\\<rbrakk>\n                   \\<Longrightarrow> real (T_ins3 n d x t1) + \\<Phi> t' -\n                                     \\<Phi> t1\n                                     \\<le> (6 * e + 2) *\n     real (height t1 + 1);\n        \\<And>d t'.\n           \\<lbrakk>ins3 n d x t2 = Bal2 t';\n            bal_i n (height t2 + d)\\<rbrakk>\n           \\<Longrightarrow> real (T_ins3 n d x t2) + \\<Phi> t' - \\<Phi> t2\n                             \\<le> (6 * e + 2) * real (height t2 + 1);\n        ins3 n d x \\<langle>t1, x2, t2\\<rangle> = Bal2 t';\n        bal_i n (height \\<langle>t1, x2, t2\\<rangle> + d)\\<rbrakk>\n       \\<Longrightarrow> real (T_ins3 n d x \\<langle>t1, x2, t2\\<rangle>) +\n                         \\<Phi> t' -\n                         \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> (6 * e + 2) *\n                               real\n                                (height \\<langle>t1, x2, t2\\<rangle> + 1)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>x < y \\<Longrightarrow> ?thesis; x = y \\<Longrightarrow> ?thesis;\n   y < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. x = y \\<Longrightarrow>\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 3. y < x \\<Longrightarrow>\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "case ls"], ["proof (state)\nthis:\n  x < y\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. x = y \\<Longrightarrow>\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 3. y < x \\<Longrightarrow>\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have *: \"bal_i n (height l + (d+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal_i n (height l + (d + 1))", "using Node.prems(2)"], ["proof (prove)\nusing this:\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n\ngoal (1 subgoal):\n 1. bal_i n (height l + (d + 1))", "by (simp add: mono_bal_i')"], ["proof (state)\nthis:\n  bal_i n (height l + (d + 1))\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. x = y \\<Longrightarrow>\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 3. y < x \\<Longrightarrow>\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "proof (cases \"ins3 n (d+1) x l\")"], ["proof (state)\ngoal (3 subgoals):\n 1. ins3 n (d + 1) x l = Same2 \\<Longrightarrow>\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 3. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "case Same2"], ["proof (state)\nthis:\n  ins3 n (d + 1) x l = Same2\n\ngoal (3 subgoals):\n 1. ins3 n (d + 1) x l = Same2 \\<Longrightarrow>\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 3. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ins3 n (d + 1) x l = Same2\n\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "using Node ls"], ["proof (prove)\nusing this:\n  ins3 n (d + 1) x l = Same2\n  \\<lbrakk>ins3 n ?d x l = Bal2 ?t'; bal_i n (height l + ?d)\\<rbrakk>\n  \\<Longrightarrow> real (T_ins3 n ?d x l) + \\<Phi> ?t' - \\<Phi> l\n                    \\<le> (6 * e + 2) * real (height l + 1)\n  \\<lbrakk>ins3 n ?d x r = Bal2 ?t'; bal_i n (height r + ?d)\\<rbrakk>\n  \\<Longrightarrow> real (T_ins3 n ?d x r) + \\<Phi> ?t' - \\<Phi> r\n                    \\<le> (6 * e + 2) * real (height r + 1)\n  ins3 n d x \\<langle>l, y, r\\<rangle> = Bal2 t'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n  x < y\n\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "by (simp)"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "case (Bal2 l')"], ["proof (state)\nthis:\n  ins3 n (d + 1) x l = Bal2 l'\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have Bal: \"ins n (d + 1) x l = Bal l'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ins n (d + 1) x l = Bal l'", "using \"*\" Bal2"], ["proof (prove)\nusing this:\n  bal_i n (height l + (d + 1))\n  ins3 n (d + 1) x l = Bal2 l'\n\ngoal (1 subgoal):\n 1. ins n (d + 1) x l = Bal l'", "by (auto simp: ins3_ins2 ins2_iff_ins(2))"], ["proof (state)\nthis:\n  ins n (d + 1) x l = Bal l'\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "let ?t = \"Node l y r\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "let ?t' = \"Node l' y r\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "from Bal2"], ["proof (chain)\npicking this:\n  ins3 n (d + 1) x l = Bal2 l'", "have t': \"t' = ?t'\""], ["proof (prove)\nusing this:\n  ins3 n (d + 1) x l = Bal2 l'\n\ngoal (1 subgoal):\n 1. t' = \\<langle>l', y, r\\<rangle>", "using Node.prems ls"], ["proof (prove)\nusing this:\n  ins3 n (d + 1) x l = Bal2 l'\n  ins3 n d x \\<langle>l, y, r\\<rangle> = Bal2 t'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n  x < y\n\ngoal (1 subgoal):\n 1. t' = \\<langle>l', y, r\\<rangle>", "by (simp)"], ["proof (state)\nthis:\n  t' = \\<langle>l', y, r\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"T_ins3 n d x ?t + \\<Phi> t' - \\<Phi> ?t = T_ins3 n (d+1) x l + 2 + \\<Phi> t' - \\<Phi> ?t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle> =\n    real (T_ins3 n (d + 1) x l + 2) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>", "using ls Bal2"], ["proof (prove)\nusing this:\n  x < y\n  ins3 n (d + 1) x l = Bal2 l'\n\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle> =\n    real (T_ins3 n (d + 1) x l + 2) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>", "by simp"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle> =\n  real (T_ins3 n (d + 1) x l + 2) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle> =\n  real (T_ins3 n (d + 1) x l + 2) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots>\n        = T_ins3 n (d+1) x l + 6*e*imbal ?t' + \\<Phi> l' - 6*e*imbal ?t - \\<Phi> l + 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n (d + 1) x l + 2) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle> =\n    real (T_ins3 n (d + 1) x l) +\n    6 * e * real (imbal \\<langle>l', y, r\\<rangle>) +\n    \\<Phi> l' -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n    \\<Phi> l +\n    2", "using t'"], ["proof (prove)\nusing this:\n  t' = \\<langle>l', y, r\\<rangle>\n\ngoal (1 subgoal):\n 1. real (T_ins3 n (d + 1) x l + 2) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle> =\n    real (T_ins3 n (d + 1) x l) +\n    6 * e * real (imbal \\<langle>l', y, r\\<rangle>) +\n    \\<Phi> l' -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n    \\<Phi> l +\n    2", "by simp"], ["proof (state)\nthis:\n  real (T_ins3 n (d + 1) x l + 2) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle> =\n  real (T_ins3 n (d + 1) x l) +\n  6 * e * real (imbal \\<langle>l', y, r\\<rangle>) +\n  \\<Phi> l' -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> l +\n  2\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n (d + 1) x l + 2) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle> =\n  real (T_ins3 n (d + 1) x l) +\n  6 * e * real (imbal \\<langle>l', y, r\\<rangle>) +\n  \\<Phi> l' -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> l +\n  2\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots>\n        \\<le> T_ins3 n (d+1) x l + \\<Phi> l' - \\<Phi> l + 6*e*imbal ?t' - 6*e*imbal ?t + 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n (d + 1) x l) +\n    6 * e * real (imbal \\<langle>l', y, r\\<rangle>) +\n    \\<Phi> l' -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n    \\<Phi> l +\n    2\n    \\<le> real (T_ins3 n (d + 1) x l) + \\<Phi> l' - \\<Phi> l +\n          6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n          6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n          2", "by linarith"], ["proof (state)\nthis:\n  real (T_ins3 n (d + 1) x l) +\n  6 * e * real (imbal \\<langle>l', y, r\\<rangle>) +\n  \\<Phi> l' -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> l +\n  2\n  \\<le> real (T_ins3 n (d + 1) x l) + \\<Phi> l' - \\<Phi> l +\n        6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n        6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n        2\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n (d + 1) x l) +\n  6 * e * real (imbal \\<langle>l', y, r\\<rangle>) +\n  \\<Phi> l' -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> l +\n  2\n  \\<le> real (T_ins3 n (d + 1) x l) + \\<Phi> l' - \\<Phi> l +\n        6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n        6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n        2\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> \\<le> (6*e+2) * height l + 6*e*imbal ?t' - 6*e*imbal ?t + 6*e + 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n (d + 1) x l) + \\<Phi> l' - \\<Phi> l +\n    6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n    2\n    \\<le> (6 * e + 2) * real (height l) +\n          6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n          6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n          6 * e +\n          4", "using Node.IH(1)[OF Bal2 *]"], ["proof (prove)\nusing this:\n  real (T_ins3 n (d + 1) x l) + \\<Phi> l' - \\<Phi> l\n  \\<le> (6 * e + 2) * real (height l + 1)\n\ngoal (1 subgoal):\n 1. real (T_ins3 n (d + 1) x l) + \\<Phi> l' - \\<Phi> l +\n    6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n    2\n    \\<le> (6 * e + 2) * real (height l) +\n          6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n          6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n          6 * e +\n          4", "by(simp add: ring_distribs)"], ["proof (state)\nthis:\n  real (T_ins3 n (d + 1) x l) + \\<Phi> l' - \\<Phi> l +\n  6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  2\n  \\<le> (6 * e + 2) * real (height l) +\n        6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n        6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n        6 * e +\n        4\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n (d + 1) x l) + \\<Phi> l' - \\<Phi> l +\n  6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  2\n  \\<le> (6 * e + 2) * real (height l) +\n        6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n        6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n        6 * e +\n        4\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> = (6*e+2) * height l + 6*e*(real(imbal ?t') - imbal ?t) + 6*e + 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (6 * e + 2) * real (height l) +\n    6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n    6 * e +\n    4 =\n    (6 * e + 2) * real (height l) +\n    6 * e *\n    (real (imbal \\<langle>l', y, r\\<rangle>) -\n     real (imbal \\<langle>l, y, r\\<rangle>)) +\n    6 * e +\n    4", "by(simp add: algebra_simps)"], ["proof (state)\nthis:\n  (6 * e + 2) * real (height l) +\n  6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  6 * e +\n  4 =\n  (6 * e + 2) * real (height l) +\n  6 * e *\n  (real (imbal \\<langle>l', y, r\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  6 * e +\n  4\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  (6 * e + 2) * real (height l) +\n  6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  6 * e +\n  4 =\n  (6 * e + 2) * real (height l) +\n  6 * e *\n  (real (imbal \\<langle>l', y, r\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  6 * e +\n  4\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> \\<le> (6*e+2) * height l + 6*e + 6*e + 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (6 * e + 2) * real (height l) +\n    6 * e *\n    (real (imbal \\<langle>l', y, r\\<rangle>) -\n     real (imbal \\<langle>l, y, r\\<rangle>)) +\n    6 * e +\n    4\n    \\<le> (6 * e + 2) * real (height l) + 6 * e + 6 * e + 4", "using imbal_ins_Bal[OF Bal, of False y r] e0"], ["proof (prove)\nusing this:\n  real (imbal (node False l' y r)) - real (imbal (node False l y r)) \\<le> 1\n  0 < e\n\ngoal (1 subgoal):\n 1. (6 * e + 2) * real (height l) +\n    6 * e *\n    (real (imbal \\<langle>l', y, r\\<rangle>) -\n     real (imbal \\<langle>l, y, r\\<rangle>)) +\n    6 * e +\n    4\n    \\<le> (6 * e + 2) * real (height l) + 6 * e + 6 * e + 4", "by (simp del: times_divide_eq_left)"], ["proof (state)\nthis:\n  (6 * e + 2) * real (height l) +\n  6 * e *\n  (real (imbal \\<langle>l', y, r\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  6 * e +\n  4\n  \\<le> (6 * e + 2) * real (height l) + 6 * e + 6 * e + 4\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  (6 * e + 2) * real (height l) +\n  6 * e *\n  (real (imbal \\<langle>l', y, r\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  6 * e +\n  4\n  \\<le> (6 * e + 2) * real (height l) + 6 * e + 6 * e + 4\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> = (6*e+2) * (height l + 1) + 6*e + 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (6 * e + 2) * real (height l) + 6 * e + 6 * e + 4 =\n    (6 * e + 2) * real (height l + 1) + 6 * e + 2", "by (simp add: ring_distribs)"], ["proof (state)\nthis:\n  (6 * e + 2) * real (height l) + 6 * e + 6 * e + 4 =\n  (6 * e + 2) * real (height l + 1) + 6 * e + 2\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  (6 * e + 2) * real (height l) + 6 * e + 6 * e + 4 =\n  (6 * e + 2) * real (height l + 1) + 6 * e + 2\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> \\<le> (6*e+2) * (max (height l) (height r) + 1) + 6*e + 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (6 * e + 2) * real (height l + 1) + 6 * e + 2\n    \\<le> (6 * e + 2) * real (max (height l) (height r) + 1) + 6 * e + 2", "using e0"], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. (6 * e + 2) * real (height l + 1) + 6 * e + 2\n    \\<le> (6 * e + 2) * real (max (height l) (height r) + 1) + 6 * e + 2", "by (simp add: mult_left_mono)"], ["proof (state)\nthis:\n  (6 * e + 2) * real (height l + 1) + 6 * e + 2\n  \\<le> (6 * e + 2) * real (max (height l) (height r) + 1) + 6 * e + 2\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  (6 * e + 2) * real (height l + 1) + 6 * e + 2\n  \\<le> (6 * e + 2) * real (max (height l) (height r) + 1) + 6 * e + 2\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> \\<le> (6*e+2) * (height ?t + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (6 * e + 2) * real (max (height l) (height r) + 1) + 6 * e + 2\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "using e0"], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. (6 * e + 2) * real (max (height l) (height r) + 1) + 6 * e + 2\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "by(simp add: field_simps)"], ["proof (state)\nthis:\n  (6 * e + 2) * real (max (height l) (height r) + 1) + 6 * e + 2\n  \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x l = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "finally"], ["proof (chain)\npicking this:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "."], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "case (Unbal2 l' nl' hl')"], ["proof (state)\nthis:\n  ins3 n (d + 1) x l = Unbal2 l' nl' hl'\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have Unbal: \"ins n (d + 1) x l = Unbal l'\"\n        and inv: \"nl' = size l'\" \"hl' = height l'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ins n (d + 1) x l = Unbal l' &&& nl' = size l' &&& hl' = height l'", "using  Unbal2 ins3_ins2[OF *]"], ["proof (prove)\nusing this:\n  ins3 n (d + 1) x l = Unbal2 l' nl' hl'\n  ins3 n (d + 1) ?x l = ins2 n (d + 1) ?x l\n\ngoal (1 subgoal):\n 1. ins n (d + 1) x l = Unbal l' &&& nl' = size l' &&& hl' = height l'", "by(auto simp add: ins2_iff_ins(3))"], ["proof (state)\nthis:\n  ins n (d + 1) x l = Unbal l'\n  nl' = size l'\n  hl' = height l'\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have bal_l': \"bal_i (size l') (height l')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal_i (size l') (height l')", "by(fact bal_i_ins_Unbal[OF Unbal])"], ["proof (state)\nthis:\n  bal_i (size l') (height l')\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "let ?t = \"Node l y r\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "let ?h = \"height ?t\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "let ?n = \"size ?t\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "let ?t' = \"Node l' y r\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "let ?h' = \"height ?t'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "let ?n' = \"size ?t'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have bal_t': \"\\<not> bal_i ?n' ?h'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> bal_i (size \\<langle>l', y, r\\<rangle>)\n            (height \\<langle>l', y, r\\<rangle>)", "using ls Unbal Bal"], ["proof (prove)\nusing this:\n  x < y\n  ins n (d + 1) x l = Unbal l'\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n\ngoal (1 subgoal):\n 1. \\<not> bal_i (size \\<langle>l', y, r\\<rangle>)\n            (height \\<langle>l', y, r\\<rangle>)", "by (auto)"], ["proof (state)\nthis:\n  \\<not> bal_i (size \\<langle>l', y, r\\<rangle>)\n          (height \\<langle>l', y, r\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "hence t': \"t' = balance_tree ?t'\""], ["proof (prove)\nusing this:\n  \\<not> bal_i (size \\<langle>l', y, r\\<rangle>)\n          (height \\<langle>l', y, r\\<rangle>)\n\ngoal (1 subgoal):\n 1. t' = balance_tree \\<langle>l', y, r\\<rangle>", "using ls Unbal Bal"], ["proof (prove)\nusing this:\n  \\<not> bal_i (size \\<langle>l', y, r\\<rangle>)\n          (height \\<langle>l', y, r\\<rangle>)\n  x < y\n  ins n (d + 1) x l = Unbal l'\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n\ngoal (1 subgoal):\n 1. t' = balance_tree \\<langle>l', y, r\\<rangle>", "by (auto)"], ["proof (state)\nthis:\n  t' = balance_tree \\<langle>l', y, r\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have hl': \"height r < height l'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. height r < height l'", "by(fact height_Unbal_l[OF Unbal Node.prems(2)])"], ["proof (state)\nthis:\n  height r < height l'\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"T_ins3 n d x ?t + \\<Phi> t' - \\<Phi> ?t = T_ins3 n d x ?t - \\<Phi> ?t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle> =\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n    \\<Phi> \\<langle>l, y, r\\<rangle>", "by(simp add: t' \\<Phi>_wbalanced wbalanced_balance_tree)"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle> =\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle> =\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> =  T_ins3 n d x ?t - 6*e * imbal ?t - \\<Phi> l - \\<Phi> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n    \\<Phi> \\<langle>l, y, r\\<rangle> =\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n    \\<Phi> l -\n    \\<Phi> r", "by simp"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> \\<langle>l, y, r\\<rangle> =\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> l -\n  \\<Phi> r\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> \\<langle>l, y, r\\<rangle> =\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> l -\n  \\<Phi> r\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> \\<le> T_ins3 n d x ?t - 6*e * imbal ?t - \\<Phi> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n    \\<Phi> l -\n    \\<Phi> r\n    \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n          6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n          \\<Phi> l", "using \\<Phi>_nn[of r]"], ["proof (prove)\nusing this:\n  0 \\<le> \\<Phi> r\n\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n    \\<Phi> l -\n    \\<Phi> r\n    \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n          6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n          \\<Phi> l", "by linarith"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> l -\n  \\<Phi> r\n  \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n        6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n        \\<Phi> l\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> l -\n  \\<Phi> r\n  \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n        6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n        \\<Phi> l\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> \\<le> T_ins3 n d x ?t - 6*e * imbal ?t' - \\<Phi> l + 6*e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n    \\<Phi> l\n    \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n          6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n          \\<Phi> l +\n          6 * e", "using mult_left_mono[OF imbal_ins_Unbal[OF Unbal, of False y r], of \"4*e\"] e0"], ["proof (prove)\nusing this:\n  0 \\<le> 4 * e \\<Longrightarrow>\n  4 * e *\n  (real (imbal (node False l' y r)) - real (imbal (node False l y r)))\n  \\<le> 4 * e * 1\n  0 < e\n\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n    \\<Phi> l\n    \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n          6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n          \\<Phi> l +\n          6 * e", "apply (simp only: node.simps if_False ring_distribs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> 4 * e \\<Longrightarrow>\n             4 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n             4 * e * real (imbal \\<langle>l, y, r\\<rangle>)\n             \\<le> 4 * e * 1;\n     0 < e\\<rbrakk>\n    \\<Longrightarrow> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n                      6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n                      \\<Phi> l\n                      \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n                            6 * e *\n                            real (imbal \\<langle>l', y, r\\<rangle>) -\n                            \\<Phi> l +\n                            6 * e", "by (simp)"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> l\n  \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n        6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n        \\<Phi> l +\n        6 * e\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> l\n  \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n        6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n        \\<Phi> l +\n        6 * e\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> \\<le> real(T_ins3 n d x ?t) - 6*(size1 ?t' - e) - \\<Phi> l + 6*e + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n    \\<Phi> l +\n    6 * e\n    \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n          6 * (real (size1 \\<langle>l', y, r\\<rangle>) - e) -\n          \\<Phi> l +\n          6 * e +\n          1", "using imbal_size[OF bal_t'] hl' bal_l'"], ["proof (prove)\nusing this:\n  \\<lbrakk>bal_i (size (hchild \\<langle>l', y, r\\<rangle>))\n            (height (hchild \\<langle>l', y, r\\<rangle>));\n   \\<langle>l', y, r\\<rangle> \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> real (size1 \\<langle>l', y, r\\<rangle>)\n                    \\<le> e * real (imbal \\<langle>l', y, r\\<rangle> + 1)\n  height r < height l'\n  bal_i (size l') (height l')\n\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n    \\<Phi> l +\n    6 * e\n    \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n          6 * (real (size1 \\<langle>l', y, r\\<rangle>) - e) -\n          \\<Phi> l +\n          6 * e +\n          1", "by(simp add: ring_distribs)"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n  \\<Phi> l +\n  6 * e\n  \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n        6 * (real (size1 \\<langle>l', y, r\\<rangle>) - e) -\n        \\<Phi> l +\n        6 * e +\n        1\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n  \\<Phi> l +\n  6 * e\n  \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n        6 * (real (size1 \\<langle>l', y, r\\<rangle>) - e) -\n        \\<Phi> l +\n        6 * e +\n        1\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> = real(T_ins3 n (d+1) x l) + 2*size1 l' + 4*size1 r - 4*size1 ?t' - \\<Phi> l + 6*e + 6*e + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n    6 * (real (size1 \\<langle>l', y, r\\<rangle>) - e) -\n    \\<Phi> l +\n    6 * e +\n    1 =\n    real (T_ins3 n (d + 1) x l) + real (2 * size1 l') + real (4 * size1 r) -\n    real (4 * size1 \\<langle>l', y, r\\<rangle>) -\n    \\<Phi> l +\n    6 * e +\n    6 * e +\n    1", "using ls Unbal2 inv bal_t' hl'"], ["proof (prove)\nusing this:\n  x < y\n  ins3 n (d + 1) x l = Unbal2 l' nl' hl'\n  nl' = size l'\n  hl' = height l'\n  \\<not> bal_i (size \\<langle>l', y, r\\<rangle>)\n          (height \\<langle>l', y, r\\<rangle>)\n  height r < height l'\n\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n    6 * (real (size1 \\<langle>l', y, r\\<rangle>) - e) -\n    \\<Phi> l +\n    6 * e +\n    1 =\n    real (T_ins3 n (d + 1) x l) + real (2 * size1 l') + real (4 * size1 r) -\n    real (4 * size1 \\<langle>l', y, r\\<rangle>) -\n    \\<Phi> l +\n    6 * e +\n    6 * e +\n    1", "by (simp add: T_bal_tree max_def size1_size)"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  6 * (real (size1 \\<langle>l', y, r\\<rangle>) - e) -\n  \\<Phi> l +\n  6 * e +\n  1 =\n  real (T_ins3 n (d + 1) x l) + real (2 * size1 l') + real (4 * size1 r) -\n  real (4 * size1 \\<langle>l', y, r\\<rangle>) -\n  \\<Phi> l +\n  6 * e +\n  6 * e +\n  1\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  6 * (real (size1 \\<langle>l', y, r\\<rangle>) - e) -\n  \\<Phi> l +\n  6 * e +\n  1 =\n  real (T_ins3 n (d + 1) x l) + real (2 * size1 l') + real (4 * size1 r) -\n  real (4 * size1 \\<langle>l', y, r\\<rangle>) -\n  \\<Phi> l +\n  6 * e +\n  6 * e +\n  1\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> = real(T_ins3 n (d+1) x l) - 2*size1 l' - \\<Phi> l + 6*e + 6*e + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n (d + 1) x l) + real (2 * size1 l') + real (4 * size1 r) -\n    real (4 * size1 \\<langle>l', y, r\\<rangle>) -\n    \\<Phi> l +\n    6 * e +\n    6 * e +\n    1 =\n    real (T_ins3 n (d + 1) x l) - real (2 * size1 l') - \\<Phi> l + 6 * e +\n    6 * e +\n    1", "by simp"], ["proof (state)\nthis:\n  real (T_ins3 n (d + 1) x l) + real (2 * size1 l') + real (4 * size1 r) -\n  real (4 * size1 \\<langle>l', y, r\\<rangle>) -\n  \\<Phi> l +\n  6 * e +\n  6 * e +\n  1 =\n  real (T_ins3 n (d + 1) x l) - real (2 * size1 l') - \\<Phi> l + 6 * e +\n  6 * e +\n  1\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n (d + 1) x l) + real (2 * size1 l') + real (4 * size1 r) -\n  real (4 * size1 \\<langle>l', y, r\\<rangle>) -\n  \\<Phi> l +\n  6 * e +\n  6 * e +\n  1 =\n  real (T_ins3 n (d + 1) x l) - real (2 * size1 l') - \\<Phi> l + 6 * e +\n  6 * e +\n  1\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> \\<le> (6*e + 2) * height l + 6*e + 6*e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n (d + 1) x l) - real (2 * size1 l') - \\<Phi> l + 6 * e +\n    6 * e +\n    1\n    \\<le> (6 * e + 2) * real (height l) + 6 * e + 6 * e", "using amor_Unbal[OF Unbal2 *] ins_size(2)[OF Unbal] \\<Phi>_nn[of l']"], ["proof (prove)\nusing this:\n  real (T_ins3 n (d + 1) x l) + \\<Phi> l' - \\<Phi> l\n  \\<le> real (2 * size1 l) + (6 * e + 1) * real (height l)\n  size l' = size l + 1\n  0 \\<le> \\<Phi> l'\n\ngoal (1 subgoal):\n 1. real (T_ins3 n (d + 1) x l) - real (2 * size1 l') - \\<Phi> l + 6 * e +\n    6 * e +\n    1\n    \\<le> (6 * e + 2) * real (height l) + 6 * e + 6 * e", "by(simp add: ring_distribs size1_size)"], ["proof (state)\nthis:\n  real (T_ins3 n (d + 1) x l) - real (2 * size1 l') - \\<Phi> l + 6 * e +\n  6 * e +\n  1\n  \\<le> (6 * e + 2) * real (height l) + 6 * e + 6 * e\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n (d + 1) x l) - real (2 * size1 l') - \\<Phi> l + 6 * e +\n  6 * e +\n  1\n  \\<le> (6 * e + 2) * real (height l) + 6 * e + 6 * e\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> \\<le> (6*e + 2) * (height l + 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (6 * e + 2) * real (height l) + 6 * e + 6 * e\n    \\<le> (6 * e + 2) * real (height l + 2)", "by (simp add: ring_distribs)"], ["proof (state)\nthis:\n  (6 * e + 2) * real (height l) + 6 * e + 6 * e\n  \\<le> (6 * e + 2) * real (height l + 2)\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  (6 * e + 2) * real (height l) + 6 * e + 6 * e\n  \\<le> (6 * e + 2) * real (height l + 2)\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> \\<le> (6*e+2) * (height \\<langle>l, y, r\\<rangle> + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (6 * e + 2) * real (height l + 2)\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "using e0"], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. (6 * e + 2) * real (height l + 2)\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "by (simp add: mult_mono del: times_divide_eq_left)"], ["proof (state)\nthis:\n  (6 * e + 2) * real (height l + 2)\n  \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x l = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "finally"], ["proof (chain)\npicking this:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "by linarith"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. y < x \\<Longrightarrow>\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. y < x \\<Longrightarrow>\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "case eq"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. y < x \\<Longrightarrow>\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "using Node.prems"], ["proof (prove)\nusing this:\n  x = y\n  ins3 n d x \\<langle>l, y, r\\<rangle> = Bal2 t'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "by(simp)"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "case gr"], ["proof (state)\nthis:\n  y < x\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have *: \"bal_i n (height r + (d+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal_i n (height r + (d + 1))", "using Node.prems(2)"], ["proof (prove)\nusing this:\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n\ngoal (1 subgoal):\n 1. bal_i n (height r + (d + 1))", "by (simp add: mono_bal_i')"], ["proof (state)\nthis:\n  bal_i n (height r + (d + 1))\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "proof (cases \"ins3 n (d+1) x r\")"], ["proof (state)\ngoal (3 subgoals):\n 1. ins3 n (d + 1) x r = Same2 \\<Longrightarrow>\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 3. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "case Same2"], ["proof (state)\nthis:\n  ins3 n (d + 1) x r = Same2\n\ngoal (3 subgoals):\n 1. ins3 n (d + 1) x r = Same2 \\<Longrightarrow>\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 3. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ins3 n (d + 1) x r = Same2\n\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "using Node gr"], ["proof (prove)\nusing this:\n  ins3 n (d + 1) x r = Same2\n  \\<lbrakk>ins3 n ?d x l = Bal2 ?t'; bal_i n (height l + ?d)\\<rbrakk>\n  \\<Longrightarrow> real (T_ins3 n ?d x l) + \\<Phi> ?t' - \\<Phi> l\n                    \\<le> (6 * e + 2) * real (height l + 1)\n  \\<lbrakk>ins3 n ?d x r = Bal2 ?t'; bal_i n (height r + ?d)\\<rbrakk>\n  \\<Longrightarrow> real (T_ins3 n ?d x r) + \\<Phi> ?t' - \\<Phi> r\n                    \\<le> (6 * e + 2) * real (height r + 1)\n  ins3 n d x \\<langle>l, y, r\\<rangle> = Bal2 t'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n  y < x\n\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "by (simp)"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "case (Bal2 r')"], ["proof (state)\nthis:\n  ins3 n (d + 1) x r = Bal2 r'\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have Bal: \"ins n (d + 1) x r = Bal r'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ins n (d + 1) x r = Bal r'", "using \"*\" Bal2"], ["proof (prove)\nusing this:\n  bal_i n (height r + (d + 1))\n  ins3 n (d + 1) x r = Bal2 r'\n\ngoal (1 subgoal):\n 1. ins n (d + 1) x r = Bal r'", "by (auto simp: ins3_ins2 ins2_iff_ins(2))"], ["proof (state)\nthis:\n  ins n (d + 1) x r = Bal r'\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "let ?t = \"Node l y r\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "let ?t' = \"Node l y r'\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "from Bal2"], ["proof (chain)\npicking this:\n  ins3 n (d + 1) x r = Bal2 r'", "have t': \"t' = ?t'\""], ["proof (prove)\nusing this:\n  ins3 n (d + 1) x r = Bal2 r'\n\ngoal (1 subgoal):\n 1. t' = \\<langle>l, y, r'\\<rangle>", "using Node.prems gr"], ["proof (prove)\nusing this:\n  ins3 n (d + 1) x r = Bal2 r'\n  ins3 n d x \\<langle>l, y, r\\<rangle> = Bal2 t'\n  bal_i n (height \\<langle>l, y, r\\<rangle> + d)\n  y < x\n\ngoal (1 subgoal):\n 1. t' = \\<langle>l, y, r'\\<rangle>", "by (simp)"], ["proof (state)\nthis:\n  t' = \\<langle>l, y, r'\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"T_ins3 n d x ?t + \\<Phi> t' - \\<Phi> ?t = T_ins3 n (d+1) x r + 2 + \\<Phi> t' - \\<Phi> ?t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle> =\n    real (T_ins3 n (d + 1) x r + 2) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>", "using gr Bal2"], ["proof (prove)\nusing this:\n  y < x\n  ins3 n (d + 1) x r = Bal2 r'\n\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle> =\n    real (T_ins3 n (d + 1) x r + 2) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>", "by simp"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle> =\n  real (T_ins3 n (d + 1) x r + 2) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle> =\n  real (T_ins3 n (d + 1) x r + 2) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots>\n        = T_ins3 n (d+1) x r + 6*e*imbal ?t' + \\<Phi> r' - 6*e*imbal ?t - \\<Phi> r + 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n (d + 1) x r + 2) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle> =\n    real (T_ins3 n (d + 1) x r) +\n    6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) +\n    \\<Phi> r' -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n    \\<Phi> r +\n    2", "using t'"], ["proof (prove)\nusing this:\n  t' = \\<langle>l, y, r'\\<rangle>\n\ngoal (1 subgoal):\n 1. real (T_ins3 n (d + 1) x r + 2) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle> =\n    real (T_ins3 n (d + 1) x r) +\n    6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) +\n    \\<Phi> r' -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n    \\<Phi> r +\n    2", "by simp"], ["proof (state)\nthis:\n  real (T_ins3 n (d + 1) x r + 2) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle> =\n  real (T_ins3 n (d + 1) x r) +\n  6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) +\n  \\<Phi> r' -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> r +\n  2\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n (d + 1) x r + 2) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle> =\n  real (T_ins3 n (d + 1) x r) +\n  6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) +\n  \\<Phi> r' -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> r +\n  2\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots>\n        \\<le> T_ins3 n (d+1) x r + \\<Phi> r' - \\<Phi> r + 6*e*imbal ?t' - 6*e*imbal ?t + 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n (d + 1) x r) +\n    6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) +\n    \\<Phi> r' -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n    \\<Phi> r +\n    2\n    \\<le> real (T_ins3 n (d + 1) x r) + \\<Phi> r' - \\<Phi> r +\n          6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n          6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n          2", "by linarith"], ["proof (state)\nthis:\n  real (T_ins3 n (d + 1) x r) +\n  6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) +\n  \\<Phi> r' -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> r +\n  2\n  \\<le> real (T_ins3 n (d + 1) x r) + \\<Phi> r' - \\<Phi> r +\n        6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n        6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n        2\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n (d + 1) x r) +\n  6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) +\n  \\<Phi> r' -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> r +\n  2\n  \\<le> real (T_ins3 n (d + 1) x r) + \\<Phi> r' - \\<Phi> r +\n        6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n        6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n        2\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> \\<le> (6*e+2) * height r + 6*e*imbal ?t' - 6*e*imbal ?t + 6*e + 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n (d + 1) x r) + \\<Phi> r' - \\<Phi> r +\n    6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n    2\n    \\<le> (6 * e + 2) * real (height r) +\n          6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n          6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n          6 * e +\n          4", "using Node.IH(2)[OF Bal2 *]"], ["proof (prove)\nusing this:\n  real (T_ins3 n (d + 1) x r) + \\<Phi> r' - \\<Phi> r\n  \\<le> (6 * e + 2) * real (height r + 1)\n\ngoal (1 subgoal):\n 1. real (T_ins3 n (d + 1) x r) + \\<Phi> r' - \\<Phi> r +\n    6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n    2\n    \\<le> (6 * e + 2) * real (height r) +\n          6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n          6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n          6 * e +\n          4", "by(simp add: ring_distribs)"], ["proof (state)\nthis:\n  real (T_ins3 n (d + 1) x r) + \\<Phi> r' - \\<Phi> r +\n  6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  2\n  \\<le> (6 * e + 2) * real (height r) +\n        6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n        6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n        6 * e +\n        4\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n (d + 1) x r) + \\<Phi> r' - \\<Phi> r +\n  6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  2\n  \\<le> (6 * e + 2) * real (height r) +\n        6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n        6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n        6 * e +\n        4\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> = (6*e+2) * height r + 6*e*(real(imbal ?t') - imbal ?t) + 6*e + 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (6 * e + 2) * real (height r) +\n    6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n    6 * e +\n    4 =\n    (6 * e + 2) * real (height r) +\n    6 * e *\n    (real (imbal \\<langle>l, y, r'\\<rangle>) -\n     real (imbal \\<langle>l, y, r\\<rangle>)) +\n    6 * e +\n    4", "by(simp add: algebra_simps)"], ["proof (state)\nthis:\n  (6 * e + 2) * real (height r) +\n  6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  6 * e +\n  4 =\n  (6 * e + 2) * real (height r) +\n  6 * e *\n  (real (imbal \\<langle>l, y, r'\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  6 * e +\n  4\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  (6 * e + 2) * real (height r) +\n  6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  6 * e +\n  4 =\n  (6 * e + 2) * real (height r) +\n  6 * e *\n  (real (imbal \\<langle>l, y, r'\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  6 * e +\n  4\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> \\<le> (6*e+2) * height r + 6*e + 6*e + 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (6 * e + 2) * real (height r) +\n    6 * e *\n    (real (imbal \\<langle>l, y, r'\\<rangle>) -\n     real (imbal \\<langle>l, y, r\\<rangle>)) +\n    6 * e +\n    4\n    \\<le> (6 * e + 2) * real (height r) + 6 * e + 6 * e + 4", "using imbal_ins_Bal[OF Bal, of True y l] e0"], ["proof (prove)\nusing this:\n  real (imbal (node True r' y l)) - real (imbal (node True r y l)) \\<le> 1\n  0 < e\n\ngoal (1 subgoal):\n 1. (6 * e + 2) * real (height r) +\n    6 * e *\n    (real (imbal \\<langle>l, y, r'\\<rangle>) -\n     real (imbal \\<langle>l, y, r\\<rangle>)) +\n    6 * e +\n    4\n    \\<le> (6 * e + 2) * real (height r) + 6 * e + 6 * e + 4", "by (simp del: times_divide_eq_left)"], ["proof (state)\nthis:\n  (6 * e + 2) * real (height r) +\n  6 * e *\n  (real (imbal \\<langle>l, y, r'\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  6 * e +\n  4\n  \\<le> (6 * e + 2) * real (height r) + 6 * e + 6 * e + 4\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  (6 * e + 2) * real (height r) +\n  6 * e *\n  (real (imbal \\<langle>l, y, r'\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  6 * e +\n  4\n  \\<le> (6 * e + 2) * real (height r) + 6 * e + 6 * e + 4\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> = (6*e+2) * (height r + 1) + 6*e + 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (6 * e + 2) * real (height r) + 6 * e + 6 * e + 4 =\n    (6 * e + 2) * real (height r + 1) + 6 * e + 2", "by (simp add: ring_distribs)"], ["proof (state)\nthis:\n  (6 * e + 2) * real (height r) + 6 * e + 6 * e + 4 =\n  (6 * e + 2) * real (height r + 1) + 6 * e + 2\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  (6 * e + 2) * real (height r) + 6 * e + 6 * e + 4 =\n  (6 * e + 2) * real (height r + 1) + 6 * e + 2\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> \\<le> (6*e+2) * (max (height l) (height r) + 1) + 6*e + 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (6 * e + 2) * real (height r + 1) + 6 * e + 2\n    \\<le> (6 * e + 2) * real (max (height l) (height r) + 1) + 6 * e + 2", "using e0"], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. (6 * e + 2) * real (height r + 1) + 6 * e + 2\n    \\<le> (6 * e + 2) * real (max (height l) (height r) + 1) + 6 * e + 2", "by (simp add: mult_left_mono)"], ["proof (state)\nthis:\n  (6 * e + 2) * real (height r + 1) + 6 * e + 2\n  \\<le> (6 * e + 2) * real (max (height l) (height r) + 1) + 6 * e + 2\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  (6 * e + 2) * real (height r + 1) + 6 * e + 2\n  \\<le> (6 * e + 2) * real (max (height l) (height r) + 1) + 6 * e + 2\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> = (6*e+2) * (height ?t + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (6 * e + 2) * real (max (height l) (height r) + 1) + 6 * e + 2 =\n    (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "using e0"], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. (6 * e + 2) * real (max (height l) (height r) + 1) + 6 * e + 2 =\n    (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "by(simp add: field_simps)"], ["proof (state)\nthis:\n  (6 * e + 2) * real (max (height l) (height r) + 1) + 6 * e + 2 =\n  (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 n (d + 1) x r = Bal2 x2 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n 2. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "finally"], ["proof (chain)\npicking this:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "."], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "case (Unbal2 r' nr' hr')"], ["proof (state)\nthis:\n  ins3 n (d + 1) x r = Unbal2 r' nr' hr'\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have Unbal: \"ins n (d + 1) x r = Unbal r'\"\n        and inv: \"nr' = size r'\" \"hr' = height r'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ins n (d + 1) x r = Unbal r' &&& nr' = size r' &&& hr' = height r'", "using  Unbal2 ins3_ins2[OF *]"], ["proof (prove)\nusing this:\n  ins3 n (d + 1) x r = Unbal2 r' nr' hr'\n  ins3 n (d + 1) ?x r = ins2 n (d + 1) ?x r\n\ngoal (1 subgoal):\n 1. ins n (d + 1) x r = Unbal r' &&& nr' = size r' &&& hr' = height r'", "by(auto simp add: ins2_iff_ins(3))"], ["proof (state)\nthis:\n  ins n (d + 1) x r = Unbal r'\n  nr' = size r'\n  hr' = height r'\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have bal_r': \"bal_i (size r') (height r')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal_i (size r') (height r')", "by(fact bal_i_ins_Unbal[OF Unbal])"], ["proof (state)\nthis:\n  bal_i (size r') (height r')\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "let ?t = \"Node l y r\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "let ?h = \"height ?t\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "let ?n = \"size ?t\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "let ?t' = \"Node l y r'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "let ?h' = \"height ?t'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "let ?n' = \"size ?t'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have bal_t': \"\\<not> bal_i ?n' ?h'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> bal_i (size \\<langle>l, y, r'\\<rangle>)\n            (height \\<langle>l, y, r'\\<rangle>)", "using gr Unbal Bal"], ["proof (prove)\nusing this:\n  y < x\n  ins n (d + 1) x r = Unbal r'\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n\ngoal (1 subgoal):\n 1. \\<not> bal_i (size \\<langle>l, y, r'\\<rangle>)\n            (height \\<langle>l, y, r'\\<rangle>)", "by (auto)"], ["proof (state)\nthis:\n  \\<not> bal_i (size \\<langle>l, y, r'\\<rangle>)\n          (height \\<langle>l, y, r'\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "hence t': \"t' = balance_tree ?t'\""], ["proof (prove)\nusing this:\n  \\<not> bal_i (size \\<langle>l, y, r'\\<rangle>)\n          (height \\<langle>l, y, r'\\<rangle>)\n\ngoal (1 subgoal):\n 1. t' = balance_tree \\<langle>l, y, r'\\<rangle>", "using gr Unbal Bal"], ["proof (prove)\nusing this:\n  \\<not> bal_i (size \\<langle>l, y, r'\\<rangle>)\n          (height \\<langle>l, y, r'\\<rangle>)\n  y < x\n  ins n (d + 1) x r = Unbal r'\n  ins n d x \\<langle>l, y, r\\<rangle> = Bal t'\n\ngoal (1 subgoal):\n 1. t' = balance_tree \\<langle>l, y, r'\\<rangle>", "by (auto)"], ["proof (state)\nthis:\n  t' = balance_tree \\<langle>l, y, r'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have hr': \"height l < height r'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. height l < height r'", "by(fact height_Unbal_r[OF Unbal Node.prems(2)])"], ["proof (state)\nthis:\n  height l < height r'\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"T_ins3 n d x ?t + \\<Phi> t' - \\<Phi> ?t = T_ins3 n d x ?t - \\<Phi> ?t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle> =\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n    \\<Phi> \\<langle>l, y, r\\<rangle>", "by(simp add: t' \\<Phi>_wbalanced wbalanced_balance_tree)"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle> =\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle> =\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> =  T_ins3 n d x ?t - 6*e * imbal ?t - \\<Phi> r - \\<Phi> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n    \\<Phi> \\<langle>l, y, r\\<rangle> =\n    real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n    \\<Phi> r -\n    \\<Phi> l", "by simp"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> \\<langle>l, y, r\\<rangle> =\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> r -\n  \\<Phi> l\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> \\<langle>l, y, r\\<rangle> =\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> r -\n  \\<Phi> l\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> \\<le> T_ins3 n d x ?t - 6*e * imbal ?t - \\<Phi> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n    \\<Phi> r -\n    \\<Phi> l\n    \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n          6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n          \\<Phi> r", "using \\<Phi>_nn[of l]"], ["proof (prove)\nusing this:\n  0 \\<le> \\<Phi> l\n\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n    \\<Phi> r -\n    \\<Phi> l\n    \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n          6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n          \\<Phi> r", "by linarith"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> r -\n  \\<Phi> l\n  \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n        6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n        \\<Phi> r\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> r -\n  \\<Phi> l\n  \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n        6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n        \\<Phi> r\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> \\<le> T_ins3 n d x ?t - 6*e * imbal ?t' - \\<Phi> r + 6*e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n    \\<Phi> r\n    \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n          6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n          \\<Phi> r +\n          6 * e", "using mult_left_mono[OF imbal_ins_Unbal[OF Unbal, of True y l], of \"4*e\"] e0"], ["proof (prove)\nusing this:\n  0 \\<le> 4 * e \\<Longrightarrow>\n  4 * e * (real (imbal (node True r' y l)) - real (imbal (node True r y l)))\n  \\<le> 4 * e * 1\n  0 < e\n\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n    \\<Phi> r\n    \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n          6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n          \\<Phi> r +\n          6 * e", "apply (simp only: node.simps if_True ring_distribs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> 4 * e \\<Longrightarrow>\n             4 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n             4 * e * real (imbal \\<langle>l, y, r\\<rangle>)\n             \\<le> 4 * e * 1;\n     0 < e\\<rbrakk>\n    \\<Longrightarrow> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n                      6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n                      \\<Phi> r\n                      \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n                            6 * e *\n                            real (imbal \\<langle>l, y, r'\\<rangle>) -\n                            \\<Phi> r +\n                            6 * e", "by (simp)"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> r\n  \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n        6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n        \\<Phi> r +\n        6 * e\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) -\n  \\<Phi> r\n  \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n        6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n        \\<Phi> r +\n        6 * e\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> \\<le> real(T_ins3 n d x ?t) - 6*(size1 ?t' - e) - \\<Phi> r + 6*e + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n    \\<Phi> r +\n    6 * e\n    \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n          6 * (real (size1 \\<langle>l, y, r'\\<rangle>) - e) -\n          \\<Phi> r +\n          6 * e +\n          1", "using imbal_size[OF bal_t'] hr' bal_r'"], ["proof (prove)\nusing this:\n  \\<lbrakk>bal_i (size (hchild \\<langle>l, y, r'\\<rangle>))\n            (height (hchild \\<langle>l, y, r'\\<rangle>));\n   \\<langle>l, y, r'\\<rangle> \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> real (size1 \\<langle>l, y, r'\\<rangle>)\n                    \\<le> e * real (imbal \\<langle>l, y, r'\\<rangle> + 1)\n  height l < height r'\n  bal_i (size r') (height r')\n\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n    \\<Phi> r +\n    6 * e\n    \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n          6 * (real (size1 \\<langle>l, y, r'\\<rangle>) - e) -\n          \\<Phi> r +\n          6 * e +\n          1", "by (simp add: ring_distribs)"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n  \\<Phi> r +\n  6 * e\n  \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n        6 * (real (size1 \\<langle>l, y, r'\\<rangle>) - e) -\n        \\<Phi> r +\n        6 * e +\n        1\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n  \\<Phi> r +\n  6 * e\n  \\<le> real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n        6 * (real (size1 \\<langle>l, y, r'\\<rangle>) - e) -\n        \\<Phi> r +\n        6 * e +\n        1\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> = real(T_ins3 n (d+1) x r) + 2*size1 r' + 4*size1 l - 4*size1 ?t' - \\<Phi> r + 6*e + 6*e + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n    6 * (real (size1 \\<langle>l, y, r'\\<rangle>) - e) -\n    \\<Phi> r +\n    6 * e +\n    1 =\n    real (T_ins3 n (d + 1) x r) + real (2 * size1 r') + real (4 * size1 l) -\n    real (4 * size1 \\<langle>l, y, r'\\<rangle>) -\n    \\<Phi> r +\n    6 * e +\n    6 * e +\n    1", "using gr Unbal2 inv bal_t' hr'"], ["proof (prove)\nusing this:\n  y < x\n  ins3 n (d + 1) x r = Unbal2 r' nr' hr'\n  nr' = size r'\n  hr' = height r'\n  \\<not> bal_i (size \\<langle>l, y, r'\\<rangle>)\n          (height \\<langle>l, y, r'\\<rangle>)\n  height l < height r'\n\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n    6 * (real (size1 \\<langle>l, y, r'\\<rangle>) - e) -\n    \\<Phi> r +\n    6 * e +\n    1 =\n    real (T_ins3 n (d + 1) x r) + real (2 * size1 r') + real (4 * size1 l) -\n    real (4 * size1 \\<langle>l, y, r'\\<rangle>) -\n    \\<Phi> r +\n    6 * e +\n    6 * e +\n    1", "by (simp add: T_bal_tree max_def size1_size add_ac)"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  6 * (real (size1 \\<langle>l, y, r'\\<rangle>) - e) -\n  \\<Phi> r +\n  6 * e +\n  1 =\n  real (T_ins3 n (d + 1) x r) + real (2 * size1 r') + real (4 * size1 l) -\n  real (4 * size1 \\<langle>l, y, r'\\<rangle>) -\n  \\<Phi> r +\n  6 * e +\n  6 * e +\n  1\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) -\n  6 * (real (size1 \\<langle>l, y, r'\\<rangle>) - e) -\n  \\<Phi> r +\n  6 * e +\n  1 =\n  real (T_ins3 n (d + 1) x r) + real (2 * size1 r') + real (4 * size1 l) -\n  real (4 * size1 \\<langle>l, y, r'\\<rangle>) -\n  \\<Phi> r +\n  6 * e +\n  6 * e +\n  1\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> = real(T_ins3 n (d+1) x r) - 2*size1 r' - \\<Phi> r + 6*e + 6*e + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n (d + 1) x r) + real (2 * size1 r') + real (4 * size1 l) -\n    real (4 * size1 \\<langle>l, y, r'\\<rangle>) -\n    \\<Phi> r +\n    6 * e +\n    6 * e +\n    1 =\n    real (T_ins3 n (d + 1) x r) - real (2 * size1 r') - \\<Phi> r + 6 * e +\n    6 * e +\n    1", "by simp"], ["proof (state)\nthis:\n  real (T_ins3 n (d + 1) x r) + real (2 * size1 r') + real (4 * size1 l) -\n  real (4 * size1 \\<langle>l, y, r'\\<rangle>) -\n  \\<Phi> r +\n  6 * e +\n  6 * e +\n  1 =\n  real (T_ins3 n (d + 1) x r) - real (2 * size1 r') - \\<Phi> r + 6 * e +\n  6 * e +\n  1\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n (d + 1) x r) + real (2 * size1 r') + real (4 * size1 l) -\n  real (4 * size1 \\<langle>l, y, r'\\<rangle>) -\n  \\<Phi> r +\n  6 * e +\n  6 * e +\n  1 =\n  real (T_ins3 n (d + 1) x r) - real (2 * size1 r') - \\<Phi> r + 6 * e +\n  6 * e +\n  1\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> \\<le> (6*e + 2) * height r + 6*e + 6*e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_ins3 n (d + 1) x r) - real (2 * size1 r') - \\<Phi> r + 6 * e +\n    6 * e +\n    1\n    \\<le> (6 * e + 2) * real (height r) + 6 * e + 6 * e", "using amor_Unbal[OF Unbal2 *] ins_size(2)[OF Unbal] \\<Phi>_nn[of r']"], ["proof (prove)\nusing this:\n  real (T_ins3 n (d + 1) x r) + \\<Phi> r' - \\<Phi> r\n  \\<le> real (2 * size1 r) + (6 * e + 1) * real (height r)\n  size r' = size r + 1\n  0 \\<le> \\<Phi> r'\n\ngoal (1 subgoal):\n 1. real (T_ins3 n (d + 1) x r) - real (2 * size1 r') - \\<Phi> r + 6 * e +\n    6 * e +\n    1\n    \\<le> (6 * e + 2) * real (height r) + 6 * e + 6 * e", "by(simp add: ring_distribs size1_size)"], ["proof (state)\nthis:\n  real (T_ins3 n (d + 1) x r) - real (2 * size1 r') - \\<Phi> r + 6 * e +\n  6 * e +\n  1\n  \\<le> (6 * e + 2) * real (height r) + 6 * e + 6 * e\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  real (T_ins3 n (d + 1) x r) - real (2 * size1 r') - \\<Phi> r + 6 * e +\n  6 * e +\n  1\n  \\<le> (6 * e + 2) * real (height r) + 6 * e + 6 * e\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> \\<le> (6*e + 2) * (height r + 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (6 * e + 2) * real (height r) + 6 * e + 6 * e\n    \\<le> (6 * e + 2) * real (height r + 2)", "by (simp add: ring_distribs)"], ["proof (state)\nthis:\n  (6 * e + 2) * real (height r) + 6 * e + 6 * e\n  \\<le> (6 * e + 2) * real (height r + 2)\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "also"], ["proof (state)\nthis:\n  (6 * e + 2) * real (height r) + 6 * e + 6 * e\n  \\<le> (6 * e + 2) * real (height r + 2)\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "have \"\\<dots> \\<le> (6*e+2) * (height \\<langle>l, y, r\\<rangle> + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (6 * e + 2) * real (height r + 2)\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "using e0"], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. (6 * e + 2) * real (height r + 2)\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "by (simp add: mult_mono del: times_divide_eq_left)"], ["proof (state)\nthis:\n  (6 * e + 2) * real (height r + 2)\n  \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 n (d + 1) x r = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n       \\<Phi> \\<langle>l, y, r\\<rangle>\n       \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "finally"], ["proof (chain)\npicking this:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n\ngoal (1 subgoal):\n 1. real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n    \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)", "by linarith"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real (T_ins3 n d x \\<langle>l, y, r\\<rangle>) + \\<Phi> t' -\n  \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> (6 * e + 2) * real (height \\<langle>l, y, r\\<rangle> + 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma T_insert3_amor: assumes \"n = size t\" \"bal_i (size t) (height t)\"\n  \"insert3 a (t,n) = (t',n')\"\nshows \"T_insert3 a (t,n) + \\<Phi> t' - \\<Phi> t \\<le> (6*e+2) * (height t + 1) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n    \\<le> (6 * e + 2) * real (height t + 1) + 1", "proof (cases \"ins3 (size t) 0 a t\")"], ["proof (state)\ngoal (3 subgoals):\n 1. ins3 (size t) 0 a t = Same2 \\<Longrightarrow>\n    real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n    \\<le> (6 * e + 2) * real (height t + 1) + 1\n 2. \\<And>x2.\n       ins3 (size t) 0 a t = Bal2 x2 \\<Longrightarrow>\n       real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1\n 3. \\<And>x31 x32 x33.\n       ins3 (size t) 0 a t = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1", "case Same2"], ["proof (state)\nthis:\n  ins3 (size t) 0 a t = Same2\n\ngoal (3 subgoals):\n 1. ins3 (size t) 0 a t = Same2 \\<Longrightarrow>\n    real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n    \\<le> (6 * e + 2) * real (height t + 1) + 1\n 2. \\<And>x2.\n       ins3 (size t) 0 a t = Bal2 x2 \\<Longrightarrow>\n       real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1\n 3. \\<And>x31 x32 x33.\n       ins3 (size t) 0 a t = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1", "have *: \"5*e * real (height t') \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 5 * e * real (height t')", "using e0"], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. 0 \\<le> 5 * e * real (height t')", "by simp"], ["proof (state)\nthis:\n  0 \\<le> 5 * e * real (height t')\n\ngoal (3 subgoals):\n 1. ins3 (size t) 0 a t = Same2 \\<Longrightarrow>\n    real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n    \\<le> (6 * e + 2) * real (height t + 1) + 1\n 2. \\<And>x2.\n       ins3 (size t) 0 a t = Bal2 x2 \\<Longrightarrow>\n       real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1\n 3. \\<And>x31 x32 x33.\n       ins3 (size t) 0 a t = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n    \\<le> (6 * e + 2) * real (height t + 1) + 1", "using Same2 assms(1,3) e0 T_ins3_Same[OF Same2]"], ["proof (prove)\nusing this:\n  ins3 (size t) 0 a t = Same2\n  n = size t\n  insert3 a (t, n) = (t', n')\n  0 < e\n  T_ins3 (size t) 0 a t \\<le> 2 * height t + 1\n\ngoal (1 subgoal):\n 1. real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n    \\<le> (6 * e + 2) * real (height t + 1) + 1", "apply (simp add: ring_distribs T_insert3_def2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ins3 (size t') 0 a t' = Same2; n = size t';\n     t = t' \\<and> size t = n'; 0 < e;\n     T_ins3 (size t') 0 a t' \\<le> Suc (2 * height t')\\<rbrakk>\n    \\<Longrightarrow> real (T_ins3 (size t') 0 a t')\n                      \\<le> 2 +\n                            (6 * e +\n                             (6 * e * real (height t') +\n                              2 * real (height t')))", "using *"], ["proof (prove)\nusing this:\n  0 \\<le> 5 * e * real (height t')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ins3 (size t') 0 a t' = Same2; n = size t';\n     t = t' \\<and> size t = n'; 0 < e;\n     T_ins3 (size t') 0 a t' \\<le> Suc (2 * height t')\\<rbrakk>\n    \\<Longrightarrow> real (T_ins3 (size t') 0 a t')\n                      \\<le> 2 +\n                            (6 * e +\n                             (6 * e * real (height t') +\n                              2 * real (height t')))", "by linarith"], ["proof (state)\nthis:\n  real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n  \\<le> (6 * e + 2) * real (height t + 1) + 1\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 (size t) 0 a t = Bal2 x2 \\<Longrightarrow>\n       real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1\n 2. \\<And>x31 x32 x33.\n       ins3 (size t) 0 a t = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 (size t) 0 a t = Bal2 x2 \\<Longrightarrow>\n       real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1\n 2. \\<And>x31 x32 x33.\n       ins3 (size t) 0 a t = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1", "case (Bal2 t')"], ["proof (state)\nthis:\n  ins3 (size t) 0 a t = Bal2 t'\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins3 (size t) 0 a t = Bal2 x2 \\<Longrightarrow>\n       real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1\n 2. \\<And>x31 x32 x33.\n       ins3 (size t) 0 a t = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  ins3 (size t) 0 a t = Bal2 t'\n\ngoal (1 subgoal):\n 1. real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n    \\<le> (6 * e + 2) * real (height t + 1) + 1", "using T_ins3_Bal[OF Bal2] assms"], ["proof (prove)\nusing this:\n  ins3 (size t) 0 a t = Bal2 t'\n  bal_i (size t) (height t + 0) \\<Longrightarrow>\n  real (T_ins3 (size t) 0 a t) + \\<Phi> t' - \\<Phi> t\n  \\<le> (6 * e + 2) * real (height t + 1)\n  n = size t\n  bal_i (size t) (height t)\n  insert3 a (t, n) = (t', n')\n\ngoal (1 subgoal):\n 1. real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n    \\<le> (6 * e + 2) * real (height t + 1) + 1", "by(simp add: ins_size T_insert3_def2)"], ["proof (state)\nthis:\n  real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n  \\<le> (6 * e + 2) * real (height t + 1) + 1\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 (size t) 0 a t = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 (size t) 0 a t = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1", "case Unbal2"], ["proof (state)\nthis:\n  ins3 (size t) 0 a t = Unbal2 x31_ x32_ x33_\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 (size t) 0 a t = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1", "hence False"], ["proof (prove)\nusing this:\n  ins3 (size t) 0 a t = Unbal2 x31_ x32_ x33_\n\ngoal (1 subgoal):\n 1. False", "using ins0_neq_Unbal"], ["proof (prove)\nusing this:\n  ins3 (size t) 0 a t = Unbal2 x31_ x32_ x33_\n  size ?t \\<le> ?n \\<Longrightarrow> ins ?n 0 ?a ?t \\<noteq> Unbal ?t'\n\ngoal (1 subgoal):\n 1. False", "using assms(1,2) ins3_ins2[of n t 0]"], ["proof (prove)\nusing this:\n  ins3 (size t) 0 a t = Unbal2 x31_ x32_ x33_\n  size ?t \\<le> ?n \\<Longrightarrow> ins ?n 0 ?a ?t \\<noteq> Unbal ?t'\n  n = size t\n  bal_i (size t) (height t)\n  bal_i n (height t + 0) \\<Longrightarrow> ins3 n 0 ?x t = ins2 n 0 ?x t\n\ngoal (1 subgoal):\n 1. False", "by (fastforce simp: ins2_iff_ins(3))"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>x31 x32 x33.\n       ins3 (size t) 0 a t = Unbal2 x31 x32 x33 \\<Longrightarrow>\n       real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n    \\<le> (6 * e + 2) * real (height t + 1) + 1", ".."], ["proof (state)\nthis:\n  real (T_insert3 a (t, n)) + \\<Phi> t' - \\<Phi> t\n  \\<le> (6 * e + 2) * real (height t + 1) + 1\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* RBTi2 *)"], ["", "text \\<open>The insert-only version is shown to have the desired logarithmic\namortized complexity. First it is shown to be linear in the height of the tree.\\<close>"], ["", "locale RBTi2_Amor = RBTi2\nbegin"], ["", "fun nxt :: \"'a \\<Rightarrow> 'a rbt1 \\<Rightarrow> 'a rbt1\" where\n\"nxt x tn = insert3 x tn\""], ["", "fun t\\<^sub>s :: \"'a \\<Rightarrow> 'a rbt1 \\<Rightarrow> real\" where\n\"t\\<^sub>s x tn = T_insert3 x tn\""], ["", "interpretation I_RBTi2_Amor: Amortized\nwhere init = \"(Leaf,0)\"\nand nxt = nxt\nand inv = \"\\<lambda>(t,n). n = size t \\<and> bal_i (size t) (height t)\"\nand T = t\\<^sub>s and \\<Phi> = \"\\<lambda>(t,n). \\<Phi> t\"\nand U = \"\\<lambda>x (t,_). (6*e+2) * (height t + 1) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Amortized (\\<langle>\\<rangle>, 0) nxt\n     (\\<lambda>(t, n). n = size t \\<and> bal_i (size t) (height t))\n     t\\<^sub>s (\\<lambda>(t, n). \\<Phi> t)\n     (\\<lambda>x (t, uu_). (6 * e + 2) * real (height t + 1) + 1)", "proof (standard, goal_cases)"], ["proof (state)\ngoal (5 subgoals):\n 1. case (\\<langle>\\<rangle>, 0) of\n    (t, n) \\<Rightarrow> n = size t \\<and> bal_i (size t) (height t)\n 2. \\<And>s f.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       case nxt f s of\n       (t, n) \\<Rightarrow> n = size t \\<and> bal_i (size t) (height t)\n 3. \\<And>s.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       0 \\<le> (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n 4. (case (\\<langle>\\<rangle>, 0) of (t, n) \\<Rightarrow> \\<Phi> t) = 0\n 5. \\<And>s f.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       t\\<^sub>s f s + (case nxt f s of (t, n) \\<Rightarrow> \\<Phi> t) -\n       (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1)", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (5 subgoals):\n 1. case (\\<langle>\\<rangle>, 0) of\n    (t, n) \\<Rightarrow> n = size t \\<and> bal_i (size t) (height t)\n 2. \\<And>s f.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       case nxt f s of\n       (t, n) \\<Rightarrow> n = size t \\<and> bal_i (size t) (height t)\n 3. \\<And>s.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       0 \\<le> (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n 4. (case (\\<langle>\\<rangle>, 0) of (t, n) \\<Rightarrow> \\<Phi> t) = 0\n 5. \\<And>s f.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       t\\<^sub>s f s + (case nxt f s of (t, n) \\<Rightarrow> \\<Phi> t) -\n       (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. case (\\<langle>\\<rangle>, 0) of\n    (t, n) \\<Rightarrow> n = size t \\<and> bal_i (size t) (height t)", "using bal_i0"], ["proof (prove)\nusing this:\n  bal_i 0 0\n\ngoal (1 subgoal):\n 1. case (\\<langle>\\<rangle>, 0) of\n    (t, n) \\<Rightarrow> n = size t \\<and> bal_i (size t) (height t)", "by (simp split: prod.split)"], ["proof (state)\nthis:\n  case (\\<langle>\\<rangle>, 0) of\n  (t, n) \\<Rightarrow> n = size t \\<and> bal_i (size t) (height t)\n\ngoal (4 subgoals):\n 1. \\<And>s f.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       case nxt f s of\n       (t, n) \\<Rightarrow> n = size t \\<and> bal_i (size t) (height t)\n 2. \\<And>s.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       0 \\<le> (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n 3. (case (\\<langle>\\<rangle>, 0) of (t, n) \\<Rightarrow> \\<Phi> t) = 0\n 4. \\<And>s f.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       t\\<^sub>s f s + (case nxt f s of (t, n) \\<Rightarrow> \\<Phi> t) -\n       (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>s f.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       case nxt f s of\n       (t, n) \\<Rightarrow> n = size t \\<and> bal_i (size t) (height t)\n 2. \\<And>s.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       0 \\<le> (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n 3. (case (\\<langle>\\<rangle>, 0) of (t, n) \\<Rightarrow> \\<Phi> t) = 0\n 4. \\<And>s f.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       t\\<^sub>s f s + (case nxt f s of (t, n) \\<Rightarrow> \\<Phi> t) -\n       (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1)", "case (2 s x)"], ["proof (state)\nthis:\n  case s of (t, n) \\<Rightarrow> n = size t \\<and> bal_i (size t) (height t)\n\ngoal (4 subgoals):\n 1. \\<And>s f.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       case nxt f s of\n       (t, n) \\<Rightarrow> n = size t \\<and> bal_i (size t) (height t)\n 2. \\<And>s.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       0 \\<le> (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n 3. (case (\\<langle>\\<rangle>, 0) of (t, n) \\<Rightarrow> \\<Phi> t) = 0\n 4. \\<And>s f.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       t\\<^sub>s f s + (case nxt f s of (t, n) \\<Rightarrow> \\<Phi> t) -\n       (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1)", "thus ?case"], ["proof (prove)\nusing this:\n  case s of (t, n) \\<Rightarrow> n = size t \\<and> bal_i (size t) (height t)\n\ngoal (1 subgoal):\n 1. case nxt x s of\n    (t, n) \\<Rightarrow> n = size t \\<and> bal_i (size t) (height t)", "using insert2_insert[of x \"fst s\"] bal_i_insert[of \"fst s\"]"], ["proof (prove)\nusing this:\n  case s of (t, n) \\<Rightarrow> n = size t \\<and> bal_i (size t) (height t)\n  (insert2 x (fst s, size (fst s)) = (?t', ?n')) =\n  (?t' = local.insert x (fst s) \\<and> ?n' = size ?t')\n  bal_i (size (fst s)) (height (fst s)) \\<Longrightarrow>\n  bal_i (size (local.insert ?x (fst s))) (height (local.insert ?x (fst s)))\n\ngoal (1 subgoal):\n 1. case nxt x s of\n    (t, n) \\<Rightarrow> n = size t \\<and> bal_i (size t) (height t)", "by (simp del: insert2.simps insert3_def2 insert.simps\n             add: insert3_insert2 split: prod.splits)"], ["proof (state)\nthis:\n  case nxt x s of\n  (t, n) \\<Rightarrow> n = size t \\<and> bal_i (size t) (height t)\n\ngoal (3 subgoals):\n 1. \\<And>s.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       0 \\<le> (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n 2. (case (\\<langle>\\<rangle>, 0) of (t, n) \\<Rightarrow> \\<Phi> t) = 0\n 3. \\<And>s f.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       t\\<^sub>s f s + (case nxt f s of (t, n) \\<Rightarrow> \\<Phi> t) -\n       (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>s.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       0 \\<le> (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n 2. (case (\\<langle>\\<rangle>, 0) of (t, n) \\<Rightarrow> \\<Phi> t) = 0\n 3. \\<And>s f.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       t\\<^sub>s f s + (case nxt f s of (t, n) \\<Rightarrow> \\<Phi> t) -\n       (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1)", "case (3 s)"], ["proof (state)\nthis:\n  case s of (t, n) \\<Rightarrow> n = size t \\<and> bal_i (size t) (height t)\n\ngoal (3 subgoals):\n 1. \\<And>s.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       0 \\<le> (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n 2. (case (\\<langle>\\<rangle>, 0) of (t, n) \\<Rightarrow> \\<Phi> t) = 0\n 3. \\<And>s f.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       t\\<^sub>s f s + (case nxt f s of (t, n) \\<Rightarrow> \\<Phi> t) -\n       (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1)", "thus ?case"], ["proof (prove)\nusing this:\n  case s of (t, n) \\<Rightarrow> n = size t \\<and> bal_i (size t) (height t)\n\ngoal (1 subgoal):\n 1. 0 \\<le> (case s of (t, n) \\<Rightarrow> \\<Phi> t)", "using \\<Phi>_nn[of \"fst s\" ]"], ["proof (prove)\nusing this:\n  case s of (t, n) \\<Rightarrow> n = size t \\<and> bal_i (size t) (height t)\n  0 \\<le> \\<Phi> (fst s)\n\ngoal (1 subgoal):\n 1. 0 \\<le> (case s of (t, n) \\<Rightarrow> \\<Phi> t)", "by (auto split: prod.splits)"], ["proof (state)\nthis:\n  0 \\<le> (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n\ngoal (2 subgoals):\n 1. (case (\\<langle>\\<rangle>, 0) of (t, n) \\<Rightarrow> \\<Phi> t) = 0\n 2. \\<And>s f.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       t\\<^sub>s f s + (case nxt f s of (t, n) \\<Rightarrow> \\<Phi> t) -\n       (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. (case (\\<langle>\\<rangle>, 0) of (t, n) \\<Rightarrow> \\<Phi> t) = 0\n 2. \\<And>s f.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       t\\<^sub>s f s + (case nxt f s of (t, n) \\<Rightarrow> \\<Phi> t) -\n       (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1)", "case 4"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. (case (\\<langle>\\<rangle>, 0) of (t, n) \\<Rightarrow> \\<Phi> t) = 0\n 2. \\<And>s f.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       t\\<^sub>s f s + (case nxt f s of (t, n) \\<Rightarrow> \\<Phi> t) -\n       (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case (\\<langle>\\<rangle>, 0) of (t, n) \\<Rightarrow> \\<Phi> t) = 0", "by(simp)"], ["proof (state)\nthis:\n  (case (\\<langle>\\<rangle>, 0) of (t, n) \\<Rightarrow> \\<Phi> t) = 0\n\ngoal (1 subgoal):\n 1. \\<And>s f.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       t\\<^sub>s f s + (case nxt f s of (t, n) \\<Rightarrow> \\<Phi> t) -\n       (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s f.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       t\\<^sub>s f s + (case nxt f s of (t, n) \\<Rightarrow> \\<Phi> t) -\n       (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1)", "case (5 s x)"], ["proof (state)\nthis:\n  case s of (t, n) \\<Rightarrow> n = size t \\<and> bal_i (size t) (height t)\n\ngoal (1 subgoal):\n 1. \\<And>s f.\n       case s of\n       (t, n) \\<Rightarrow>\n         n = size t \\<and> bal_i (size t) (height t) \\<Longrightarrow>\n       t\\<^sub>s f s + (case nxt f s of (t, n) \\<Rightarrow> \\<Phi> t) -\n       (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1)", "thus ?case"], ["proof (prove)\nusing this:\n  case s of (t, n) \\<Rightarrow> n = size t \\<and> bal_i (size t) (height t)\n\ngoal (1 subgoal):\n 1. t\\<^sub>s x s + (case nxt x s of (t, n) \\<Rightarrow> \\<Phi> t) -\n    (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n    \\<le> (case s of\n           (t, uu_) \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1)", "using T_insert3_amor[of \"snd s\" \"fst s\" x]"], ["proof (prove)\nusing this:\n  case s of (t, n) \\<Rightarrow> n = size t \\<and> bal_i (size t) (height t)\n  \\<lbrakk>snd s = size (fst s); bal_i (size (fst s)) (height (fst s));\n   insert3 x (fst s, snd s) = (?t', ?n')\\<rbrakk>\n  \\<Longrightarrow> real (T_insert3 x (fst s, snd s)) + \\<Phi> ?t' -\n                    \\<Phi> (fst s)\n                    \\<le> (6 * e + 2) * real (height (fst s) + 1) + 1\n\ngoal (1 subgoal):\n 1. t\\<^sub>s x s + (case nxt x s of (t, n) \\<Rightarrow> \\<Phi> t) -\n    (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n    \\<le> (case s of\n           (t, uu_) \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1)", "by (auto simp del: insert3_def2 split: prod.splits)"], ["proof (state)\nthis:\n  t\\<^sub>s x s + (case nxt x s of (t, n) \\<Rightarrow> \\<Phi> t) -\n  (case s of (t, n) \\<Rightarrow> \\<Phi> t)\n  \\<le> (case s of\n         (t, uu_) \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text\\<open>Now it is shown that a certain instantiation of \\<open>bal_i\\<close> that guarantees\nlogarithmic height satisfies the assumptions of locale @{locale RBTi2}.\\<close>"], ["", "interpretation I_RBTi2: RBTi2\nwhere bal_i = \"\\<lambda>n h. h \\<le> ceiling(c * log 2 (n+1))\"\nand e = \"2 powr (1/c) / (2 - 2 powr (1/c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RBTi2 TYPE('a)\n     (\\<lambda>x xa. int xa \\<le> \\<lceil>c * log 2 (real x + 1)\\<rceil>)\n     (2 powr (1 / c) / (2 - 2 powr (1 / c)))", "proof (standard, goal_cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>t.\n       int (height (balance_tree t))\n       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>\n 2. \\<And>n h n' h'.\n       \\<lbrakk>int h \\<le> \\<lceil>c * log 2 (real n + 1)\\<rceil>;\n        n \\<le> n'; h' \\<le> h\\<rbrakk>\n       \\<Longrightarrow> int h'\n                         \\<le> \\<lceil>c * log 2 (real n' + 1)\\<rceil>\n 3. 0 < 2 powr (1 / c) / (2 - 2 powr (1 / c))\n 4. \\<And>t.\n       \\<lbrakk>\\<not> int (height t)\n                       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>;\n        int (height (hchild t))\n        \\<le> \\<lceil>c * log 2 (real (size (hchild t)) + 1)\\<rceil>;\n        t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (size1 t)\n                         \\<le> 2 powr (1 / c) / (2 - 2 powr (1 / c)) *\n                               real (imbal t + 1)", "case (1 t)"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. \\<And>t.\n       int (height (balance_tree t))\n       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>\n 2. \\<And>n h n' h'.\n       \\<lbrakk>int h \\<le> \\<lceil>c * log 2 (real n + 1)\\<rceil>;\n        n \\<le> n'; h' \\<le> h\\<rbrakk>\n       \\<Longrightarrow> int h'\n                         \\<le> \\<lceil>c * log 2 (real n' + 1)\\<rceil>\n 3. 0 < 2 powr (1 / c) / (2 - 2 powr (1 / c))\n 4. \\<And>t.\n       \\<lbrakk>\\<not> int (height t)\n                       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>;\n        int (height (hchild t))\n        \\<le> \\<lceil>c * log 2 (real (size (hchild t)) + 1)\\<rceil>;\n        t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (size1 t)\n                         \\<le> 2 powr (1 / c) / (2 - 2 powr (1 / c)) *\n                               real (imbal t + 1)", "have 0: \"log 2 (1 + real (size t)) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> log 2 (1 + real (size t))", "by simp"], ["proof (state)\nthis:\n  0 \\<le> log 2 (1 + real (size t))\n\ngoal (4 subgoals):\n 1. \\<And>t.\n       int (height (balance_tree t))\n       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>\n 2. \\<And>n h n' h'.\n       \\<lbrakk>int h \\<le> \\<lceil>c * log 2 (real n + 1)\\<rceil>;\n        n \\<le> n'; h' \\<le> h\\<rbrakk>\n       \\<Longrightarrow> int h'\n                         \\<le> \\<lceil>c * log 2 (real n' + 1)\\<rceil>\n 3. 0 < 2 powr (1 / c) / (2 - 2 powr (1 / c))\n 4. \\<And>t.\n       \\<lbrakk>\\<not> int (height t)\n                       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>;\n        int (height (hchild t))\n        \\<le> \\<lceil>c * log 2 (real (size (hchild t)) + 1)\\<rceil>;\n        t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (size1 t)\n                         \\<le> 2 powr (1 / c) / (2 - 2 powr (1 / c)) *\n                               real (imbal t + 1)", "have 1: \"log 2 (1 + real (size t)) \\<le> c * log 2 (1 + real (size t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. log 2 (1 + real (size t)) \\<le> c * log 2 (1 + real (size t))", "using c1 \"0\" less_eq_real_def"], ["proof (prove)\nusing this:\n  1 < c\n  0 \\<le> log 2 (1 + real (size t))\n  (?x \\<le> ?y) = (?x < ?y \\<or> ?x = ?y)\n\ngoal (1 subgoal):\n 1. log 2 (1 + real (size t)) \\<le> c * log 2 (1 + real (size t))", "by auto"], ["proof (state)\nthis:\n  log 2 (1 + real (size t)) \\<le> c * log 2 (1 + real (size t))\n\ngoal (4 subgoals):\n 1. \\<And>t.\n       int (height (balance_tree t))\n       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>\n 2. \\<And>n h n' h'.\n       \\<lbrakk>int h \\<le> \\<lceil>c * log 2 (real n + 1)\\<rceil>;\n        n \\<le> n'; h' \\<le> h\\<rbrakk>\n       \\<Longrightarrow> int h'\n                         \\<le> \\<lceil>c * log 2 (real n' + 1)\\<rceil>\n 3. 0 < 2 powr (1 / c) / (2 - 2 powr (1 / c))\n 4. \\<And>t.\n       \\<lbrakk>\\<not> int (height t)\n                       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>;\n        int (height (hchild t))\n        \\<le> \\<lceil>c * log 2 (real (size (hchild t)) + 1)\\<rceil>;\n        t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (size1 t)\n                         \\<le> 2 powr (1 / c) / (2 - 2 powr (1 / c)) *\n                               real (imbal t + 1)", "thus ?case"], ["proof (prove)\nusing this:\n  log 2 (1 + real (size t)) \\<le> c * log 2 (1 + real (size t))\n\ngoal (1 subgoal):\n 1. int (height (balance_tree t))\n    \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>", "apply(simp add: height_balance_tree add_ac ceiling_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. log 2 (1 + real (size t))\n    \\<le> c * log 2 (1 + real (size t)) \\<Longrightarrow>\n    \\<not> - 1 < log 2 (1 + real (size t)) \\<longrightarrow>\n    - 1 < c * log 2 (1 + real (size t))", "using 0"], ["proof (prove)\nusing this:\n  0 \\<le> log 2 (1 + real (size t))\n\ngoal (1 subgoal):\n 1. log 2 (1 + real (size t))\n    \\<le> c * log 2 (1 + real (size t)) \\<Longrightarrow>\n    \\<not> - 1 < log 2 (1 + real (size t)) \\<longrightarrow>\n    - 1 < c * log 2 (1 + real (size t))", "by linarith"], ["proof (state)\nthis:\n  int (height (balance_tree t))\n  \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>\n\ngoal (3 subgoals):\n 1. \\<And>n h n' h'.\n       \\<lbrakk>int h \\<le> \\<lceil>c * log 2 (real n + 1)\\<rceil>;\n        n \\<le> n'; h' \\<le> h\\<rbrakk>\n       \\<Longrightarrow> int h'\n                         \\<le> \\<lceil>c * log 2 (real n' + 1)\\<rceil>\n 2. 0 < 2 powr (1 / c) / (2 - 2 powr (1 / c))\n 3. \\<And>t.\n       \\<lbrakk>\\<not> int (height t)\n                       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>;\n        int (height (hchild t))\n        \\<le> \\<lceil>c * log 2 (real (size (hchild t)) + 1)\\<rceil>;\n        t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (size1 t)\n                         \\<le> 2 powr (1 / c) / (2 - 2 powr (1 / c)) *\n                               real (imbal t + 1)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>n h n' h'.\n       \\<lbrakk>int h \\<le> \\<lceil>c * log 2 (real n + 1)\\<rceil>;\n        n \\<le> n'; h' \\<le> h\\<rbrakk>\n       \\<Longrightarrow> int h'\n                         \\<le> \\<lceil>c * log 2 (real n' + 1)\\<rceil>\n 2. 0 < 2 powr (1 / c) / (2 - 2 powr (1 / c))\n 3. \\<And>t.\n       \\<lbrakk>\\<not> int (height t)\n                       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>;\n        int (height (hchild t))\n        \\<le> \\<lceil>c * log 2 (real (size (hchild t)) + 1)\\<rceil>;\n        t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (size1 t)\n                         \\<le> 2 powr (1 / c) / (2 - 2 powr (1 / c)) *\n                               real (imbal t + 1)", "case (2 n h n' h')"], ["proof (state)\nthis:\n  int h \\<le> \\<lceil>c * log 2 (real n + 1)\\<rceil>\n  n \\<le> n'\n  h' \\<le> h\n\ngoal (3 subgoals):\n 1. \\<And>n h n' h'.\n       \\<lbrakk>int h \\<le> \\<lceil>c * log 2 (real n + 1)\\<rceil>;\n        n \\<le> n'; h' \\<le> h\\<rbrakk>\n       \\<Longrightarrow> int h'\n                         \\<le> \\<lceil>c * log 2 (real n' + 1)\\<rceil>\n 2. 0 < 2 powr (1 / c) / (2 - 2 powr (1 / c))\n 3. \\<And>t.\n       \\<lbrakk>\\<not> int (height t)\n                       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>;\n        int (height (hchild t))\n        \\<le> \\<lceil>c * log 2 (real (size (hchild t)) + 1)\\<rceil>;\n        t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (size1 t)\n                         \\<le> 2 powr (1 / c) / (2 - 2 powr (1 / c)) *\n                               real (imbal t + 1)", "have \"int h' \\<le> int h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int h' \\<le> int h", "by(simp add: 2)"], ["proof (state)\nthis:\n  int h' \\<le> int h\n\ngoal (3 subgoals):\n 1. \\<And>n h n' h'.\n       \\<lbrakk>int h \\<le> \\<lceil>c * log 2 (real n + 1)\\<rceil>;\n        n \\<le> n'; h' \\<le> h\\<rbrakk>\n       \\<Longrightarrow> int h'\n                         \\<le> \\<lceil>c * log 2 (real n' + 1)\\<rceil>\n 2. 0 < 2 powr (1 / c) / (2 - 2 powr (1 / c))\n 3. \\<And>t.\n       \\<lbrakk>\\<not> int (height t)\n                       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>;\n        int (height (hchild t))\n        \\<le> \\<lceil>c * log 2 (real (size (hchild t)) + 1)\\<rceil>;\n        t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (size1 t)\n                         \\<le> 2 powr (1 / c) / (2 - 2 powr (1 / c)) *\n                               real (imbal t + 1)", "also"], ["proof (state)\nthis:\n  int h' \\<le> int h\n\ngoal (3 subgoals):\n 1. \\<And>n h n' h'.\n       \\<lbrakk>int h \\<le> \\<lceil>c * log 2 (real n + 1)\\<rceil>;\n        n \\<le> n'; h' \\<le> h\\<rbrakk>\n       \\<Longrightarrow> int h'\n                         \\<le> \\<lceil>c * log 2 (real n' + 1)\\<rceil>\n 2. 0 < 2 powr (1 / c) / (2 - 2 powr (1 / c))\n 3. \\<And>t.\n       \\<lbrakk>\\<not> int (height t)\n                       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>;\n        int (height (hchild t))\n        \\<le> \\<lceil>c * log 2 (real (size (hchild t)) + 1)\\<rceil>;\n        t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (size1 t)\n                         \\<le> 2 powr (1 / c) / (2 - 2 powr (1 / c)) *\n                               real (imbal t + 1)", "have \"\\<dots> \\<le> ceiling(c * log 2 (real n + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int h \\<le> \\<lceil>c * log 2 (real n + 1)\\<rceil>", "by(rule 2)"], ["proof (state)\nthis:\n  int h \\<le> \\<lceil>c * log 2 (real n + 1)\\<rceil>\n\ngoal (3 subgoals):\n 1. \\<And>n h n' h'.\n       \\<lbrakk>int h \\<le> \\<lceil>c * log 2 (real n + 1)\\<rceil>;\n        n \\<le> n'; h' \\<le> h\\<rbrakk>\n       \\<Longrightarrow> int h'\n                         \\<le> \\<lceil>c * log 2 (real n' + 1)\\<rceil>\n 2. 0 < 2 powr (1 / c) / (2 - 2 powr (1 / c))\n 3. \\<And>t.\n       \\<lbrakk>\\<not> int (height t)\n                       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>;\n        int (height (hchild t))\n        \\<le> \\<lceil>c * log 2 (real (size (hchild t)) + 1)\\<rceil>;\n        t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (size1 t)\n                         \\<le> 2 powr (1 / c) / (2 - 2 powr (1 / c)) *\n                               real (imbal t + 1)", "also"], ["proof (state)\nthis:\n  int h \\<le> \\<lceil>c * log 2 (real n + 1)\\<rceil>\n\ngoal (3 subgoals):\n 1. \\<And>n h n' h'.\n       \\<lbrakk>int h \\<le> \\<lceil>c * log 2 (real n + 1)\\<rceil>;\n        n \\<le> n'; h' \\<le> h\\<rbrakk>\n       \\<Longrightarrow> int h'\n                         \\<le> \\<lceil>c * log 2 (real n' + 1)\\<rceil>\n 2. 0 < 2 powr (1 / c) / (2 - 2 powr (1 / c))\n 3. \\<And>t.\n       \\<lbrakk>\\<not> int (height t)\n                       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>;\n        int (height (hchild t))\n        \\<le> \\<lceil>c * log 2 (real (size (hchild t)) + 1)\\<rceil>;\n        t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (size1 t)\n                         \\<le> 2 powr (1 / c) / (2 - 2 powr (1 / c)) *\n                               real (imbal t + 1)", "have \"\\<dots> \\<le> ceiling(c * log 2 (real n' + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lceil>c * log 2 (real n + 1)\\<rceil>\n    \\<le> \\<lceil>c * log 2 (real n' + 1)\\<rceil>", "using c1 \"2\"(2,3)"], ["proof (prove)\nusing this:\n  1 < c\n  n \\<le> n'\n  h' \\<le> h\n\ngoal (1 subgoal):\n 1. \\<lceil>c * log 2 (real n + 1)\\<rceil>\n    \\<le> \\<lceil>c * log 2 (real n' + 1)\\<rceil>", "by (simp add: ceiling_mono)"], ["proof (state)\nthis:\n  \\<lceil>c * log 2 (real n + 1)\\<rceil>\n  \\<le> \\<lceil>c * log 2 (real n' + 1)\\<rceil>\n\ngoal (3 subgoals):\n 1. \\<And>n h n' h'.\n       \\<lbrakk>int h \\<le> \\<lceil>c * log 2 (real n + 1)\\<rceil>;\n        n \\<le> n'; h' \\<le> h\\<rbrakk>\n       \\<Longrightarrow> int h'\n                         \\<le> \\<lceil>c * log 2 (real n' + 1)\\<rceil>\n 2. 0 < 2 powr (1 / c) / (2 - 2 powr (1 / c))\n 3. \\<And>t.\n       \\<lbrakk>\\<not> int (height t)\n                       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>;\n        int (height (hchild t))\n        \\<le> \\<lceil>c * log 2 (real (size (hchild t)) + 1)\\<rceil>;\n        t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (size1 t)\n                         \\<le> 2 powr (1 / c) / (2 - 2 powr (1 / c)) *\n                               real (imbal t + 1)", "finally"], ["proof (chain)\npicking this:\n  int h' \\<le> \\<lceil>c * log 2 (real n' + 1)\\<rceil>", "show ?case"], ["proof (prove)\nusing this:\n  int h' \\<le> \\<lceil>c * log 2 (real n' + 1)\\<rceil>\n\ngoal (1 subgoal):\n 1. int h' \\<le> \\<lceil>c * log 2 (real n' + 1)\\<rceil>", "."], ["proof (state)\nthis:\n  int h' \\<le> \\<lceil>c * log 2 (real n' + 1)\\<rceil>\n\ngoal (2 subgoals):\n 1. 0 < 2 powr (1 / c) / (2 - 2 powr (1 / c))\n 2. \\<And>t.\n       \\<lbrakk>\\<not> int (height t)\n                       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>;\n        int (height (hchild t))\n        \\<le> \\<lceil>c * log 2 (real (size (hchild t)) + 1)\\<rceil>;\n        t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (size1 t)\n                         \\<le> 2 powr (1 / c) / (2 - 2 powr (1 / c)) *\n                               real (imbal t + 1)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < 2 powr (1 / c) / (2 - 2 powr (1 / c))\n 2. \\<And>t.\n       \\<lbrakk>\\<not> int (height t)\n                       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>;\n        int (height (hchild t))\n        \\<le> \\<lceil>c * log 2 (real (size (hchild t)) + 1)\\<rceil>;\n        t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (size1 t)\n                         \\<le> 2 powr (1 / c) / (2 - 2 powr (1 / c)) *\n                               real (imbal t + 1)", "case 3"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. 0 < 2 powr (1 / c) / (2 - 2 powr (1 / c))\n 2. \\<And>t.\n       \\<lbrakk>\\<not> int (height t)\n                       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>;\n        int (height (hchild t))\n        \\<le> \\<lceil>c * log 2 (real (size (hchild t)) + 1)\\<rceil>;\n        t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (size1 t)\n                         \\<le> 2 powr (1 / c) / (2 - 2 powr (1 / c)) *\n                               real (imbal t + 1)", "have \"2 powr (1/c) < 2 powr 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 powr (1 / c) < 2 powr 1", "using c1"], ["proof (prove)\nusing this:\n  1 < c\n\ngoal (1 subgoal):\n 1. 2 powr (1 / c) < 2 powr 1", "by (simp only: powr_less_cancel_iff) simp"], ["proof (state)\nthis:\n  2 powr (1 / c) < 2 powr 1\n\ngoal (2 subgoals):\n 1. 0 < 2 powr (1 / c) / (2 - 2 powr (1 / c))\n 2. \\<And>t.\n       \\<lbrakk>\\<not> int (height t)\n                       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>;\n        int (height (hchild t))\n        \\<le> \\<lceil>c * log 2 (real (size (hchild t)) + 1)\\<rceil>;\n        t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (size1 t)\n                         \\<le> 2 powr (1 / c) / (2 - 2 powr (1 / c)) *\n                               real (imbal t + 1)", "hence \"2 - 2 powr (1 / c) > 0\""], ["proof (prove)\nusing this:\n  2 powr (1 / c) < 2 powr 1\n\ngoal (1 subgoal):\n 1. 0 < 2 - 2 powr (1 / c)", "by simp"], ["proof (state)\nthis:\n  0 < 2 - 2 powr (1 / c)\n\ngoal (2 subgoals):\n 1. 0 < 2 powr (1 / c) / (2 - 2 powr (1 / c))\n 2. \\<And>t.\n       \\<lbrakk>\\<not> int (height t)\n                       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>;\n        int (height (hchild t))\n        \\<le> \\<lceil>c * log 2 (real (size (hchild t)) + 1)\\<rceil>;\n        t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (size1 t)\n                         \\<le> 2 powr (1 / c) / (2 - 2 powr (1 / c)) *\n                               real (imbal t + 1)", "thus ?case"], ["proof (prove)\nusing this:\n  0 < 2 - 2 powr (1 / c)\n\ngoal (1 subgoal):\n 1. 0 < 2 powr (1 / c) / (2 - 2 powr (1 / c))", "by(simp)"], ["proof (state)\nthis:\n  0 < 2 powr (1 / c) / (2 - 2 powr (1 / c))\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<not> int (height t)\n                       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>;\n        int (height (hchild t))\n        \\<le> \\<lceil>c * log 2 (real (size (hchild t)) + 1)\\<rceil>;\n        t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (size1 t)\n                         \\<le> 2 powr (1 / c) / (2 - 2 powr (1 / c)) *\n                               real (imbal t + 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<not> int (height t)\n                       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>;\n        int (height (hchild t))\n        \\<le> \\<lceil>c * log 2 (real (size (hchild t)) + 1)\\<rceil>;\n        t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (size1 t)\n                         \\<le> 2 powr (1 / c) / (2 - 2 powr (1 / c)) *\n                               real (imbal t + 1)", "case (4 t)"], ["proof (state)\nthis:\n  \\<not> int (height t) \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>\n  int (height (hchild t))\n  \\<le> \\<lceil>c * log 2 (real (size (hchild t)) + 1)\\<rceil>\n  t \\<noteq> \\<langle>\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<not> int (height t)\n                       \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>;\n        int (height (hchild t))\n        \\<le> \\<lceil>c * log 2 (real (size (hchild t)) + 1)\\<rceil>;\n        t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (size1 t)\n                         \\<le> 2 powr (1 / c) / (2 - 2 powr (1 / c)) *\n                               real (imbal t + 1)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<not> int (height t) \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>\n  int (height (hchild t))\n  \\<le> \\<lceil>c * log 2 (real (size (hchild t)) + 1)\\<rceil>\n  t \\<noteq> \\<langle>\\<rangle>\n\ngoal (1 subgoal):\n 1. real (size1 t)\n    \\<le> 2 powr (1 / c) / (2 - 2 powr (1 / c)) * real (imbal t + 1)", "using size1_imbal2[of t]"], ["proof (prove)\nusing this:\n  \\<not> int (height t) \\<le> \\<lceil>c * log 2 (real (size t) + 1)\\<rceil>\n  int (height (hchild t))\n  \\<le> \\<lceil>c * log 2 (real (size (hchild t)) + 1)\\<rceil>\n  t \\<noteq> \\<langle>\\<rangle>\n  \\<lbrakk>\\<not> bal_log t; bal_log (hchild t);\n   t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> real (size1 t)\n                    < 2 powr (1 / c) / (2 - 2 powr (1 / c)) *\n                      real (imbal t + 1)\n\ngoal (1 subgoal):\n 1. real (size1 t)\n    \\<le> 2 powr (1 / c) / (2 - 2 powr (1 / c)) * real (imbal t + 1)", "by(simp add: bal_log_def size1_size add_ac ring_distribs)"], ["proof (state)\nthis:\n  real (size1 t)\n  \\<le> 2 powr (1 / c) / (2 - 2 powr (1 / c)) * real (imbal t + 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Naive implementation (with delete)\""], ["", "axiomatization cd :: real where\ncd0: \"cd > 0\""], ["", "definition bal_d :: \"nat \\<Rightarrow> nat \\<Rightarrow> bool\" where\n\"bal_d n dl = (dl < cd*(n+1))\""], ["", "lemma bal_d0: \"bal_d n 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal_d n 0", "using cd0"], ["proof (prove)\nusing this:\n  0 < cd\n\ngoal (1 subgoal):\n 1. bal_d n 0", "by(simp add: bal_d_def)"], ["", "lemma mono_bal_d: \"\\<lbrakk> bal_d n dl; n \\<le> n' \\<rbrakk> \\<Longrightarrow> bal_d n' dl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>bal_d n dl; n \\<le> n'\\<rbrakk> \\<Longrightarrow> bal_d n' dl", "unfolding  bal_d_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>real dl < cd * (real n + 1); n \\<le> n'\\<rbrakk>\n    \\<Longrightarrow> real dl < cd * (real n' + 1)", "using cd0 mult_left_mono[of \"real n + 1\" \"real n' + 1\" cd]"], ["proof (prove)\nusing this:\n  0 < cd\n  \\<lbrakk>real n + 1 \\<le> real n' + 1; 0 \\<le> cd\\<rbrakk>\n  \\<Longrightarrow> cd * (real n + 1) \\<le> cd * (real n' + 1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>real dl < cd * (real n + 1); n \\<le> n'\\<rbrakk>\n    \\<Longrightarrow> real dl < cd * (real n' + 1)", "by linarith"], ["", "locale RBTid1 = RBTi1\nbegin"], ["", "subsubsection \\<open>Functions\\<close>"], ["", "fun insert_d :: \"'a::linorder \\<Rightarrow> 'a rbt1 \\<Rightarrow> 'a rbt1\" where\n\"insert_d x (t,dl) =\n  (case ins (size t + dl) 0 x t of\n    Same \\<Rightarrow> t |\n    Bal t' \\<Rightarrow> t', dl)\""], ["", "(* Unbal unreachable *)"], ["", "definition up_d :: \"'a \\<Rightarrow> 'a tree \\<Rightarrow> bool \\<Rightarrow> 'a tree option \\<Rightarrow> 'a tree option\" where\n\"up_d x sib twist u =\n  (case u of\n     None \\<Rightarrow> None |\n     Some t \\<Rightarrow> Some(node twist t x sib))\""], ["", "declare up_d_def[simp]"], ["", "(* FIXME tdel \\<le> height\nfun T_split_min :: \"'a tree \\<Rightarrow> nat\" where\n\"T_split_min t = height t\"\n*)"], ["", "fun del_tm :: \"'a::linorder \\<Rightarrow> 'a tree \\<Rightarrow> 'a tree option tm\" where\n\"del_tm x Leaf =1 return None\" |\n\"del_tm x (Node l y r) =1\n  (case cmp x y of\n     LT \\<Rightarrow> do { l' \\<leftarrow> del_tm x l; return (up_d y r False l')} |\n     EQ \\<Rightarrow> if r = Leaf then return (Some l)\n           else do { (a',r') \\<leftarrow> split_min_tm r;\n                     return (Some(Node l a' r'))} |\n     GT \\<Rightarrow> do { r' \\<leftarrow> del_tm x r; return (up_d y l True r')})\""], ["", "definition del :: \"'a::linorder \\<Rightarrow> 'a tree \\<Rightarrow> 'a tree option\" where\n\"del x t = val(del_tm x t)\""], ["", "lemma del_Leaf[simp]: \"del x Leaf = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. del x \\<langle>\\<rangle> = None", "using val_cong[OF del_tm.simps(1)]"], ["proof (prove)\nusing this:\n  Time_Monad.val (del_tm ?x1 \\<langle>\\<rangle>) =\n  Time_Monad.val (return None \\<bind> tick)\n\ngoal (1 subgoal):\n 1. del x \\<langle>\\<rangle> = None", "by(simp only: del_def val_simps)"], ["", "lemma del_Node[simp]: \"del x (Node l y r) =\n  (case cmp x y of\n     LT \\<Rightarrow> let l' = del x l in up_d y r False l' |\n     EQ \\<Rightarrow> if r = Leaf then Some l\n           else let (a',r') = split_min r in Some(Node l a' r') |\n     GT \\<Rightarrow> let r' = del x r in up_d y l True r')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. del x \\<langle>l, y, r\\<rangle> =\n    (case cmp x y of LT \\<Rightarrow> Let (del x l) (up_d y r False)\n     | EQ \\<Rightarrow>\n         if r = \\<langle>\\<rangle> then Some l\n         else let (a', r') = Root_Balanced_Tree.split_min r\n              in Some \\<langle>l, a', r'\\<rangle>\n     | GT \\<Rightarrow> Let (del x r) (up_d y l True))", "using val_cong[OF del_tm.simps(2)]"], ["proof (prove)\nusing this:\n  Time_Monad.val (del_tm ?x1 \\<langle>?l1, ?y1, ?r1\\<rangle>) =\n  Time_Monad.val\n   ((case cmp ?x1 ?y1 of\n     LT \\<Rightarrow>\n       del_tm ?x1 ?l1 \\<bind> (\\<lambda>l'. return (up_d ?y1 ?r1 False l'))\n     | EQ \\<Rightarrow>\n         if ?r1 = \\<langle>\\<rangle> then return (Some ?l1)\n         else split_min_tm ?r1 \\<bind>\n              (\\<lambda>(a', r').\n                  return (Some \\<langle>?l1, a', r'\\<rangle>))\n     | GT \\<Rightarrow>\n         del_tm ?x1 ?r1 \\<bind>\n         (\\<lambda>r'. return (up_d ?y1 ?l1 True r'))) \\<bind>\n    tick)\n\ngoal (1 subgoal):\n 1. del x \\<langle>l, y, r\\<rangle> =\n    (case cmp x y of LT \\<Rightarrow> Let (del x l) (up_d y r False)\n     | EQ \\<Rightarrow>\n         if r = \\<langle>\\<rangle> then Some l\n         else let (a', r') = Root_Balanced_Tree.split_min r\n              in Some \\<langle>l, a', r'\\<rangle>\n     | GT \\<Rightarrow> Let (del x r) (up_d y l True))", "by(simp only: del_def split_min_def val_simps cmp_val.case_distrib[of val])"], ["", "definition T_del :: \"'a::linorder \\<Rightarrow> 'a tree \\<Rightarrow> nat\" where\n\"T_del x t = time(del_tm x t)\""], ["", "lemma T_del_Leaf[simp]: \"T_del x Leaf = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T_del x \\<langle>\\<rangle> = 1", "by(simp add: T_del_def tm_simps)"], ["", "lemma T_del_Node[simp]: \"T_del x (Node l y r) =\n  (case cmp x y of\n     LT \\<Rightarrow> T_del x l + 1 |\n     EQ \\<Rightarrow> if r = Leaf then 1 else T_split_min r + 1 |\n     GT \\<Rightarrow> T_del x r + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T_del x \\<langle>l, y, r\\<rangle> =\n    (case cmp x y of LT \\<Rightarrow> T_del x l + 1\n     | EQ \\<Rightarrow>\n         if r = \\<langle>\\<rangle> then 1 else T_split_min r + 1\n     | GT \\<Rightarrow> T_del x r + 1)", "by(simp add: T_del_def T_split_min_def tm_simps split: tm.split prod.split)"], ["", "fun delete :: \"'a::linorder \\<Rightarrow> 'a rbt1 \\<Rightarrow> 'a rbt1\" where\n\"delete x (t,dl) =\n  (case del x t of\n    None \\<Rightarrow> (t,dl) |\n    Some t' \\<Rightarrow>\n      if bal_d (size t') (dl+1) then (t',dl+1) else (balance_tree t', 0))\""], ["", "declare delete.simps [simp del]"], ["", "subsubsection \\<open>Functional Correctness\\<close>"], ["", "lemma size_insert_d: \"insert_d x (t,dl) = (t',dl') \\<Longrightarrow> size t \\<le> size t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert_d x (t, dl) = (t', dl') \\<Longrightarrow> size t \\<le> size t'", "by(auto simp: ins_size ins0_neq_Unbal split: if_splits up.splits)"], ["", "lemma inorder_insert_d: \"insert_d x (t,dl) = (t',dl') \\<Longrightarrow> sorted(inorder t)\n  \\<Longrightarrow> inorder t' = ins_list x (inorder t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>insert_d x (t, dl) = (t', dl');\n     Sorted_Less.sorted (inorder t)\\<rbrakk>\n    \\<Longrightarrow> inorder t' = ins_list x (inorder t)", "by(auto simp add: ins0_neq_Unbal insert_def inorder_ins split: prod.split up.split)"], ["", "lemma bal_i_insert_d: assumes \"insert_d x (t,dl) = (t',dl')\" \"bal_i (size t + dl) (height t)\"\nshows \"bal_i (size t' + dl) (height t')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal_i (size t' + dl) (height t')", "proof (cases \"ins (size t + dl) 0 x t\")"], ["proof (state)\ngoal (3 subgoals):\n 1. ins (size t + dl) 0 x t = Same \\<Longrightarrow>\n    bal_i (size t' + dl) (height t')\n 2. \\<And>x2.\n       ins (size t + dl) 0 x t = Bal x2 \\<Longrightarrow>\n       bal_i (size t' + dl) (height t')\n 3. \\<And>x3.\n       ins (size t + dl) 0 x t = Unbal x3 \\<Longrightarrow>\n       bal_i (size t' + dl) (height t')", "case Same"], ["proof (state)\nthis:\n  ins (size t + dl) 0 x t = Same\n\ngoal (3 subgoals):\n 1. ins (size t + dl) 0 x t = Same \\<Longrightarrow>\n    bal_i (size t' + dl) (height t')\n 2. \\<And>x2.\n       ins (size t + dl) 0 x t = Bal x2 \\<Longrightarrow>\n       bal_i (size t' + dl) (height t')\n 3. \\<And>x3.\n       ins (size t + dl) 0 x t = Unbal x3 \\<Longrightarrow>\n       bal_i (size t' + dl) (height t')", "with assms"], ["proof (chain)\npicking this:\n  insert_d x (t, dl) = (t', dl')\n  bal_i (size t + dl) (height t)\n  ins (size t + dl) 0 x t = Same", "show ?thesis"], ["proof (prove)\nusing this:\n  insert_d x (t, dl) = (t', dl')\n  bal_i (size t + dl) (height t)\n  ins (size t + dl) 0 x t = Same\n\ngoal (1 subgoal):\n 1. bal_i (size t' + dl) (height t')", "by (simp)"], ["proof (state)\nthis:\n  bal_i (size t' + dl) (height t')\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins (size t + dl) 0 x t = Bal x2 \\<Longrightarrow>\n       bal_i (size t' + dl) (height t')\n 2. \\<And>x3.\n       ins (size t + dl) 0 x t = Unbal x3 \\<Longrightarrow>\n       bal_i (size t' + dl) (height t')", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins (size t + dl) 0 x t = Bal x2 \\<Longrightarrow>\n       bal_i (size t' + dl) (height t')\n 2. \\<And>x3.\n       ins (size t + dl) 0 x t = Unbal x3 \\<Longrightarrow>\n       bal_i (size t' + dl) (height t')", "case Bal"], ["proof (state)\nthis:\n  ins (size t + dl) 0 x t = Bal x2_\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins (size t + dl) 0 x t = Bal x2 \\<Longrightarrow>\n       bal_i (size t' + dl) (height t')\n 2. \\<And>x3.\n       ins (size t + dl) 0 x t = Unbal x3 \\<Longrightarrow>\n       bal_i (size t' + dl) (height t')", "thus ?thesis"], ["proof (prove)\nusing this:\n  ins (size t + dl) 0 x t = Bal x2_\n\ngoal (1 subgoal):\n 1. bal_i (size t' + dl) (height t')", "using ins_bal_i_Bal[OF Bal] assms ins_size"], ["proof (prove)\nusing this:\n  ins (size t + dl) 0 x t = Bal x2_\n  bal_i (size t + dl) (height t + 0) \\<Longrightarrow>\n  bal_i (size t + dl + 1) (height x2_ + 0)\n  insert_d x (t, dl) = (t', dl')\n  bal_i (size t + dl) (height t)\n  ins ?n ?d ?x ?t = Bal ?t' \\<Longrightarrow> size ?t' = size ?t + 1\n  ins ?n ?d ?x ?t = Unbal ?t' \\<Longrightarrow> size ?t' = size ?t + 1\n\ngoal (1 subgoal):\n 1. bal_i (size t' + dl) (height t')", "by(simp add: size1_size)"], ["proof (state)\nthis:\n  bal_i (size t' + dl) (height t')\n\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins (size t + dl) 0 x t = Unbal x3 \\<Longrightarrow>\n       bal_i (size t' + dl) (height t')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins (size t + dl) 0 x t = Unbal x3 \\<Longrightarrow>\n       bal_i (size t' + dl) (height t')", "case (Unbal t')"], ["proof (state)\nthis:\n  ins (size t + dl) 0 x t = Unbal t'\n\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins (size t + dl) 0 x t = Unbal x3 \\<Longrightarrow>\n       bal_i (size t' + dl) (height t')", "hence False"], ["proof (prove)\nusing this:\n  ins (size t + dl) 0 x t = Unbal t'\n\ngoal (1 subgoal):\n 1. False", "by(simp add: ins0_neq_Unbal)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins (size t + dl) 0 x t = Unbal x3 \\<Longrightarrow>\n       bal_i (size t' + dl) (height t')", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. bal_i (size t' + dl) (height t')", ".."], ["proof (state)\nthis:\n  bal_i (size t' + dl) (height t')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inorder_del:\n  \"sorted(inorder t) \\<Longrightarrow>\n  inorder(case del x t of None \\<Rightarrow> t | Some t' \\<Rightarrow> t') = del_list x (inorder t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sorted_Less.sorted (inorder t) \\<Longrightarrow>\n    inorder\n     (case del x t of None \\<Rightarrow> t | Some t' \\<Rightarrow> t') =\n    del_list x (inorder t)", "by(induction t)\n  (auto simp add: del_list_simps split_minD split: option.splits prod.splits)"], ["", "lemma inorder_delete:\n  \"\\<lbrakk> delete x (t,dl) = (t',dl'); sorted(inorder t) \\<rbrakk> \\<Longrightarrow>\n  inorder t' = del_list x (inorder t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>local.delete x (t, dl) = (t', dl');\n     Sorted_Less.sorted (inorder t)\\<rbrakk>\n    \\<Longrightarrow> inorder t' = del_list x (inorder t)", "using inorder_del[of t x]"], ["proof (prove)\nusing this:\n  Sorted_Less.sorted (inorder t) \\<Longrightarrow>\n  inorder\n   (case del x t of None \\<Rightarrow> t | Some t' \\<Rightarrow> t') =\n  del_list x (inorder t)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>local.delete x (t, dl) = (t', dl');\n     Sorted_Less.sorted (inorder t)\\<rbrakk>\n    \\<Longrightarrow> inorder t' = del_list x (inorder t)", "by(auto simp add: delete.simps split: option.splits if_splits)"], ["", "lemma size_split_min:\n  \"\\<lbrakk> split_min t = (a,t'); t \\<noteq> Leaf \\<rbrakk> \\<Longrightarrow> size t' = size t - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Root_Balanced_Tree.split_min t = (a, t');\n     t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> size t' = size t - 1", "by(induction t arbitrary: t')\n  (auto simp add: zero_less_iff_neq_zero split: if_splits prod.splits)"], ["", "lemma height_split_min:\n  \"\\<lbrakk> split_min t = (a,t'); t \\<noteq> Leaf \\<rbrakk> \\<Longrightarrow> height t' \\<le> height t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Root_Balanced_Tree.split_min t = (a, t');\n     t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> height t' \\<le> height t", "apply(induction t arbitrary: t')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t'.\n       \\<lbrakk>Root_Balanced_Tree.split_min \\<langle>\\<rangle> = (a, t');\n        \\<langle>\\<rangle> \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> height t' \\<le> height \\<langle>\\<rangle>\n 2. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>Root_Balanced_Tree.split_min t1 = (a, t');\n                    t1 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n                   \\<Longrightarrow> height t' \\<le> height t1;\n        \\<And>t'.\n           \\<lbrakk>Root_Balanced_Tree.split_min t2 = (a, t');\n            t2 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> height t' \\<le> height t2;\n        Root_Balanced_Tree.split_min \\<langle>t1, x2, t2\\<rangle> = (a, t');\n        \\<langle>t1, x2, t2\\<rangle> \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> height t' \\<le> height \\<langle>t1, x2, t2\\<rangle>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>Root_Balanced_Tree.split_min t1 = (a, t');\n                    t1 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n                   \\<Longrightarrow> height t' \\<le> height t1;\n        \\<And>t'.\n           \\<lbrakk>Root_Balanced_Tree.split_min t2 = (a, t');\n            t2 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> height t' \\<le> height t2;\n        Root_Balanced_Tree.split_min \\<langle>t1, x2, t2\\<rangle> = (a, t');\n        \\<langle>t1, x2, t2\\<rangle> \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> height t' \\<le> height \\<langle>t1, x2, t2\\<rangle>", "by(fastforce split: if_splits prod.splits)"], ["", "lemma size_del: \"del x t = Some t' \\<Longrightarrow> size t' = size t - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. del x t = Some t' \\<Longrightarrow> size t' = size t - 1", "proof(induction x t arbitrary: t' rule: del_tm.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x t'.\n       del x \\<langle>\\<rangle> = Some t' \\<Longrightarrow>\n       size t' = size \\<langle>\\<rangle> - 1\n 2. \\<And>x l y r t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>cmp x y = LT; del x l = Some t'\\<rbrakk>\n                   \\<Longrightarrow> size t' = size l - 1;\n        \\<And>t'.\n           \\<lbrakk>cmp x y = GT; del x r = Some t'\\<rbrakk>\n           \\<Longrightarrow> size t' = size r - 1;\n        del x \\<langle>l, y, r\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1", "case 1"], ["proof (state)\nthis:\n  del x_ \\<langle>\\<rangle> = Some t'\n\ngoal (2 subgoals):\n 1. \\<And>x t'.\n       del x \\<langle>\\<rangle> = Some t' \\<Longrightarrow>\n       size t' = size \\<langle>\\<rangle> - 1\n 2. \\<And>x l y r t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>cmp x y = LT; del x l = Some t'\\<rbrakk>\n                   \\<Longrightarrow> size t' = size l - 1;\n        \\<And>t'.\n           \\<lbrakk>cmp x y = GT; del x r = Some t'\\<rbrakk>\n           \\<Longrightarrow> size t' = size r - 1;\n        del x \\<langle>l, y, r\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1", "thus ?case"], ["proof (prove)\nusing this:\n  del x_ \\<langle>\\<rangle> = Some t'\n\ngoal (1 subgoal):\n 1. size t' = size \\<langle>\\<rangle> - 1", "by simp"], ["proof (state)\nthis:\n  size t' = size \\<langle>\\<rangle> - 1\n\ngoal (1 subgoal):\n 1. \\<And>x l y r t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>cmp x y = LT; del x l = Some t'\\<rbrakk>\n                   \\<Longrightarrow> size t' = size l - 1;\n        \\<And>t'.\n           \\<lbrakk>cmp x y = GT; del x r = Some t'\\<rbrakk>\n           \\<Longrightarrow> size t' = size r - 1;\n        del x \\<langle>l, y, r\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x l y r t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>cmp x y = LT; del x l = Some t'\\<rbrakk>\n                   \\<Longrightarrow> size t' = size l - 1;\n        \\<And>t'.\n           \\<lbrakk>cmp x y = GT; del x r = Some t'\\<rbrakk>\n           \\<Longrightarrow> size t' = size r - 1;\n        del x \\<langle>l, y, r\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1", "case (2 x l y r)"], ["proof (state)\nthis:\n  \\<lbrakk>cmp x y = LT; del x l = Some ?t'\\<rbrakk>\n  \\<Longrightarrow> size ?t' = size l - 1\n  \\<lbrakk>cmp x y = GT; del x r = Some ?t'\\<rbrakk>\n  \\<Longrightarrow> size ?t' = size r - 1\n  del x \\<langle>l, y, r\\<rangle> = Some t'\n\ngoal (1 subgoal):\n 1. \\<And>x l y r t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>cmp x y = LT; del x l = Some t'\\<rbrakk>\n                   \\<Longrightarrow> size t' = size l - 1;\n        \\<And>t'.\n           \\<lbrakk>cmp x y = GT; del x r = Some t'\\<rbrakk>\n           \\<Longrightarrow> size t' = size r - 1;\n        del x \\<langle>l, y, r\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1", "consider (ls) \"x < y\" | (eq) \"x = y\" | (gr) \"x > y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y \\<Longrightarrow> thesis; x = y \\<Longrightarrow> thesis;\n     y < x \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by(metis less_linear)"], ["proof (state)\nthis:\n  \\<lbrakk>x < y \\<Longrightarrow> ?thesis; x = y \\<Longrightarrow> ?thesis;\n   y < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x l y r t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>cmp x y = LT; del x l = Some t'\\<rbrakk>\n                   \\<Longrightarrow> size t' = size l - 1;\n        \\<And>t'.\n           \\<lbrakk>cmp x y = GT; del x r = Some t'\\<rbrakk>\n           \\<Longrightarrow> size t' = size r - 1;\n        del x \\<langle>l, y, r\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>x < y \\<Longrightarrow> ?thesis; x = y \\<Longrightarrow> ?thesis;\n   y < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. size t' = size \\<langle>l, y, r\\<rangle> - 1", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1\n 2. x = y \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1\n 3. y < x \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1", "case ls"], ["proof (state)\nthis:\n  x < y\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1\n 2. x = y \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1\n 3. y < x \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1", "with \"2.prems\""], ["proof (chain)\npicking this:\n  del x \\<langle>l, y, r\\<rangle> = Some t'\n  x < y", "obtain l' where l': \"del x l = Some l'\""], ["proof (prove)\nusing this:\n  del x \\<langle>l, y, r\\<rangle> = Some t'\n  x < y\n\ngoal (1 subgoal):\n 1. (\\<And>l'. del x l = Some l' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto split: option.splits)"], ["proof (state)\nthis:\n  del x l = Some l'\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1\n 2. x = y \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1\n 3. y < x \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1", "hence [arith]: \"size l \\<noteq> 0\""], ["proof (prove)\nusing this:\n  del x l = Some l'\n\ngoal (1 subgoal):\n 1. size l \\<noteq> 0", "by(cases l) auto"], ["proof (state)\nthis:\n  size l \\<noteq> 0\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1\n 2. x = y \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1\n 3. y < x \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. size t' = size \\<langle>l, y, r\\<rangle> - 1", "using ls 2 l'"], ["proof (prove)\nusing this:\n  x < y\n  \\<lbrakk>cmp x y = LT; del x l = Some ?t'\\<rbrakk>\n  \\<Longrightarrow> size ?t' = size l - 1\n  \\<lbrakk>cmp x y = GT; del x r = Some ?t'\\<rbrakk>\n  \\<Longrightarrow> size ?t' = size r - 1\n  del x \\<langle>l, y, r\\<rangle> = Some t'\n  del x l = Some l'\n\ngoal (1 subgoal):\n 1. size t' = size \\<langle>l, y, r\\<rangle> - 1", "by(auto)"], ["proof (state)\nthis:\n  size t' = size \\<langle>l, y, r\\<rangle> - 1\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1\n 2. y < x \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1\n 2. y < x \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1", "case eq"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1\n 2. y < x \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. size t' = size \\<langle>l, y, r\\<rangle> - 1", "proof (cases \"r = Leaf\")"], ["proof (state)\ngoal (2 subgoals):\n 1. r = \\<langle>\\<rangle> \\<Longrightarrow>\n    size t' = size \\<langle>l, y, r\\<rangle> - 1\n 2. r \\<noteq> \\<langle>\\<rangle> \\<Longrightarrow>\n    size t' = size \\<langle>l, y, r\\<rangle> - 1", "case True"], ["proof (state)\nthis:\n  r = \\<langle>\\<rangle>\n\ngoal (2 subgoals):\n 1. r = \\<langle>\\<rangle> \\<Longrightarrow>\n    size t' = size \\<langle>l, y, r\\<rangle> - 1\n 2. r \\<noteq> \\<langle>\\<rangle> \\<Longrightarrow>\n    size t' = size \\<langle>l, y, r\\<rangle> - 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  r = \\<langle>\\<rangle>\n\ngoal (1 subgoal):\n 1. size t' = size \\<langle>l, y, r\\<rangle> - 1", "using eq \"2.prems\""], ["proof (prove)\nusing this:\n  r = \\<langle>\\<rangle>\n  x = y\n  del x \\<langle>l, y, r\\<rangle> = Some t'\n\ngoal (1 subgoal):\n 1. size t' = size \\<langle>l, y, r\\<rangle> - 1", "by(simp)"], ["proof (state)\nthis:\n  size t' = size \\<langle>l, y, r\\<rangle> - 1\n\ngoal (1 subgoal):\n 1. r \\<noteq> \\<langle>\\<rangle> \\<Longrightarrow>\n    size t' = size \\<langle>l, y, r\\<rangle> - 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<noteq> \\<langle>\\<rangle> \\<Longrightarrow>\n    size t' = size \\<langle>l, y, r\\<rangle> - 1", "case False"], ["proof (state)\nthis:\n  r \\<noteq> \\<langle>\\<rangle>\n\ngoal (1 subgoal):\n 1. r \\<noteq> \\<langle>\\<rangle> \\<Longrightarrow>\n    size t' = size \\<langle>l, y, r\\<rangle> - 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  r \\<noteq> \\<langle>\\<rangle>\n\ngoal (1 subgoal):\n 1. size t' = size \\<langle>l, y, r\\<rangle> - 1", "using eq \"2.prems\" eq_size_0[of r]"], ["proof (prove)\nusing this:\n  r \\<noteq> \\<langle>\\<rangle>\n  x = y\n  del x \\<langle>l, y, r\\<rangle> = Some t'\n  (size r = 0) = (r = \\<langle>\\<rangle>)\n\ngoal (1 subgoal):\n 1. size t' = size \\<langle>l, y, r\\<rangle> - 1", "by (auto simp add: size_split_min simp del: eq_size_0 split: prod.splits)"], ["proof (state)\nthis:\n  size t' = size \\<langle>l, y, r\\<rangle> - 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  size t' = size \\<langle>l, y, r\\<rangle> - 1\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1", "case gr"], ["proof (state)\nthis:\n  y < x\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1", "with \"2.prems\""], ["proof (chain)\npicking this:\n  del x \\<langle>l, y, r\\<rangle> = Some t'\n  y < x", "obtain r' where r': \"del x r = Some r'\""], ["proof (prove)\nusing this:\n  del x \\<langle>l, y, r\\<rangle> = Some t'\n  y < x\n\ngoal (1 subgoal):\n 1. (\\<And>r'. del x r = Some r' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto split: option.splits)"], ["proof (state)\nthis:\n  del x r = Some r'\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1", "hence [arith]: \"size r \\<noteq> 0\""], ["proof (prove)\nusing this:\n  del x r = Some r'\n\ngoal (1 subgoal):\n 1. size r \\<noteq> 0", "by(cases r) auto"], ["proof (state)\nthis:\n  size r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> size t' = size \\<langle>l, y, r\\<rangle> - 1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. size t' = size \\<langle>l, y, r\\<rangle> - 1", "using gr 2 r'"], ["proof (prove)\nusing this:\n  y < x\n  \\<lbrakk>cmp x y = LT; del x l = Some ?t'\\<rbrakk>\n  \\<Longrightarrow> size ?t' = size l - 1\n  \\<lbrakk>cmp x y = GT; del x r = Some ?t'\\<rbrakk>\n  \\<Longrightarrow> size ?t' = size r - 1\n  del x \\<langle>l, y, r\\<rangle> = Some t'\n  del x r = Some r'\n\ngoal (1 subgoal):\n 1. size t' = size \\<langle>l, y, r\\<rangle> - 1", "by(auto)"], ["proof (state)\nthis:\n  size t' = size \\<langle>l, y, r\\<rangle> - 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  size t' = size \\<langle>l, y, r\\<rangle> - 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma height_del: \"del x t = Some t' \\<Longrightarrow> height t' \\<le> height t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. del x t = Some t' \\<Longrightarrow> height t' \\<le> height t", "proof(induction x t arbitrary: t' rule: del_tm.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x t'.\n       del x \\<langle>\\<rangle> = Some t' \\<Longrightarrow>\n       height t' \\<le> height \\<langle>\\<rangle>\n 2. \\<And>x l y r t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>cmp x y = LT; del x l = Some t'\\<rbrakk>\n                   \\<Longrightarrow> height t' \\<le> height l;\n        \\<And>t'.\n           \\<lbrakk>cmp x y = GT; del x r = Some t'\\<rbrakk>\n           \\<Longrightarrow> height t' \\<le> height r;\n        del x \\<langle>l, y, r\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> height t' \\<le> height \\<langle>l, y, r\\<rangle>", "case 1"], ["proof (state)\nthis:\n  del x_ \\<langle>\\<rangle> = Some t'\n\ngoal (2 subgoals):\n 1. \\<And>x t'.\n       del x \\<langle>\\<rangle> = Some t' \\<Longrightarrow>\n       height t' \\<le> height \\<langle>\\<rangle>\n 2. \\<And>x l y r t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>cmp x y = LT; del x l = Some t'\\<rbrakk>\n                   \\<Longrightarrow> height t' \\<le> height l;\n        \\<And>t'.\n           \\<lbrakk>cmp x y = GT; del x r = Some t'\\<rbrakk>\n           \\<Longrightarrow> height t' \\<le> height r;\n        del x \\<langle>l, y, r\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> height t' \\<le> height \\<langle>l, y, r\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  del x_ \\<langle>\\<rangle> = Some t'\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>\\<rangle>", "by simp"], ["proof (state)\nthis:\n  height t' \\<le> height \\<langle>\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>x l y r t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>cmp x y = LT; del x l = Some t'\\<rbrakk>\n                   \\<Longrightarrow> height t' \\<le> height l;\n        \\<And>t'.\n           \\<lbrakk>cmp x y = GT; del x r = Some t'\\<rbrakk>\n           \\<Longrightarrow> height t' \\<le> height r;\n        del x \\<langle>l, y, r\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> height t' \\<le> height \\<langle>l, y, r\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x l y r t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>cmp x y = LT; del x l = Some t'\\<rbrakk>\n                   \\<Longrightarrow> height t' \\<le> height l;\n        \\<And>t'.\n           \\<lbrakk>cmp x y = GT; del x r = Some t'\\<rbrakk>\n           \\<Longrightarrow> height t' \\<le> height r;\n        del x \\<langle>l, y, r\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> height t' \\<le> height \\<langle>l, y, r\\<rangle>", "case (2 x l y r)"], ["proof (state)\nthis:\n  \\<lbrakk>cmp x y = LT; del x l = Some ?t'\\<rbrakk>\n  \\<Longrightarrow> height ?t' \\<le> height l\n  \\<lbrakk>cmp x y = GT; del x r = Some ?t'\\<rbrakk>\n  \\<Longrightarrow> height ?t' \\<le> height r\n  del x \\<langle>l, y, r\\<rangle> = Some t'\n\ngoal (1 subgoal):\n 1. \\<And>x l y r t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>cmp x y = LT; del x l = Some t'\\<rbrakk>\n                   \\<Longrightarrow> height t' \\<le> height l;\n        \\<And>t'.\n           \\<lbrakk>cmp x y = GT; del x r = Some t'\\<rbrakk>\n           \\<Longrightarrow> height t' \\<le> height r;\n        del x \\<langle>l, y, r\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> height t' \\<le> height \\<langle>l, y, r\\<rangle>", "consider (ls) \"x < y\" | (eq) \"x = y\" | (gr) \"x > y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y \\<Longrightarrow> thesis; x = y \\<Longrightarrow> thesis;\n     y < x \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by(metis less_linear)"], ["proof (state)\nthis:\n  \\<lbrakk>x < y \\<Longrightarrow> ?thesis; x = y \\<Longrightarrow> ?thesis;\n   y < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x l y r t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>cmp x y = LT; del x l = Some t'\\<rbrakk>\n                   \\<Longrightarrow> height t' \\<le> height l;\n        \\<And>t'.\n           \\<lbrakk>cmp x y = GT; del x r = Some t'\\<rbrakk>\n           \\<Longrightarrow> height t' \\<le> height r;\n        del x \\<langle>l, y, r\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> height t' \\<le> height \\<langle>l, y, r\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>x < y \\<Longrightarrow> ?thesis; x = y \\<Longrightarrow> ?thesis;\n   y < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle>", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> height t' \\<le> height \\<langle>l, y, r\\<rangle>\n 2. x = y \\<Longrightarrow> height t' \\<le> height \\<langle>l, y, r\\<rangle>\n 3. y < x \\<Longrightarrow> height t' \\<le> height \\<langle>l, y, r\\<rangle>", "case ls"], ["proof (state)\nthis:\n  x < y\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow> height t' \\<le> height \\<langle>l, y, r\\<rangle>\n 2. x = y \\<Longrightarrow> height t' \\<le> height \\<langle>l, y, r\\<rangle>\n 3. y < x \\<Longrightarrow> height t' \\<le> height \\<langle>l, y, r\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  x < y\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle>", "using 2"], ["proof (prove)\nusing this:\n  x < y\n  \\<lbrakk>cmp x y = LT; del x l = Some ?t'\\<rbrakk>\n  \\<Longrightarrow> height ?t' \\<le> height l\n  \\<lbrakk>cmp x y = GT; del x r = Some ?t'\\<rbrakk>\n  \\<Longrightarrow> height ?t' \\<le> height r\n  del x \\<langle>l, y, r\\<rangle> = Some t'\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle>", "by(fastforce split: option.splits)"], ["proof (state)\nthis:\n  height t' \\<le> height \\<langle>l, y, r\\<rangle>\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> height t' \\<le> height \\<langle>l, y, r\\<rangle>\n 2. y < x \\<Longrightarrow> height t' \\<le> height \\<langle>l, y, r\\<rangle>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> height t' \\<le> height \\<langle>l, y, r\\<rangle>\n 2. y < x \\<Longrightarrow> height t' \\<le> height \\<langle>l, y, r\\<rangle>", "case eq"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> height t' \\<le> height \\<langle>l, y, r\\<rangle>\n 2. y < x \\<Longrightarrow> height t' \\<le> height \\<langle>l, y, r\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle>", "using \"2.prems\""], ["proof (prove)\nusing this:\n  x = y\n  del x \\<langle>l, y, r\\<rangle> = Some t'\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle>", "by (auto dest: height_split_min split: if_splits prod.splits)"], ["proof (state)\nthis:\n  height t' \\<le> height \\<langle>l, y, r\\<rangle>\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> height t' \\<le> height \\<langle>l, y, r\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> height t' \\<le> height \\<langle>l, y, r\\<rangle>", "case gr"], ["proof (state)\nthis:\n  y < x\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> height t' \\<le> height \\<langle>l, y, r\\<rangle>", "thus ?thesis"], ["proof (prove)\nusing this:\n  y < x\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle>", "using 2"], ["proof (prove)\nusing this:\n  y < x\n  \\<lbrakk>cmp x y = LT; del x l = Some ?t'\\<rbrakk>\n  \\<Longrightarrow> height ?t' \\<le> height l\n  \\<lbrakk>cmp x y = GT; del x r = Some ?t'\\<rbrakk>\n  \\<Longrightarrow> height ?t' \\<le> height r\n  del x \\<langle>l, y, r\\<rangle> = Some t'\n\ngoal (1 subgoal):\n 1. height t' \\<le> height \\<langle>l, y, r\\<rangle>", "by(fastforce split: option.splits)"], ["proof (state)\nthis:\n  height t' \\<le> height \\<langle>l, y, r\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  height t' \\<le> height \\<langle>l, y, r\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bal_i_delete:\nassumes \"bal_i (size t + dl) (height t)\" \"delete x (t,dl) = (t',dl')\"\nshows \"bal_i (size t' + dl') (height t')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal_i (size t' + dl') (height t')", "proof (cases \"del x t\")"], ["proof (state)\ngoal (2 subgoals):\n 1. del x t = None \\<Longrightarrow> bal_i (size t' + dl') (height t')\n 2. \\<And>a.\n       del x t = Some a \\<Longrightarrow> bal_i (size t' + dl') (height t')", "case None"], ["proof (state)\nthis:\n  del x t = None\n\ngoal (2 subgoals):\n 1. del x t = None \\<Longrightarrow> bal_i (size t' + dl') (height t')\n 2. \\<And>a.\n       del x t = Some a \\<Longrightarrow> bal_i (size t' + dl') (height t')", "with assms"], ["proof (chain)\npicking this:\n  bal_i (size t + dl) (height t)\n  local.delete x (t, dl) = (t', dl')\n  del x t = None", "show ?thesis"], ["proof (prove)\nusing this:\n  bal_i (size t + dl) (height t)\n  local.delete x (t, dl) = (t', dl')\n  del x t = None\n\ngoal (1 subgoal):\n 1. bal_i (size t' + dl') (height t')", "by (simp add: delete.simps)"], ["proof (state)\nthis:\n  bal_i (size t' + dl') (height t')\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       del x t = Some a \\<Longrightarrow> bal_i (size t' + dl') (height t')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       del x t = Some a \\<Longrightarrow> bal_i (size t' + dl') (height t')", "case Some"], ["proof (state)\nthis:\n  del x t = Some a_\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       del x t = Some a \\<Longrightarrow> bal_i (size t' + dl') (height t')", "hence \"size t \\<noteq> 0\""], ["proof (prove)\nusing this:\n  del x t = Some a_\n\ngoal (1 subgoal):\n 1. size t \\<noteq> 0", "by(cases t) auto"], ["proof (state)\nthis:\n  size t \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       del x t = Some a \\<Longrightarrow> bal_i (size t' + dl') (height t')", "thus ?thesis"], ["proof (prove)\nusing this:\n  size t \\<noteq> 0\n\ngoal (1 subgoal):\n 1. bal_i (size t' + dl') (height t')", "using Some assms size_del height_del[OF Some]"], ["proof (prove)\nusing this:\n  size t \\<noteq> 0\n  del x t = Some a_\n  bal_i (size t + dl) (height t)\n  local.delete x (t, dl) = (t', dl')\n  del ?x ?t = Some ?t' \\<Longrightarrow> size ?t' = size ?t - 1\n  height a_ \\<le> height t\n\ngoal (1 subgoal):\n 1. bal_i (size t' + dl') (height t')", "by(force simp add: delete.simps bal_i_balance mono_bal_i' split: if_splits)"], ["proof (state)\nthis:\n  bal_i (size t' + dl') (height t')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bal_d_delete:\n  \"\\<lbrakk> bal_d (size t) dl; delete x (t,dl) = (t',dl') \\<rbrakk>\n   \\<Longrightarrow> bal_d (size t') dl'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>bal_d (size t) dl; local.delete x (t, dl) = (t', dl')\\<rbrakk>\n    \\<Longrightarrow> bal_d (size t') dl'", "by (auto simp add: delete.simps bal_d0 size_del split: option.splits if_splits)"], ["", "text \\<open>Full functional correctness of the naive implementation:\\<close>"], ["", "interpretation Set_by_Ordered\nwhere empty = \"(Leaf,0)\" and isin = \"\\<lambda>(t,n). isin t\"\nand insert = insert_d and delete = delete\nand inorder = \"\\<lambda>(t,n). inorder t\" and inv = \"\\<lambda>_. True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Set_by_Ordered (\\<langle>\\<rangle>, 0) insert_d local.delete\n     (\\<lambda>(t, n). isin t) (\\<lambda>(t, n). inorder t)\n     (\\<lambda>_. True)", "proof (standard, goal_cases)"], ["proof (state)\ngoal (6 subgoals):\n 1. (case (\\<langle>\\<rangle>, 0) of (t, n) \\<Rightarrow> inorder t) = []\n 2. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case t of (t, n) \\<Rightarrow> isin t) x =\n       (x \\<in> set (case t of (t, n) \\<Rightarrow> inorder t))\n 3. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case insert_d x t of (t, n) \\<Rightarrow> inorder t) =\n       ins_list x (case t of (t, n) \\<Rightarrow> inorder t)\n 4. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case local.delete x t of (t, n) \\<Rightarrow> inorder t) =\n       del_list x (case t of (t, n) \\<Rightarrow> inorder t)\n 5. True\n 6. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       True", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (6 subgoals):\n 1. (case (\\<langle>\\<rangle>, 0) of (t, n) \\<Rightarrow> inorder t) = []\n 2. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case t of (t, n) \\<Rightarrow> isin t) x =\n       (x \\<in> set (case t of (t, n) \\<Rightarrow> inorder t))\n 3. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case insert_d x t of (t, n) \\<Rightarrow> inorder t) =\n       ins_list x (case t of (t, n) \\<Rightarrow> inorder t)\n 4. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case local.delete x t of (t, n) \\<Rightarrow> inorder t) =\n       del_list x (case t of (t, n) \\<Rightarrow> inorder t)\n 5. True\n 6. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       True", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case (\\<langle>\\<rangle>, 0) of (t, n) \\<Rightarrow> inorder t) = []", "by simp"], ["proof (state)\nthis:\n  (case (\\<langle>\\<rangle>, 0) of (t, n) \\<Rightarrow> inorder t) = []\n\ngoal (5 subgoals):\n 1. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case t of (t, n) \\<Rightarrow> isin t) x =\n       (x \\<in> set (case t of (t, n) \\<Rightarrow> inorder t))\n 2. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case insert_d x t of (t, n) \\<Rightarrow> inorder t) =\n       ins_list x (case t of (t, n) \\<Rightarrow> inorder t)\n 3. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case local.delete x t of (t, n) \\<Rightarrow> inorder t) =\n       del_list x (case t of (t, n) \\<Rightarrow> inorder t)\n 4. True\n 5. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       True", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case t of (t, n) \\<Rightarrow> isin t) x =\n       (x \\<in> set (case t of (t, n) \\<Rightarrow> inorder t))\n 2. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case insert_d x t of (t, n) \\<Rightarrow> inorder t) =\n       ins_list x (case t of (t, n) \\<Rightarrow> inorder t)\n 3. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case local.delete x t of (t, n) \\<Rightarrow> inorder t) =\n       del_list x (case t of (t, n) \\<Rightarrow> inorder t)\n 4. True\n 5. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       True", "case 2"], ["proof (state)\nthis:\n  True \\<and> Sorted_Less.sorted (case t_ of (t, n) \\<Rightarrow> inorder t)\n\ngoal (5 subgoals):\n 1. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case t of (t, n) \\<Rightarrow> isin t) x =\n       (x \\<in> set (case t of (t, n) \\<Rightarrow> inorder t))\n 2. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case insert_d x t of (t, n) \\<Rightarrow> inorder t) =\n       ins_list x (case t of (t, n) \\<Rightarrow> inorder t)\n 3. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case local.delete x t of (t, n) \\<Rightarrow> inorder t) =\n       del_list x (case t of (t, n) \\<Rightarrow> inorder t)\n 4. True\n 5. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       True", "thus ?case"], ["proof (prove)\nusing this:\n  True \\<and> Sorted_Less.sorted (case t_ of (t, n) \\<Rightarrow> inorder t)\n\ngoal (1 subgoal):\n 1. (case t_ of (t, n) \\<Rightarrow> isin t) x_ =\n    (x_ \\<in> set (case t_ of (t, n) \\<Rightarrow> inorder t))", "by(simp add: isin_set split: prod.splits)"], ["proof (state)\nthis:\n  (case t_ of (t, n) \\<Rightarrow> isin t) x_ =\n  (x_ \\<in> set (case t_ of (t, n) \\<Rightarrow> inorder t))\n\ngoal (4 subgoals):\n 1. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case insert_d x t of (t, n) \\<Rightarrow> inorder t) =\n       ins_list x (case t of (t, n) \\<Rightarrow> inorder t)\n 2. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case local.delete x t of (t, n) \\<Rightarrow> inorder t) =\n       del_list x (case t of (t, n) \\<Rightarrow> inorder t)\n 3. True\n 4. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       True", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case insert_d x t of (t, n) \\<Rightarrow> inorder t) =\n       ins_list x (case t of (t, n) \\<Rightarrow> inorder t)\n 2. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case local.delete x t of (t, n) \\<Rightarrow> inorder t) =\n       del_list x (case t of (t, n) \\<Rightarrow> inorder t)\n 3. True\n 4. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       True", "case (3 t)"], ["proof (state)\nthis:\n  True \\<and> Sorted_Less.sorted (case t of (t, n) \\<Rightarrow> inorder t)\n\ngoal (4 subgoals):\n 1. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case insert_d x t of (t, n) \\<Rightarrow> inorder t) =\n       ins_list x (case t of (t, n) \\<Rightarrow> inorder t)\n 2. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case local.delete x t of (t, n) \\<Rightarrow> inorder t) =\n       del_list x (case t of (t, n) \\<Rightarrow> inorder t)\n 3. True\n 4. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       True", "thus ?case"], ["proof (prove)\nusing this:\n  True \\<and> Sorted_Less.sorted (case t of (t, n) \\<Rightarrow> inorder t)\n\ngoal (1 subgoal):\n 1. (case insert_d x_ t of (t, n) \\<Rightarrow> inorder t) =\n    ins_list x_ (case t of (t, n) \\<Rightarrow> inorder t)", "by(auto simp del: insert_d.simps simp add: inorder_insert_d split: prod.splits)"], ["proof (state)\nthis:\n  (case insert_d x_ t of (t, n) \\<Rightarrow> inorder t) =\n  ins_list x_ (case t of (t, n) \\<Rightarrow> inorder t)\n\ngoal (3 subgoals):\n 1. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case local.delete x t of (t, n) \\<Rightarrow> inorder t) =\n       del_list x (case t of (t, n) \\<Rightarrow> inorder t)\n 2. True\n 3. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       True", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case local.delete x t of (t, n) \\<Rightarrow> inorder t) =\n       del_list x (case t of (t, n) \\<Rightarrow> inorder t)\n 2. True\n 3. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       True", "case (4 tn x)"], ["proof (state)\nthis:\n  True \\<and> Sorted_Less.sorted (case tn of (t, n) \\<Rightarrow> inorder t)\n\ngoal (3 subgoals):\n 1. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case local.delete x t of (t, n) \\<Rightarrow> inorder t) =\n       del_list x (case t of (t, n) \\<Rightarrow> inorder t)\n 2. True\n 3. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       True", "obtain t n where \"tn = (t,n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t n. tn = (t, n) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  tn = (t, n)\n\ngoal (3 subgoals):\n 1. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       (case local.delete x t of (t, n) \\<Rightarrow> inorder t) =\n       del_list x (case t of (t, n) \\<Rightarrow> inorder t)\n 2. True\n 3. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       True", "thus ?case"], ["proof (prove)\nusing this:\n  tn = (t, n)\n\ngoal (1 subgoal):\n 1. (case local.delete x tn of (t, n) \\<Rightarrow> inorder t) =\n    del_list x (case tn of (t, n) \\<Rightarrow> inorder t)", "using 4"], ["proof (prove)\nusing this:\n  tn = (t, n)\n  True \\<and> Sorted_Less.sorted (case tn of (t, n) \\<Rightarrow> inorder t)\n\ngoal (1 subgoal):\n 1. (case local.delete x tn of (t, n) \\<Rightarrow> inorder t) =\n    del_list x (case tn of (t, n) \\<Rightarrow> inorder t)", "by(auto simp: inorder_delete split: prod.splits)"], ["proof (state)\nthis:\n  (case local.delete x tn of (t, n) \\<Rightarrow> inorder t) =\n  del_list x (case tn of (t, n) \\<Rightarrow> inorder t)\n\ngoal (2 subgoals):\n 1. True\n 2. \\<And>t x.\n       True \\<and>\n       Sorted_Less.sorted\n        (case t of (t, n) \\<Rightarrow> inorder t) \\<Longrightarrow>\n       True", "qed (rule TrueI)+"], ["", "end"], ["", "(* RBTid1 *)"], ["", "interpretation I_RBTid1: RBTid1\nwhere bal_i = \"\\<lambda>n h. h \\<le> log 2 (real(n + 1)) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RBTid1 TYPE('a) (\\<lambda>x xa. real xa \\<le> log 2 (real (x + 1)) + 1)", ".."], ["", "subsection \"Efficient Implementation (with delete)\""], ["", "type_synonym 'a rbt2 = \"'a tree * nat * nat\""], ["", "locale RBTid2 = RBTi2 + RBTid1\nbegin"], ["", "subsubsection \\<open>Functions\\<close>"], ["", "fun insert2_d :: \"'a::linorder \\<Rightarrow> 'a rbt2 \\<Rightarrow> 'a rbt2\" where\n\"insert2_d x (t,n,dl) =\n  (case ins2 (n+dl) 0 x t of\n     Same2 \\<Rightarrow> (t,n,dl) |\n     Bal2 t' \\<Rightarrow> (t',n+1,dl))\""], ["", "(* Unbal unreachable *)"], ["", "fun insert3_d_tm :: \"'a::linorder \\<Rightarrow> 'a rbt2 \\<Rightarrow> 'a rbt2 tm\" where\n\"insert3_d_tm x (t,n,dl) =1\n  do { t' \\<leftarrow> ins3_tm (n+dl) 0 x t;\n       case t' of\n         Same2 \\<Rightarrow> return (t,n,dl) |\n         Bal2 t' \\<Rightarrow> return (t',n+1,dl) |\n         Unbal2 _ _ _ \\<Rightarrow> return undefined}\""], ["", "(* Unbal unreachable *)"], ["", "definition insert3_d :: \"'a::linorder \\<Rightarrow> 'a rbt2 \\<Rightarrow> 'a rbt2\" where\n\"insert3_d a t = val (insert3_d_tm a t)\""], ["", "lemma insert3_d_def2[simp,code]: \"insert3_d x (t,n,dl) =\n  (let t' = ins3 (n+dl) 0 x t in\n   case t' of\n     Same2 \\<Rightarrow> (t,n,dl) |\n     Bal2 t' \\<Rightarrow> (t',n+1,dl) |\n     Unbal2 _ _ _ \\<Rightarrow> undefined)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert3_d x (t, n, dl) =\n    (let t' = ins3 (n + dl) 0 x t\n     in case t' of Same2 \\<Rightarrow> (t, n, dl)\n        | Bal2 t' \\<Rightarrow> (t', n + 1, dl))", "using val_cong[OF insert3_d_tm.simps(1)]"], ["proof (prove)\nusing this:\n  Time_Monad.val (insert3_d_tm ?x1 (?t1, ?n1, ?dl1)) =\n  Time_Monad.val\n   (ins3_tm (?n1 + ?dl1) 0 ?x1 ?t1 \\<bind>\n    case_up2 (return (?t1, ?n1, ?dl1))\n     (\\<lambda>t'. return (t', ?n1 + 1, ?dl1))\n     (\\<lambda>x xa xb. return undefined) \\<bind>\n    tick)\n\ngoal (1 subgoal):\n 1. insert3_d x (t, n, dl) =\n    (let t' = ins3 (n + dl) 0 x t\n     in case t' of Same2 \\<Rightarrow> (t, n, dl)\n        | Bal2 t' \\<Rightarrow> (t', n + 1, dl))", "by(simp only: insert3_d_def ins3_def val_simps up2.case_distrib[of val])"], ["", "definition T_insert3_d :: \"'a::linorder \\<Rightarrow> 'a rbt2 \\<Rightarrow> nat\" where\n\"T_insert3_d x t = time(insert3_d_tm x t)\""], ["", "lemma T_insert3_d_def2[simp]:\n  \"T_insert3_d x (t,n,dl) = (T_ins3 (n+dl) 0 x t + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T_insert3_d x (t, n, dl) = T_ins3 (n + dl) 0 x t + 1", "by(simp add: T_insert3_d_def T_ins3_def tm_simps split: tm.split up2.split)"], ["", "fun delete2_tm :: \"'a::linorder \\<Rightarrow> 'a rbt2 \\<Rightarrow> 'a rbt2 tm\" where\n\"delete2_tm x (t,n,dl) =1\n  do { t' \\<leftarrow> del_tm x t;\n       case t' of\n         None \\<Rightarrow> return (t,n,dl) |\n         Some t' \\<Rightarrow>\n           (let n' = n-1; dl' = dl + 1\n            in if bal_d n' dl' then return (t',n',dl')\n               else do { t'' \\<leftarrow> bal_tree_tm n' t';\n                         return (t'', n', 0)})}\""], ["", "definition delete2 :: \"'a::linorder \\<Rightarrow> 'a rbt2 \\<Rightarrow> 'a rbt2\" where\n\"delete2 x t = val(delete2_tm x t)\""], ["", "lemma delete2_def2:\n  \"delete2 x (t,n,dl) =\n  (let t' = del x t in\n   case t' of\n    None \\<Rightarrow> (t,n,dl) |\n    Some t' \\<Rightarrow> (let n' = n-1; dl' = dl + 1\n      in if bal_d n' dl' then (t',n',dl')\n         else let t'' = bal_tree n' t' in (t'', n', 0)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.delete2 x (t, n, dl) =\n    (let t' = del x t\n     in case t' of None \\<Rightarrow> (t, n, dl)\n        | Some t' \\<Rightarrow>\n            let n' = n - 1; dl' = dl + 1\n            in if bal_d n' dl' then (t', n', dl')\n               else let t'' = Root_Balanced_Tree.bal_tree n' t'\n                    in (t'', n', 0))", "using val_cong[OF delete2_tm.simps(1)]"], ["proof (prove)\nusing this:\n  Time_Monad.val (delete2_tm ?x1 (?t1, ?n1, ?dl1)) =\n  Time_Monad.val\n   (del_tm ?x1 ?t1 \\<bind>\n    case_option (return (?t1, ?n1, ?dl1))\n     (\\<lambda>t'.\n         let n' = ?n1 - 1; dl' = ?dl1 + 1\n         in if bal_d n' dl' then return (t', n', dl')\n            else bal_tree_tm n' t' \\<bind>\n                 (\\<lambda>t''. return (t'', n', 0))) \\<bind>\n    tick)\n\ngoal (1 subgoal):\n 1. local.delete2 x (t, n, dl) =\n    (let t' = del x t\n     in case t' of None \\<Rightarrow> (t, n, dl)\n        | Some t' \\<Rightarrow>\n            let n' = n - 1; dl' = dl + 1\n            in if bal_d n' dl' then (t', n', dl')\n               else let t'' = Root_Balanced_Tree.bal_tree n' t'\n                    in (t'', n', 0))", "by(simp only: delete2_def ins3_def del_def bal_tree_def val_simps option.case_distrib[of val])"], ["", "definition T_delete2 :: \"'a::linorder \\<Rightarrow> 'a rbt2 \\<Rightarrow> nat\" where\n\"T_delete2 x t = time(delete2_tm x t)\""], ["", "lemma T_delete2_def2:\n  \"T_delete2 x (t,n,dl) = (T_del x t +\n  (case del x t of\n     None \\<Rightarrow> 1 |\n     Some t' \\<Rightarrow> (let n' = n-1; dl' = dl + 1\n       in if bal_d n' dl' then 1 else T_bal_tree n' t' + 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T_delete2 x (t, n, dl) =\n    T_del x t +\n    (case del x t of None \\<Rightarrow> 1\n     | Some t' \\<Rightarrow>\n         let n' = n - 1; dl' = dl + 1\n         in if bal_d n' dl' then 1 else T_bal_tree n' t' + 1)", "by(auto simp add: T_delete2_def tm_simps T_del_def del_def T_bal_tree_def split: tm.split option.split)"], ["", "subsubsection \\<open>Equivalence proofs\\<close>"], ["", "lemma insert2_insert_d:\n  \"insert2_d x (t,size t,dl) = (t',n',dl') \\<longleftrightarrow>\n   (t',dl') = insert_d x (t,dl) \\<and> n' = size t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (insert2_d x (t, size t, dl) = (t', n', dl')) =\n    ((t', dl') = insert_d x (t, dl) \\<and> n' = size t')", "by(auto simp: ins2_iff_ins ins_size ins0_neq_Unbal split: up2.split up.split)"], ["", "lemma insert3_insert2_d:\n  \"bal_i (n+dl) (height t) \\<Longrightarrow> insert3_d x (t,n,dl) = insert2_d x (t,n,dl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal_i (n + dl) (height t) \\<Longrightarrow>\n    insert3_d x (t, n, dl) = insert2_d x (t, n, dl)", "by(simp add: ins3_ins2 split: up2.split)"], ["", "lemma delete2_delete:\n  \"delete2 x (t,size t,dl) = (t',n',dl') \\<longleftrightarrow>\n  (t',dl') = delete x (t,dl) \\<and> n' = size t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (local.delete2 x (t, size t, dl) = (t', n', dl')) =\n    ((t', dl') = local.delete x (t, dl) \\<and> n' = size t')", "by(auto simp: delete2_def2 delete.simps size_del balance_tree_def bal_tree\n    split: option.splits)"], ["", "subsubsection \\<open>Amortized complexity\\<close>"], ["", "fun \\<Phi>\\<^sub>d :: \"'a rbt2 \\<Rightarrow> real\" where\n\"\\<Phi>\\<^sub>d (t,n,dl) = \\<Phi> t + 4*dl/cd\""], ["", "lemma \\<Phi>\\<^sub>d_case: \"\\<Phi>\\<^sub>d tndl = (case tndl of (t,n,dl) \\<Rightarrow> \\<Phi> t + 4*dl/cd)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Phi>\\<^sub>d tndl =\n    (case case tndl of\n          (x, y) \\<Rightarrow>\n            (x, case y of (x, y) \\<Rightarrow> (x, real y)) of\n     (t, n, dl) \\<Rightarrow> \\<Phi> t + 4 * dl / cd)", "by(simp split: prod.split)"], ["", "lemma imbal_diff_decr:\n  \"size r' = size r - 1 \\<Longrightarrow>\n   real(imbal (Node l x' r')) - imbal (Node l x r) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size r' = size r - 1 \\<Longrightarrow>\n    real (imbal \\<langle>l, x', r'\\<rangle>) -\n    real (imbal \\<langle>l, x, r\\<rangle>)\n    \\<le> 1", "by(simp add: imbal.simps)"], ["", "lemma tinsert_d_amor:\nassumes \"n = size t\" \"insert_d a (t,dl) = (t',dl')\" \"bal_i (size t + dl) (height t)\"\nshows \"T_insert3_d a (t,n,dl) + \\<Phi> t' - \\<Phi> t \\<le> (6*e+2) * (height t + 1) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n    \\<le> (6 * e + 2) * real (height t + 1) + 1", "proof (cases \"ins (size t + dl) 0 a t\")"], ["proof (state)\ngoal (3 subgoals):\n 1. ins (size t + dl) 0 a t = Same \\<Longrightarrow>\n    real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n    \\<le> (6 * e + 2) * real (height t + 1) + 1\n 2. \\<And>x2.\n       ins (size t + dl) 0 a t = Bal x2 \\<Longrightarrow>\n       real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1\n 3. \\<And>x3.\n       ins (size t + dl) 0 a t = Unbal x3 \\<Longrightarrow>\n       real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1", "case Same"], ["proof (state)\nthis:\n  ins (size t + dl) 0 a t = Same\n\ngoal (3 subgoals):\n 1. ins (size t + dl) 0 a t = Same \\<Longrightarrow>\n    real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n    \\<le> (6 * e + 2) * real (height t + 1) + 1\n 2. \\<And>x2.\n       ins (size t + dl) 0 a t = Bal x2 \\<Longrightarrow>\n       real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1\n 3. \\<And>x3.\n       ins (size t + dl) 0 a t = Unbal x3 \\<Longrightarrow>\n       real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1", "have *: \"5*e * real (height t) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 5 * e * real (height t)", "using e0"], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. 0 \\<le> 5 * e * real (height t)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> 5 * e * real (height t)\n\ngoal (3 subgoals):\n 1. ins (size t + dl) 0 a t = Same \\<Longrightarrow>\n    real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n    \\<le> (6 * e + 2) * real (height t + 1) + 1\n 2. \\<And>x2.\n       ins (size t + dl) 0 a t = Bal x2 \\<Longrightarrow>\n       real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1\n 3. \\<And>x3.\n       ins (size t + dl) 0 a t = Unbal x3 \\<Longrightarrow>\n       real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n    \\<le> (6 * e + 2) * real (height t + 1) + 1", "using T_ins3_Same[of \"size t + dl\" 0 a t] Same assms"], ["proof (prove)\nusing this:\n  ins3 (size t + dl) 0 a t = Same2 \\<Longrightarrow>\n  T_ins3 (size t + dl) 0 a t \\<le> 2 * height t + 1\n  ins (size t + dl) 0 a t = Same\n  n = size t\n  insert_d a (t, dl) = (t', dl')\n  bal_i (size t + dl) (height t)\n\ngoal (1 subgoal):\n 1. real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n    \\<le> (6 * e + 2) * real (height t + 1) + 1", "apply (auto simp add: ring_distribs ins3_ins2 ins2_ins)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>T_ins3 (size t' + dl') 0 a t' \\<le> Suc (2 * height t');\n     ins (size t' + dl') 0 a t' = Same; n = size t';\n     bal_i (size t' + dl') (height t'); t = t'; dl = dl'\\<rbrakk>\n    \\<Longrightarrow> real (T_ins3 (size t' + dl') 0 a t')\n                      \\<le> 2 +\n                            (6 * e +\n                             (6 * e * real (height t') +\n                              2 * real (height t')))", "using * e0"], ["proof (prove)\nusing this:\n  0 \\<le> 5 * e * real (height t)\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<lbrakk>T_ins3 (size t' + dl') 0 a t' \\<le> Suc (2 * height t');\n     ins (size t' + dl') 0 a t' = Same; n = size t';\n     bal_i (size t' + dl') (height t'); t = t'; dl = dl'\\<rbrakk>\n    \\<Longrightarrow> real (T_ins3 (size t' + dl') 0 a t')\n                      \\<le> 2 +\n                            (6 * e +\n                             (6 * e * real (height t') +\n                              2 * real (height t')))", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>T_ins3 (size t' + dl') 0 a t' \\<le> Suc (2 * height t');\n     ins (size t' + dl') 0 a t' = Same; n = size t';\n     bal_i (size t' + dl') (height t'); dl = dl';\n     0 \\<le> 5 * e * real (height t'); 0 < e; t = t'\\<rbrakk>\n    \\<Longrightarrow> real (T_ins3 (size t' + dl') 0 a t')\n                      \\<le> 2 +\n                            (6 * e +\n                             (6 * e * real (height t') +\n                              2 * real (height t')))", "by linarith"], ["proof (state)\nthis:\n  real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n  \\<le> (6 * e + 2) * real (height t + 1) + 1\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins (size t + dl) 0 a t = Bal x2 \\<Longrightarrow>\n       real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1\n 2. \\<And>x3.\n       ins (size t + dl) 0 a t = Unbal x3 \\<Longrightarrow>\n       real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins (size t + dl) 0 a t = Bal x2 \\<Longrightarrow>\n       real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1\n 2. \\<And>x3.\n       ins (size t + dl) 0 a t = Unbal x3 \\<Longrightarrow>\n       real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1", "case (Bal t')"], ["proof (state)\nthis:\n  ins (size t + dl) 0 a t = Bal t'\n\ngoal (2 subgoals):\n 1. \\<And>x2.\n       ins (size t + dl) 0 a t = Bal x2 \\<Longrightarrow>\n       real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1\n 2. \\<And>x3.\n       ins (size t + dl) 0 a t = Unbal x3 \\<Longrightarrow>\n       real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  ins (size t + dl) 0 a t = Bal t'\n\ngoal (1 subgoal):\n 1. real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n    \\<le> (6 * e + 2) * real (height t + 1) + 1", "using T_ins3_Bal[of \"size t + dl\" 0 a t t'] Bal assms"], ["proof (prove)\nusing this:\n  ins (size t + dl) 0 a t = Bal t'\n  \\<lbrakk>ins3 (size t + dl) 0 a t = Bal2 t';\n   bal_i (size t + dl) (height t + 0)\\<rbrakk>\n  \\<Longrightarrow> real (T_ins3 (size t + dl) 0 a t) + \\<Phi> t' - \\<Phi> t\n                    \\<le> (6 * e + 2) * real (height t + 1)\n  ins (size t + dl) 0 a t = Bal t'\n  n = size t\n  insert_d a (t, dl) = (t', dl')\n  bal_i (size t + dl) (height t)\n\ngoal (1 subgoal):\n 1. real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n    \\<le> (6 * e + 2) * real (height t + 1) + 1", "by(simp add: ins_size ins3_ins2 ins2_ins)"], ["proof (state)\nthis:\n  real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n  \\<le> (6 * e + 2) * real (height t + 1) + 1\n\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins (size t + dl) 0 a t = Unbal x3 \\<Longrightarrow>\n       real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins (size t + dl) 0 a t = Unbal x3 \\<Longrightarrow>\n       real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1", "case Unbal"], ["proof (state)\nthis:\n  ins (size t + dl) 0 a t = Unbal x3_\n\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins (size t + dl) 0 a t = Unbal x3 \\<Longrightarrow>\n       real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1", "hence False"], ["proof (prove)\nusing this:\n  ins (size t + dl) 0 a t = Unbal x3_\n\ngoal (1 subgoal):\n 1. False", "by(simp add: ins0_neq_Unbal)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>x3.\n       ins (size t + dl) 0 a t = Unbal x3 \\<Longrightarrow>\n       real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n       \\<le> (6 * e + 2) * real (height t + 1) + 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n    \\<le> (6 * e + 2) * real (height t + 1) + 1", ".."], ["proof (state)\nthis:\n  real (T_insert3_d a (t, n, dl)) + \\<Phi> t' - \\<Phi> t\n  \\<le> (6 * e + 2) * real (height t + 1) + 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma T_split_min_ub:\n  \"t \\<noteq> Leaf \\<Longrightarrow> T_split_min t \\<le> height t + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<noteq> \\<langle>\\<rangle> \\<Longrightarrow>\n    T_split_min t \\<le> height t + 1", "by(induction t) auto"], ["", "lemma T_del_ub:\n  \"T_del x t \\<le> height t + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T_del x t \\<le> height t + 1", "by(induction t) (auto dest: T_split_min_ub)"], ["", "lemma imbal_split_min:\n  \"split_min t = (x,t') \\<Longrightarrow> t \\<noteq> Leaf \\<Longrightarrow> real(imbal t') - imbal t \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Root_Balanced_Tree.split_min t = (x, t');\n     t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> real (imbal t') - real (imbal t) \\<le> 1", "proof(induction t arbitrary: t')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t'.\n       \\<lbrakk>Root_Balanced_Tree.split_min \\<langle>\\<rangle> = (x, t');\n        \\<langle>\\<rangle> \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (imbal t') - real (imbal \\<langle>\\<rangle>)\n                         \\<le> 1\n 2. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>Root_Balanced_Tree.split_min t1 = (x, t');\n                    t1 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n                   \\<Longrightarrow> real (imbal t') - real (imbal t1)\n                                     \\<le> 1;\n        \\<And>t'.\n           \\<lbrakk>Root_Balanced_Tree.split_min t2 = (x, t');\n            t2 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> real (imbal t') - real (imbal t2) \\<le> 1;\n        Root_Balanced_Tree.split_min \\<langle>t1, x2, t2\\<rangle> = (x, t');\n        \\<langle>t1, x2, t2\\<rangle> \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (imbal t') -\n                         real (imbal \\<langle>t1, x2, t2\\<rangle>)\n                         \\<le> 1", "case Leaf"], ["proof (state)\nthis:\n  Root_Balanced_Tree.split_min \\<langle>\\<rangle> = (x, t')\n  \\<langle>\\<rangle> \\<noteq> \\<langle>\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>t'.\n       \\<lbrakk>Root_Balanced_Tree.split_min \\<langle>\\<rangle> = (x, t');\n        \\<langle>\\<rangle> \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (imbal t') - real (imbal \\<langle>\\<rangle>)\n                         \\<le> 1\n 2. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>Root_Balanced_Tree.split_min t1 = (x, t');\n                    t1 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n                   \\<Longrightarrow> real (imbal t') - real (imbal t1)\n                                     \\<le> 1;\n        \\<And>t'.\n           \\<lbrakk>Root_Balanced_Tree.split_min t2 = (x, t');\n            t2 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> real (imbal t') - real (imbal t2) \\<le> 1;\n        Root_Balanced_Tree.split_min \\<langle>t1, x2, t2\\<rangle> = (x, t');\n        \\<langle>t1, x2, t2\\<rangle> \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (imbal t') -\n                         real (imbal \\<langle>t1, x2, t2\\<rangle>)\n                         \\<le> 1", "thus ?case"], ["proof (prove)\nusing this:\n  Root_Balanced_Tree.split_min \\<langle>\\<rangle> = (x, t')\n  \\<langle>\\<rangle> \\<noteq> \\<langle>\\<rangle>\n\ngoal (1 subgoal):\n 1. real (imbal t') - real (imbal \\<langle>\\<rangle>) \\<le> 1", "by simp"], ["proof (state)\nthis:\n  real (imbal t') - real (imbal \\<langle>\\<rangle>) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>Root_Balanced_Tree.split_min t1 = (x, t');\n                    t1 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n                   \\<Longrightarrow> real (imbal t') - real (imbal t1)\n                                     \\<le> 1;\n        \\<And>t'.\n           \\<lbrakk>Root_Balanced_Tree.split_min t2 = (x, t');\n            t2 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> real (imbal t') - real (imbal t2) \\<le> 1;\n        Root_Balanced_Tree.split_min \\<langle>t1, x2, t2\\<rangle> = (x, t');\n        \\<langle>t1, x2, t2\\<rangle> \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (imbal t') -\n                         real (imbal \\<langle>t1, x2, t2\\<rangle>)\n                         \\<le> 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>Root_Balanced_Tree.split_min t1 = (x, t');\n                    t1 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n                   \\<Longrightarrow> real (imbal t') - real (imbal t1)\n                                     \\<le> 1;\n        \\<And>t'.\n           \\<lbrakk>Root_Balanced_Tree.split_min t2 = (x, t');\n            t2 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> real (imbal t') - real (imbal t2) \\<le> 1;\n        Root_Balanced_Tree.split_min \\<langle>t1, x2, t2\\<rangle> = (x, t');\n        \\<langle>t1, x2, t2\\<rangle> \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (imbal t') -\n                         real (imbal \\<langle>t1, x2, t2\\<rangle>)\n                         \\<le> 1", "case (Node l y r)"], ["proof (state)\nthis:\n  \\<lbrakk>Root_Balanced_Tree.split_min l = (x, ?t');\n   l \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> real (imbal ?t') - real (imbal l) \\<le> 1\n  \\<lbrakk>Root_Balanced_Tree.split_min r = (x, ?t');\n   r \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> real (imbal ?t') - real (imbal r) \\<le> 1\n  Root_Balanced_Tree.split_min \\<langle>l, y, r\\<rangle> = (x, t')\n  \\<langle>l, y, r\\<rangle> \\<noteq> \\<langle>\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>Root_Balanced_Tree.split_min t1 = (x, t');\n                    t1 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n                   \\<Longrightarrow> real (imbal t') - real (imbal t1)\n                                     \\<le> 1;\n        \\<And>t'.\n           \\<lbrakk>Root_Balanced_Tree.split_min t2 = (x, t');\n            t2 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> real (imbal t') - real (imbal t2) \\<le> 1;\n        Root_Balanced_Tree.split_min \\<langle>t1, x2, t2\\<rangle> = (x, t');\n        \\<langle>t1, x2, t2\\<rangle> \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (imbal t') -\n                         real (imbal \\<langle>t1, x2, t2\\<rangle>)\n                         \\<le> 1", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>Root_Balanced_Tree.split_min l = (x, ?t');\n   l \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> real (imbal ?t') - real (imbal l) \\<le> 1\n  \\<lbrakk>Root_Balanced_Tree.split_min r = (x, ?t');\n   r \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> real (imbal ?t') - real (imbal r) \\<le> 1\n  Root_Balanced_Tree.split_min \\<langle>l, y, r\\<rangle> = (x, t')\n  \\<langle>l, y, r\\<rangle> \\<noteq> \\<langle>\\<rangle>\n\ngoal (1 subgoal):\n 1. real (imbal t') - real (imbal \\<langle>l, y, r\\<rangle>) \\<le> 1", "using size_split_min[OF Node.prems]"], ["proof (prove)\nusing this:\n  \\<lbrakk>Root_Balanced_Tree.split_min l = (x, ?t');\n   l \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> real (imbal ?t') - real (imbal l) \\<le> 1\n  \\<lbrakk>Root_Balanced_Tree.split_min r = (x, ?t');\n   r \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> real (imbal ?t') - real (imbal r) \\<le> 1\n  Root_Balanced_Tree.split_min \\<langle>l, y, r\\<rangle> = (x, t')\n  \\<langle>l, y, r\\<rangle> \\<noteq> \\<langle>\\<rangle>\n  size t' = size \\<langle>l, y, r\\<rangle> - 1\n\ngoal (1 subgoal):\n 1. real (imbal t') - real (imbal \\<langle>l, y, r\\<rangle>) \\<le> 1", "apply(auto split: if_splits option.splits prod.splits)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t'.\n                \\<lbrakk>Root_Balanced_Tree.split_min t' = (x, t');\n                 t' \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n                \\<Longrightarrow> real (imbal t') - real (imbal t') \\<le> 1;\n     l = \\<langle>\\<rangle>; y = x; r = t'\\<rbrakk>\n    \\<Longrightarrow> real (imbal t') -\n                      real\n                       (imbal \\<langle>\\<langle>\\<rangle>, x, t'\\<rangle>)\n                      \\<le> 1\n 2. \\<And>x2.\n       \\<lbrakk>Suc (size x2) = size l;\n        real (imbal x2) - real (imbal l) \\<le> 1;\n        \\<And>t'.\n           \\<lbrakk>Root_Balanced_Tree.split_min r = (x, t');\n            r \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> real (imbal t') - real (imbal r) \\<le> 1;\n        l \\<noteq> \\<langle>\\<rangle>;\n        Root_Balanced_Tree.split_min l = (x, x2);\n        t' = \\<langle>x2, y, r\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (imbal \\<langle>x2, y, r\\<rangle>) -\n                         real (imbal \\<langle>l, y, r\\<rangle>)\n                         \\<le> 1", "apply(auto simp: imbal.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>t'.\n                \\<lbrakk>Root_Balanced_Tree.split_min t' = (x, t');\n                 t' \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n                \\<Longrightarrow> real (imbal t') - real (imbal t') \\<le> 1;\n     l = \\<langle>\\<rangle>; y = x; r = t'\\<rbrakk>\n    \\<Longrightarrow> real (imbal t') - real (size t' - Suc 0) \\<le> 1", "apply(cases t')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t'.\n                \\<lbrakk>Root_Balanced_Tree.split_min t' = (x, t');\n                 t' \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n                \\<Longrightarrow> real (imbal t') - real (imbal t') \\<le> 1;\n     l = \\<langle>\\<rangle>; y = x; r = t'; t' = \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> real (imbal t') - real (size t' - Suc 0) \\<le> 1\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>Root_Balanced_Tree.split_min t' = (x, t');\n                    t' \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n                   \\<Longrightarrow> real (imbal t') - real (imbal t')\n                                     \\<le> 1;\n        l = \\<langle>\\<rangle>; y = x; r = t';\n        t' = \\<langle>x21, x22, x23\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (imbal t') - real (size t' - Suc 0) \\<le> 1", "apply (simp add: imbal.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>Root_Balanced_Tree.split_min t' = (x, t');\n                    t' \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n                   \\<Longrightarrow> real (imbal t') - real (imbal t')\n                                     \\<le> 1;\n        l = \\<langle>\\<rangle>; y = x; r = t';\n        t' = \\<langle>x21, x22, x23\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (imbal t') - real (size t' - Suc 0) \\<le> 1", "apply (simp add: imbal.simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  real (imbal t') - real (imbal \\<langle>l, y, r\\<rangle>) \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma imbal_del_Some:\n  \"del x t = Some t' \\<Longrightarrow> real(imbal t') - imbal t \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. del x t = Some t' \\<Longrightarrow>\n    real (imbal t') - real (imbal t) \\<le> 1", "proof(induction t arbitrary: t')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t'.\n       del x \\<langle>\\<rangle> = Some t' \\<Longrightarrow>\n       real (imbal t') - real (imbal \\<langle>\\<rangle>) \\<le> 1\n 2. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   del x t1 = Some t' \\<Longrightarrow>\n                   real (imbal t') - real (imbal t1) \\<le> 1;\n        \\<And>t'.\n           del x t2 = Some t' \\<Longrightarrow>\n           real (imbal t') - real (imbal t2) \\<le> 1;\n        del x \\<langle>t1, x2, t2\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> real (imbal t') -\n                         real (imbal \\<langle>t1, x2, t2\\<rangle>)\n                         \\<le> 1", "case Leaf"], ["proof (state)\nthis:\n  del x \\<langle>\\<rangle> = Some t'\n\ngoal (2 subgoals):\n 1. \\<And>t'.\n       del x \\<langle>\\<rangle> = Some t' \\<Longrightarrow>\n       real (imbal t') - real (imbal \\<langle>\\<rangle>) \\<le> 1\n 2. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   del x t1 = Some t' \\<Longrightarrow>\n                   real (imbal t') - real (imbal t1) \\<le> 1;\n        \\<And>t'.\n           del x t2 = Some t' \\<Longrightarrow>\n           real (imbal t') - real (imbal t2) \\<le> 1;\n        del x \\<langle>t1, x2, t2\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> real (imbal t') -\n                         real (imbal \\<langle>t1, x2, t2\\<rangle>)\n                         \\<le> 1", "thus ?case"], ["proof (prove)\nusing this:\n  del x \\<langle>\\<rangle> = Some t'\n\ngoal (1 subgoal):\n 1. real (imbal t') - real (imbal \\<langle>\\<rangle>) \\<le> 1", "by (auto simp add: imbal.simps split!: if_splits)"], ["proof (state)\nthis:\n  real (imbal t') - real (imbal \\<langle>\\<rangle>) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   del x t1 = Some t' \\<Longrightarrow>\n                   real (imbal t') - real (imbal t1) \\<le> 1;\n        \\<And>t'.\n           del x t2 = Some t' \\<Longrightarrow>\n           real (imbal t') - real (imbal t2) \\<le> 1;\n        del x \\<langle>t1, x2, t2\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> real (imbal t') -\n                         real (imbal \\<langle>t1, x2, t2\\<rangle>)\n                         \\<le> 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   del x t1 = Some t' \\<Longrightarrow>\n                   real (imbal t') - real (imbal t1) \\<le> 1;\n        \\<And>t'.\n           del x t2 = Some t' \\<Longrightarrow>\n           real (imbal t') - real (imbal t2) \\<le> 1;\n        del x \\<langle>t1, x2, t2\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> real (imbal t') -\n                         real (imbal \\<langle>t1, x2, t2\\<rangle>)\n                         \\<le> 1", "case (Node t1 x2 t2)"], ["proof (state)\nthis:\n  del x t1 = Some ?t' \\<Longrightarrow>\n  real (imbal ?t') - real (imbal t1) \\<le> 1\n  del x t2 = Some ?t' \\<Longrightarrow>\n  real (imbal ?t') - real (imbal t2) \\<le> 1\n  del x \\<langle>t1, x2, t2\\<rangle> = Some t'\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   del x t1 = Some t' \\<Longrightarrow>\n                   real (imbal t') - real (imbal t1) \\<le> 1;\n        \\<And>t'.\n           del x t2 = Some t' \\<Longrightarrow>\n           real (imbal t') - real (imbal t2) \\<le> 1;\n        del x \\<langle>t1, x2, t2\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> real (imbal t') -\n                         real (imbal \\<langle>t1, x2, t2\\<rangle>)\n                         \\<le> 1", "thus ?case"], ["proof (prove)\nusing this:\n  del x t1 = Some ?t' \\<Longrightarrow>\n  real (imbal ?t') - real (imbal t1) \\<le> 1\n  del x t2 = Some ?t' \\<Longrightarrow>\n  real (imbal ?t') - real (imbal t2) \\<le> 1\n  del x \\<langle>t1, x2, t2\\<rangle> = Some t'\n\ngoal (1 subgoal):\n 1. real (imbal t') - real (imbal \\<langle>t1, x2, t2\\<rangle>) \\<le> 1", "using size_del[OF Node.prems]"], ["proof (prove)\nusing this:\n  del x t1 = Some ?t' \\<Longrightarrow>\n  real (imbal ?t') - real (imbal t1) \\<le> 1\n  del x t2 = Some ?t' \\<Longrightarrow>\n  real (imbal ?t') - real (imbal t2) \\<le> 1\n  del x \\<langle>t1, x2, t2\\<rangle> = Some t'\n  size t' = size \\<langle>t1, x2, t2\\<rangle> - 1\n\ngoal (1 subgoal):\n 1. real (imbal t') - real (imbal \\<langle>t1, x2, t2\\<rangle>) \\<le> 1", "apply(auto split: if_splits option.splits prod.splits)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x2a.\n       \\<lbrakk>Suc (size x2a) = size t1;\n        real (imbal x2a) - real (imbal t1) \\<le> 1;\n        \\<And>t'.\n           del x t2 = Some t' \\<Longrightarrow>\n           real (imbal t') - real (imbal t2) \\<le> 1;\n        x < x2; del x t1 = Some x2a;\n        t' = \\<langle>x2a, x2, t2\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (imbal \\<langle>x2a, x2, t2\\<rangle>) -\n                         real (imbal \\<langle>t1, x2, t2\\<rangle>)\n                         \\<le> 1\n 2. \\<And>x2a.\n       \\<lbrakk>Suc (size x2a) = size t2;\n        \\<And>t'.\n           del x t1 = Some t' \\<Longrightarrow>\n           real (imbal t') - real (imbal t1) \\<le> 1;\n        real (imbal x2a) - real (imbal t2) \\<le> 1; x2 < x;\n        del x t2 = Some x2a; t' = \\<langle>t1, x2, x2a\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (imbal \\<langle>t1, x2, x2a\\<rangle>) -\n                         real (imbal \\<langle>t1, x2, t2\\<rangle>)\n                         \\<le> 1\n 3. \\<lbrakk>\\<And>t'.\n                del x2 t' = Some t' \\<Longrightarrow>\n                real (imbal t') - real (imbal t') \\<le> 1;\n     x = x2; t2 = \\<langle>\\<rangle>; t1 = t'\\<rbrakk>\n    \\<Longrightarrow> real (imbal t') -\n                      real\n                       (imbal \\<langle>t', x2, \\<langle>\\<rangle>\\<rangle>)\n                      \\<le> 1\n 4. \\<And>x1 x2a.\n       \\<lbrakk>Suc (size x2a) = size t2;\n        \\<And>t'.\n           del x2 t1 = Some t' \\<Longrightarrow>\n           real (imbal t') - real (imbal t1) \\<le> 1;\n        \\<And>t'.\n           del x2 t2 = Some t' \\<Longrightarrow>\n           real (imbal t') - real (imbal t2) \\<le> 1;\n        x = x2; t2 \\<noteq> \\<langle>\\<rangle>;\n        Root_Balanced_Tree.split_min t2 = (x1, x2a);\n        t' = \\<langle>t1, x1, x2a\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (imbal \\<langle>t1, x1, x2a\\<rangle>) -\n                         real (imbal \\<langle>t1, x2, t2\\<rangle>)\n                         \\<le> 1", "apply(auto simp: imbal.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>t'.\n                del x2 t' = Some t' \\<Longrightarrow>\n                real (imbal t') - real (imbal t') \\<le> 1;\n     x = x2; t2 = \\<langle>\\<rangle>; t1 = t'\\<rbrakk>\n    \\<Longrightarrow> real (imbal t') - real (size t' - Suc 0) \\<le> 1", "apply(cases t')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>t'.\n                del x2 t' = Some t' \\<Longrightarrow>\n                real (imbal t') - real (imbal t') \\<le> 1;\n     x = x2; t2 = \\<langle>\\<rangle>; t1 = t';\n     t' = \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> real (imbal t') - real (size t' - Suc 0) \\<le> 1\n 2. \\<And>x21 x22 x23.\n       \\<lbrakk>\\<And>t'.\n                   del x2 t' = Some t' \\<Longrightarrow>\n                   real (imbal t') - real (imbal t') \\<le> 1;\n        x = x2; t2 = \\<langle>\\<rangle>; t1 = t';\n        t' = \\<langle>x21, x22, x23\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (imbal t') - real (size t' - Suc 0) \\<le> 1", "apply (simp add: imbal.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x23.\n       \\<lbrakk>\\<And>t'.\n                   del x2 t' = Some t' \\<Longrightarrow>\n                   real (imbal t') - real (imbal t') \\<le> 1;\n        x = x2; t2 = \\<langle>\\<rangle>; t1 = t';\n        t' = \\<langle>x21, x22, x23\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> real (imbal t') - real (size t' - Suc 0) \\<le> 1", "apply (simp add: imbal.simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  real (imbal t') - real (imbal \\<langle>t1, x2, t2\\<rangle>) \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Phi_diff_split_min:\n  \"split_min t = (x, t') \\<Longrightarrow> t \\<noteq> Leaf \\<Longrightarrow> \\<Phi> t' - \\<Phi> t \\<le> 6*e*height t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Root_Balanced_Tree.split_min t = (x, t');\n     t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<Phi> t' - \\<Phi> t \\<le> 6 * e * real (height t)", "proof(induction t arbitrary: t')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t'.\n       \\<lbrakk>Root_Balanced_Tree.split_min \\<langle>\\<rangle> = (x, t');\n        \\<langle>\\<rangle> \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>\\<rangle>\n                         \\<le> 6 * e * real (height \\<langle>\\<rangle>)\n 2. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>Root_Balanced_Tree.split_min t1 = (x, t');\n                    t1 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n                   \\<Longrightarrow> \\<Phi> t' - \\<Phi> t1\n                                     \\<le> 6 * e * real (height t1);\n        \\<And>t'.\n           \\<lbrakk>Root_Balanced_Tree.split_min t2 = (x, t');\n            t2 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<Phi> t' - \\<Phi> t2\n                             \\<le> 6 * e * real (height t2);\n        Root_Balanced_Tree.split_min \\<langle>t1, x2, t2\\<rangle> = (x, t');\n        \\<langle>t1, x2, t2\\<rangle> \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 6 * e *\n                               real (height \\<langle>t1, x2, t2\\<rangle>)", "case Leaf"], ["proof (state)\nthis:\n  Root_Balanced_Tree.split_min \\<langle>\\<rangle> = (x, t')\n  \\<langle>\\<rangle> \\<noteq> \\<langle>\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>t'.\n       \\<lbrakk>Root_Balanced_Tree.split_min \\<langle>\\<rangle> = (x, t');\n        \\<langle>\\<rangle> \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>\\<rangle>\n                         \\<le> 6 * e * real (height \\<langle>\\<rangle>)\n 2. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>Root_Balanced_Tree.split_min t1 = (x, t');\n                    t1 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n                   \\<Longrightarrow> \\<Phi> t' - \\<Phi> t1\n                                     \\<le> 6 * e * real (height t1);\n        \\<And>t'.\n           \\<lbrakk>Root_Balanced_Tree.split_min t2 = (x, t');\n            t2 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<Phi> t' - \\<Phi> t2\n                             \\<le> 6 * e * real (height t2);\n        Root_Balanced_Tree.split_min \\<langle>t1, x2, t2\\<rangle> = (x, t');\n        \\<langle>t1, x2, t2\\<rangle> \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 6 * e *\n                               real (height \\<langle>t1, x2, t2\\<rangle>)", "thus ?case"], ["proof (prove)\nusing this:\n  Root_Balanced_Tree.split_min \\<langle>\\<rangle> = (x, t')\n  \\<langle>\\<rangle> \\<noteq> \\<langle>\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>\\<rangle>)", "by simp"], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>Root_Balanced_Tree.split_min t1 = (x, t');\n                    t1 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n                   \\<Longrightarrow> \\<Phi> t' - \\<Phi> t1\n                                     \\<le> 6 * e * real (height t1);\n        \\<And>t'.\n           \\<lbrakk>Root_Balanced_Tree.split_min t2 = (x, t');\n            t2 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<Phi> t' - \\<Phi> t2\n                             \\<le> 6 * e * real (height t2);\n        Root_Balanced_Tree.split_min \\<langle>t1, x2, t2\\<rangle> = (x, t');\n        \\<langle>t1, x2, t2\\<rangle> \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 6 * e *\n                               real (height \\<langle>t1, x2, t2\\<rangle>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>Root_Balanced_Tree.split_min t1 = (x, t');\n                    t1 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n                   \\<Longrightarrow> \\<Phi> t' - \\<Phi> t1\n                                     \\<le> 6 * e * real (height t1);\n        \\<And>t'.\n           \\<lbrakk>Root_Balanced_Tree.split_min t2 = (x, t');\n            t2 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<Phi> t' - \\<Phi> t2\n                             \\<le> 6 * e * real (height t2);\n        Root_Balanced_Tree.split_min \\<langle>t1, x2, t2\\<rangle> = (x, t');\n        \\<langle>t1, x2, t2\\<rangle> \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 6 * e *\n                               real (height \\<langle>t1, x2, t2\\<rangle>)", "case (Node l y r)"], ["proof (state)\nthis:\n  \\<lbrakk>Root_Balanced_Tree.split_min l = (x, ?t');\n   l \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<Phi> ?t' - \\<Phi> l \\<le> 6 * e * real (height l)\n  \\<lbrakk>Root_Balanced_Tree.split_min r = (x, ?t');\n   r \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> \\<Phi> ?t' - \\<Phi> r \\<le> 6 * e * real (height r)\n  Root_Balanced_Tree.split_min \\<langle>l, y, r\\<rangle> = (x, t')\n  \\<langle>l, y, r\\<rangle> \\<noteq> \\<langle>\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>Root_Balanced_Tree.split_min t1 = (x, t');\n                    t1 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n                   \\<Longrightarrow> \\<Phi> t' - \\<Phi> t1\n                                     \\<le> 6 * e * real (height t1);\n        \\<And>t'.\n           \\<lbrakk>Root_Balanced_Tree.split_min t2 = (x, t');\n            t2 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<Phi> t' - \\<Phi> t2\n                             \\<le> 6 * e * real (height t2);\n        Root_Balanced_Tree.split_min \\<langle>t1, x2, t2\\<rangle> = (x, t');\n        \\<langle>t1, x2, t2\\<rangle> \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 6 * e *\n                               real (height \\<langle>t1, x2, t2\\<rangle>)", "note [arith] = e0"], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   \\<lbrakk>Root_Balanced_Tree.split_min t1 = (x, t');\n                    t1 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n                   \\<Longrightarrow> \\<Phi> t' - \\<Phi> t1\n                                     \\<le> 6 * e * real (height t1);\n        \\<And>t'.\n           \\<lbrakk>Root_Balanced_Tree.split_min t2 = (x, t');\n            t2 \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n           \\<Longrightarrow> \\<Phi> t' - \\<Phi> t2\n                             \\<le> 6 * e * real (height t2);\n        Root_Balanced_Tree.split_min \\<langle>t1, x2, t2\\<rangle> = (x, t');\n        \\<langle>t1, x2, t2\\<rangle> \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 6 * e *\n                               real (height \\<langle>t1, x2, t2\\<rangle>)", "thus ?case"], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "proof (cases \"l = Leaf\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < e; l = \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n                      \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. \\<lbrakk>0 < e; l \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n                      \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have *: \"- a \\<le> b \\<longleftrightarrow> 0 \\<le> a+b\" for a b :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- a \\<le> b) = (0 \\<le> a + b)", "by linarith"], ["proof (state)\nthis:\n  (- ?a \\<le> ?b) = (0 \\<le> ?a + ?b)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < e; l = \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n                      \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. \\<lbrakk>0 < e; l \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n                      \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "case True"], ["proof (state)\nthis:\n  l = \\<langle>\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < e; l = \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n                      \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. \\<lbrakk>0 < e; l \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n                      \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "thus ?thesis"], ["proof (prove)\nusing this:\n  l = \\<langle>\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "using Node.prems"], ["proof (prove)\nusing this:\n  l = \\<langle>\\<rangle>\n  Root_Balanced_Tree.split_min \\<langle>l, y, r\\<rangle> = (x, t')\n  \\<langle>l, y, r\\<rangle> \\<noteq> \\<langle>\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "by(cases r)(auto simp: imbal.simps *)"], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < e; l \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n                      \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < e; l \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n                      \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "case False"], ["proof (state)\nthis:\n  l \\<noteq> \\<langle>\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < e; l \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n                      \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "with Node.prems"], ["proof (chain)\npicking this:\n  Root_Balanced_Tree.split_min \\<langle>l, y, r\\<rangle> = (x, t')\n  \\<langle>l, y, r\\<rangle> \\<noteq> \\<langle>\\<rangle>\n  l \\<noteq> \\<langle>\\<rangle>", "obtain l' where rec: \"split_min l = (x,l')\"\n      and t': \"t' = Node l' y r\""], ["proof (prove)\nusing this:\n  Root_Balanced_Tree.split_min \\<langle>l, y, r\\<rangle> = (x, t')\n  \\<langle>l, y, r\\<rangle> \\<noteq> \\<langle>\\<rangle>\n  l \\<noteq> \\<langle>\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>l'.\n        \\<lbrakk>Root_Balanced_Tree.split_min l = (x, l');\n         t' = \\<langle>l', y, r\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto split: prod.splits)"], ["proof (state)\nthis:\n  Root_Balanced_Tree.split_min l = (x, l')\n  t' = \\<langle>l', y, r\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < e; l \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n                      \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "hence \"\\<Phi> t' - \\<Phi> \\<langle>l,y,r\\<rangle> = 6*e*imbal\\<langle>l',y,r\\<rangle> - 6*e*imbal\\<langle>l,y,r\\<rangle> + \\<Phi> l' - \\<Phi> l\""], ["proof (prove)\nusing this:\n  Root_Balanced_Tree.split_min l = (x, l')\n  t' = \\<langle>l', y, r\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle> =\n    6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n    \\<Phi> l' -\n    \\<Phi> l", "by simp"], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle> =\n  6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  \\<Phi> l' -\n  \\<Phi> l\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < e; l \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n                      \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "also"], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle> =\n  6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  \\<Phi> l' -\n  \\<Phi> l\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < e; l \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n                      \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have \"\\<dots> = 6*e * (real(imbal\\<langle>l',y,r\\<rangle>) - imbal\\<langle>l,y,r\\<rangle>) + \\<Phi> l' - \\<Phi> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n    \\<Phi> l' -\n    \\<Phi> l =\n    6 * e *\n    (real (imbal \\<langle>l', y, r\\<rangle>) -\n     real (imbal \\<langle>l, y, r\\<rangle>)) +\n    \\<Phi> l' -\n    \\<Phi> l", "by (simp add: ring_distribs)"], ["proof (state)\nthis:\n  6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  \\<Phi> l' -\n  \\<Phi> l =\n  6 * e *\n  (real (imbal \\<langle>l', y, r\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  \\<Phi> l' -\n  \\<Phi> l\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < e; l \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n                      \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "also"], ["proof (state)\nthis:\n  6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  \\<Phi> l' -\n  \\<Phi> l =\n  6 * e *\n  (real (imbal \\<langle>l', y, r\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  \\<Phi> l' -\n  \\<Phi> l\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < e; l \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n                      \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have \"\\<dots> \\<le> 6*e + \\<Phi> l' - \\<Phi> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 * e *\n    (real (imbal \\<langle>l', y, r\\<rangle>) -\n     real (imbal \\<langle>l, y, r\\<rangle>)) +\n    \\<Phi> l' -\n    \\<Phi> l\n    \\<le> 6 * e + \\<Phi> l' - \\<Phi> l", "using imbal_split_min[OF Node.prems(1)] t'"], ["proof (prove)\nusing this:\n  \\<langle>l, y, r\\<rangle> \\<noteq> \\<langle>\\<rangle> \\<Longrightarrow>\n  real (imbal t') - real (imbal \\<langle>l, y, r\\<rangle>) \\<le> 1\n  t' = \\<langle>l', y, r\\<rangle>\n\ngoal (1 subgoal):\n 1. 6 * e *\n    (real (imbal \\<langle>l', y, r\\<rangle>) -\n     real (imbal \\<langle>l, y, r\\<rangle>)) +\n    \\<Phi> l' -\n    \\<Phi> l\n    \\<le> 6 * e + \\<Phi> l' - \\<Phi> l", "by (simp)"], ["proof (state)\nthis:\n  6 * e *\n  (real (imbal \\<langle>l', y, r\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  \\<Phi> l' -\n  \\<Phi> l\n  \\<le> 6 * e + \\<Phi> l' - \\<Phi> l\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < e; l \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n                      \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "also"], ["proof (state)\nthis:\n  6 * e *\n  (real (imbal \\<langle>l', y, r\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  \\<Phi> l' -\n  \\<Phi> l\n  \\<le> 6 * e + \\<Phi> l' - \\<Phi> l\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < e; l \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n                      \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have \"\\<dots> \\<le> 6*e * (height l + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 * e + \\<Phi> l' - \\<Phi> l \\<le> 6 * e * real (height l + 1)", "using Node.IH(1)[OF rec False]"], ["proof (prove)\nusing this:\n  \\<Phi> l' - \\<Phi> l \\<le> 6 * e * real (height l)\n\ngoal (1 subgoal):\n 1. 6 * e + \\<Phi> l' - \\<Phi> l \\<le> 6 * e * real (height l + 1)", "by (simp add: ring_distribs)"], ["proof (state)\nthis:\n  6 * e + \\<Phi> l' - \\<Phi> l \\<le> 6 * e * real (height l + 1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < e; l \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n                      \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "also"], ["proof (state)\nthis:\n  6 * e + \\<Phi> l' - \\<Phi> l \\<le> 6 * e * real (height l + 1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < e; l \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n                      \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have \"\\<dots> \\<le> 6*e * height \\<langle>l, y, r\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 * e * real (height l + 1)\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "by(simp del: times_divide_eq_left)"], ["proof (state)\nthis:\n  6 * e * real (height l + 1)\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < e; l \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n                      \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "finally"], ["proof (chain)\npicking this:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "."], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Phi_diff_del_Some:\n  \"del x t = Some t' \\<Longrightarrow> \\<Phi> t' - \\<Phi> t \\<le> 6*e * height t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. del x t = Some t' \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> t \\<le> 6 * e * real (height t)", "proof(induction t arbitrary: t')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t'.\n       del x \\<langle>\\<rangle> = Some t' \\<Longrightarrow>\n       \\<Phi> t' - \\<Phi> \\<langle>\\<rangle>\n       \\<le> 6 * e * real (height \\<langle>\\<rangle>)\n 2. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   del x t1 = Some t' \\<Longrightarrow>\n                   \\<Phi> t' - \\<Phi> t1 \\<le> 6 * e * real (height t1);\n        \\<And>t'.\n           del x t2 = Some t' \\<Longrightarrow>\n           \\<Phi> t' - \\<Phi> t2 \\<le> 6 * e * real (height t2);\n        del x \\<langle>t1, x2, t2\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 6 * e *\n                               real (height \\<langle>t1, x2, t2\\<rangle>)", "case Leaf"], ["proof (state)\nthis:\n  del x \\<langle>\\<rangle> = Some t'\n\ngoal (2 subgoals):\n 1. \\<And>t'.\n       del x \\<langle>\\<rangle> = Some t' \\<Longrightarrow>\n       \\<Phi> t' - \\<Phi> \\<langle>\\<rangle>\n       \\<le> 6 * e * real (height \\<langle>\\<rangle>)\n 2. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   del x t1 = Some t' \\<Longrightarrow>\n                   \\<Phi> t' - \\<Phi> t1 \\<le> 6 * e * real (height t1);\n        \\<And>t'.\n           del x t2 = Some t' \\<Longrightarrow>\n           \\<Phi> t' - \\<Phi> t2 \\<le> 6 * e * real (height t2);\n        del x \\<langle>t1, x2, t2\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 6 * e *\n                               real (height \\<langle>t1, x2, t2\\<rangle>)", "thus ?case"], ["proof (prove)\nusing this:\n  del x \\<langle>\\<rangle> = Some t'\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>\\<rangle>)", "by (auto simp: imbal.simps)"], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   del x t1 = Some t' \\<Longrightarrow>\n                   \\<Phi> t' - \\<Phi> t1 \\<le> 6 * e * real (height t1);\n        \\<And>t'.\n           del x t2 = Some t' \\<Longrightarrow>\n           \\<Phi> t' - \\<Phi> t2 \\<le> 6 * e * real (height t2);\n        del x \\<langle>t1, x2, t2\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 6 * e *\n                               real (height \\<langle>t1, x2, t2\\<rangle>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   del x t1 = Some t' \\<Longrightarrow>\n                   \\<Phi> t' - \\<Phi> t1 \\<le> 6 * e * real (height t1);\n        \\<And>t'.\n           del x t2 = Some t' \\<Longrightarrow>\n           \\<Phi> t' - \\<Phi> t2 \\<le> 6 * e * real (height t2);\n        del x \\<langle>t1, x2, t2\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 6 * e *\n                               real (height \\<langle>t1, x2, t2\\<rangle>)", "case (Node l y r)"], ["proof (state)\nthis:\n  del x l = Some ?t' \\<Longrightarrow>\n  \\<Phi> ?t' - \\<Phi> l \\<le> 6 * e * real (height l)\n  del x r = Some ?t' \\<Longrightarrow>\n  \\<Phi> ?t' - \\<Phi> r \\<le> 6 * e * real (height r)\n  del x \\<langle>l, y, r\\<rangle> = Some t'\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   del x t1 = Some t' \\<Longrightarrow>\n                   \\<Phi> t' - \\<Phi> t1 \\<le> 6 * e * real (height t1);\n        \\<And>t'.\n           del x t2 = Some t' \\<Longrightarrow>\n           \\<Phi> t' - \\<Phi> t2 \\<le> 6 * e * real (height t2);\n        del x \\<langle>t1, x2, t2\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 6 * e *\n                               real (height \\<langle>t1, x2, t2\\<rangle>)", "note [arith] = e0"], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   del x t1 = Some t' \\<Longrightarrow>\n                   \\<Phi> t' - \\<Phi> t1 \\<le> 6 * e * real (height t1);\n        \\<And>t'.\n           del x t2 = Some t' \\<Longrightarrow>\n           \\<Phi> t' - \\<Phi> t2 \\<le> 6 * e * real (height t2);\n        del x \\<langle>t1, x2, t2\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 6 * e *\n                               real (height \\<langle>t1, x2, t2\\<rangle>)", "consider (ls) \"x < y\" | (eq) \"x = y\" | (gr) \"x > y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < y \\<Longrightarrow> thesis; x = y \\<Longrightarrow> thesis;\n     y < x \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by(metis less_linear)"], ["proof (state)\nthis:\n  \\<lbrakk>x < y \\<Longrightarrow> ?thesis; x = y \\<Longrightarrow> ?thesis;\n   y < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>t1 x2 t2 t'.\n       \\<lbrakk>\\<And>t'.\n                   del x t1 = Some t' \\<Longrightarrow>\n                   \\<Phi> t' - \\<Phi> t1 \\<le> 6 * e * real (height t1);\n        \\<And>t'.\n           del x t2 = Some t' \\<Longrightarrow>\n           \\<Phi> t' - \\<Phi> t2 \\<le> 6 * e * real (height t2);\n        del x \\<langle>t1, x2, t2\\<rangle> = Some t'\\<rbrakk>\n       \\<Longrightarrow> \\<Phi> t' - \\<Phi> \\<langle>t1, x2, t2\\<rangle>\n                         \\<le> 6 * e *\n                               real (height \\<langle>t1, x2, t2\\<rangle>)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>x < y \\<Longrightarrow> ?thesis; x = y \\<Longrightarrow> ?thesis;\n   y < x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "case ls"], ["proof (state)\nthis:\n  x < y\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "with Node.prems"], ["proof (chain)\npicking this:\n  del x \\<langle>l, y, r\\<rangle> = Some t'\n  x < y", "obtain l' where rec: \"del x l = Some l'\"\n      and t': \"t' = Node l' y r\""], ["proof (prove)\nusing this:\n  del x \\<langle>l, y, r\\<rangle> = Some t'\n  x < y\n\ngoal (1 subgoal):\n 1. (\\<And>l'.\n        \\<lbrakk>del x l = Some l'; t' = \\<langle>l', y, r\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto split: option.splits)"], ["proof (state)\nthis:\n  del x l = Some l'\n  t' = \\<langle>l', y, r\\<rangle>\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "hence \"\\<Phi> t' - \\<Phi> \\<langle>l,y,r\\<rangle> = 6*e*imbal\\<langle>l',y,r\\<rangle> - 6*e*imbal\\<langle>l,y,r\\<rangle> + \\<Phi> l' - \\<Phi> l\""], ["proof (prove)\nusing this:\n  del x l = Some l'\n  t' = \\<langle>l', y, r\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle> =\n    6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n    \\<Phi> l' -\n    \\<Phi> l", "by simp"], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle> =\n  6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  \\<Phi> l' -\n  \\<Phi> l\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "also"], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle> =\n  6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  \\<Phi> l' -\n  \\<Phi> l\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have \"\\<dots> = 6*e * (real(imbal\\<langle>l',y,r\\<rangle>) - imbal\\<langle>l,y,r\\<rangle>) + \\<Phi> l' - \\<Phi> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n    \\<Phi> l' -\n    \\<Phi> l =\n    6 * e *\n    (real (imbal \\<langle>l', y, r\\<rangle>) -\n     real (imbal \\<langle>l, y, r\\<rangle>)) +\n    \\<Phi> l' -\n    \\<Phi> l", "by (simp add: ring_distribs)"], ["proof (state)\nthis:\n  6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  \\<Phi> l' -\n  \\<Phi> l =\n  6 * e *\n  (real (imbal \\<langle>l', y, r\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  \\<Phi> l' -\n  \\<Phi> l\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "also"], ["proof (state)\nthis:\n  6 * e * real (imbal \\<langle>l', y, r\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  \\<Phi> l' -\n  \\<Phi> l =\n  6 * e *\n  (real (imbal \\<langle>l', y, r\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  \\<Phi> l' -\n  \\<Phi> l\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have \"\\<dots> \\<le> 6*e + \\<Phi> l' - \\<Phi> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 * e *\n    (real (imbal \\<langle>l', y, r\\<rangle>) -\n     real (imbal \\<langle>l, y, r\\<rangle>)) +\n    \\<Phi> l' -\n    \\<Phi> l\n    \\<le> 6 * e + \\<Phi> l' - \\<Phi> l", "using imbal_del_Some[OF Node.prems] t'"], ["proof (prove)\nusing this:\n  real (imbal t') - real (imbal \\<langle>l, y, r\\<rangle>) \\<le> 1\n  t' = \\<langle>l', y, r\\<rangle>\n\ngoal (1 subgoal):\n 1. 6 * e *\n    (real (imbal \\<langle>l', y, r\\<rangle>) -\n     real (imbal \\<langle>l, y, r\\<rangle>)) +\n    \\<Phi> l' -\n    \\<Phi> l\n    \\<le> 6 * e + \\<Phi> l' - \\<Phi> l", "by (simp)"], ["proof (state)\nthis:\n  6 * e *\n  (real (imbal \\<langle>l', y, r\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  \\<Phi> l' -\n  \\<Phi> l\n  \\<le> 6 * e + \\<Phi> l' - \\<Phi> l\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "also"], ["proof (state)\nthis:\n  6 * e *\n  (real (imbal \\<langle>l', y, r\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  \\<Phi> l' -\n  \\<Phi> l\n  \\<le> 6 * e + \\<Phi> l' - \\<Phi> l\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have \"\\<dots> \\<le> 6*e * (height l + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 * e + \\<Phi> l' - \\<Phi> l \\<le> 6 * e * real (height l + 1)", "using Node.IH(1)[OF rec]"], ["proof (prove)\nusing this:\n  \\<Phi> l' - \\<Phi> l \\<le> 6 * e * real (height l)\n\ngoal (1 subgoal):\n 1. 6 * e + \\<Phi> l' - \\<Phi> l \\<le> 6 * e * real (height l + 1)", "by (simp add: ring_distribs)"], ["proof (state)\nthis:\n  6 * e + \\<Phi> l' - \\<Phi> l \\<le> 6 * e * real (height l + 1)\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "also"], ["proof (state)\nthis:\n  6 * e + \\<Phi> l' - \\<Phi> l \\<le> 6 * e * real (height l + 1)\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have \"\\<dots> \\<le> 6*e * height \\<langle>l, y, r\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 * e * real (height l + 1)\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "by(simp del: times_divide_eq_left)"], ["proof (state)\nthis:\n  6 * e * real (height l + 1)\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal (3 subgoals):\n 1. x < y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 3. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "finally"], ["proof (chain)\npicking this:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "."], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "case [simp]: eq"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "proof (cases \"r = Leaf\")"], ["proof (state)\ngoal (2 subgoals):\n 1. r = \\<langle>\\<rangle> \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. r \\<noteq> \\<langle>\\<rangle> \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "case [simp]: True"], ["proof (state)\nthis:\n  r = \\<langle>\\<rangle>\n\ngoal (2 subgoals):\n 1. r = \\<langle>\\<rangle> \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. r \\<noteq> \\<langle>\\<rangle> \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "proof (cases \"size t' = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. size t' = 0 \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. size t' \\<noteq> 0 \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "case True"], ["proof (state)\nthis:\n  size t' = 0\n\ngoal (2 subgoals):\n 1. size t' = 0 \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n 2. size t' \\<noteq> 0 \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "thus ?thesis"], ["proof (prove)\nusing this:\n  size t' = 0\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "using Node.prems"], ["proof (prove)\nusing this:\n  size t' = 0\n  del x \\<langle>l, y, r\\<rangle> = Some t'\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "by(auto simp: imbal.simps of_nat_diff)"], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal (1 subgoal):\n 1. size t' \\<noteq> 0 \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. size t' \\<noteq> 0 \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "case [arith]: False"], ["proof (state)\nthis:\n  size t' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. size t' \\<noteq> 0 \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "using Node.prems"], ["proof (prove)\nusing this:\n  del x \\<langle>l, y, r\\<rangle> = Some t'\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "by(simp add: imbal.simps of_nat_diff algebra_simps)"], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal (1 subgoal):\n 1. r \\<noteq> \\<langle>\\<rangle> \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<noteq> \\<langle>\\<rangle> \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "case False"], ["proof (state)\nthis:\n  r \\<noteq> \\<langle>\\<rangle>\n\ngoal (1 subgoal):\n 1. r \\<noteq> \\<langle>\\<rangle> \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "then"], ["proof (chain)\npicking this:\n  r \\<noteq> \\<langle>\\<rangle>", "obtain a r' where *: \"split_min r = (a,r')\""], ["proof (prove)\nusing this:\n  r \\<noteq> \\<langle>\\<rangle>\n\ngoal (1 subgoal):\n 1. (\\<And>a r'.\n        Root_Balanced_Tree.split_min r = (a, r') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using Node.prems"], ["proof (prove)\nusing this:\n  r \\<noteq> \\<langle>\\<rangle>\n  del x \\<langle>l, y, r\\<rangle> = Some t'\n\ngoal (1 subgoal):\n 1. (\\<And>a r'.\n        Root_Balanced_Tree.split_min r = (a, r') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(auto split: prod.splits)"], ["proof (state)\nthis:\n  Root_Balanced_Tree.split_min r = (a, r')\n\ngoal (1 subgoal):\n 1. r \\<noteq> \\<langle>\\<rangle> \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "from  mult_left_mono[OF imbal_diff_decr[OF size_split_min[OF this False], of l a y], of \"5*e\"]"], ["proof (chain)\npicking this:\n  0 \\<le> 5 * e \\<Longrightarrow>\n  5 * e *\n  (real (imbal \\<langle>l, a, r'\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>))\n  \\<le> 5 * e * 1", "have \"6*e*real (imbal \\<langle>l, a, r'\\<rangle>) - 6*e*real (imbal \\<langle>l, y, r\\<rangle>) \\<le> 6*e\""], ["proof (prove)\nusing this:\n  0 \\<le> 5 * e \\<Longrightarrow>\n  5 * e *\n  (real (imbal \\<langle>l, a, r'\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>))\n  \\<le> 5 * e * 1\n\ngoal (1 subgoal):\n 1. 6 * e * real (imbal \\<langle>l, a, r'\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>)\n    \\<le> 6 * e", "by(simp add: ring_distribs)"], ["proof (state)\nthis:\n  6 * e * real (imbal \\<langle>l, a, r'\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>)\n  \\<le> 6 * e\n\ngoal (1 subgoal):\n 1. r \\<noteq> \\<langle>\\<rangle> \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "thus ?thesis"], ["proof (prove)\nusing this:\n  6 * e * real (imbal \\<langle>l, a, r'\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>)\n  \\<le> 6 * e\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "using Node.prems * False Phi_diff_split_min[OF *]"], ["proof (prove)\nusing this:\n  6 * e * real (imbal \\<langle>l, a, r'\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>)\n  \\<le> 6 * e\n  del x \\<langle>l, y, r\\<rangle> = Some t'\n  Root_Balanced_Tree.split_min r = (a, r')\n  r \\<noteq> \\<langle>\\<rangle>\n  r \\<noteq> \\<langle>\\<rangle> \\<Longrightarrow>\n  \\<Phi> r' - \\<Phi> r \\<le> 6 * e * real (height r)\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "apply(auto simp add: max_def ring_distribs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>6 * e * real (imbal \\<langle>l, a, r'\\<rangle>) -\n             6 * e * real (imbal \\<langle>l, y, r\\<rangle>)\n             \\<le> 6 * e;\n     Root_Balanced_Tree.split_min r = (a, r');\n     r \\<noteq> \\<langle>\\<rangle>;\n     \\<Phi> r' - \\<Phi> r \\<le> 6 * e * real (height r);\n     t' = \\<langle>l, a, r'\\<rangle>;\n     \\<not> height l \\<le> height r\\<rbrakk>\n    \\<Longrightarrow> 6 * e * real (imbal \\<langle>l, a, r'\\<rangle>) +\n                      (\\<Phi> r' +\n                       (- (6 * e * real (imbal \\<langle>l, y, r\\<rangle>)) -\n                        \\<Phi> r))\n                      \\<le> 6 * e + 6 * e * real (height l)", "using mult_less_cancel_left_pos[of \"6*e\" \"height r\" \"height l\"]"], ["proof (prove)\nusing this:\n  0 < 6 * e \\<Longrightarrow>\n  (6 * e * real (height r) < 6 * e * real (height l)) =\n  (real (height r) < real (height l))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>6 * e * real (imbal \\<langle>l, a, r'\\<rangle>) -\n             6 * e * real (imbal \\<langle>l, y, r\\<rangle>)\n             \\<le> 6 * e;\n     Root_Balanced_Tree.split_min r = (a, r');\n     r \\<noteq> \\<langle>\\<rangle>;\n     \\<Phi> r' - \\<Phi> r \\<le> 6 * e * real (height r);\n     t' = \\<langle>l, a, r'\\<rangle>;\n     \\<not> height l \\<le> height r\\<rbrakk>\n    \\<Longrightarrow> 6 * e * real (imbal \\<langle>l, a, r'\\<rangle>) +\n                      (\\<Phi> r' +\n                       (- (6 * e * real (imbal \\<langle>l, y, r\\<rangle>)) -\n                        \\<Phi> r))\n                      \\<le> 6 * e + 6 * e * real (height l)", "by linarith"], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "case gr"], ["proof (state)\nthis:\n  y < x\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "with Node.prems"], ["proof (chain)\npicking this:\n  del x \\<langle>l, y, r\\<rangle> = Some t'\n  y < x", "obtain r' where rec: \"del x r = Some r'\"\n      and t': \"t' = Node l y r'\""], ["proof (prove)\nusing this:\n  del x \\<langle>l, y, r\\<rangle> = Some t'\n  y < x\n\ngoal (1 subgoal):\n 1. (\\<And>r'.\n        \\<lbrakk>del x r = Some r'; t' = \\<langle>l, y, r'\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto split: option.splits)"], ["proof (state)\nthis:\n  del x r = Some r'\n  t' = \\<langle>l, y, r'\\<rangle>\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "hence \"\\<Phi> t' - \\<Phi> \\<langle>l,y,r\\<rangle> = 6*e*imbal\\<langle>l,y,r'\\<rangle> - 6*e*imbal\\<langle>l,y,r\\<rangle> + \\<Phi> r' - \\<Phi> r\""], ["proof (prove)\nusing this:\n  del x r = Some r'\n  t' = \\<langle>l, y, r'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle> =\n    6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n    \\<Phi> r' -\n    \\<Phi> r", "by simp"], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle> =\n  6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  \\<Phi> r' -\n  \\<Phi> r\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "also"], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle> =\n  6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  \\<Phi> r' -\n  \\<Phi> r\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have \"\\<dots> = 6*e * (real(imbal\\<langle>l,y,r'\\<rangle>) - imbal\\<langle>l,y,r\\<rangle>) + \\<Phi> r' - \\<Phi> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n    6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n    \\<Phi> r' -\n    \\<Phi> r =\n    6 * e *\n    (real (imbal \\<langle>l, y, r'\\<rangle>) -\n     real (imbal \\<langle>l, y, r\\<rangle>)) +\n    \\<Phi> r' -\n    \\<Phi> r", "by (simp add: ring_distribs)"], ["proof (state)\nthis:\n  6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  \\<Phi> r' -\n  \\<Phi> r =\n  6 * e *\n  (real (imbal \\<langle>l, y, r'\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  \\<Phi> r' -\n  \\<Phi> r\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "also"], ["proof (state)\nthis:\n  6 * e * real (imbal \\<langle>l, y, r'\\<rangle>) -\n  6 * e * real (imbal \\<langle>l, y, r\\<rangle>) +\n  \\<Phi> r' -\n  \\<Phi> r =\n  6 * e *\n  (real (imbal \\<langle>l, y, r'\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  \\<Phi> r' -\n  \\<Phi> r\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have \"\\<dots> \\<le> 6*e + \\<Phi> r' - \\<Phi> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 * e *\n    (real (imbal \\<langle>l, y, r'\\<rangle>) -\n     real (imbal \\<langle>l, y, r\\<rangle>)) +\n    \\<Phi> r' -\n    \\<Phi> r\n    \\<le> 6 * e + \\<Phi> r' - \\<Phi> r", "using imbal_del_Some[OF Node.prems] t'"], ["proof (prove)\nusing this:\n  real (imbal t') - real (imbal \\<langle>l, y, r\\<rangle>) \\<le> 1\n  t' = \\<langle>l, y, r'\\<rangle>\n\ngoal (1 subgoal):\n 1. 6 * e *\n    (real (imbal \\<langle>l, y, r'\\<rangle>) -\n     real (imbal \\<langle>l, y, r\\<rangle>)) +\n    \\<Phi> r' -\n    \\<Phi> r\n    \\<le> 6 * e + \\<Phi> r' - \\<Phi> r", "by (simp)"], ["proof (state)\nthis:\n  6 * e *\n  (real (imbal \\<langle>l, y, r'\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  \\<Phi> r' -\n  \\<Phi> r\n  \\<le> 6 * e + \\<Phi> r' - \\<Phi> r\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "also"], ["proof (state)\nthis:\n  6 * e *\n  (real (imbal \\<langle>l, y, r'\\<rangle>) -\n   real (imbal \\<langle>l, y, r\\<rangle>)) +\n  \\<Phi> r' -\n  \\<Phi> r\n  \\<le> 6 * e + \\<Phi> r' - \\<Phi> r\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have \"\\<dots> \\<le> 6*e * (height r + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 * e + \\<Phi> r' - \\<Phi> r \\<le> 6 * e * real (height r + 1)", "using Node.IH(2)[OF rec]"], ["proof (prove)\nusing this:\n  \\<Phi> r' - \\<Phi> r \\<le> 6 * e * real (height r)\n\ngoal (1 subgoal):\n 1. 6 * e + \\<Phi> r' - \\<Phi> r \\<le> 6 * e * real (height r + 1)", "by (simp add: ring_distribs)"], ["proof (state)\nthis:\n  6 * e + \\<Phi> r' - \\<Phi> r \\<le> 6 * e * real (height r + 1)\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "also"], ["proof (state)\nthis:\n  6 * e + \\<Phi> r' - \\<Phi> r \\<le> 6 * e * real (height r + 1)\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "have \"\\<dots> \\<le> 6*e * height \\<langle>l, y, r\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 * e * real (height r + 1)\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "by(simp del: times_divide_eq_left)"], ["proof (state)\nthis:\n  6 * e * real (height r + 1)\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "finally"], ["proof (chain)\npicking this:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n    \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)", "."], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Phi> t' - \\<Phi> \\<langle>l, y, r\\<rangle>\n  \\<le> 6 * e * real (height \\<langle>l, y, r\\<rangle>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma amor_del_Some:\n  \"del x t = Some t' \\<Longrightarrow>\n  T_del x t + \\<Phi> t' - \\<Phi> t \\<le> (6*e + 1) * height t + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. del x t = Some t' \\<Longrightarrow>\n    real (T_del x t) + \\<Phi> t' - \\<Phi> t\n    \\<le> (6 * e + 1) * real (height t) + 1", "apply(drule Phi_diff_del_Some)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> t \\<le> 6 * e * real (height t) \\<Longrightarrow>\n    real (T_del x t) + \\<Phi> t' - \\<Phi> t\n    \\<le> (6 * e + 1) * real (height t) + 1", "using T_del_ub[of x t]"], ["proof (prove)\nusing this:\n  T_del x t \\<le> height t + 1\n\ngoal (1 subgoal):\n 1. \\<Phi> t' - \\<Phi> t \\<le> 6 * e * real (height t) \\<Longrightarrow>\n    real (T_del x t) + \\<Phi> t' - \\<Phi> t\n    \\<le> (6 * e + 1) * real (height t) + 1", "by (simp add: ring_distribs)"], ["", "lemma cd1: \"1/cd > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 1 / cd", "by(simp add: cd0)"], ["", "lemma T_delete_amor: assumes \"n = size t\"\nshows \"T_delete2 x (t,n,dl) + \\<Phi>\\<^sub>d (delete2 x (t,n,dl)) - \\<Phi>\\<^sub>d (t,n,dl)\n       \\<le> (6*e+1) * height t + 4/cd + 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "proof (cases \"del x t\")"], ["proof (state)\ngoal (2 subgoals):\n 1. del x t = None \\<Longrightarrow>\n    real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4\n 2. \\<And>a.\n       del x t = Some a \\<Longrightarrow>\n       real (T_delete2 x (t, n, dl)) +\n       \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n       \\<Phi>\\<^sub>d (t, n, dl)\n       \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "case None"], ["proof (state)\nthis:\n  del x t = None\n\ngoal (2 subgoals):\n 1. del x t = None \\<Longrightarrow>\n    real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4\n 2. \\<And>a.\n       del x t = Some a \\<Longrightarrow>\n       real (T_delete2 x (t, n, dl)) +\n       \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n       \\<Phi>\\<^sub>d (t, n, dl)\n       \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "have *: \"6*e * real (height t) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 6 * e * real (height t)", "using e0"], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. 0 \\<le> 6 * e * real (height t)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> 6 * e * real (height t)\n\ngoal (2 subgoals):\n 1. del x t = None \\<Longrightarrow>\n    real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4\n 2. \\<And>a.\n       del x t = Some a \\<Longrightarrow>\n       real (T_delete2 x (t, n, dl)) +\n       \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n       \\<Phi>\\<^sub>d (t, n, dl)\n       \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "using None"], ["proof (prove)\nusing this:\n  del x t = None\n\ngoal (1 subgoal):\n 1. real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "apply (simp add: delete2_def2 T_delete2_def2 ring_distribs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. del x t = None \\<Longrightarrow>\n    real (T_del x t)\n    \\<le> 3 + (6 * e * real (height t) + (real (height t) + 4 / cd))", "using * T_del_ub[of x t] cd1"], ["proof (prove)\nusing this:\n  0 \\<le> 6 * e * real (height t)\n  T_del x t \\<le> height t + 1\n  0 < 1 / cd\n\ngoal (1 subgoal):\n 1. del x t = None \\<Longrightarrow>\n    real (T_del x t)\n    \\<le> 3 + (6 * e * real (height t) + (real (height t) + 4 / cd))", "by linarith"], ["proof (state)\nthis:\n  real (T_delete2 x (t, n, dl)) +\n  \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n  \\<Phi>\\<^sub>d (t, n, dl)\n  \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       del x t = Some a \\<Longrightarrow>\n       real (T_delete2 x (t, n, dl)) +\n       \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n       \\<Phi>\\<^sub>d (t, n, dl)\n       \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       del x t = Some a \\<Longrightarrow>\n       real (T_delete2 x (t, n, dl)) +\n       \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n       \\<Phi>\\<^sub>d (t, n, dl)\n       \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "case (Some t')"], ["proof (state)\nthis:\n  del x t = Some t'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       del x t = Some a \\<Longrightarrow>\n       real (T_delete2 x (t, n, dl)) +\n       \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n       \\<Phi>\\<^sub>d (t, n, dl)\n       \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "proof (cases \"bal_d (n-1) (dl+1)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. bal_d (n - 1) (dl + 1) \\<Longrightarrow>\n    real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4\n 2. \\<not> bal_d (n - 1) (dl + 1) \\<Longrightarrow>\n    real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "case True"], ["proof (state)\nthis:\n  bal_d (n - 1) (dl + 1)\n\ngoal (2 subgoals):\n 1. bal_d (n - 1) (dl + 1) \\<Longrightarrow>\n    real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4\n 2. \\<not> bal_d (n - 1) (dl + 1) \\<Longrightarrow>\n    real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "thus ?thesis"], ["proof (prove)\nusing this:\n  bal_d (n - 1) (dl + 1)\n\ngoal (1 subgoal):\n 1. real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "using assms Some amor_del_Some[OF Some]"], ["proof (prove)\nusing this:\n  bal_d (n - 1) (dl + 1)\n  n = size t\n  del x t = Some t'\n  real (T_del x t) + \\<Phi> t' - \\<Phi> t\n  \\<le> (6 * e + 1) * real (height t) + 1\n\ngoal (1 subgoal):\n 1. real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "by(simp add: size_del delete2_def2 T_delete2_def2 algebra_simps add_divide_distrib)"], ["proof (state)\nthis:\n  real (T_delete2 x (t, n, dl)) +\n  \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n  \\<Phi>\\<^sub>d (t, n, dl)\n  \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4\n\ngoal (1 subgoal):\n 1. \\<not> bal_d (n - 1) (dl + 1) \\<Longrightarrow>\n    real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> bal_d (n - 1) (dl + 1) \\<Longrightarrow>\n    real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "case False"], ["proof (state)\nthis:\n  \\<not> bal_d (n - 1) (dl + 1)\n\ngoal (1 subgoal):\n 1. \\<not> bal_d (n - 1) (dl + 1) \\<Longrightarrow>\n    real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "from Some"], ["proof (chain)\npicking this:\n  del x t = Some t'", "have [arith]: \"size t \\<noteq> 0\""], ["proof (prove)\nusing this:\n  del x t = Some t'\n\ngoal (1 subgoal):\n 1. size t \\<noteq> 0", "by(cases t) (auto)"], ["proof (state)\nthis:\n  size t \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> bal_d (n - 1) (dl + 1) \\<Longrightarrow>\n    real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "have \"T_delete2 x (t, n, dl) + \\<Phi>\\<^sub>d (delete2 x (t,n,dl)) - \\<Phi>\\<^sub>d (t,n,dl) =\n      T_delete2 x (t, n, dl) - \\<Phi> t - 4*dl/cd\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl) =\n    real (T_delete2 x (t, n, dl)) - \\<Phi> t - real (4 * dl) / cd", "using False Some"], ["proof (prove)\nusing this:\n  \\<not> bal_d (n - 1) (dl + 1)\n  del x t = Some t'\n\ngoal (1 subgoal):\n 1. real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl) =\n    real (T_delete2 x (t, n, dl)) - \\<Phi> t - real (4 * dl) / cd", "by(simp add: delete2_def2 T_delete2_def2 \\<Phi>_wbalanced bal_tree assms size_del)"], ["proof (state)\nthis:\n  real (T_delete2 x (t, n, dl)) +\n  \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n  \\<Phi>\\<^sub>d (t, n, dl) =\n  real (T_delete2 x (t, n, dl)) - \\<Phi> t - real (4 * dl) / cd\n\ngoal (1 subgoal):\n 1. \\<not> bal_d (n - 1) (dl + 1) \\<Longrightarrow>\n    real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "also"], ["proof (state)\nthis:\n  real (T_delete2 x (t, n, dl)) +\n  \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n  \\<Phi>\\<^sub>d (t, n, dl) =\n  real (T_delete2 x (t, n, dl)) - \\<Phi> t - real (4 * dl) / cd\n\ngoal (1 subgoal):\n 1. \\<not> bal_d (n - 1) (dl + 1) \\<Longrightarrow>\n    real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "have \"\\<dots> = T_del x t + 4 * size t - \\<Phi> t - 4*dl/cd\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_delete2 x (t, n, dl)) - \\<Phi> t - real (4 * dl) / cd =\n    real (T_del x t + 4 * size t) - \\<Phi> t - real (4 * dl) / cd", "using False assms Some"], ["proof (prove)\nusing this:\n  \\<not> bal_d (n - 1) (dl + 1)\n  n = size t\n  del x t = Some t'\n\ngoal (1 subgoal):\n 1. real (T_delete2 x (t, n, dl)) - \\<Phi> t - real (4 * dl) / cd =\n    real (T_del x t + 4 * size t) - \\<Phi> t - real (4 * dl) / cd", "by(simp add: T_delete2_def2 T_bal_tree size_del size1_size)"], ["proof (state)\nthis:\n  real (T_delete2 x (t, n, dl)) - \\<Phi> t - real (4 * dl) / cd =\n  real (T_del x t + 4 * size t) - \\<Phi> t - real (4 * dl) / cd\n\ngoal (1 subgoal):\n 1. \\<not> bal_d (n - 1) (dl + 1) \\<Longrightarrow>\n    real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "also"], ["proof (state)\nthis:\n  real (T_delete2 x (t, n, dl)) - \\<Phi> t - real (4 * dl) / cd =\n  real (T_del x t + 4 * size t) - \\<Phi> t - real (4 * dl) / cd\n\ngoal (1 subgoal):\n 1. \\<not> bal_d (n - 1) (dl + 1) \\<Longrightarrow>\n    real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "have \"\\<dots> \\<le> (6*e+1)*height t + 4*(size t - dl/cd + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (T_del x t + 4 * size t) - \\<Phi> t - real (4 * dl) / cd\n    \\<le> (6 * e + 1) * real (height t) +\n          4 * (real (size t) - real dl / cd + 1)", "using amor_del_Some[OF Some] \\<Phi>_nn[of t] \\<Phi>_nn[of t']"], ["proof (prove)\nusing this:\n  real (T_del x t) + \\<Phi> t' - \\<Phi> t\n  \\<le> (6 * e + 1) * real (height t) + 1\n  0 \\<le> \\<Phi> t\n  0 \\<le> \\<Phi> t'\n\ngoal (1 subgoal):\n 1. real (T_del x t + 4 * size t) - \\<Phi> t - real (4 * dl) / cd\n    \\<le> (6 * e + 1) * real (height t) +\n          4 * (real (size t) - real dl / cd + 1)", "by(simp add: ring_distribs)"], ["proof (state)\nthis:\n  real (T_del x t + 4 * size t) - \\<Phi> t - real (4 * dl) / cd\n  \\<le> (6 * e + 1) * real (height t) +\n        4 * (real (size t) - real dl / cd + 1)\n\ngoal (1 subgoal):\n 1. \\<not> bal_d (n - 1) (dl + 1) \\<Longrightarrow>\n    real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "also"], ["proof (state)\nthis:\n  real (T_del x t + 4 * size t) - \\<Phi> t - real (4 * dl) / cd\n  \\<le> (6 * e + 1) * real (height t) +\n        4 * (real (size t) - real dl / cd + 1)\n\ngoal (1 subgoal):\n 1. \\<not> bal_d (n - 1) (dl + 1) \\<Longrightarrow>\n    real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "have \"size t - dl/cd + 1 \\<le> 1/cd + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (size t) - real dl / cd + 1 \\<le> 1 / cd + 1", "using assms False cd0"], ["proof (prove)\nusing this:\n  n = size t\n  \\<not> bal_d (n - 1) (dl + 1)\n  0 < cd\n\ngoal (1 subgoal):\n 1. real (size t) - real dl / cd + 1 \\<le> 1 / cd + 1", "unfolding bal_d_def"], ["proof (prove)\nusing this:\n  n = size t\n  \\<not> real (dl + 1) < cd * (real (n - 1) + 1)\n  0 < cd\n\ngoal (1 subgoal):\n 1. real (size t) - real dl / cd + 1 \\<le> 1 / cd + 1", "by(simp add: algebra_simps of_nat_diff)(simp add: field_simps)"], ["proof (state)\nthis:\n  real (size t) - real dl / cd + 1 \\<le> 1 / cd + 1\n\ngoal (1 subgoal):\n 1. \\<not> bal_d (n - 1) (dl + 1) \\<Longrightarrow>\n    real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      (6 * e + 1) * real (height t) + 4 * x\n      \\<le> (6 * e + 1) * real (height t) + 4 * y) \\<Longrightarrow>\n  real (T_delete2 x (t, n, dl)) +\n  \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n  \\<Phi>\\<^sub>d (t, n, dl)\n  \\<le> (6 * e + 1) * real (height t) + 4 * (1 / cd + 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      (6 * e + 1) * real (height t) + 4 * x\n      \\<le> (6 * e + 1) * real (height t) + 4 * y) \\<Longrightarrow>\n  real (T_delete2 x (t, n, dl)) +\n  \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n  \\<Phi>\\<^sub>d (t, n, dl)\n  \\<le> (6 * e + 1) * real (height t) + 4 * (1 / cd + 1)\n\ngoal (1 subgoal):\n 1. real (T_delete2 x (t, n, dl)) +\n    \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n    \\<Phi>\\<^sub>d (t, n, dl)\n    \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4", "by(simp add: ring_distribs)"], ["proof (state)\nthis:\n  real (T_delete2 x (t, n, dl)) +\n  \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n  \\<Phi>\\<^sub>d (t, n, dl)\n  \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  real (T_delete2 x (t, n, dl)) +\n  \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n  \\<Phi>\\<^sub>d (t, n, dl)\n  \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4\n\ngoal:\nNo subgoals!", "qed"], ["", "datatype (plugins del: lifting) 'b ops = Insert 'b | Delete 'b"], ["", "fun nxt :: \"'a ops \\<Rightarrow> 'a rbt2 \\<Rightarrow> 'a rbt2\" where\n\"nxt (Insert x) t = insert3_d x t\" |\n\"nxt (Delete x) t = delete2 x t\""], ["", "fun t\\<^sub>s :: \"'a ops \\<Rightarrow> 'a rbt2 \\<Rightarrow> real\" where\n\"t\\<^sub>s (Insert x) t = T_insert3_d x t\" |\n\"t\\<^sub>s (Delete x) t = T_delete2 x t\""], ["", "interpretation RBTid2_Amor: Amortized\nwhere init = \"(Leaf,0,0)\"\nand nxt = nxt\nand inv = \"\\<lambda>(t,n,dl). n = size t \\<and>\n  bal_i (size t+dl) (height t) \\<and> bal_d (size t) dl\"\nand T = t\\<^sub>s and \\<Phi> = \\<Phi>\\<^sub>d\nand U = \"\\<lambda>f (t,_). case f of\n  Insert _ \\<Rightarrow> (6*e+2) * (height t + 1) + 1 |\n  Delete _ \\<Rightarrow> (6*e+1) * height t + 4/cd + 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Amortized (\\<langle>\\<rangle>, 0, 0) nxt\n     (\\<lambda>(t, n, dl).\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl)\n     t\\<^sub>s \\<Phi>\\<^sub>d\n     (\\<lambda>f (t, uu_).\n         case f of\n         Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n         | Delete x \\<Rightarrow>\n             (6 * e + 1) * real (height t) + 4 / cd + 4)", "proof (standard, goal_cases)"], ["proof (state)\ngoal (5 subgoals):\n 1. case (\\<langle>\\<rangle>, 0, 0) of\n    (t, n, dl) \\<Rightarrow>\n      n = size t \\<and>\n      bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl\n 2. \\<And>s f.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       case nxt f s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl\n 3. \\<And>s.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       0 \\<le> \\<Phi>\\<^sub>d s\n 4. \\<Phi>\\<^sub>d (\\<langle>\\<rangle>, 0, 0) = 0\n 5. \\<And>s f.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow>\n                case f of\n                Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n                | Delete x \\<Rightarrow>\n                    (6 * e + 1) * real (height t) + 4 / cd + 4)", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (5 subgoals):\n 1. case (\\<langle>\\<rangle>, 0, 0) of\n    (t, n, dl) \\<Rightarrow>\n      n = size t \\<and>\n      bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl\n 2. \\<And>s f.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       case nxt f s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl\n 3. \\<And>s.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       0 \\<le> \\<Phi>\\<^sub>d s\n 4. \\<Phi>\\<^sub>d (\\<langle>\\<rangle>, 0, 0) = 0\n 5. \\<And>s f.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow>\n                case f of\n                Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n                | Delete x \\<Rightarrow>\n                    (6 * e + 1) * real (height t) + 4 / cd + 4)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. case (\\<langle>\\<rangle>, 0, 0) of\n    (t, n, dl) \\<Rightarrow>\n      n = size t \\<and>\n      bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl", "using bal_i0 bal_d0"], ["proof (prove)\nusing this:\n  bal_i 0 0\n  bal_d ?n 0\n\ngoal (1 subgoal):\n 1. case (\\<langle>\\<rangle>, 0, 0) of\n    (t, n, dl) \\<Rightarrow>\n      n = size t \\<and>\n      bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl", "by (simp split: prod.split)"], ["proof (state)\nthis:\n  case (\\<langle>\\<rangle>, 0, 0) of\n  (t, n, dl) \\<Rightarrow>\n    n = size t \\<and>\n    bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl\n\ngoal (4 subgoals):\n 1. \\<And>s f.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       case nxt f s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl\n 2. \\<And>s.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       0 \\<le> \\<Phi>\\<^sub>d s\n 3. \\<Phi>\\<^sub>d (\\<langle>\\<rangle>, 0, 0) = 0\n 4. \\<And>s f.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow>\n                case f of\n                Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n                | Delete x \\<Rightarrow>\n                    (6 * e + 1) * real (height t) + 4 / cd + 4)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>s f.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       case nxt f s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl\n 2. \\<And>s.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       0 \\<le> \\<Phi>\\<^sub>d s\n 3. \\<Phi>\\<^sub>d (\\<langle>\\<rangle>, 0, 0) = 0\n 4. \\<And>s f.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow>\n                case f of\n                Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n                | Delete x \\<Rightarrow>\n                    (6 * e + 1) * real (height t) + 4 / cd + 4)", "case (2 s f)"], ["proof (state)\nthis:\n  case s of\n  (t, n, dl) \\<Rightarrow>\n    n = size t \\<and>\n    bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl\n\ngoal (4 subgoals):\n 1. \\<And>s f.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       case nxt f s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl\n 2. \\<And>s.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       0 \\<le> \\<Phi>\\<^sub>d s\n 3. \\<Phi>\\<^sub>d (\\<langle>\\<rangle>, 0, 0) = 0\n 4. \\<And>s f.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow>\n                case f of\n                Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n                | Delete x \\<Rightarrow>\n                    (6 * e + 1) * real (height t) + 4 / cd + 4)", "obtain t n dl where [simp]: \"s = (t,n,dl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t n dl.\n        s = (t, n, dl) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using prod_cases3"], ["proof (prove)\nusing this:\n  (\\<And>a b c. ?y = (a, b, c) \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>t n dl.\n        s = (t, n, dl) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  s = (t, n, dl)\n\ngoal (4 subgoals):\n 1. \\<And>s f.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       case nxt f s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl\n 2. \\<And>s.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       0 \\<le> \\<Phi>\\<^sub>d s\n 3. \\<Phi>\\<^sub>d (\\<langle>\\<rangle>, 0, 0) = 0\n 4. \\<And>s f.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow>\n                case f of\n                Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n                | Delete x \\<Rightarrow>\n                    (6 * e + 1) * real (height t) + 4 / cd + 4)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. case nxt f s of\n    (t, n, dl) \\<Rightarrow>\n      n = size t \\<and>\n      bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl", "proof (cases f)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       f = Insert x1 \\<Longrightarrow>\n       case nxt f s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl\n 2. \\<And>x2.\n       f = Delete x2 \\<Longrightarrow>\n       case nxt f s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl", "case (Insert x)"], ["proof (state)\nthis:\n  f = Insert x\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       f = Insert x1 \\<Longrightarrow>\n       case nxt f s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl\n 2. \\<And>x2.\n       f = Delete x2 \\<Longrightarrow>\n       case nxt f s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl", "thus ?thesis"], ["proof (prove)\nusing this:\n  f = Insert x\n\ngoal (1 subgoal):\n 1. case nxt f s of\n    (t, n, dl) \\<Rightarrow>\n      n = size t \\<and>\n      bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl", "using 2 insert2_insert_d[of x t dl] bal_i_insert_d[of x t dl]\n        mono_bal_d[OF _ size_insert_d]"], ["proof (prove)\nusing this:\n  f = Insert x\n  case s of\n  (t, n, dl) \\<Rightarrow>\n    n = size t \\<and>\n    bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl\n  (insert2_d x (t, size t, dl) = (?t', ?n', ?dl')) =\n  ((?t', ?dl') = insert_d x (t, dl) \\<and> ?n' = size ?t')\n  \\<lbrakk>insert_d x (t, dl) = (?t', ?dl');\n   bal_i (size t + dl) (height t)\\<rbrakk>\n  \\<Longrightarrow> bal_i (size ?t' + dl) (height ?t')\n  \\<lbrakk>bal_d (size ?t1) ?dl;\n   insert_d ?x1 (?t1, ?dl1) = (?t'1, ?dl'1)\\<rbrakk>\n  \\<Longrightarrow> bal_d (size ?t'1) ?dl\n\ngoal (1 subgoal):\n 1. case nxt f s of\n    (t, n, dl) \\<Rightarrow>\n      n = size t \\<and>\n      bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl", "by (simp del: insert2_d.simps insert3_d_def2 insert_d.simps\n               add: insert3_insert2_d split: prod.splits)\n         fastforce"], ["proof (state)\nthis:\n  case nxt f s of\n  (t, n, dl) \\<Rightarrow>\n    n = size t \\<and>\n    bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       f = Delete x2 \\<Longrightarrow>\n       case nxt f s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       f = Delete x2 \\<Longrightarrow>\n       case nxt f s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl", "case (Delete x)"], ["proof (state)\nthis:\n  f = Delete x\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       f = Delete x2 \\<Longrightarrow>\n       case nxt f s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl", "thus ?thesis"], ["proof (prove)\nusing this:\n  f = Delete x\n\ngoal (1 subgoal):\n 1. case nxt f s of\n    (t, n, dl) \\<Rightarrow>\n      n = size t \\<and>\n      bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl", "using 2 bal_i_delete[of t dl x] bal_d_delete[of t dl x]"], ["proof (prove)\nusing this:\n  f = Delete x\n  case s of\n  (t, n, dl) \\<Rightarrow>\n    n = size t \\<and>\n    bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl\n  \\<lbrakk>bal_i (size t + dl) (height t);\n   local.delete x (t, dl) = (?t', ?dl')\\<rbrakk>\n  \\<Longrightarrow> bal_i (size ?t' + ?dl') (height ?t')\n  \\<lbrakk>bal_d (size t) dl; local.delete x (t, dl) = (?t', ?dl')\\<rbrakk>\n  \\<Longrightarrow> bal_d (size ?t') ?dl'\n\ngoal (1 subgoal):\n 1. case nxt f s of\n    (t, n, dl) \\<Rightarrow>\n      n = size t \\<and>\n      bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl", "by (auto simp: delete2_delete)"], ["proof (state)\nthis:\n  case nxt f s of\n  (t, n, dl) \\<Rightarrow>\n    n = size t \\<and>\n    bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  case nxt f s of\n  (t, n, dl) \\<Rightarrow>\n    n = size t \\<and>\n    bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl\n\ngoal (3 subgoals):\n 1. \\<And>s.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       0 \\<le> \\<Phi>\\<^sub>d s\n 2. \\<Phi>\\<^sub>d (\\<langle>\\<rangle>, 0, 0) = 0\n 3. \\<And>s f.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow>\n                case f of\n                Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n                | Delete x \\<Rightarrow>\n                    (6 * e + 1) * real (height t) + 4 / cd + 4)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>s.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       0 \\<le> \\<Phi>\\<^sub>d s\n 2. \\<Phi>\\<^sub>d (\\<langle>\\<rangle>, 0, 0) = 0\n 3. \\<And>s f.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow>\n                case f of\n                Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n                | Delete x \\<Rightarrow>\n                    (6 * e + 1) * real (height t) + 4 / cd + 4)", "case (3 s)"], ["proof (state)\nthis:\n  case s of\n  (t, n, dl) \\<Rightarrow>\n    n = size t \\<and>\n    bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl\n\ngoal (3 subgoals):\n 1. \\<And>s.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       0 \\<le> \\<Phi>\\<^sub>d s\n 2. \\<Phi>\\<^sub>d (\\<langle>\\<rangle>, 0, 0) = 0\n 3. \\<And>s f.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow>\n                case f of\n                Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n                | Delete x \\<Rightarrow>\n                    (6 * e + 1) * real (height t) + 4 / cd + 4)", "thus ?case"], ["proof (prove)\nusing this:\n  case s of\n  (t, n, dl) \\<Rightarrow>\n    n = size t \\<and>\n    bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl\n\ngoal (1 subgoal):\n 1. 0 \\<le> \\<Phi>\\<^sub>d s", "using \\<Phi>_nn[of \"fst s\" ] cd0"], ["proof (prove)\nusing this:\n  case s of\n  (t, n, dl) \\<Rightarrow>\n    n = size t \\<and>\n    bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl\n  0 \\<le> \\<Phi> (fst s)\n  0 < cd\n\ngoal (1 subgoal):\n 1. 0 \\<le> \\<Phi>\\<^sub>d s", "by (auto split: prod.splits)"], ["proof (state)\nthis:\n  0 \\<le> \\<Phi>\\<^sub>d s\n\ngoal (2 subgoals):\n 1. \\<Phi>\\<^sub>d (\\<langle>\\<rangle>, 0, 0) = 0\n 2. \\<And>s f.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow>\n                case f of\n                Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n                | Delete x \\<Rightarrow>\n                    (6 * e + 1) * real (height t) + 4 / cd + 4)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Phi>\\<^sub>d (\\<langle>\\<rangle>, 0, 0) = 0\n 2. \\<And>s f.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow>\n                case f of\n                Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n                | Delete x \\<Rightarrow>\n                    (6 * e + 1) * real (height t) + 4 / cd + 4)", "case 4"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<Phi>\\<^sub>d (\\<langle>\\<rangle>, 0, 0) = 0\n 2. \\<And>s f.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow>\n                case f of\n                Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n                | Delete x \\<Rightarrow>\n                    (6 * e + 1) * real (height t) + 4 / cd + 4)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Phi>\\<^sub>d (\\<langle>\\<rangle>, 0, 0) = 0", "by(simp)"], ["proof (state)\nthis:\n  \\<Phi>\\<^sub>d (\\<langle>\\<rangle>, 0, 0) = 0\n\ngoal (1 subgoal):\n 1. \\<And>s f.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow>\n                case f of\n                Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n                | Delete x \\<Rightarrow>\n                    (6 * e + 1) * real (height t) + 4 / cd + 4)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s f.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow>\n                case f of\n                Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n                | Delete x \\<Rightarrow>\n                    (6 * e + 1) * real (height t) + 4 / cd + 4)", "case (5 s f)"], ["proof (state)\nthis:\n  case s of\n  (t, n, dl) \\<Rightarrow>\n    n = size t \\<and>\n    bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl\n\ngoal (1 subgoal):\n 1. \\<And>s f.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow>\n                case f of\n                Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n                | Delete x \\<Rightarrow>\n                    (6 * e + 1) * real (height t) + 4 / cd + 4)", "obtain t n dl where [simp]: \"s = (t,n,dl)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t n dl.\n        s = (t, n, dl) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using prod_cases3"], ["proof (prove)\nusing this:\n  (\\<And>a b c. ?y = (a, b, c) \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>t n dl.\n        s = (t, n, dl) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  s = (t, n, dl)\n\ngoal (1 subgoal):\n 1. \\<And>s f.\n       case s of\n       (t, n, dl) \\<Rightarrow>\n         n = size t \\<and>\n         bal_i (size t + dl) (height t) \\<and>\n         bal_d (size t) dl \\<Longrightarrow>\n       t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow>\n                case f of\n                Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n                | Delete x \\<Rightarrow>\n                    (6 * e + 1) * real (height t) + 4 / cd + 4)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n    \\<le> (case s of\n           (t, uu_) \\<Rightarrow>\n             case f of\n             Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n             | Delete x \\<Rightarrow>\n                 (6 * e + 1) * real (height t) + 4 / cd + 4)", "proof (cases f)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       f = Insert x1 \\<Longrightarrow>\n       t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow>\n                case f of\n                Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n                | Delete x \\<Rightarrow>\n                    (6 * e + 1) * real (height t) + 4 / cd + 4)\n 2. \\<And>x2.\n       f = Delete x2 \\<Longrightarrow>\n       t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow>\n                case f of\n                Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n                | Delete x \\<Rightarrow>\n                    (6 * e + 1) * real (height t) + 4 / cd + 4)", "case (Insert x)"], ["proof (state)\nthis:\n  f = Insert x\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       f = Insert x1 \\<Longrightarrow>\n       t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow>\n                case f of\n                Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n                | Delete x \\<Rightarrow>\n                    (6 * e + 1) * real (height t) + 4 / cd + 4)\n 2. \\<And>x2.\n       f = Delete x2 \\<Longrightarrow>\n       t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow>\n                case f of\n                Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n                | Delete x \\<Rightarrow>\n                    (6 * e + 1) * real (height t) + 4 / cd + 4)", "thus ?thesis"], ["proof (prove)\nusing this:\n  f = Insert x\n\ngoal (1 subgoal):\n 1. t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n    \\<le> (case s of\n           (t, uu_) \\<Rightarrow>\n             case f of\n             Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n             | Delete x \\<Rightarrow>\n                 (6 * e + 1) * real (height t) + 4 / cd + 4)", "using 5 insert2_insert_d[of x t dl] tinsert_d_amor[of n t x dl]"], ["proof (prove)\nusing this:\n  f = Insert x\n  case s of\n  (t, n, dl) \\<Rightarrow>\n    n = size t \\<and>\n    bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl\n  (insert2_d x (t, size t, dl) = (?t', ?n', ?dl')) =\n  ((?t', ?dl') = insert_d x (t, dl) \\<and> ?n' = size ?t')\n  \\<lbrakk>n = size t; insert_d x (t, dl) = (?t', ?dl');\n   bal_i (size t + dl) (height t)\\<rbrakk>\n  \\<Longrightarrow> real (T_insert3_d x (t, n, dl)) + \\<Phi> ?t' - \\<Phi> t\n                    \\<le> (6 * e + 2) * real (height t + 1) + 1\n\ngoal (1 subgoal):\n 1. t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n    \\<le> (case s of\n           (t, uu_) \\<Rightarrow>\n             case f of\n             Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n             | Delete x \\<Rightarrow>\n                 (6 * e + 1) * real (height t) + 4 / cd + 4)", "by (fastforce simp del: insert2_d.simps insert3_d_def2 insert.simps\n               simp add: insert3_insert2_d \\<Phi>\\<^sub>d_case split: prod.split)"], ["proof (state)\nthis:\n  t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n  \\<le> (case s of\n         (t, uu_) \\<Rightarrow>\n           case f of\n           Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n           | Delete x \\<Rightarrow>\n               (6 * e + 1) * real (height t) + 4 / cd + 4)\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       f = Delete x2 \\<Longrightarrow>\n       t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow>\n                case f of\n                Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n                | Delete x \\<Rightarrow>\n                    (6 * e + 1) * real (height t) + 4 / cd + 4)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       f = Delete x2 \\<Longrightarrow>\n       t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow>\n                case f of\n                Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n                | Delete x \\<Rightarrow>\n                    (6 * e + 1) * real (height t) + 4 / cd + 4)", "case (Delete x)"], ["proof (state)\nthis:\n  f = Delete x\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       f = Delete x2 \\<Longrightarrow>\n       t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n       \\<le> (case s of\n              (t, uu_) \\<Rightarrow>\n                case f of\n                Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n                | Delete x \\<Rightarrow>\n                    (6 * e + 1) * real (height t) + 4 / cd + 4)", "then"], ["proof (chain)\npicking this:\n  f = Delete x", "show ?thesis"], ["proof (prove)\nusing this:\n  f = Delete x\n\ngoal (1 subgoal):\n 1. t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n    \\<le> (case s of\n           (t, uu_) \\<Rightarrow>\n             case f of\n             Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n             | Delete x \\<Rightarrow>\n                 (6 * e + 1) * real (height t) + 4 / cd + 4)", "using 5 delete2_delete[of x t dl] T_delete_amor[of n t x dl]"], ["proof (prove)\nusing this:\n  f = Delete x\n  case s of\n  (t, n, dl) \\<Rightarrow>\n    n = size t \\<and>\n    bal_i (size t + dl) (height t) \\<and> bal_d (size t) dl\n  (local.delete2 x (t, size t, dl) = (?t', ?n', ?dl')) =\n  ((?t', ?dl') = local.delete x (t, dl) \\<and> ?n' = size ?t')\n  n = size t \\<Longrightarrow>\n  real (T_delete2 x (t, n, dl)) +\n  \\<Phi>\\<^sub>d (local.delete2 x (t, n, dl)) -\n  \\<Phi>\\<^sub>d (t, n, dl)\n  \\<le> (6 * e + 1) * real (height t) + 4 / cd + 4\n\ngoal (1 subgoal):\n 1. t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n    \\<le> (case s of\n           (t, uu_) \\<Rightarrow>\n             case f of\n             Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n             | Delete x \\<Rightarrow>\n                 (6 * e + 1) * real (height t) + 4 / cd + 4)", "by (simp)"], ["proof (state)\nthis:\n  t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n  \\<le> (case s of\n         (t, uu_) \\<Rightarrow>\n           case f of\n           Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n           | Delete x \\<Rightarrow>\n               (6 * e + 1) * real (height t) + 4 / cd + 4)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t\\<^sub>s f s + \\<Phi>\\<^sub>d (nxt f s) - \\<Phi>\\<^sub>d s\n  \\<le> (case s of\n         (t, uu_) \\<Rightarrow>\n           case f of\n           Insert x \\<Rightarrow> (6 * e + 2) * real (height t + 1) + 1\n           | Delete x \\<Rightarrow>\n               (6 * e + 1) * real (height t) + 4 / cd + 4)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* RBTid2 *)"], ["", "axiomatization b :: real where\nb0: \"b > 0\""], ["", "axiomatization where\ncd_le_log: \"cd \\<le> 2 powr (b/c) - 1\""], ["", "text\\<open>This axiom is only used to prove that the height remains logarithmic\nin the size.\\<close>"], ["", "interpretation I_RBTid2: RBTid2\nwhere bal_i = \"\\<lambda>n h. h \\<le> ceiling(c * log 2 (n+1))\"\nand e = \"2 powr (1/c) / (2 - 2 powr (1/c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RBTid2 TYPE('a)\n     (\\<lambda>x xa. int xa \\<le> \\<lceil>c * log 2 (real x + 1)\\<rceil>)\n     (2 powr (1 / c) / (2 - 2 powr (1 / c)))", ".."], ["", "(* For code generation:\ndefines insert_id2 = I_RBTid2.insert3_d\nand ins3_id2 = I_RBTid2.ins3\nand up3_id2 = I_RBTid2.up3\n*)\n\n(* Code Generation *)\n(*\n(* FIXME why not done in Code_Float? *)\nlemmas [code del] = real_less_code real_less_eq_code real_floor_code\n\nlemma [code]: \"bal_i n h = (h \\<le> ceiling(c * log (real_of_integer 2) (n+1)))\"\n  by (simp add: bal_i_def real_of_integer_def)\n\nlemma myc[code_unfold]: \"c = real_of_integer 3 / real_of_integer 2\"\nsorry\n\ndefinition \"floor_integer (x::real) = integer_of_int (floor x)\"\n\ncode_printing\n  constant \"floor_integer :: real \\<Rightarrow> integer\" \\<rightharpoonup>\n    (SML) \"Real.floor\"\n\nlemma [code]: \"(floor::real \\<Rightarrow> int) = (\\<lambda>x. int_of_integer (floor_integer x))\"\n  by (auto simp: floor_integer_def)\n\ndefinition \"ceiling_integer (x::real) = integer_of_int (ceiling x)\"\n\ncode_printing\n  constant \"ceiling_integer :: real \\<Rightarrow> integer\" \\<rightharpoonup>\n    (SML) \"Real.ceil\"\n\ncode_printing\n  constant \"0 :: real\" \\<rightharpoonup> (SML) \"0.0\"\ncode_printing\n  constant \"1 :: real\" \\<rightharpoonup> (SML) \"1.0\"\n\nlemma [code_unfold del]: \"0 \\<equiv> real_of_rat 0\"\n  by simp\nlemma [code_unfold del]: \"1 \\<equiv> real_of_rat 1\"\n  by simp\n\nlemma [code_abbrev]: \"real_of_integer (integer_of_nat x) = real x\"\n  sorry\n\nlemma [code_abbrev]: \"(\\<lambda>x. int_of_integer (ceiling_integer x)) = (ceiling::real \\<Rightarrow> int)\"\n  by (auto simp: ceiling_integer_def)\n\nprint_codeproc\n\nexport_code insert_id2 in SML\nmodule_name Root_Balanced\n*)"], ["", "text\\<open>Finally we show that under the above interpretation of \\<open>bal_i\\<close>\nthe height is logarithmic:\\<close>"], ["", "definition bal_i :: \"nat \\<Rightarrow> nat \\<Rightarrow> bool\" where\n\"bal_i n h = (h \\<le> ceiling(c * log 2 (n+1)))\""], ["", "lemma assumes \"bal_i (size t + dl) (height t)\" \"bal_d (size t) dl\"\nshows \"height t \\<le> ceiling(c * log 2 (size1 t) + b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int (height t) \\<le> \\<lceil>c * log 2 (real (size1 t)) + b\\<rceil>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. int (height t) \\<le> \\<lceil>c * log 2 (real (size1 t)) + b\\<rceil>", "have *: \"0 < real (size t + 1) + cd * real (size t + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < real (size t + 1) + cd * real (size t + 1)", "using cd0"], ["proof (prove)\nusing this:\n  0 < cd\n\ngoal (1 subgoal):\n 1. 0 < real (size t + 1) + cd * real (size t + 1)", "by (simp add: add_pos_pos)"], ["proof (state)\nthis:\n  0 < real (size t + 1) + cd * real (size t + 1)\n\ngoal (1 subgoal):\n 1. int (height t) \\<le> \\<lceil>c * log 2 (real (size1 t)) + b\\<rceil>", "have \"0 < 2 powr (b / c) - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < 2 powr (b / c) - 1", "using b0 c1"], ["proof (prove)\nusing this:\n  0 < b\n  1 < c\n\ngoal (1 subgoal):\n 1. 0 < 2 powr (b / c) - 1", "by(auto simp: less_powr_iff)"], ["proof (state)\nthis:\n  0 < 2 powr (b / c) - 1\n\ngoal (1 subgoal):\n 1. int (height t) \\<le> \\<lceil>c * log 2 (real (size1 t)) + b\\<rceil>", "hence **: \"0 < real (size t + 1) + (2 powr (b / c) - 1) * real (size t + 1)\""], ["proof (prove)\nusing this:\n  0 < 2 powr (b / c) - 1\n\ngoal (1 subgoal):\n 1. 0 < real (size t + 1) + (2 powr (b / c) - 1) * real (size t + 1)", "by (simp add: add_pos_pos)"], ["proof (state)\nthis:\n  0 < real (size t + 1) + (2 powr (b / c) - 1) * real (size t + 1)\n\ngoal (1 subgoal):\n 1. int (height t) \\<le> \\<lceil>c * log 2 (real (size1 t)) + b\\<rceil>", "have \"height t \\<le> ceiling(c * log 2 (size t + 1 + dl))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int (height t) \\<le> \\<lceil>c * log 2 (real (size t + 1 + dl))\\<rceil>", "using assms(1)"], ["proof (prove)\nusing this:\n  bal_i (size t + dl) (height t)\n\ngoal (1 subgoal):\n 1. int (height t) \\<le> \\<lceil>c * log 2 (real (size t + 1 + dl))\\<rceil>", "by(simp add: bal_i_def add_ac)"], ["proof (state)\nthis:\n  int (height t) \\<le> \\<lceil>c * log 2 (real (size t + 1 + dl))\\<rceil>\n\ngoal (1 subgoal):\n 1. int (height t) \\<le> \\<lceil>c * log 2 (real (size1 t)) + b\\<rceil>", "also"], ["proof (state)\nthis:\n  int (height t) \\<le> \\<lceil>c * log 2 (real (size t + 1 + dl))\\<rceil>\n\ngoal (1 subgoal):\n 1. int (height t) \\<le> \\<lceil>c * log 2 (real (size1 t)) + b\\<rceil>", "have \"\\<dots> \\<le> ceiling(c * log 2 (size t + 1 + cd * (size t + 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lceil>c * log 2 (real (size t + 1 + dl))\\<rceil>\n    \\<le> \\<lceil>c *\n                  log 2 (real (size t + 1) + cd * real (size t + 1))\\<rceil>", "using c1 cd0 assms(2)"], ["proof (prove)\nusing this:\n  1 < c\n  0 < cd\n  bal_d (size t) dl\n\ngoal (1 subgoal):\n 1. \\<lceil>c * log 2 (real (size t + 1 + dl))\\<rceil>\n    \\<le> \\<lceil>c *\n                  log 2 (real (size t + 1) + cd * real (size t + 1))\\<rceil>", "by(simp add: ceiling_mono add_pos_nonneg bal_d_def add_ac)"], ["proof (state)\nthis:\n  \\<lceil>c * log 2 (real (size t + 1 + dl))\\<rceil>\n  \\<le> \\<lceil>c *\n                log 2 (real (size t + 1) + cd * real (size t + 1))\\<rceil>\n\ngoal (1 subgoal):\n 1. int (height t) \\<le> \\<lceil>c * log 2 (real (size1 t)) + b\\<rceil>", "also"], ["proof (state)\nthis:\n  \\<lceil>c * log 2 (real (size t + 1 + dl))\\<rceil>\n  \\<le> \\<lceil>c *\n                log 2 (real (size t + 1) + cd * real (size t + 1))\\<rceil>\n\ngoal (1 subgoal):\n 1. int (height t) \\<le> \\<lceil>c * log 2 (real (size1 t)) + b\\<rceil>", "have \"\\<dots> \\<le> ceiling(c * log 2 (size t + 1 + (2 powr (b/c) - 1) * (size t + 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lceil>c * log 2 (real (size t + 1) + cd * real (size t + 1))\\<rceil>\n    \\<le> \\<lceil>c *\n                  log 2\n                   (real (size t + 1) +\n                    (2 powr (b / c) - 1) * real (size t + 1))\\<rceil>", "using * ** cd_le_log c1"], ["proof (prove)\nusing this:\n  0 < real (size t + 1) + cd * real (size t + 1)\n  0 < real (size t + 1) + (2 powr (b / c) - 1) * real (size t + 1)\n  cd \\<le> 2 powr (b / c) - 1\n  1 < c\n\ngoal (1 subgoal):\n 1. \\<lceil>c * log 2 (real (size t + 1) + cd * real (size t + 1))\\<rceil>\n    \\<le> \\<lceil>c *\n                  log 2\n                   (real (size t + 1) +\n                    (2 powr (b / c) - 1) * real (size t + 1))\\<rceil>", "by(simp add: ceiling_mono mult_left_mono)"], ["proof (state)\nthis:\n  \\<lceil>c * log 2 (real (size t + 1) + cd * real (size t + 1))\\<rceil>\n  \\<le> \\<lceil>c *\n                log 2\n                 (real (size t + 1) +\n                  (2 powr (b / c) - 1) * real (size t + 1))\\<rceil>\n\ngoal (1 subgoal):\n 1. int (height t) \\<le> \\<lceil>c * log 2 (real (size1 t)) + b\\<rceil>", "also"], ["proof (state)\nthis:\n  \\<lceil>c * log 2 (real (size t + 1) + cd * real (size t + 1))\\<rceil>\n  \\<le> \\<lceil>c *\n                log 2\n                 (real (size t + 1) +\n                  (2 powr (b / c) - 1) * real (size t + 1))\\<rceil>\n\ngoal (1 subgoal):\n 1. int (height t) \\<le> \\<lceil>c * log 2 (real (size1 t)) + b\\<rceil>", "have \"\\<dots> = ceiling(c * log 2 (2 powr (b/c) * (size1 t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lceil>c *\n            log 2\n             (real (size t + 1) +\n              (2 powr (b / c) - 1) * real (size t + 1))\\<rceil> =\n    \\<lceil>c * log 2 (2 powr (b / c) * real (size1 t))\\<rceil>", "by(simp add:algebra_simps size1_size)"], ["proof (state)\nthis:\n  \\<lceil>c *\n          log 2\n           (real (size t + 1) +\n            (2 powr (b / c) - 1) * real (size t + 1))\\<rceil> =\n  \\<lceil>c * log 2 (2 powr (b / c) * real (size1 t))\\<rceil>\n\ngoal (1 subgoal):\n 1. int (height t) \\<le> \\<lceil>c * log 2 (real (size1 t)) + b\\<rceil>", "also"], ["proof (state)\nthis:\n  \\<lceil>c *\n          log 2\n           (real (size t + 1) +\n            (2 powr (b / c) - 1) * real (size t + 1))\\<rceil> =\n  \\<lceil>c * log 2 (2 powr (b / c) * real (size1 t))\\<rceil>\n\ngoal (1 subgoal):\n 1. int (height t) \\<le> \\<lceil>c * log 2 (real (size1 t)) + b\\<rceil>", "have \"\\<dots> = ceiling(c * (b/c + log 2 (size1 t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lceil>c * log 2 (2 powr (b / c) * real (size1 t))\\<rceil> =\n    \\<lceil>c * (b / c + log 2 (real (size1 t)))\\<rceil>", "by(simp add: log_mult)"], ["proof (state)\nthis:\n  \\<lceil>c * log 2 (2 powr (b / c) * real (size1 t))\\<rceil> =\n  \\<lceil>c * (b / c + log 2 (real (size1 t)))\\<rceil>\n\ngoal (1 subgoal):\n 1. int (height t) \\<le> \\<lceil>c * log 2 (real (size1 t)) + b\\<rceil>", "also"], ["proof (state)\nthis:\n  \\<lceil>c * log 2 (2 powr (b / c) * real (size1 t))\\<rceil> =\n  \\<lceil>c * (b / c + log 2 (real (size1 t)))\\<rceil>\n\ngoal (1 subgoal):\n 1. int (height t) \\<le> \\<lceil>c * log 2 (real (size1 t)) + b\\<rceil>", "have \"\\<dots> = ceiling(c * log 2 (size1 t) + b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lceil>c * (b / c + log 2 (real (size1 t)))\\<rceil> =\n    \\<lceil>c * log 2 (real (size1 t)) + b\\<rceil>", "using c1"], ["proof (prove)\nusing this:\n  1 < c\n\ngoal (1 subgoal):\n 1. \\<lceil>c * (b / c + log 2 (real (size1 t)))\\<rceil> =\n    \\<lceil>c * log 2 (real (size1 t)) + b\\<rceil>", "by(simp add: algebra_simps)"], ["proof (state)\nthis:\n  \\<lceil>c * (b / c + log 2 (real (size1 t)))\\<rceil> =\n  \\<lceil>c * log 2 (real (size1 t)) + b\\<rceil>\n\ngoal (1 subgoal):\n 1. int (height t) \\<le> \\<lceil>c * log 2 (real (size1 t)) + b\\<rceil>", "finally"], ["proof (chain)\npicking this:\n  int (height t) \\<le> \\<lceil>c * log 2 (real (size1 t)) + b\\<rceil>", "show ?thesis"], ["proof (prove)\nusing this:\n  int (height t) \\<le> \\<lceil>c * log 2 (real (size1 t)) + b\\<rceil>\n\ngoal (1 subgoal):\n 1. int (height t) \\<le> \\<lceil>c * log 2 (real (size1 t)) + b\\<rceil>", "."], ["proof (state)\nthis:\n  int (height t) \\<le> \\<lceil>c * log 2 (real (size1 t)) + b\\<rceil>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}