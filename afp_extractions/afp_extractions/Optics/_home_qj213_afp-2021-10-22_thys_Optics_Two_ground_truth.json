{"file_name": "/home/qj213/afp-2021-10-22/thys/Optics/Two.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Optics", "problem_names": ["lemma two_diff: \"\\<exists> x y :: 'a. x \\<noteq> y\""], "translations": [["", "lemma two_diff: \"\\<exists> x y :: 'a. x \\<noteq> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x y. x \\<noteq> y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x y. x \\<noteq> y", "obtain A where \"finite A\" \"card A = 2\" \"A \\<subseteq> (UNIV :: 'a set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>finite A; card A = 2; A \\<subseteq> UNIV\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (cases \"infinite (UNIV :: 'a set)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>A.\n                \\<lbrakk>finite A; card A = 2; A \\<subseteq> UNIV\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     infinite UNIV\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>A.\n                \\<lbrakk>finite A; card A = 2; A \\<subseteq> UNIV\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> infinite UNIV\\<rbrakk>\n    \\<Longrightarrow> thesis", "case True"], ["proof (state)\nthis:\n  infinite UNIV\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>A.\n                \\<lbrakk>finite A; card A = 2; A \\<subseteq> UNIV\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     infinite UNIV\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>A.\n                \\<lbrakk>finite A; card A = 2; A \\<subseteq> UNIV\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> infinite UNIV\\<rbrakk>\n    \\<Longrightarrow> thesis", "with infinite_arbitrarily_large[of \"UNIV :: 'a set\" 2] that"], ["proof (chain)\npicking this:\n  infinite UNIV \\<Longrightarrow>\n  \\<exists>B. finite B \\<and> card B = 2 \\<and> B \\<subseteq> UNIV\n  \\<lbrakk>finite ?A; card ?A = 2; ?A \\<subseteq> UNIV\\<rbrakk>\n  \\<Longrightarrow> thesis\n  infinite UNIV", "show ?thesis"], ["proof (prove)\nusing this:\n  infinite UNIV \\<Longrightarrow>\n  \\<exists>B. finite B \\<and> card B = 2 \\<and> B \\<subseteq> UNIV\n  \\<lbrakk>finite ?A; card ?A = 2; ?A \\<subseteq> UNIV\\<rbrakk>\n  \\<Longrightarrow> thesis\n  infinite UNIV\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>A.\n                \\<lbrakk>finite A; card A = 2; A \\<subseteq> UNIV\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> infinite UNIV\\<rbrakk>\n    \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>A.\n                \\<lbrakk>finite A; card A = 2; A \\<subseteq> UNIV\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> infinite UNIV\\<rbrakk>\n    \\<Longrightarrow> thesis", "case False"], ["proof (state)\nthis:\n  \\<not> infinite UNIV\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>A.\n                \\<lbrakk>finite A; card A = 2; A \\<subseteq> UNIV\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> infinite UNIV\\<rbrakk>\n    \\<Longrightarrow> thesis", "with card_two that"], ["proof (chain)\npicking this:\n  infinite UNIV \\<or> 2 \\<le> card UNIV\n  \\<lbrakk>finite ?A; card ?A = 2; ?A \\<subseteq> UNIV\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<not> infinite UNIV", "show ?thesis"], ["proof (prove)\nusing this:\n  infinite UNIV \\<or> 2 \\<le> card UNIV\n  \\<lbrakk>finite ?A; card ?A = 2; ?A \\<subseteq> UNIV\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<not> infinite UNIV\n\ngoal (1 subgoal):\n 1. thesis", "by (metis UNIV_bool card_UNIV_bool card_image card_le_inj finite.intros(1) finite_insert finite_subset)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite A\n  card A = 2\n  A \\<subseteq> UNIV\n\ngoal (1 subgoal):\n 1. \\<exists>x y. x \\<noteq> y", "thus ?thesis"], ["proof (prove)\nusing this:\n  finite A\n  card A = 2\n  A \\<subseteq> UNIV\n\ngoal (1 subgoal):\n 1. \\<exists>x y. x \\<noteq> y", "by (metis (full_types) One_nat_def Suc_1 UNIV_eq_I card.empty card.insert finite.intros(1) insertCI nat.inject nat.simps(3))"], ["proof (state)\nthis:\n  \\<exists>x y. x \\<noteq> y\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "instance bool :: two"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(bool, two_class)", "by (intro_classes, auto)"], ["", "instance nat :: two"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(nat, two_class)", "by (intro_classes, auto)"], ["", "instance int :: two"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(int, two_class)", "by (intro_classes, auto simp add: infinite_UNIV_int)"], ["", "instance rat :: two"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(rat, two_class)", "by (intro_classes, auto simp add: infinite_UNIV_char_0)"], ["", "instance real :: two"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(real, two_class)", "by (intro_classes, auto simp add: infinite_UNIV_char_0)"], ["", "instance list :: (type) two"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a list, two_class)", "by (intro_classes, auto simp add: infinite_UNIV_listI)"], ["", "end"]]}