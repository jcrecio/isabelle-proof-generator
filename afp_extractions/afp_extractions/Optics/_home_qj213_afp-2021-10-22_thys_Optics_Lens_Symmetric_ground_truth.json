{"file_name": "/home/qj213/afp-2021-10-22/thys/Optics/Lens_Symmetric.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Optics", "problem_names": ["lemma view_slens_compl [simp]: \"\\<V>\\<^bsub>-\\<^sub>L a\\<^esub> =  \\<C>\\<^bsub>a\\<^esub>\"", "lemma coview_slens_compl [simp]: \"\\<C>\\<^bsub>-\\<^sub>L a\\<^esub> =  \\<V>\\<^bsub>a\\<^esub>\"", "lemma psym_lens_compl [simp]: \"psym_lens a \\<Longrightarrow> psym_lens (-\\<^sub>L a)\"", "lemma put_region_coregion_cover:\n  \"put\\<^bsub>\\<V>\\<^esub> (put\\<^bsub>\\<C>\\<^esub> s\\<^sub>1 (get\\<^bsub>\\<C>\\<^esub> s\\<^sub>2)) (get\\<^bsub>\\<V>\\<^esub> s\\<^sub>2) = s\\<^sub>2\"", "lemma sym_lens_psym [simp]: \"sym_lens x \\<Longrightarrow> psym_lens x\"", "lemma sym_lens_compl [simp]: \"sym_lens a \\<Longrightarrow> sym_lens (-\\<^sub>L a)\""], "translations": [["", "lemma view_slens_compl [simp]: \"\\<V>\\<^bsub>-\\<^sub>L a\\<^esub> =  \\<C>\\<^bsub>a\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<V>\\<^bsub>-\\<^sub>L a\\<^esub> = \\<C>\\<^bsub>a\\<^esub>", "by (simp add: slens_compl_def)"], ["", "lemma coview_slens_compl [simp]: \"\\<C>\\<^bsub>-\\<^sub>L a\\<^esub> =  \\<V>\\<^bsub>a\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<C>\\<^bsub>-\\<^sub>L a\\<^esub> = \\<V>\\<^bsub>a\\<^esub>", "by (simp add: slens_compl_def)"], ["", "subsection \\<open> Partial Symmetric Lenses \\<close>"], ["", "locale psym_lens =\n  fixes S :: \"<'a, 'b> \\<Longleftrightarrow> 's\" (structure)\n  assumes \n    mwb_region [simp]: \"mwb_lens \\<V>\" and\n    mwb_coregion [simp]: \"mwb_lens \\<C>\" and\n    indep_region_coregion [simp]: \"\\<V> \\<bowtie> \\<C>\" and\n    pbij_region_coregion [simp]: \"pbij_lens (\\<V> +\\<^sub>L \\<C>)\""], ["", "declare psym_lens.mwb_region [simp]"], ["", "declare psym_lens.mwb_coregion [simp]"], ["", "declare psym_lens.indep_region_coregion [simp]"], ["", "lemma psym_lens_compl [simp]: \"psym_lens a \\<Longrightarrow> psym_lens (-\\<^sub>L a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. psym_lens a \\<Longrightarrow> psym_lens (-\\<^sub>L a)", "apply (simp add: slens_compl_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. psym_lens a \\<Longrightarrow>\n    psym_lens\n     \\<lparr>view = \\<C>\\<^bsub>a\\<^esub>,\n        coview = \\<V>\\<^bsub>a\\<^esub>\\<rparr>", "apply (rule psym_lens.intro)"], ["proof (prove)\ngoal (4 subgoals):\n 1. psym_lens a \\<Longrightarrow>\n    mwb_lens\n     \\<V>\\<^bsub>\\<lparr>view = \\<C>\\<^bsub>a\\<^esub>, coview = \\<V>\\<^bsub>a\\<^esub>\\<rparr>\\<^esub>\n 2. psym_lens a \\<Longrightarrow>\n    mwb_lens\n     \\<C>\\<^bsub>\\<lparr>view = \\<C>\\<^bsub>a\\<^esub>, coview = \\<V>\\<^bsub>a\\<^esub>\\<rparr>\\<^esub>\n 3. psym_lens a \\<Longrightarrow>\n    \\<V>\\<^bsub>\\<lparr>view = \\<C>\\<^bsub>a\\<^esub>, coview = \\<V>\\<^bsub>a\\<^esub>\\<rparr>\\<^esub> \\<bowtie>\n    \\<C>\\<^bsub>\\<lparr>view = \\<C>\\<^bsub>a\\<^esub>, coview = \\<V>\\<^bsub>a\\<^esub>\\<rparr>\\<^esub>\n 4. psym_lens a \\<Longrightarrow>\n    pbij_lens\n     (\\<V>\\<^bsub>\\<lparr>view = \\<C>\\<^bsub>a\\<^esub>, coview = \\<V>\\<^bsub>a\\<^esub>\\<rparr>\\<^esub> +\\<^sub>L\n      \\<C>\\<^bsub>\\<lparr>view = \\<C>\\<^bsub>a\\<^esub>, coview = \\<V>\\<^bsub>a\\<^esub>\\<rparr>\\<^esub>)", "apply (simp_all)"], ["proof (prove)\ngoal (2 subgoals):\n 1. psym_lens a \\<Longrightarrow>\n    \\<C>\\<^bsub>a\\<^esub> \\<bowtie> \\<V>\\<^bsub>a\\<^esub>\n 2. psym_lens a \\<Longrightarrow>\n    pbij_lens (\\<C>\\<^bsub>a\\<^esub> +\\<^sub>L \\<V>\\<^bsub>a\\<^esub>)", "using lens_indep_sym psym_lens.indep_region_coregion"], ["proof (prove)\nusing this:\n  ?x \\<bowtie> ?y \\<Longrightarrow> ?y \\<bowtie> ?x\n  psym_lens ?S \\<Longrightarrow>\n  \\<V>\\<^bsub>?S\\<^esub> \\<bowtie> \\<C>\\<^bsub>?S\\<^esub>\n\ngoal (2 subgoals):\n 1. psym_lens a \\<Longrightarrow>\n    \\<C>\\<^bsub>a\\<^esub> \\<bowtie> \\<V>\\<^bsub>a\\<^esub>\n 2. psym_lens a \\<Longrightarrow>\n    pbij_lens (\\<C>\\<^bsub>a\\<^esub> +\\<^sub>L \\<V>\\<^bsub>a\\<^esub>)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. psym_lens a \\<Longrightarrow>\n    pbij_lens (\\<C>\\<^bsub>a\\<^esub> +\\<^sub>L \\<V>\\<^bsub>a\\<^esub>)", "using lens_indep_sym pbij_plus_commute psym_lens_def"], ["proof (prove)\nusing this:\n  ?x \\<bowtie> ?y \\<Longrightarrow> ?y \\<bowtie> ?x\n  \\<lbrakk>?a \\<bowtie> ?b; mwb_lens ?a; mwb_lens ?b;\n   pbij_lens (?b +\\<^sub>L ?a)\\<rbrakk>\n  \\<Longrightarrow> pbij_lens (?a +\\<^sub>L ?b)\n  psym_lens ?S \\<equiv>\n  (mwb_lens \\<V>\\<^bsub>?S\\<^esub> \\<and>\n   mwb_lens \\<C>\\<^bsub>?S\\<^esub>) \\<and>\n  \\<V>\\<^bsub>?S\\<^esub> \\<bowtie> \\<C>\\<^bsub>?S\\<^esub> \\<and>\n  pbij_lens (\\<V>\\<^bsub>?S\\<^esub> +\\<^sub>L \\<C>\\<^bsub>?S\\<^esub>)\n\ngoal (1 subgoal):\n 1. psym_lens a \\<Longrightarrow>\n    pbij_lens (\\<C>\\<^bsub>a\\<^esub> +\\<^sub>L \\<V>\\<^bsub>a\\<^esub>)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \\<open> Symmetric Lenses \\<close>"], ["", "locale sym_lens =\n  fixes S :: \"<'a, 'b> \\<Longleftrightarrow> 's\" (structure)\n  assumes \n    vwb_region: \"vwb_lens \\<V>\" and\n    vwb_coregion: \"vwb_lens \\<C>\" and\n    indep_region_coregion: \"\\<V> \\<bowtie> \\<C>\" and\n    bij_region_coregion: \"bij_lens (\\<V> +\\<^sub>L \\<C>)\"\nbegin"], ["", "sublocale psym_lens"], ["proof (prove)\ngoal (1 subgoal):\n 1. psym_lens S", "proof (rule psym_lens.intro)"], ["proof (state)\ngoal (4 subgoals):\n 1. mwb_lens \\<V>\n 2. mwb_lens \\<C>\n 3. \\<V> \\<bowtie> \\<C>\n 4. pbij_lens (\\<V> +\\<^sub>L \\<C>)", "show \"mwb_lens \\<V>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mwb_lens \\<V>", "by (simp add: vwb_region)"], ["proof (state)\nthis:\n  mwb_lens \\<V>\n\ngoal (3 subgoals):\n 1. mwb_lens \\<C>\n 2. \\<V> \\<bowtie> \\<C>\n 3. pbij_lens (\\<V> +\\<^sub>L \\<C>)", "show \"mwb_lens \\<C>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mwb_lens \\<C>", "by (simp add: vwb_coregion)"], ["proof (state)\nthis:\n  mwb_lens \\<C>\n\ngoal (2 subgoals):\n 1. \\<V> \\<bowtie> \\<C>\n 2. pbij_lens (\\<V> +\\<^sub>L \\<C>)", "show \"\\<V> \\<bowtie> \\<C>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<V> \\<bowtie> \\<C>", "using indep_region_coregion"], ["proof (prove)\nusing this:\n  \\<V> \\<bowtie> \\<C>\n\ngoal (1 subgoal):\n 1. \\<V> \\<bowtie> \\<C>", "by blast"], ["proof (state)\nthis:\n  \\<V> \\<bowtie> \\<C>\n\ngoal (1 subgoal):\n 1. pbij_lens (\\<V> +\\<^sub>L \\<C>)", "show \"pbij_lens (\\<V> +\\<^sub>L \\<C>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pbij_lens (\\<V> +\\<^sub>L \\<C>)", "by (simp add: bij_region_coregion)"], ["proof (state)\nthis:\n  pbij_lens (\\<V> +\\<^sub>L \\<C>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma put_region_coregion_cover:\n  \"put\\<^bsub>\\<V>\\<^esub> (put\\<^bsub>\\<C>\\<^esub> s\\<^sub>1 (get\\<^bsub>\\<C>\\<^esub> s\\<^sub>2)) (get\\<^bsub>\\<V>\\<^esub> s\\<^sub>2) = s\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. put\\<^bsub>\\<V>\\<^esub>\n     (put\\<^bsub>\\<C>\\<^esub> s\\<^sub>1 (get\\<^bsub>\\<C>\\<^esub> s\\<^sub>2))\n     (get\\<^bsub>\\<V>\\<^esub> s\\<^sub>2) =\n    s\\<^sub>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. put\\<^bsub>\\<V>\\<^esub>\n     (put\\<^bsub>\\<C>\\<^esub> s\\<^sub>1 (get\\<^bsub>\\<C>\\<^esub> s\\<^sub>2))\n     (get\\<^bsub>\\<V>\\<^esub> s\\<^sub>2) =\n    s\\<^sub>2", "have \"put\\<^bsub>\\<V>\\<^esub> (put\\<^bsub>\\<C>\\<^esub> s\\<^sub>1 (get\\<^bsub>\\<C>\\<^esub> s\\<^sub>2)) (get\\<^bsub>\\<V>\\<^esub> s\\<^sub>2) = put\\<^bsub>\\<V> +\\<^sub>L \\<C>\\<^esub> s\\<^sub>1 (get\\<^bsub>\\<V> +\\<^sub>L \\<C>\\<^esub> s\\<^sub>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. put\\<^bsub>\\<V>\\<^esub>\n     (put\\<^bsub>\\<C>\\<^esub> s\\<^sub>1 (get\\<^bsub>\\<C>\\<^esub> s\\<^sub>2))\n     (get\\<^bsub>\\<V>\\<^esub> s\\<^sub>2) =\n    put\\<^bsub>\\<V> +\\<^sub>L \\<C>\\<^esub> s\\<^sub>1\n     (get\\<^bsub>\\<V> +\\<^sub>L \\<C>\\<^esub> s\\<^sub>2)", "by (simp add: lens_defs)"], ["proof (state)\nthis:\n  put\\<^bsub>\\<V>\\<^esub>\n   (put\\<^bsub>\\<C>\\<^esub> s\\<^sub>1 (get\\<^bsub>\\<C>\\<^esub> s\\<^sub>2))\n   (get\\<^bsub>\\<V>\\<^esub> s\\<^sub>2) =\n  put\\<^bsub>\\<V> +\\<^sub>L \\<C>\\<^esub> s\\<^sub>1\n   (get\\<^bsub>\\<V> +\\<^sub>L \\<C>\\<^esub> s\\<^sub>2)\n\ngoal (1 subgoal):\n 1. put\\<^bsub>\\<V>\\<^esub>\n     (put\\<^bsub>\\<C>\\<^esub> s\\<^sub>1 (get\\<^bsub>\\<C>\\<^esub> s\\<^sub>2))\n     (get\\<^bsub>\\<V>\\<^esub> s\\<^sub>2) =\n    s\\<^sub>2", "also"], ["proof (state)\nthis:\n  put\\<^bsub>\\<V>\\<^esub>\n   (put\\<^bsub>\\<C>\\<^esub> s\\<^sub>1 (get\\<^bsub>\\<C>\\<^esub> s\\<^sub>2))\n   (get\\<^bsub>\\<V>\\<^esub> s\\<^sub>2) =\n  put\\<^bsub>\\<V> +\\<^sub>L \\<C>\\<^esub> s\\<^sub>1\n   (get\\<^bsub>\\<V> +\\<^sub>L \\<C>\\<^esub> s\\<^sub>2)\n\ngoal (1 subgoal):\n 1. put\\<^bsub>\\<V>\\<^esub>\n     (put\\<^bsub>\\<C>\\<^esub> s\\<^sub>1 (get\\<^bsub>\\<C>\\<^esub> s\\<^sub>2))\n     (get\\<^bsub>\\<V>\\<^esub> s\\<^sub>2) =\n    s\\<^sub>2", "have \"... = s\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. put\\<^bsub>\\<V> +\\<^sub>L \\<C>\\<^esub> s\\<^sub>1\n     (get\\<^bsub>\\<V> +\\<^sub>L \\<C>\\<^esub> s\\<^sub>2) =\n    s\\<^sub>2", "by (simp add: bij_region_coregion)"], ["proof (state)\nthis:\n  put\\<^bsub>\\<V> +\\<^sub>L \\<C>\\<^esub> s\\<^sub>1\n   (get\\<^bsub>\\<V> +\\<^sub>L \\<C>\\<^esub> s\\<^sub>2) =\n  s\\<^sub>2\n\ngoal (1 subgoal):\n 1. put\\<^bsub>\\<V>\\<^esub>\n     (put\\<^bsub>\\<C>\\<^esub> s\\<^sub>1 (get\\<^bsub>\\<C>\\<^esub> s\\<^sub>2))\n     (get\\<^bsub>\\<V>\\<^esub> s\\<^sub>2) =\n    s\\<^sub>2", "finally"], ["proof (chain)\npicking this:\n  put\\<^bsub>\\<V>\\<^esub>\n   (put\\<^bsub>\\<C>\\<^esub> s\\<^sub>1 (get\\<^bsub>\\<C>\\<^esub> s\\<^sub>2))\n   (get\\<^bsub>\\<V>\\<^esub> s\\<^sub>2) =\n  s\\<^sub>2", "show ?thesis"], ["proof (prove)\nusing this:\n  put\\<^bsub>\\<V>\\<^esub>\n   (put\\<^bsub>\\<C>\\<^esub> s\\<^sub>1 (get\\<^bsub>\\<C>\\<^esub> s\\<^sub>2))\n   (get\\<^bsub>\\<V>\\<^esub> s\\<^sub>2) =\n  s\\<^sub>2\n\ngoal (1 subgoal):\n 1. put\\<^bsub>\\<V>\\<^esub>\n     (put\\<^bsub>\\<C>\\<^esub> s\\<^sub>1 (get\\<^bsub>\\<C>\\<^esub> s\\<^sub>2))\n     (get\\<^bsub>\\<V>\\<^esub> s\\<^sub>2) =\n    s\\<^sub>2", "."], ["proof (state)\nthis:\n  put\\<^bsub>\\<V>\\<^esub>\n   (put\\<^bsub>\\<C>\\<^esub> s\\<^sub>1 (get\\<^bsub>\\<C>\\<^esub> s\\<^sub>2))\n   (get\\<^bsub>\\<V>\\<^esub> s\\<^sub>2) =\n  s\\<^sub>2\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "declare sym_lens.vwb_region [simp]"], ["", "declare sym_lens.vwb_coregion [simp]"], ["", "declare sym_lens.indep_region_coregion [simp]"], ["", "lemma sym_lens_psym [simp]: \"sym_lens x \\<Longrightarrow> psym_lens x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym_lens x \\<Longrightarrow> psym_lens x", "by (simp add: psym_lens_def sym_lens.bij_region_coregion)"], ["", "lemma sym_lens_compl [simp]: \"sym_lens a \\<Longrightarrow> sym_lens (-\\<^sub>L a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym_lens a \\<Longrightarrow> sym_lens (-\\<^sub>L a)", "apply (simp add: slens_compl_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. sym_lens a \\<Longrightarrow>\n    sym_lens\n     \\<lparr>view = \\<C>\\<^bsub>a\\<^esub>,\n        coview = \\<V>\\<^bsub>a\\<^esub>\\<rparr>", "apply (rule sym_lens.intro, simp_all)"], ["proof (prove)\ngoal (2 subgoals):\n 1. sym_lens a \\<Longrightarrow>\n    \\<C>\\<^bsub>a\\<^esub> \\<bowtie> \\<V>\\<^bsub>a\\<^esub>\n 2. sym_lens a \\<Longrightarrow>\n    bij_lens (\\<C>\\<^bsub>a\\<^esub> +\\<^sub>L \\<V>\\<^bsub>a\\<^esub>)", "using lens_indep_sym sym_lens.indep_region_coregion"], ["proof (prove)\nusing this:\n  ?x \\<bowtie> ?y \\<Longrightarrow> ?y \\<bowtie> ?x\n  sym_lens ?S \\<Longrightarrow>\n  \\<V>\\<^bsub>?S\\<^esub> \\<bowtie> \\<C>\\<^bsub>?S\\<^esub>\n\ngoal (2 subgoals):\n 1. sym_lens a \\<Longrightarrow>\n    \\<C>\\<^bsub>a\\<^esub> \\<bowtie> \\<V>\\<^bsub>a\\<^esub>\n 2. sym_lens a \\<Longrightarrow>\n    bij_lens (\\<C>\\<^bsub>a\\<^esub> +\\<^sub>L \\<V>\\<^bsub>a\\<^esub>)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. sym_lens a \\<Longrightarrow>\n    bij_lens (\\<C>\\<^bsub>a\\<^esub> +\\<^sub>L \\<V>\\<^bsub>a\\<^esub>)", "using bij_lens_equiv lens_plus_comm sym_lens_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>bij_lens ?X; ?X \\<approx>\\<^sub>L ?Y\\<rbrakk>\n  \\<Longrightarrow> bij_lens ?Y\n  ?X \\<bowtie> ?Y \\<Longrightarrow>\n  ?X +\\<^sub>L ?Y \\<approx>\\<^sub>L ?Y +\\<^sub>L ?X\n  sym_lens ?S \\<equiv>\n  (vwb_lens \\<V>\\<^bsub>?S\\<^esub> \\<and>\n   vwb_lens \\<C>\\<^bsub>?S\\<^esub>) \\<and>\n  \\<V>\\<^bsub>?S\\<^esub> \\<bowtie> \\<C>\\<^bsub>?S\\<^esub> \\<and>\n  bij_lens (\\<V>\\<^bsub>?S\\<^esub> +\\<^sub>L \\<C>\\<^bsub>?S\\<^esub>)\n\ngoal (1 subgoal):\n 1. sym_lens a \\<Longrightarrow>\n    bij_lens (\\<C>\\<^bsub>a\\<^esub> +\\<^sub>L \\<V>\\<^bsub>a\\<^esub>)", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}