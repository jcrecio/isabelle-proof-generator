{"file_name": "/home/qj213/afp-2021-10-22/thys/Design_Theory/Group_Divisible_Designs.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Design_Theory", "problem_names": ["lemma groups_not_empty: \"\\<G> \\<noteq> {}\"", "lemma num_groups_lt_points: \"card \\<G> \\<le> \\<v>\"", "lemma groups_disjoint: \"disjoint \\<G>\"", "lemma groups_disjoint_pairwise: \"G1 \\<in> \\<G> \\<Longrightarrow> G2 \\<in> \\<G> \\<Longrightarrow> G1 \\<noteq> G2 \\<Longrightarrow> disjnt G1 G2\"", "lemma point_in_one_group: \"x \\<in> G1 \\<Longrightarrow> G1 \\<in> \\<G> \\<Longrightarrow> G2 \\<in> \\<G> \\<Longrightarrow> G1 \\<noteq> G2 \\<Longrightarrow> x \\<notin> G2\"", "lemma point_has_unique_group: \"x \\<in> \\<V> \\<Longrightarrow> \\<exists>!G. x \\<in> G \\<and> G \\<in> \\<G>\"", "lemma rep_number_point_group_one: \n  assumes \"x \\<in> \\<V>\"\n  shows  \"card {g \\<in> \\<G> . x \\<in> g} = 1\"", "lemma point_in_group: \"G \\<in> \\<G> \\<Longrightarrow> x \\<in> G \\<Longrightarrow> x \\<in> \\<V>\"", "lemma point_subset_in_group: \"G \\<in> \\<G> \\<Longrightarrow> ps \\<subseteq> G \\<Longrightarrow> ps \\<subseteq> \\<V>\"", "lemma group_subset_point_subset: \"G \\<in> \\<G> \\<Longrightarrow> G' \\<subseteq> G \\<Longrightarrow> ps \\<subseteq> G' \\<Longrightarrow> ps \\<subseteq> \\<V>\"", "lemma groups_finite: \"finite \\<G>\"", "lemma group_elements_finite: \"G \\<in> \\<G> \\<Longrightarrow> finite G\"", "lemma v_equals_sum_group_sizes: \"\\<v> = (\\<Sum>G \\<in> \\<G>. card G)\"", "lemma gdd_min_v: \"\\<v> \\<ge> 2\"", "lemma min_group_size: \"G \\<in> \\<G> \\<Longrightarrow> card G \\<ge> 1\"", "lemma group_size_lt_v: \n  assumes \"G \\<in> \\<G>\"\n  shows \"card G < \\<v>\"", "lemma group_sizes_min: \"x \\<in> group_sizes \\<Longrightarrow> x \\<ge> 1 \"", "lemma group_sizes_max: \"x \\<in> group_sizes \\<Longrightarrow> x < \\<v> \"", "lemma group_size_implies_group_existance: \"x \\<in> group_sizes \\<Longrightarrow> \\<exists>G. G \\<in> \\<G> \\<and> card G = x\"", "lemma groups_of_size_zero: \"groups_of_size 0 = 0\"", "lemma groups_of_size_max: \n  assumes \"g \\<ge> \\<v>\"\n  shows \"groups_of_size g = 0\"", "lemma group_type_contained_sizes: \"(g, a) \\<in> group_type \\<Longrightarrow> g \\<in> group_sizes\"", "lemma group_type_contained_count: \"(g, a) \\<in> group_type \\<Longrightarrow> card {G \\<in> \\<G> . card G = g} = a\"", "lemma group_card_in_sizes: \"g \\<in> \\<G> \\<Longrightarrow> card g \\<in> group_sizes\"", "lemma group_card_non_zero_groups_of_size_min: \n  assumes \"g \\<in> \\<G>\"\n  assumes \"card g = a\"\n  shows \"groups_of_size a \\<ge> 1\"", "lemma elem_in_group_sizes_min_of_size: \n  assumes \"a \\<in> group_sizes\"\n  shows \"groups_of_size a \\<ge> 1\"", "lemma group_card_non_zero_groups_of_size_max: \n  shows \"groups_of_size a \\<le> \\<v>\"", "lemma group_card_in_type: \"g \\<in> \\<G> \\<Longrightarrow> \\<exists> x . (card g, x) \\<in> group_type \\<and> x \\<ge> 1\"", "lemma partition_groups_on_size: \"partition_on \\<G> {{ G \\<in> \\<G> . card G = g } | g . g \\<in> group_sizes}\"", "lemma group_size_partition_covers_points: \"\\<Union>(\\<Union>{{ G \\<in> \\<G> . card G = g } | g . g \\<in> group_sizes}) = \\<V>\"", "lemma groups_of_size_alt_def_count: \"groups_of_size g = count {# card G . G \\<in># mset_set \\<G> #} g\"", "lemma v_sum_type_rep: \"\\<v> = (\\<Sum> g \\<in> group_sizes . g * (groups_of_size g))\"", "lemma m_positive: \"\\<m> \\<ge> 1\"", "lemma uniform_groups_alt: \" \\<forall> G \\<in> \\<G> . card G = \\<m>\"", "lemma uniform_groups_group_sizes: \"group_sizes = {\\<m>}\"", "lemma uniform_groups_group_size_singleton: \"is_singleton (group_sizes)\"", "lemma set_filter_eq_P_forall:\"\\<forall> x \\<in> X . P x \\<Longrightarrow> Set.filter P X = X\"", "lemma uniform_groups_groups_of_size_m: \"groups_of_size \\<m> = card \\<G>\"", "lemma uniform_groups_of_size_not_m: \"x \\<noteq> \\<m> \\<Longrightarrow> groups_of_size x = 0\"", "lemma points_sep_groups_ne: \"G1 \\<in> \\<G> \\<Longrightarrow> G2 \\<in> \\<G> \\<Longrightarrow> G1 \\<noteq> G2 \\<Longrightarrow> x \\<in> G1 \\<Longrightarrow> y \\<in> G2 \\<Longrightarrow> x \\<noteq> y\"", "lemma index_together_alt_ss: \"ps \\<subseteq> G \\<Longrightarrow> G \\<in> \\<G> \\<Longrightarrow> card ps = 2 \\<Longrightarrow> \\<B> index ps = 0\"", "lemma index_distinct_alt_ss: \"ps \\<subseteq> \\<V> \\<Longrightarrow> card ps = 2 \\<Longrightarrow> (\\<And> G . G \\<in> \\<G> \\<Longrightarrow> \\<not> ps \\<subseteq> G) \\<Longrightarrow> \n    \\<B> index ps = \\<Lambda>\"", "lemma gdd_index_options: \"ps \\<subseteq> \\<V> \\<Longrightarrow> card ps = 2 \\<Longrightarrow> \\<B> index ps = 0 \\<or> \\<B> index ps = \\<Lambda>\"", "lemma index_zero_implies_same_group: \"ps \\<subseteq> \\<V> \\<Longrightarrow> card ps = 2 \\<Longrightarrow> \\<B> index ps = 0 \\<Longrightarrow> \n    \\<exists> G \\<in> \\<G> . ps \\<subseteq> G\"", "lemma index_zero_implies_same_group_unique: \"ps \\<subseteq> \\<V> \\<Longrightarrow> card ps = 2 \\<Longrightarrow> \\<B> index ps = 0 \\<Longrightarrow> \n    \\<exists>! G \\<in> \\<G> . ps \\<subseteq> G\"", "lemma index_not_zero_impl_diff_group: \"ps \\<subseteq> \\<V> \\<Longrightarrow> card ps = 2 \\<Longrightarrow> \\<B> index ps = \\<Lambda> \\<Longrightarrow>  \n    (\\<And> G . G \\<in> \\<G> \\<Longrightarrow> \\<not> ps \\<subseteq> G)\"", "lemma index_zero_implies_one_group: \n  assumes \"ps \\<subseteq> \\<V>\" \n  and \"card ps = 2\" \n  and \"\\<B> index ps = 0\" \n  shows \"size {#b \\<in>#  mset_set \\<G> . ps \\<subseteq> b#} = 1\"", "lemma index_distinct_group_num_alt_def: \"ps \\<subseteq> \\<V> \\<Longrightarrow> card ps = 2 \\<Longrightarrow> \n    size {#b \\<in>#  mset_set \\<G> . ps \\<subseteq> b#} = 0 \\<Longrightarrow> \\<B> index ps = \\<Lambda>\"", "lemma index_non_zero_implies_no_group: \n  assumes \"ps \\<subseteq> \\<V>\" \n    and  \"card ps = 2\" \n    and \"\\<B> index ps = \\<Lambda>\" \n  shows \"size {#b \\<in>#  mset_set \\<G> . ps \\<subseteq> b#} = 0\"", "lemma gdd_index_non_zero_iff: \"ps \\<subseteq> \\<V> \\<Longrightarrow> card ps = 2 \\<Longrightarrow> \n    \\<B> index ps = \\<Lambda> \\<longleftrightarrow> size {#b \\<in>#  mset_set \\<G> . ps \\<subseteq> b#} = 0\"", "lemma gdd_index_zero_iff: \"ps \\<subseteq> \\<V> \\<Longrightarrow> card ps = 2 \\<Longrightarrow> \n    \\<B> index ps = 0 \\<longleftrightarrow> size {#b \\<in>#  mset_set \\<G> . ps \\<subseteq> b#} = 1\"", "lemma points_index_upper_bound: \"ps \\<subseteq> \\<V> \\<Longrightarrow> card ps = 2 \\<Longrightarrow> \\<B> index ps \\<le> \\<Lambda>\"", "lemma index_1_imp_mult_1: \n  assumes \"\\<Lambda> = 1\"\n  assumes \"bl \\<in># \\<B>\"\n  assumes \"card bl \\<ge> 2\"\n  shows \"multiplicity bl = 1\"", "lemma simple_if_block_size_gt_2:\n  assumes \"\\<And> bl . card bl \\<ge> 2\"\n  assumes \"\\<Lambda> = 1\"\n  shows \"simple_design \\<V> \\<B>\"", "lemma (in K_GDD) multiplicity_1:  \"bl \\<in># \\<B> \\<Longrightarrow> card bl \\<ge> 2 \\<Longrightarrow> multiplicity bl = 1\"", "lemma delete_point_index_zero: \n  assumes \"G \\<in> {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\"\n  and \"y \\<in> G\" and \"z \\<in> G\" and \"z\\<noteq> y\"\nshows \"(del_point_blocks x) index {y, z} = 0\"", "lemma delete_point_index: \n  assumes \"G1 \\<in> {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\"\n  assumes \"G2 \\<in> {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\"\n  assumes \"G1 \\<noteq> G2\" and \"y \\<in> G1\" and \"z \\<in> G2\"\n  shows \"del_point_blocks x index {y, z} = \\<Lambda>\"", "lemma delete_point_group_size: \n  assumes \"{x} \\<in> \\<G> \\<Longrightarrow> card \\<G> > 2\" \n  shows \"1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\"", "lemma GDD_by_deleting_point: \n  assumes \"\\<And>bl. bl \\<in># \\<B> \\<Longrightarrow> x \\<in> bl \\<Longrightarrow> 2 \\<le> card bl\"\n  assumes \"{x} \\<in> \\<G> \\<Longrightarrow> card \\<G> > 2\"\n  shows \"GDD (del_point x) (del_point_blocks x) {g - {x} | g . g \\<in> \\<G> \\<and> g \\<noteq> {x}} \\<Lambda>\"", "lemma kgdd1_points_index_group_block: \n  assumes \"ps \\<subseteq> \\<V>\"\n  and \"card ps = 2\"\n  shows \"(\\<B> + mset_set \\<G>) index ps = 1\"", "lemma combine_block_groups_pairwise: \"pairwise_balance \\<V> (\\<B> + mset_set \\<G>) 1\"", "lemma combine_block_groups_PBD:\n  assumes \"\\<And> G. G \\<in> \\<G> \\<Longrightarrow> card G \\<in> \\<K>\"\n  assumes \"\\<And> k . k \\<in> \\<K> \\<Longrightarrow> k \\<ge> 2\"\n  shows \"PBD \\<V> (\\<B> + mset_set \\<G>) \\<K>\"", "lemma kgdd1_index_adjoin_group_block:\n  assumes \"x \\<notin> \\<V>\"\n  assumes \"ps \\<subseteq> insert x \\<V>\"\n  assumes \"card ps = 2\"\n  shows \"(\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps = 1\"", "lemma pairwise_by_adjoining_point: \n  assumes \"x \\<notin> \\<V>\"\n  shows \"pairwise_balance (add_point x) (\\<B> + mset_set { insert x g | g. g \\<in> \\<G>}) 1\"", "lemma PBD_by_adjoining_point: \n  assumes \"x \\<notin> \\<V>\"\n  assumes \"\\<And> k . k \\<in> \\<K> \\<Longrightarrow> k \\<ge> 2\"\n  shows \"PBD (add_point x) (\\<B> + mset_set { insert x g | g. g \\<in> \\<G>}) (\\<K> \\<union> {(card g) + 1 | g . g \\<in> \\<G>})\"", "lemma wilsons_construction_proper: \n  assumes \"card I = w\"\n  assumes \"w > 0\"\n  assumes \"\\<And> n. n \\<in> \\<K>' \\<Longrightarrow> n \\<ge> 2\"\n  assumes \"\\<And> B . B \\<in># \\<B> \\<Longrightarrow> K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x . x \\<in> B }\"\n  shows \"proper_design (\\<V> \\<times> I) (\\<Sum>B \\<in># \\<B>. (f B))\" (is \"proper_design ?Y ?B\")", "lemma pair_construction_block_sizes: \n  assumes \"K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x . x \\<in> B }\"\n  assumes \"B \\<in># \\<B>\"\n  assumes \"b \\<in># (f B)\"\n  shows \"card b \\<in> \\<K>'\"", "lemma wilsons_construction_index_0: \n  assumes \"\\<And> B . B \\<in># \\<B> \\<Longrightarrow> K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x . x \\<in> B }\"\n  assumes \"G \\<in> {GG \\<times> I |GG. GG \\<in> \\<G>}\"\n  assumes \"X \\<in> G\" \n  assumes \"Y \\<in> G\" \n  assumes \"X \\<noteq> Y\"\n  shows \"(\\<Sum>\\<^sub># (image_mset f \\<B>)) index {X, Y} = 0\"", "lemma wilsons_construction_index_1: \n  assumes \"\\<And> B . B \\<in># \\<B> \\<Longrightarrow> K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x . x \\<in> B }\"\n  assumes \"G1 \\<in> {G \\<times> I |G. G \\<in> \\<G>}\"\n  assumes \"G2 \\<in> {G \\<times> I |G. G \\<in> \\<G>}\"\n  assumes \"G1 \\<noteq> G2\"\n  and \"(x, ix) \\<in> G1\" and \"(y, iy) \\<in> G2\" \n  shows \"(\\<Sum>\\<^sub># (image_mset f \\<B>)) index {(x, ix), (y, iy)} = (1 ::int)\"", "theorem Wilsons_Construction:\n  assumes \"card I = w\"\n  assumes \"w > 0\"\n  assumes \"\\<And> n. n \\<in> \\<K>' \\<Longrightarrow> n \\<ge> 2\"\n  assumes \"\\<And> B . B \\<in># \\<B> \\<Longrightarrow> K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x . x \\<in> B }\"\n  shows \"K_GDD (\\<V> \\<times> I) (\\<Sum>B \\<in># \\<B>. (f B)) \\<K>' {G \\<times> I | G . G \\<in> \\<G>}\"", "lemma PBD_by_deleting_point: \n  assumes \"\\<v> > 2\"\n  assumes \"\\<And> bl . bl \\<in># \\<B> \\<Longrightarrow> card bl \\<ge> 2\"\n  shows \"pairwise_balance (del_point x) (del_point_blocks x) \\<Lambda>\"", "lemma bibd_from_kGDD:\n  assumes \"\\<k> > 1\"\n  assumes \"\\<And> g. g \\<in> \\<G> \\<Longrightarrow> card g = \\<k> - 1\"\n  assumes \" x \\<notin> \\<V>\"\n  shows \"bibd (add_point x) (\\<B> + mset_set { insert x g | g. g \\<in> \\<G>}) (\\<k>) 1\"", "lemma pbd_points_index1: \"ps \\<subseteq> \\<V> \\<Longrightarrow> card ps = 2 \\<Longrightarrow> \\<B> index ps = 1\"", "lemma pbd_index1_points_imply_unique_block: \n  assumes \"b1 \\<in># \\<B>\" and \"b2 \\<in># \\<B>\" and \"b1 \\<noteq> b2\"\n  assumes \"x \\<noteq> y\" and \"{x, y} \\<subseteq> b1\" and \"x \\<in> b2\" \n  shows \"y \\<notin> b2\"", "lemma strong_delete_point_groups_index_zero: \n  assumes \"G \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\"\n  assumes \"xa \\<in> G\" and \"y \\<in> G\" and \"xa \\<noteq> y\"\n  shows \"(str_del_point_blocks x) index {xa, y} = 0\"", "lemma strong_delete_point_groups_index_one: \n  assumes \"G1 \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\"\n  assumes \"G2 \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\"\n  assumes \"G1 \\<noteq> G2\" and \"xa \\<in> G1\" and \"y \\<in> G2\"\n  shows  \"(str_del_point_blocks x) index {xa, y} = 1\"", "lemma blocks_with_x_partition: \n  assumes \"x \\<in> \\<V>\"\n  shows \"partition_on (\\<V> - {x}) {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\"", "lemma KGDD_by_deleting_point:\n  assumes \"x \\<in> \\<V>\"\n  assumes \"\\<B> rep x < \\<b>\"\n  assumes \"\\<B> rep x > 1\" \n  shows \"K_GDD (del_point x) (str_del_point_blocks x) \\<K> { b - {x} | b . b \\<in># \\<B> \\<and> x \\<in> b}\"", "lemma card_singletons_eq: \"card {{a} | a . a \\<in> A} = card A\"", "lemma KGDD_from_PBD: \"K_GDD \\<V> \\<B> \\<K> {{x} | x . x \\<in> \\<V>}\"", "lemma kGDD_from_bibd:\n  assumes \"\\<Lambda> = 1\"\n  assumes \"x \\<in> \\<V>\"\n  shows \"k_GDD (del_point x) (str_del_point_blocks x) \\<k> { b - {x} | b . b \\<in># \\<B> \\<and> x \\<in> b}\""], "translations": [["", "lemma groups_not_empty: \"\\<G> \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<G> \\<noteq> {}", "using groups_size"], ["proof (prove)\nusing this:\n  1 < card \\<G>\n\ngoal (1 subgoal):\n 1. \\<G> \\<noteq> {}", "by auto"], ["", "lemma num_groups_lt_points: \"card \\<G> \\<le> \\<v>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int (card \\<G>) \\<le> \\<v>", "by (simp add: partition_on_le_set_elements finite_sets group_partitions)"], ["", "lemma groups_disjoint: \"disjoint \\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disjoint \\<G>", "using group_partitions partition_onD2"], ["proof (prove)\nusing this:\n  partition_on \\<V> \\<G>\n  partition_on ?A ?P \\<Longrightarrow> disjoint ?P\n\ngoal (1 subgoal):\n 1. disjoint \\<G>", "by auto"], ["", "lemma groups_disjoint_pairwise: \"G1 \\<in> \\<G> \\<Longrightarrow> G2 \\<in> \\<G> \\<Longrightarrow> G1 \\<noteq> G2 \\<Longrightarrow> disjnt G1 G2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G1 \\<in> \\<G>; G2 \\<in> \\<G>; G1 \\<noteq> G2\\<rbrakk>\n    \\<Longrightarrow> disjnt G1 G2", "using group_partitions partition_onD2 pairwiseD"], ["proof (prove)\nusing this:\n  partition_on \\<V> \\<G>\n  partition_on ?A ?P \\<Longrightarrow> disjoint ?P\n  \\<lbrakk>pairwise ?R ?S; ?x \\<in> ?S; ?y \\<in> ?S; ?x \\<noteq> ?y\\<rbrakk>\n  \\<Longrightarrow> ?R ?x ?y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>G1 \\<in> \\<G>; G2 \\<in> \\<G>; G1 \\<noteq> G2\\<rbrakk>\n    \\<Longrightarrow> disjnt G1 G2", "by fastforce"], ["", "lemma point_in_one_group: \"x \\<in> G1 \\<Longrightarrow> G1 \\<in> \\<G> \\<Longrightarrow> G2 \\<in> \\<G> \\<Longrightarrow> G1 \\<noteq> G2 \\<Longrightarrow> x \\<notin> G2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> G1; G1 \\<in> \\<G>; G2 \\<in> \\<G>;\n     G1 \\<noteq> G2\\<rbrakk>\n    \\<Longrightarrow> x \\<notin> G2", "using groups_disjoint_pairwise"], ["proof (prove)\nusing this:\n  \\<lbrakk>?G1.0 \\<in> \\<G>; ?G2.0 \\<in> \\<G>; ?G1.0 \\<noteq> ?G2.0\\<rbrakk>\n  \\<Longrightarrow> disjnt ?G1.0 ?G2.0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> G1; G1 \\<in> \\<G>; G2 \\<in> \\<G>;\n     G1 \\<noteq> G2\\<rbrakk>\n    \\<Longrightarrow> x \\<notin> G2", "by (simp add: disjnt_iff)"], ["", "lemma point_has_unique_group: \"x \\<in> \\<V> \\<Longrightarrow> \\<exists>!G. x \\<in> G \\<and> G \\<in> \\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> \\<V> \\<Longrightarrow>\n    \\<exists>!G. x \\<in> G \\<and> G \\<in> \\<G>", "using partition_on_partition_on_unique group_partitions"], ["proof (prove)\nusing this:\n  \\<lbrakk>partition_on ?A ?P; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> \\<exists>!X. ?x \\<in> X \\<and> X \\<in> ?P\n  partition_on \\<V> \\<G>\n\ngoal (1 subgoal):\n 1. x \\<in> \\<V> \\<Longrightarrow>\n    \\<exists>!G. x \\<in> G \\<and> G \\<in> \\<G>", "by fastforce"], ["", "lemma rep_number_point_group_one: \n  assumes \"x \\<in> \\<V>\"\n  shows  \"card {g \\<in> \\<G> . x \\<in> g} = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {g \\<in> \\<G>. x \\<in> g} = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {g \\<in> \\<G>. x \\<in> g} = 1", "obtain g' where \"g' \\<in> \\<G>\" and \"x \\<in> g'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g'.\n        \\<lbrakk>g' \\<in> \\<G>; x \\<in> g'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms point_has_unique_group"], ["proof (prove)\nusing this:\n  x \\<in> \\<V>\n  ?x \\<in> \\<V> \\<Longrightarrow>\n  \\<exists>!G. ?x \\<in> G \\<and> G \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. (\\<And>g'.\n        \\<lbrakk>g' \\<in> \\<G>; x \\<in> g'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  g' \\<in> \\<G>\n  x \\<in> g'\n\ngoal (1 subgoal):\n 1. card {g \\<in> \\<G>. x \\<in> g} = 1", "then"], ["proof (chain)\npicking this:\n  g' \\<in> \\<G>\n  x \\<in> g'", "have \"{g \\<in> \\<G> . x \\<in> g} = {g'}\""], ["proof (prove)\nusing this:\n  g' \\<in> \\<G>\n  x \\<in> g'\n\ngoal (1 subgoal):\n 1. {g \\<in> \\<G>. x \\<in> g} = {g'}", "using  group_partitions partition_onD4"], ["proof (prove)\nusing this:\n  g' \\<in> \\<G>\n  x \\<in> g'\n  partition_on \\<V> \\<G>\n  \\<lbrakk>partition_on ?A ?P; ?p \\<in> ?P; ?q \\<in> ?P; ?x \\<in> ?p;\n   ?x \\<in> ?q\\<rbrakk>\n  \\<Longrightarrow> ?p = ?q\n\ngoal (1 subgoal):\n 1. {g \\<in> \\<G>. x \\<in> g} = {g'}", "by force"], ["proof (state)\nthis:\n  {g \\<in> \\<G>. x \\<in> g} = {g'}\n\ngoal (1 subgoal):\n 1. card {g \\<in> \\<G>. x \\<in> g} = 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  {g \\<in> \\<G>. x \\<in> g} = {g'}\n\ngoal (1 subgoal):\n 1. card {g \\<in> \\<G>. x \\<in> g} = 1", "by simp"], ["proof (state)\nthis:\n  card {g \\<in> \\<G>. x \\<in> g} = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma point_in_group: \"G \\<in> \\<G> \\<Longrightarrow> x \\<in> G \\<Longrightarrow> x \\<in> \\<V>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<in> \\<G>; x \\<in> G\\<rbrakk> \\<Longrightarrow> x \\<in> \\<V>", "using group_partitions partition_onD1"], ["proof (prove)\nusing this:\n  partition_on \\<V> \\<G>\n  partition_on ?A ?P \\<Longrightarrow> ?A = \\<Union> ?P\n\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<in> \\<G>; x \\<in> G\\<rbrakk> \\<Longrightarrow> x \\<in> \\<V>", "by auto"], ["", "lemma point_subset_in_group: \"G \\<in> \\<G> \\<Longrightarrow> ps \\<subseteq> G \\<Longrightarrow> ps \\<subseteq> \\<V>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<in> \\<G>; ps \\<subseteq> G\\<rbrakk>\n    \\<Longrightarrow> ps \\<subseteq> \\<V>", "using point_in_group"], ["proof (prove)\nusing this:\n  \\<lbrakk>?G \\<in> \\<G>; ?x \\<in> ?G\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> \\<V>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<in> \\<G>; ps \\<subseteq> G\\<rbrakk>\n    \\<Longrightarrow> ps \\<subseteq> \\<V>", "by auto"], ["", "lemma group_subset_point_subset: \"G \\<in> \\<G> \\<Longrightarrow> G' \\<subseteq> G \\<Longrightarrow> ps \\<subseteq> G' \\<Longrightarrow> ps \\<subseteq> \\<V>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<in> \\<G>; G' \\<subseteq> G; ps \\<subseteq> G'\\<rbrakk>\n    \\<Longrightarrow> ps \\<subseteq> \\<V>", "using point_subset_in_group"], ["proof (prove)\nusing this:\n  \\<lbrakk>?G \\<in> \\<G>; ?ps \\<subseteq> ?G\\<rbrakk>\n  \\<Longrightarrow> ?ps \\<subseteq> \\<V>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>G \\<in> \\<G>; G' \\<subseteq> G; ps \\<subseteq> G'\\<rbrakk>\n    \\<Longrightarrow> ps \\<subseteq> \\<V>", "by auto"], ["", "lemma groups_finite: \"finite \\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite \\<G>", "using finite_elements finite_sets group_partitions"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; partition_on ?A ?P\\<rbrakk>\n  \\<Longrightarrow> finite ?P\n  finite \\<V>\n  partition_on \\<V> \\<G>\n\ngoal (1 subgoal):\n 1. finite \\<G>", "by auto"], ["", "lemma group_elements_finite: \"G \\<in> \\<G> \\<Longrightarrow> finite G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<in> \\<G> \\<Longrightarrow> finite G", "using groups_finite finite_sets group_partitions"], ["proof (prove)\nusing this:\n  finite \\<G>\n  finite \\<V>\n  partition_on \\<V> \\<G>\n\ngoal (1 subgoal):\n 1. G \\<in> \\<G> \\<Longrightarrow> finite G", "by (meson finite_subset point_in_group subset_iff)"], ["", "lemma v_equals_sum_group_sizes: \"\\<v> = (\\<Sum>G \\<in> \\<G>. card G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<v> = int (sum card \\<G>)", "using group_partitions groups_disjoint partition_onD1 card_Union_disjoint group_elements_finite"], ["proof (prove)\nusing this:\n  partition_on \\<V> \\<G>\n  disjoint \\<G>\n  partition_on ?A ?P \\<Longrightarrow> ?A = \\<Union> ?P\n  \\<lbrakk>disjoint ?C;\n   \\<And>A. A \\<in> ?C \\<Longrightarrow> finite A\\<rbrakk>\n  \\<Longrightarrow> card (\\<Union> ?C) = sum card ?C\n  ?G \\<in> \\<G> \\<Longrightarrow> finite ?G\n\ngoal (1 subgoal):\n 1. \\<v> = int (sum card \\<G>)", "by fastforce"], ["", "lemma gdd_min_v: \"\\<v> \\<ge> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<le> \\<v>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 \\<le> \\<v>", "have assm: \"card \\<G> \\<ge> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<le> card \\<G>", "using groups_size"], ["proof (prove)\nusing this:\n  1 < card \\<G>\n\ngoal (1 subgoal):\n 1. 2 \\<le> card \\<G>", "by simp"], ["proof (state)\nthis:\n  2 \\<le> card \\<G>\n\ngoal (1 subgoal):\n 1. 2 \\<le> \\<v>", "then"], ["proof (chain)\npicking this:\n  2 \\<le> card \\<G>", "have \"\\<And> G . G \\<in> \\<G> \\<Longrightarrow> G \\<noteq> {}\""], ["proof (prove)\nusing this:\n  2 \\<le> card \\<G>\n\ngoal (1 subgoal):\n 1. \\<And>G. G \\<in> \\<G> \\<Longrightarrow> G \\<noteq> {}", "using partition_onD3 group_partitions"], ["proof (prove)\nusing this:\n  2 \\<le> card \\<G>\n  partition_on ?A ?P \\<Longrightarrow> {} \\<notin> ?P\n  partition_on \\<V> \\<G>\n\ngoal (1 subgoal):\n 1. \\<And>G. G \\<in> \\<G> \\<Longrightarrow> G \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  ?G \\<in> \\<G> \\<Longrightarrow> ?G \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 2 \\<le> \\<v>", "then"], ["proof (chain)\npicking this:\n  ?G \\<in> \\<G> \\<Longrightarrow> ?G \\<noteq> {}", "have \"\\<And> G . G \\<in> \\<G> \\<Longrightarrow> card G \\<ge> 1\""], ["proof (prove)\nusing this:\n  ?G \\<in> \\<G> \\<Longrightarrow> ?G \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>G. G \\<in> \\<G> \\<Longrightarrow> 1 \\<le> card G", "using group_elements_finite card_0_eq"], ["proof (prove)\nusing this:\n  ?G \\<in> \\<G> \\<Longrightarrow> ?G \\<noteq> {}\n  ?G \\<in> \\<G> \\<Longrightarrow> finite ?G\n  finite ?A \\<Longrightarrow> (card ?A = 0) = (?A = {})\n\ngoal (1 subgoal):\n 1. \\<And>G. G \\<in> \\<G> \\<Longrightarrow> 1 \\<le> card G", "by fastforce"], ["proof (state)\nthis:\n  ?G \\<in> \\<G> \\<Longrightarrow> 1 \\<le> card ?G\n\ngoal (1 subgoal):\n 1. 2 \\<le> \\<v>", "then"], ["proof (chain)\npicking this:\n  ?G \\<in> \\<G> \\<Longrightarrow> 1 \\<le> card ?G", "have \" (\\<Sum>G \\<in> \\<G>. card G) \\<ge> 2\""], ["proof (prove)\nusing this:\n  ?G \\<in> \\<G> \\<Longrightarrow> 1 \\<le> card ?G\n\ngoal (1 subgoal):\n 1. 2 \\<le> sum card \\<G>", "using assm"], ["proof (prove)\nusing this:\n  ?G \\<in> \\<G> \\<Longrightarrow> 1 \\<le> card ?G\n  2 \\<le> card \\<G>\n\ngoal (1 subgoal):\n 1. 2 \\<le> sum card \\<G>", "using sum_mono"], ["proof (prove)\nusing this:\n  ?G \\<in> \\<G> \\<Longrightarrow> 1 \\<le> card ?G\n  2 \\<le> card \\<G>\n  (\\<And>i. i \\<in> ?K \\<Longrightarrow> ?f i \\<le> ?g i) \\<Longrightarrow>\n  sum ?f ?K \\<le> sum ?g ?K\n\ngoal (1 subgoal):\n 1. 2 \\<le> sum card \\<G>", "by force"], ["proof (state)\nthis:\n  2 \\<le> sum card \\<G>\n\ngoal (1 subgoal):\n 1. 2 \\<le> \\<v>", "thus ?thesis"], ["proof (prove)\nusing this:\n  2 \\<le> sum card \\<G>\n\ngoal (1 subgoal):\n 1. 2 \\<le> \\<v>", "using v_equals_sum_group_sizes"], ["proof (prove)\nusing this:\n  2 \\<le> sum card \\<G>\n  \\<v> = int (sum card \\<G>)\n\ngoal (1 subgoal):\n 1. 2 \\<le> \\<v>", "by linarith"], ["proof (state)\nthis:\n  2 \\<le> \\<v>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma min_group_size: \"G \\<in> \\<G> \\<Longrightarrow> card G \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<in> \\<G> \\<Longrightarrow> 1 \\<le> card G", "using partition_onD3 group_partitions"], ["proof (prove)\nusing this:\n  partition_on ?A ?P \\<Longrightarrow> {} \\<notin> ?P\n  partition_on \\<V> \\<G>\n\ngoal (1 subgoal):\n 1. G \\<in> \\<G> \\<Longrightarrow> 1 \\<le> card G", "using group_elements_finite not_le_imp_less"], ["proof (prove)\nusing this:\n  partition_on ?A ?P \\<Longrightarrow> {} \\<notin> ?P\n  partition_on \\<V> \\<G>\n  ?G \\<in> \\<G> \\<Longrightarrow> finite ?G\n  \\<not> ?y \\<le> ?x \\<Longrightarrow> ?x < ?y\n\ngoal (1 subgoal):\n 1. G \\<in> \\<G> \\<Longrightarrow> 1 \\<le> card G", "by fastforce"], ["", "lemma group_size_lt_v: \n  assumes \"G \\<in> \\<G>\"\n  shows \"card G < \\<v>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int (card G) < \\<v>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. int (card G) < \\<v>", "have \"(\\<Sum>G' \\<in> \\<G>. card G') = \\<v>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int (sum card \\<G>) = \\<v>", "using gdd_min_v v_equals_sum_group_sizes"], ["proof (prove)\nusing this:\n  2 \\<le> \\<v>\n  \\<v> = int (sum card \\<G>)\n\ngoal (1 subgoal):\n 1. int (sum card \\<G>) = \\<v>", "by linarith"], ["proof (state)\nthis:\n  int (sum card \\<G>) = \\<v>\n\ngoal (1 subgoal):\n 1. int (card G) < \\<v>", "then"], ["proof (chain)\npicking this:\n  int (sum card \\<G>) = \\<v>", "have split_sum: \"card G + (\\<Sum>G' \\<in> (\\<G> - {G}). card G') = \\<v>\""], ["proof (prove)\nusing this:\n  int (sum card \\<G>) = \\<v>\n\ngoal (1 subgoal):\n 1. int (card G + sum card (\\<G> - {G})) = \\<v>", "using assms sum.remove"], ["proof (prove)\nusing this:\n  int (sum card \\<G>) = \\<v>\n  G \\<in> \\<G>\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> sum ?g ?A = ?g ?x + sum ?g (?A - {?x})\n\ngoal (1 subgoal):\n 1. int (card G + sum card (\\<G> - {G})) = \\<v>", "by (metis groups_finite v_equals_sum_group_sizes)"], ["proof (state)\nthis:\n  int (card G + sum card (\\<G> - {G})) = \\<v>\n\ngoal (1 subgoal):\n 1. int (card G) < \\<v>", "have \"card (\\<G> - {G}) \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> card (\\<G> - {G})", "using groups_size"], ["proof (prove)\nusing this:\n  1 < card \\<G>\n\ngoal (1 subgoal):\n 1. 1 \\<le> card (\\<G> - {G})", "by (simp add: assms groups_finite)"], ["proof (state)\nthis:\n  1 \\<le> card (\\<G> - {G})\n\ngoal (1 subgoal):\n 1. int (card G) < \\<v>", "then"], ["proof (chain)\npicking this:\n  1 \\<le> card (\\<G> - {G})", "obtain G' where gin: \"G' \\<in> (\\<G> - {G})\""], ["proof (prove)\nusing this:\n  1 \\<le> card (\\<G> - {G})\n\ngoal (1 subgoal):\n 1. (\\<And>G'.\n        G' \\<in> \\<G> - {G} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson elem_exists_non_empty_set less_le_trans less_numeral_extra(1))"], ["proof (state)\nthis:\n  G' \\<in> \\<G> - {G}\n\ngoal (1 subgoal):\n 1. int (card G) < \\<v>", "then"], ["proof (chain)\npicking this:\n  G' \\<in> \\<G> - {G}", "have \"card G' \\<ge> 1\""], ["proof (prove)\nusing this:\n  G' \\<in> \\<G> - {G}\n\ngoal (1 subgoal):\n 1. 1 \\<le> card G'", "using min_group_size"], ["proof (prove)\nusing this:\n  G' \\<in> \\<G> - {G}\n  ?G \\<in> \\<G> \\<Longrightarrow> 1 \\<le> card ?G\n\ngoal (1 subgoal):\n 1. 1 \\<le> card G'", "by auto"], ["proof (state)\nthis:\n  1 \\<le> card G'\n\ngoal (1 subgoal):\n 1. int (card G) < \\<v>", "then"], ["proof (chain)\npicking this:\n  1 \\<le> card G'", "have \"(\\<Sum>G' \\<in> (\\<G> - {G}). card G') \\<ge> 1\""], ["proof (prove)\nusing this:\n  1 \\<le> card G'\n\ngoal (1 subgoal):\n 1. 1 \\<le> sum card (\\<G> - {G})", "by (metis gin finite_Diff groups_finite leI less_one sum_eq_0_iff)"], ["proof (state)\nthis:\n  1 \\<le> sum card (\\<G> - {G})\n\ngoal (1 subgoal):\n 1. int (card G) < \\<v>", "thus ?thesis"], ["proof (prove)\nusing this:\n  1 \\<le> sum card (\\<G> - {G})\n\ngoal (1 subgoal):\n 1. int (card G) < \\<v>", "using split_sum"], ["proof (prove)\nusing this:\n  1 \\<le> sum card (\\<G> - {G})\n  int (card G + sum card (\\<G> - {G})) = \\<v>\n\ngoal (1 subgoal):\n 1. int (card G) < \\<v>", "by linarith"], ["proof (state)\nthis:\n  int (card G) < \\<v>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Group Type\\<close>"], ["", "text \\<open>GDD's have a \"type\", which is defined by a sequence of group sizes $g_i$, and the number \nof groups of that size $a_i$: $g_1^{a_1}g2^{a_2}...g_n^{a_n}$\\<close>"], ["", "definition group_sizes :: \"nat set\" where\n\"group_sizes \\<equiv> {card G | G . G \\<in> \\<G>}\""], ["", "definition groups_of_size :: \"nat \\<Rightarrow> nat\" where\n\"groups_of_size g \\<equiv> card { G \\<in> \\<G> . card G = g }\""], ["", "definition group_type :: \"(nat \\<times> nat) set\" where\n\"group_type \\<equiv> {(g, groups_of_size g) | g . g \\<in> group_sizes }\""], ["", "lemma group_sizes_min: \"x \\<in> group_sizes \\<Longrightarrow> x \\<ge> 1 \""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> group_sizes \\<Longrightarrow> 1 \\<le> x", "unfolding group_sizes_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {card G |G. G \\<in> \\<G>} \\<Longrightarrow> 1 \\<le> x", "using min_group_size group_size_lt_v"], ["proof (prove)\nusing this:\n  ?G \\<in> \\<G> \\<Longrightarrow> 1 \\<le> card ?G\n  ?G \\<in> \\<G> \\<Longrightarrow> int (card ?G) < \\<v>\n\ngoal (1 subgoal):\n 1. x \\<in> {card G |G. G \\<in> \\<G>} \\<Longrightarrow> 1 \\<le> x", "by auto"], ["", "lemma group_sizes_max: \"x \\<in> group_sizes \\<Longrightarrow> x < \\<v> \""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> group_sizes \\<Longrightarrow> int x < \\<v>", "unfolding group_sizes_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {card G |G. G \\<in> \\<G>} \\<Longrightarrow> int x < \\<v>", "using min_group_size group_size_lt_v"], ["proof (prove)\nusing this:\n  ?G \\<in> \\<G> \\<Longrightarrow> 1 \\<le> card ?G\n  ?G \\<in> \\<G> \\<Longrightarrow> int (card ?G) < \\<v>\n\ngoal (1 subgoal):\n 1. x \\<in> {card G |G. G \\<in> \\<G>} \\<Longrightarrow> int x < \\<v>", "by auto"], ["", "lemma group_size_implies_group_existance: \"x \\<in> group_sizes \\<Longrightarrow> \\<exists>G. G \\<in> \\<G> \\<and> card G = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> group_sizes \\<Longrightarrow>\n    \\<exists>G. G \\<in> \\<G> \\<and> card G = x", "unfolding group_sizes_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {card G |G. G \\<in> \\<G>} \\<Longrightarrow>\n    \\<exists>G. G \\<in> \\<G> \\<and> card G = x", "by auto"], ["", "lemma groups_of_size_zero: \"groups_of_size 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. groups_of_size 0 = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. groups_of_size 0 = 0", "have empty: \"{G \\<in> \\<G> . card G = 0} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {G \\<in> \\<G>. card G = 0} = {}", "using min_group_size"], ["proof (prove)\nusing this:\n  ?G \\<in> \\<G> \\<Longrightarrow> 1 \\<le> card ?G\n\ngoal (1 subgoal):\n 1. {G \\<in> \\<G>. card G = 0} = {}", "by fastforce"], ["proof (state)\nthis:\n  {G \\<in> \\<G>. card G = 0} = {}\n\ngoal (1 subgoal):\n 1. groups_of_size 0 = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  {G \\<in> \\<G>. card G = 0} = {}\n\ngoal (1 subgoal):\n 1. groups_of_size 0 = 0", "unfolding groups_of_size_def"], ["proof (prove)\nusing this:\n  {G \\<in> \\<G>. card G = 0} = {}\n\ngoal (1 subgoal):\n 1. card {G \\<in> \\<G>. card G = 0} = 0", "by (simp add: empty)"], ["proof (state)\nthis:\n  groups_of_size 0 = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma groups_of_size_max: \n  assumes \"g \\<ge> \\<v>\"\n  shows \"groups_of_size g = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. groups_of_size g = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. groups_of_size g = 0", "have \"{G \\<in> \\<G> . card G = g} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {G \\<in> \\<G>. card G = g} = {}", "using group_size_lt_v assms"], ["proof (prove)\nusing this:\n  ?G \\<in> \\<G> \\<Longrightarrow> int (card ?G) < \\<v>\n  \\<v> \\<le> int g\n\ngoal (1 subgoal):\n 1. {G \\<in> \\<G>. card G = g} = {}", "by fastforce"], ["proof (state)\nthis:\n  {G \\<in> \\<G>. card G = g} = {}\n\ngoal (1 subgoal):\n 1. groups_of_size g = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  {G \\<in> \\<G>. card G = g} = {}\n\ngoal (1 subgoal):\n 1. groups_of_size g = 0", "unfolding groups_of_size_def"], ["proof (prove)\nusing this:\n  {G \\<in> \\<G>. card G = g} = {}\n\ngoal (1 subgoal):\n 1. card {G \\<in> \\<G>. card G = g} = 0", "by (simp add: \\<open>{G \\<in> \\<G>. card G = g} = {}\\<close>)"], ["proof (state)\nthis:\n  groups_of_size g = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma group_type_contained_sizes: \"(g, a) \\<in> group_type \\<Longrightarrow> g \\<in> group_sizes\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g, a) \\<in> group_type \\<Longrightarrow> g \\<in> group_sizes", "unfolding group_type_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (g, a)\n    \\<in> {(g, groups_of_size g) |g. g \\<in> group_sizes} \\<Longrightarrow>\n    g \\<in> group_sizes", "by simp"], ["", "lemma group_type_contained_count: \"(g, a) \\<in> group_type \\<Longrightarrow> card {G \\<in> \\<G> . card G = g} = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g, a) \\<in> group_type \\<Longrightarrow>\n    card {G \\<in> \\<G>. card G = g} = a", "unfolding group_type_def groups_of_size_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (g, a)\n    \\<in> {(g, card {G \\<in> \\<G>. card G = g}) |g.\n           g \\<in> group_sizes} \\<Longrightarrow>\n    card {G \\<in> \\<G>. card G = g} = a", "by simp"], ["", "lemma group_card_in_sizes: \"g \\<in> \\<G> \\<Longrightarrow> card g \\<in> group_sizes\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> \\<G> \\<Longrightarrow> card g \\<in> group_sizes", "unfolding group_sizes_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> \\<G> \\<Longrightarrow> card g \\<in> {card G |G. G \\<in> \\<G>}", "by auto"], ["", "lemma group_card_non_zero_groups_of_size_min: \n  assumes \"g \\<in> \\<G>\"\n  assumes \"card g = a\"\n  shows \"groups_of_size a \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> groups_of_size a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 \\<le> groups_of_size a", "have \"g \\<in> {G \\<in> \\<G> . card G = a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> {G \\<in> \\<G>. card G = a}", "using assms"], ["proof (prove)\nusing this:\n  g \\<in> \\<G>\n  card g = a\n\ngoal (1 subgoal):\n 1. g \\<in> {G \\<in> \\<G>. card G = a}", "by simp"], ["proof (state)\nthis:\n  g \\<in> {G \\<in> \\<G>. card G = a}\n\ngoal (1 subgoal):\n 1. 1 \\<le> groups_of_size a", "then"], ["proof (chain)\npicking this:\n  g \\<in> {G \\<in> \\<G>. card G = a}", "have \"{G \\<in> \\<G> . card G = a} \\<noteq> {}\""], ["proof (prove)\nusing this:\n  g \\<in> {G \\<in> \\<G>. card G = a}\n\ngoal (1 subgoal):\n 1. {G \\<in> \\<G>. card G = a} \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  {G \\<in> \\<G>. card G = a} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. 1 \\<le> groups_of_size a", "then"], ["proof (chain)\npicking this:\n  {G \\<in> \\<G>. card G = a} \\<noteq> {}", "have \"card {G \\<in> \\<G> . card G = a} \\<noteq> 0\""], ["proof (prove)\nusing this:\n  {G \\<in> \\<G>. card G = a} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. card {G \\<in> \\<G>. card G = a} \\<noteq> 0", "by (simp add: groups_finite)"], ["proof (state)\nthis:\n  card {G \\<in> \\<G>. card G = a} \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 \\<le> groups_of_size a", "thus ?thesis"], ["proof (prove)\nusing this:\n  card {G \\<in> \\<G>. card G = a} \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 \\<le> groups_of_size a", "unfolding groups_of_size_def"], ["proof (prove)\nusing this:\n  card {G \\<in> \\<G>. card G = a} \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 \\<le> card {G \\<in> \\<G>. card G = a}", "by simp"], ["proof (state)\nthis:\n  1 \\<le> groups_of_size a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma elem_in_group_sizes_min_of_size: \n  assumes \"a \\<in> group_sizes\"\n  shows \"groups_of_size a \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> groups_of_size a", "using assms group_card_non_zero_groups_of_size_min group_size_implies_group_existance"], ["proof (prove)\nusing this:\n  a \\<in> group_sizes\n  \\<lbrakk>?g \\<in> \\<G>; card ?g = ?a\\<rbrakk>\n  \\<Longrightarrow> 1 \\<le> groups_of_size ?a\n  ?x \\<in> group_sizes \\<Longrightarrow>\n  \\<exists>G. G \\<in> \\<G> \\<and> card G = ?x\n\ngoal (1 subgoal):\n 1. 1 \\<le> groups_of_size a", "by blast"], ["", "lemma group_card_non_zero_groups_of_size_max: \n  shows \"groups_of_size a \\<le> \\<v>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int (groups_of_size a) \\<le> \\<v>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. int (groups_of_size a) \\<le> \\<v>", "have \"{G \\<in> \\<G> . card G = a} \\<subseteq> \\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {G \\<in> \\<G>. card G = a} \\<subseteq> \\<G>", "by simp"], ["proof (state)\nthis:\n  {G \\<in> \\<G>. card G = a} \\<subseteq> \\<G>\n\ngoal (1 subgoal):\n 1. int (groups_of_size a) \\<le> \\<v>", "then"], ["proof (chain)\npicking this:\n  {G \\<in> \\<G>. card G = a} \\<subseteq> \\<G>", "have \"card {G \\<in> \\<G> . card G = a} \\<le> card \\<G>\""], ["proof (prove)\nusing this:\n  {G \\<in> \\<G>. card G = a} \\<subseteq> \\<G>\n\ngoal (1 subgoal):\n 1. card {G \\<in> \\<G>. card G = a} \\<le> card \\<G>", "by (simp add: card_mono groups_finite)"], ["proof (state)\nthis:\n  card {G \\<in> \\<G>. card G = a} \\<le> card \\<G>\n\ngoal (1 subgoal):\n 1. int (groups_of_size a) \\<le> \\<v>", "thus ?thesis"], ["proof (prove)\nusing this:\n  card {G \\<in> \\<G>. card G = a} \\<le> card \\<G>\n\ngoal (1 subgoal):\n 1. int (groups_of_size a) \\<le> \\<v>", "using groups_of_size_def num_groups_lt_points"], ["proof (prove)\nusing this:\n  card {G \\<in> \\<G>. card G = a} \\<le> card \\<G>\n  groups_of_size ?g \\<equiv> card {G \\<in> \\<G>. card G = ?g}\n  int (card \\<G>) \\<le> \\<v>\n\ngoal (1 subgoal):\n 1. int (groups_of_size a) \\<le> \\<v>", "by auto"], ["proof (state)\nthis:\n  int (groups_of_size a) \\<le> \\<v>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma group_card_in_type: \"g \\<in> \\<G> \\<Longrightarrow> \\<exists> x . (card g, x) \\<in> group_type \\<and> x \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> \\<G> \\<Longrightarrow>\n    \\<exists>x. (card g, x) \\<in> group_type \\<and> 1 \\<le> x", "unfolding group_type_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> \\<G> \\<Longrightarrow>\n    \\<exists>x.\n       (card g, x)\n       \\<in> {(g, groups_of_size g) |g. g \\<in> group_sizes} \\<and>\n       1 \\<le> x", "using group_card_non_zero_groups_of_size_min"], ["proof (prove)\nusing this:\n  \\<lbrakk>?g \\<in> \\<G>; card ?g = ?a\\<rbrakk>\n  \\<Longrightarrow> 1 \\<le> groups_of_size ?a\n\ngoal (1 subgoal):\n 1. g \\<in> \\<G> \\<Longrightarrow>\n    \\<exists>x.\n       (card g, x)\n       \\<in> {(g, groups_of_size g) |g. g \\<in> group_sizes} \\<and>\n       1 \\<le> x", "by (simp add: group_card_in_sizes)"], ["", "lemma partition_groups_on_size: \"partition_on \\<G> {{ G \\<in> \\<G> . card G = g } | g . g \\<in> group_sizes}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partition_on \\<G> {{G \\<in> \\<G>. card G = g} |g. g \\<in> group_sizes}", "proof (intro partition_onI, auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>g.\n       \\<lbrakk>g \\<in> group_sizes;\n        \\<forall>x.\n           x \\<in> \\<G> \\<longrightarrow> card x \\<noteq> g\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       x \\<in> \\<G> \\<Longrightarrow>\n       \\<exists>xa.\n          (\\<exists>g.\n              xa = {G \\<in> \\<G>. card G = g} \\<and>\n              g \\<in> group_sizes) \\<and>\n          x \\<in> xa", "fix g"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>g.\n       \\<lbrakk>g \\<in> group_sizes;\n        \\<forall>x.\n           x \\<in> \\<G> \\<longrightarrow> card x \\<noteq> g\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       x \\<in> \\<G> \\<Longrightarrow>\n       \\<exists>xa.\n          (\\<exists>g.\n              xa = {G \\<in> \\<G>. card G = g} \\<and>\n              g \\<in> group_sizes) \\<and>\n          x \\<in> xa", "assume a1: \"g \\<in> group_sizes\""], ["proof (state)\nthis:\n  g \\<in> group_sizes\n\ngoal (2 subgoals):\n 1. \\<And>g.\n       \\<lbrakk>g \\<in> group_sizes;\n        \\<forall>x.\n           x \\<in> \\<G> \\<longrightarrow> card x \\<noteq> g\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       x \\<in> \\<G> \\<Longrightarrow>\n       \\<exists>xa.\n          (\\<exists>g.\n              xa = {G \\<in> \\<G>. card G = g} \\<and>\n              g \\<in> group_sizes) \\<and>\n          x \\<in> xa", "assume \" \\<forall>x. x \\<in> \\<G> \\<longrightarrow> card x \\<noteq> g\""], ["proof (state)\nthis:\n  \\<forall>x. x \\<in> \\<G> \\<longrightarrow> card x \\<noteq> g\n\ngoal (2 subgoals):\n 1. \\<And>g.\n       \\<lbrakk>g \\<in> group_sizes;\n        \\<forall>x.\n           x \\<in> \\<G> \\<longrightarrow> card x \\<noteq> g\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x.\n       x \\<in> \\<G> \\<Longrightarrow>\n       \\<exists>xa.\n          (\\<exists>g.\n              xa = {G \\<in> \\<G>. card G = g} \\<and>\n              g \\<in> group_sizes) \\<and>\n          x \\<in> xa", "then"], ["proof (chain)\npicking this:\n  \\<forall>x. x \\<in> \\<G> \\<longrightarrow> card x \\<noteq> g", "show False"], ["proof (prove)\nusing this:\n  \\<forall>x. x \\<in> \\<G> \\<longrightarrow> card x \\<noteq> g\n\ngoal (1 subgoal):\n 1. False", "using a1 group_size_implies_group_existance"], ["proof (prove)\nusing this:\n  \\<forall>x. x \\<in> \\<G> \\<longrightarrow> card x \\<noteq> g\n  g \\<in> group_sizes\n  ?x \\<in> group_sizes \\<Longrightarrow>\n  \\<exists>G. G \\<in> \\<G> \\<and> card G = ?x\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<G> \\<Longrightarrow>\n       \\<exists>xa.\n          (\\<exists>g.\n              xa = {G \\<in> \\<G>. card G = g} \\<and>\n              g \\<in> group_sizes) \\<and>\n          x \\<in> xa", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<G> \\<Longrightarrow>\n       \\<exists>xa.\n          (\\<exists>g.\n              xa = {G \\<in> \\<G>. card G = g} \\<and>\n              g \\<in> group_sizes) \\<and>\n          x \\<in> xa", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<G> \\<Longrightarrow>\n       \\<exists>xa.\n          (\\<exists>g.\n              xa = {G \\<in> \\<G>. card G = g} \\<and>\n              g \\<in> group_sizes) \\<and>\n          x \\<in> xa", "assume \"x \\<in> \\<G>\""], ["proof (state)\nthis:\n  x \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<G> \\<Longrightarrow>\n       \\<exists>xa.\n          (\\<exists>g.\n              xa = {G \\<in> \\<G>. card G = g} \\<and>\n              g \\<in> group_sizes) \\<and>\n          x \\<in> xa", "then"], ["proof (chain)\npicking this:\n  x \\<in> \\<G>", "show \"\\<exists>xa. (\\<exists>g. xa = {G \\<in> \\<G>. card G = g} \\<and> g \\<in> group_sizes) \\<and> x \\<in> xa\""], ["proof (prove)\nusing this:\n  x \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. \\<exists>xa.\n       (\\<exists>g.\n           xa = {G \\<in> \\<G>. card G = g} \\<and>\n           g \\<in> group_sizes) \\<and>\n       x \\<in> xa", "using  group_card_in_sizes"], ["proof (prove)\nusing this:\n  x \\<in> \\<G>\n  ?g \\<in> \\<G> \\<Longrightarrow> card ?g \\<in> group_sizes\n\ngoal (1 subgoal):\n 1. \\<exists>xa.\n       (\\<exists>g.\n           xa = {G \\<in> \\<G>. card G = g} \\<and>\n           g \\<in> group_sizes) \\<and>\n       x \\<in> xa", "by auto"], ["proof (state)\nthis:\n  \\<exists>xa.\n     (\\<exists>g.\n         xa = {G \\<in> \\<G>. card G = g} \\<and> g \\<in> group_sizes) \\<and>\n     x \\<in> xa\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma group_size_partition_covers_points: \"\\<Union>(\\<Union>{{ G \\<in> \\<G> . card G = g } | g . g \\<in> group_sizes}) = \\<V>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union>\n     (\\<Union> {{G \\<in> \\<G>. card G = g} |g. g \\<in> group_sizes}) =\n    \\<V>", "by (metis (no_types, lifting) group_partitions partition_groups_on_size partition_onD1)"], ["", "lemma groups_of_size_alt_def_count: \"groups_of_size g = count {# card G . G \\<in># mset_set \\<G> #} g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. groups_of_size g = count (image_mset card (mset_set \\<G>)) g", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. groups_of_size g = count (image_mset card (mset_set \\<G>)) g", "have a: \"groups_of_size g =  card { G \\<in> \\<G> . card G = g }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. groups_of_size g = card {G \\<in> \\<G>. card G = g}", "unfolding groups_of_size_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. card {G \\<in> \\<G>. card G = g} = card {G \\<in> \\<G>. card G = g}", "by simp"], ["proof (state)\nthis:\n  groups_of_size g = card {G \\<in> \\<G>. card G = g}\n\ngoal (1 subgoal):\n 1. groups_of_size g = count (image_mset card (mset_set \\<G>)) g", "then"], ["proof (chain)\npicking this:\n  groups_of_size g = card {G \\<in> \\<G>. card G = g}", "have \"groups_of_size g =  size {# G \\<in># (mset_set \\<G>) . card G = g #}\""], ["proof (prove)\nusing this:\n  groups_of_size g = card {G \\<in> \\<G>. card G = g}\n\ngoal (1 subgoal):\n 1. groups_of_size g = size {#G \\<in># mset_set \\<G>. card G = g#}", "using groups_finite"], ["proof (prove)\nusing this:\n  groups_of_size g = card {G \\<in> \\<G>. card G = g}\n  finite \\<G>\n\ngoal (1 subgoal):\n 1. groups_of_size g = size {#G \\<in># mset_set \\<G>. card G = g#}", "by auto"], ["proof (state)\nthis:\n  groups_of_size g = size {#G \\<in># mset_set \\<G>. card G = g#}\n\ngoal (1 subgoal):\n 1. groups_of_size g = count (image_mset card (mset_set \\<G>)) g", "then"], ["proof (chain)\npicking this:\n  groups_of_size g = size {#G \\<in># mset_set \\<G>. card G = g#}", "have size_repr: \"groups_of_size g =  size {# x \\<in># {# card G . G \\<in># mset_set \\<G> #} . x = g #}\""], ["proof (prove)\nusing this:\n  groups_of_size g = size {#G \\<in># mset_set \\<G>. card G = g#}\n\ngoal (1 subgoal):\n 1. groups_of_size g =\n    size {#x \\<in># image_mset card (mset_set \\<G>). x = g#}", "using groups_finite"], ["proof (prove)\nusing this:\n  groups_of_size g = size {#G \\<in># mset_set \\<G>. card G = g#}\n  finite \\<G>\n\ngoal (1 subgoal):\n 1. groups_of_size g =\n    size {#x \\<in># image_mset card (mset_set \\<G>). x = g#}", "by (simp add: filter_mset_image_mset)"], ["proof (state)\nthis:\n  groups_of_size g =\n  size {#x \\<in># image_mset card (mset_set \\<G>). x = g#}\n\ngoal (1 subgoal):\n 1. groups_of_size g = count (image_mset card (mset_set \\<G>)) g", "have \"group_sizes = set_mset ({# card G . G \\<in># mset_set \\<G> #})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. group_sizes = set_mset (image_mset card (mset_set \\<G>))", "using group_sizes_def groups_finite"], ["proof (prove)\nusing this:\n  group_sizes \\<equiv> {card G |G. G \\<in> \\<G>}\n  finite \\<G>\n\ngoal (1 subgoal):\n 1. group_sizes = set_mset (image_mset card (mset_set \\<G>))", "by auto"], ["proof (state)\nthis:\n  group_sizes = set_mset (image_mset card (mset_set \\<G>))\n\ngoal (1 subgoal):\n 1. groups_of_size g = count (image_mset card (mset_set \\<G>)) g", "thus ?thesis"], ["proof (prove)\nusing this:\n  group_sizes = set_mset (image_mset card (mset_set \\<G>))\n\ngoal (1 subgoal):\n 1. groups_of_size g = count (image_mset card (mset_set \\<G>)) g", "using size_repr"], ["proof (prove)\nusing this:\n  group_sizes = set_mset (image_mset card (mset_set \\<G>))\n  groups_of_size g =\n  size {#x \\<in># image_mset card (mset_set \\<G>). x = g#}\n\ngoal (1 subgoal):\n 1. groups_of_size g = count (image_mset card (mset_set \\<G>)) g", "by (simp add: count_size_set_repr)"], ["proof (state)\nthis:\n  groups_of_size g = count (image_mset card (mset_set \\<G>)) g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma v_sum_type_rep: \"\\<v> = (\\<Sum> g \\<in> group_sizes . g * (groups_of_size g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<v> = int (\\<Sum>g\\<in>group_sizes. g * groups_of_size g)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<v> = int (\\<Sum>g\\<in>group_sizes. g * groups_of_size g)", "have gs: \"set_mset {# card G . G \\<in># mset_set \\<G> #} = group_sizes\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_mset (image_mset card (mset_set \\<G>)) = group_sizes", "unfolding group_sizes_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_mset (image_mset card (mset_set \\<G>)) = {card G |G. G \\<in> \\<G>}", "using groups_finite"], ["proof (prove)\nusing this:\n  finite \\<G>\n\ngoal (1 subgoal):\n 1. set_mset (image_mset card (mset_set \\<G>)) = {card G |G. G \\<in> \\<G>}", "by auto"], ["proof (state)\nthis:\n  set_mset (image_mset card (mset_set \\<G>)) = group_sizes\n\ngoal (1 subgoal):\n 1. \\<v> = int (\\<Sum>g\\<in>group_sizes. g * groups_of_size g)", "have \"\\<v> = card (\\<Union>(\\<Union>{{ G \\<in> \\<G> . card G = g } | g . g \\<in> group_sizes}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<v> =\n    int (card\n          (\\<Union>\n            (\\<Union>\n              {{G \\<in> \\<G>. card G = g} |g. g \\<in> group_sizes})))", "using group_size_partition_covers_points"], ["proof (prove)\nusing this:\n  \\<Union> (\\<Union> {{G \\<in> \\<G>. card G = g} |g. g \\<in> group_sizes}) =\n  \\<V>\n\ngoal (1 subgoal):\n 1. \\<v> =\n    int (card\n          (\\<Union>\n            (\\<Union>\n              {{G \\<in> \\<G>. card G = g} |g. g \\<in> group_sizes})))", "by simp"], ["proof (state)\nthis:\n  \\<v> =\n  int (card\n        (\\<Union>\n          (\\<Union> {{G \\<in> \\<G>. card G = g} |g. g \\<in> group_sizes})))\n\ngoal (1 subgoal):\n 1. \\<v> = int (\\<Sum>g\\<in>group_sizes. g * groups_of_size g)", "have v1: \"\\<v> = (\\<Sum>x \\<in># {# card G . G \\<in># mset_set \\<G> #}. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<v> = int (\\<Sum>x\\<in>#image_mset card (mset_set \\<G>). x)", "by (simp add: sum_unfold_sum_mset v_equals_sum_group_sizes)"], ["proof (state)\nthis:\n  \\<v> = int (\\<Sum>x\\<in>#image_mset card (mset_set \\<G>). x)\n\ngoal (1 subgoal):\n 1. \\<v> = int (\\<Sum>g\\<in>group_sizes. g * groups_of_size g)", "then"], ["proof (chain)\npicking this:\n  \\<v> = int (\\<Sum>x\\<in>#image_mset card (mset_set \\<G>). x)", "have \"\\<v> = (\\<Sum>x \\<in> set_mset {# card G . G \\<in># mset_set \\<G> #} . x * (count {# card G . G \\<in># mset_set \\<G> #} x))\""], ["proof (prove)\nusing this:\n  \\<v> = int (\\<Sum>x\\<in>#image_mset card (mset_set \\<G>). x)\n\ngoal (1 subgoal):\n 1. \\<v> =\n    int (\\<Sum>x\\<in>set_mset (image_mset card (mset_set \\<G>)).\n           x * count (image_mset card (mset_set \\<G>)) x)", "using mset_set_size_card_count"], ["proof (prove)\nusing this:\n  \\<v> = int (\\<Sum>x\\<in>#image_mset card (mset_set \\<G>). x)\n  (\\<Sum>x\\<in>#?A. x) = (\\<Sum>x\\<in>set_mset ?A. x * count ?A x)\n\ngoal (1 subgoal):\n 1. \\<v> =\n    int (\\<Sum>x\\<in>set_mset (image_mset card (mset_set \\<G>)).\n           x * count (image_mset card (mset_set \\<G>)) x)", "by (simp add: v1)"], ["proof (state)\nthis:\n  \\<v> =\n  int (\\<Sum>x\\<in>set_mset (image_mset card (mset_set \\<G>)).\n         x * count (image_mset card (mset_set \\<G>)) x)\n\ngoal (1 subgoal):\n 1. \\<v> = int (\\<Sum>g\\<in>group_sizes. g * groups_of_size g)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<v> =\n  int (\\<Sum>x\\<in>set_mset (image_mset card (mset_set \\<G>)).\n         x * count (image_mset card (mset_set \\<G>)) x)\n\ngoal (1 subgoal):\n 1. \\<v> = int (\\<Sum>g\\<in>group_sizes. g * groups_of_size g)", "using gs groups_of_size_alt_def_count"], ["proof (prove)\nusing this:\n  \\<v> =\n  int (\\<Sum>x\\<in>set_mset (image_mset card (mset_set \\<G>)).\n         x * count (image_mset card (mset_set \\<G>)) x)\n  set_mset (image_mset card (mset_set \\<G>)) = group_sizes\n  groups_of_size ?g = count (image_mset card (mset_set \\<G>)) ?g\n\ngoal (1 subgoal):\n 1. \\<v> = int (\\<Sum>g\\<in>group_sizes. g * groups_of_size g)", "by auto"], ["proof (state)\nthis:\n  \\<v> = int (\\<Sum>g\\<in>group_sizes. g * groups_of_size g)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsubsection \\<open>Uniform Group designs\\<close>"], ["", "text \\<open>A group design requiring all groups are the same size\\<close>"], ["", "locale uniform_group_design = group_design + \n  fixes u_group_size :: nat (\"\\<m>\")\n  assumes uniform_groups: \"G \\<in> \\<G> \\<Longrightarrow> card G = \\<m>\"\n\nbegin"], ["", "lemma m_positive: \"\\<m> \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> \\<m>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 \\<le> \\<m>", "obtain G where \"G \\<in> \\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>G. G \\<in> \\<G> \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using groups_size elem_exists_non_empty_set gr_implies_not_zero"], ["proof (prove)\nusing this:\n  1 < card \\<G>\n  \\<lbrakk>0 < card ?A;\n   \\<And>x. x \\<in> ?A \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  ?m < ?n \\<Longrightarrow> ?n \\<noteq> (0::?'a)\n\ngoal (1 subgoal):\n 1. (\\<And>G. G \\<in> \\<G> \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  G \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. 1 \\<le> \\<m>", "thus ?thesis"], ["proof (prove)\nusing this:\n  G \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. 1 \\<le> \\<m>", "using uniform_groups min_group_size"], ["proof (prove)\nusing this:\n  G \\<in> \\<G>\n  ?G \\<in> \\<G> \\<Longrightarrow> card ?G = \\<m>\n  ?G \\<in> \\<G> \\<Longrightarrow> 1 \\<le> card ?G\n\ngoal (1 subgoal):\n 1. 1 \\<le> \\<m>", "by fastforce"], ["proof (state)\nthis:\n  1 \\<le> \\<m>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma uniform_groups_alt: \" \\<forall> G \\<in> \\<G> . card G = \\<m>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>G\\<in>\\<G>. card G = \\<m>", "using uniform_groups"], ["proof (prove)\nusing this:\n  ?G \\<in> \\<G> \\<Longrightarrow> card ?G = \\<m>\n\ngoal (1 subgoal):\n 1. \\<forall>G\\<in>\\<G>. card G = \\<m>", "by blast"], ["", "lemma uniform_groups_group_sizes: \"group_sizes = {\\<m>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. group_sizes = {\\<m>}", "using design_points_nempty group_card_in_sizes group_size_implies_group_existance \n    point_has_unique_group uniform_groups_alt"], ["proof (prove)\nusing this:\n  \\<V> \\<noteq> {}\n  ?g \\<in> \\<G> \\<Longrightarrow> card ?g \\<in> group_sizes\n  ?x \\<in> group_sizes \\<Longrightarrow>\n  \\<exists>G. G \\<in> \\<G> \\<and> card G = ?x\n  ?x \\<in> \\<V> \\<Longrightarrow>\n  \\<exists>!G. ?x \\<in> G \\<and> G \\<in> \\<G>\n  \\<forall>G\\<in>\\<G>. card G = \\<m>\n\ngoal (1 subgoal):\n 1. group_sizes = {\\<m>}", "by force"], ["", "lemma uniform_groups_group_size_singleton: \"is_singleton (group_sizes)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_singleton group_sizes", "using uniform_groups_group_sizes"], ["proof (prove)\nusing this:\n  group_sizes = {\\<m>}\n\ngoal (1 subgoal):\n 1. is_singleton group_sizes", "by auto"], ["", "lemma set_filter_eq_P_forall:\"\\<forall> x \\<in> X . P x \\<Longrightarrow> Set.filter P X = X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>X. P x \\<Longrightarrow> Set.filter P X = X", "by (simp add: Collect_conj_eq Int_absorb2 Set.filter_def subsetI)"], ["", "lemma uniform_groups_groups_of_size_m: \"groups_of_size \\<m> = card \\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. groups_of_size \\<m> = card \\<G>", "proof(simp add: groups_of_size_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. card {G \\<in> \\<G>. card G = \\<m>} = card \\<G>", "have \"{G \\<in> \\<G>. card G = \\<m>} = \\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {G \\<in> \\<G>. card G = \\<m>} = \\<G>", "using uniform_groups_alt set_filter_eq_P_forall"], ["proof (prove)\nusing this:\n  \\<forall>G\\<in>\\<G>. card G = \\<m>\n  \\<forall>x\\<in>?X. ?P x \\<Longrightarrow> Set.filter ?P ?X = ?X\n\ngoal (1 subgoal):\n 1. {G \\<in> \\<G>. card G = \\<m>} = \\<G>", "by auto"], ["proof (state)\nthis:\n  {G \\<in> \\<G>. card G = \\<m>} = \\<G>\n\ngoal (1 subgoal):\n 1. card {G \\<in> \\<G>. card G = \\<m>} = card \\<G>", "thus \"card {G \\<in> \\<G>. card G = \\<m>} = card \\<G>\""], ["proof (prove)\nusing this:\n  {G \\<in> \\<G>. card G = \\<m>} = \\<G>\n\ngoal (1 subgoal):\n 1. card {G \\<in> \\<G>. card G = \\<m>} = card \\<G>", "by simp"], ["proof (state)\nthis:\n  card {G \\<in> \\<G>. card G = \\<m>} = card \\<G>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma uniform_groups_of_size_not_m: \"x \\<noteq> \\<m> \\<Longrightarrow> groups_of_size x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> \\<m> \\<Longrightarrow> groups_of_size x = 0", "by (simp add: groups_of_size_def card_eq_0_iff uniform_groups)"], ["", "end"], ["", "subsection \\<open>GDD\\<close>"], ["", "text \\<open>A GDD extends a group design with an additional index parameter.\nEach pair of elements must occur either \\Lambda times if in diff groups, or 0 times if in the same \ngroup\\<close>"], ["", "locale GDD = group_design + \n  fixes index :: int (\"\\<Lambda>\")\n  assumes index_ge_1: \"\\<Lambda> \\<ge> 1\"\n  assumes index_together: \"G \\<in> \\<G> \\<Longrightarrow> x \\<in> G \\<Longrightarrow> y \\<in> G \\<Longrightarrow> x \\<noteq> y \\<Longrightarrow> \\<B> index {x, y} = 0\"\n  assumes index_distinct: \"G1 \\<in> \\<G> \\<Longrightarrow> G2 \\<in> \\<G> \\<Longrightarrow> G1 \\<noteq> G2 \\<Longrightarrow> x \\<in> G1 \\<Longrightarrow> y \\<in> G2 \\<Longrightarrow> \n    \\<B> index {x, y} = \\<Lambda>\"\nbegin"], ["", "lemma points_sep_groups_ne: \"G1 \\<in> \\<G> \\<Longrightarrow> G2 \\<in> \\<G> \\<Longrightarrow> G1 \\<noteq> G2 \\<Longrightarrow> x \\<in> G1 \\<Longrightarrow> y \\<in> G2 \\<Longrightarrow> x \\<noteq> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>G1 \\<in> \\<G>; G2 \\<in> \\<G>; G1 \\<noteq> G2; x \\<in> G1;\n     y \\<in> G2\\<rbrakk>\n    \\<Longrightarrow> x \\<noteq> y", "by (meson point_in_one_group)"], ["", "lemma index_together_alt_ss: \"ps \\<subseteq> G \\<Longrightarrow> G \\<in> \\<G> \\<Longrightarrow> card ps = 2 \\<Longrightarrow> \\<B> index ps = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps \\<subseteq> G; G \\<in> \\<G>; card ps = 2\\<rbrakk>\n    \\<Longrightarrow> \\<B> index ps = 0", "using index_together"], ["proof (prove)\nusing this:\n  \\<lbrakk>?G \\<in> \\<G>; ?x \\<in> ?G; ?y \\<in> ?G; ?x \\<noteq> ?y\\<rbrakk>\n  \\<Longrightarrow> \\<B> index {?x, ?y} = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ps \\<subseteq> G; G \\<in> \\<G>; card ps = 2\\<rbrakk>\n    \\<Longrightarrow> \\<B> index ps = 0", "by (metis card_2_iff insert_subset)"], ["", "lemma index_distinct_alt_ss: \"ps \\<subseteq> \\<V> \\<Longrightarrow> card ps = 2 \\<Longrightarrow> (\\<And> G . G \\<in> \\<G> \\<Longrightarrow> \\<not> ps \\<subseteq> G) \\<Longrightarrow> \n    \\<B> index ps = \\<Lambda>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps \\<subseteq> \\<V>; card ps = 2;\n     \\<And>G.\n        G \\<in> \\<G> \\<Longrightarrow> \\<not> ps \\<subseteq> G\\<rbrakk>\n    \\<Longrightarrow> int (\\<B> index ps) = \\<Lambda>", "using index_distinct"], ["proof (prove)\nusing this:\n  \\<lbrakk>?G1.0 \\<in> \\<G>; ?G2.0 \\<in> \\<G>; ?G1.0 \\<noteq> ?G2.0;\n   ?x \\<in> ?G1.0; ?y \\<in> ?G2.0\\<rbrakk>\n  \\<Longrightarrow> int (\\<B> index {?x, ?y}) = \\<Lambda>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ps \\<subseteq> \\<V>; card ps = 2;\n     \\<And>G.\n        G \\<in> \\<G> \\<Longrightarrow> \\<not> ps \\<subseteq> G\\<rbrakk>\n    \\<Longrightarrow> int (\\<B> index ps) = \\<Lambda>", "by (metis card_2_iff empty_subsetI insert_subset point_has_unique_group)"], ["", "lemma gdd_index_options: \"ps \\<subseteq> \\<V> \\<Longrightarrow> card ps = 2 \\<Longrightarrow> \\<B> index ps = 0 \\<or> \\<B> index ps = \\<Lambda>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps \\<subseteq> \\<V>; card ps = 2\\<rbrakk>\n    \\<Longrightarrow> \\<B> index ps = 0 \\<or>\n                      int (\\<B> index ps) = \\<Lambda>", "using index_distinct_alt_ss index_together_alt_ss"], ["proof (prove)\nusing this:\n  \\<lbrakk>?ps \\<subseteq> \\<V>; card ?ps = 2;\n   \\<And>G. G \\<in> \\<G> \\<Longrightarrow> \\<not> ?ps \\<subseteq> G\\<rbrakk>\n  \\<Longrightarrow> int (\\<B> index ?ps) = \\<Lambda>\n  \\<lbrakk>?ps \\<subseteq> ?G; ?G \\<in> \\<G>; card ?ps = 2\\<rbrakk>\n  \\<Longrightarrow> \\<B> index ?ps = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ps \\<subseteq> \\<V>; card ps = 2\\<rbrakk>\n    \\<Longrightarrow> \\<B> index ps = 0 \\<or>\n                      int (\\<B> index ps) = \\<Lambda>", "by blast"], ["", "lemma index_zero_implies_same_group: \"ps \\<subseteq> \\<V> \\<Longrightarrow> card ps = 2 \\<Longrightarrow> \\<B> index ps = 0 \\<Longrightarrow> \n    \\<exists> G \\<in> \\<G> . ps \\<subseteq> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps \\<subseteq> \\<V>; card ps = 2; \\<B> index ps = 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>G\\<in>\\<G>. ps \\<subseteq> G", "using index_distinct_alt_ss gr_implies_not_zero"], ["proof (prove)\nusing this:\n  \\<lbrakk>?ps \\<subseteq> \\<V>; card ?ps = 2;\n   \\<And>G. G \\<in> \\<G> \\<Longrightarrow> \\<not> ?ps \\<subseteq> G\\<rbrakk>\n  \\<Longrightarrow> int (\\<B> index ?ps) = \\<Lambda>\n  ?m < ?n \\<Longrightarrow> ?n \\<noteq> (0::?'a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ps \\<subseteq> \\<V>; card ps = 2; \\<B> index ps = 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>G\\<in>\\<G>. ps \\<subseteq> G", "by (metis index_ge_1 less_one of_nat_0 of_nat_1 of_nat_le_0_iff)"], ["", "lemma index_zero_implies_same_group_unique: \"ps \\<subseteq> \\<V> \\<Longrightarrow> card ps = 2 \\<Longrightarrow> \\<B> index ps = 0 \\<Longrightarrow> \n    \\<exists>! G \\<in> \\<G> . ps \\<subseteq> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps \\<subseteq> \\<V>; card ps = 2; \\<B> index ps = 0\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!G. G \\<in> \\<G> \\<and> ps \\<subseteq> G", "by (meson GDD.index_zero_implies_same_group GDD_axioms card_2_iff' group_design.point_in_one_group \n      group_design_axioms in_mono)"], ["", "lemma index_not_zero_impl_diff_group: \"ps \\<subseteq> \\<V> \\<Longrightarrow> card ps = 2 \\<Longrightarrow> \\<B> index ps = \\<Lambda> \\<Longrightarrow>  \n    (\\<And> G . G \\<in> \\<G> \\<Longrightarrow> \\<not> ps \\<subseteq> G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps \\<subseteq> \\<V>; card ps = 2;\n     int (\\<B> index ps) = \\<Lambda>\\<rbrakk>\n    \\<Longrightarrow> (\\<And>G.\n                          G \\<in> \\<G> \\<Longrightarrow>\n                          \\<not> ps \\<subseteq> G)", "using index_ge_1 index_together_alt_ss"], ["proof (prove)\nusing this:\n  1 \\<le> \\<Lambda>\n  \\<lbrakk>?ps \\<subseteq> ?G; ?G \\<in> \\<G>; card ?ps = 2\\<rbrakk>\n  \\<Longrightarrow> \\<B> index ?ps = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ps \\<subseteq> \\<V>; card ps = 2;\n     int (\\<B> index ps) = \\<Lambda>\\<rbrakk>\n    \\<Longrightarrow> (\\<And>G.\n                          G \\<in> \\<G> \\<Longrightarrow>\n                          \\<not> ps \\<subseteq> G)", "by auto"], ["", "lemma index_zero_implies_one_group: \n  assumes \"ps \\<subseteq> \\<V>\" \n  and \"card ps = 2\" \n  and \"\\<B> index ps = 0\" \n  shows \"size {#b \\<in>#  mset_set \\<G> . ps \\<subseteq> b#} = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. size (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) = 1", "obtain G where ging: \"G \\<in> \\<G>\" and psin: \"ps \\<subseteq> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>G \\<in> \\<G>; ps \\<subseteq> G\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using index_zero_implies_same_group groups_size assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?ps \\<subseteq> \\<V>; card ?ps = 2; \\<B> index ?ps = 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>G\\<in>\\<G>. ?ps \\<subseteq> G\n  1 < card \\<G>\n  ps \\<subseteq> \\<V>\n  card ps = 2\n  \\<B> index ps = 0\n\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>G \\<in> \\<G>; ps \\<subseteq> G\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  G \\<in> \\<G>\n  ps \\<subseteq> G\n\ngoal (1 subgoal):\n 1. size (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) = 1", "then"], ["proof (chain)\npicking this:\n  G \\<in> \\<G>\n  ps \\<subseteq> G", "have unique: \"\\<And> G2 . G2 \\<in> \\<G> \\<Longrightarrow> G \\<noteq> G2 \\<Longrightarrow> \\<not> ps \\<subseteq> G2\""], ["proof (prove)\nusing this:\n  G \\<in> \\<G>\n  ps \\<subseteq> G\n\ngoal (1 subgoal):\n 1. \\<And>G2.\n       \\<lbrakk>G2 \\<in> \\<G>; G \\<noteq> G2\\<rbrakk>\n       \\<Longrightarrow> \\<not> ps \\<subseteq> G2", "using index_zero_implies_same_group_unique"], ["proof (prove)\nusing this:\n  G \\<in> \\<G>\n  ps \\<subseteq> G\n  \\<lbrakk>?ps \\<subseteq> \\<V>; card ?ps = 2; \\<B> index ?ps = 0\\<rbrakk>\n  \\<Longrightarrow> \\<exists>!G. G \\<in> \\<G> \\<and> ?ps \\<subseteq> G\n\ngoal (1 subgoal):\n 1. \\<And>G2.\n       \\<lbrakk>G2 \\<in> \\<G>; G \\<noteq> G2\\<rbrakk>\n       \\<Longrightarrow> \\<not> ps \\<subseteq> G2", "by (metis assms)"], ["proof (state)\nthis:\n  \\<lbrakk>?G2.0 \\<in> \\<G>; G \\<noteq> ?G2.0\\<rbrakk>\n  \\<Longrightarrow> \\<not> ps \\<subseteq> ?G2.0\n\ngoal (1 subgoal):\n 1. size (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) = 1", "have \"\\<And> G'. G' \\<in> \\<G> \\<longleftrightarrow> G' \\<in># mset_set \\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>G'. (G' \\<in> \\<G>) = (G' \\<in># mset_set \\<G>)", "by (simp add: groups_finite)"], ["proof (state)\nthis:\n  (?G' \\<in> \\<G>) = (?G' \\<in># mset_set \\<G>)\n\ngoal (1 subgoal):\n 1. size (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) = 1", "then"], ["proof (chain)\npicking this:\n  (?G' \\<in> \\<G>) = (?G' \\<in># mset_set \\<G>)", "have eq_mset: \"{#b \\<in>#  mset_set \\<G> . ps \\<subseteq> b#} = mset_set {b \\<in> \\<G> . ps \\<subseteq> b}\""], ["proof (prove)\nusing this:\n  (?G' \\<in> \\<G>) = (?G' \\<in># mset_set \\<G>)\n\ngoal (1 subgoal):\n 1. filter_mset ((\\<subseteq>) ps) (mset_set \\<G>) =\n    mset_set {b \\<in> \\<G>. ps \\<subseteq> b}", "using filter_mset_mset_set groups_finite"], ["proof (prove)\nusing this:\n  (?G' \\<in> \\<G>) = (?G' \\<in># mset_set \\<G>)\n  finite ?A \\<Longrightarrow>\n  filter_mset ?P (mset_set ?A) = mset_set {x \\<in> ?A. ?P x}\n  finite \\<G>\n\ngoal (1 subgoal):\n 1. filter_mset ((\\<subseteq>) ps) (mset_set \\<G>) =\n    mset_set {b \\<in> \\<G>. ps \\<subseteq> b}", "by blast"], ["proof (state)\nthis:\n  filter_mset ((\\<subseteq>) ps) (mset_set \\<G>) =\n  mset_set {b \\<in> \\<G>. ps \\<subseteq> b}\n\ngoal (1 subgoal):\n 1. size (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) = 1", "then"], ["proof (chain)\npicking this:\n  filter_mset ((\\<subseteq>) ps) (mset_set \\<G>) =\n  mset_set {b \\<in> \\<G>. ps \\<subseteq> b}", "have \"{b \\<in> \\<G> . ps \\<subseteq> b} = {G}\""], ["proof (prove)\nusing this:\n  filter_mset ((\\<subseteq>) ps) (mset_set \\<G>) =\n  mset_set {b \\<in> \\<G>. ps \\<subseteq> b}\n\ngoal (1 subgoal):\n 1. {b \\<in> \\<G>. ps \\<subseteq> b} = {G}", "using unique psin"], ["proof (prove)\nusing this:\n  filter_mset ((\\<subseteq>) ps) (mset_set \\<G>) =\n  mset_set {b \\<in> \\<G>. ps \\<subseteq> b}\n  \\<lbrakk>?G2.0 \\<in> \\<G>; G \\<noteq> ?G2.0\\<rbrakk>\n  \\<Longrightarrow> \\<not> ps \\<subseteq> ?G2.0\n  ps \\<subseteq> G\n\ngoal (1 subgoal):\n 1. {b \\<in> \\<G>. ps \\<subseteq> b} = {G}", "by (smt Collect_cong ging singleton_conv)"], ["proof (state)\nthis:\n  {b \\<in> \\<G>. ps \\<subseteq> b} = {G}\n\ngoal (1 subgoal):\n 1. size (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) = 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  {b \\<in> \\<G>. ps \\<subseteq> b} = {G}\n\ngoal (1 subgoal):\n 1. size (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) = 1", "by (simp add: eq_mset)"], ["proof (state)\nthis:\n  size (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma index_distinct_group_num_alt_def: \"ps \\<subseteq> \\<V> \\<Longrightarrow> card ps = 2 \\<Longrightarrow> \n    size {#b \\<in>#  mset_set \\<G> . ps \\<subseteq> b#} = 0 \\<Longrightarrow> \\<B> index ps = \\<Lambda>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps \\<subseteq> \\<V>; card ps = 2;\n     size (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) = 0\\<rbrakk>\n    \\<Longrightarrow> int (\\<B> index ps) = \\<Lambda>", "by (metis gdd_index_options index_zero_implies_one_group numeral_One zero_neq_numeral)"], ["", "lemma index_non_zero_implies_no_group: \n  assumes \"ps \\<subseteq> \\<V>\" \n    and  \"card ps = 2\" \n    and \"\\<B> index ps = \\<Lambda>\" \n  shows \"size {#b \\<in>#  mset_set \\<G> . ps \\<subseteq> b#} = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. size (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) = 0", "have \"\\<And> G . G \\<in> \\<G> \\<Longrightarrow>  \\<not> ps \\<subseteq> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>G. G \\<in> \\<G> \\<Longrightarrow> \\<not> ps \\<subseteq> G", "using index_not_zero_impl_diff_group assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?ps \\<subseteq> \\<V>; card ?ps = 2;\n   int (\\<B> index ?ps) = \\<Lambda>; ?G \\<in> \\<G>\\<rbrakk>\n  \\<Longrightarrow> \\<not> ?ps \\<subseteq> ?G\n  ps \\<subseteq> \\<V>\n  card ps = 2\n  int (\\<B> index ps) = \\<Lambda>\n\ngoal (1 subgoal):\n 1. \\<And>G. G \\<in> \\<G> \\<Longrightarrow> \\<not> ps \\<subseteq> G", "by simp"], ["proof (state)\nthis:\n  ?G \\<in> \\<G> \\<Longrightarrow> \\<not> ps \\<subseteq> ?G\n\ngoal (1 subgoal):\n 1. size (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) = 0", "then"], ["proof (chain)\npicking this:\n  ?G \\<in> \\<G> \\<Longrightarrow> \\<not> ps \\<subseteq> ?G", "have \"{#b \\<in>#  mset_set \\<G> . ps \\<subseteq> b#} = {#}\""], ["proof (prove)\nusing this:\n  ?G \\<in> \\<G> \\<Longrightarrow> \\<not> ps \\<subseteq> ?G\n\ngoal (1 subgoal):\n 1. filter_mset ((\\<subseteq>) ps) (mset_set \\<G>) = {#}", "using filter_mset_empty_if_finite_and_filter_set_empty"], ["proof (prove)\nusing this:\n  ?G \\<in> \\<G> \\<Longrightarrow> \\<not> ps \\<subseteq> ?G\n  \\<lbrakk>{x \\<in> ?X. ?P x} = {}; finite ?X\\<rbrakk>\n  \\<Longrightarrow> filter_mset ?P (mset_set ?X) = {#}\n\ngoal (1 subgoal):\n 1. filter_mset ((\\<subseteq>) ps) (mset_set \\<G>) = {#}", "by force"], ["proof (state)\nthis:\n  filter_mset ((\\<subseteq>) ps) (mset_set \\<G>) = {#}\n\ngoal (1 subgoal):\n 1. size (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  filter_mset ((\\<subseteq>) ps) (mset_set \\<G>) = {#}\n\ngoal (1 subgoal):\n 1. size (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) = 0", "by simp"], ["proof (state)\nthis:\n  size (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gdd_index_non_zero_iff: \"ps \\<subseteq> \\<V> \\<Longrightarrow> card ps = 2 \\<Longrightarrow> \n    \\<B> index ps = \\<Lambda> \\<longleftrightarrow> size {#b \\<in>#  mset_set \\<G> . ps \\<subseteq> b#} = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps \\<subseteq> \\<V>; card ps = 2\\<rbrakk>\n    \\<Longrightarrow> (int (\\<B> index ps) = \\<Lambda>) =\n                      (size\n                        (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) =\n                       0)", "using index_non_zero_implies_no_group index_distinct_group_num_alt_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?ps \\<subseteq> \\<V>; card ?ps = 2;\n   int (\\<B> index ?ps) = \\<Lambda>\\<rbrakk>\n  \\<Longrightarrow> size (filter_mset ((\\<subseteq>) ?ps) (mset_set \\<G>)) =\n                    0\n  \\<lbrakk>?ps \\<subseteq> \\<V>; card ?ps = 2;\n   size (filter_mset ((\\<subseteq>) ?ps) (mset_set \\<G>)) = 0\\<rbrakk>\n  \\<Longrightarrow> int (\\<B> index ?ps) = \\<Lambda>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ps \\<subseteq> \\<V>; card ps = 2\\<rbrakk>\n    \\<Longrightarrow> (int (\\<B> index ps) = \\<Lambda>) =\n                      (size\n                        (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) =\n                       0)", "by auto"], ["", "lemma gdd_index_zero_iff: \"ps \\<subseteq> \\<V> \\<Longrightarrow> card ps = 2 \\<Longrightarrow> \n    \\<B> index ps = 0 \\<longleftrightarrow> size {#b \\<in>#  mset_set \\<G> . ps \\<subseteq> b#} = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps \\<subseteq> \\<V>; card ps = 2\\<rbrakk>\n    \\<Longrightarrow> (\\<B> index ps = 0) =\n                      (size\n                        (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) =\n                       1)", "apply (auto simp add: index_zero_implies_one_group)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps \\<subseteq> \\<V>; card ps = 2;\n     size (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) = Suc 0\\<rbrakk>\n    \\<Longrightarrow> \\<B> index ps = 0", "by (metis GDD.gdd_index_options GDD_axioms index_non_zero_implies_no_group old.nat.distinct(2))"], ["", "lemma points_index_upper_bound: \"ps \\<subseteq> \\<V> \\<Longrightarrow> card ps = 2 \\<Longrightarrow> \\<B> index ps \\<le> \\<Lambda>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps \\<subseteq> \\<V>; card ps = 2\\<rbrakk>\n    \\<Longrightarrow> int (\\<B> index ps) \\<le> \\<Lambda>", "using gdd_index_options index_ge_1"], ["proof (prove)\nusing this:\n  \\<lbrakk>?ps \\<subseteq> \\<V>; card ?ps = 2\\<rbrakk>\n  \\<Longrightarrow> \\<B> index ?ps = 0 \\<or>\n                    int (\\<B> index ?ps) = \\<Lambda>\n  1 \\<le> \\<Lambda>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ps \\<subseteq> \\<V>; card ps = 2\\<rbrakk>\n    \\<Longrightarrow> int (\\<B> index ps) \\<le> \\<Lambda>", "by (metis int_one_le_iff_zero_less le_refl of_nat_0 of_nat_0_le_iff of_nat_le_iff zero_less_imp_eq_int)"], ["", "lemma index_1_imp_mult_1: \n  assumes \"\\<Lambda> = 1\"\n  assumes \"bl \\<in># \\<B>\"\n  assumes \"card bl \\<ge> 2\"\n  shows \"multiplicity bl = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. multiplicity bl = 1", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. multiplicity bl \\<noteq> 1 \\<Longrightarrow> False", "assume \"\\<not> (multiplicity bl = 1)\""], ["proof (state)\nthis:\n  multiplicity bl \\<noteq> 1\n\ngoal (1 subgoal):\n 1. multiplicity bl \\<noteq> 1 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  multiplicity bl \\<noteq> 1", "have \"multiplicity bl \\<noteq> 1\" and \"multiplicity bl \\<noteq> 0\""], ["proof (prove)\nusing this:\n  multiplicity bl \\<noteq> 1\n\ngoal (1 subgoal):\n 1. multiplicity bl \\<noteq> 1 &&& multiplicity bl \\<noteq> 0", "using assms"], ["proof (prove)\nusing this:\n  multiplicity bl \\<noteq> 1\n  \\<Lambda> = 1\n  bl \\<in># \\<B>\n  2 \\<le> card bl\n\ngoal (1 subgoal):\n 1. multiplicity bl \\<noteq> 1 &&& multiplicity bl \\<noteq> 0", "by simp_all"], ["proof (state)\nthis:\n  multiplicity bl \\<noteq> 1\n  multiplicity bl \\<noteq> 0\n\ngoal (1 subgoal):\n 1. multiplicity bl \\<noteq> 1 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  multiplicity bl \\<noteq> 1\n  multiplicity bl \\<noteq> 0", "have m: \"multiplicity bl \\<ge> 2\""], ["proof (prove)\nusing this:\n  multiplicity bl \\<noteq> 1\n  multiplicity bl \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 2 \\<le> multiplicity bl", "by linarith"], ["proof (state)\nthis:\n  2 \\<le> multiplicity bl\n\ngoal (1 subgoal):\n 1. multiplicity bl \\<noteq> 1 \\<Longrightarrow> False", "obtain ps where ps: \"ps \\<subseteq> bl \\<and> card ps = 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ps.\n        ps \\<subseteq> bl \\<and> card ps = 2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using nat_int_comparison(3) obtain_subset_with_card_n"], ["proof (prove)\nusing this:\n  (?a \\<le> ?b) = (int ?a \\<le> int ?b)\n  \\<lbrakk>?n \\<le> card ?S;\n   \\<And>T.\n      \\<lbrakk>T \\<subseteq> ?S; card T = ?n; finite T\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>ps.\n        ps \\<subseteq> bl \\<and> card ps = 2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis assms(3))"], ["proof (state)\nthis:\n  ps \\<subseteq> bl \\<and> card ps = 2\n\ngoal (1 subgoal):\n 1. multiplicity bl \\<noteq> 1 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  ps \\<subseteq> bl \\<and> card ps = 2", "have \"\\<B> index ps \\<ge> 2\""], ["proof (prove)\nusing this:\n  ps \\<subseteq> bl \\<and> card ps = 2\n\ngoal (1 subgoal):\n 1. 2 \\<le> \\<B> index ps", "using m points_index_count_min ps"], ["proof (prove)\nusing this:\n  ps \\<subseteq> bl \\<and> card ps = 2\n  2 \\<le> multiplicity bl\n  \\<lbrakk>?n \\<le> multiplicity ?bl; ?ps \\<subseteq> ?bl\\<rbrakk>\n  \\<Longrightarrow> ?n \\<le> \\<B> index ?ps\n  ps \\<subseteq> bl \\<and> card ps = 2\n\ngoal (1 subgoal):\n 1. 2 \\<le> \\<B> index ps", "by blast"], ["proof (state)\nthis:\n  2 \\<le> \\<B> index ps\n\ngoal (1 subgoal):\n 1. multiplicity bl \\<noteq> 1 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  2 \\<le> \\<B> index ps", "show False"], ["proof (prove)\nusing this:\n  2 \\<le> \\<B> index ps\n\ngoal (1 subgoal):\n 1. False", "using assms index_distinct ps antisym_conv2 not_numeral_less_zero \n      numeral_le_one_iff points_index_ps_nin semiring_norm(69) zero_neq_numeral"], ["proof (prove)\nusing this:\n  2 \\<le> \\<B> index ps\n  \\<Lambda> = 1\n  bl \\<in># \\<B>\n  2 \\<le> card bl\n  \\<lbrakk>?G1.0 \\<in> \\<G>; ?G2.0 \\<in> \\<G>; ?G1.0 \\<noteq> ?G2.0;\n   ?x \\<in> ?G1.0; ?y \\<in> ?G2.0\\<rbrakk>\n  \\<Longrightarrow> int (\\<B> index {?x, ?y}) = \\<Lambda>\n  ps \\<subseteq> bl \\<and> card ps = 2\n  ?x \\<le> ?y \\<Longrightarrow> (\\<not> ?x < ?y) = (?x = ?y)\n  \\<not> numeral ?n < (0::?'a)\n  (numeral ?n \\<le> (1::?'a)) = (?n \\<le> num.One)\n  \\<not> ?ps \\<subseteq> \\<V> \\<Longrightarrow> \\<B> index ?ps = 0\n  (num.Bit0 ?m \\<le> num.One) = False\n  (0::?'a) \\<noteq> numeral ?n\n\ngoal (1 subgoal):\n 1. False", "by (metis gdd_index_options int_int_eq int_ops(2))"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma simple_if_block_size_gt_2:\n  assumes \"\\<And> bl . card bl \\<ge> 2\"\n  assumes \"\\<Lambda> = 1\"\n  shows \"simple_design \\<V> \\<B>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. simple_design \\<V> \\<B>", "using index_1_imp_mult_1 assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<Lambda> = 1; ?bl \\<in># \\<B>; 2 \\<le> card ?bl\\<rbrakk>\n  \\<Longrightarrow> multiplicity ?bl = 1\n  2 \\<le> card ?bl\n  \\<Lambda> = 1\n\ngoal (1 subgoal):\n 1. simple_design \\<V> \\<B>", "apply (unfold_locales)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>bl.\n       \\<lbrakk>\\<And>bl.\n                   \\<lbrakk>\\<Lambda> = 1; bl \\<in># \\<B>;\n                    2 \\<le> card bl\\<rbrakk>\n                   \\<Longrightarrow> multiplicity bl = 1;\n        \\<And>bl. 2 \\<le> card bl; \\<Lambda> = 1; bl \\<in># \\<B>\\<rbrakk>\n       \\<Longrightarrow> multiplicity bl = 1", "by (metis card.empty not_numeral_le_zero)"], ["", "end"], ["", "subsubsection \\<open>Sub types of GDD's\\<close>"], ["", "text \\<open>In literature, a GDD is usually defined in a number of different ways, \nincluding factors such as block size limitations\\<close>"], ["", "locale K_\\<Lambda>_GDD = K_block_design + GDD"], ["", "locale k_\\<Lambda>_GDD = block_design + GDD"], ["", "sublocale k_\\<Lambda>_GDD \\<subseteq> K_\\<Lambda>_GDD \\<V> \\<B> \"{\\<k>}\" \\<G> \\<Lambda>"], ["proof (prove)\ngoal (1 subgoal):\n 1. K_\\<Lambda>_GDD \\<V> \\<B> {\\<k>} \\<G> \\<Lambda>", "by (unfold_locales)"], ["", "locale K_GDD = K_\\<Lambda>_GDD \\<V> \\<B> \\<K> \\<G> 1 \n  for point_set (\"\\<V>\") and block_collection (\"\\<B>\") and sizes (\"\\<K>\") and groups (\"\\<G>\")"], ["", "locale k_GDD = k_\\<Lambda>_GDD \\<V> \\<B> \\<k> \\<G> 1 \n  for point_set (\"\\<V>\") and block_collection (\"\\<B>\") and u_block_size (\"\\<k>\") and groups (\"\\<G>\")"], ["", "sublocale k_GDD \\<subseteq> K_GDD \\<V> \\<B> \"{\\<k>}\" \\<G>"], ["proof (prove)\ngoal (1 subgoal):\n 1. K_GDD \\<V> \\<B> {\\<k>} \\<G>", "by (unfold_locales)"], ["", "lemma (in K_GDD) multiplicity_1:  \"bl \\<in># \\<B> \\<Longrightarrow> card bl \\<ge> 2 \\<Longrightarrow> multiplicity bl = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>bl \\<in># \\<B>; 2 \\<le> card bl\\<rbrakk>\n    \\<Longrightarrow> multiplicity bl = 1", "using index_1_imp_mult_1"], ["proof (prove)\nusing this:\n  \\<lbrakk>1 = 1; ?bl \\<in># \\<B>; 2 \\<le> card ?bl\\<rbrakk>\n  \\<Longrightarrow> multiplicity ?bl = 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>bl \\<in># \\<B>; 2 \\<le> card bl\\<rbrakk>\n    \\<Longrightarrow> multiplicity bl = 1", "by simp"], ["", "locale RGDD = GDD + resolvable_design"], ["", "subsection \\<open>GDD and PBD Constructions\\<close>"], ["", "text \\<open>GDD's are commonly studied alongside PBD's (pairwise balanced designs). Many constructions\nhave been developed for designs to create a GDD from a PBD and vice versa. In particular, \nWilsons Construction is a well known construction, which is formalised in this section. It\nshould be noted that many of the more basic constructions in this section are often stated without\nproof/all the necessary assumptions in textbooks/course notes.\\<close>"], ["", "context GDD\nbegin"], ["", "subsubsection \\<open>GDD Delete Point construction\\<close>"], ["", "lemma delete_point_index_zero: \n  assumes \"G \\<in> {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\"\n  and \"y \\<in> G\" and \"z \\<in> G\" and \"z\\<noteq> y\"\nshows \"(del_point_blocks x) index {y, z} = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. del_point_blocks x index {y, z} = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. del_point_blocks x index {y, z} = 0", "have \"y \\<noteq> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<noteq> x", "using assms(1) assms(2)"], ["proof (prove)\nusing this:\n  G \\<in> {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\n  y \\<in> G\n\ngoal (1 subgoal):\n 1. y \\<noteq> x", "by blast"], ["proof (state)\nthis:\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. del_point_blocks x index {y, z} = 0", "have \"z \\<noteq> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<noteq> x", "using assms(1) assms(3)"], ["proof (prove)\nusing this:\n  G \\<in> {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\n  z \\<in> G\n\ngoal (1 subgoal):\n 1. z \\<noteq> x", "by blast"], ["proof (state)\nthis:\n  z \\<noteq> x\n\ngoal (1 subgoal):\n 1. del_point_blocks x index {y, z} = 0", "obtain G' where ing: \"G' \\<in> \\<G>\" and ss: \"G \\<subseteq> G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>G'.\n        \\<lbrakk>G' \\<in> \\<G>; G \\<subseteq> G'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(1)"], ["proof (prove)\nusing this:\n  G \\<in> {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\n\ngoal (1 subgoal):\n 1. (\\<And>G'.\n        \\<lbrakk>G' \\<in> \\<G>; G \\<subseteq> G'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  G' \\<in> \\<G>\n  G \\<subseteq> G'\n\ngoal (1 subgoal):\n 1. del_point_blocks x index {y, z} = 0", "have \"{y, z} \\<subseteq> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {y, z} \\<subseteq> G", "by (simp add: assms(2) assms(3))"], ["proof (state)\nthis:\n  {y, z} \\<subseteq> G\n\ngoal (1 subgoal):\n 1. del_point_blocks x index {y, z} = 0", "then"], ["proof (chain)\npicking this:\n  {y, z} \\<subseteq> G", "have \"{y, z} \\<subseteq> \\<V>\""], ["proof (prove)\nusing this:\n  {y, z} \\<subseteq> G\n\ngoal (1 subgoal):\n 1. {y, z} \\<subseteq> \\<V>", "by (meson ss ing group_subset_point_subset)"], ["proof (state)\nthis:\n  {y, z} \\<subseteq> \\<V>\n\ngoal (1 subgoal):\n 1. del_point_blocks x index {y, z} = 0", "then"], ["proof (chain)\npicking this:\n  {y, z} \\<subseteq> \\<V>", "have \"{y, z} \\<subseteq> (del_point x)\""], ["proof (prove)\nusing this:\n  {y, z} \\<subseteq> \\<V>\n\ngoal (1 subgoal):\n 1. {y, z} \\<subseteq> del_point x", "using \\<open>y \\<noteq> x\\<close> \\<open>z \\<noteq> x\\<close> del_point_def"], ["proof (prove)\nusing this:\n  {y, z} \\<subseteq> \\<V>\n  y \\<noteq> x\n  z \\<noteq> x\n  del_point ?p \\<equiv> \\<V> - {?p}\n\ngoal (1 subgoal):\n 1. {y, z} \\<subseteq> del_point x", "by fastforce"], ["proof (state)\nthis:\n  {y, z} \\<subseteq> del_point x\n\ngoal (1 subgoal):\n 1. del_point_blocks x index {y, z} = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  {y, z} \\<subseteq> del_point x\n\ngoal (1 subgoal):\n 1. del_point_blocks x index {y, z} = 0", "using delete_point_index_eq index_together"], ["proof (prove)\nusing this:\n  {y, z} \\<subseteq> del_point x\n  ?ps \\<subseteq> del_point ?p \\<Longrightarrow>\n  del_point_blocks ?p index ?ps = \\<B> index ?ps\n  \\<lbrakk>?G \\<in> \\<G>; ?x \\<in> ?G; ?y \\<in> ?G; ?x \\<noteq> ?y\\<rbrakk>\n  \\<Longrightarrow> \\<B> index {?x, ?y} = 0\n\ngoal (1 subgoal):\n 1. del_point_blocks x index {y, z} = 0", "by (metis assms(2) assms(3) assms(4) in_mono ing ss)"], ["proof (state)\nthis:\n  del_point_blocks x index {y, z} = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma delete_point_index: \n  assumes \"G1 \\<in> {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\"\n  assumes \"G2 \\<in> {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\"\n  assumes \"G1 \\<noteq> G2\" and \"y \\<in> G1\" and \"z \\<in> G2\"\n  shows \"del_point_blocks x index {y, z} = \\<Lambda>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int (del_point_blocks x index {y, z}) = \\<Lambda>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. int (del_point_blocks x index {y, z}) = \\<Lambda>", "have \"y \\<noteq> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<noteq> x", "using assms"], ["proof (prove)\nusing this:\n  G1 \\<in> {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\n  G2 \\<in> {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\n  G1 \\<noteq> G2\n  y \\<in> G1\n  z \\<in> G2\n\ngoal (1 subgoal):\n 1. y \\<noteq> x", "by blast"], ["proof (state)\nthis:\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. int (del_point_blocks x index {y, z}) = \\<Lambda>", "have \"z \\<noteq> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<noteq> x", "using assms"], ["proof (prove)\nusing this:\n  G1 \\<in> {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\n  G2 \\<in> {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\n  G1 \\<noteq> G2\n  y \\<in> G1\n  z \\<in> G2\n\ngoal (1 subgoal):\n 1. z \\<noteq> x", "by blast"], ["proof (state)\nthis:\n  z \\<noteq> x\n\ngoal (1 subgoal):\n 1. int (del_point_blocks x index {y, z}) = \\<Lambda>", "obtain G1' where ing1: \"G1' \\<in> \\<G>\" and t1: \"G1 = G1' - {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>G1'.\n        \\<lbrakk>G1' \\<in> \\<G>; G1 = G1' - {x}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(1)"], ["proof (prove)\nusing this:\n  G1 \\<in> {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\n\ngoal (1 subgoal):\n 1. (\\<And>G1'.\n        \\<lbrakk>G1' \\<in> \\<G>; G1 = G1' - {x}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  G1' \\<in> \\<G>\n  G1 = G1' - {x}\n\ngoal (1 subgoal):\n 1. int (del_point_blocks x index {y, z}) = \\<Lambda>", "obtain G2' where ing2: \"G2' \\<in> \\<G>\" and t2: \"G2 = G2' - {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>G2'.\n        \\<lbrakk>G2' \\<in> \\<G>; G2 = G2' - {x}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(2)"], ["proof (prove)\nusing this:\n  G2 \\<in> {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\n\ngoal (1 subgoal):\n 1. (\\<And>G2'.\n        \\<lbrakk>G2' \\<in> \\<G>; G2 = G2' - {x}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  G2' \\<in> \\<G>\n  G2 = G2' - {x}\n\ngoal (1 subgoal):\n 1. int (del_point_blocks x index {y, z}) = \\<Lambda>", "then"], ["proof (chain)\npicking this:\n  G2' \\<in> \\<G>\n  G2 = G2' - {x}", "have ss1: \"G1 \\<subseteq> G1'\" and ss2: \"G2 \\<subseteq> G2'\""], ["proof (prove)\nusing this:\n  G2' \\<in> \\<G>\n  G2 = G2' - {x}\n\ngoal (1 subgoal):\n 1. G1 \\<subseteq> G1' &&& G2 \\<subseteq> G2'", "using t1"], ["proof (prove)\nusing this:\n  G2' \\<in> \\<G>\n  G2 = G2' - {x}\n  G1 = G1' - {x}\n\ngoal (1 subgoal):\n 1. G1 \\<subseteq> G1' &&& G2 \\<subseteq> G2'", "by auto"], ["proof (state)\nthis:\n  G1 \\<subseteq> G1'\n  G2 \\<subseteq> G2'\n\ngoal (1 subgoal):\n 1. int (del_point_blocks x index {y, z}) = \\<Lambda>", "then"], ["proof (chain)\npicking this:\n  G1 \\<subseteq> G1'\n  G2 \\<subseteq> G2'", "have \"{y, z} \\<subseteq> \\<V>\""], ["proof (prove)\nusing this:\n  G1 \\<subseteq> G1'\n  G2 \\<subseteq> G2'\n\ngoal (1 subgoal):\n 1. {y, z} \\<subseteq> \\<V>", "using ing1 ing2 ss1 ss2 assms(4) assms(5)"], ["proof (prove)\nusing this:\n  G1 \\<subseteq> G1'\n  G2 \\<subseteq> G2'\n  G1' \\<in> \\<G>\n  G2' \\<in> \\<G>\n  G1 \\<subseteq> G1'\n  G2 \\<subseteq> G2'\n  y \\<in> G1\n  z \\<in> G2\n\ngoal (1 subgoal):\n 1. {y, z} \\<subseteq> \\<V>", "by (metis empty_subsetI insert_absorb insert_subset point_in_group)"], ["proof (state)\nthis:\n  {y, z} \\<subseteq> \\<V>\n\ngoal (1 subgoal):\n 1. int (del_point_blocks x index {y, z}) = \\<Lambda>", "then"], ["proof (chain)\npicking this:\n  {y, z} \\<subseteq> \\<V>", "have \"{y, z} \\<subseteq> del_point x\""], ["proof (prove)\nusing this:\n  {y, z} \\<subseteq> \\<V>\n\ngoal (1 subgoal):\n 1. {y, z} \\<subseteq> del_point x", "using \\<open>y \\<noteq> x\\<close> \\<open>z \\<noteq> x\\<close> del_point_def"], ["proof (prove)\nusing this:\n  {y, z} \\<subseteq> \\<V>\n  y \\<noteq> x\n  z \\<noteq> x\n  del_point ?p \\<equiv> \\<V> - {?p}\n\ngoal (1 subgoal):\n 1. {y, z} \\<subseteq> del_point x", "by auto"], ["proof (state)\nthis:\n  {y, z} \\<subseteq> del_point x\n\ngoal (1 subgoal):\n 1. int (del_point_blocks x index {y, z}) = \\<Lambda>", "then"], ["proof (chain)\npicking this:\n  {y, z} \\<subseteq> del_point x", "have indx: \"del_point_blocks x index {y, z} = \\<B> index {y, z}\""], ["proof (prove)\nusing this:\n  {y, z} \\<subseteq> del_point x\n\ngoal (1 subgoal):\n 1. del_point_blocks x index {y, z} = \\<B> index {y, z}", "using delete_point_index_eq"], ["proof (prove)\nusing this:\n  {y, z} \\<subseteq> del_point x\n  ?ps \\<subseteq> del_point ?p \\<Longrightarrow>\n  del_point_blocks ?p index ?ps = \\<B> index ?ps\n\ngoal (1 subgoal):\n 1. del_point_blocks x index {y, z} = \\<B> index {y, z}", "by auto"], ["proof (state)\nthis:\n  del_point_blocks x index {y, z} = \\<B> index {y, z}\n\ngoal (1 subgoal):\n 1. int (del_point_blocks x index {y, z}) = \\<Lambda>", "have \"G1' \\<noteq> G2'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G1' \\<noteq> G2'", "using assms t1 t2"], ["proof (prove)\nusing this:\n  G1 \\<in> {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\n  G2 \\<in> {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\n  G1 \\<noteq> G2\n  y \\<in> G1\n  z \\<in> G2\n  G1 = G1' - {x}\n  G2 = G2' - {x}\n\ngoal (1 subgoal):\n 1. G1' \\<noteq> G2'", "by fastforce"], ["proof (state)\nthis:\n  G1' \\<noteq> G2'\n\ngoal (1 subgoal):\n 1. int (del_point_blocks x index {y, z}) = \\<Lambda>", "thus ?thesis"], ["proof (prove)\nusing this:\n  G1' \\<noteq> G2'\n\ngoal (1 subgoal):\n 1. int (del_point_blocks x index {y, z}) = \\<Lambda>", "using index_distinct"], ["proof (prove)\nusing this:\n  G1' \\<noteq> G2'\n  \\<lbrakk>?G1.0 \\<in> \\<G>; ?G2.0 \\<in> \\<G>; ?G1.0 \\<noteq> ?G2.0;\n   ?x \\<in> ?G1.0; ?y \\<in> ?G2.0\\<rbrakk>\n  \\<Longrightarrow> int (\\<B> index {?x, ?y}) = \\<Lambda>\n\ngoal (1 subgoal):\n 1. int (del_point_blocks x index {y, z}) = \\<Lambda>", "using indx assms(4) assms(5) ing1 ing2 t1 t2"], ["proof (prove)\nusing this:\n  G1' \\<noteq> G2'\n  \\<lbrakk>?G1.0 \\<in> \\<G>; ?G2.0 \\<in> \\<G>; ?G1.0 \\<noteq> ?G2.0;\n   ?x \\<in> ?G1.0; ?y \\<in> ?G2.0\\<rbrakk>\n  \\<Longrightarrow> int (\\<B> index {?x, ?y}) = \\<Lambda>\n  del_point_blocks x index {y, z} = \\<B> index {y, z}\n  y \\<in> G1\n  z \\<in> G2\n  G1' \\<in> \\<G>\n  G2' \\<in> \\<G>\n  G1 = G1' - {x}\n  G2 = G2' - {x}\n\ngoal (1 subgoal):\n 1. int (del_point_blocks x index {y, z}) = \\<Lambda>", "by auto"], ["proof (state)\nthis:\n  int (del_point_blocks x index {y, z}) = \\<Lambda>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma delete_point_group_size: \n  assumes \"{x} \\<in> \\<G> \\<Longrightarrow> card \\<G> > 2\" \n  shows \"1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}", "proof (cases \"{x} \\<in> \\<G>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. {x} \\<in> \\<G> \\<Longrightarrow>\n    1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\n 2. {x} \\<notin> \\<G> \\<Longrightarrow>\n    1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}", "case True"], ["proof (state)\nthis:\n  {x} \\<in> \\<G>\n\ngoal (2 subgoals):\n 1. {x} \\<in> \\<G> \\<Longrightarrow>\n    1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\n 2. {x} \\<notin> \\<G> \\<Longrightarrow>\n    1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}", "then"], ["proof (chain)\npicking this:\n  {x} \\<in> \\<G>", "have \"\\<And> g . g \\<in> (\\<G> - {{x}}) \\<Longrightarrow> x \\<notin> g\""], ["proof (prove)\nusing this:\n  {x} \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. \\<And>g. g \\<in> \\<G> - {{x}} \\<Longrightarrow> x \\<notin> g", "by (meson disjnt_insert1 groups_disjoint pairwise_alt)"], ["proof (state)\nthis:\n  ?g \\<in> \\<G> - {{x}} \\<Longrightarrow> x \\<notin> ?g\n\ngoal (2 subgoals):\n 1. {x} \\<in> \\<G> \\<Longrightarrow>\n    1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\n 2. {x} \\<notin> \\<G> \\<Longrightarrow>\n    1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}", "then"], ["proof (chain)\npicking this:\n  ?g \\<in> \\<G> - {{x}} \\<Longrightarrow> x \\<notin> ?g", "have simpg: \"\\<And> g . g \\<in> (\\<G> - {{x}}) \\<Longrightarrow> g - {x} = g\""], ["proof (prove)\nusing this:\n  ?g \\<in> \\<G> - {{x}} \\<Longrightarrow> x \\<notin> ?g\n\ngoal (1 subgoal):\n 1. \\<And>g. g \\<in> \\<G> - {{x}} \\<Longrightarrow> g - {x} = g", "by simp"], ["proof (state)\nthis:\n  ?g \\<in> \\<G> - {{x}} \\<Longrightarrow> ?g - {x} = ?g\n\ngoal (2 subgoals):\n 1. {x} \\<in> \\<G> \\<Longrightarrow>\n    1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\n 2. {x} \\<notin> \\<G> \\<Longrightarrow>\n    1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}", "have \"{g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} = {g - {x} |g. (g \\<in> \\<G> - {{x}})}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} =\n    {g - {x} |g. g \\<in> \\<G> - {{x}}}", "using True"], ["proof (prove)\nusing this:\n  {x} \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} =\n    {g - {x} |g. g \\<in> \\<G> - {{x}}}", "by force"], ["proof (state)\nthis:\n  {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} =\n  {g - {x} |g. g \\<in> \\<G> - {{x}}}\n\ngoal (2 subgoals):\n 1. {x} \\<in> \\<G> \\<Longrightarrow>\n    1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\n 2. {x} \\<notin> \\<G> \\<Longrightarrow>\n    1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}", "then"], ["proof (chain)\npicking this:\n  {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} =\n  {g - {x} |g. g \\<in> \\<G> - {{x}}}", "have \"{g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} = {g |g. (g \\<in> \\<G> - {{x}})}\""], ["proof (prove)\nusing this:\n  {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} =\n  {g - {x} |g. g \\<in> \\<G> - {{x}}}\n\ngoal (1 subgoal):\n 1. {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} =\n    {g |g. g \\<in> \\<G> - {{x}}}", "using simpg"], ["proof (prove)\nusing this:\n  {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} =\n  {g - {x} |g. g \\<in> \\<G> - {{x}}}\n  ?g \\<in> \\<G> - {{x}} \\<Longrightarrow> ?g - {x} = ?g\n\ngoal (1 subgoal):\n 1. {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} =\n    {g |g. g \\<in> \\<G> - {{x}}}", "by (smt (verit) Collect_cong)"], ["proof (state)\nthis:\n  {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} =\n  {g |g. g \\<in> \\<G> - {{x}}}\n\ngoal (2 subgoals):\n 1. {x} \\<in> \\<G> \\<Longrightarrow>\n    1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\n 2. {x} \\<notin> \\<G> \\<Longrightarrow>\n    1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}", "then"], ["proof (chain)\npicking this:\n  {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} =\n  {g |g. g \\<in> \\<G> - {{x}}}", "have eq: \"{g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} =  \\<G> - {{x}}\""], ["proof (prove)\nusing this:\n  {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} =\n  {g |g. g \\<in> \\<G> - {{x}}}\n\ngoal (1 subgoal):\n 1. {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} = \\<G> - {{x}}", "using set_self_img_compr"], ["proof (prove)\nusing this:\n  {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} =\n  {g |g. g \\<in> \\<G> - {{x}}}\n  {a |a. a \\<in> ?A} = ?A\n\ngoal (1 subgoal):\n 1. {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} = \\<G> - {{x}}", "by blast"], ["proof (state)\nthis:\n  {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} = \\<G> - {{x}}\n\ngoal (2 subgoals):\n 1. {x} \\<in> \\<G> \\<Longrightarrow>\n    1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\n 2. {x} \\<notin> \\<G> \\<Longrightarrow>\n    1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}", "have \"card (\\<G> - {{x}}) = card \\<G> - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (\\<G> - {{x}}) = card \\<G> - 1", "using True"], ["proof (prove)\nusing this:\n  {x} \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. card (\\<G> - {{x}}) = card \\<G> - 1", "by (simp add: groups_finite)"], ["proof (state)\nthis:\n  card (\\<G> - {{x}}) = card \\<G> - 1\n\ngoal (2 subgoals):\n 1. {x} \\<in> \\<G> \\<Longrightarrow>\n    1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\n 2. {x} \\<notin> \\<G> \\<Longrightarrow>\n    1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}", "then"], ["proof (chain)\npicking this:\n  card (\\<G> - {{x}}) = card \\<G> - 1", "show ?thesis"], ["proof (prove)\nusing this:\n  card (\\<G> - {{x}}) = card \\<G> - 1\n\ngoal (1 subgoal):\n 1. 1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}", "using True assms eq diff_is_0_eq'"], ["proof (prove)\nusing this:\n  card (\\<G> - {{x}}) = card \\<G> - 1\n  {x} \\<in> \\<G>\n  {x} \\<in> \\<G> \\<Longrightarrow> 2 < card \\<G>\n  {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} = \\<G> - {{x}}\n  ?m \\<le> ?n \\<Longrightarrow> ?m - ?n = 0\n\ngoal (1 subgoal):\n 1. 1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}", "by force"], ["proof (state)\nthis:\n  1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\n\ngoal (1 subgoal):\n 1. {x} \\<notin> \\<G> \\<Longrightarrow>\n    1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {x} \\<notin> \\<G> \\<Longrightarrow>\n    1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}", "case False"], ["proof (state)\nthis:\n  {x} \\<notin> \\<G>\n\ngoal (1 subgoal):\n 1. {x} \\<notin> \\<G> \\<Longrightarrow>\n    1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}", "then"], ["proof (chain)\npicking this:\n  {x} \\<notin> \\<G>", "have \"\\<And>g' y. {x} \\<notin> \\<G> \\<Longrightarrow> g' \\<in> \\<G> \\<Longrightarrow> y \\<in> \\<G> \\<Longrightarrow> g' - {x} = y - {x} \\<Longrightarrow> g' = y\""], ["proof (prove)\nusing this:\n  {x} \\<notin> \\<G>\n\ngoal (1 subgoal):\n 1. \\<And>g' y.\n       \\<lbrakk>{x} \\<notin> \\<G>; g' \\<in> \\<G>; y \\<in> \\<G>;\n        g' - {x} = y - {x}\\<rbrakk>\n       \\<Longrightarrow> g' = y", "by (metis all_not_in_conv insert_Diff_single insert_absorb insert_iff points_sep_groups_ne)"], ["proof (state)\nthis:\n  \\<lbrakk>{x} \\<notin> \\<G>; ?g' \\<in> \\<G>; ?y \\<in> \\<G>;\n   ?g' - {x} = ?y - {x}\\<rbrakk>\n  \\<Longrightarrow> ?g' = ?y\n\ngoal (1 subgoal):\n 1. {x} \\<notin> \\<G> \\<Longrightarrow>\n    1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>{x} \\<notin> \\<G>; ?g' \\<in> \\<G>; ?y \\<in> \\<G>;\n   ?g' - {x} = ?y - {x}\\<rbrakk>\n  \\<Longrightarrow> ?g' = ?y", "have inj: \"inj_on (\\<lambda> g . g - {x}) \\<G>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>{x} \\<notin> \\<G>; ?g' \\<in> \\<G>; ?y \\<in> \\<G>;\n   ?g' - {x} = ?y - {x}\\<rbrakk>\n  \\<Longrightarrow> ?g' = ?y\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>g. g - {x}) \\<G>", "by (simp add: inj_onI False)"], ["proof (state)\nthis:\n  inj_on (\\<lambda>g. g - {x}) \\<G>\n\ngoal (1 subgoal):\n 1. {x} \\<notin> \\<G> \\<Longrightarrow>\n    1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}", "have \"{g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} = {g - {x} |g. g \\<in> \\<G>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} =\n    {g - {x} |g. g \\<in> \\<G>}", "using False"], ["proof (prove)\nusing this:\n  {x} \\<notin> \\<G>\n\ngoal (1 subgoal):\n 1. {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} =\n    {g - {x} |g. g \\<in> \\<G>}", "by auto"], ["proof (state)\nthis:\n  {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} =\n  {g - {x} |g. g \\<in> \\<G>}\n\ngoal (1 subgoal):\n 1. {x} \\<notin> \\<G> \\<Longrightarrow>\n    1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}", "then"], ["proof (chain)\npicking this:\n  {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} =\n  {g - {x} |g. g \\<in> \\<G>}", "have \"card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} = card \\<G>\""], ["proof (prove)\nusing this:\n  {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} =\n  {g - {x} |g. g \\<in> \\<G>}\n\ngoal (1 subgoal):\n 1. card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} = card \\<G>", "using inj groups_finite card_image"], ["proof (prove)\nusing this:\n  {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} =\n  {g - {x} |g. g \\<in> \\<G>}\n  inj_on (\\<lambda>g. g - {x}) \\<G>\n  finite \\<G>\n  inj_on ?f ?A \\<Longrightarrow> card (?f ` ?A) = card ?A\n\ngoal (1 subgoal):\n 1. card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} = card \\<G>", "by (auto simp add: card_image setcompr_eq_image)"], ["proof (state)\nthis:\n  card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} = card \\<G>\n\ngoal (1 subgoal):\n 1. {x} \\<notin> \\<G> \\<Longrightarrow>\n    1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}", "then"], ["proof (chain)\npicking this:\n  card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} = card \\<G>", "show ?thesis"], ["proof (prove)\nusing this:\n  card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} = card \\<G>\n\ngoal (1 subgoal):\n 1. 1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}", "using groups_size"], ["proof (prove)\nusing this:\n  card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} = card \\<G>\n  1 < card \\<G>\n\ngoal (1 subgoal):\n 1. 1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}", "by presburger"], ["proof (state)\nthis:\n  1 < card {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma GDD_by_deleting_point: \n  assumes \"\\<And>bl. bl \\<in># \\<B> \\<Longrightarrow> x \\<in> bl \\<Longrightarrow> 2 \\<le> card bl\"\n  assumes \"{x} \\<in> \\<G> \\<Longrightarrow> card \\<G> > 2\"\n  shows \"GDD (del_point x) (del_point_blocks x) {g - {x} | g . g \\<in> \\<G> \\<and> g \\<noteq> {x}} \\<Lambda>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. GDD (del_point x) (del_point_blocks x)\n     {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} \\<Lambda>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. GDD (del_point x) (del_point_blocks x)\n     {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} \\<Lambda>", "interpret pd: proper_design \"del_point x\" \"del_point_blocks x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper_design (del_point x) (del_point_blocks x)", "using delete_point_proper assms"], ["proof (prove)\nusing this:\n  (\\<And>bl.\n      \\<lbrakk>bl \\<in># \\<B>; ?p \\<in> bl\\<rbrakk>\n      \\<Longrightarrow> 2 \\<le> card bl) \\<Longrightarrow>\n  proper_design (del_point ?p) (del_point_blocks ?p)\n  \\<lbrakk>?bl \\<in># \\<B>; x \\<in> ?bl\\<rbrakk>\n  \\<Longrightarrow> 2 \\<le> card ?bl\n  {x} \\<in> \\<G> \\<Longrightarrow> 2 < card \\<G>\n\ngoal (1 subgoal):\n 1. proper_design (del_point x) (del_point_blocks x)", "by blast"], ["proof (state)\ngoal (1 subgoal):\n 1. GDD (del_point x) (del_point_blocks x)\n     {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} \\<Lambda>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. GDD (del_point x) (del_point_blocks x)\n     {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} \\<Lambda>", "using delete_point_index_zero delete_point_index assms delete_point_group_size"], ["proof (prove)\nusing this:\n  \\<lbrakk>?G \\<in> {g - {?x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {?x}};\n   ?y \\<in> ?G; ?z \\<in> ?G; ?z \\<noteq> ?y\\<rbrakk>\n  \\<Longrightarrow> del_point_blocks ?x index {?y, ?z} = 0\n  \\<lbrakk>?G1.0 \\<in> {g - {?x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {?x}};\n   ?G2.0 \\<in> {g - {?x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {?x}};\n   ?G1.0 \\<noteq> ?G2.0; ?y \\<in> ?G1.0; ?z \\<in> ?G2.0\\<rbrakk>\n  \\<Longrightarrow> int (del_point_blocks ?x index {?y, ?z}) = \\<Lambda>\n  \\<lbrakk>?bl \\<in># \\<B>; x \\<in> ?bl\\<rbrakk>\n  \\<Longrightarrow> 2 \\<le> card ?bl\n  {x} \\<in> \\<G> \\<Longrightarrow> 2 < card \\<G>\n  ({?x} \\<in> \\<G> \\<Longrightarrow> 2 < card \\<G>) \\<Longrightarrow>\n  1 < card {g - {?x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {?x}}\n\ngoal (1 subgoal):\n 1. GDD (del_point x) (del_point_blocks x)\n     {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} \\<Lambda>", "by(unfold_locales) (simp_all add: partition_on_remove_pt group_partitions index_ge_1 del_point_def)"], ["proof (state)\nthis:\n  GDD (del_point x) (del_point_blocks x)\n   {g - {x} |g. g \\<in> \\<G> \\<and> g \\<noteq> {x}} \\<Lambda>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context K_GDD begin"], ["", "subsubsection \\<open>PBD construction from GDD\\<close>"], ["", "text \\<open>Two well known PBD constructions involve taking a GDD and either combining the groups and\nblocks to form a new block collection, or by adjoining a point\\<close>"], ["", "text \\<open>First prove that combining the groups and block set results in a constant index\\<close>"], ["", "lemma kgdd1_points_index_group_block: \n  assumes \"ps \\<subseteq> \\<V>\"\n  and \"card ps = 2\"\n  shows \"(\\<B> + mset_set \\<G>) index ps = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<B> + mset_set \\<G>) index ps = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<B> + mset_set \\<G>) index ps = 1", "have index1: \"(\\<And> G . G \\<in> \\<G> \\<Longrightarrow> \\<not> ps \\<subseteq> G) \\<Longrightarrow> \\<B> index ps = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>G.\n        G \\<in> \\<G> \\<Longrightarrow>\n        \\<not> ps \\<subseteq> G) \\<Longrightarrow>\n    \\<B> index ps = 1", "using index_distinct_alt_ss assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?ps \\<subseteq> \\<V>; card ?ps = 2;\n   \\<And>G. G \\<in> \\<G> \\<Longrightarrow> \\<not> ?ps \\<subseteq> G\\<rbrakk>\n  \\<Longrightarrow> int (\\<B> index ?ps) = 1\n  ps \\<subseteq> \\<V>\n  card ps = 2\n\ngoal (1 subgoal):\n 1. (\\<And>G.\n        G \\<in> \\<G> \\<Longrightarrow>\n        \\<not> ps \\<subseteq> G) \\<Longrightarrow>\n    \\<B> index ps = 1", "by fastforce"], ["proof (state)\nthis:\n  (\\<And>G.\n      G \\<in> \\<G> \\<Longrightarrow>\n      \\<not> ps \\<subseteq> G) \\<Longrightarrow>\n  \\<B> index ps = 1\n\ngoal (1 subgoal):\n 1. (\\<B> + mset_set \\<G>) index ps = 1", "have groups1: \"\\<B> index ps = 0 \\<Longrightarrow> size {#b \\<in>#  mset_set \\<G> . ps \\<subseteq> b#} = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<B> index ps = 0 \\<Longrightarrow>\n    size (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) = 1", "using index_zero_implies_one_group assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?ps \\<subseteq> \\<V>; card ?ps = 2; \\<B> index ?ps = 0\\<rbrakk>\n  \\<Longrightarrow> size (filter_mset ((\\<subseteq>) ?ps) (mset_set \\<G>)) =\n                    1\n  ps \\<subseteq> \\<V>\n  card ps = 2\n\ngoal (1 subgoal):\n 1. \\<B> index ps = 0 \\<Longrightarrow>\n    size (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) = 1", "by simp"], ["proof (state)\nthis:\n  \\<B> index ps = 0 \\<Longrightarrow>\n  size (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) = 1\n\ngoal (1 subgoal):\n 1. (\\<B> + mset_set \\<G>) index ps = 1", "then"], ["proof (chain)\npicking this:\n  \\<B> index ps = 0 \\<Longrightarrow>\n  size (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) = 1", "have \"(\\<B> + mset_set \\<G>) index ps = size (filter_mset ((\\<subseteq>) ps) (\\<B> + mset_set \\<G>))\""], ["proof (prove)\nusing this:\n  \\<B> index ps = 0 \\<Longrightarrow>\n  size (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) = 1\n\ngoal (1 subgoal):\n 1. (\\<B> + mset_set \\<G>) index ps =\n    size (filter_mset ((\\<subseteq>) ps) (\\<B> + mset_set \\<G>))", "by (simp add: points_index_def)"], ["proof (state)\nthis:\n  (\\<B> + mset_set \\<G>) index ps =\n  size (filter_mset ((\\<subseteq>) ps) (\\<B> + mset_set \\<G>))\n\ngoal (1 subgoal):\n 1. (\\<B> + mset_set \\<G>) index ps = 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<B> + mset_set \\<G>) index ps =\n  size (filter_mset ((\\<subseteq>) ps) (\\<B> + mset_set \\<G>))\n\ngoal (1 subgoal):\n 1. (\\<B> + mset_set \\<G>) index ps = 1", "using index1 groups1 gdd_index_non_zero_iff gdd_index_zero_iff assms \n      gdd_index_options points_index_def filter_union_mset union_commute"], ["proof (prove)\nusing this:\n  (\\<B> + mset_set \\<G>) index ps =\n  size (filter_mset ((\\<subseteq>) ps) (\\<B> + mset_set \\<G>))\n  (\\<And>G.\n      G \\<in> \\<G> \\<Longrightarrow>\n      \\<not> ps \\<subseteq> G) \\<Longrightarrow>\n  \\<B> index ps = 1\n  \\<B> index ps = 0 \\<Longrightarrow>\n  size (filter_mset ((\\<subseteq>) ps) (mset_set \\<G>)) = 1\n  \\<lbrakk>?ps \\<subseteq> \\<V>; card ?ps = 2\\<rbrakk>\n  \\<Longrightarrow> (int (\\<B> index ?ps) = 1) =\n                    (size\n                      (filter_mset ((\\<subseteq>) ?ps) (mset_set \\<G>)) =\n                     0)\n  \\<lbrakk>?ps \\<subseteq> \\<V>; card ?ps = 2\\<rbrakk>\n  \\<Longrightarrow> (\\<B> index ?ps = 0) =\n                    (size\n                      (filter_mset ((\\<subseteq>) ?ps) (mset_set \\<G>)) =\n                     1)\n  ps \\<subseteq> \\<V>\n  card ps = 2\n  \\<lbrakk>?ps \\<subseteq> \\<V>; card ?ps = 2\\<rbrakk>\n  \\<Longrightarrow> \\<B> index ?ps = 0 \\<or> int (\\<B> index ?ps) = 1\n  ?B index ?ps \\<equiv> size (filter_mset ((\\<subseteq>) ?ps) ?B)\n  filter_mset ?P (?M + ?N) = filter_mset ?P ?M + filter_mset ?P ?N\n  ?M + ?N = ?N + ?M\n\ngoal (1 subgoal):\n 1. (\\<B> + mset_set \\<G>) index ps = 1", "by (smt (z3) empty_neutral(1) less_irrefl_nat nonempty_has_size of_nat_1_eq_iff)"], ["proof (state)\nthis:\n  (\\<B> + mset_set \\<G>) index ps = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Combining blocks and the group set forms a PBD\\<close>"], ["", "lemma combine_block_groups_pairwise: \"pairwise_balance \\<V> (\\<B> + mset_set \\<G>) 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pairwise_balance \\<V> (\\<B> + mset_set \\<G>) 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pairwise_balance \\<V> (\\<B> + mset_set \\<G>) 1", "let ?B = \"\\<B> + mset_set \\<G>\""], ["proof (state)\ngoal (1 subgoal):\n 1. pairwise_balance \\<V> (\\<B> + mset_set \\<G>) 1", "have ss: \"\\<And> G. G \\<in> \\<G> \\<Longrightarrow> G \\<subseteq> \\<V>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>G. G \\<in> \\<G> \\<Longrightarrow> G \\<subseteq> \\<V>", "by (simp add: point_in_group subsetI)"], ["proof (state)\nthis:\n  ?G \\<in> \\<G> \\<Longrightarrow> ?G \\<subseteq> \\<V>\n\ngoal (1 subgoal):\n 1. pairwise_balance \\<V> (\\<B> + mset_set \\<G>) 1", "have \"\\<And> G. G \\<in> \\<G> \\<Longrightarrow> G \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>G. G \\<in> \\<G> \\<Longrightarrow> G \\<noteq> {}", "using group_partitions"], ["proof (prove)\nusing this:\n  partition_on \\<V> \\<G>\n\ngoal (1 subgoal):\n 1. \\<And>G. G \\<in> \\<G> \\<Longrightarrow> G \\<noteq> {}", "using partition_onD3"], ["proof (prove)\nusing this:\n  partition_on \\<V> \\<G>\n  partition_on ?A ?P \\<Longrightarrow> {} \\<notin> ?P\n\ngoal (1 subgoal):\n 1. \\<And>G. G \\<in> \\<G> \\<Longrightarrow> G \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  ?G \\<in> \\<G> \\<Longrightarrow> ?G \\<noteq> {}\n\ngoal (1 subgoal):\n 1. pairwise_balance \\<V> (\\<B> + mset_set \\<G>) 1", "then"], ["proof (chain)\npicking this:\n  ?G \\<in> \\<G> \\<Longrightarrow> ?G \\<noteq> {}", "interpret inc: design \\<V> ?B"], ["proof (prove)\nusing this:\n  ?G \\<in> \\<G> \\<Longrightarrow> ?G \\<noteq> {}\n\ngoal (1 subgoal):\n 1. design \\<V> (\\<B> + mset_set \\<G>)", "proof (unfold_locales)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>\\<And>G. G \\<in> \\<G> \\<Longrightarrow> G \\<noteq> {};\n        b \\<in># \\<B> + mset_set \\<G>\\<rbrakk>\n       \\<Longrightarrow> b \\<subseteq> \\<V>\n 2. (\\<And>G.\n        G \\<in> \\<G> \\<Longrightarrow> G \\<noteq> {}) \\<Longrightarrow>\n    finite \\<V>\n 3. \\<And>bl.\n       \\<lbrakk>\\<And>G. G \\<in> \\<G> \\<Longrightarrow> G \\<noteq> {};\n        bl \\<in># \\<B> + mset_set \\<G>\\<rbrakk>\n       \\<Longrightarrow> bl \\<noteq> {}", "show \"\\<And>b. (\\<And>G. G \\<in> \\<G> \\<Longrightarrow> G \\<noteq> {}) \\<Longrightarrow> b \\<in># \\<B> + mset_set \\<G> \\<Longrightarrow> b \\<subseteq> \\<V>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>\\<And>G. G \\<in> \\<G> \\<Longrightarrow> G \\<noteq> {};\n        b \\<in># \\<B> + mset_set \\<G>\\<rbrakk>\n       \\<Longrightarrow> b \\<subseteq> \\<V>", "by (metis finite_set_mset_mset_set groups_finite ss union_iff wellformed)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>G. G \\<in> \\<G> \\<Longrightarrow> G \\<noteq> {};\n   ?b \\<in># \\<B> + mset_set \\<G>\\<rbrakk>\n  \\<Longrightarrow> ?b \\<subseteq> \\<V>\n\ngoal (2 subgoals):\n 1. (\\<And>G.\n        G \\<in> \\<G> \\<Longrightarrow> G \\<noteq> {}) \\<Longrightarrow>\n    finite \\<V>\n 2. \\<And>bl.\n       \\<lbrakk>\\<And>G. G \\<in> \\<G> \\<Longrightarrow> G \\<noteq> {};\n        bl \\<in># \\<B> + mset_set \\<G>\\<rbrakk>\n       \\<Longrightarrow> bl \\<noteq> {}", "show \"(\\<And>G. G \\<in> \\<G> \\<Longrightarrow> G \\<noteq> {}) \\<Longrightarrow> finite \\<V>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>G.\n        G \\<in> \\<G> \\<Longrightarrow> G \\<noteq> {}) \\<Longrightarrow>\n    finite \\<V>", "by (simp add: finite_sets)"], ["proof (state)\nthis:\n  (\\<And>G. G \\<in> \\<G> \\<Longrightarrow> G \\<noteq> {}) \\<Longrightarrow>\n  finite \\<V>\n\ngoal (1 subgoal):\n 1. \\<And>bl.\n       \\<lbrakk>\\<And>G. G \\<in> \\<G> \\<Longrightarrow> G \\<noteq> {};\n        bl \\<in># \\<B> + mset_set \\<G>\\<rbrakk>\n       \\<Longrightarrow> bl \\<noteq> {}", "show \"\\<And>bl. (\\<And>G. G \\<in> \\<G> \\<Longrightarrow> G \\<noteq> {}) \\<Longrightarrow> bl \\<in># \\<B> + mset_set \\<G> \\<Longrightarrow> bl \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>bl.\n       \\<lbrakk>\\<And>G. G \\<in> \\<G> \\<Longrightarrow> G \\<noteq> {};\n        bl \\<in># \\<B> + mset_set \\<G>\\<rbrakk>\n       \\<Longrightarrow> bl \\<noteq> {}", "using blocks_nempty groups_finite"], ["proof (prove)\nusing this:\n  ?bl \\<in># \\<B> \\<Longrightarrow> ?bl \\<noteq> {}\n  finite \\<G>\n\ngoal (1 subgoal):\n 1. \\<And>bl.\n       \\<lbrakk>\\<And>G. G \\<in> \\<G> \\<Longrightarrow> G \\<noteq> {};\n        bl \\<in># \\<B> + mset_set \\<G>\\<rbrakk>\n       \\<Longrightarrow> bl \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>G. G \\<in> \\<G> \\<Longrightarrow> G \\<noteq> {};\n   ?bl \\<in># \\<B> + mset_set \\<G>\\<rbrakk>\n  \\<Longrightarrow> ?bl \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\ngoal (1 subgoal):\n 1. pairwise_balance \\<V> (\\<B> + mset_set \\<G>) 1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. pairwise_balance \\<V> (\\<B> + mset_set \\<G>) 1", "proof (unfold_locales)"], ["proof (state)\ngoal (4 subgoals):\n 1. inc.\\<b> \\<noteq> 0\n 2. 1 \\<le> 2\n 3. 2 \\<le> inc.\\<v>\n 4. \\<And>ps.\n       \\<lbrakk>ps \\<subseteq> \\<V>; int (card ps) = 2\\<rbrakk>\n       \\<Longrightarrow> int ((\\<B> + mset_set \\<G>) index ps) = 1", "show \"inc.\\<b> \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inc.\\<b> \\<noteq> 0", "using b_positive"], ["proof (prove)\nusing this:\n  0 < \\<b>\n\ngoal (1 subgoal):\n 1. inc.\\<b> \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  inc.\\<b> \\<noteq> 0\n\ngoal (3 subgoals):\n 1. 1 \\<le> 2\n 2. 2 \\<le> inc.\\<v>\n 3. \\<And>ps.\n       \\<lbrakk>ps \\<subseteq> \\<V>; int (card ps) = 2\\<rbrakk>\n       \\<Longrightarrow> int ((\\<B> + mset_set \\<G>) index ps) = 1", "show \"(1 ::int) \\<le> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> 2", "by simp"], ["proof (state)\nthis:\n  1 \\<le> 2\n\ngoal (2 subgoals):\n 1. 2 \\<le> inc.\\<v>\n 2. \\<And>ps.\n       \\<lbrakk>ps \\<subseteq> \\<V>; int (card ps) = 2\\<rbrakk>\n       \\<Longrightarrow> int ((\\<B> + mset_set \\<G>) index ps) = 1", "show \"2 \\<le> inc.\\<v>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<le> inc.\\<v>", "by (simp add: gdd_min_v)"], ["proof (state)\nthis:\n  2 \\<le> inc.\\<v>\n\ngoal (1 subgoal):\n 1. \\<And>ps.\n       \\<lbrakk>ps \\<subseteq> \\<V>; int (card ps) = 2\\<rbrakk>\n       \\<Longrightarrow> int ((\\<B> + mset_set \\<G>) index ps) = 1", "then"], ["proof (chain)\npicking this:\n  2 \\<le> inc.\\<v>", "show \"\\<And>ps. ps \\<subseteq> \\<V> \\<Longrightarrow> int (card ps) = 2 \\<Longrightarrow> int ((\\<B> + mset_set \\<G>) index ps) = 1\""], ["proof (prove)\nusing this:\n  2 \\<le> inc.\\<v>\n\ngoal (1 subgoal):\n 1. \\<And>ps.\n       \\<lbrakk>ps \\<subseteq> \\<V>; int (card ps) = 2\\<rbrakk>\n       \\<Longrightarrow> int ((\\<B> + mset_set \\<G>) index ps) = 1", "using kgdd1_points_index_group_block"], ["proof (prove)\nusing this:\n  2 \\<le> inc.\\<v>\n  \\<lbrakk>?ps \\<subseteq> \\<V>; card ?ps = 2\\<rbrakk>\n  \\<Longrightarrow> (\\<B> + mset_set \\<G>) index ?ps = 1\n\ngoal (1 subgoal):\n 1. \\<And>ps.\n       \\<lbrakk>ps \\<subseteq> \\<V>; int (card ps) = 2\\<rbrakk>\n       \\<Longrightarrow> int ((\\<B> + mset_set \\<G>) index ps) = 1", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>?ps \\<subseteq> \\<V>; int (card ?ps) = 2\\<rbrakk>\n  \\<Longrightarrow> int ((\\<B> + mset_set \\<G>) index ?ps) = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pairwise_balance \\<V> (\\<B> + mset_set \\<G>) 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma combine_block_groups_PBD:\n  assumes \"\\<And> G. G \\<in> \\<G> \\<Longrightarrow> card G \\<in> \\<K>\"\n  assumes \"\\<And> k . k \\<in> \\<K> \\<Longrightarrow> k \\<ge> 2\"\n  shows \"PBD \\<V> (\\<B> + mset_set \\<G>) \\<K>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PBD \\<V> (\\<B> + mset_set \\<G>) \\<K>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. PBD \\<V> (\\<B> + mset_set \\<G>) \\<K>", "let ?B = \"\\<B> + mset_set \\<G>\""], ["proof (state)\ngoal (1 subgoal):\n 1. PBD \\<V> (\\<B> + mset_set \\<G>) \\<K>", "interpret inc: pairwise_balance \\<V> ?B 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. pairwise_balance \\<V> (\\<B> + mset_set \\<G>) 1", "using combine_block_groups_pairwise"], ["proof (prove)\nusing this:\n  pairwise_balance \\<V> (\\<B> + mset_set \\<G>) 1\n\ngoal (1 subgoal):\n 1. pairwise_balance \\<V> (\\<B> + mset_set \\<G>) 1", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. PBD \\<V> (\\<B> + mset_set \\<G>) \\<K>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. PBD \\<V> (\\<B> + mset_set \\<G>) \\<K>", "using assms block_sizes groups_finite positive_ints"], ["proof (prove)\nusing this:\n  ?G \\<in> \\<G> \\<Longrightarrow> int (card ?G) \\<in> \\<K>\n  ?k \\<in> \\<K> \\<Longrightarrow> 2 \\<le> ?k\n  ?bl \\<in># \\<B> \\<Longrightarrow> int (card ?bl) \\<in> \\<K>\n  finite \\<G>\n  ?x \\<in> \\<K> \\<Longrightarrow> 0 < ?x\n\ngoal (1 subgoal):\n 1. PBD \\<V> (\\<B> + mset_set \\<G>) \\<K>", "by (unfold_locales) auto"], ["proof (state)\nthis:\n  PBD \\<V> (\\<B> + mset_set \\<G>) \\<K>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Prove adjoining a point to each group set results in a constant points index\\<close>"], ["", "lemma kgdd1_index_adjoin_group_block:\n  assumes \"x \\<notin> \\<V>\"\n  assumes \"ps \\<subseteq> insert x \\<V>\"\n  assumes \"card ps = 2\"\n  shows \"(\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps = 1", "have \"inj_on ((insert) x) \\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (insert x) \\<G>", "by (meson assms(1) inj_onI insert_ident point_in_group)"], ["proof (state)\nthis:\n  inj_on (insert x) \\<G>\n\ngoal (1 subgoal):\n 1. (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps = 1", "then"], ["proof (chain)\npicking this:\n  inj_on (insert x) \\<G>", "have eq: \"mset_set {insert x g |g. g \\<in> \\<G>} = {# insert x g . g \\<in># mset_set \\<G>#}\""], ["proof (prove)\nusing this:\n  inj_on (insert x) \\<G>\n\ngoal (1 subgoal):\n 1. mset_set {insert x g |g. g \\<in> \\<G>} =\n    image_mset (insert x) (mset_set \\<G>)", "by (simp add: image_mset_mset_set setcompr_eq_image)"], ["proof (state)\nthis:\n  mset_set {insert x g |g. g \\<in> \\<G>} =\n  image_mset (insert x) (mset_set \\<G>)\n\ngoal (1 subgoal):\n 1. (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps = 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  mset_set {insert x g |g. g \\<in> \\<G>} =\n  image_mset (insert x) (mset_set \\<G>)\n\ngoal (1 subgoal):\n 1. (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps = 1", "proof (cases \"x \\<in> ps\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<in> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1\n 2. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "case True"], ["proof (state)\nthis:\n  x \\<in> ps\n\ngoal (2 subgoals):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<in> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1\n 2. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "then"], ["proof (chain)\npicking this:\n  x \\<in> ps", "obtain y where y_ps: \"ps = {x, y}\""], ["proof (prove)\nusing this:\n  x \\<in> ps\n\ngoal (1 subgoal):\n 1. (\\<And>y. ps = {x, y} \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using assms(3)"], ["proof (prove)\nusing this:\n  x \\<in> ps\n  card ps = 2\n\ngoal (1 subgoal):\n 1. (\\<And>y. ps = {x, y} \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (metis card_2_iff doubleton_eq_iff insertE singletonD)"], ["proof (state)\nthis:\n  ps = {x, y}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<in> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1\n 2. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "then"], ["proof (chain)\npicking this:\n  ps = {x, y}", "have ynex: \"y \\<noteq> x\""], ["proof (prove)\nusing this:\n  ps = {x, y}\n\ngoal (1 subgoal):\n 1. y \\<noteq> x", "using assms"], ["proof (prove)\nusing this:\n  ps = {x, y}\n  x \\<notin> \\<V>\n  ps \\<subseteq> insert x \\<V>\n  card ps = 2\n\ngoal (1 subgoal):\n 1. y \\<noteq> x", "by fastforce"], ["proof (state)\nthis:\n  y \\<noteq> x\n\ngoal (2 subgoals):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<in> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1\n 2. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "have yinv: \"y \\<in> \\<V>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> \\<V>", "using assms(2) y_ps ynex"], ["proof (prove)\nusing this:\n  ps \\<subseteq> insert x \\<V>\n  ps = {x, y}\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. y \\<in> \\<V>", "by auto"], ["proof (state)\nthis:\n  y \\<in> \\<V>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<in> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1\n 2. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "have all_g: \"\\<And> g. g \\<in># (mset_set {insert x g |g. g \\<in> \\<G>}) \\<Longrightarrow> x \\<in> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g.\n       g \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n       x \\<in> g", "using eq"], ["proof (prove)\nusing this:\n  mset_set {insert x g |g. g \\<in> \\<G>} =\n  image_mset (insert x) (mset_set \\<G>)\n\ngoal (1 subgoal):\n 1. \\<And>g.\n       g \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n       x \\<in> g", "by force"], ["proof (state)\nthis:\n  ?g \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n  x \\<in> ?g\n\ngoal (2 subgoals):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<in> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1\n 2. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "have iff: \"\\<And> g . g \\<in> \\<G> \\<Longrightarrow> y \\<in> (insert x g) \\<longleftrightarrow> y \\<in> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g.\n       g \\<in> \\<G> \\<Longrightarrow> (y \\<in> insert x g) = (y \\<in> g)", "using ynex"], ["proof (prove)\nusing this:\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<And>g.\n       g \\<in> \\<G> \\<Longrightarrow> (y \\<in> insert x g) = (y \\<in> g)", "by simp"], ["proof (state)\nthis:\n  ?g \\<in> \\<G> \\<Longrightarrow> (y \\<in> insert x ?g) = (y \\<in> ?g)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<in> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1\n 2. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "have b: \"\\<B> index ps = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<B> index ps = 0", "using True assms(1) points_index_ps_nin"], ["proof (prove)\nusing this:\n  x \\<in> ps\n  x \\<notin> \\<V>\n  \\<not> ?ps \\<subseteq> \\<V> \\<Longrightarrow> \\<B> index ?ps = 0\n\ngoal (1 subgoal):\n 1. \\<B> index ps = 0", "by fastforce"], ["proof (state)\nthis:\n  \\<B> index ps = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<in> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1\n 2. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "then"], ["proof (chain)\npicking this:\n  \\<B> index ps = 0", "have \"(\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps = \n        (mset_set {insert x g |g. g \\<in> \\<G>}) index ps\""], ["proof (prove)\nusing this:\n  \\<B> index ps = 0\n\ngoal (1 subgoal):\n 1. (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps =\n    mset_set {insert x g |g. g \\<in> \\<G>} index ps", "using eq"], ["proof (prove)\nusing this:\n  \\<B> index ps = 0\n  mset_set {insert x g |g. g \\<in> \\<G>} =\n  image_mset (insert x) (mset_set \\<G>)\n\ngoal (1 subgoal):\n 1. (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps =\n    mset_set {insert x g |g. g \\<in> \\<G>} index ps", "by (simp add: point_index_distrib)"], ["proof (state)\nthis:\n  (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps =\n  mset_set {insert x g |g. g \\<in> \\<G>} index ps\n\ngoal (2 subgoals):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<in> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1\n 2. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "also"], ["proof (state)\nthis:\n  (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps =\n  mset_set {insert x g |g. g \\<in> \\<G>} index ps\n\ngoal (2 subgoals):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<in> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1\n 2. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "have  \"... = (mset_set {insert x g |g. g \\<in> \\<G>}) rep y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int (mset_set {insert x g |g. g \\<in> \\<G>} index ps) =\n    mset_set {insert x g |g. g \\<in> \\<G>} rep y", "using points_index_pair_rep_num"], ["proof (prove)\nusing this:\n  (\\<And>b. b \\<in># ?B \\<Longrightarrow> ?x \\<in> b) \\<Longrightarrow>\n  int (?B index {?x, ?y}) = ?B rep ?y\n\ngoal (1 subgoal):\n 1. int (mset_set {insert x g |g. g \\<in> \\<G>} index ps) =\n    mset_set {insert x g |g. g \\<in> \\<G>} rep y", "by (metis (no_types, lifting) all_g y_ps)"], ["proof (state)\nthis:\n  int (mset_set {insert x g |g. g \\<in> \\<G>} index ps) =\n  mset_set {insert x g |g. g \\<in> \\<G>} rep y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<in> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1\n 2. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "also"], ["proof (state)\nthis:\n  int (mset_set {insert x g |g. g \\<in> \\<G>} index ps) =\n  mset_set {insert x g |g. g \\<in> \\<G>} rep y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<in> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1\n 2. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "have 0: \"... = card {b \\<in> {insert x g |g. g \\<in> \\<G>} . y \\<in> b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mset_set {insert x g |g. g \\<in> \\<G>} rep y =\n    int (card {b \\<in> {insert x g |g. g \\<in> \\<G>}. y \\<in> b})", "by (simp add: groups_finite rep_number_on_set_def)"], ["proof (state)\nthis:\n  mset_set {insert x g |g. g \\<in> \\<G>} rep y =\n  int (card {b \\<in> {insert x g |g. g \\<in> \\<G>}. y \\<in> b})\n\ngoal (2 subgoals):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<in> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1\n 2. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "also"], ["proof (state)\nthis:\n  mset_set {insert x g |g. g \\<in> \\<G>} rep y =\n  int (card {b \\<in> {insert x g |g. g \\<in> \\<G>}. y \\<in> b})\n\ngoal (2 subgoals):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<in> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1\n 2. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "have 1: \"... = card {insert x g |g. g \\<in> \\<G> \\<and> y \\<in> insert x g}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int (card {b \\<in> {insert x g |g. g \\<in> \\<G>}. y \\<in> b}) =\n    int (card {insert x g |g. g \\<in> \\<G> \\<and> y \\<in> insert x g})", "by (smt (verit) Collect_cong mem_Collect_eq)"], ["proof (state)\nthis:\n  int (card {b \\<in> {insert x g |g. g \\<in> \\<G>}. y \\<in> b}) =\n  int (card {insert x g |g. g \\<in> \\<G> \\<and> y \\<in> insert x g})\n\ngoal (2 subgoals):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<in> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1\n 2. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "also"], ["proof (state)\nthis:\n  int (card {b \\<in> {insert x g |g. g \\<in> \\<G>}. y \\<in> b}) =\n  int (card {insert x g |g. g \\<in> \\<G> \\<and> y \\<in> insert x g})\n\ngoal (2 subgoals):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<in> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1\n 2. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "have 2: \" ... = card {insert x g |g. g \\<in> \\<G> \\<and> y \\<in> g}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int (card {insert x g |g. g \\<in> \\<G> \\<and> y \\<in> insert x g}) =\n    int (card {insert x g |g. g \\<in> \\<G> \\<and> y \\<in> g})", "using iff"], ["proof (prove)\nusing this:\n  ?g \\<in> \\<G> \\<Longrightarrow> (y \\<in> insert x ?g) = (y \\<in> ?g)\n\ngoal (1 subgoal):\n 1. int (card {insert x g |g. g \\<in> \\<G> \\<and> y \\<in> insert x g}) =\n    int (card {insert x g |g. g \\<in> \\<G> \\<and> y \\<in> g})", "by metis"], ["proof (state)\nthis:\n  int (card {insert x g |g. g \\<in> \\<G> \\<and> y \\<in> insert x g}) =\n  int (card {insert x g |g. g \\<in> \\<G> \\<and> y \\<in> g})\n\ngoal (2 subgoals):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<in> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1\n 2. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "also"], ["proof (state)\nthis:\n  int (card {insert x g |g. g \\<in> \\<G> \\<and> y \\<in> insert x g}) =\n  int (card {insert x g |g. g \\<in> \\<G> \\<and> y \\<in> g})\n\ngoal (2 subgoals):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<in> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1\n 2. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "have \"... = card {g \\<in> \\<G> . y \\<in> g}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int (card {insert x g |g. g \\<in> \\<G> \\<and> y \\<in> g}) =\n    int (card {g \\<in> \\<G>. y \\<in> g})", "using 1 2 0 empty_iff eq groups_finite ynex insert_iff"], ["proof (prove)\nusing this:\n  int (card {b \\<in> {insert x g |g. g \\<in> \\<G>}. y \\<in> b}) =\n  int (card {insert x g |g. g \\<in> \\<G> \\<and> y \\<in> insert x g})\n  int (card {insert x g |g. g \\<in> \\<G> \\<and> y \\<in> insert x g}) =\n  int (card {insert x g |g. g \\<in> \\<G> \\<and> y \\<in> g})\n  mset_set {insert x g |g. g \\<in> \\<G>} rep y =\n  int (card {b \\<in> {insert x g |g. g \\<in> \\<G>}. y \\<in> b})\n  (?c \\<in> {}) = False\n  mset_set {insert x g |g. g \\<in> \\<G>} =\n  image_mset (insert x) (mset_set \\<G>)\n  finite \\<G>\n  y \\<noteq> x\n  (?a \\<in> insert ?b ?A) = (?a = ?b \\<or> ?a \\<in> ?A)\n\ngoal (1 subgoal):\n 1. int (card {insert x g |g. g \\<in> \\<G> \\<and> y \\<in> g}) =\n    int (card {g \\<in> \\<G>. y \\<in> g})", "by (metis points_index_block_image_add_eq points_index_single_rep_num rep_number_on_set_def)"], ["proof (state)\nthis:\n  int (card {insert x g |g. g \\<in> \\<G> \\<and> y \\<in> g}) =\n  int (card {g \\<in> \\<G>. y \\<in> g})\n\ngoal (2 subgoals):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<in> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1\n 2. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "finally"], ["proof (chain)\npicking this:\n  int ((\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps) =\n  int (card {g \\<in> \\<G>. y \\<in> g})", "have \"(\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps = 1\""], ["proof (prove)\nusing this:\n  int ((\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps) =\n  int (card {g \\<in> \\<G>. y \\<in> g})\n\ngoal (1 subgoal):\n 1. (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps = 1", "using rep_number_point_group_one yinv"], ["proof (prove)\nusing this:\n  int ((\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps) =\n  int (card {g \\<in> \\<G>. y \\<in> g})\n  ?x \\<in> \\<V> \\<Longrightarrow> card {g \\<in> \\<G>. ?x \\<in> g} = 1\n  y \\<in> \\<V>\n\ngoal (1 subgoal):\n 1. (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps = 1", "by simp"], ["proof (state)\nthis:\n  (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps = 1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<in> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1\n 2. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "then"], ["proof (chain)\npicking this:\n  (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps = 1\n\ngoal (1 subgoal):\n 1. (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps = 1", "by simp"], ["proof (state)\nthis:\n  (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps = 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "case False"], ["proof (state)\nthis:\n  x \\<notin> ps\n\ngoal (1 subgoal):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "then"], ["proof (chain)\npicking this:\n  x \\<notin> ps", "have v: \"ps \\<subseteq> \\<V>\""], ["proof (prove)\nusing this:\n  x \\<notin> ps\n\ngoal (1 subgoal):\n 1. ps \\<subseteq> \\<V>", "using assms(2)"], ["proof (prove)\nusing this:\n  x \\<notin> ps\n  ps \\<subseteq> insert x \\<V>\n\ngoal (1 subgoal):\n 1. ps \\<subseteq> \\<V>", "by auto"], ["proof (state)\nthis:\n  ps \\<subseteq> \\<V>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "then"], ["proof (chain)\npicking this:\n  ps \\<subseteq> \\<V>", "have \"(\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps = (\\<B> + mset_set \\<G>) index ps\""], ["proof (prove)\nusing this:\n  ps \\<subseteq> \\<V>\n\ngoal (1 subgoal):\n 1. (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps =\n    (\\<B> + mset_set \\<G>) index ps", "using eq"], ["proof (prove)\nusing this:\n  ps \\<subseteq> \\<V>\n  mset_set {insert x g |g. g \\<in> \\<G>} =\n  image_mset (insert x) (mset_set \\<G>)\n\ngoal (1 subgoal):\n 1. (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps =\n    (\\<B> + mset_set \\<G>) index ps", "by (simp add: points_index_block_image_add_eq False point_index_distrib)"], ["proof (state)\nthis:\n  (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps =\n  (\\<B> + mset_set \\<G>) index ps\n\ngoal (1 subgoal):\n 1. \\<lbrakk>mset_set {insert x g |g. g \\<in> \\<G>} =\n             image_mset (insert x) (mset_set \\<G>);\n     x \\<notin> ps\\<rbrakk>\n    \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                      ps =\n                      1", "then"], ["proof (chain)\npicking this:\n  (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps =\n  (\\<B> + mset_set \\<G>) index ps", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps =\n  (\\<B> + mset_set \\<G>) index ps\n\ngoal (1 subgoal):\n 1. (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps = 1", "using v assms kgdd1_points_index_group_block"], ["proof (prove)\nusing this:\n  (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps =\n  (\\<B> + mset_set \\<G>) index ps\n  ps \\<subseteq> \\<V>\n  x \\<notin> \\<V>\n  ps \\<subseteq> insert x \\<V>\n  card ps = 2\n  \\<lbrakk>?ps \\<subseteq> \\<V>; card ?ps = 2\\<rbrakk>\n  \\<Longrightarrow> (\\<B> + mset_set \\<G>) index ?ps = 1\n\ngoal (1 subgoal):\n 1. (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps = 1", "by simp"], ["proof (state)\nthis:\n  (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pairwise_by_adjoining_point: \n  assumes \"x \\<notin> \\<V>\"\n  shows \"pairwise_balance (add_point x) (\\<B> + mset_set { insert x g | g. g \\<in> \\<G>}) 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pairwise_balance (add_point x)\n     (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pairwise_balance (add_point x)\n     (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) 1", "let ?B = \"\\<B> + mset_set { insert x g | g. g \\<in> \\<G>}\""], ["proof (state)\ngoal (1 subgoal):\n 1. pairwise_balance (add_point x)\n     (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) 1", "let ?V = \"add_point x\""], ["proof (state)\ngoal (1 subgoal):\n 1. pairwise_balance (add_point x)\n     (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) 1", "have vdef: \"?V = \\<V> \\<union> {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. add_point x = \\<V> \\<union> {x}", "using add_point_def"], ["proof (prove)\nusing this:\n  add_point ?p \\<equiv> insert ?p \\<V>\n\ngoal (1 subgoal):\n 1. add_point x = \\<V> \\<union> {x}", "by simp"], ["proof (state)\nthis:\n  add_point x = \\<V> \\<union> {x}\n\ngoal (1 subgoal):\n 1. pairwise_balance (add_point x)\n     (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) 1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. pairwise_balance (add_point x)\n     (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) 1", "unfolding add_point_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. pairwise_balance (insert x \\<V>)\n     (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) 1", "using finite_sets b_positive"], ["proof (prove)\nusing this:\n  finite \\<V>\n  0 < \\<b>\n\ngoal (1 subgoal):\n 1. pairwise_balance (insert x \\<V>)\n     (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) 1", "proof (unfold_locales, simp_all)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>b \\<in># \\<B> \\<or>\n                b \\<in># mset_set {insert x g |g. g \\<in> \\<G>};\n        finite \\<V>; 0 < size \\<B>\\<rbrakk>\n       \\<Longrightarrow> b \\<subseteq> insert x \\<V>\n 2. \\<And>bl.\n       \\<lbrakk>bl \\<in># \\<B> \\<or>\n                bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>};\n        finite \\<V>; 0 < size \\<B>\\<rbrakk>\n       \\<Longrightarrow> bl \\<noteq> {}\n 3. \\<lbrakk>finite \\<V>; 0 < size \\<B>\\<rbrakk>\n    \\<Longrightarrow> 2 \\<le> int (card (insert x \\<V>))\n 4. \\<And>ps.\n       \\<lbrakk>ps \\<subseteq> insert x \\<V>; card ps = 2; finite \\<V>;\n        0 < size \\<B>\\<rbrakk>\n       \\<Longrightarrow> (\\<B> +\n                          mset_set {insert x g |g. g \\<in> \\<G>}) index\n                         ps =\n                         Suc 0", "have \"\\<And> G. G \\<in> \\<G> \\<Longrightarrow> insert x G \\<subseteq> ?V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>G.\n       G \\<in> \\<G> \\<Longrightarrow> insert x G \\<subseteq> add_point x", "by (simp add: point_in_group subsetI vdef)"], ["proof (state)\nthis:\n  ?G \\<in> \\<G> \\<Longrightarrow> insert x ?G \\<subseteq> add_point x\n\ngoal (4 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>b \\<in># \\<B> \\<or>\n                b \\<in># mset_set {insert x g |g. g \\<in> \\<G>};\n        finite \\<V>; 0 < size \\<B>\\<rbrakk>\n       \\<Longrightarrow> b \\<subseteq> insert x \\<V>\n 2. \\<And>bl.\n       \\<lbrakk>bl \\<in># \\<B> \\<or>\n                bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>};\n        finite \\<V>; 0 < size \\<B>\\<rbrakk>\n       \\<Longrightarrow> bl \\<noteq> {}\n 3. \\<lbrakk>finite \\<V>; 0 < size \\<B>\\<rbrakk>\n    \\<Longrightarrow> 2 \\<le> int (card (insert x \\<V>))\n 4. \\<And>ps.\n       \\<lbrakk>ps \\<subseteq> insert x \\<V>; card ps = 2; finite \\<V>;\n        0 < size \\<B>\\<rbrakk>\n       \\<Longrightarrow> (\\<B> +\n                          mset_set {insert x g |g. g \\<in> \\<G>}) index\n                         ps =\n                         Suc 0", "then"], ["proof (chain)\npicking this:\n  ?G \\<in> \\<G> \\<Longrightarrow> insert x ?G \\<subseteq> add_point x", "have \"\\<And> G. G \\<in># (mset_set { insert x g | g. g \\<in> \\<G>}) \\<Longrightarrow> G \\<subseteq> ?V\""], ["proof (prove)\nusing this:\n  ?G \\<in> \\<G> \\<Longrightarrow> insert x ?G \\<subseteq> add_point x\n\ngoal (1 subgoal):\n 1. \\<And>G.\n       G \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n       G \\<subseteq> add_point x", "by (smt (verit, del_insts) elem_mset_set empty_iff infinite_set_mset_mset_set mem_Collect_eq)"], ["proof (state)\nthis:\n  ?G \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n  ?G \\<subseteq> add_point x\n\ngoal (4 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>b \\<in># \\<B> \\<or>\n                b \\<in># mset_set {insert x g |g. g \\<in> \\<G>};\n        finite \\<V>; 0 < size \\<B>\\<rbrakk>\n       \\<Longrightarrow> b \\<subseteq> insert x \\<V>\n 2. \\<And>bl.\n       \\<lbrakk>bl \\<in># \\<B> \\<or>\n                bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>};\n        finite \\<V>; 0 < size \\<B>\\<rbrakk>\n       \\<Longrightarrow> bl \\<noteq> {}\n 3. \\<lbrakk>finite \\<V>; 0 < size \\<B>\\<rbrakk>\n    \\<Longrightarrow> 2 \\<le> int (card (insert x \\<V>))\n 4. \\<And>ps.\n       \\<lbrakk>ps \\<subseteq> insert x \\<V>; card ps = 2; finite \\<V>;\n        0 < size \\<B>\\<rbrakk>\n       \\<Longrightarrow> (\\<B> +\n                          mset_set {insert x g |g. g \\<in> \\<G>}) index\n                         ps =\n                         Suc 0", "then"], ["proof (chain)\npicking this:\n  ?G \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n  ?G \\<subseteq> add_point x", "show \"\\<And>b. b \\<in># \\<B> \\<or> b \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow> b \\<subseteq> insert x \\<V>\""], ["proof (prove)\nusing this:\n  ?G \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n  ?G \\<subseteq> add_point x\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in># \\<B> \\<or>\n       b \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n       b \\<subseteq> insert x \\<V>", "using wellformed add_point_def"], ["proof (prove)\nusing this:\n  ?G \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n  ?G \\<subseteq> add_point x\n  ?b \\<in># \\<B> \\<Longrightarrow> ?b \\<subseteq> \\<V>\n  add_point ?p \\<equiv> insert ?p \\<V>\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in># \\<B> \\<or>\n       b \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n       b \\<subseteq> insert x \\<V>", "by fastforce"], ["proof (state)\nthis:\n  ?b \\<in># \\<B> \\<or>\n  ?b \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n  ?b \\<subseteq> insert x \\<V>\n\ngoal (3 subgoals):\n 1. \\<And>bl.\n       \\<lbrakk>bl \\<in># \\<B> \\<or>\n                bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>};\n        finite \\<V>; 0 < size \\<B>\\<rbrakk>\n       \\<Longrightarrow> bl \\<noteq> {}\n 2. \\<lbrakk>finite \\<V>; 0 < size \\<B>\\<rbrakk>\n    \\<Longrightarrow> 2 \\<le> int (card (insert x \\<V>))\n 3. \\<And>ps.\n       \\<lbrakk>ps \\<subseteq> insert x \\<V>; card ps = 2; finite \\<V>;\n        0 < size \\<B>\\<rbrakk>\n       \\<Longrightarrow> (\\<B> +\n                          mset_set {insert x g |g. g \\<in> \\<G>}) index\n                         ps =\n                         Suc 0", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>bl.\n       \\<lbrakk>bl \\<in># \\<B> \\<or>\n                bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>};\n        finite \\<V>; 0 < size \\<B>\\<rbrakk>\n       \\<Longrightarrow> bl \\<noteq> {}\n 2. \\<lbrakk>finite \\<V>; 0 < size \\<B>\\<rbrakk>\n    \\<Longrightarrow> 2 \\<le> int (card (insert x \\<V>))\n 3. \\<And>ps.\n       \\<lbrakk>ps \\<subseteq> insert x \\<V>; card ps = 2; finite \\<V>;\n        0 < size \\<B>\\<rbrakk>\n       \\<Longrightarrow> (\\<B> +\n                          mset_set {insert x g |g. g \\<in> \\<G>}) index\n                         ps =\n                         Suc 0", "have \"\\<And> G. G \\<in> \\<G> \\<Longrightarrow> insert x G \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>G. G \\<in> \\<G> \\<Longrightarrow> insert x G \\<noteq> {}", "using group_partitions"], ["proof (prove)\nusing this:\n  partition_on \\<V> \\<G>\n\ngoal (1 subgoal):\n 1. \\<And>G. G \\<in> \\<G> \\<Longrightarrow> insert x G \\<noteq> {}", "using partition_onD3"], ["proof (prove)\nusing this:\n  partition_on \\<V> \\<G>\n  partition_on ?A ?P \\<Longrightarrow> {} \\<notin> ?P\n\ngoal (1 subgoal):\n 1. \\<And>G. G \\<in> \\<G> \\<Longrightarrow> insert x G \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  ?G \\<in> \\<G> \\<Longrightarrow> insert x ?G \\<noteq> {}\n\ngoal (3 subgoals):\n 1. \\<And>bl.\n       \\<lbrakk>bl \\<in># \\<B> \\<or>\n                bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>};\n        finite \\<V>; 0 < size \\<B>\\<rbrakk>\n       \\<Longrightarrow> bl \\<noteq> {}\n 2. \\<lbrakk>finite \\<V>; 0 < size \\<B>\\<rbrakk>\n    \\<Longrightarrow> 2 \\<le> int (card (insert x \\<V>))\n 3. \\<And>ps.\n       \\<lbrakk>ps \\<subseteq> insert x \\<V>; card ps = 2; finite \\<V>;\n        0 < size \\<B>\\<rbrakk>\n       \\<Longrightarrow> (\\<B> +\n                          mset_set {insert x g |g. g \\<in> \\<G>}) index\n                         ps =\n                         Suc 0", "then"], ["proof (chain)\npicking this:\n  ?G \\<in> \\<G> \\<Longrightarrow> insert x ?G \\<noteq> {}", "have gnempty: \"\\<And> G. G \\<in># (mset_set { insert x g | g. g \\<in> \\<G>}) \\<Longrightarrow> G \\<noteq> {}\""], ["proof (prove)\nusing this:\n  ?G \\<in> \\<G> \\<Longrightarrow> insert x ?G \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>G.\n       G \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n       G \\<noteq> {}", "by (smt (verit, del_insts) elem_mset_set empty_iff infinite_set_mset_mset_set mem_Collect_eq)"], ["proof (state)\nthis:\n  ?G \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n  ?G \\<noteq> {}\n\ngoal (3 subgoals):\n 1. \\<And>bl.\n       \\<lbrakk>bl \\<in># \\<B> \\<or>\n                bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>};\n        finite \\<V>; 0 < size \\<B>\\<rbrakk>\n       \\<Longrightarrow> bl \\<noteq> {}\n 2. \\<lbrakk>finite \\<V>; 0 < size \\<B>\\<rbrakk>\n    \\<Longrightarrow> 2 \\<le> int (card (insert x \\<V>))\n 3. \\<And>ps.\n       \\<lbrakk>ps \\<subseteq> insert x \\<V>; card ps = 2; finite \\<V>;\n        0 < size \\<B>\\<rbrakk>\n       \\<Longrightarrow> (\\<B> +\n                          mset_set {insert x g |g. g \\<in> \\<G>}) index\n                         ps =\n                         Suc 0", "then"], ["proof (chain)\npicking this:\n  ?G \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n  ?G \\<noteq> {}", "show \"\\<And>bl. bl \\<in># \\<B> \\<or> bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow> bl \\<noteq> {}\""], ["proof (prove)\nusing this:\n  ?G \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n  ?G \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>bl.\n       bl \\<in># \\<B> \\<or>\n       bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n       bl \\<noteq> {}", "using blocks_nempty"], ["proof (prove)\nusing this:\n  ?G \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n  ?G \\<noteq> {}\n  ?bl \\<in># \\<B> \\<Longrightarrow> ?bl \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>bl.\n       bl \\<in># \\<B> \\<or>\n       bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n       bl \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  ?bl \\<in># \\<B> \\<or>\n  ?bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n  ?bl \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>finite \\<V>; 0 < size \\<B>\\<rbrakk>\n    \\<Longrightarrow> 2 \\<le> int (card (insert x \\<V>))\n 2. \\<And>ps.\n       \\<lbrakk>ps \\<subseteq> insert x \\<V>; card ps = 2; finite \\<V>;\n        0 < size \\<B>\\<rbrakk>\n       \\<Longrightarrow> (\\<B> +\n                          mset_set {insert x g |g. g \\<in> \\<G>}) index\n                         ps =\n                         Suc 0", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite \\<V>; 0 < size \\<B>\\<rbrakk>\n    \\<Longrightarrow> 2 \\<le> int (card (insert x \\<V>))\n 2. \\<And>ps.\n       \\<lbrakk>ps \\<subseteq> insert x \\<V>; card ps = 2; finite \\<V>;\n        0 < size \\<B>\\<rbrakk>\n       \\<Longrightarrow> (\\<B> +\n                          mset_set {insert x g |g. g \\<in> \\<G>}) index\n                         ps =\n                         Suc 0", "have \"card \\<V> \\<ge> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<le> card \\<V>", "using gdd_min_v"], ["proof (prove)\nusing this:\n  2 \\<le> \\<v>\n\ngoal (1 subgoal):\n 1. 2 \\<le> card \\<V>", "by simp"], ["proof (state)\nthis:\n  2 \\<le> card \\<V>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>finite \\<V>; 0 < size \\<B>\\<rbrakk>\n    \\<Longrightarrow> 2 \\<le> int (card (insert x \\<V>))\n 2. \\<And>ps.\n       \\<lbrakk>ps \\<subseteq> insert x \\<V>; card ps = 2; finite \\<V>;\n        0 < size \\<B>\\<rbrakk>\n       \\<Longrightarrow> (\\<B> +\n                          mset_set {insert x g |g. g \\<in> \\<G>}) index\n                         ps =\n                         Suc 0", "then"], ["proof (chain)\npicking this:\n  2 \\<le> card \\<V>", "have \"card (insert x \\<V>) \\<ge> 2\""], ["proof (prove)\nusing this:\n  2 \\<le> card \\<V>\n\ngoal (1 subgoal):\n 1. 2 \\<le> card (insert x \\<V>)", "by (meson card_insert_le dual_order.trans finite_sets)"], ["proof (state)\nthis:\n  2 \\<le> card (insert x \\<V>)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>finite \\<V>; 0 < size \\<B>\\<rbrakk>\n    \\<Longrightarrow> 2 \\<le> int (card (insert x \\<V>))\n 2. \\<And>ps.\n       \\<lbrakk>ps \\<subseteq> insert x \\<V>; card ps = 2; finite \\<V>;\n        0 < size \\<B>\\<rbrakk>\n       \\<Longrightarrow> (\\<B> +\n                          mset_set {insert x g |g. g \\<in> \\<G>}) index\n                         ps =\n                         Suc 0", "then"], ["proof (chain)\npicking this:\n  2 \\<le> card (insert x \\<V>)", "show \"2 \\<le> int (card (insert x \\<V>))\""], ["proof (prove)\nusing this:\n  2 \\<le> card (insert x \\<V>)\n\ngoal (1 subgoal):\n 1. 2 \\<le> int (card (insert x \\<V>))", "by auto"], ["proof (state)\nthis:\n  2 \\<le> int (card (insert x \\<V>))\n\ngoal (1 subgoal):\n 1. \\<And>ps.\n       \\<lbrakk>ps \\<subseteq> insert x \\<V>; card ps = 2; finite \\<V>;\n        0 < size \\<B>\\<rbrakk>\n       \\<Longrightarrow> (\\<B> +\n                          mset_set {insert x g |g. g \\<in> \\<G>}) index\n                         ps =\n                         Suc 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ps.\n       \\<lbrakk>ps \\<subseteq> insert x \\<V>; card ps = 2; finite \\<V>;\n        0 < size \\<B>\\<rbrakk>\n       \\<Longrightarrow> (\\<B> +\n                          mset_set {insert x g |g. g \\<in> \\<G>}) index\n                         ps =\n                         Suc 0", "show \"\\<And>ps. ps \\<subseteq> insert x \\<V> \\<Longrightarrow>\n          card ps = 2 \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index ps = Suc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ps.\n       \\<lbrakk>ps \\<subseteq> insert x \\<V>; card ps = 2\\<rbrakk>\n       \\<Longrightarrow> (\\<B> +\n                          mset_set {insert x g |g. g \\<in> \\<G>}) index\n                         ps =\n                         Suc 0", "using kgdd1_index_adjoin_group_block"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<notin> \\<V>; ?ps \\<subseteq> insert ?x \\<V>;\n   card ?ps = 2\\<rbrakk>\n  \\<Longrightarrow> (\\<B> + mset_set {insert ?x g |g. g \\<in> \\<G>}) index\n                    ?ps =\n                    1\n\ngoal (1 subgoal):\n 1. \\<And>ps.\n       \\<lbrakk>ps \\<subseteq> insert x \\<V>; card ps = 2\\<rbrakk>\n       \\<Longrightarrow> (\\<B> +\n                          mset_set {insert x g |g. g \\<in> \\<G>}) index\n                         ps =\n                         Suc 0", "by (simp add: assms)"], ["proof (state)\nthis:\n  \\<lbrakk>?ps \\<subseteq> insert x \\<V>; card ?ps = 2\\<rbrakk>\n  \\<Longrightarrow> (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) index\n                    ?ps =\n                    Suc 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pairwise_balance (add_point x)\n   (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma PBD_by_adjoining_point: \n  assumes \"x \\<notin> \\<V>\"\n  assumes \"\\<And> k . k \\<in> \\<K> \\<Longrightarrow> k \\<ge> 2\"\n  shows \"PBD (add_point x) (\\<B> + mset_set { insert x g | g. g \\<in> \\<G>}) (\\<K> \\<union> {(card g) + 1 | g . g \\<in> \\<G>})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PBD (add_point x) (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>})\n     (\\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. PBD (add_point x) (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>})\n     (\\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>})", "let ?B = \"\\<B> + mset_set { insert x g | g. g \\<in> \\<G>}\""], ["proof (state)\ngoal (1 subgoal):\n 1. PBD (add_point x) (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>})\n     (\\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>})", "let ?V = \"(add_point x)\""], ["proof (state)\ngoal (1 subgoal):\n 1. PBD (add_point x) (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>})\n     (\\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>})", "interpret inc: pairwise_balance ?V ?B 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. pairwise_balance (add_point x)\n     (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) 1", "using pairwise_by_adjoining_point assms"], ["proof (prove)\nusing this:\n  ?x \\<notin> \\<V> \\<Longrightarrow>\n  pairwise_balance (add_point ?x)\n   (\\<B> + mset_set {insert ?x g |g. g \\<in> \\<G>}) 1\n  x \\<notin> \\<V>\n  ?k \\<in> \\<K> \\<Longrightarrow> 2 \\<le> ?k\n\ngoal (1 subgoal):\n 1. pairwise_balance (add_point x)\n     (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) 1", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. PBD (add_point x) (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>})\n     (\\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>})", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. PBD (add_point x) (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>})\n     (\\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>})", "using  block_sizes positive_ints"], ["proof (prove)\nusing this:\n  ?bl \\<in># \\<B> \\<Longrightarrow> int (card ?bl) \\<in> \\<K>\n  ?x \\<in> \\<K> \\<Longrightarrow> 0 < ?x\n\ngoal (1 subgoal):\n 1. PBD (add_point x) (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>})\n     (\\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>})", "proof (unfold_locales)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>bl.\n       \\<lbrakk>\\<And>bl.\n                   bl \\<in># \\<B> \\<Longrightarrow>\n                   int (card bl) \\<in> \\<K>;\n        \\<And>x. x \\<in> \\<K> \\<Longrightarrow> 0 < x;\n        bl \\<in># \\<B> + mset_set {insert x g |g. g \\<in> \\<G>}\\<rbrakk>\n       \\<Longrightarrow> int (card bl)\n                         \\<in> \\<K> \\<union>\n                               {int (card g + 1) |g. g \\<in> \\<G>}\n 2. \\<And>x.\n       \\<lbrakk>\\<And>bl.\n                   bl \\<in># \\<B> \\<Longrightarrow>\n                   int (card bl) \\<in> \\<K>;\n        \\<And>x. x \\<in> \\<K> \\<Longrightarrow> 0 < x;\n        x \\<in> \\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>}\\<rbrakk>\n       \\<Longrightarrow> 0 < x\n 3. \\<And>k.\n       \\<lbrakk>\\<And>bl.\n                   bl \\<in># \\<B> \\<Longrightarrow>\n                   int (card bl) \\<in> \\<K>;\n        \\<And>x. x \\<in> \\<K> \\<Longrightarrow> 0 < x;\n        k \\<in> \\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>}\\<rbrakk>\n       \\<Longrightarrow> 2 \\<le> k", "have xg: \"\\<And> g. g \\<in> \\<G> \\<Longrightarrow> x \\<notin> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g. g \\<in> \\<G> \\<Longrightarrow> x \\<notin> g", "using assms point_in_group"], ["proof (prove)\nusing this:\n  x \\<notin> \\<V>\n  ?k \\<in> \\<K> \\<Longrightarrow> 2 \\<le> ?k\n  \\<lbrakk>?G \\<in> \\<G>; ?x \\<in> ?G\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> \\<V>\n\ngoal (1 subgoal):\n 1. \\<And>g. g \\<in> \\<G> \\<Longrightarrow> x \\<notin> g", "by auto"], ["proof (state)\nthis:\n  ?g \\<in> \\<G> \\<Longrightarrow> x \\<notin> ?g\n\ngoal (3 subgoals):\n 1. \\<And>bl.\n       \\<lbrakk>\\<And>bl.\n                   bl \\<in># \\<B> \\<Longrightarrow>\n                   int (card bl) \\<in> \\<K>;\n        \\<And>x. x \\<in> \\<K> \\<Longrightarrow> 0 < x;\n        bl \\<in># \\<B> + mset_set {insert x g |g. g \\<in> \\<G>}\\<rbrakk>\n       \\<Longrightarrow> int (card bl)\n                         \\<in> \\<K> \\<union>\n                               {int (card g + 1) |g. g \\<in> \\<G>}\n 2. \\<And>x.\n       \\<lbrakk>\\<And>bl.\n                   bl \\<in># \\<B> \\<Longrightarrow>\n                   int (card bl) \\<in> \\<K>;\n        \\<And>x. x \\<in> \\<K> \\<Longrightarrow> 0 < x;\n        x \\<in> \\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>}\\<rbrakk>\n       \\<Longrightarrow> 0 < x\n 3. \\<And>k.\n       \\<lbrakk>\\<And>bl.\n                   bl \\<in># \\<B> \\<Longrightarrow>\n                   int (card bl) \\<in> \\<K>;\n        \\<And>x. x \\<in> \\<K> \\<Longrightarrow> 0 < x;\n        k \\<in> \\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>}\\<rbrakk>\n       \\<Longrightarrow> 2 \\<le> k", "have \"\\<And> bl . bl \\<in># \\<B> \\<Longrightarrow> card bl \\<in> \\<K>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>bl. bl \\<in># \\<B> \\<Longrightarrow> int (card bl) \\<in> \\<K>", "by (simp add: block_sizes)"], ["proof (state)\nthis:\n  ?bl \\<in># \\<B> \\<Longrightarrow> int (card ?bl) \\<in> \\<K>\n\ngoal (3 subgoals):\n 1. \\<And>bl.\n       \\<lbrakk>\\<And>bl.\n                   bl \\<in># \\<B> \\<Longrightarrow>\n                   int (card bl) \\<in> \\<K>;\n        \\<And>x. x \\<in> \\<K> \\<Longrightarrow> 0 < x;\n        bl \\<in># \\<B> + mset_set {insert x g |g. g \\<in> \\<G>}\\<rbrakk>\n       \\<Longrightarrow> int (card bl)\n                         \\<in> \\<K> \\<union>\n                               {int (card g + 1) |g. g \\<in> \\<G>}\n 2. \\<And>x.\n       \\<lbrakk>\\<And>bl.\n                   bl \\<in># \\<B> \\<Longrightarrow>\n                   int (card bl) \\<in> \\<K>;\n        \\<And>x. x \\<in> \\<K> \\<Longrightarrow> 0 < x;\n        x \\<in> \\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>}\\<rbrakk>\n       \\<Longrightarrow> 0 < x\n 3. \\<And>k.\n       \\<lbrakk>\\<And>bl.\n                   bl \\<in># \\<B> \\<Longrightarrow>\n                   int (card bl) \\<in> \\<K>;\n        \\<And>x. x \\<in> \\<K> \\<Longrightarrow> 0 < x;\n        k \\<in> \\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>}\\<rbrakk>\n       \\<Longrightarrow> 2 \\<le> k", "have \"\\<And> bl . bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow> bl \\<in> {insert x g | g . g \\<in> \\<G>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>bl.\n       bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n       bl \\<in> {insert x g |g. g \\<in> \\<G>}", "by (simp add: groups_finite)"], ["proof (state)\nthis:\n  ?bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n  ?bl \\<in> {insert x g |g. g \\<in> \\<G>}\n\ngoal (3 subgoals):\n 1. \\<And>bl.\n       \\<lbrakk>\\<And>bl.\n                   bl \\<in># \\<B> \\<Longrightarrow>\n                   int (card bl) \\<in> \\<K>;\n        \\<And>x. x \\<in> \\<K> \\<Longrightarrow> 0 < x;\n        bl \\<in># \\<B> + mset_set {insert x g |g. g \\<in> \\<G>}\\<rbrakk>\n       \\<Longrightarrow> int (card bl)\n                         \\<in> \\<K> \\<union>\n                               {int (card g + 1) |g. g \\<in> \\<G>}\n 2. \\<And>x.\n       \\<lbrakk>\\<And>bl.\n                   bl \\<in># \\<B> \\<Longrightarrow>\n                   int (card bl) \\<in> \\<K>;\n        \\<And>x. x \\<in> \\<K> \\<Longrightarrow> 0 < x;\n        x \\<in> \\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>}\\<rbrakk>\n       \\<Longrightarrow> 0 < x\n 3. \\<And>k.\n       \\<lbrakk>\\<And>bl.\n                   bl \\<in># \\<B> \\<Longrightarrow>\n                   int (card bl) \\<in> \\<K>;\n        \\<And>x. x \\<in> \\<K> \\<Longrightarrow> 0 < x;\n        k \\<in> \\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>}\\<rbrakk>\n       \\<Longrightarrow> 2 \\<le> k", "then"], ["proof (chain)\npicking this:\n  ?bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n  ?bl \\<in> {insert x g |g. g \\<in> \\<G>}", "have \"\\<And> bl . bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow> \n      card bl \\<in>  {int (card g + 1) |g. g \\<in> \\<G>}\""], ["proof (prove)\nusing this:\n  ?bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n  ?bl \\<in> {insert x g |g. g \\<in> \\<G>}\n\ngoal (1 subgoal):\n 1. \\<And>bl.\n       bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n       card bl\n       \\<in> {uu_.\n              \\<exists>g. int uu_ = int (card g + 1) \\<and> g \\<in> \\<G>}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bl.\n       \\<lbrakk>bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>};\n        \\<And>bl.\n           bl \\<in># mset_set\n                      {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n           bl \\<in> {insert x g |g. g \\<in> \\<G>}\\<rbrakk>\n       \\<Longrightarrow> card bl\n                         \\<in> {uu_.\n                                \\<exists>g.\n                                   int uu_ = int (card g + 1) \\<and>\n                                   g \\<in> \\<G>}", "fix bl"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bl.\n       \\<lbrakk>bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>};\n        \\<And>bl.\n           bl \\<in># mset_set\n                      {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n           bl \\<in> {insert x g |g. g \\<in> \\<G>}\\<rbrakk>\n       \\<Longrightarrow> card bl\n                         \\<in> {uu_.\n                                \\<exists>g.\n                                   int uu_ = int (card g + 1) \\<and>\n                                   g \\<in> \\<G>}", "assume \"bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>}\""], ["proof (state)\nthis:\n  bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>}\n\ngoal (1 subgoal):\n 1. \\<And>bl.\n       \\<lbrakk>bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>};\n        \\<And>bl.\n           bl \\<in># mset_set\n                      {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n           bl \\<in> {insert x g |g. g \\<in> \\<G>}\\<rbrakk>\n       \\<Longrightarrow> card bl\n                         \\<in> {uu_.\n                                \\<exists>g.\n                                   int uu_ = int (card g + 1) \\<and>\n                                   g \\<in> \\<G>}", "then"], ["proof (chain)\npicking this:\n  bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>}", "have \"bl \\<in> {insert x g | g . g \\<in> \\<G>}\""], ["proof (prove)\nusing this:\n  bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>}\n\ngoal (1 subgoal):\n 1. bl \\<in> {insert x g |g. g \\<in> \\<G>}", "by (simp add: groups_finite)"], ["proof (state)\nthis:\n  bl \\<in> {insert x g |g. g \\<in> \\<G>}\n\ngoal (1 subgoal):\n 1. \\<And>bl.\n       \\<lbrakk>bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>};\n        \\<And>bl.\n           bl \\<in># mset_set\n                      {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n           bl \\<in> {insert x g |g. g \\<in> \\<G>}\\<rbrakk>\n       \\<Longrightarrow> card bl\n                         \\<in> {uu_.\n                                \\<exists>g.\n                                   int uu_ = int (card g + 1) \\<and>\n                                   g \\<in> \\<G>}", "then"], ["proof (chain)\npicking this:\n  bl \\<in> {insert x g |g. g \\<in> \\<G>}", "obtain g where gin: \"g \\<in> \\<G>\" and i: \"bl = insert x g\""], ["proof (prove)\nusing this:\n  bl \\<in> {insert x g |g. g \\<in> \\<G>}\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> \\<G>; bl = insert x g\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g \\<in> \\<G>\n  bl = insert x g\n\ngoal (1 subgoal):\n 1. \\<And>bl.\n       \\<lbrakk>bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>};\n        \\<And>bl.\n           bl \\<in># mset_set\n                      {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n           bl \\<in> {insert x g |g. g \\<in> \\<G>}\\<rbrakk>\n       \\<Longrightarrow> card bl\n                         \\<in> {uu_.\n                                \\<exists>g.\n                                   int uu_ = int (card g + 1) \\<and>\n                                   g \\<in> \\<G>}", "thus \"card bl \\<in>  {int (card g + 1) |g. g \\<in> \\<G>}\""], ["proof (prove)\nusing this:\n  g \\<in> \\<G>\n  bl = insert x g\n\ngoal (1 subgoal):\n 1. card bl\n    \\<in> {uu_. \\<exists>g. int uu_ = int (card g + 1) \\<and> g \\<in> \\<G>}", "using gin group_elements_finite i xg"], ["proof (prove)\nusing this:\n  g \\<in> \\<G>\n  bl = insert x g\n  g \\<in> \\<G>\n  ?G \\<in> \\<G> \\<Longrightarrow> finite ?G\n  bl = insert x g\n  ?g \\<in> \\<G> \\<Longrightarrow> x \\<notin> ?g\n\ngoal (1 subgoal):\n 1. card bl\n    \\<in> {uu_. \\<exists>g. int uu_ = int (card g + 1) \\<and> g \\<in> \\<G>}", "by auto"], ["proof (state)\nthis:\n  card bl\n  \\<in> {uu_. \\<exists>g. int uu_ = int (card g + 1) \\<and> g \\<in> \\<G>}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n  card ?bl\n  \\<in> {uu_. \\<exists>g. int uu_ = int (card g + 1) \\<and> g \\<in> \\<G>}\n\ngoal (3 subgoals):\n 1. \\<And>bl.\n       \\<lbrakk>\\<And>bl.\n                   bl \\<in># \\<B> \\<Longrightarrow>\n                   int (card bl) \\<in> \\<K>;\n        \\<And>x. x \\<in> \\<K> \\<Longrightarrow> 0 < x;\n        bl \\<in># \\<B> + mset_set {insert x g |g. g \\<in> \\<G>}\\<rbrakk>\n       \\<Longrightarrow> int (card bl)\n                         \\<in> \\<K> \\<union>\n                               {int (card g + 1) |g. g \\<in> \\<G>}\n 2. \\<And>x.\n       \\<lbrakk>\\<And>bl.\n                   bl \\<in># \\<B> \\<Longrightarrow>\n                   int (card bl) \\<in> \\<K>;\n        \\<And>x. x \\<in> \\<K> \\<Longrightarrow> 0 < x;\n        x \\<in> \\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>}\\<rbrakk>\n       \\<Longrightarrow> 0 < x\n 3. \\<And>k.\n       \\<lbrakk>\\<And>bl.\n                   bl \\<in># \\<B> \\<Longrightarrow>\n                   int (card bl) \\<in> \\<K>;\n        \\<And>x. x \\<in> \\<K> \\<Longrightarrow> 0 < x;\n        k \\<in> \\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>}\\<rbrakk>\n       \\<Longrightarrow> 2 \\<le> k", "then"], ["proof (chain)\npicking this:\n  ?bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n  card ?bl\n  \\<in> {uu_. \\<exists>g. int uu_ = int (card g + 1) \\<and> g \\<in> \\<G>}", "show \"\\<And>bl. bl \\<in># \\<B> + mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow> \n        int (card bl) \\<in> \\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>}\""], ["proof (prove)\nusing this:\n  ?bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n  card ?bl\n  \\<in> {uu_. \\<exists>g. int uu_ = int (card g + 1) \\<and> g \\<in> \\<G>}\n\ngoal (1 subgoal):\n 1. \\<And>bl.\n       bl \\<in># \\<B> +\n                 mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n       int (card bl) \\<in> \\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>}", "using  UnI1 UnI2 block_sizes union_iff"], ["proof (prove)\nusing this:\n  ?bl \\<in># mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n  card ?bl\n  \\<in> {uu_. \\<exists>g. int uu_ = int (card g + 1) \\<and> g \\<in> \\<G>}\n  ?c \\<in> ?A \\<Longrightarrow> ?c \\<in> ?A \\<union> ?B\n  ?c \\<in> ?B \\<Longrightarrow> ?c \\<in> ?A \\<union> ?B\n  ?bl \\<in># \\<B> \\<Longrightarrow> int (card ?bl) \\<in> \\<K>\n  (?a \\<in># ?A + ?B) = (?a \\<in># ?A \\<or> ?a \\<in># ?B)\n\ngoal (1 subgoal):\n 1. \\<And>bl.\n       bl \\<in># \\<B> +\n                 mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n       int (card bl) \\<in> \\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>}", "by (smt (z3) mem_Collect_eq)"], ["proof (state)\nthis:\n  ?bl \\<in># \\<B> + mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n  int (card ?bl) \\<in> \\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>bl.\n                   bl \\<in># \\<B> \\<Longrightarrow>\n                   int (card bl) \\<in> \\<K>;\n        \\<And>x. x \\<in> \\<K> \\<Longrightarrow> 0 < x;\n        x \\<in> \\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>}\\<rbrakk>\n       \\<Longrightarrow> 0 < x\n 2. \\<And>k.\n       \\<lbrakk>\\<And>bl.\n                   bl \\<in># \\<B> \\<Longrightarrow>\n                   int (card bl) \\<in> \\<K>;\n        \\<And>x. x \\<in> \\<K> \\<Longrightarrow> 0 < x;\n        k \\<in> \\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>}\\<rbrakk>\n       \\<Longrightarrow> 2 \\<le> k", "show \"\\<And>x. x \\<in> \\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>} \\<Longrightarrow> 0 < x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<K> \\<union>\n               {int (card g + 1) |g. g \\<in> \\<G>} \\<Longrightarrow>\n       0 < x", "using min_group_size positive_ints"], ["proof (prove)\nusing this:\n  ?G \\<in> \\<G> \\<Longrightarrow> 1 \\<le> card ?G\n  ?x \\<in> \\<K> \\<Longrightarrow> 0 < ?x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<K> \\<union>\n               {int (card g + 1) |g. g \\<in> \\<G>} \\<Longrightarrow>\n       0 < x", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> \\<K> \\<union>\n           {int (card g + 1) |g. g \\<in> \\<G>} \\<Longrightarrow>\n  0 < ?x\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<And>bl.\n                   bl \\<in># \\<B> \\<Longrightarrow>\n                   int (card bl) \\<in> \\<K>;\n        \\<And>x. x \\<in> \\<K> \\<Longrightarrow> 0 < x;\n        k \\<in> \\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>}\\<rbrakk>\n       \\<Longrightarrow> 2 \\<le> k", "show \"\\<And>k.  k \\<in> \\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>} \\<Longrightarrow> 2 \\<le> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> \\<K> \\<union>\n               {int (card g + 1) |g. g \\<in> \\<G>} \\<Longrightarrow>\n       2 \\<le> k", "using min_group_size positive_ints assms"], ["proof (prove)\nusing this:\n  ?G \\<in> \\<G> \\<Longrightarrow> 1 \\<le> card ?G\n  ?x \\<in> \\<K> \\<Longrightarrow> 0 < ?x\n  x \\<notin> \\<V>\n  ?k \\<in> \\<K> \\<Longrightarrow> 2 \\<le> ?k\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<in> \\<K> \\<union>\n               {int (card g + 1) |g. g \\<in> \\<G>} \\<Longrightarrow>\n       2 \\<le> k", "by fastforce"], ["proof (state)\nthis:\n  ?k \\<in> \\<K> \\<union>\n           {int (card g + 1) |g. g \\<in> \\<G>} \\<Longrightarrow>\n  2 \\<le> ?k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  PBD (add_point x) (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>})\n   (\\<K> \\<union> {int (card g + 1) |g. g \\<in> \\<G>})\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Wilson's Construction\\<close>"], ["", "text \\<open>Wilson's construction involves the combination of multiple k-GDD's. This proof was\nbased of Stinson \\cite{stinsonCombinatorialDesignsConstructions2004}\\<close>"], ["", "lemma wilsons_construction_proper: \n  assumes \"card I = w\"\n  assumes \"w > 0\"\n  assumes \"\\<And> n. n \\<in> \\<K>' \\<Longrightarrow> n \\<ge> 2\"\n  assumes \"\\<And> B . B \\<in># \\<B> \\<Longrightarrow> K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x . x \\<in> B }\"\n  shows \"proper_design (\\<V> \\<times> I) (\\<Sum>B \\<in># \\<B>. (f B))\" (is \"proper_design ?Y ?B\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. proper_design (\\<V> \\<times> I) (\\<Sum>\\<^sub># (image_mset f \\<B>))", "proof (unfold_locales, simp_all)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>b.\n       \\<exists>x\\<in>#\\<B>. b \\<in># f x \\<Longrightarrow>\n       b \\<subseteq> \\<V> \\<times> I\n 2. finite (\\<V> \\<times> I)\n 3. \\<And>bl.\n       \\<exists>x\\<in>#\\<B>. bl \\<in># f x \\<Longrightarrow> bl \\<noteq> {}\n 4. \\<exists>i\\<in>#\\<B>. f i \\<noteq> {#}", "show \"\\<And>b. \\<exists>x\\<in>#\\<B>. b \\<in># f x \\<Longrightarrow> b \\<subseteq> \\<V> \\<times> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<exists>x\\<in>#\\<B>. b \\<in># f x \\<Longrightarrow>\n       b \\<subseteq> \\<V> \\<times> I", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<exists>x\\<in>#\\<B>. b \\<in># f x \\<Longrightarrow>\n       b \\<subseteq> \\<V> \\<times> I", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<exists>x\\<in>#\\<B>. b \\<in># f x \\<Longrightarrow>\n       b \\<subseteq> \\<V> \\<times> I", "assume \"\\<exists>x\\<in>#\\<B>. b \\<in># f x\""], ["proof (state)\nthis:\n  \\<exists>x\\<in>#\\<B>. b \\<in># f x\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<exists>x\\<in>#\\<B>. b \\<in># f x \\<Longrightarrow>\n       b \\<subseteq> \\<V> \\<times> I", "then"], ["proof (chain)\npicking this:\n  \\<exists>x\\<in>#\\<B>. b \\<in># f x", "obtain B where \"B \\<in># \\<B>\" and \"b \\<in># (f B)\""], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>#\\<B>. b \\<in># f x\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>B \\<in># \\<B>; b \\<in># f B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  B \\<in># \\<B>\n  b \\<in># f B\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<exists>x\\<in>#\\<B>. b \\<in># f x \\<Longrightarrow>\n       b \\<subseteq> \\<V> \\<times> I", "then"], ["proof (chain)\npicking this:\n  B \\<in># \\<B>\n  b \\<in># f B", "interpret kgdd: K_GDD \"(B \\<times> I)\" \"(f B)\" \\<K>' \"{{x} \\<times> I |x . x \\<in> B }\""], ["proof (prove)\nusing this:\n  B \\<in># \\<B>\n  b \\<in># f B\n\ngoal (1 subgoal):\n 1. K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x. x \\<in> B}", "using assms"], ["proof (prove)\nusing this:\n  B \\<in># \\<B>\n  b \\<in># f B\n  card I = w\n  0 < w\n  ?n \\<in> \\<K>' \\<Longrightarrow> 2 \\<le> ?n\n  ?B \\<in># \\<B> \\<Longrightarrow>\n  K_GDD (?B \\<times> I) (f ?B) \\<K>' {{x} \\<times> I |x. x \\<in> ?B}\n\ngoal (1 subgoal):\n 1. K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x. x \\<in> B}", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<exists>x\\<in>#\\<B>. b \\<in># f x \\<Longrightarrow>\n       b \\<subseteq> \\<V> \\<times> I", "show \"b \\<subseteq> \\<V> \\<times> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<subseteq> \\<V> \\<times> I", "using kgdd.wellformed"], ["proof (prove)\nusing this:\n  ?b \\<in># f B \\<Longrightarrow> ?b \\<subseteq> B \\<times> I\n\ngoal (1 subgoal):\n 1. b \\<subseteq> \\<V> \\<times> I", "using \\<open>B \\<in># \\<B>\\<close> \\<open>b \\<in># f B\\<close> wellformed"], ["proof (prove)\nusing this:\n  ?b \\<in># f B \\<Longrightarrow> ?b \\<subseteq> B \\<times> I\n  B \\<in># \\<B>\n  b \\<in># f B\n  ?b \\<in># \\<B> \\<Longrightarrow> ?b \\<subseteq> \\<V>\n\ngoal (1 subgoal):\n 1. b \\<subseteq> \\<V> \\<times> I", "by fastforce"], ["proof (state)\nthis:\n  b \\<subseteq> \\<V> \\<times> I\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x\\<in>#\\<B>. ?b \\<in># f x \\<Longrightarrow>\n  ?b \\<subseteq> \\<V> \\<times> I\n\ngoal (3 subgoals):\n 1. finite (\\<V> \\<times> I)\n 2. \\<And>bl.\n       \\<exists>x\\<in>#\\<B>. bl \\<in># f x \\<Longrightarrow> bl \\<noteq> {}\n 3. \\<exists>i\\<in>#\\<B>. f i \\<noteq> {#}", "show \"finite (\\<V> \\<times> I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (\\<V> \\<times> I)", "using finite_sets assms bot_nat_0.not_eq_extremum card.infinite"], ["proof (prove)\nusing this:\n  finite \\<V>\n  card I = w\n  0 < w\n  ?n \\<in> \\<K>' \\<Longrightarrow> 2 \\<le> ?n\n  ?B \\<in># \\<B> \\<Longrightarrow>\n  K_GDD (?B \\<times> I) (f ?B) \\<K>' {{x} \\<times> I |x. x \\<in> ?B}\n  (?a \\<noteq> 0) = (0 < ?a)\n  infinite ?A \\<Longrightarrow> card ?A = 0\n\ngoal (1 subgoal):\n 1. finite (\\<V> \\<times> I)", "by blast"], ["proof (state)\nthis:\n  finite (\\<V> \\<times> I)\n\ngoal (2 subgoals):\n 1. \\<And>bl.\n       \\<exists>x\\<in>#\\<B>. bl \\<in># f x \\<Longrightarrow> bl \\<noteq> {}\n 2. \\<exists>i\\<in>#\\<B>. f i \\<noteq> {#}", "show \"\\<And>bl. \\<exists>x\\<in>#\\<B>. bl \\<in># f x \\<Longrightarrow> bl \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>bl.\n       \\<exists>x\\<in>#\\<B>. bl \\<in># f x \\<Longrightarrow> bl \\<noteq> {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bl.\n       \\<exists>x\\<in>#\\<B>. bl \\<in># f x \\<Longrightarrow> bl \\<noteq> {}", "fix bl"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bl.\n       \\<exists>x\\<in>#\\<B>. bl \\<in># f x \\<Longrightarrow> bl \\<noteq> {}", "assume \"\\<exists>x\\<in>#\\<B>. bl \\<in># f x\""], ["proof (state)\nthis:\n  \\<exists>x\\<in>#\\<B>. bl \\<in># f x\n\ngoal (1 subgoal):\n 1. \\<And>bl.\n       \\<exists>x\\<in>#\\<B>. bl \\<in># f x \\<Longrightarrow> bl \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  \\<exists>x\\<in>#\\<B>. bl \\<in># f x", "obtain B where \"B \\<in># \\<B>\" and \"bl \\<in># (f B)\""], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>#\\<B>. bl \\<in># f x\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>B \\<in># \\<B>; bl \\<in># f B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  B \\<in># \\<B>\n  bl \\<in># f B\n\ngoal (1 subgoal):\n 1. \\<And>bl.\n       \\<exists>x\\<in>#\\<B>. bl \\<in># f x \\<Longrightarrow> bl \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  B \\<in># \\<B>\n  bl \\<in># f B", "interpret kgdd: K_GDD \"(B \\<times> I)\" \"(f B)\" \\<K>' \"{{x} \\<times> I |x . x \\<in> B }\""], ["proof (prove)\nusing this:\n  B \\<in># \\<B>\n  bl \\<in># f B\n\ngoal (1 subgoal):\n 1. K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x. x \\<in> B}", "using assms"], ["proof (prove)\nusing this:\n  B \\<in># \\<B>\n  bl \\<in># f B\n  card I = w\n  0 < w\n  ?n \\<in> \\<K>' \\<Longrightarrow> 2 \\<le> ?n\n  ?B \\<in># \\<B> \\<Longrightarrow>\n  K_GDD (?B \\<times> I) (f ?B) \\<K>' {{x} \\<times> I |x. x \\<in> ?B}\n\ngoal (1 subgoal):\n 1. K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x. x \\<in> B}", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bl.\n       \\<exists>x\\<in>#\\<B>. bl \\<in># f x \\<Longrightarrow> bl \\<noteq> {}", "show \"bl \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bl \\<noteq> {}", "using kgdd.blocks_nempty"], ["proof (prove)\nusing this:\n  ?bl \\<in># f B \\<Longrightarrow> ?bl \\<noteq> {}\n\ngoal (1 subgoal):\n 1. bl \\<noteq> {}", "by (simp add: \\<open>bl \\<in># f B\\<close>)"], ["proof (state)\nthis:\n  bl \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x\\<in>#\\<B>. ?bl \\<in># f x \\<Longrightarrow> ?bl \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>#\\<B>. f i \\<noteq> {#}", "show \"\\<exists>i\\<in>#\\<B>. f i \\<noteq> {#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>#\\<B>. f i \\<noteq> {#}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>#\\<B>. f i \\<noteq> {#}", "obtain B where \"B \\<in># \\<B>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B. B \\<in># \\<B> \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using design_blocks_nempty"], ["proof (prove)\nusing this:\n  \\<B> \\<noteq> {#}\n\ngoal (1 subgoal):\n 1. (\\<And>B. B \\<in># \\<B> \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  B \\<in># \\<B>\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>#\\<B>. f i \\<noteq> {#}", "then"], ["proof (chain)\npicking this:\n  B \\<in># \\<B>", "interpret kgdd: K_GDD \"(B \\<times> I)\" \"(f B)\" \\<K>' \"{{x} \\<times> I |x . x \\<in> B }\""], ["proof (prove)\nusing this:\n  B \\<in># \\<B>\n\ngoal (1 subgoal):\n 1. K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x. x \\<in> B}", "using assms"], ["proof (prove)\nusing this:\n  B \\<in># \\<B>\n  card I = w\n  0 < w\n  ?n \\<in> \\<K>' \\<Longrightarrow> 2 \\<le> ?n\n  ?B \\<in># \\<B> \\<Longrightarrow>\n  K_GDD (?B \\<times> I) (f ?B) \\<K>' {{x} \\<times> I |x. x \\<in> ?B}\n\ngoal (1 subgoal):\n 1. K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x. x \\<in> B}", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>#\\<B>. f i \\<noteq> {#}", "have \"f B \\<noteq> {#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f B \\<noteq> {#}", "using kgdd.design_blocks_nempty"], ["proof (prove)\nusing this:\n  f B \\<noteq> {#}\n\ngoal (1 subgoal):\n 1. f B \\<noteq> {#}", "by simp"], ["proof (state)\nthis:\n  f B \\<noteq> {#}\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>#\\<B>. f i \\<noteq> {#}", "then"], ["proof (chain)\npicking this:\n  f B \\<noteq> {#}", "show \"\\<exists>i\\<in>#\\<B>. f i \\<noteq> {#}\""], ["proof (prove)\nusing this:\n  f B \\<noteq> {#}\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>#\\<B>. f i \\<noteq> {#}", "using \\<open>B \\<in># \\<B>\\<close>"], ["proof (prove)\nusing this:\n  f B \\<noteq> {#}\n  B \\<in># \\<B>\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>#\\<B>. f i \\<noteq> {#}", "by auto"], ["proof (state)\nthis:\n  \\<exists>i\\<in>#\\<B>. f i \\<noteq> {#}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i\\<in>#\\<B>. f i \\<noteq> {#}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pair_construction_block_sizes: \n  assumes \"K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x . x \\<in> B }\"\n  assumes \"B \\<in># \\<B>\"\n  assumes \"b \\<in># (f B)\"\n  shows \"card b \\<in> \\<K>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int (card b) \\<in> \\<K>'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. int (card b) \\<in> \\<K>'", "interpret bkgdd: K_GDD \"(B \\<times> I)\" \"(f B)\" \\<K>' \"{{x} \\<times> I |x . x \\<in> B }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x. x \\<in> B}", "using assms"], ["proof (prove)\nusing this:\n  K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x. x \\<in> B}\n  B \\<in># \\<B>\n  b \\<in># f B\n\ngoal (1 subgoal):\n 1. K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x. x \\<in> B}", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. int (card b) \\<in> \\<K>'", "show \"card b \\<in> \\<K>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int (card b) \\<in> \\<K>'", "using bkgdd.block_sizes"], ["proof (prove)\nusing this:\n  ?bl \\<in># f B \\<Longrightarrow> int (card ?bl) \\<in> \\<K>'\n\ngoal (1 subgoal):\n 1. int (card b) \\<in> \\<K>'", "by (simp add:assms)"], ["proof (state)\nthis:\n  int (card b) \\<in> \\<K>'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wilsons_construction_index_0: \n  assumes \"\\<And> B . B \\<in># \\<B> \\<Longrightarrow> K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x . x \\<in> B }\"\n  assumes \"G \\<in> {GG \\<times> I |GG. GG \\<in> \\<G>}\"\n  assumes \"X \\<in> G\" \n  assumes \"Y \\<in> G\" \n  assumes \"X \\<noteq> Y\"\n  shows \"(\\<Sum>\\<^sub># (image_mset f \\<B>)) index {X, Y} = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub># (image_mset f \\<B>) index {X, Y} = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub># (image_mset f \\<B>) index {X, Y} = 0", "obtain G' where gi: \"G = G' \\<times> I\" and ging: \"G' \\<in> \\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>G'.\n        \\<lbrakk>G = G' \\<times> I; G' \\<in> \\<G>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  ?B \\<in># \\<B> \\<Longrightarrow>\n  K_GDD (?B \\<times> I) (f ?B) \\<K>' {{x} \\<times> I |x. x \\<in> ?B}\n  G \\<in> {GG \\<times> I |GG. GG \\<in> \\<G>}\n  X \\<in> G\n  Y \\<in> G\n  X \\<noteq> Y\n\ngoal (1 subgoal):\n 1. (\\<And>G'.\n        \\<lbrakk>G = G' \\<times> I; G' \\<in> \\<G>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  G = G' \\<times> I\n  G' \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub># (image_mset f \\<B>) index {X, Y} = 0", "obtain x y ix iy where xpair: \"X = (x, ix)\" and ypair: \"Y = (y, iy)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x ix y iy.\n        \\<lbrakk>X = (x, ix); Y = (y, iy)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  ?B \\<in># \\<B> \\<Longrightarrow>\n  K_GDD (?B \\<times> I) (f ?B) \\<K>' {{x} \\<times> I |x. x \\<in> ?B}\n  G \\<in> {GG \\<times> I |GG. GG \\<in> \\<G>}\n  X \\<in> G\n  Y \\<in> G\n  X \\<noteq> Y\n\ngoal (1 subgoal):\n 1. (\\<And>x ix y iy.\n        \\<lbrakk>X = (x, ix); Y = (y, iy)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  X = (x, ix)\n  Y = (y, iy)\n\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub># (image_mset f \\<B>) index {X, Y} = 0", "then"], ["proof (chain)\npicking this:\n  X = (x, ix)\n  Y = (y, iy)", "have ixin: \"ix \\<in> I\" and xing: \"x \\<in> G'\""], ["proof (prove)\nusing this:\n  X = (x, ix)\n  Y = (y, iy)\n\ngoal (1 subgoal):\n 1. ix \\<in> I &&& x \\<in> G'", "using assms gi"], ["proof (prove)\nusing this:\n  X = (x, ix)\n  Y = (y, iy)\n  ?B \\<in># \\<B> \\<Longrightarrow>\n  K_GDD (?B \\<times> I) (f ?B) \\<K>' {{x} \\<times> I |x. x \\<in> ?B}\n  G \\<in> {GG \\<times> I |GG. GG \\<in> \\<G>}\n  X \\<in> G\n  Y \\<in> G\n  X \\<noteq> Y\n  G = G' \\<times> I\n\ngoal (1 subgoal):\n 1. ix \\<in> I &&& x \\<in> G'", "by auto"], ["proof (state)\nthis:\n  ix \\<in> I\n  x \\<in> G'\n\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub># (image_mset f \\<B>) index {X, Y} = 0", "have iyin: \"iy \\<in> I\" and ying: \"y \\<in> G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iy \\<in> I &&& y \\<in> G'", "using assms ypair gi"], ["proof (prove)\nusing this:\n  ?B \\<in># \\<B> \\<Longrightarrow>\n  K_GDD (?B \\<times> I) (f ?B) \\<K>' {{x} \\<times> I |x. x \\<in> ?B}\n  G \\<in> {GG \\<times> I |GG. GG \\<in> \\<G>}\n  X \\<in> G\n  Y \\<in> G\n  X \\<noteq> Y\n  Y = (y, iy)\n  G = G' \\<times> I\n\ngoal (1 subgoal):\n 1. iy \\<in> I &&& y \\<in> G'", "by auto"], ["proof (state)\nthis:\n  iy \\<in> I\n  y \\<in> G'\n\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub># (image_mset f \\<B>) index {X, Y} = 0", "have ne_index_0: \"x \\<noteq> y \\<Longrightarrow> \\<B> index {x, y} = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> \\<B> index {x, y} = 0", "using ying xing index_together ging"], ["proof (prove)\nusing this:\n  y \\<in> G'\n  x \\<in> G'\n  \\<lbrakk>?G \\<in> \\<G>; ?x \\<in> ?G; ?y \\<in> ?G; ?x \\<noteq> ?y\\<rbrakk>\n  \\<Longrightarrow> \\<B> index {?x, ?y} = 0\n  G' \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> \\<B> index {x, y} = 0", "by simp"], ["proof (state)\nthis:\n  x \\<noteq> y \\<Longrightarrow> \\<B> index {x, y} = 0\n\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub># (image_mset f \\<B>) index {X, Y} = 0", "have \"\\<And> B. B \\<in># \\<B> \\<Longrightarrow> (f B) index {(x, ix), (y, iy)} = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in># \\<B> \\<Longrightarrow> f B index {(x, ix), (y, iy)} = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in># \\<B> \\<Longrightarrow> f B index {(x, ix), (y, iy)} = 0", "fix B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in># \\<B> \\<Longrightarrow> f B index {(x, ix), (y, iy)} = 0", "assume assm: \"B \\<in># \\<B>\""], ["proof (state)\nthis:\n  B \\<in># \\<B>\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in># \\<B> \\<Longrightarrow> f B index {(x, ix), (y, iy)} = 0", "then"], ["proof (chain)\npicking this:\n  B \\<in># \\<B>", "interpret kgdd: K_GDD \"(B \\<times> I)\" \"(f B)\" \\<K>' \"{{x} \\<times> I |x . x \\<in> B }\""], ["proof (prove)\nusing this:\n  B \\<in># \\<B>\n\ngoal (1 subgoal):\n 1. K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x. x \\<in> B}", "using assms"], ["proof (prove)\nusing this:\n  B \\<in># \\<B>\n  ?B \\<in># \\<B> \\<Longrightarrow>\n  K_GDD (?B \\<times> I) (f ?B) \\<K>' {{x} \\<times> I |x. x \\<in> ?B}\n  G \\<in> {GG \\<times> I |GG. GG \\<in> \\<G>}\n  X \\<in> G\n  Y \\<in> G\n  X \\<noteq> Y\n\ngoal (1 subgoal):\n 1. K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x. x \\<in> B}", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in># \\<B> \\<Longrightarrow> f B index {(x, ix), (y, iy)} = 0", "have not_ss_0: \"\\<not> ({(x, ix), (y, iy)} \\<subseteq> (B \\<times> I)) \\<Longrightarrow> (f B) index {(x, ix), (y, iy)} = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> {(x, ix), (y, iy)} \\<subseteq> B \\<times> I \\<Longrightarrow>\n    f B index {(x, ix), (y, iy)} = 0", "by (metis kgdd.points_index_ps_nin)"], ["proof (state)\nthis:\n  \\<not> {(x, ix), (y, iy)} \\<subseteq> B \\<times> I \\<Longrightarrow>\n  f B index {(x, ix), (y, iy)} = 0\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in># \\<B> \\<Longrightarrow> f B index {(x, ix), (y, iy)} = 0", "have \"x \\<noteq> y \\<Longrightarrow> \\<not> {x, y} \\<subseteq> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> \\<not> {x, y} \\<subseteq> B", "using ne_index_0 assm points_index_0_left_imp"], ["proof (prove)\nusing this:\n  x \\<noteq> y \\<Longrightarrow> \\<B> index {x, y} = 0\n  B \\<in># \\<B>\n  \\<lbrakk>?B index ?ps = 0; ?b \\<in># ?B\\<rbrakk>\n  \\<Longrightarrow> \\<not> ?ps \\<subseteq> ?b\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> \\<not> {x, y} \\<subseteq> B", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> y \\<Longrightarrow> \\<not> {x, y} \\<subseteq> B\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in># \\<B> \\<Longrightarrow> f B index {(x, ix), (y, iy)} = 0", "then"], ["proof (chain)\npicking this:\n  x \\<noteq> y \\<Longrightarrow> \\<not> {x, y} \\<subseteq> B", "have \"x \\<noteq> y \\<Longrightarrow> \\<not> ({(x, ix), (y, iy)} \\<subseteq> (B \\<times> I))\""], ["proof (prove)\nusing this:\n  x \\<noteq> y \\<Longrightarrow> \\<not> {x, y} \\<subseteq> B\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow>\n    \\<not> {(x, ix), (y, iy)} \\<subseteq> B \\<times> I", "using assms"], ["proof (prove)\nusing this:\n  x \\<noteq> y \\<Longrightarrow> \\<not> {x, y} \\<subseteq> B\n  ?B \\<in># \\<B> \\<Longrightarrow>\n  K_GDD (?B \\<times> I) (f ?B) \\<K>' {{x} \\<times> I |x. x \\<in> ?B}\n  G \\<in> {GG \\<times> I |GG. GG \\<in> \\<G>}\n  X \\<in> G\n  Y \\<in> G\n  X \\<noteq> Y\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow>\n    \\<not> {(x, ix), (y, iy)} \\<subseteq> B \\<times> I", "by (meson empty_subsetI insert_subset mem_Sigma_iff)"], ["proof (state)\nthis:\n  x \\<noteq> y \\<Longrightarrow>\n  \\<not> {(x, ix), (y, iy)} \\<subseteq> B \\<times> I\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in># \\<B> \\<Longrightarrow> f B index {(x, ix), (y, iy)} = 0", "then"], ["proof (chain)\npicking this:\n  x \\<noteq> y \\<Longrightarrow>\n  \\<not> {(x, ix), (y, iy)} \\<subseteq> B \\<times> I", "have nexy: \"x \\<noteq> y \\<Longrightarrow> (f B) index {(x, ix), (y, iy)} = 0\""], ["proof (prove)\nusing this:\n  x \\<noteq> y \\<Longrightarrow>\n  \\<not> {(x, ix), (y, iy)} \\<subseteq> B \\<times> I\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> f B index {(x, ix), (y, iy)} = 0", "using not_ss_0"], ["proof (prove)\nusing this:\n  x \\<noteq> y \\<Longrightarrow>\n  \\<not> {(x, ix), (y, iy)} \\<subseteq> B \\<times> I\n  \\<not> {(x, ix), (y, iy)} \\<subseteq> B \\<times> I \\<Longrightarrow>\n  f B index {(x, ix), (y, iy)} = 0\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> f B index {(x, ix), (y, iy)} = 0", "by simp"], ["proof (state)\nthis:\n  x \\<noteq> y \\<Longrightarrow> f B index {(x, ix), (y, iy)} = 0\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in># \\<B> \\<Longrightarrow> f B index {(x, ix), (y, iy)} = 0", "have \"x = y \\<Longrightarrow> ({(x, ix), (y, iy)} \\<subseteq> (B \\<times> I)) \\<Longrightarrow> (f B) index {(x, ix), (y, iy)} = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y; {(x, ix), (y, iy)} \\<subseteq> B \\<times> I\\<rbrakk>\n    \\<Longrightarrow> f B index {(x, ix), (y, iy)} = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y; {(x, ix), (y, iy)} \\<subseteq> B \\<times> I\\<rbrakk>\n    \\<Longrightarrow> f B index {(x, ix), (y, iy)} = 0", "assume eq: \"x = y\""], ["proof (state)\nthis:\n  x = y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y; {(x, ix), (y, iy)} \\<subseteq> B \\<times> I\\<rbrakk>\n    \\<Longrightarrow> f B index {(x, ix), (y, iy)} = 0", "assume \"({(x, ix), (y, iy)} \\<subseteq> (B \\<times> I))\""], ["proof (state)\nthis:\n  {(x, ix), (y, iy)} \\<subseteq> B \\<times> I\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y; {(x, ix), (y, iy)} \\<subseteq> B \\<times> I\\<rbrakk>\n    \\<Longrightarrow> f B index {(x, ix), (y, iy)} = 0", "then"], ["proof (chain)\npicking this:\n  {(x, ix), (y, iy)} \\<subseteq> B \\<times> I", "obtain g where \"g \\<in> {{x} \\<times> I |x . x \\<in> B }\" and \"(x, ix) \\<in> g\" and \"(y, ix) \\<in> g\""], ["proof (prove)\nusing this:\n  {(x, ix), (y, iy)} \\<subseteq> B \\<times> I\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> {{x} \\<times> I |x. x \\<in> B}; (x, ix) \\<in> g;\n         (y, ix) \\<in> g\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using eq"], ["proof (prove)\nusing this:\n  {(x, ix), (y, iy)} \\<subseteq> B \\<times> I\n  x = y\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> {{x} \\<times> I |x. x \\<in> B}; (x, ix) \\<in> g;\n         (y, ix) \\<in> g\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g \\<in> {{x} \\<times> I |x. x \\<in> B}\n  (x, ix) \\<in> g\n  (y, ix) \\<in> g\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y; {(x, ix), (y, iy)} \\<subseteq> B \\<times> I\\<rbrakk>\n    \\<Longrightarrow> f B index {(x, ix), (y, iy)} = 0", "then"], ["proof (chain)\npicking this:\n  g \\<in> {{x} \\<times> I |x. x \\<in> B}\n  (x, ix) \\<in> g\n  (y, ix) \\<in> g", "show ?thesis"], ["proof (prove)\nusing this:\n  g \\<in> {{x} \\<times> I |x. x \\<in> B}\n  (x, ix) \\<in> g\n  (y, ix) \\<in> g\n\ngoal (1 subgoal):\n 1. f B index {(x, ix), (y, iy)} = 0", "using kgdd.index_together"], ["proof (prove)\nusing this:\n  g \\<in> {{x} \\<times> I |x. x \\<in> B}\n  (x, ix) \\<in> g\n  (y, ix) \\<in> g\n  \\<lbrakk>?G \\<in> {{x} \\<times> I |x. x \\<in> B}; ?x \\<in> ?G;\n   ?y \\<in> ?G; ?x \\<noteq> ?y\\<rbrakk>\n  \\<Longrightarrow> f B index {?x, ?y} = 0\n\ngoal (1 subgoal):\n 1. f B index {(x, ix), (y, iy)} = 0", "by (smt (verit, best) SigmaD1 SigmaD2 SigmaI assms(4) assms(5) gi mem_Collect_eq xpair ypair)"], ["proof (state)\nthis:\n  f B index {(x, ix), (y, iy)} = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>x = y; {(x, ix), (y, iy)} \\<subseteq> B \\<times> I\\<rbrakk>\n  \\<Longrightarrow> f B index {(x, ix), (y, iy)} = 0\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in># \\<B> \\<Longrightarrow> f B index {(x, ix), (y, iy)} = 0", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>x = y; {(x, ix), (y, iy)} \\<subseteq> B \\<times> I\\<rbrakk>\n  \\<Longrightarrow> f B index {(x, ix), (y, iy)} = 0", "show \"(f B) index {(x, ix), (y, iy)} = 0\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x = y; {(x, ix), (y, iy)} \\<subseteq> B \\<times> I\\<rbrakk>\n  \\<Longrightarrow> f B index {(x, ix), (y, iy)} = 0\n\ngoal (1 subgoal):\n 1. f B index {(x, ix), (y, iy)} = 0", "using not_ss_0 nexy"], ["proof (prove)\nusing this:\n  \\<lbrakk>x = y; {(x, ix), (y, iy)} \\<subseteq> B \\<times> I\\<rbrakk>\n  \\<Longrightarrow> f B index {(x, ix), (y, iy)} = 0\n  \\<not> {(x, ix), (y, iy)} \\<subseteq> B \\<times> I \\<Longrightarrow>\n  f B index {(x, ix), (y, iy)} = 0\n  x \\<noteq> y \\<Longrightarrow> f B index {(x, ix), (y, iy)} = 0\n\ngoal (1 subgoal):\n 1. f B index {(x, ix), (y, iy)} = 0", "by auto"], ["proof (state)\nthis:\n  f B index {(x, ix), (y, iy)} = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?B \\<in># \\<B> \\<Longrightarrow> f ?B index {(x, ix), (y, iy)} = 0\n\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub># (image_mset f \\<B>) index {X, Y} = 0", "then"], ["proof (chain)\npicking this:\n  ?B \\<in># \\<B> \\<Longrightarrow> f ?B index {(x, ix), (y, iy)} = 0", "have \"\\<And> B. B \\<in># (image_mset f \\<B>) \\<Longrightarrow> B index {(x, ix), (y, iy)} = 0\""], ["proof (prove)\nusing this:\n  ?B \\<in># \\<B> \\<Longrightarrow> f ?B index {(x, ix), (y, iy)} = 0\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in># image_mset f \\<B> \\<Longrightarrow>\n       B index {(x, ix), (y, iy)} = 0", "by auto"], ["proof (state)\nthis:\n  ?B \\<in># image_mset f \\<B> \\<Longrightarrow>\n  ?B index {(x, ix), (y, iy)} = 0\n\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub># (image_mset f \\<B>) index {X, Y} = 0", "then"], ["proof (chain)\npicking this:\n  ?B \\<in># image_mset f \\<B> \\<Longrightarrow>\n  ?B index {(x, ix), (y, iy)} = 0", "show \"(\\<Sum>\\<^sub># (image_mset f \\<B>)) index {X, Y} = 0\""], ["proof (prove)\nusing this:\n  ?B \\<in># image_mset f \\<B> \\<Longrightarrow>\n  ?B index {(x, ix), (y, iy)} = 0\n\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub># (image_mset f \\<B>) index {X, Y} = 0", "by (simp add: points_index_sum xpair ypair)"], ["proof (state)\nthis:\n  \\<Sum>\\<^sub># (image_mset f \\<B>) index {X, Y} = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wilsons_construction_index_1: \n  assumes \"\\<And> B . B \\<in># \\<B> \\<Longrightarrow> K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x . x \\<in> B }\"\n  assumes \"G1 \\<in> {G \\<times> I |G. G \\<in> \\<G>}\"\n  assumes \"G2 \\<in> {G \\<times> I |G. G \\<in> \\<G>}\"\n  assumes \"G1 \\<noteq> G2\"\n  and \"(x, ix) \\<in> G1\" and \"(y, iy) \\<in> G2\" \n  shows \"(\\<Sum>\\<^sub># (image_mset f \\<B>)) index {(x, ix), (y, iy)} = (1 ::int)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int (\\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)}) = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. int (\\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)}) = 1", "obtain G1' where gi1: \"G1 = G1' \\<times> I\" and ging1: \"G1' \\<in> \\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>G1'.\n        \\<lbrakk>G1 = G1' \\<times> I; G1' \\<in> \\<G>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  ?B \\<in># \\<B> \\<Longrightarrow>\n  K_GDD (?B \\<times> I) (f ?B) \\<K>' {{x} \\<times> I |x. x \\<in> ?B}\n  G1 \\<in> {G \\<times> I |G. G \\<in> \\<G>}\n  G2 \\<in> {G \\<times> I |G. G \\<in> \\<G>}\n  G1 \\<noteq> G2\n  (x, ix) \\<in> G1\n  (y, iy) \\<in> G2\n\ngoal (1 subgoal):\n 1. (\\<And>G1'.\n        \\<lbrakk>G1 = G1' \\<times> I; G1' \\<in> \\<G>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  G1 = G1' \\<times> I\n  G1' \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. int (\\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)}) = 1", "obtain G2' where gi2: \"G2 = G2' \\<times> I\" and ging2: \"G2' \\<in> \\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>G2'.\n        \\<lbrakk>G2 = G2' \\<times> I; G2' \\<in> \\<G>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  ?B \\<in># \\<B> \\<Longrightarrow>\n  K_GDD (?B \\<times> I) (f ?B) \\<K>' {{x} \\<times> I |x. x \\<in> ?B}\n  G1 \\<in> {G \\<times> I |G. G \\<in> \\<G>}\n  G2 \\<in> {G \\<times> I |G. G \\<in> \\<G>}\n  G1 \\<noteq> G2\n  (x, ix) \\<in> G1\n  (y, iy) \\<in> G2\n\ngoal (1 subgoal):\n 1. (\\<And>G2'.\n        \\<lbrakk>G2 = G2' \\<times> I; G2' \\<in> \\<G>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  G2 = G2' \\<times> I\n  G2' \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. int (\\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)}) = 1", "have xing: \"x \\<in> G1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> G1'", "using assms gi1"], ["proof (prove)\nusing this:\n  ?B \\<in># \\<B> \\<Longrightarrow>\n  K_GDD (?B \\<times> I) (f ?B) \\<K>' {{x} \\<times> I |x. x \\<in> ?B}\n  G1 \\<in> {G \\<times> I |G. G \\<in> \\<G>}\n  G2 \\<in> {G \\<times> I |G. G \\<in> \\<G>}\n  G1 \\<noteq> G2\n  (x, ix) \\<in> G1\n  (y, iy) \\<in> G2\n  G1 = G1' \\<times> I\n\ngoal (1 subgoal):\n 1. x \\<in> G1'", "by simp"], ["proof (state)\nthis:\n  x \\<in> G1'\n\ngoal (1 subgoal):\n 1. int (\\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)}) = 1", "have ying: \"y \\<in> G2'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> G2'", "using assms gi2"], ["proof (prove)\nusing this:\n  ?B \\<in># \\<B> \\<Longrightarrow>\n  K_GDD (?B \\<times> I) (f ?B) \\<K>' {{x} \\<times> I |x. x \\<in> ?B}\n  G1 \\<in> {G \\<times> I |G. G \\<in> \\<G>}\n  G2 \\<in> {G \\<times> I |G. G \\<in> \\<G>}\n  G1 \\<noteq> G2\n  (x, ix) \\<in> G1\n  (y, iy) \\<in> G2\n  G2 = G2' \\<times> I\n\ngoal (1 subgoal):\n 1. y \\<in> G2'", "by simp"], ["proof (state)\nthis:\n  y \\<in> G2'\n\ngoal (1 subgoal):\n 1. int (\\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)}) = 1", "have gne: \"G1' \\<noteq> G2'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G1' \\<noteq> G2'", "using assms gi1 gi2"], ["proof (prove)\nusing this:\n  ?B \\<in># \\<B> \\<Longrightarrow>\n  K_GDD (?B \\<times> I) (f ?B) \\<K>' {{x} \\<times> I |x. x \\<in> ?B}\n  G1 \\<in> {G \\<times> I |G. G \\<in> \\<G>}\n  G2 \\<in> {G \\<times> I |G. G \\<in> \\<G>}\n  G1 \\<noteq> G2\n  (x, ix) \\<in> G1\n  (y, iy) \\<in> G2\n  G1 = G1' \\<times> I\n  G2 = G2' \\<times> I\n\ngoal (1 subgoal):\n 1. G1' \\<noteq> G2'", "by auto"], ["proof (state)\nthis:\n  G1' \\<noteq> G2'\n\ngoal (1 subgoal):\n 1. int (\\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)}) = 1", "then"], ["proof (chain)\npicking this:\n  G1' \\<noteq> G2'", "have xyne: \"x \\<noteq> y\""], ["proof (prove)\nusing this:\n  G1' \\<noteq> G2'\n\ngoal (1 subgoal):\n 1. x \\<noteq> y", "using xing ying ging1 ging2 point_in_one_group"], ["proof (prove)\nusing this:\n  G1' \\<noteq> G2'\n  x \\<in> G1'\n  y \\<in> G2'\n  G1' \\<in> \\<G>\n  G2' \\<in> \\<G>\n  \\<lbrakk>?x \\<in> ?G1.0; ?G1.0 \\<in> \\<G>; ?G2.0 \\<in> \\<G>;\n   ?G1.0 \\<noteq> ?G2.0\\<rbrakk>\n  \\<Longrightarrow> ?x \\<notin> ?G2.0\n\ngoal (1 subgoal):\n 1. x \\<noteq> y", "by blast"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. int (\\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)}) = 1", "have \"\\<exists>! bl . bl \\<in># \\<B> \\<and> {x, y} \\<subseteq> bl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!bl. bl \\<in># \\<B> \\<and> {x, y} \\<subseteq> bl", "using index_distinct points_index_one_unique_block"], ["proof (prove)\nusing this:\n  \\<lbrakk>?G1.0 \\<in> \\<G>; ?G2.0 \\<in> \\<G>; ?G1.0 \\<noteq> ?G2.0;\n   ?x \\<in> ?G1.0; ?y \\<in> ?G2.0\\<rbrakk>\n  \\<Longrightarrow> int (\\<B> index {?x, ?y}) = 1\n  ?B index ?ps = 1 \\<Longrightarrow>\n  \\<exists>!bl. bl \\<in># ?B \\<and> ?ps \\<subseteq> bl\n\ngoal (1 subgoal):\n 1. \\<exists>!bl. bl \\<in># \\<B> \\<and> {x, y} \\<subseteq> bl", "by (metis ging1 ging2 gne of_nat_1_eq_iff xing ying)"], ["proof (state)\nthis:\n  \\<exists>!bl. bl \\<in># \\<B> \\<and> {x, y} \\<subseteq> bl\n\ngoal (1 subgoal):\n 1. int (\\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)}) = 1", "then"], ["proof (chain)\npicking this:\n  \\<exists>!bl. bl \\<in># \\<B> \\<and> {x, y} \\<subseteq> bl", "obtain bl where blinb:\"bl \\<in># \\<B>\" and xyblss: \"{x, y} \\<subseteq> bl\""], ["proof (prove)\nusing this:\n  \\<exists>!bl. bl \\<in># \\<B> \\<and> {x, y} \\<subseteq> bl\n\ngoal (1 subgoal):\n 1. (\\<And>bl.\n        \\<lbrakk>bl \\<in># \\<B>; {x, y} \\<subseteq> bl\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  bl \\<in># \\<B>\n  {x, y} \\<subseteq> bl\n\ngoal (1 subgoal):\n 1. int (\\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)}) = 1", "then"], ["proof (chain)\npicking this:\n  bl \\<in># \\<B>\n  {x, y} \\<subseteq> bl", "have \"\\<And> b . b \\<in># \\<B> - {#bl#} \\<Longrightarrow> \\<not> {x, y} \\<subseteq> b\""], ["proof (prove)\nusing this:\n  bl \\<in># \\<B>\n  {x, y} \\<subseteq> bl\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in># remove1_mset bl \\<B> \\<Longrightarrow>\n       \\<not> {x, y} \\<subseteq> b", "using points_index_one_not_unique_block"], ["proof (prove)\nusing this:\n  bl \\<in># \\<B>\n  {x, y} \\<subseteq> bl\n  \\<lbrakk>?B index ?ps = 1; ?ps \\<subseteq> ?bl; ?bl \\<in># ?B;\n   ?bl' \\<in># remove1_mset ?bl ?B\\<rbrakk>\n  \\<Longrightarrow> \\<not> ?ps \\<subseteq> ?bl'\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in># remove1_mset bl \\<B> \\<Longrightarrow>\n       \\<not> {x, y} \\<subseteq> b", "by (metis ging1 ging2 gne index_distinct int_ops(2) nat_int_comparison(1) xing ying)"], ["proof (state)\nthis:\n  ?b \\<in># remove1_mset bl \\<B> \\<Longrightarrow>\n  \\<not> {x, y} \\<subseteq> ?b\n\ngoal (1 subgoal):\n 1. int (\\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)}) = 1", "then"], ["proof (chain)\npicking this:\n  ?b \\<in># remove1_mset bl \\<B> \\<Longrightarrow>\n  \\<not> {x, y} \\<subseteq> ?b", "have not_ss: \"\\<And> b . b \\<in># \\<B> - {#bl#} \\<Longrightarrow> \\<not> ({(x, ix), (y, iy)} \\<subseteq> (b \\<times> I))\""], ["proof (prove)\nusing this:\n  ?b \\<in># remove1_mset bl \\<B> \\<Longrightarrow>\n  \\<not> {x, y} \\<subseteq> ?b\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in># remove1_mset bl \\<B> \\<Longrightarrow>\n       \\<not> {(x, ix), (y, iy)} \\<subseteq> b \\<times> I", "using assms"], ["proof (prove)\nusing this:\n  ?b \\<in># remove1_mset bl \\<B> \\<Longrightarrow>\n  \\<not> {x, y} \\<subseteq> ?b\n  ?B \\<in># \\<B> \\<Longrightarrow>\n  K_GDD (?B \\<times> I) (f ?B) \\<K>' {{x} \\<times> I |x. x \\<in> ?B}\n  G1 \\<in> {G \\<times> I |G. G \\<in> \\<G>}\n  G2 \\<in> {G \\<times> I |G. G \\<in> \\<G>}\n  G1 \\<noteq> G2\n  (x, ix) \\<in> G1\n  (y, iy) \\<in> G2\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in># remove1_mset bl \\<B> \\<Longrightarrow>\n       \\<not> {(x, ix), (y, iy)} \\<subseteq> b \\<times> I", "by (meson SigmaD1 empty_subsetI insert_subset)"], ["proof (state)\nthis:\n  ?b \\<in># remove1_mset bl \\<B> \\<Longrightarrow>\n  \\<not> {(x, ix), (y, iy)} \\<subseteq> ?b \\<times> I\n\ngoal (1 subgoal):\n 1. int (\\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)}) = 1", "then"], ["proof (chain)\npicking this:\n  ?b \\<in># remove1_mset bl \\<B> \\<Longrightarrow>\n  \\<not> {(x, ix), (y, iy)} \\<subseteq> ?b \\<times> I", "have pi0: \"\\<And> b . b \\<in># \\<B> - {#bl#} \\<Longrightarrow> (f b) index {(x, ix), (y, iy)}  = 0\""], ["proof (prove)\nusing this:\n  ?b \\<in># remove1_mset bl \\<B> \\<Longrightarrow>\n  \\<not> {(x, ix), (y, iy)} \\<subseteq> ?b \\<times> I\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in># remove1_mset bl \\<B> \\<Longrightarrow>\n       f b index {(x, ix), (y, iy)} = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>b \\<in># remove1_mset bl \\<B>;\n        \\<And>b.\n           b \\<in># remove1_mset bl \\<B> \\<Longrightarrow>\n           \\<not> {(x, ix), (y, iy)} \\<subseteq> b \\<times> I\\<rbrakk>\n       \\<Longrightarrow> f b index {(x, ix), (y, iy)} = 0", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>b \\<in># remove1_mset bl \\<B>;\n        \\<And>b.\n           b \\<in># remove1_mset bl \\<B> \\<Longrightarrow>\n           \\<not> {(x, ix), (y, iy)} \\<subseteq> b \\<times> I\\<rbrakk>\n       \\<Longrightarrow> f b index {(x, ix), (y, iy)} = 0", "assume assm: \"b \\<in># \\<B> - {#bl#}\""], ["proof (state)\nthis:\n  b \\<in># remove1_mset bl \\<B>\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>b \\<in># remove1_mset bl \\<B>;\n        \\<And>b.\n           b \\<in># remove1_mset bl \\<B> \\<Longrightarrow>\n           \\<not> {(x, ix), (y, iy)} \\<subseteq> b \\<times> I\\<rbrakk>\n       \\<Longrightarrow> f b index {(x, ix), (y, iy)} = 0", "then"], ["proof (chain)\npicking this:\n  b \\<in># remove1_mset bl \\<B>", "have \"b \\<in># \\<B>\""], ["proof (prove)\nusing this:\n  b \\<in># remove1_mset bl \\<B>\n\ngoal (1 subgoal):\n 1. b \\<in># \\<B>", "by (meson in_diffD)"], ["proof (state)\nthis:\n  b \\<in># \\<B>\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>b \\<in># remove1_mset bl \\<B>;\n        \\<And>b.\n           b \\<in># remove1_mset bl \\<B> \\<Longrightarrow>\n           \\<not> {(x, ix), (y, iy)} \\<subseteq> b \\<times> I\\<rbrakk>\n       \\<Longrightarrow> f b index {(x, ix), (y, iy)} = 0", "then"], ["proof (chain)\npicking this:\n  b \\<in># \\<B>", "interpret kgdd: K_GDD \"(b \\<times> I)\" \"(f b)\" \\<K>' \"{{x} \\<times> I |x . x \\<in> b }\""], ["proof (prove)\nusing this:\n  b \\<in># \\<B>\n\ngoal (1 subgoal):\n 1. K_GDD (b \\<times> I) (f b) \\<K>' {{x} \\<times> I |x. x \\<in> b}", "using assms"], ["proof (prove)\nusing this:\n  b \\<in># \\<B>\n  ?B \\<in># \\<B> \\<Longrightarrow>\n  K_GDD (?B \\<times> I) (f ?B) \\<K>' {{x} \\<times> I |x. x \\<in> ?B}\n  G1 \\<in> {G \\<times> I |G. G \\<in> \\<G>}\n  G2 \\<in> {G \\<times> I |G. G \\<in> \\<G>}\n  G1 \\<noteq> G2\n  (x, ix) \\<in> G1\n  (y, iy) \\<in> G2\n\ngoal (1 subgoal):\n 1. K_GDD (b \\<times> I) (f b) \\<K>' {{x} \\<times> I |x. x \\<in> b}", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>b \\<in># remove1_mset bl \\<B>;\n        \\<And>b.\n           b \\<in># remove1_mset bl \\<B> \\<Longrightarrow>\n           \\<not> {(x, ix), (y, iy)} \\<subseteq> b \\<times> I\\<rbrakk>\n       \\<Longrightarrow> f b index {(x, ix), (y, iy)} = 0", "show \"(f b) index {(x, ix), (y, iy)} = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f b index {(x, ix), (y, iy)} = 0", "using assm not_ss"], ["proof (prove)\nusing this:\n  b \\<in># remove1_mset bl \\<B>\n  ?b \\<in># remove1_mset bl \\<B> \\<Longrightarrow>\n  \\<not> {(x, ix), (y, iy)} \\<subseteq> ?b \\<times> I\n\ngoal (1 subgoal):\n 1. f b index {(x, ix), (y, iy)} = 0", "by (metis kgdd.points_index_ps_nin)"], ["proof (state)\nthis:\n  f b index {(x, ix), (y, iy)} = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?b \\<in># remove1_mset bl \\<B> \\<Longrightarrow>\n  f ?b index {(x, ix), (y, iy)} = 0\n\ngoal (1 subgoal):\n 1. int (\\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)}) = 1", "let ?G = \"{{x} \\<times> I |x . x \\<in> bl }\""], ["proof (state)\ngoal (1 subgoal):\n 1. int (\\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)}) = 1", "interpret bkgdd: K_GDD \"(bl \\<times> I)\" \"(f bl)\" \\<K>' ?G"], ["proof (prove)\ngoal (1 subgoal):\n 1. K_GDD (bl \\<times> I) (f bl) \\<K>' {{x} \\<times> I |x. x \\<in> bl}", "using assms blinb"], ["proof (prove)\nusing this:\n  ?B \\<in># \\<B> \\<Longrightarrow>\n  K_GDD (?B \\<times> I) (f ?B) \\<K>' {{x} \\<times> I |x. x \\<in> ?B}\n  G1 \\<in> {G \\<times> I |G. G \\<in> \\<G>}\n  G2 \\<in> {G \\<times> I |G. G \\<in> \\<G>}\n  G1 \\<noteq> G2\n  (x, ix) \\<in> G1\n  (y, iy) \\<in> G2\n  bl \\<in># \\<B>\n\ngoal (1 subgoal):\n 1. K_GDD (bl \\<times> I) (f bl) \\<K>' {{x} \\<times> I |x. x \\<in> bl}", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. int (\\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)}) = 1", "obtain g1 g2 where xing1: \"(x, ix) \\<in> g1\" and ying2: \"(y, iy) \\<in> g2\" and g1g: \"g1 \\<in> ?G\" \n      and g2g: \"g2 \\<in> ?G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g1 g2.\n        \\<lbrakk>(x, ix) \\<in> g1; (y, iy) \\<in> g2;\n         g1 \\<in> {{x} \\<times> I |x. x \\<in> bl};\n         g2 \\<in> {{x} \\<times> I |x. x \\<in> bl}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(5) assms(6) gi1 gi2"], ["proof (prove)\nusing this:\n  (x, ix) \\<in> G1\n  (y, iy) \\<in> G2\n  G1 = G1' \\<times> I\n  G2 = G2' \\<times> I\n\ngoal (1 subgoal):\n 1. (\\<And>g1 g2.\n        \\<lbrakk>(x, ix) \\<in> g1; (y, iy) \\<in> g2;\n         g1 \\<in> {{x} \\<times> I |x. x \\<in> bl};\n         g2 \\<in> {{x} \\<times> I |x. x \\<in> bl}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (no_types, lifting) bkgdd.point_has_unique_group insert_subset mem_Sigma_iff xyblss)"], ["proof (state)\nthis:\n  (x, ix) \\<in> g1\n  (y, iy) \\<in> g2\n  g1 \\<in> {{x} \\<times> I |x. x \\<in> bl}\n  g2 \\<in> {{x} \\<times> I |x. x \\<in> bl}\n\ngoal (1 subgoal):\n 1. int (\\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)}) = 1", "then"], ["proof (chain)\npicking this:\n  (x, ix) \\<in> g1\n  (y, iy) \\<in> g2\n  g1 \\<in> {{x} \\<times> I |x. x \\<in> bl}\n  g2 \\<in> {{x} \\<times> I |x. x \\<in> bl}", "have \"g1 \\<noteq> g2\""], ["proof (prove)\nusing this:\n  (x, ix) \\<in> g1\n  (y, iy) \\<in> g2\n  g1 \\<in> {{x} \\<times> I |x. x \\<in> bl}\n  g2 \\<in> {{x} \\<times> I |x. x \\<in> bl}\n\ngoal (1 subgoal):\n 1. g1 \\<noteq> g2", "using xyne"], ["proof (prove)\nusing this:\n  (x, ix) \\<in> g1\n  (y, iy) \\<in> g2\n  g1 \\<in> {{x} \\<times> I |x. x \\<in> bl}\n  g2 \\<in> {{x} \\<times> I |x. x \\<in> bl}\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. g1 \\<noteq> g2", "by blast"], ["proof (state)\nthis:\n  g1 \\<noteq> g2\n\ngoal (1 subgoal):\n 1. int (\\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)}) = 1", "then"], ["proof (chain)\npicking this:\n  g1 \\<noteq> g2", "have pi1: \"(f bl) index {(x, ix), (y, iy)} = 1\""], ["proof (prove)\nusing this:\n  g1 \\<noteq> g2\n\ngoal (1 subgoal):\n 1. f bl index {(x, ix), (y, iy)} = 1", "using bkgdd.index_distinct xing1 ying2 g1g g2g"], ["proof (prove)\nusing this:\n  g1 \\<noteq> g2\n  \\<lbrakk>?G1.0 \\<in> {{x} \\<times> I |x. x \\<in> bl};\n   ?G2.0 \\<in> {{x} \\<times> I |x. x \\<in> bl}; ?G1.0 \\<noteq> ?G2.0;\n   ?x \\<in> ?G1.0; ?y \\<in> ?G2.0\\<rbrakk>\n  \\<Longrightarrow> int (f bl index {?x, ?y}) = 1\n  (x, ix) \\<in> g1\n  (y, iy) \\<in> g2\n  g1 \\<in> {{x} \\<times> I |x. x \\<in> bl}\n  g2 \\<in> {{x} \\<times> I |x. x \\<in> bl}\n\ngoal (1 subgoal):\n 1. f bl index {(x, ix), (y, iy)} = 1", "by simp"], ["proof (state)\nthis:\n  f bl index {(x, ix), (y, iy)} = 1\n\ngoal (1 subgoal):\n 1. int (\\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)}) = 1", "have \"(\\<Sum>\\<^sub># (image_mset f \\<B>)) index {(x, ix), (y, iy)} = \n      (\\<Sum>B \\<in># \\<B>. (f B) index {(x, ix), (y, iy)} )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)} =\n    (\\<Sum>B\\<in>#\\<B>. f B index {(x, ix), (y, iy)})", "by (simp add: points_index_sum)"], ["proof (state)\nthis:\n  \\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)} =\n  (\\<Sum>B\\<in>#\\<B>. f B index {(x, ix), (y, iy)})\n\ngoal (1 subgoal):\n 1. int (\\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)}) = 1", "then"], ["proof (chain)\npicking this:\n  \\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)} =\n  (\\<Sum>B\\<in>#\\<B>. f B index {(x, ix), (y, iy)})", "have \"(\\<Sum>\\<^sub># (image_mset f \\<B>)) index {(x, ix), (y, iy)} = \n      (\\<Sum>B \\<in># (\\<B> - {#bl#}). (f B) index {(x, ix), (y, iy)}) + (f bl) index {(x, ix), (y, iy)}\""], ["proof (prove)\nusing this:\n  \\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)} =\n  (\\<Sum>B\\<in>#\\<B>. f B index {(x, ix), (y, iy)})\n\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)} =\n    (\\<Sum>B\\<in>#remove1_mset bl \\<B>. f B index {(x, ix), (y, iy)}) +\n    f bl index {(x, ix), (y, iy)}", "by (metis (no_types, lifting) add.commute blinb insert_DiffM sum_mset.insert)"], ["proof (state)\nthis:\n  \\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)} =\n  (\\<Sum>B\\<in>#remove1_mset bl \\<B>. f B index {(x, ix), (y, iy)}) +\n  f bl index {(x, ix), (y, iy)}\n\ngoal (1 subgoal):\n 1. int (\\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)}) = 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)} =\n  (\\<Sum>B\\<in>#remove1_mset bl \\<B>. f B index {(x, ix), (y, iy)}) +\n  f bl index {(x, ix), (y, iy)}\n\ngoal (1 subgoal):\n 1. int (\\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)}) = 1", "using pi0 pi1"], ["proof (prove)\nusing this:\n  \\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)} =\n  (\\<Sum>B\\<in>#remove1_mset bl \\<B>. f B index {(x, ix), (y, iy)}) +\n  f bl index {(x, ix), (y, iy)}\n  ?b \\<in># remove1_mset bl \\<B> \\<Longrightarrow>\n  f ?b index {(x, ix), (y, iy)} = 0\n  f bl index {(x, ix), (y, iy)} = 1\n\ngoal (1 subgoal):\n 1. int (\\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)}) = 1", "by simp"], ["proof (state)\nthis:\n  int (\\<Sum>\\<^sub># (image_mset f \\<B>) index {(x, ix), (y, iy)}) = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem Wilsons_Construction:\n  assumes \"card I = w\"\n  assumes \"w > 0\"\n  assumes \"\\<And> n. n \\<in> \\<K>' \\<Longrightarrow> n \\<ge> 2\"\n  assumes \"\\<And> B . B \\<in># \\<B> \\<Longrightarrow> K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x . x \\<in> B }\"\n  shows \"K_GDD (\\<V> \\<times> I) (\\<Sum>B \\<in># \\<B>. (f B)) \\<K>' {G \\<times> I | G . G \\<in> \\<G>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. K_GDD (\\<V> \\<times> I) (\\<Sum>\\<^sub># (image_mset f \\<B>)) \\<K>'\n     {G \\<times> I |G. G \\<in> \\<G>}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. K_GDD (\\<V> \\<times> I) (\\<Sum>\\<^sub># (image_mset f \\<B>)) \\<K>'\n     {G \\<times> I |G. G \\<in> \\<G>}", "let ?Y = \"\\<V> \\<times> I\" and ?H = \"{G \\<times> I | G . G \\<in> \\<G>}\" and ?B = \"\\<Sum>B \\<in># \\<B>. (f B)\""], ["proof (state)\ngoal (1 subgoal):\n 1. K_GDD (\\<V> \\<times> I) (\\<Sum>\\<^sub># (image_mset f \\<B>)) \\<K>'\n     {G \\<times> I |G. G \\<in> \\<G>}", "interpret pd: proper_design ?Y ?B"], ["proof (prove)\ngoal (1 subgoal):\n 1. proper_design (\\<V> \\<times> I) (\\<Sum>\\<^sub># (image_mset f \\<B>))", "using wilsons_construction_proper assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>card ?I = ?w; 0 < ?w;\n   \\<And>n. n \\<in> ?\\<K>' \\<Longrightarrow> 2 \\<le> n;\n   \\<And>B.\n      B \\<in># \\<B> \\<Longrightarrow>\n      K_GDD (B \\<times> ?I) (?f B) ?\\<K>'\n       {{x} \\<times> ?I |x. x \\<in> B}\\<rbrakk>\n  \\<Longrightarrow> proper_design (\\<V> \\<times> ?I)\n                     (\\<Sum>\\<^sub># (image_mset ?f \\<B>))\n  card I = w\n  0 < w\n  ?n \\<in> \\<K>' \\<Longrightarrow> 2 \\<le> ?n\n  ?B \\<in># \\<B> \\<Longrightarrow>\n  K_GDD (?B \\<times> I) (f ?B) \\<K>' {{x} \\<times> I |x. x \\<in> ?B}\n\ngoal (1 subgoal):\n 1. proper_design (\\<V> \\<times> I) (\\<Sum>\\<^sub># (image_mset f \\<B>))", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. K_GDD (\\<V> \\<times> I) (\\<Sum>\\<^sub># (image_mset f \\<B>)) \\<K>'\n     {G \\<times> I |G. G \\<in> \\<G>}", "have \"\\<And> bl . bl \\<in># (\\<Sum>B \\<in># \\<B>. (f B)) \\<Longrightarrow> card bl \\<in> \\<K>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>bl.\n       bl \\<in># \\<Sum>\\<^sub># (image_mset f \\<B>) \\<Longrightarrow>\n       int (card bl) \\<in> \\<K>'", "using assms pair_construction_block_sizes"], ["proof (prove)\nusing this:\n  card I = w\n  0 < w\n  ?n \\<in> \\<K>' \\<Longrightarrow> 2 \\<le> ?n\n  ?B \\<in># \\<B> \\<Longrightarrow>\n  K_GDD (?B \\<times> I) (f ?B) \\<K>' {{x} \\<times> I |x. x \\<in> ?B}\n  \\<lbrakk>K_GDD (?B \\<times> ?I) (?f ?B) ?\\<K>'\n            {{x} \\<times> ?I |x. x \\<in> ?B};\n   ?B \\<in># \\<B>; ?b \\<in># ?f ?B\\<rbrakk>\n  \\<Longrightarrow> int (card ?b) \\<in> ?\\<K>'\n\ngoal (1 subgoal):\n 1. \\<And>bl.\n       bl \\<in># \\<Sum>\\<^sub># (image_mset f \\<B>) \\<Longrightarrow>\n       int (card bl) \\<in> \\<K>'", "by blast"], ["proof (state)\nthis:\n  ?bl \\<in># \\<Sum>\\<^sub># (image_mset f \\<B>) \\<Longrightarrow>\n  int (card ?bl) \\<in> \\<K>'\n\ngoal (1 subgoal):\n 1. K_GDD (\\<V> \\<times> I) (\\<Sum>\\<^sub># (image_mset f \\<B>)) \\<K>'\n     {G \\<times> I |G. G \\<in> \\<G>}", "then"], ["proof (chain)\npicking this:\n  ?bl \\<in># \\<Sum>\\<^sub># (image_mset f \\<B>) \\<Longrightarrow>\n  int (card ?bl) \\<in> \\<K>'", "interpret kdes: K_block_design ?Y ?B \\<K>'"], ["proof (prove)\nusing this:\n  ?bl \\<in># \\<Sum>\\<^sub># (image_mset f \\<B>) \\<Longrightarrow>\n  int (card ?bl) \\<in> \\<K>'\n\ngoal (1 subgoal):\n 1. K_block_design (\\<V> \\<times> I) (\\<Sum>\\<^sub># (image_mset f \\<B>))\n     \\<K>'", "using assms(3)"], ["proof (prove)\nusing this:\n  ?bl \\<in># \\<Sum>\\<^sub># (image_mset f \\<B>) \\<Longrightarrow>\n  int (card ?bl) \\<in> \\<K>'\n  ?n \\<in> \\<K>' \\<Longrightarrow> 2 \\<le> ?n\n\ngoal (1 subgoal):\n 1. K_block_design (\\<V> \\<times> I) (\\<Sum>\\<^sub># (image_mset f \\<B>))\n     \\<K>'", "by (unfold_locales) (simp_all,fastforce)"], ["proof (state)\ngoal (1 subgoal):\n 1. K_GDD (\\<V> \\<times> I) (\\<Sum>\\<^sub># (image_mset f \\<B>)) \\<K>'\n     {G \\<times> I |G. G \\<in> \\<G>}", "interpret gdd: GDD ?Y ?B ?H \"1:: int\""], ["proof (prove)\ngoal (1 subgoal):\n 1. GDD (\\<V> \\<times> I) (\\<Sum>\\<^sub># (image_mset f \\<B>))\n     {G \\<times> I |G. G \\<in> \\<G>} 1", "proof (unfold_locales)"], ["proof (state)\ngoal (5 subgoals):\n 1. partition_on (\\<V> \\<times> I) {G \\<times> I |G. G \\<in> \\<G>}\n 2. 1 < card {G \\<times> I |G. G \\<in> \\<G>}\n 3. 1 \\<le> 1\n 4. \\<And>G x y.\n       \\<lbrakk>G \\<in> {G \\<times> I |G. G \\<in> \\<G>}; x \\<in> G;\n        y \\<in> G; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> \\<Sum>\\<^sub># (image_mset f \\<B>) index {x, y} = 0\n 5. \\<And>G1 G2 x y.\n       \\<lbrakk>G1 \\<in> {G \\<times> I |G. G \\<in> \\<G>};\n        G2 \\<in> {G \\<times> I |G. G \\<in> \\<G>}; G1 \\<noteq> G2;\n        x \\<in> G1; y \\<in> G2\\<rbrakk>\n       \\<Longrightarrow> int (\\<Sum>\\<^sub># (image_mset f \\<B>) index\n                              {x, y}) =\n                         1", "show \"partition_on (\\<V> \\<times> I) {G \\<times> I |G. G \\<in> \\<G>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partition_on (\\<V> \\<times> I) {G \\<times> I |G. G \\<in> \\<G>}", "using assms groups_not_empty design_points_nempty group_partitions"], ["proof (prove)\nusing this:\n  card I = w\n  0 < w\n  ?n \\<in> \\<K>' \\<Longrightarrow> 2 \\<le> ?n\n  ?B \\<in># \\<B> \\<Longrightarrow>\n  K_GDD (?B \\<times> I) (f ?B) \\<K>' {{x} \\<times> I |x. x \\<in> ?B}\n  \\<G> \\<noteq> {}\n  \\<V> \\<noteq> {}\n  partition_on \\<V> \\<G>\n\ngoal (1 subgoal):\n 1. partition_on (\\<V> \\<times> I) {G \\<times> I |G. G \\<in> \\<G>}", "by (simp add: partition_on_cart_prod)"], ["proof (state)\nthis:\n  partition_on (\\<V> \\<times> I) {G \\<times> I |G. G \\<in> \\<G>}\n\ngoal (4 subgoals):\n 1. 1 < card {G \\<times> I |G. G \\<in> \\<G>}\n 2. 1 \\<le> 1\n 3. \\<And>G x y.\n       \\<lbrakk>G \\<in> {G \\<times> I |G. G \\<in> \\<G>}; x \\<in> G;\n        y \\<in> G; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> \\<Sum>\\<^sub># (image_mset f \\<B>) index {x, y} = 0\n 4. \\<And>G1 G2 x y.\n       \\<lbrakk>G1 \\<in> {G \\<times> I |G. G \\<in> \\<G>};\n        G2 \\<in> {G \\<times> I |G. G \\<in> \\<G>}; G1 \\<noteq> G2;\n        x \\<in> G1; y \\<in> G2\\<rbrakk>\n       \\<Longrightarrow> int (\\<Sum>\\<^sub># (image_mset f \\<B>) index\n                              {x, y}) =\n                         1", "have \"inj_on (\\<lambda> G. G \\<times> I) \\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>G. G \\<times> I) \\<G>", "using inj_on_def pd.design_points_nempty"], ["proof (prove)\nusing this:\n  inj_on ?f ?A =\n  (\\<forall>x\\<in>?A.\n      \\<forall>y\\<in>?A. ?f x = ?f y \\<longrightarrow> x = y)\n  \\<V> \\<times> I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>G. G \\<times> I) \\<G>", "by auto"], ["proof (state)\nthis:\n  inj_on (\\<lambda>G. G \\<times> I) \\<G>\n\ngoal (4 subgoals):\n 1. 1 < card {G \\<times> I |G. G \\<in> \\<G>}\n 2. 1 \\<le> 1\n 3. \\<And>G x y.\n       \\<lbrakk>G \\<in> {G \\<times> I |G. G \\<in> \\<G>}; x \\<in> G;\n        y \\<in> G; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> \\<Sum>\\<^sub># (image_mset f \\<B>) index {x, y} = 0\n 4. \\<And>G1 G2 x y.\n       \\<lbrakk>G1 \\<in> {G \\<times> I |G. G \\<in> \\<G>};\n        G2 \\<in> {G \\<times> I |G. G \\<in> \\<G>}; G1 \\<noteq> G2;\n        x \\<in> G1; y \\<in> G2\\<rbrakk>\n       \\<Longrightarrow> int (\\<Sum>\\<^sub># (image_mset f \\<B>) index\n                              {x, y}) =\n                         1", "then"], ["proof (chain)\npicking this:\n  inj_on (\\<lambda>G. G \\<times> I) \\<G>", "have \"card {G \\<times> I |G. G \\<in> \\<G>} = card \\<G>\""], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>G. G \\<times> I) \\<G>\n\ngoal (1 subgoal):\n 1. card {G \\<times> I |G. G \\<in> \\<G>} = card \\<G>", "using card_image"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>G. G \\<times> I) \\<G>\n  inj_on ?f ?A \\<Longrightarrow> card (?f ` ?A) = card ?A\n\ngoal (1 subgoal):\n 1. card {G \\<times> I |G. G \\<in> \\<G>} = card \\<G>", "by (simp add: Setcompr_eq_image)"], ["proof (state)\nthis:\n  card {G \\<times> I |G. G \\<in> \\<G>} = card \\<G>\n\ngoal (4 subgoals):\n 1. 1 < card {G \\<times> I |G. G \\<in> \\<G>}\n 2. 1 \\<le> 1\n 3. \\<And>G x y.\n       \\<lbrakk>G \\<in> {G \\<times> I |G. G \\<in> \\<G>}; x \\<in> G;\n        y \\<in> G; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> \\<Sum>\\<^sub># (image_mset f \\<B>) index {x, y} = 0\n 4. \\<And>G1 G2 x y.\n       \\<lbrakk>G1 \\<in> {G \\<times> I |G. G \\<in> \\<G>};\n        G2 \\<in> {G \\<times> I |G. G \\<in> \\<G>}; G1 \\<noteq> G2;\n        x \\<in> G1; y \\<in> G2\\<rbrakk>\n       \\<Longrightarrow> int (\\<Sum>\\<^sub># (image_mset f \\<B>) index\n                              {x, y}) =\n                         1", "then"], ["proof (chain)\npicking this:\n  card {G \\<times> I |G. G \\<in> \\<G>} = card \\<G>", "show \"1 < card {G \\<times> I |G. G \\<in> \\<G>}\""], ["proof (prove)\nusing this:\n  card {G \\<times> I |G. G \\<in> \\<G>} = card \\<G>\n\ngoal (1 subgoal):\n 1. 1 < card {G \\<times> I |G. G \\<in> \\<G>}", "using groups_size"], ["proof (prove)\nusing this:\n  card {G \\<times> I |G. G \\<in> \\<G>} = card \\<G>\n  1 < card \\<G>\n\ngoal (1 subgoal):\n 1. 1 < card {G \\<times> I |G. G \\<in> \\<G>}", "by linarith"], ["proof (state)\nthis:\n  1 < card {G \\<times> I |G. G \\<in> \\<G>}\n\ngoal (3 subgoals):\n 1. 1 \\<le> 1\n 2. \\<And>G x y.\n       \\<lbrakk>G \\<in> {G \\<times> I |G. G \\<in> \\<G>}; x \\<in> G;\n        y \\<in> G; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> \\<Sum>\\<^sub># (image_mset f \\<B>) index {x, y} = 0\n 3. \\<And>G1 G2 x y.\n       \\<lbrakk>G1 \\<in> {G \\<times> I |G. G \\<in> \\<G>};\n        G2 \\<in> {G \\<times> I |G. G \\<in> \\<G>}; G1 \\<noteq> G2;\n        x \\<in> G1; y \\<in> G2\\<rbrakk>\n       \\<Longrightarrow> int (\\<Sum>\\<^sub># (image_mset f \\<B>) index\n                              {x, y}) =\n                         1", "show \"(1::int) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> 1", "by simp"], ["proof (state)\nthis:\n  1 \\<le> 1\n\ngoal (2 subgoals):\n 1. \\<And>G x y.\n       \\<lbrakk>G \\<in> {G \\<times> I |G. G \\<in> \\<G>}; x \\<in> G;\n        y \\<in> G; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> \\<Sum>\\<^sub># (image_mset f \\<B>) index {x, y} = 0\n 2. \\<And>G1 G2 x y.\n       \\<lbrakk>G1 \\<in> {G \\<times> I |G. G \\<in> \\<G>};\n        G2 \\<in> {G \\<times> I |G. G \\<in> \\<G>}; G1 \\<noteq> G2;\n        x \\<in> G1; y \\<in> G2\\<rbrakk>\n       \\<Longrightarrow> int (\\<Sum>\\<^sub># (image_mset f \\<B>) index\n                              {x, y}) =\n                         1", "have gdd_fact: \"\\<And> B . B \\<in># \\<B> \\<Longrightarrow> K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x . x \\<in> B }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in># \\<B> \\<Longrightarrow>\n       K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x. x \\<in> B}", "using assms"], ["proof (prove)\nusing this:\n  card I = w\n  0 < w\n  ?n \\<in> \\<K>' \\<Longrightarrow> 2 \\<le> ?n\n  ?B \\<in># \\<B> \\<Longrightarrow>\n  K_GDD (?B \\<times> I) (f ?B) \\<K>' {{x} \\<times> I |x. x \\<in> ?B}\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       B \\<in># \\<B> \\<Longrightarrow>\n       K_GDD (B \\<times> I) (f B) \\<K>' {{x} \\<times> I |x. x \\<in> B}", "by simp"], ["proof (state)\nthis:\n  ?B \\<in># \\<B> \\<Longrightarrow>\n  K_GDD (?B \\<times> I) (f ?B) \\<K>' {{x} \\<times> I |x. x \\<in> ?B}\n\ngoal (2 subgoals):\n 1. \\<And>G x y.\n       \\<lbrakk>G \\<in> {G \\<times> I |G. G \\<in> \\<G>}; x \\<in> G;\n        y \\<in> G; x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> \\<Sum>\\<^sub># (image_mset f \\<B>) index {x, y} = 0\n 2. \\<And>G1 G2 x y.\n       \\<lbrakk>G1 \\<in> {G \\<times> I |G. G \\<in> \\<G>};\n        G2 \\<in> {G \\<times> I |G. G \\<in> \\<G>}; G1 \\<noteq> G2;\n        x \\<in> G1; y \\<in> G2\\<rbrakk>\n       \\<Longrightarrow> int (\\<Sum>\\<^sub># (image_mset f \\<B>) index\n                              {x, y}) =\n                         1", "show \"\\<And>G X Y. G \\<in> {GG \\<times> I |GG. GG \\<in> \\<G>} \\<Longrightarrow> X \\<in> G \\<Longrightarrow> Y \\<in> G \\<Longrightarrow> X \\<noteq> Y \n        \\<Longrightarrow> (\\<Sum>\\<^sub># (image_mset f \\<B>)) index {X, Y} = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>G X Y.\n       \\<lbrakk>G \\<in> {GG \\<times> I |GG. GG \\<in> \\<G>}; X \\<in> G;\n        Y \\<in> G; X \\<noteq> Y\\<rbrakk>\n       \\<Longrightarrow> \\<Sum>\\<^sub># (image_mset f \\<B>) index {X, Y} = 0", "using wilsons_construction_index_0[OF assms(4)]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>B. B \\<in># \\<B> \\<Longrightarrow> B \\<in># \\<B>;\n   ?G \\<in> {GG \\<times> I |GG. GG \\<in> \\<G>}; ?X \\<in> ?G; ?Y \\<in> ?G;\n   ?X \\<noteq> ?Y\\<rbrakk>\n  \\<Longrightarrow> \\<Sum>\\<^sub># (image_mset f \\<B>) index {?X, ?Y} = 0\n\ngoal (1 subgoal):\n 1. \\<And>G X Y.\n       \\<lbrakk>G \\<in> {GG \\<times> I |GG. GG \\<in> \\<G>}; X \\<in> G;\n        Y \\<in> G; X \\<noteq> Y\\<rbrakk>\n       \\<Longrightarrow> \\<Sum>\\<^sub># (image_mset f \\<B>) index {X, Y} = 0", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?G \\<in> {GG \\<times> I |GG. GG \\<in> \\<G>}; ?X \\<in> ?G;\n   ?Y \\<in> ?G; ?X \\<noteq> ?Y\\<rbrakk>\n  \\<Longrightarrow> \\<Sum>\\<^sub># (image_mset f \\<B>) index {?X, ?Y} = 0\n\ngoal (1 subgoal):\n 1. \\<And>G1 G2 x y.\n       \\<lbrakk>G1 \\<in> {G \\<times> I |G. G \\<in> \\<G>};\n        G2 \\<in> {G \\<times> I |G. G \\<in> \\<G>}; G1 \\<noteq> G2;\n        x \\<in> G1; y \\<in> G2\\<rbrakk>\n       \\<Longrightarrow> int (\\<Sum>\\<^sub># (image_mset f \\<B>) index\n                              {x, y}) =\n                         1", "show \"\\<And>G1 G2 X Y. G1 \\<in> {G \\<times> I |G. G \\<in> \\<G>} \\<Longrightarrow> G2 \\<in> {G \\<times> I |G. G \\<in> \\<G>} \n      \\<Longrightarrow> G1 \\<noteq> G2 \\<Longrightarrow> X \\<in> G1 \\<Longrightarrow> Y \\<in> G2 \\<Longrightarrow> ((\\<Sum>\\<^sub># (image_mset f \\<B>)) index {X, Y}) = (1 ::int)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>G1 G2 X Y.\n       \\<lbrakk>G1 \\<in> {G \\<times> I |G. G \\<in> \\<G>};\n        G2 \\<in> {G \\<times> I |G. G \\<in> \\<G>}; G1 \\<noteq> G2;\n        X \\<in> G1; Y \\<in> G2\\<rbrakk>\n       \\<Longrightarrow> int (\\<Sum>\\<^sub># (image_mset f \\<B>) index\n                              {X, Y}) =\n                         1", "using wilsons_construction_index_1[OF assms(4)]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>B. B \\<in># \\<B> \\<Longrightarrow> B \\<in># \\<B>;\n   ?G1.0 \\<in> {G \\<times> I |G. G \\<in> \\<G>};\n   ?G2.0 \\<in> {G \\<times> I |G. G \\<in> \\<G>}; ?G1.0 \\<noteq> ?G2.0;\n   (?x, ?ix) \\<in> ?G1.0; (?y, ?iy) \\<in> ?G2.0\\<rbrakk>\n  \\<Longrightarrow> int (\\<Sum>\\<^sub># (image_mset f \\<B>) index\n                         {(?x, ?ix), (?y, ?iy)}) =\n                    1\n\ngoal (1 subgoal):\n 1. \\<And>G1 G2 X Y.\n       \\<lbrakk>G1 \\<in> {G \\<times> I |G. G \\<in> \\<G>};\n        G2 \\<in> {G \\<times> I |G. G \\<in> \\<G>}; G1 \\<noteq> G2;\n        X \\<in> G1; Y \\<in> G2\\<rbrakk>\n       \\<Longrightarrow> int (\\<Sum>\\<^sub># (image_mset f \\<B>) index\n                              {X, Y}) =\n                         1", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>?G1.0 \\<in> {G \\<times> I |G. G \\<in> \\<G>};\n   ?G2.0 \\<in> {G \\<times> I |G. G \\<in> \\<G>}; ?G1.0 \\<noteq> ?G2.0;\n   ?X \\<in> ?G1.0; ?Y \\<in> ?G2.0\\<rbrakk>\n  \\<Longrightarrow> int (\\<Sum>\\<^sub># (image_mset f \\<B>) index\n                         {?X, ?Y}) =\n                    1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\ngoal (1 subgoal):\n 1. K_GDD (\\<V> \\<times> I) (\\<Sum>\\<^sub># (image_mset f \\<B>)) \\<K>'\n     {G \\<times> I |G. G \\<in> \\<G>}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. K_GDD (\\<V> \\<times> I) (\\<Sum>\\<^sub># (image_mset f \\<B>)) \\<K>'\n     {G \\<times> I |G. G \\<in> \\<G>}", "by (unfold_locales)"], ["proof (state)\nthis:\n  K_GDD (\\<V> \\<times> I) (\\<Sum>\\<^sub># (image_mset f \\<B>)) \\<K>'\n   {G \\<times> I |G. G \\<in> \\<G>}\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context pairwise_balance\nbegin"], ["", "lemma PBD_by_deleting_point: \n  assumes \"\\<v> > 2\"\n  assumes \"\\<And> bl . bl \\<in># \\<B> \\<Longrightarrow> card bl \\<ge> 2\"\n  shows \"pairwise_balance (del_point x) (del_point_blocks x) \\<Lambda>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pairwise_balance (del_point x) (del_point_blocks x) \\<Lambda>", "proof (cases \"x \\<in> \\<V>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> \\<V> \\<Longrightarrow>\n    pairwise_balance (del_point x) (del_point_blocks x) \\<Lambda>\n 2. x \\<notin> \\<V> \\<Longrightarrow>\n    pairwise_balance (del_point x) (del_point_blocks x) \\<Lambda>", "case True"], ["proof (state)\nthis:\n  x \\<in> \\<V>\n\ngoal (2 subgoals):\n 1. x \\<in> \\<V> \\<Longrightarrow>\n    pairwise_balance (del_point x) (del_point_blocks x) \\<Lambda>\n 2. x \\<notin> \\<V> \\<Longrightarrow>\n    pairwise_balance (del_point x) (del_point_blocks x) \\<Lambda>", "interpret des: design \"del_point x\" \"del_point_blocks x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. design (del_point x) (del_point_blocks x)", "using delete_point_design assms"], ["proof (prove)\nusing this:\n  (\\<And>bl.\n      \\<lbrakk>bl \\<in># \\<B>; ?p \\<in> bl\\<rbrakk>\n      \\<Longrightarrow> 2 \\<le> card bl) \\<Longrightarrow>\n  design (del_point ?p) (del_point_blocks ?p)\n  2 < \\<v>\n  ?bl \\<in># \\<B> \\<Longrightarrow> 2 \\<le> card ?bl\n\ngoal (1 subgoal):\n 1. design (del_point x) (del_point_blocks x)", "by blast"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> \\<V> \\<Longrightarrow>\n    pairwise_balance (del_point x) (del_point_blocks x) \\<Lambda>\n 2. x \\<notin> \\<V> \\<Longrightarrow>\n    pairwise_balance (del_point x) (del_point_blocks x) \\<Lambda>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. pairwise_balance (del_point x) (del_point_blocks x) \\<Lambda>", "using assms design_blocks_nempty del_point_def del_point_blocks_def"], ["proof (prove)\nusing this:\n  2 < \\<v>\n  ?bl \\<in># \\<B> \\<Longrightarrow> 2 \\<le> card ?bl\n  \\<B> \\<noteq> {#}\n  del_point ?p \\<equiv> \\<V> - {?p}\n  del_point_blocks ?p \\<equiv> {#bl - {?p}. bl \\<in># \\<B>#}\n\ngoal (1 subgoal):\n 1. pairwise_balance (del_point x) (del_point_blocks x) \\<Lambda>", "proof (unfold_locales, simp_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>p. \\<V> - {p} \\<equiv> \\<V> - {p};\n     \\<And>p.\n        {#bl - {p}. bl \\<in># \\<B>#} \\<equiv> {#bl - {p}. bl \\<in># \\<B>#};\n     2 < \\<v>; \\<And>bl. bl \\<in># \\<B> \\<Longrightarrow> 2 \\<le> card bl;\n     \\<B> \\<noteq> {#}; \\<And>p. del_point p \\<equiv> \\<V> - {p};\n     \\<And>p.\n        del_point_blocks p \\<equiv> {#bl - {p}. bl \\<in># \\<B>#}\\<rbrakk>\n    \\<Longrightarrow> 2 \\<le> int (card (\\<V> - {x}))\n 2. \\<And>ps.\n       \\<lbrakk>\\<And>p. \\<V> - {p} \\<equiv> \\<V> - {p};\n        \\<And>p.\n           {#bl - {p}. bl \\<in># \\<B>#} \\<equiv>\n           {#bl - {p}. bl \\<in># \\<B>#};\n        ps \\<subseteq> \\<V> - {x}; card ps = 2; 2 < \\<v>;\n        \\<And>bl. bl \\<in># \\<B> \\<Longrightarrow> 2 \\<le> card bl;\n        \\<B> \\<noteq> {#}; \\<And>p. del_point p \\<equiv> \\<V> - {p};\n        \\<And>p.\n           del_point_blocks p \\<equiv> {#bl - {p}. bl \\<in># \\<B>#}\\<rbrakk>\n       \\<Longrightarrow> int ({#bl - {x}. bl \\<in># \\<B>#} index ps) =\n                         \\<Lambda>", "show \"2 < \\<v> \\<Longrightarrow> (\\<And>bl. bl \\<in># \\<B> \\<Longrightarrow> 2 \\<le> card bl) \\<Longrightarrow> 2 \\<le> int (card (\\<V> - {x}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>2 < \\<v>;\n     \\<And>bl. bl \\<in># \\<B> \\<Longrightarrow> 2 \\<le> card bl\\<rbrakk>\n    \\<Longrightarrow> 2 \\<le> int (card (\\<V> - {x}))", "using card_Diff_singleton_if diff_diff_cancel diff_le_mono2 finite_sets less_one"], ["proof (prove)\nusing this:\n  finite ?A \\<Longrightarrow>\n  card (?A - {?x}) = (if ?x \\<in> ?A then card ?A - 1 else card ?A)\n  ?i \\<le> ?n \\<Longrightarrow> ?n - (?n - ?i) = ?i\n  ?m \\<le> ?n \\<Longrightarrow> ?l - ?n \\<le> ?l - ?m\n  finite \\<V>\n  (?n < 1) = (?n = 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>2 < \\<v>;\n     \\<And>bl. bl \\<in># \\<B> \\<Longrightarrow> 2 \\<le> card bl\\<rbrakk>\n    \\<Longrightarrow> 2 \\<le> int (card (\\<V> - {x}))", "by (metis int_ops(3) less_nat_zero_code nat_le_linear verit_comp_simplify1(3) zle_int)"], ["proof (state)\nthis:\n  \\<lbrakk>2 < \\<v>;\n   \\<And>bl. bl \\<in># \\<B> \\<Longrightarrow> 2 \\<le> card bl\\<rbrakk>\n  \\<Longrightarrow> 2 \\<le> int (card (\\<V> - {x}))\n\ngoal (1 subgoal):\n 1. \\<And>ps.\n       \\<lbrakk>\\<And>p. \\<V> - {p} \\<equiv> \\<V> - {p};\n        \\<And>p.\n           {#bl - {p}. bl \\<in># \\<B>#} \\<equiv>\n           {#bl - {p}. bl \\<in># \\<B>#};\n        ps \\<subseteq> \\<V> - {x}; card ps = 2; 2 < \\<v>;\n        \\<And>bl. bl \\<in># \\<B> \\<Longrightarrow> 2 \\<le> card bl;\n        \\<B> \\<noteq> {#}; \\<And>p. del_point p \\<equiv> \\<V> - {p};\n        \\<And>p.\n           del_point_blocks p \\<equiv> {#bl - {p}. bl \\<in># \\<B>#}\\<rbrakk>\n       \\<Longrightarrow> int ({#bl - {x}. bl \\<in># \\<B>#} index ps) =\n                         \\<Lambda>", "have \"\\<And> ps . ps  \\<subseteq> \\<V> - {x} \\<Longrightarrow> ps \\<subseteq> \\<V>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ps.\n       ps \\<subseteq> \\<V> - {x} \\<Longrightarrow> ps \\<subseteq> \\<V>", "by auto"], ["proof (state)\nthis:\n  ?ps \\<subseteq> \\<V> - {x} \\<Longrightarrow> ?ps \\<subseteq> \\<V>\n\ngoal (1 subgoal):\n 1. \\<And>ps.\n       \\<lbrakk>\\<And>p. \\<V> - {p} \\<equiv> \\<V> - {p};\n        \\<And>p.\n           {#bl - {p}. bl \\<in># \\<B>#} \\<equiv>\n           {#bl - {p}. bl \\<in># \\<B>#};\n        ps \\<subseteq> \\<V> - {x}; card ps = 2; 2 < \\<v>;\n        \\<And>bl. bl \\<in># \\<B> \\<Longrightarrow> 2 \\<le> card bl;\n        \\<B> \\<noteq> {#}; \\<And>p. del_point p \\<equiv> \\<V> - {p};\n        \\<And>p.\n           del_point_blocks p \\<equiv> {#bl - {p}. bl \\<in># \\<B>#}\\<rbrakk>\n       \\<Longrightarrow> int ({#bl - {x}. bl \\<in># \\<B>#} index ps) =\n                         \\<Lambda>", "then"], ["proof (chain)\npicking this:\n  ?ps \\<subseteq> \\<V> - {x} \\<Longrightarrow> ?ps \\<subseteq> \\<V>", "show \"\\<And>ps. ps \\<subseteq> \\<V> - {x} \\<Longrightarrow> card ps = 2  \\<Longrightarrow> {#bl - {x}. bl \\<in># \\<B>#} index ps = \\<Lambda>\""], ["proof (prove)\nusing this:\n  ?ps \\<subseteq> \\<V> - {x} \\<Longrightarrow> ?ps \\<subseteq> \\<V>\n\ngoal (1 subgoal):\n 1. \\<And>ps.\n       \\<lbrakk>ps \\<subseteq> \\<V> - {x}; card ps = 2\\<rbrakk>\n       \\<Longrightarrow> int ({#bl - {x}. bl \\<in># \\<B>#} index ps) =\n                         \\<Lambda>", "using delete_point_index_eq del_point_def del_point_blocks_def"], ["proof (prove)\nusing this:\n  ?ps \\<subseteq> \\<V> - {x} \\<Longrightarrow> ?ps \\<subseteq> \\<V>\n  ?ps \\<subseteq> del_point ?p \\<Longrightarrow>\n  del_point_blocks ?p index ?ps = \\<B> index ?ps\n  del_point ?p \\<equiv> \\<V> - {?p}\n  del_point_blocks ?p \\<equiv> {#bl - {?p}. bl \\<in># \\<B>#}\n\ngoal (1 subgoal):\n 1. \\<And>ps.\n       \\<lbrakk>ps \\<subseteq> \\<V> - {x}; card ps = 2\\<rbrakk>\n       \\<Longrightarrow> int ({#bl - {x}. bl \\<in># \\<B>#} index ps) =\n                         \\<Lambda>", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>?ps \\<subseteq> \\<V> - {x}; card ?ps = 2\\<rbrakk>\n  \\<Longrightarrow> int ({#bl - {x}. bl \\<in># \\<B>#} index ?ps) = \\<Lambda>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pairwise_balance (del_point x) (del_point_blocks x) \\<Lambda>\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<V> \\<Longrightarrow>\n    pairwise_balance (del_point x) (del_point_blocks x) \\<Lambda>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> \\<V> \\<Longrightarrow>\n    pairwise_balance (del_point x) (del_point_blocks x) \\<Lambda>", "case False"], ["proof (state)\nthis:\n  x \\<notin> \\<V>\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<V> \\<Longrightarrow>\n    pairwise_balance (del_point x) (del_point_blocks x) \\<Lambda>", "then"], ["proof (chain)\npicking this:\n  x \\<notin> \\<V>", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<notin> \\<V>\n\ngoal (1 subgoal):\n 1. pairwise_balance (del_point x) (del_point_blocks x) \\<Lambda>", "by (simp add: del_invalid_point del_invalid_point_blocks pairwise_balance_axioms)"], ["proof (state)\nthis:\n  pairwise_balance (del_point x) (del_point_blocks x) \\<Lambda>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context k_GDD\nbegin"], ["", "lemma bibd_from_kGDD:\n  assumes \"\\<k> > 1\"\n  assumes \"\\<And> g. g \\<in> \\<G> \\<Longrightarrow> card g = \\<k> - 1\"\n  assumes \" x \\<notin> \\<V>\"\n  shows \"bibd (add_point x) (\\<B> + mset_set { insert x g | g. g \\<in> \\<G>}) (\\<k>) 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bibd (add_point x) (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) \\<k>\n     1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. bibd (add_point x) (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) \\<k>\n     1", "have \"({\\<k>} \\<union> {(card g) + 1 | g . g \\<in> \\<G>}) = {\\<k>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<k>} \\<union> {int (card g + 1) |g. g \\<in> \\<G>} = {\\<k>}", "using assms(2)"], ["proof (prove)\nusing this:\n  ?g \\<in> \\<G> \\<Longrightarrow> int (card ?g) = \\<k> - 1\n\ngoal (1 subgoal):\n 1. {\\<k>} \\<union> {int (card g + 1) |g. g \\<in> \\<G>} = {\\<k>}", "by fastforce"], ["proof (state)\nthis:\n  {\\<k>} \\<union> {int (card g + 1) |g. g \\<in> \\<G>} = {\\<k>}\n\ngoal (1 subgoal):\n 1. bibd (add_point x) (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) \\<k>\n     1", "then"], ["proof (chain)\npicking this:\n  {\\<k>} \\<union> {int (card g + 1) |g. g \\<in> \\<G>} = {\\<k>}", "interpret pbd: PBD \"(add_point x)\" \"\\<B> + mset_set { insert x g | g. g \\<in> \\<G>}\" \"{\\<k>}\""], ["proof (prove)\nusing this:\n  {\\<k>} \\<union> {int (card g + 1) |g. g \\<in> \\<G>} = {\\<k>}\n\ngoal (1 subgoal):\n 1. PBD (add_point x) (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) {\\<k>}", "using PBD_by_adjoining_point assms sys_block_sizes_obtain_bl add_point_def"], ["proof (prove)\nusing this:\n  {\\<k>} \\<union> {int (card g + 1) |g. g \\<in> \\<G>} = {\\<k>}\n  \\<lbrakk>?x \\<notin> \\<V>;\n   \\<And>k. k \\<in> {\\<k>} \\<Longrightarrow> 2 \\<le> k\\<rbrakk>\n  \\<Longrightarrow> PBD (add_point ?x)\n                     (\\<B> + mset_set {insert ?x g |g. g \\<in> \\<G>})\n                     ({\\<k>} \\<union> {int (card g + 1) |g. g \\<in> \\<G>})\n  1 < \\<k>\n  ?g \\<in> \\<G> \\<Longrightarrow> int (card ?g) = \\<k> - 1\n  x \\<notin> \\<V>\n  ?x \\<in> sys_block_sizes \\<Longrightarrow>\n  \\<exists>bl\\<in>#\\<B>. int (card bl) = ?x\n  add_point ?p \\<equiv> insert ?p \\<V>\n\ngoal (1 subgoal):\n 1. PBD (add_point x) (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) {\\<k>}", "by (smt (verit, best) Collect_cong sys_block_sizes_uniform uniform_alt_def_all)"], ["proof (state)\ngoal (1 subgoal):\n 1. bibd (add_point x) (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) \\<k>\n     1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. bibd (add_point x) (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) \\<k>\n     1", "using assms pbd.block_sizes block_size_lt_v finite_sets add_point_def"], ["proof (prove)\nusing this:\n  1 < \\<k>\n  ?g \\<in> \\<G> \\<Longrightarrow> int (card ?g) = \\<k> - 1\n  x \\<notin> \\<V>\n  ?bl \\<in># \\<B> + mset_set {insert x g |g. g \\<in> \\<G>} \\<Longrightarrow>\n  int (card ?bl) \\<in> {\\<k>}\n  \\<k> \\<le> \\<v>\n  finite \\<V>\n  add_point ?p \\<equiv> insert ?p \\<V>\n\ngoal (1 subgoal):\n 1. bibd (add_point x) (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) \\<k>\n     1", "by (unfold_locales) (simp_all)"], ["proof (state)\nthis:\n  bibd (add_point x) (\\<B> + mset_set {insert x g |g. g \\<in> \\<G>}) \\<k> 1\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context PBD \nbegin"], ["", "lemma pbd_points_index1: \"ps \\<subseteq> \\<V> \\<Longrightarrow> card ps = 2 \\<Longrightarrow> \\<B> index ps = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ps \\<subseteq> \\<V>; card ps = 2\\<rbrakk>\n    \\<Longrightarrow> \\<B> index ps = 1", "using balanced"], ["proof (prove)\nusing this:\n  \\<lbrakk>?ps \\<subseteq> \\<V>; int (card ?ps) = 2\\<rbrakk>\n  \\<Longrightarrow> int (\\<B> index ?ps) = 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ps \\<subseteq> \\<V>; card ps = 2\\<rbrakk>\n    \\<Longrightarrow> \\<B> index ps = 1", "by (metis int_eq_iff_numeral of_nat_1_eq_iff)"], ["", "lemma pbd_index1_points_imply_unique_block: \n  assumes \"b1 \\<in># \\<B>\" and \"b2 \\<in># \\<B>\" and \"b1 \\<noteq> b2\"\n  assumes \"x \\<noteq> y\" and \"{x, y} \\<subseteq> b1\" and \"x \\<in> b2\" \n  shows \"y \\<notin> b2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<notin> b2", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> y \\<notin> b2 \\<Longrightarrow> False", "let ?ps = \"{# b \\<in># \\<B> . {x, y} \\<subseteq> b#}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> y \\<notin> b2 \\<Longrightarrow> False", "assume \"\\<not> y \\<notin> b2\""], ["proof (state)\nthis:\n  \\<not> y \\<notin> b2\n\ngoal (1 subgoal):\n 1. \\<not> y \\<notin> b2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> y \\<notin> b2", "have a: \"y \\<in> b2\""], ["proof (prove)\nusing this:\n  \\<not> y \\<notin> b2\n\ngoal (1 subgoal):\n 1. y \\<in> b2", "by linarith"], ["proof (state)\nthis:\n  y \\<in> b2\n\ngoal (1 subgoal):\n 1. \\<not> y \\<notin> b2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  y \\<in> b2", "have \"{x, y} \\<subseteq> b2\""], ["proof (prove)\nusing this:\n  y \\<in> b2\n\ngoal (1 subgoal):\n 1. {x, y} \\<subseteq> b2", "by (simp add: assms(6))"], ["proof (state)\nthis:\n  {x, y} \\<subseteq> b2\n\ngoal (1 subgoal):\n 1. \\<not> y \\<notin> b2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  {x, y} \\<subseteq> b2", "have \"b1 \\<in># ?ps\" and \"b2 \\<in># ?ps\""], ["proof (prove)\nusing this:\n  {x, y} \\<subseteq> b2\n\ngoal (1 subgoal):\n 1. b1 \\<in># filter_mset ((\\<subseteq>) {x, y}) \\<B> &&&\n    b2 \\<in># filter_mset ((\\<subseteq>) {x, y}) \\<B>", "using assms"], ["proof (prove)\nusing this:\n  {x, y} \\<subseteq> b2\n  b1 \\<in># \\<B>\n  b2 \\<in># \\<B>\n  b1 \\<noteq> b2\n  x \\<noteq> y\n  {x, y} \\<subseteq> b1\n  x \\<in> b2\n\ngoal (1 subgoal):\n 1. b1 \\<in># filter_mset ((\\<subseteq>) {x, y}) \\<B> &&&\n    b2 \\<in># filter_mset ((\\<subseteq>) {x, y}) \\<B>", "by auto"], ["proof (state)\nthis:\n  b1 \\<in># filter_mset ((\\<subseteq>) {x, y}) \\<B>\n  b2 \\<in># filter_mset ((\\<subseteq>) {x, y}) \\<B>\n\ngoal (1 subgoal):\n 1. \\<not> y \\<notin> b2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  b1 \\<in># filter_mset ((\\<subseteq>) {x, y}) \\<B>\n  b2 \\<in># filter_mset ((\\<subseteq>) {x, y}) \\<B>", "have ss: \"{#b1, b2#} \\<subseteq># ?ps\""], ["proof (prove)\nusing this:\n  b1 \\<in># filter_mset ((\\<subseteq>) {x, y}) \\<B>\n  b2 \\<in># filter_mset ((\\<subseteq>) {x, y}) \\<B>\n\ngoal (1 subgoal):\n 1. {#b1, b2#} \\<subseteq># filter_mset ((\\<subseteq>) {x, y}) \\<B>", "using assms"], ["proof (prove)\nusing this:\n  b1 \\<in># filter_mset ((\\<subseteq>) {x, y}) \\<B>\n  b2 \\<in># filter_mset ((\\<subseteq>) {x, y}) \\<B>\n  b1 \\<in># \\<B>\n  b2 \\<in># \\<B>\n  b1 \\<noteq> b2\n  x \\<noteq> y\n  {x, y} \\<subseteq> b1\n  x \\<in> b2\n\ngoal (1 subgoal):\n 1. {#b1, b2#} \\<subseteq># filter_mset ((\\<subseteq>) {x, y}) \\<B>", "by (metis insert_noteq_member mset_add mset_subset_eq_add_mset_cancel single_subset_iff)"], ["proof (state)\nthis:\n  {#b1, b2#} \\<subseteq># filter_mset ((\\<subseteq>) {x, y}) \\<B>\n\ngoal (1 subgoal):\n 1. \\<not> y \\<notin> b2 \\<Longrightarrow> False", "have \"size {#b1, b2#} = 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size {#b1, b2#} = 2", "using assms"], ["proof (prove)\nusing this:\n  b1 \\<in># \\<B>\n  b2 \\<in># \\<B>\n  b1 \\<noteq> b2\n  x \\<noteq> y\n  {x, y} \\<subseteq> b1\n  x \\<in> b2\n\ngoal (1 subgoal):\n 1. size {#b1, b2#} = 2", "by auto"], ["proof (state)\nthis:\n  size {#b1, b2#} = 2\n\ngoal (1 subgoal):\n 1. \\<not> y \\<notin> b2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  size {#b1, b2#} = 2", "have ge2: \"size ?ps \\<ge> 2\""], ["proof (prove)\nusing this:\n  size {#b1, b2#} = 2\n\ngoal (1 subgoal):\n 1. 2 \\<le> size (filter_mset ((\\<subseteq>) {x, y}) \\<B>)", "using assms ss"], ["proof (prove)\nusing this:\n  size {#b1, b2#} = 2\n  b1 \\<in># \\<B>\n  b2 \\<in># \\<B>\n  b1 \\<noteq> b2\n  x \\<noteq> y\n  {x, y} \\<subseteq> b1\n  x \\<in> b2\n  {#b1, b2#} \\<subseteq># filter_mset ((\\<subseteq>) {x, y}) \\<B>\n\ngoal (1 subgoal):\n 1. 2 \\<le> size (filter_mset ((\\<subseteq>) {x, y}) \\<B>)", "by (metis size_mset_mono)"], ["proof (state)\nthis:\n  2 \\<le> size (filter_mset ((\\<subseteq>) {x, y}) \\<B>)\n\ngoal (1 subgoal):\n 1. \\<not> y \\<notin> b2 \\<Longrightarrow> False", "have pair: \"card {x, y} = 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {x, y} = 2", "using assms"], ["proof (prove)\nusing this:\n  b1 \\<in># \\<B>\n  b2 \\<in># \\<B>\n  b1 \\<noteq> b2\n  x \\<noteq> y\n  {x, y} \\<subseteq> b1\n  x \\<in> b2\n\ngoal (1 subgoal):\n 1. card {x, y} = 2", "by auto"], ["proof (state)\nthis:\n  card {x, y} = 2\n\ngoal (1 subgoal):\n 1. \\<not> y \\<notin> b2 \\<Longrightarrow> False", "have \"{x, y} \\<subseteq> \\<V>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x, y} \\<subseteq> \\<V>", "using assms wellformed"], ["proof (prove)\nusing this:\n  b1 \\<in># \\<B>\n  b2 \\<in># \\<B>\n  b1 \\<noteq> b2\n  x \\<noteq> y\n  {x, y} \\<subseteq> b1\n  x \\<in> b2\n  ?b \\<in># \\<B> \\<Longrightarrow> ?b \\<subseteq> \\<V>\n\ngoal (1 subgoal):\n 1. {x, y} \\<subseteq> \\<V>", "by auto"], ["proof (state)\nthis:\n  {x, y} \\<subseteq> \\<V>\n\ngoal (1 subgoal):\n 1. \\<not> y \\<notin> b2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  {x, y} \\<subseteq> \\<V>", "have \"\\<B> index {x, y} = 1\""], ["proof (prove)\nusing this:\n  {x, y} \\<subseteq> \\<V>\n\ngoal (1 subgoal):\n 1. \\<B> index {x, y} = 1", "using pbd_points_index1 pair"], ["proof (prove)\nusing this:\n  {x, y} \\<subseteq> \\<V>\n  \\<lbrakk>?ps \\<subseteq> \\<V>; card ?ps = 2\\<rbrakk>\n  \\<Longrightarrow> \\<B> index ?ps = 1\n  card {x, y} = 2\n\ngoal (1 subgoal):\n 1. \\<B> index {x, y} = 1", "by simp"], ["proof (state)\nthis:\n  \\<B> index {x, y} = 1\n\ngoal (1 subgoal):\n 1. \\<not> y \\<notin> b2 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<B> index {x, y} = 1", "show False"], ["proof (prove)\nusing this:\n  \\<B> index {x, y} = 1\n\ngoal (1 subgoal):\n 1. False", "using points_index_def ge2"], ["proof (prove)\nusing this:\n  \\<B> index {x, y} = 1\n  ?B index ?ps \\<equiv> size (filter_mset ((\\<subseteq>) ?ps) ?B)\n  2 \\<le> size (filter_mset ((\\<subseteq>) {x, y}) \\<B>)\n\ngoal (1 subgoal):\n 1. False", "by (metis numeral_le_one_iff semiring_norm(69))"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma strong_delete_point_groups_index_zero: \n  assumes \"G \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\"\n  assumes \"xa \\<in> G\" and \"y \\<in> G\" and \"xa \\<noteq> y\"\n  shows \"(str_del_point_blocks x) index {xa, y} = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. str_del_point_blocks x index {xa, y} = 0", "proof (auto simp add: points_index_0_iff str_del_point_blocks_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>b \\<in># \\<B>; x \\<notin> b; xa \\<in> b; y \\<in> b\\<rbrakk>\n       \\<Longrightarrow> False", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>b \\<in># \\<B>; x \\<notin> b; xa \\<in> b; y \\<in> b\\<rbrakk>\n       \\<Longrightarrow> False", "assume a1: \"b \\<in># \\<B>\" and a2: \"x \\<notin> b\" and a3: \"xa \\<in> b\" and a4: \"y \\<in> b\""], ["proof (state)\nthis:\n  b \\<in># \\<B>\n  x \\<notin> b\n  xa \\<in> b\n  y \\<in> b\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>b \\<in># \\<B>; x \\<notin> b; xa \\<in> b; y \\<in> b\\<rbrakk>\n       \\<Longrightarrow> False", "obtain b' where \"G = b' - {x}\" and \"b' \\<in># \\<B>\" and  \"x \\<in> b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b'.\n        \\<lbrakk>G = b' - {x}; b' \\<in># \\<B>; x \\<in> b'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  G \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\n  xa \\<in> G\n  y \\<in> G\n  xa \\<noteq> y\n\ngoal (1 subgoal):\n 1. (\\<And>b'.\n        \\<lbrakk>G = b' - {x}; b' \\<in># \\<B>; x \\<in> b'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  G = b' - {x}\n  b' \\<in># \\<B>\n  x \\<in> b'\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>b \\<in># \\<B>; x \\<notin> b; xa \\<in> b; y \\<in> b\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  G = b' - {x}\n  b' \\<in># \\<B>\n  x \\<in> b'", "show False"], ["proof (prove)\nusing this:\n  G = b' - {x}\n  b' \\<in># \\<B>\n  x \\<in> b'\n\ngoal (1 subgoal):\n 1. False", "using a1 a2 a3 a4 assms pbd_index1_points_imply_unique_block"], ["proof (prove)\nusing this:\n  G = b' - {x}\n  b' \\<in># \\<B>\n  x \\<in> b'\n  b \\<in># \\<B>\n  x \\<notin> b\n  xa \\<in> b\n  y \\<in> b\n  G \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\n  xa \\<in> G\n  y \\<in> G\n  xa \\<noteq> y\n  \\<lbrakk>?b1.0 \\<in># \\<B>; ?b2.0 \\<in># \\<B>; ?b1.0 \\<noteq> ?b2.0;\n   ?x \\<noteq> ?y; {?x, ?y} \\<subseteq> ?b1.0; ?x \\<in> ?b2.0\\<rbrakk>\n  \\<Longrightarrow> ?y \\<notin> ?b2.0\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma strong_delete_point_groups_index_one: \n  assumes \"G1 \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\"\n  assumes \"G2 \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\"\n  assumes \"G1 \\<noteq> G2\" and \"xa \\<in> G1\" and \"y \\<in> G2\"\n  shows  \"(str_del_point_blocks x) index {xa, y} = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. str_del_point_blocks x index {xa, y} = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. str_del_point_blocks x index {xa, y} = 1", "obtain b1 where gb1: \"G1 = b1 - {x}\" and b1in: \"b1 \\<in># \\<B>\" and xin1: \"x \\<in> b1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b1.\n        \\<lbrakk>G1 = b1 - {x}; b1 \\<in># \\<B>; x \\<in> b1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  G1 \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\n  G2 \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\n  G1 \\<noteq> G2\n  xa \\<in> G1\n  y \\<in> G2\n\ngoal (1 subgoal):\n 1. (\\<And>b1.\n        \\<lbrakk>G1 = b1 - {x}; b1 \\<in># \\<B>; x \\<in> b1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  G1 = b1 - {x}\n  b1 \\<in># \\<B>\n  x \\<in> b1\n\ngoal (1 subgoal):\n 1. str_del_point_blocks x index {xa, y} = 1", "obtain b2 where gb2: \"G2 = b2 - {x}\" and b2in: \"b2 \\<in># \\<B>\" and xin2:\"x \\<in> b2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b2.\n        \\<lbrakk>G2 = b2 - {x}; b2 \\<in># \\<B>; x \\<in> b2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  G1 \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\n  G2 \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\n  G1 \\<noteq> G2\n  xa \\<in> G1\n  y \\<in> G2\n\ngoal (1 subgoal):\n 1. (\\<And>b2.\n        \\<lbrakk>G2 = b2 - {x}; b2 \\<in># \\<B>; x \\<in> b2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  G2 = b2 - {x}\n  b2 \\<in># \\<B>\n  x \\<in> b2\n\ngoal (1 subgoal):\n 1. str_del_point_blocks x index {xa, y} = 1", "have bneq: \"b1 \\<noteq> b2 \""], ["proof (prove)\ngoal (1 subgoal):\n 1. b1 \\<noteq> b2", "using assms(3) gb1 gb2"], ["proof (prove)\nusing this:\n  G1 \\<noteq> G2\n  G1 = b1 - {x}\n  G2 = b2 - {x}\n\ngoal (1 subgoal):\n 1. b1 \\<noteq> b2", "by auto"], ["proof (state)\nthis:\n  b1 \\<noteq> b2\n\ngoal (1 subgoal):\n 1. str_del_point_blocks x index {xa, y} = 1", "have \"xa \\<noteq> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xa \\<noteq> y", "using gb1 b1in xin1 gb2 b2in xin2 assms(3) assms(4) assms(5) insert_subset"], ["proof (prove)\nusing this:\n  G1 = b1 - {x}\n  b1 \\<in># \\<B>\n  x \\<in> b1\n  G2 = b2 - {x}\n  b2 \\<in># \\<B>\n  x \\<in> b2\n  G1 \\<noteq> G2\n  xa \\<in> G1\n  y \\<in> G2\n  (insert ?x ?A \\<subseteq> ?B) = (?x \\<in> ?B \\<and> ?A \\<subseteq> ?B)\n\ngoal (1 subgoal):\n 1. xa \\<noteq> y", "by (smt (verit, best) Diff_eq_empty_iff Diff_iff empty_Diff insertCI pbd_index1_points_imply_unique_block)"], ["proof (state)\nthis:\n  xa \\<noteq> y\n\ngoal (1 subgoal):\n 1. str_del_point_blocks x index {xa, y} = 1", "then"], ["proof (chain)\npicking this:\n  xa \\<noteq> y", "have pair: \"card {xa, y} = 2\""], ["proof (prove)\nusing this:\n  xa \\<noteq> y\n\ngoal (1 subgoal):\n 1. card {xa, y} = 2", "by simp"], ["proof (state)\nthis:\n  card {xa, y} = 2\n\ngoal (1 subgoal):\n 1. str_del_point_blocks x index {xa, y} = 1", "have inv: \"{xa, y} \\<subseteq> \\<V>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {xa, y} \\<subseteq> \\<V>", "using gb1 b1in gb2 b2in assms(4) assms(5)"], ["proof (prove)\nusing this:\n  G1 = b1 - {x}\n  b1 \\<in># \\<B>\n  G2 = b2 - {x}\n  b2 \\<in># \\<B>\n  xa \\<in> G1\n  y \\<in> G2\n\ngoal (1 subgoal):\n 1. {xa, y} \\<subseteq> \\<V>", "by (metis Diff_cancel Diff_subset insert_Diff insert_subset wellformed)"], ["proof (state)\nthis:\n  {xa, y} \\<subseteq> \\<V>\n\ngoal (1 subgoal):\n 1. str_del_point_blocks x index {xa, y} = 1", "have \"{# bl \\<in># \\<B> . x \\<in> bl#} index {xa, y} = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filter_mset ((\\<in>) x) \\<B> index {xa, y} = 0", "proof (auto simp add: points_index_0_iff)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>b \\<in># \\<B>; x \\<in> b; xa \\<in> b; y \\<in> b\\<rbrakk>\n       \\<Longrightarrow> False", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>b \\<in># \\<B>; x \\<in> b; xa \\<in> b; y \\<in> b\\<rbrakk>\n       \\<Longrightarrow> False", "assume a1: \"b \\<in># \\<B>\" and a2: \"x \\<in> b\" and a3: \"xa \\<in> b\" and a4: \"y \\<in> b\""], ["proof (state)\nthis:\n  b \\<in># \\<B>\n  x \\<in> b\n  xa \\<in> b\n  y \\<in> b\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>b \\<in># \\<B>; x \\<in> b; xa \\<in> b; y \\<in> b\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  b \\<in># \\<B>\n  x \\<in> b\n  xa \\<in> b\n  y \\<in> b", "have yxss: \"{y, x} \\<subseteq> b2\""], ["proof (prove)\nusing this:\n  b \\<in># \\<B>\n  x \\<in> b\n  xa \\<in> b\n  y \\<in> b\n\ngoal (1 subgoal):\n 1. {y, x} \\<subseteq> b2", "using assms(5) gb2 xin2"], ["proof (prove)\nusing this:\n  b \\<in># \\<B>\n  x \\<in> b\n  xa \\<in> b\n  y \\<in> b\n  y \\<in> G2\n  G2 = b2 - {x}\n  x \\<in> b2\n\ngoal (1 subgoal):\n 1. {y, x} \\<subseteq> b2", "by blast"], ["proof (state)\nthis:\n  {y, x} \\<subseteq> b2\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>b \\<in># \\<B>; x \\<in> b; xa \\<in> b; y \\<in> b\\<rbrakk>\n       \\<Longrightarrow> False", "have \"{xa, x} \\<subseteq> b1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {xa, x} \\<subseteq> b1", "using assms(4) gb1 xin1"], ["proof (prove)\nusing this:\n  xa \\<in> G1\n  G1 = b1 - {x}\n  x \\<in> b1\n\ngoal (1 subgoal):\n 1. {xa, x} \\<subseteq> b1", "by auto"], ["proof (state)\nthis:\n  {xa, x} \\<subseteq> b1\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>b \\<in># \\<B>; x \\<in> b; xa \\<in> b; y \\<in> b\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  {xa, x} \\<subseteq> b1", "have \"xa \\<notin> b2\""], ["proof (prove)\nusing this:\n  {xa, x} \\<subseteq> b1\n\ngoal (1 subgoal):\n 1. xa \\<notin> b2", "using pbd_index1_points_imply_unique_block"], ["proof (prove)\nusing this:\n  {xa, x} \\<subseteq> b1\n  \\<lbrakk>?b1.0 \\<in># \\<B>; ?b2.0 \\<in># \\<B>; ?b1.0 \\<noteq> ?b2.0;\n   ?x \\<noteq> ?y; {?x, ?y} \\<subseteq> ?b1.0; ?x \\<in> ?b2.0\\<rbrakk>\n  \\<Longrightarrow> ?y \\<notin> ?b2.0\n\ngoal (1 subgoal):\n 1. xa \\<notin> b2", "by (metis DiffE assms(4) b1in b2in bneq gb1 singletonI xin2)"], ["proof (state)\nthis:\n  xa \\<notin> b2\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>b \\<in># \\<B>; x \\<in> b; xa \\<in> b; y \\<in> b\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  xa \\<notin> b2", "have \"b2 \\<noteq> b\""], ["proof (prove)\nusing this:\n  xa \\<notin> b2\n\ngoal (1 subgoal):\n 1. b2 \\<noteq> b", "using a3"], ["proof (prove)\nusing this:\n  xa \\<notin> b2\n  xa \\<in> b\n\ngoal (1 subgoal):\n 1. b2 \\<noteq> b", "by auto"], ["proof (state)\nthis:\n  b2 \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>b \\<in># \\<B>; x \\<in> b; xa \\<in> b; y \\<in> b\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  b2 \\<noteq> b", "show False"], ["proof (prove)\nusing this:\n  b2 \\<noteq> b\n\ngoal (1 subgoal):\n 1. False", "using pbd_index1_points_imply_unique_block"], ["proof (prove)\nusing this:\n  b2 \\<noteq> b\n  \\<lbrakk>?b1.0 \\<in># \\<B>; ?b2.0 \\<in># \\<B>; ?b1.0 \\<noteq> ?b2.0;\n   ?x \\<noteq> ?y; {?x, ?y} \\<subseteq> ?b1.0; ?x \\<in> ?b2.0\\<rbrakk>\n  \\<Longrightarrow> ?y \\<notin> ?b2.0\n\ngoal (1 subgoal):\n 1. False", "by (metis DiffD2 yxss a1 a2 a4 assms(5) b2in gb2 insertI1)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  filter_mset ((\\<in>) x) \\<B> index {xa, y} = 0\n\ngoal (1 subgoal):\n 1. str_del_point_blocks x index {xa, y} = 1", "then"], ["proof (chain)\npicking this:\n  filter_mset ((\\<in>) x) \\<B> index {xa, y} = 0", "have \"(str_del_point_blocks x) index {xa, y} = \\<B> index {xa, y}\""], ["proof (prove)\nusing this:\n  filter_mset ((\\<in>) x) \\<B> index {xa, y} = 0\n\ngoal (1 subgoal):\n 1. str_del_point_blocks x index {xa, y} = \\<B> index {xa, y}", "by (metis multiset_partition plus_nat.add_0 point_index_distrib str_del_point_blocks_def)"], ["proof (state)\nthis:\n  str_del_point_blocks x index {xa, y} = \\<B> index {xa, y}\n\ngoal (1 subgoal):\n 1. str_del_point_blocks x index {xa, y} = 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  str_del_point_blocks x index {xa, y} = \\<B> index {xa, y}\n\ngoal (1 subgoal):\n 1. str_del_point_blocks x index {xa, y} = 1", "using pbd_points_index1 pair inv"], ["proof (prove)\nusing this:\n  str_del_point_blocks x index {xa, y} = \\<B> index {xa, y}\n  \\<lbrakk>?ps \\<subseteq> \\<V>; card ?ps = 2\\<rbrakk>\n  \\<Longrightarrow> \\<B> index ?ps = 1\n  card {xa, y} = 2\n  {xa, y} \\<subseteq> \\<V>\n\ngoal (1 subgoal):\n 1. str_del_point_blocks x index {xa, y} = 1", "by fastforce"], ["proof (state)\nthis:\n  str_del_point_blocks x index {xa, y} = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma blocks_with_x_partition: \n  assumes \"x \\<in> \\<V>\"\n  shows \"partition_on (\\<V> - {x}) {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. partition_on (\\<V> - {x}) {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "proof (intro partition_onI )"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>p.\n       p \\<in> {b - {x} |b.\n                b \\<in># \\<B> \\<and> x \\<in> b} \\<Longrightarrow>\n       p \\<noteq> {}\n 2. \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b} = \\<V> - {x}\n 3. \\<And>p p'.\n       \\<lbrakk>p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p' \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "have gtt: \"\\<And> bl. bl \\<in># \\<B> \\<Longrightarrow> card bl \\<ge> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>bl. bl \\<in># \\<B> \\<Longrightarrow> 2 \\<le> card bl", "using block_size_gt_t"], ["proof (prove)\nusing this:\n  ?k \\<in> \\<K> \\<Longrightarrow> 2 \\<le> ?k\n\ngoal (1 subgoal):\n 1. \\<And>bl. bl \\<in># \\<B> \\<Longrightarrow> 2 \\<le> card bl", "by (simp add: block_sizes nat_int_comparison(3))"], ["proof (state)\nthis:\n  ?bl \\<in># \\<B> \\<Longrightarrow> 2 \\<le> card ?bl\n\ngoal (3 subgoals):\n 1. \\<And>p.\n       p \\<in> {b - {x} |b.\n                b \\<in># \\<B> \\<and> x \\<in> b} \\<Longrightarrow>\n       p \\<noteq> {}\n 2. \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b} = \\<V> - {x}\n 3. \\<And>p p'.\n       \\<lbrakk>p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p' \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "show \"\\<And>p. p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b} \\<Longrightarrow> p \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {b - {x} |b.\n                b \\<in># \\<B> \\<and> x \\<in> b} \\<Longrightarrow>\n       p \\<noteq> {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {b - {x} |b.\n                b \\<in># \\<B> \\<and> x \\<in> b} \\<Longrightarrow>\n       p \\<noteq> {}", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {b - {x} |b.\n                b \\<in># \\<B> \\<and> x \\<in> b} \\<Longrightarrow>\n       p \\<noteq> {}", "assume \"p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\""], ["proof (state)\nthis:\n  p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {b - {x} |b.\n                b \\<in># \\<B> \\<and> x \\<in> b} \\<Longrightarrow>\n       p \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "obtain b where ptx: \"p = b - {x}\" and \"b \\<in># \\<B>\" and xinb: \"x \\<in> b\""], ["proof (prove)\nusing this:\n  p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>p = b - {x}; b \\<in># \\<B>; x \\<in> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  p = b - {x}\n  b \\<in># \\<B>\n  x \\<in> b\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {b - {x} |b.\n                b \\<in># \\<B> \\<and> x \\<in> b} \\<Longrightarrow>\n       p \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  p = b - {x}\n  b \\<in># \\<B>\n  x \\<in> b", "have ge2: \"card b \\<ge> 2\""], ["proof (prove)\nusing this:\n  p = b - {x}\n  b \\<in># \\<B>\n  x \\<in> b\n\ngoal (1 subgoal):\n 1. 2 \\<le> card b", "using gtt"], ["proof (prove)\nusing this:\n  p = b - {x}\n  b \\<in># \\<B>\n  x \\<in> b\n  ?bl \\<in># \\<B> \\<Longrightarrow> 2 \\<le> card ?bl\n\ngoal (1 subgoal):\n 1. 2 \\<le> card b", "by (simp add: nat_int_comparison(3))"], ["proof (state)\nthis:\n  2 \\<le> card b\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {b - {x} |b.\n                b \\<in># \\<B> \\<and> x \\<in> b} \\<Longrightarrow>\n       p \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  2 \\<le> card b", "have \"finite b\""], ["proof (prove)\nusing this:\n  2 \\<le> card b\n\ngoal (1 subgoal):\n 1. finite b", "by (metis card.infinite not_numeral_le_zero)"], ["proof (state)\nthis:\n  finite b\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {b - {x} |b.\n                b \\<in># \\<B> \\<and> x \\<in> b} \\<Longrightarrow>\n       p \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  finite b", "have \"card p = card b - 1\""], ["proof (prove)\nusing this:\n  finite b\n\ngoal (1 subgoal):\n 1. card p = card b - 1", "using xinb ptx"], ["proof (prove)\nusing this:\n  finite b\n  x \\<in> b\n  p = b - {x}\n\ngoal (1 subgoal):\n 1. card p = card b - 1", "by simp"], ["proof (state)\nthis:\n  card p = card b - 1\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {b - {x} |b.\n                b \\<in># \\<B> \\<and> x \\<in> b} \\<Longrightarrow>\n       p \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  card p = card b - 1", "have \"card p \\<ge> 1\""], ["proof (prove)\nusing this:\n  card p = card b - 1\n\ngoal (1 subgoal):\n 1. 1 \\<le> card p", "using ge2"], ["proof (prove)\nusing this:\n  card p = card b - 1\n  2 \\<le> card b\n\ngoal (1 subgoal):\n 1. 1 \\<le> card p", "by linarith"], ["proof (state)\nthis:\n  1 \\<le> card p\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       p \\<in> {b - {x} |b.\n                b \\<in># \\<B> \\<and> x \\<in> b} \\<Longrightarrow>\n       p \\<noteq> {}", "thus \"p \\<noteq> {}\""], ["proof (prove)\nusing this:\n  1 \\<le> card p\n\ngoal (1 subgoal):\n 1. p \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  p \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b} \\<Longrightarrow>\n  ?p \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b} = \\<V> - {x}\n 2. \\<And>p p'.\n       \\<lbrakk>p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p' \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "show \"\\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b} = \\<V> - {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b} = \\<V> - {x}", "proof (intro subset_antisym subsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<Union>\n                 {b - {x} |b.\n                  b \\<in># \\<B> \\<and> x \\<in> b} \\<Longrightarrow>\n       xa \\<in> \\<V> - {x}\n 2. \\<And>xa.\n       xa \\<in> \\<V> - {x} \\<Longrightarrow>\n       xa \\<in> \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "fix xa"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<Union>\n                 {b - {x} |b.\n                  b \\<in># \\<B> \\<and> x \\<in> b} \\<Longrightarrow>\n       xa \\<in> \\<V> - {x}\n 2. \\<And>xa.\n       xa \\<in> \\<V> - {x} \\<Longrightarrow>\n       xa \\<in> \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "assume \"xa \\<in> \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\""], ["proof (state)\nthis:\n  xa \\<in> \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<Union>\n                 {b - {x} |b.\n                  b \\<in># \\<B> \\<and> x \\<in> b} \\<Longrightarrow>\n       xa \\<in> \\<V> - {x}\n 2. \\<And>xa.\n       xa \\<in> \\<V> - {x} \\<Longrightarrow>\n       xa \\<in> \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "then"], ["proof (chain)\npicking this:\n  xa \\<in> \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "obtain b where \"xa \\<in> b\" and \"b \\<in># \\<B>\" and \"x \\<in> b\" and \"xa \\<noteq> x\""], ["proof (prove)\nusing this:\n  xa \\<in> \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>xa \\<in> b; b \\<in># \\<B>; x \\<in> b;\n         xa \\<noteq> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  xa \\<in> b\n  b \\<in># \\<B>\n  x \\<in> b\n  xa \\<noteq> x\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<Union>\n                 {b - {x} |b.\n                  b \\<in># \\<B> \\<and> x \\<in> b} \\<Longrightarrow>\n       xa \\<in> \\<V> - {x}\n 2. \\<And>xa.\n       xa \\<in> \\<V> - {x} \\<Longrightarrow>\n       xa \\<in> \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "then"], ["proof (chain)\npicking this:\n  xa \\<in> b\n  b \\<in># \\<B>\n  x \\<in> b\n  xa \\<noteq> x", "show \"xa \\<in> \\<V> - {x}\""], ["proof (prove)\nusing this:\n  xa \\<in> b\n  b \\<in># \\<B>\n  x \\<in> b\n  xa \\<noteq> x\n\ngoal (1 subgoal):\n 1. xa \\<in> \\<V> - {x}", "using wf_invalid_point"], ["proof (prove)\nusing this:\n  xa \\<in> b\n  b \\<in># \\<B>\n  x \\<in> b\n  xa \\<noteq> x\n  \\<lbrakk>?x \\<notin> \\<V>; ?b \\<in># \\<B>\\<rbrakk>\n  \\<Longrightarrow> ?x \\<notin> ?b\n\ngoal (1 subgoal):\n 1. xa \\<in> \\<V> - {x}", "by blast"], ["proof (state)\nthis:\n  xa \\<in> \\<V> - {x}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> \\<V> - {x} \\<Longrightarrow>\n       xa \\<in> \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> \\<V> - {x} \\<Longrightarrow>\n       xa \\<in> \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "fix xa"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> \\<V> - {x} \\<Longrightarrow>\n       xa \\<in> \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "assume a: \"xa \\<in> \\<V> - {x}\""], ["proof (state)\nthis:\n  xa \\<in> \\<V> - {x}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> \\<V> - {x} \\<Longrightarrow>\n       xa \\<in> \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "then"], ["proof (chain)\npicking this:\n  xa \\<in> \\<V> - {x}", "have nex: \"xa \\<noteq> x\""], ["proof (prove)\nusing this:\n  xa \\<in> \\<V> - {x}\n\ngoal (1 subgoal):\n 1. xa \\<noteq> x", "by simp"], ["proof (state)\nthis:\n  xa \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> \\<V> - {x} \\<Longrightarrow>\n       xa \\<in> \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "then"], ["proof (chain)\npicking this:\n  xa \\<noteq> x", "have pair: \"card {xa, x} = 2\""], ["proof (prove)\nusing this:\n  xa \\<noteq> x\n\ngoal (1 subgoal):\n 1. card {xa, x} = 2", "by simp"], ["proof (state)\nthis:\n  card {xa, x} = 2\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> \\<V> - {x} \\<Longrightarrow>\n       xa \\<in> \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "have \"{xa, x} \\<subseteq> \\<V>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {xa, x} \\<subseteq> \\<V>", "using a assms"], ["proof (prove)\nusing this:\n  xa \\<in> \\<V> - {x}\n  x \\<in> \\<V>\n\ngoal (1 subgoal):\n 1. {xa, x} \\<subseteq> \\<V>", "by auto"], ["proof (state)\nthis:\n  {xa, x} \\<subseteq> \\<V>\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> \\<V> - {x} \\<Longrightarrow>\n       xa \\<in> \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "then"], ["proof (chain)\npicking this:\n  {xa, x} \\<subseteq> \\<V>", "have \"card {b \\<in> design_support . {xa, x} \\<subseteq> b} = 1\""], ["proof (prove)\nusing this:\n  {xa, x} \\<subseteq> \\<V>\n\ngoal (1 subgoal):\n 1. card {b \\<in> design_support. {xa, x} \\<subseteq> b} = 1", "using balanced points_index_simple_def pbd_points_index1 assms"], ["proof (prove)\nusing this:\n  {xa, x} \\<subseteq> \\<V>\n  \\<lbrakk>?ps \\<subseteq> \\<V>; int (card ?ps) = 2\\<rbrakk>\n  \\<Longrightarrow> int (\\<B> index ?ps) = 1\n  \\<B> index ?ps = card {b \\<in> design_support. ?ps \\<subseteq> b}\n  \\<lbrakk>?ps \\<subseteq> \\<V>; card ?ps = 2\\<rbrakk>\n  \\<Longrightarrow> \\<B> index ?ps = 1\n  x \\<in> \\<V>\n\ngoal (1 subgoal):\n 1. card {b \\<in> design_support. {xa, x} \\<subseteq> b} = 1", "by (metis pair)"], ["proof (state)\nthis:\n  card {b \\<in> design_support. {xa, x} \\<subseteq> b} = 1\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> \\<V> - {x} \\<Longrightarrow>\n       xa \\<in> \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "then"], ["proof (chain)\npicking this:\n  card {b \\<in> design_support. {xa, x} \\<subseteq> b} = 1", "obtain b where des: \"b \\<in> design_support\" and ss: \"{xa, x} \\<subseteq> b\""], ["proof (prove)\nusing this:\n  card {b \\<in> design_support. {xa, x} \\<subseteq> b} = 1\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in> design_support; {xa, x} \\<subseteq> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (no_types, lifting) card_1_singletonE mem_Collect_eq singletonI)"], ["proof (state)\nthis:\n  b \\<in> design_support\n  {xa, x} \\<subseteq> b\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> \\<V> - {x} \\<Longrightarrow>\n       xa \\<in> \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "then"], ["proof (chain)\npicking this:\n  b \\<in> design_support\n  {xa, x} \\<subseteq> b", "show \"xa \\<in> \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\""], ["proof (prove)\nusing this:\n  b \\<in> design_support\n  {xa, x} \\<subseteq> b\n\ngoal (1 subgoal):\n 1. xa \\<in> \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "using des ss nex design_support_def"], ["proof (prove)\nusing this:\n  b \\<in> design_support\n  {xa, x} \\<subseteq> b\n  b \\<in> design_support\n  {xa, x} \\<subseteq> b\n  xa \\<noteq> x\n  design_support \\<equiv> set_mset \\<B>\n\ngoal (1 subgoal):\n 1. xa \\<in> \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "by auto"], ["proof (state)\nthis:\n  xa \\<in> \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Union> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b} = \\<V> - {x}\n\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p' \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "show \"\\<And>p p'. p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b} \\<Longrightarrow> p' \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b} \\<Longrightarrow> \n    p \\<noteq> p' \\<Longrightarrow> p \\<inter> p' = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p' \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p' \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "fix p p'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p' \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "assume p1: \"p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\" and p2: \"p' \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\" \n      and pne: \"p \\<noteq> p'\""], ["proof (state)\nthis:\n  p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\n  p' \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\n  p \\<noteq> p'\n\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p' \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "then"], ["proof (chain)\npicking this:\n  p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\n  p' \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\n  p \\<noteq> p'", "obtain b where b1: \"p = b - {x}\" and b1in:\"b \\<in># \\<B>\" and xinb1:\"x \\<in> b\""], ["proof (prove)\nusing this:\n  p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\n  p' \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\n  p \\<noteq> p'\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>p = b - {x}; b \\<in># \\<B>; x \\<in> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  p = b - {x}\n  b \\<in># \\<B>\n  x \\<in> b\n\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p' \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "then"], ["proof (chain)\npicking this:\n  p = b - {x}\n  b \\<in># \\<B>\n  x \\<in> b", "obtain b' where b2: \"p' = b' - {x}\" and b2in: \"b' \\<in># \\<B>\" and xinb2: \"x \\<in> b'\""], ["proof (prove)\nusing this:\n  p = b - {x}\n  b \\<in># \\<B>\n  x \\<in> b\n\ngoal (1 subgoal):\n 1. (\\<And>b'.\n        \\<lbrakk>p' = b' - {x}; b' \\<in># \\<B>; x \\<in> b'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using p2"], ["proof (prove)\nusing this:\n  p = b - {x}\n  b \\<in># \\<B>\n  x \\<in> b\n  p' \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\n\ngoal (1 subgoal):\n 1. (\\<And>b'.\n        \\<lbrakk>p' = b' - {x}; b' \\<in># \\<B>; x \\<in> b'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  p' = b' - {x}\n  b' \\<in># \\<B>\n  x \\<in> b'\n\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p' \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "then"], ["proof (chain)\npicking this:\n  p' = b' - {x}\n  b' \\<in># \\<B>\n  x \\<in> b'", "have \"b \\<noteq> b'\""], ["proof (prove)\nusing this:\n  p' = b' - {x}\n  b' \\<in># \\<B>\n  x \\<in> b'\n\ngoal (1 subgoal):\n 1. b \\<noteq> b'", "using pne b1"], ["proof (prove)\nusing this:\n  p' = b' - {x}\n  b' \\<in># \\<B>\n  x \\<in> b'\n  p \\<noteq> p'\n  p = b - {x}\n\ngoal (1 subgoal):\n 1. b \\<noteq> b'", "by auto"], ["proof (state)\nthis:\n  b \\<noteq> b'\n\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p' \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "then"], ["proof (chain)\npicking this:\n  b \\<noteq> b'", "have \"\\<And> y. y \\<in> b \\<Longrightarrow> y \\<noteq> x \\<Longrightarrow> y \\<notin> b'\""], ["proof (prove)\nusing this:\n  b \\<noteq> b'\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> b; y \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> y \\<notin> b'", "using b1in b2in xinb1 xinb2 pbd_index1_points_imply_unique_block"], ["proof (prove)\nusing this:\n  b \\<noteq> b'\n  b \\<in># \\<B>\n  b' \\<in># \\<B>\n  x \\<in> b\n  x \\<in> b'\n  \\<lbrakk>?b1.0 \\<in># \\<B>; ?b2.0 \\<in># \\<B>; ?b1.0 \\<noteq> ?b2.0;\n   ?x \\<noteq> ?y; {?x, ?y} \\<subseteq> ?b1.0; ?x \\<in> ?b2.0\\<rbrakk>\n  \\<Longrightarrow> ?y \\<notin> ?b2.0\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> b; y \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> y \\<notin> b'", "by (meson empty_subsetI insert_subset)"], ["proof (state)\nthis:\n  \\<lbrakk>?y \\<in> b; ?y \\<noteq> x\\<rbrakk>\n  \\<Longrightarrow> ?y \\<notin> b'\n\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p' \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?y \\<in> b; ?y \\<noteq> x\\<rbrakk>\n  \\<Longrightarrow> ?y \\<notin> b'", "have \"\\<And> y. y \\<in> p \\<Longrightarrow> y \\<notin> p'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?y \\<in> b; ?y \\<noteq> x\\<rbrakk>\n  \\<Longrightarrow> ?y \\<notin> b'\n\ngoal (1 subgoal):\n 1. \\<And>y. y \\<in> p \\<Longrightarrow> y \\<notin> p'", "by (metis Diff_iff b1 b2 insertI1)"], ["proof (state)\nthis:\n  ?y \\<in> p \\<Longrightarrow> ?y \\<notin> p'\n\ngoal (1 subgoal):\n 1. \\<And>p p'.\n       \\<lbrakk>p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p' \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n        p \\<noteq> p'\\<rbrakk>\n       \\<Longrightarrow> p \\<inter> p' = {}", "then"], ["proof (chain)\npicking this:\n  ?y \\<in> p \\<Longrightarrow> ?y \\<notin> p'", "show \"p \\<inter> p' = {}\""], ["proof (prove)\nusing this:\n  ?y \\<in> p \\<Longrightarrow> ?y \\<notin> p'\n\ngoal (1 subgoal):\n 1. p \\<inter> p' = {}", "using disjoint_iff"], ["proof (prove)\nusing this:\n  ?y \\<in> p \\<Longrightarrow> ?y \\<notin> p'\n  (?A \\<inter> ?B = {}) =\n  (\\<forall>x. x \\<in> ?A \\<longrightarrow> x \\<notin> ?B)\n\ngoal (1 subgoal):\n 1. p \\<inter> p' = {}", "by auto"], ["proof (state)\nthis:\n  p \\<inter> p' = {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?p \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n   ?p' \\<in> {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n   ?p \\<noteq> ?p'\\<rbrakk>\n  \\<Longrightarrow> ?p \\<inter> ?p' = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma KGDD_by_deleting_point:\n  assumes \"x \\<in> \\<V>\"\n  assumes \"\\<B> rep x < \\<b>\"\n  assumes \"\\<B> rep x > 1\" \n  shows \"K_GDD (del_point x) (str_del_point_blocks x) \\<K> { b - {x} | b . b \\<in># \\<B> \\<and> x \\<in> b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. K_GDD (del_point x) (str_del_point_blocks x) \\<K>\n     {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. K_GDD (del_point x) (str_del_point_blocks x) \\<K>\n     {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "have \"\\<And> bl. bl \\<in># \\<B> \\<Longrightarrow> card bl \\<ge> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>bl. bl \\<in># \\<B> \\<Longrightarrow> 2 \\<le> card bl", "using block_size_gt_t"], ["proof (prove)\nusing this:\n  ?k \\<in> \\<K> \\<Longrightarrow> 2 \\<le> ?k\n\ngoal (1 subgoal):\n 1. \\<And>bl. bl \\<in># \\<B> \\<Longrightarrow> 2 \\<le> card bl", "by (simp add: block_sizes nat_int_comparison(3))"], ["proof (state)\nthis:\n  ?bl \\<in># \\<B> \\<Longrightarrow> 2 \\<le> card ?bl\n\ngoal (1 subgoal):\n 1. K_GDD (del_point x) (str_del_point_blocks x) \\<K>\n     {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "then"], ["proof (chain)\npicking this:\n  ?bl \\<in># \\<B> \\<Longrightarrow> 2 \\<le> card ?bl", "interpret des: proper_design \"(del_point x)\" \"(str_del_point_blocks x)\""], ["proof (prove)\nusing this:\n  ?bl \\<in># \\<B> \\<Longrightarrow> 2 \\<le> card ?bl\n\ngoal (1 subgoal):\n 1. proper_design (del_point x) (str_del_point_blocks x)", "using strong_delete_point_proper assms"], ["proof (prove)\nusing this:\n  ?bl \\<in># \\<B> \\<Longrightarrow> 2 \\<le> card ?bl\n  \\<lbrakk>\\<And>bl.\n              \\<lbrakk>bl \\<in># \\<B>; ?p \\<in> bl\\<rbrakk>\n              \\<Longrightarrow> 2 \\<le> card bl;\n   \\<B> rep ?p < \\<b>\\<rbrakk>\n  \\<Longrightarrow> proper_design (del_point ?p) (str_del_point_blocks ?p)\n  x \\<in> \\<V>\n  \\<B> rep x < \\<b>\n  1 < \\<B> rep x\n\ngoal (1 subgoal):\n 1. proper_design (del_point x) (str_del_point_blocks x)", "by blast"], ["proof (state)\ngoal (1 subgoal):\n 1. K_GDD (del_point x) (str_del_point_blocks x) \\<K>\n     {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. K_GDD (del_point x) (str_del_point_blocks x) \\<K>\n     {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "using blocks_with_x_partition strong_delete_point_groups_index_zero \n      strong_delete_point_groups_index_one str_del_point_blocks_def del_point_def"], ["proof (prove)\nusing this:\n  ?x \\<in> \\<V> \\<Longrightarrow>\n  partition_on (\\<V> - {?x}) {b - {?x} |b. b \\<in># \\<B> \\<and> ?x \\<in> b}\n  \\<lbrakk>?G \\<in> {b - {?x} |b. b \\<in># \\<B> \\<and> ?x \\<in> b};\n   ?xa \\<in> ?G; ?y \\<in> ?G; ?xa \\<noteq> ?y\\<rbrakk>\n  \\<Longrightarrow> str_del_point_blocks ?x index {?xa, ?y} = 0\n  \\<lbrakk>?G1.0 \\<in> {b - {?x} |b. b \\<in># \\<B> \\<and> ?x \\<in> b};\n   ?G2.0 \\<in> {b - {?x} |b. b \\<in># \\<B> \\<and> ?x \\<in> b};\n   ?G1.0 \\<noteq> ?G2.0; ?xa \\<in> ?G1.0; ?y \\<in> ?G2.0\\<rbrakk>\n  \\<Longrightarrow> str_del_point_blocks ?x index {?xa, ?y} = 1\n  str_del_point_blocks ?p \\<equiv> filter_mset ((\\<notin>) ?p) \\<B>\n  del_point ?p \\<equiv> \\<V> - {?p}\n\ngoal (1 subgoal):\n 1. K_GDD (del_point x) (str_del_point_blocks x) \\<K>\n     {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "proof (unfold_locales, simp_all add: block_sizes positive_ints assms)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>G x xa y.\n                \\<lbrakk>\\<exists>b.\n                            G = b - {x} \\<and>\n                            b \\<in># \\<B> \\<and> x \\<in> b;\n                 xa \\<in> G; y \\<in> G; xa \\<noteq> y\\<rbrakk>\n                \\<Longrightarrow> filter_mset ((\\<notin>) x) \\<B> index\n                                  {xa, y} =\n                                  0;\n     \\<And>G1 x G2 xa y.\n        \\<lbrakk>\\<exists>b.\n                    G1 = b - {x} \\<and> b \\<in># \\<B> \\<and> x \\<in> b;\n         \\<exists>b. G2 = b - {x} \\<and> b \\<in># \\<B> \\<and> x \\<in> b;\n         G1 \\<noteq> G2; xa \\<in> G1; y \\<in> G2\\<rbrakk>\n        \\<Longrightarrow> filter_mset ((\\<notin>) x) \\<B> index {xa, y} =\n                          Suc 0;\n     \\<And>p.\n        filter_mset ((\\<notin>) p) \\<B> \\<equiv>\n        filter_mset ((\\<notin>) p) \\<B>;\n     \\<And>p. \\<V> - {p} \\<equiv> \\<V> - {p};\n     \\<And>x.\n        x \\<in> \\<V> \\<Longrightarrow>\n        partition_on (\\<V> - {x})\n         {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n     \\<And>p.\n        str_del_point_blocks p \\<equiv> filter_mset ((\\<notin>) p) \\<B>;\n     \\<And>p. del_point p \\<equiv> \\<V> - {p}\\<rbrakk>\n    \\<Longrightarrow> Suc 0\n                      < card {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "have ge1: \"card {b . b \\<in># \\<B> \\<and> x \\<in> b} > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < card {b. b \\<in># \\<B> \\<and> x \\<in> b}", "using assms(3) replication_num_simple_def design_support_def"], ["proof (prove)\nusing this:\n  1 < \\<B> rep x\n  \\<B> rep ?x = int (card {b \\<in> design_support. ?x \\<in> b})\n  design_support \\<equiv> set_mset \\<B>\n\ngoal (1 subgoal):\n 1. 1 < card {b. b \\<in># \\<B> \\<and> x \\<in> b}", "by auto"], ["proof (state)\nthis:\n  1 < card {b. b \\<in># \\<B> \\<and> x \\<in> b}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>G x xa y.\n                \\<lbrakk>\\<exists>b.\n                            G = b - {x} \\<and>\n                            b \\<in># \\<B> \\<and> x \\<in> b;\n                 xa \\<in> G; y \\<in> G; xa \\<noteq> y\\<rbrakk>\n                \\<Longrightarrow> filter_mset ((\\<notin>) x) \\<B> index\n                                  {xa, y} =\n                                  0;\n     \\<And>G1 x G2 xa y.\n        \\<lbrakk>\\<exists>b.\n                    G1 = b - {x} \\<and> b \\<in># \\<B> \\<and> x \\<in> b;\n         \\<exists>b. G2 = b - {x} \\<and> b \\<in># \\<B> \\<and> x \\<in> b;\n         G1 \\<noteq> G2; xa \\<in> G1; y \\<in> G2\\<rbrakk>\n        \\<Longrightarrow> filter_mset ((\\<notin>) x) \\<B> index {xa, y} =\n                          Suc 0;\n     \\<And>p.\n        filter_mset ((\\<notin>) p) \\<B> \\<equiv>\n        filter_mset ((\\<notin>) p) \\<B>;\n     \\<And>p. \\<V> - {p} \\<equiv> \\<V> - {p};\n     \\<And>x.\n        x \\<in> \\<V> \\<Longrightarrow>\n        partition_on (\\<V> - {x})\n         {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n     \\<And>p.\n        str_del_point_blocks p \\<equiv> filter_mset ((\\<notin>) p) \\<B>;\n     \\<And>p. del_point p \\<equiv> \\<V> - {p}\\<rbrakk>\n    \\<Longrightarrow> Suc 0\n                      < card {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "have fin: \"finite {b . b \\<in># \\<B> \\<and> x \\<in> b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {b. b \\<in># \\<B> \\<and> x \\<in> b}", "by simp"], ["proof (state)\nthis:\n  finite {b. b \\<in># \\<B> \\<and> x \\<in> b}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>G x xa y.\n                \\<lbrakk>\\<exists>b.\n                            G = b - {x} \\<and>\n                            b \\<in># \\<B> \\<and> x \\<in> b;\n                 xa \\<in> G; y \\<in> G; xa \\<noteq> y\\<rbrakk>\n                \\<Longrightarrow> filter_mset ((\\<notin>) x) \\<B> index\n                                  {xa, y} =\n                                  0;\n     \\<And>G1 x G2 xa y.\n        \\<lbrakk>\\<exists>b.\n                    G1 = b - {x} \\<and> b \\<in># \\<B> \\<and> x \\<in> b;\n         \\<exists>b. G2 = b - {x} \\<and> b \\<in># \\<B> \\<and> x \\<in> b;\n         G1 \\<noteq> G2; xa \\<in> G1; y \\<in> G2\\<rbrakk>\n        \\<Longrightarrow> filter_mset ((\\<notin>) x) \\<B> index {xa, y} =\n                          Suc 0;\n     \\<And>p.\n        filter_mset ((\\<notin>) p) \\<B> \\<equiv>\n        filter_mset ((\\<notin>) p) \\<B>;\n     \\<And>p. \\<V> - {p} \\<equiv> \\<V> - {p};\n     \\<And>x.\n        x \\<in> \\<V> \\<Longrightarrow>\n        partition_on (\\<V> - {x})\n         {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n     \\<And>p.\n        str_del_point_blocks p \\<equiv> filter_mset ((\\<notin>) p) \\<B>;\n     \\<And>p. del_point p \\<equiv> \\<V> - {p}\\<rbrakk>\n    \\<Longrightarrow> Suc 0\n                      < card {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "have inj: \"inj_on (\\<lambda> b . b - {x}) {b . b \\<in># \\<B> \\<and> x \\<in> b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>b. b - {x}) {b. b \\<in># \\<B> \\<and> x \\<in> b}", "using assms(2) inj_on_def mem_Collect_eq"], ["proof (prove)\nusing this:\n  \\<B> rep x < \\<b>\n  inj_on ?f ?A =\n  (\\<forall>x\\<in>?A.\n      \\<forall>y\\<in>?A. ?f x = ?f y \\<longrightarrow> x = y)\n  (?a \\<in> Collect ?P) = ?P ?a\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>b. b - {x}) {b. b \\<in># \\<B> \\<and> x \\<in> b}", "by auto"], ["proof (state)\nthis:\n  inj_on (\\<lambda>b. b - {x}) {b. b \\<in># \\<B> \\<and> x \\<in> b}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>G x xa y.\n                \\<lbrakk>\\<exists>b.\n                            G = b - {x} \\<and>\n                            b \\<in># \\<B> \\<and> x \\<in> b;\n                 xa \\<in> G; y \\<in> G; xa \\<noteq> y\\<rbrakk>\n                \\<Longrightarrow> filter_mset ((\\<notin>) x) \\<B> index\n                                  {xa, y} =\n                                  0;\n     \\<And>G1 x G2 xa y.\n        \\<lbrakk>\\<exists>b.\n                    G1 = b - {x} \\<and> b \\<in># \\<B> \\<and> x \\<in> b;\n         \\<exists>b. G2 = b - {x} \\<and> b \\<in># \\<B> \\<and> x \\<in> b;\n         G1 \\<noteq> G2; xa \\<in> G1; y \\<in> G2\\<rbrakk>\n        \\<Longrightarrow> filter_mset ((\\<notin>) x) \\<B> index {xa, y} =\n                          Suc 0;\n     \\<And>p.\n        filter_mset ((\\<notin>) p) \\<B> \\<equiv>\n        filter_mset ((\\<notin>) p) \\<B>;\n     \\<And>p. \\<V> - {p} \\<equiv> \\<V> - {p};\n     \\<And>x.\n        x \\<in> \\<V> \\<Longrightarrow>\n        partition_on (\\<V> - {x})\n         {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n     \\<And>p.\n        str_del_point_blocks p \\<equiv> filter_mset ((\\<notin>) p) \\<B>;\n     \\<And>p. del_point p \\<equiv> \\<V> - {p}\\<rbrakk>\n    \\<Longrightarrow> Suc 0\n                      < card {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "then"], ["proof (chain)\npicking this:\n  inj_on (\\<lambda>b. b - {x}) {b. b \\<in># \\<B> \\<and> x \\<in> b}", "have \"card {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b} = card {b . b \\<in># \\<B> \\<and> x \\<in> b}\""], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>b. b - {x}) {b. b \\<in># \\<B> \\<and> x \\<in> b}\n\ngoal (1 subgoal):\n 1. card {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b} =\n    card {b. b \\<in># \\<B> \\<and> x \\<in> b}", "using card_image fin"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>b. b - {x}) {b. b \\<in># \\<B> \\<and> x \\<in> b}\n  inj_on ?f ?A \\<Longrightarrow> card (?f ` ?A) = card ?A\n  finite {b. b \\<in># \\<B> \\<and> x \\<in> b}\n\ngoal (1 subgoal):\n 1. card {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b} =\n    card {b. b \\<in># \\<B> \\<and> x \\<in> b}", "by (simp add: inj card_image setcompr_eq_image)"], ["proof (state)\nthis:\n  card {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b} =\n  card {b. b \\<in># \\<B> \\<and> x \\<in> b}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>G x xa y.\n                \\<lbrakk>\\<exists>b.\n                            G = b - {x} \\<and>\n                            b \\<in># \\<B> \\<and> x \\<in> b;\n                 xa \\<in> G; y \\<in> G; xa \\<noteq> y\\<rbrakk>\n                \\<Longrightarrow> filter_mset ((\\<notin>) x) \\<B> index\n                                  {xa, y} =\n                                  0;\n     \\<And>G1 x G2 xa y.\n        \\<lbrakk>\\<exists>b.\n                    G1 = b - {x} \\<and> b \\<in># \\<B> \\<and> x \\<in> b;\n         \\<exists>b. G2 = b - {x} \\<and> b \\<in># \\<B> \\<and> x \\<in> b;\n         G1 \\<noteq> G2; xa \\<in> G1; y \\<in> G2\\<rbrakk>\n        \\<Longrightarrow> filter_mset ((\\<notin>) x) \\<B> index {xa, y} =\n                          Suc 0;\n     \\<And>p.\n        filter_mset ((\\<notin>) p) \\<B> \\<equiv>\n        filter_mset ((\\<notin>) p) \\<B>;\n     \\<And>p. \\<V> - {p} \\<equiv> \\<V> - {p};\n     \\<And>x.\n        x \\<in> \\<V> \\<Longrightarrow>\n        partition_on (\\<V> - {x})\n         {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b};\n     \\<And>p.\n        str_del_point_blocks p \\<equiv> filter_mset ((\\<notin>) p) \\<B>;\n     \\<And>p. del_point p \\<equiv> \\<V> - {p}\\<rbrakk>\n    \\<Longrightarrow> Suc 0\n                      < card {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "then"], ["proof (chain)\npicking this:\n  card {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b} =\n  card {b. b \\<in># \\<B> \\<and> x \\<in> b}", "show \"Suc 0 < card {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\""], ["proof (prove)\nusing this:\n  card {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b} =\n  card {b. b \\<in># \\<B> \\<and> x \\<in> b}\n\ngoal (1 subgoal):\n 1. Suc 0 < card {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "using ge1"], ["proof (prove)\nusing this:\n  card {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b} =\n  card {b. b \\<in># \\<B> \\<and> x \\<in> b}\n  1 < card {b. b \\<in># \\<B> \\<and> x \\<in> b}\n\ngoal (1 subgoal):\n 1. Suc 0 < card {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "by presburger"], ["proof (state)\nthis:\n  Suc 0 < card {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  K_GDD (del_point x) (str_del_point_blocks x) \\<K>\n   {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_singletons_eq: \"card {{a} | a . a \\<in> A} = card A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {{a} |a. a \\<in> A} = card A", "by (simp add: card_image Setcompr_eq_image)"], ["", "lemma KGDD_from_PBD: \"K_GDD \\<V> \\<B> \\<K> {{x} | x . x \\<in> \\<V>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. K_GDD \\<V> \\<B> \\<K> {{x} |x. x \\<in> \\<V>}", "proof (unfold_locales,auto simp add: Setcompr_eq_image partition_on_singletons)"], ["proof (state)\ngoal (2 subgoals):\n 1. Suc 0 < card ((\\<lambda>x. {x}) ` \\<V>)\n 2. \\<And>xa xb.\n       \\<lbrakk>xa \\<in> \\<V>; xb \\<in> \\<V>;\n        \\<B> index {xa, xb} \\<noteq> Suc 0\\<rbrakk>\n       \\<Longrightarrow> xa = xb", "have \"card ((\\<lambda>x. {x}) ` \\<V>) \\<ge> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<le> card ((\\<lambda>x. {x}) ` \\<V>)", "using t_lt_order card_singletons_eq"], ["proof (prove)\nusing this:\n  2 \\<le> \\<v>\n  card {{a} |a. a \\<in> ?A} = card ?A\n\ngoal (1 subgoal):\n 1. 2 \\<le> card ((\\<lambda>x. {x}) ` \\<V>)", "by (metis Collect_mem_eq nat_leq_as_int of_nat_numeral setcompr_eq_image)"], ["proof (state)\nthis:\n  2 \\<le> card ((\\<lambda>x. {x}) ` \\<V>)\n\ngoal (2 subgoals):\n 1. Suc 0 < card ((\\<lambda>x. {x}) ` \\<V>)\n 2. \\<And>xa xb.\n       \\<lbrakk>xa \\<in> \\<V>; xb \\<in> \\<V>;\n        \\<B> index {xa, xb} \\<noteq> Suc 0\\<rbrakk>\n       \\<Longrightarrow> xa = xb", "then"], ["proof (chain)\npicking this:\n  2 \\<le> card ((\\<lambda>x. {x}) ` \\<V>)", "show \"Suc 0 < card ((\\<lambda>x. {x}) ` \\<V>)\""], ["proof (prove)\nusing this:\n  2 \\<le> card ((\\<lambda>x. {x}) ` \\<V>)\n\ngoal (1 subgoal):\n 1. Suc 0 < card ((\\<lambda>x. {x}) ` \\<V>)", "by linarith"], ["proof (state)\nthis:\n  Suc 0 < card ((\\<lambda>x. {x}) ` \\<V>)\n\ngoal (1 subgoal):\n 1. \\<And>xa xb.\n       \\<lbrakk>xa \\<in> \\<V>; xb \\<in> \\<V>;\n        \\<B> index {xa, xb} \\<noteq> Suc 0\\<rbrakk>\n       \\<Longrightarrow> xa = xb", "show \"\\<And>xa xb. xa \\<in> \\<V> \\<Longrightarrow> xb \\<in> \\<V> \\<Longrightarrow> \\<B> index {xa, xb} \\<noteq> Suc 0 \\<Longrightarrow> xa = xb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa xb.\n       \\<lbrakk>xa \\<in> \\<V>; xb \\<in> \\<V>;\n        \\<B> index {xa, xb} \\<noteq> Suc 0\\<rbrakk>\n       \\<Longrightarrow> xa = xb", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa xb.\n       \\<lbrakk>xa \\<in> \\<V>; xb \\<in> \\<V>;\n        \\<B> index {xa, xb} \\<noteq> Suc 0; xa \\<noteq> xb\\<rbrakk>\n       \\<Longrightarrow> False", "fix xa xb"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa xb.\n       \\<lbrakk>xa \\<in> \\<V>; xb \\<in> \\<V>;\n        \\<B> index {xa, xb} \\<noteq> Suc 0; xa \\<noteq> xb\\<rbrakk>\n       \\<Longrightarrow> False", "assume ain: \"xa \\<in> \\<V>\" and bin: \"xb \\<in> \\<V>\" and ne1: \"\\<B> index {xa, xb} \\<noteq> Suc 0\""], ["proof (state)\nthis:\n  xa \\<in> \\<V>\n  xb \\<in> \\<V>\n  \\<B> index {xa, xb} \\<noteq> Suc 0\n\ngoal (1 subgoal):\n 1. \\<And>xa xb.\n       \\<lbrakk>xa \\<in> \\<V>; xb \\<in> \\<V>;\n        \\<B> index {xa, xb} \\<noteq> Suc 0; xa \\<noteq> xb\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"xa \\<noteq> xb\""], ["proof (state)\nthis:\n  xa \\<noteq> xb\n\ngoal (1 subgoal):\n 1. \\<And>xa xb.\n       \\<lbrakk>xa \\<in> \\<V>; xb \\<in> \\<V>;\n        \\<B> index {xa, xb} \\<noteq> Suc 0; xa \\<noteq> xb\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  xa \\<noteq> xb", "have \"card {xa, xb} = 2\""], ["proof (prove)\nusing this:\n  xa \\<noteq> xb\n\ngoal (1 subgoal):\n 1. card {xa, xb} = 2", "by auto"], ["proof (state)\nthis:\n  card {xa, xb} = 2\n\ngoal (1 subgoal):\n 1. \\<And>xa xb.\n       \\<lbrakk>xa \\<in> \\<V>; xb \\<in> \\<V>;\n        \\<B> index {xa, xb} \\<noteq> Suc 0; xa \\<noteq> xb\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  card {xa, xb} = 2", "have \"\\<B> index {xa, xb} = 1\""], ["proof (prove)\nusing this:\n  card {xa, xb} = 2\n\ngoal (1 subgoal):\n 1. \\<B> index {xa, xb} = 1", "by (simp add: ain bin pbd_points_index1)"], ["proof (state)\nthis:\n  \\<B> index {xa, xb} = 1\n\ngoal (1 subgoal):\n 1. \\<And>xa xb.\n       \\<lbrakk>xa \\<in> \\<V>; xb \\<in> \\<V>;\n        \\<B> index {xa, xb} \\<noteq> Suc 0; xa \\<noteq> xb\\<rbrakk>\n       \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  \\<B> index {xa, xb} = 1\n\ngoal (1 subgoal):\n 1. False", "using ne1"], ["proof (prove)\nusing this:\n  \\<B> index {xa, xb} = 1\n  \\<B> index {xa, xb} \\<noteq> Suc 0\n\ngoal (1 subgoal):\n 1. False", "by linarith"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?xa \\<in> \\<V>; ?xb \\<in> \\<V>;\n   \\<B> index {?xa, ?xb} \\<noteq> Suc 0\\<rbrakk>\n  \\<Longrightarrow> ?xa = ?xb\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context bibd\nbegin"], ["", "lemma kGDD_from_bibd:\n  assumes \"\\<Lambda> = 1\"\n  assumes \"x \\<in> \\<V>\"\n  shows \"k_GDD (del_point x) (str_del_point_blocks x) \\<k> { b - {x} | b . b \\<in># \\<B> \\<and> x \\<in> b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k_GDD (del_point x) (str_del_point_blocks x) \\<k>\n     {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. k_GDD (del_point x) (str_del_point_blocks x) \\<k>\n     {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "interpret pbd: PBD \\<V> \\<B> \"{\\<k>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PBD \\<V> \\<B> {\\<k>}", "using assms"], ["proof (prove)\nusing this:\n  \\<Lambda> = 1\n  x \\<in> \\<V>\n\ngoal (1 subgoal):\n 1. PBD \\<V> \\<B> {\\<k>}", "using PBD.intro \\<Lambda>_PBD_axioms"], ["proof (prove)\nusing this:\n  \\<Lambda> = 1\n  x \\<in> \\<V>\n  \\<Lambda>_PBD ?point_set ?block_collection 1 ?sizes \\<Longrightarrow>\n  PBD ?point_set ?block_collection ?sizes\n  \\<Lambda>_PBD \\<V> \\<B> \\<Lambda> {\\<k>}\n\ngoal (1 subgoal):\n 1. PBD \\<V> \\<B> {\\<k>}", "by auto"], ["proof (state)\ngoal (1 subgoal):\n 1. k_GDD (del_point x) (str_del_point_blocks x) \\<k>\n     {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "have lt: \"\\<B> rep x < \\<b>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<B> rep x < \\<b>", "using block_num_gt_rep"], ["proof (prove)\nusing this:\n  \\<Lambda> * (\\<v> - 1) div (\\<k> - 1) < \\<b>\n\ngoal (1 subgoal):\n 1. \\<B> rep x < \\<b>", "by (simp add: assms(2))"], ["proof (state)\nthis:\n  \\<B> rep x < \\<b>\n\ngoal (1 subgoal):\n 1. k_GDD (del_point x) (str_del_point_blocks x) \\<k>\n     {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "have \"\\<B> rep x > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < \\<B> rep x", "using r_ge_two assms"], ["proof (prove)\nusing this:\n  2 \\<le> \\<Lambda> * (\\<v> - 1) div (\\<k> - 1)\n  \\<Lambda> = 1\n  x \\<in> \\<V>\n\ngoal (1 subgoal):\n 1. 1 < \\<B> rep x", "by simp"], ["proof (state)\nthis:\n  1 < \\<B> rep x\n\ngoal (1 subgoal):\n 1. k_GDD (del_point x) (str_del_point_blocks x) \\<k>\n     {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "then"], ["proof (chain)\npicking this:\n  1 < \\<B> rep x", "interpret kgdd: K_GDD \"(del_point x)\" \"str_del_point_blocks x\" \n    \"{\\<k>}\" \"{ b - {x} | b . b \\<in># \\<B> \\<and> x \\<in> b}\""], ["proof (prove)\nusing this:\n  1 < \\<B> rep x\n\ngoal (1 subgoal):\n 1. K_GDD (del_point x) (str_del_point_blocks x) {\\<k>}\n     {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "using pbd.KGDD_by_deleting_point lt assms"], ["proof (prove)\nusing this:\n  1 < \\<B> rep x\n  \\<lbrakk>?x \\<in> \\<V>; \\<B> rep ?x < \\<b>; 1 < \\<B> rep ?x\\<rbrakk>\n  \\<Longrightarrow> K_GDD (del_point ?x) (str_del_point_blocks ?x) {\\<k>}\n                     {b - {?x} |b. b \\<in># \\<B> \\<and> ?x \\<in> b}\n  \\<B> rep x < \\<b>\n  \\<Lambda> = 1\n  x \\<in> \\<V>\n\ngoal (1 subgoal):\n 1. K_GDD (del_point x) (str_del_point_blocks x) {\\<k>}\n     {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "by blast"], ["proof (state)\ngoal (1 subgoal):\n 1. k_GDD (del_point x) (str_del_point_blocks x) \\<k>\n     {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. k_GDD (del_point x) (str_del_point_blocks x) \\<k>\n     {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "using del_point_def str_del_point_blocks_def"], ["proof (prove)\nusing this:\n  del_point ?p \\<equiv> \\<V> - {?p}\n  str_del_point_blocks ?p \\<equiv> filter_mset ((\\<notin>) ?p) \\<B>\n\ngoal (1 subgoal):\n 1. k_GDD (del_point x) (str_del_point_blocks x) \\<k>\n     {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}", "by (unfold_locales) (simp_all)"], ["proof (state)\nthis:\n  k_GDD (del_point x) (str_del_point_blocks x) \\<k>\n   {b - {x} |b. b \\<in># \\<B> \\<and> x \\<in> b}\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}