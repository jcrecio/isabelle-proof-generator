{"file_name": "/home/qj213/afp-2021-10-22/thys/HRB-Slicing/Proc/Labels.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/HRB-Slicing", "problem_names": ["lemma label_less_num_inner_nodes:\n  \"labels c l c' \\<Longrightarrow> l < #:c\"", "lemma less_num_inner_nodes_label:\n  assumes \"l < #:c\" obtains c' where \"labels c l c'\"", "lemma labels_det:\n  \"labels c l c'\\<Longrightarrow> (\\<And>c''. labels c l c''\\<Longrightarrow> c' = c'')\"", "lemma labels_THE:\n  \"labels c l c' \\<Longrightarrow> (THE c'. labels c l c') = c'\"", "lemma labels_label:\"labels c l c' \\<Longrightarrow> label c l = c'\""], "translations": [["", "lemma label_less_num_inner_nodes:\n  \"labels c l c' \\<Longrightarrow> l < #:c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. labels c l c' \\<Longrightarrow> l < #:c", "proof(induct c arbitrary:l c')"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>l c'. labels Skip l c' \\<Longrightarrow> l < #:Skip\n 2. \\<And>x1 x2 l c'. labels (x1:=x2) l c' \\<Longrightarrow> l < #:x1:=x2\n 3. \\<And>c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (c1;; c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:c1;; c2\n 4. \\<And>x1 c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (if (x1) c1 else c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:if (x1) c1 else c2\n 5. \\<And>x1 c l c'.\n       \\<lbrakk>\\<And>l c'. labels c l c' \\<Longrightarrow> l < #:c;\n        labels (while (x1) c) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:while (x1) c\n 6. \\<And>x1 x2 x3 l c'.\n       labels (Call x1 x2 x3) l c' \\<Longrightarrow> l < #:Call x1 x2 x3", "case Skip"], ["proof (state)\nthis:\n  labels Skip l c'\n\ngoal (6 subgoals):\n 1. \\<And>l c'. labels Skip l c' \\<Longrightarrow> l < #:Skip\n 2. \\<And>x1 x2 l c'. labels (x1:=x2) l c' \\<Longrightarrow> l < #:x1:=x2\n 3. \\<And>c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (c1;; c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:c1;; c2\n 4. \\<And>x1 c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (if (x1) c1 else c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:if (x1) c1 else c2\n 5. \\<And>x1 c l c'.\n       \\<lbrakk>\\<And>l c'. labels c l c' \\<Longrightarrow> l < #:c;\n        labels (while (x1) c) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:while (x1) c\n 6. \\<And>x1 x2 x3 l c'.\n       labels (Call x1 x2 x3) l c' \\<Longrightarrow> l < #:Call x1 x2 x3", "from \\<open>labels Skip l c'\\<close>"], ["proof (chain)\npicking this:\n  labels Skip l c'", "show ?case"], ["proof (prove)\nusing this:\n  labels Skip l c'\n\ngoal (1 subgoal):\n 1. l < #:Skip", "by(fastforce elim:labels.cases)"], ["proof (state)\nthis:\n  l < #:Skip\n\ngoal (5 subgoals):\n 1. \\<And>x1 x2 l c'. labels (x1:=x2) l c' \\<Longrightarrow> l < #:x1:=x2\n 2. \\<And>c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (c1;; c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:c1;; c2\n 3. \\<And>x1 c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (if (x1) c1 else c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:if (x1) c1 else c2\n 4. \\<And>x1 c l c'.\n       \\<lbrakk>\\<And>l c'. labels c l c' \\<Longrightarrow> l < #:c;\n        labels (while (x1) c) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:while (x1) c\n 5. \\<And>x1 x2 x3 l c'.\n       labels (Call x1 x2 x3) l c' \\<Longrightarrow> l < #:Call x1 x2 x3", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x1 x2 l c'. labels (x1:=x2) l c' \\<Longrightarrow> l < #:x1:=x2\n 2. \\<And>c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (c1;; c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:c1;; c2\n 3. \\<And>x1 c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (if (x1) c1 else c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:if (x1) c1 else c2\n 4. \\<And>x1 c l c'.\n       \\<lbrakk>\\<And>l c'. labels c l c' \\<Longrightarrow> l < #:c;\n        labels (while (x1) c) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:while (x1) c\n 5. \\<And>x1 x2 x3 l c'.\n       labels (Call x1 x2 x3) l c' \\<Longrightarrow> l < #:Call x1 x2 x3", "case (LAss V e)"], ["proof (state)\nthis:\n  labels (V:=e) l c'\n\ngoal (5 subgoals):\n 1. \\<And>x1 x2 l c'. labels (x1:=x2) l c' \\<Longrightarrow> l < #:x1:=x2\n 2. \\<And>c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (c1;; c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:c1;; c2\n 3. \\<And>x1 c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (if (x1) c1 else c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:if (x1) c1 else c2\n 4. \\<And>x1 c l c'.\n       \\<lbrakk>\\<And>l c'. labels c l c' \\<Longrightarrow> l < #:c;\n        labels (while (x1) c) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:while (x1) c\n 5. \\<And>x1 x2 x3 l c'.\n       labels (Call x1 x2 x3) l c' \\<Longrightarrow> l < #:Call x1 x2 x3", "from \\<open>labels (V:=e) l c'\\<close>"], ["proof (chain)\npicking this:\n  labels (V:=e) l c'", "show ?case"], ["proof (prove)\nusing this:\n  labels (V:=e) l c'\n\ngoal (1 subgoal):\n 1. l < #:V:=e", "by(fastforce elim:labels.cases)"], ["proof (state)\nthis:\n  l < #:V:=e\n\ngoal (4 subgoals):\n 1. \\<And>c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (c1;; c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:c1;; c2\n 2. \\<And>x1 c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (if (x1) c1 else c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:if (x1) c1 else c2\n 3. \\<And>x1 c l c'.\n       \\<lbrakk>\\<And>l c'. labels c l c' \\<Longrightarrow> l < #:c;\n        labels (while (x1) c) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:while (x1) c\n 4. \\<And>x1 x2 x3 l c'.\n       labels (Call x1 x2 x3) l c' \\<Longrightarrow> l < #:Call x1 x2 x3", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (c1;; c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:c1;; c2\n 2. \\<And>x1 c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (if (x1) c1 else c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:if (x1) c1 else c2\n 3. \\<And>x1 c l c'.\n       \\<lbrakk>\\<And>l c'. labels c l c' \\<Longrightarrow> l < #:c;\n        labels (while (x1) c) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:while (x1) c\n 4. \\<And>x1 x2 x3 l c'.\n       labels (Call x1 x2 x3) l c' \\<Longrightarrow> l < #:Call x1 x2 x3", "case (Seq c\\<^sub>1 c\\<^sub>2)"], ["proof (state)\nthis:\n  labels c\\<^sub>1 ?l ?c' \\<Longrightarrow> ?l < #:c\\<^sub>1\n  labels c\\<^sub>2 ?l ?c' \\<Longrightarrow> ?l < #:c\\<^sub>2\n  labels (c\\<^sub>1;; c\\<^sub>2) l c'\n\ngoal (4 subgoals):\n 1. \\<And>c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (c1;; c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:c1;; c2\n 2. \\<And>x1 c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (if (x1) c1 else c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:if (x1) c1 else c2\n 3. \\<And>x1 c l c'.\n       \\<lbrakk>\\<And>l c'. labels c l c' \\<Longrightarrow> l < #:c;\n        labels (while (x1) c) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:while (x1) c\n 4. \\<And>x1 x2 x3 l c'.\n       labels (Call x1 x2 x3) l c' \\<Longrightarrow> l < #:Call x1 x2 x3", "note IH1 = \\<open>\\<And>l c'. labels c\\<^sub>1 l c' \\<Longrightarrow> l < #:c\\<^sub>1\\<close>"], ["proof (state)\nthis:\n  labels c\\<^sub>1 ?l ?c' \\<Longrightarrow> ?l < #:c\\<^sub>1\n\ngoal (4 subgoals):\n 1. \\<And>c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (c1;; c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:c1;; c2\n 2. \\<And>x1 c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (if (x1) c1 else c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:if (x1) c1 else c2\n 3. \\<And>x1 c l c'.\n       \\<lbrakk>\\<And>l c'. labels c l c' \\<Longrightarrow> l < #:c;\n        labels (while (x1) c) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:while (x1) c\n 4. \\<And>x1 x2 x3 l c'.\n       labels (Call x1 x2 x3) l c' \\<Longrightarrow> l < #:Call x1 x2 x3", "note IH2 = \\<open>\\<And>l c'. labels c\\<^sub>2 l c' \\<Longrightarrow> l < #:c\\<^sub>2\\<close>"], ["proof (state)\nthis:\n  labels c\\<^sub>2 ?l ?c' \\<Longrightarrow> ?l < #:c\\<^sub>2\n\ngoal (4 subgoals):\n 1. \\<And>c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (c1;; c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:c1;; c2\n 2. \\<And>x1 c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (if (x1) c1 else c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:if (x1) c1 else c2\n 3. \\<And>x1 c l c'.\n       \\<lbrakk>\\<And>l c'. labels c l c' \\<Longrightarrow> l < #:c;\n        labels (while (x1) c) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:while (x1) c\n 4. \\<And>x1 x2 x3 l c'.\n       labels (Call x1 x2 x3) l c' \\<Longrightarrow> l < #:Call x1 x2 x3", "from \\<open>labels (c\\<^sub>1;;c\\<^sub>2) l c'\\<close> IH1 IH2"], ["proof (chain)\npicking this:\n  labels (c\\<^sub>1;; c\\<^sub>2) l c'\n  labels c\\<^sub>1 ?l ?c' \\<Longrightarrow> ?l < #:c\\<^sub>1\n  labels c\\<^sub>2 ?l ?c' \\<Longrightarrow> ?l < #:c\\<^sub>2", "show ?case"], ["proof (prove)\nusing this:\n  labels (c\\<^sub>1;; c\\<^sub>2) l c'\n  labels c\\<^sub>1 ?l ?c' \\<Longrightarrow> ?l < #:c\\<^sub>1\n  labels c\\<^sub>2 ?l ?c' \\<Longrightarrow> ?l < #:c\\<^sub>2\n\ngoal (1 subgoal):\n 1. l < #:c\\<^sub>1;; c\\<^sub>2", "by simp(erule labels.cases,auto,force)"], ["proof (state)\nthis:\n  l < #:c\\<^sub>1;; c\\<^sub>2\n\ngoal (3 subgoals):\n 1. \\<And>x1 c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (if (x1) c1 else c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:if (x1) c1 else c2\n 2. \\<And>x1 c l c'.\n       \\<lbrakk>\\<And>l c'. labels c l c' \\<Longrightarrow> l < #:c;\n        labels (while (x1) c) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:while (x1) c\n 3. \\<And>x1 x2 x3 l c'.\n       labels (Call x1 x2 x3) l c' \\<Longrightarrow> l < #:Call x1 x2 x3", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1 c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (if (x1) c1 else c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:if (x1) c1 else c2\n 2. \\<And>x1 c l c'.\n       \\<lbrakk>\\<And>l c'. labels c l c' \\<Longrightarrow> l < #:c;\n        labels (while (x1) c) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:while (x1) c\n 3. \\<And>x1 x2 x3 l c'.\n       labels (Call x1 x2 x3) l c' \\<Longrightarrow> l < #:Call x1 x2 x3", "case (Cond b c\\<^sub>1 c\\<^sub>2)"], ["proof (state)\nthis:\n  labels c\\<^sub>1 ?l ?c' \\<Longrightarrow> ?l < #:c\\<^sub>1\n  labels c\\<^sub>2 ?l ?c' \\<Longrightarrow> ?l < #:c\\<^sub>2\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) l c'\n\ngoal (3 subgoals):\n 1. \\<And>x1 c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (if (x1) c1 else c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:if (x1) c1 else c2\n 2. \\<And>x1 c l c'.\n       \\<lbrakk>\\<And>l c'. labels c l c' \\<Longrightarrow> l < #:c;\n        labels (while (x1) c) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:while (x1) c\n 3. \\<And>x1 x2 x3 l c'.\n       labels (Call x1 x2 x3) l c' \\<Longrightarrow> l < #:Call x1 x2 x3", "note IH1 = \\<open>\\<And>l c'. labels c\\<^sub>1 l c' \\<Longrightarrow> l < #:c\\<^sub>1\\<close>"], ["proof (state)\nthis:\n  labels c\\<^sub>1 ?l ?c' \\<Longrightarrow> ?l < #:c\\<^sub>1\n\ngoal (3 subgoals):\n 1. \\<And>x1 c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (if (x1) c1 else c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:if (x1) c1 else c2\n 2. \\<And>x1 c l c'.\n       \\<lbrakk>\\<And>l c'. labels c l c' \\<Longrightarrow> l < #:c;\n        labels (while (x1) c) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:while (x1) c\n 3. \\<And>x1 x2 x3 l c'.\n       labels (Call x1 x2 x3) l c' \\<Longrightarrow> l < #:Call x1 x2 x3", "note IH2 = \\<open>\\<And>l c'. labels c\\<^sub>2 l c' \\<Longrightarrow> l < #:c\\<^sub>2\\<close>"], ["proof (state)\nthis:\n  labels c\\<^sub>2 ?l ?c' \\<Longrightarrow> ?l < #:c\\<^sub>2\n\ngoal (3 subgoals):\n 1. \\<And>x1 c1 c2 l c'.\n       \\<lbrakk>\\<And>l c'. labels c1 l c' \\<Longrightarrow> l < #:c1;\n        \\<And>l c'. labels c2 l c' \\<Longrightarrow> l < #:c2;\n        labels (if (x1) c1 else c2) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:if (x1) c1 else c2\n 2. \\<And>x1 c l c'.\n       \\<lbrakk>\\<And>l c'. labels c l c' \\<Longrightarrow> l < #:c;\n        labels (while (x1) c) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:while (x1) c\n 3. \\<And>x1 x2 x3 l c'.\n       labels (Call x1 x2 x3) l c' \\<Longrightarrow> l < #:Call x1 x2 x3", "from \\<open>labels (if (b) c\\<^sub>1 else c\\<^sub>2) l c'\\<close> IH1 IH2"], ["proof (chain)\npicking this:\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) l c'\n  labels c\\<^sub>1 ?l ?c' \\<Longrightarrow> ?l < #:c\\<^sub>1\n  labels c\\<^sub>2 ?l ?c' \\<Longrightarrow> ?l < #:c\\<^sub>2", "show ?case"], ["proof (prove)\nusing this:\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) l c'\n  labels c\\<^sub>1 ?l ?c' \\<Longrightarrow> ?l < #:c\\<^sub>1\n  labels c\\<^sub>2 ?l ?c' \\<Longrightarrow> ?l < #:c\\<^sub>2\n\ngoal (1 subgoal):\n 1. l < #:if (b) c\\<^sub>1 else c\\<^sub>2", "by simp(erule labels.cases,auto,force)"], ["proof (state)\nthis:\n  l < #:if (b) c\\<^sub>1 else c\\<^sub>2\n\ngoal (2 subgoals):\n 1. \\<And>x1 c l c'.\n       \\<lbrakk>\\<And>l c'. labels c l c' \\<Longrightarrow> l < #:c;\n        labels (while (x1) c) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:while (x1) c\n 2. \\<And>x1 x2 x3 l c'.\n       labels (Call x1 x2 x3) l c' \\<Longrightarrow> l < #:Call x1 x2 x3", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1 c l c'.\n       \\<lbrakk>\\<And>l c'. labels c l c' \\<Longrightarrow> l < #:c;\n        labels (while (x1) c) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:while (x1) c\n 2. \\<And>x1 x2 x3 l c'.\n       labels (Call x1 x2 x3) l c' \\<Longrightarrow> l < #:Call x1 x2 x3", "case (While b c)"], ["proof (state)\nthis:\n  labels c ?l ?c' \\<Longrightarrow> ?l < #:c\n  labels (while (b) c) l c'\n\ngoal (2 subgoals):\n 1. \\<And>x1 c l c'.\n       \\<lbrakk>\\<And>l c'. labels c l c' \\<Longrightarrow> l < #:c;\n        labels (while (x1) c) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:while (x1) c\n 2. \\<And>x1 x2 x3 l c'.\n       labels (Call x1 x2 x3) l c' \\<Longrightarrow> l < #:Call x1 x2 x3", "note IH = \\<open>\\<And>l c'. labels c l c' \\<Longrightarrow> l < #:c\\<close>"], ["proof (state)\nthis:\n  labels c ?l ?c' \\<Longrightarrow> ?l < #:c\n\ngoal (2 subgoals):\n 1. \\<And>x1 c l c'.\n       \\<lbrakk>\\<And>l c'. labels c l c' \\<Longrightarrow> l < #:c;\n        labels (while (x1) c) l c'\\<rbrakk>\n       \\<Longrightarrow> l < #:while (x1) c\n 2. \\<And>x1 x2 x3 l c'.\n       labels (Call x1 x2 x3) l c' \\<Longrightarrow> l < #:Call x1 x2 x3", "from \\<open>labels (while (b) c) l c'\\<close> IH"], ["proof (chain)\npicking this:\n  labels (while (b) c) l c'\n  labels c ?l ?c' \\<Longrightarrow> ?l < #:c", "show ?case"], ["proof (prove)\nusing this:\n  labels (while (b) c) l c'\n  labels c ?l ?c' \\<Longrightarrow> ?l < #:c\n\ngoal (1 subgoal):\n 1. l < #:while (b) c", "by simp(erule labels.cases,fastforce+)"], ["proof (state)\nthis:\n  l < #:while (b) c\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2 x3 l c'.\n       labels (Call x1 x2 x3) l c' \\<Longrightarrow> l < #:Call x1 x2 x3", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 x3 l c'.\n       labels (Call x1 x2 x3) l c' \\<Longrightarrow> l < #:Call x1 x2 x3", "case (Call p es rets)"], ["proof (state)\nthis:\n  labels (Call p es rets) l c'\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2 x3 l c'.\n       labels (Call x1 x2 x3) l c' \\<Longrightarrow> l < #:Call x1 x2 x3", "thus ?case"], ["proof (prove)\nusing this:\n  labels (Call p es rets) l c'\n\ngoal (1 subgoal):\n 1. l < #:Call p es rets", "by simp(erule labels.cases,fastforce+)"], ["proof (state)\nthis:\n  l < #:Call p es rets\n\ngoal:\nNo subgoals!", "qed"], ["", "declare One_nat_def [simp del]"], ["", "lemma less_num_inner_nodes_label:\n  assumes \"l < #:c\" obtains c' where \"labels c l c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c'. labels c l c' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof(atomize_elim)"], ["proof (state)\ngoal (1 subgoal):\n 1. Ex (labels c l)", "from \\<open>l < #:c\\<close>"], ["proof (chain)\npicking this:\n  l < #:c", "show \"\\<exists>c'. labels c l c'\""], ["proof (prove)\nusing this:\n  l < #:c\n\ngoal (1 subgoal):\n 1. \\<exists>c'. labels c l c'", "proof(induct c arbitrary:l)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>l. l < #:Skip \\<Longrightarrow> Ex (labels Skip l)\n 2. \\<And>x1 x2 l. l < #:x1:=x2 \\<Longrightarrow> Ex (labels (x1:=x2) l)\n 3. \\<And>c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:c1;; c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (c1;; c2) l)\n 4. \\<And>x1 c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:if (x1) c1 else c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (if (x1) c1 else c2) l)\n 5. \\<And>x1 c l.\n       \\<lbrakk>\\<And>l. l < #:c \\<Longrightarrow> Ex (labels c l);\n        l < #:while (x1) c\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (while (x1) c) l)\n 6. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "case Skip"], ["proof (state)\nthis:\n  l < #:Skip\n\ngoal (6 subgoals):\n 1. \\<And>l. l < #:Skip \\<Longrightarrow> Ex (labels Skip l)\n 2. \\<And>x1 x2 l. l < #:x1:=x2 \\<Longrightarrow> Ex (labels (x1:=x2) l)\n 3. \\<And>c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:c1;; c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (c1;; c2) l)\n 4. \\<And>x1 c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:if (x1) c1 else c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (if (x1) c1 else c2) l)\n 5. \\<And>x1 c l.\n       \\<lbrakk>\\<And>l. l < #:c \\<Longrightarrow> Ex (labels c l);\n        l < #:while (x1) c\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (while (x1) c) l)\n 6. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "from \\<open>l < #:Skip\\<close>"], ["proof (chain)\npicking this:\n  l < #:Skip", "have \"l = 0\""], ["proof (prove)\nusing this:\n  l < #:Skip\n\ngoal (1 subgoal):\n 1. l = 0", "by simp"], ["proof (state)\nthis:\n  l = 0\n\ngoal (6 subgoals):\n 1. \\<And>l. l < #:Skip \\<Longrightarrow> Ex (labels Skip l)\n 2. \\<And>x1 x2 l. l < #:x1:=x2 \\<Longrightarrow> Ex (labels (x1:=x2) l)\n 3. \\<And>c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:c1;; c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (c1;; c2) l)\n 4. \\<And>x1 c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:if (x1) c1 else c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (if (x1) c1 else c2) l)\n 5. \\<And>x1 c l.\n       \\<lbrakk>\\<And>l. l < #:c \\<Longrightarrow> Ex (labels c l);\n        l < #:while (x1) c\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (while (x1) c) l)\n 6. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "thus ?case"], ["proof (prove)\nusing this:\n  l = 0\n\ngoal (1 subgoal):\n 1. \\<exists>a. labels Skip l a", "by(fastforce intro:Labels_Base)"], ["proof (state)\nthis:\n  \\<exists>a. labels Skip l a\n\ngoal (5 subgoals):\n 1. \\<And>x1 x2 l. l < #:x1:=x2 \\<Longrightarrow> Ex (labels (x1:=x2) l)\n 2. \\<And>c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:c1;; c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (c1;; c2) l)\n 3. \\<And>x1 c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:if (x1) c1 else c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (if (x1) c1 else c2) l)\n 4. \\<And>x1 c l.\n       \\<lbrakk>\\<And>l. l < #:c \\<Longrightarrow> Ex (labels c l);\n        l < #:while (x1) c\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (while (x1) c) l)\n 5. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x1 x2 l. l < #:x1:=x2 \\<Longrightarrow> Ex (labels (x1:=x2) l)\n 2. \\<And>c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:c1;; c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (c1;; c2) l)\n 3. \\<And>x1 c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:if (x1) c1 else c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (if (x1) c1 else c2) l)\n 4. \\<And>x1 c l.\n       \\<lbrakk>\\<And>l. l < #:c \\<Longrightarrow> Ex (labels c l);\n        l < #:while (x1) c\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (while (x1) c) l)\n 5. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "case (LAss V e)"], ["proof (state)\nthis:\n  l < #:V:=e\n\ngoal (5 subgoals):\n 1. \\<And>x1 x2 l. l < #:x1:=x2 \\<Longrightarrow> Ex (labels (x1:=x2) l)\n 2. \\<And>c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:c1;; c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (c1;; c2) l)\n 3. \\<And>x1 c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:if (x1) c1 else c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (if (x1) c1 else c2) l)\n 4. \\<And>x1 c l.\n       \\<lbrakk>\\<And>l. l < #:c \\<Longrightarrow> Ex (labels c l);\n        l < #:while (x1) c\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (while (x1) c) l)\n 5. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "from \\<open>l < #:(V:=e)\\<close>"], ["proof (chain)\npicking this:\n  l < #:V:=e", "have \"l = 0 \\<or> l = 1\""], ["proof (prove)\nusing this:\n  l < #:V:=e\n\ngoal (1 subgoal):\n 1. l = 0 \\<or> l = 1", "by auto"], ["proof (state)\nthis:\n  l = 0 \\<or> l = 1\n\ngoal (5 subgoals):\n 1. \\<And>x1 x2 l. l < #:x1:=x2 \\<Longrightarrow> Ex (labels (x1:=x2) l)\n 2. \\<And>c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:c1;; c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (c1;; c2) l)\n 3. \\<And>x1 c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:if (x1) c1 else c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (if (x1) c1 else c2) l)\n 4. \\<And>x1 c l.\n       \\<lbrakk>\\<And>l. l < #:c \\<Longrightarrow> Ex (labels c l);\n        l < #:while (x1) c\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (while (x1) c) l)\n 5. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "thus ?case"], ["proof (prove)\nusing this:\n  l = 0 \\<or> l = 1\n\ngoal (1 subgoal):\n 1. \\<exists>a. labels (V:=e) l a", "by(auto intro:Labels_Base Labels_LAss)"], ["proof (state)\nthis:\n  \\<exists>a. labels (V:=e) l a\n\ngoal (4 subgoals):\n 1. \\<And>c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:c1;; c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (c1;; c2) l)\n 2. \\<And>x1 c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:if (x1) c1 else c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (if (x1) c1 else c2) l)\n 3. \\<And>x1 c l.\n       \\<lbrakk>\\<And>l. l < #:c \\<Longrightarrow> Ex (labels c l);\n        l < #:while (x1) c\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (while (x1) c) l)\n 4. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:c1;; c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (c1;; c2) l)\n 2. \\<And>x1 c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:if (x1) c1 else c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (if (x1) c1 else c2) l)\n 3. \\<And>x1 c l.\n       \\<lbrakk>\\<And>l. l < #:c \\<Longrightarrow> Ex (labels c l);\n        l < #:while (x1) c\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (while (x1) c) l)\n 4. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "case (Seq c\\<^sub>1 c\\<^sub>2)"], ["proof (state)\nthis:\n  ?l < #:c\\<^sub>1 \\<Longrightarrow> \\<exists>a. labels c\\<^sub>1 ?l a\n  ?l < #:c\\<^sub>2 \\<Longrightarrow> \\<exists>a. labels c\\<^sub>2 ?l a\n  l < #:c\\<^sub>1;; c\\<^sub>2\n\ngoal (4 subgoals):\n 1. \\<And>c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:c1;; c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (c1;; c2) l)\n 2. \\<And>x1 c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:if (x1) c1 else c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (if (x1) c1 else c2) l)\n 3. \\<And>x1 c l.\n       \\<lbrakk>\\<And>l. l < #:c \\<Longrightarrow> Ex (labels c l);\n        l < #:while (x1) c\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (while (x1) c) l)\n 4. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "note IH1 = \\<open>\\<And>l. l < #:c\\<^sub>1 \\<Longrightarrow> \\<exists>c'. labels c\\<^sub>1 l c'\\<close>"], ["proof (state)\nthis:\n  ?l < #:c\\<^sub>1 \\<Longrightarrow> \\<exists>c'. labels c\\<^sub>1 ?l c'\n\ngoal (4 subgoals):\n 1. \\<And>c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:c1;; c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (c1;; c2) l)\n 2. \\<And>x1 c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:if (x1) c1 else c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (if (x1) c1 else c2) l)\n 3. \\<And>x1 c l.\n       \\<lbrakk>\\<And>l. l < #:c \\<Longrightarrow> Ex (labels c l);\n        l < #:while (x1) c\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (while (x1) c) l)\n 4. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "note IH2 = \\<open>\\<And>l. l < #:c\\<^sub>2 \\<Longrightarrow> \\<exists>c'. labels c\\<^sub>2 l c'\\<close>"], ["proof (state)\nthis:\n  ?l < #:c\\<^sub>2 \\<Longrightarrow> \\<exists>c'. labels c\\<^sub>2 ?l c'\n\ngoal (4 subgoals):\n 1. \\<And>c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:c1;; c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (c1;; c2) l)\n 2. \\<And>x1 c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:if (x1) c1 else c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (if (x1) c1 else c2) l)\n 3. \\<And>x1 c l.\n       \\<lbrakk>\\<And>l. l < #:c \\<Longrightarrow> Ex (labels c l);\n        l < #:while (x1) c\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (while (x1) c) l)\n 4. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a. labels (c\\<^sub>1;; c\\<^sub>2) l a", "proof(cases \"l < #:c\\<^sub>1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. l < #:c\\<^sub>1 \\<Longrightarrow>\n    \\<exists>a. labels (c\\<^sub>1;; c\\<^sub>2) l a\n 2. \\<not> l < #:c\\<^sub>1 \\<Longrightarrow>\n    \\<exists>a. labels (c\\<^sub>1;; c\\<^sub>2) l a", "case True"], ["proof (state)\nthis:\n  l < #:c\\<^sub>1\n\ngoal (2 subgoals):\n 1. l < #:c\\<^sub>1 \\<Longrightarrow>\n    \\<exists>a. labels (c\\<^sub>1;; c\\<^sub>2) l a\n 2. \\<not> l < #:c\\<^sub>1 \\<Longrightarrow>\n    \\<exists>a. labels (c\\<^sub>1;; c\\<^sub>2) l a", "from IH1[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>c'. labels c\\<^sub>1 l c'", "obtain c' where \"labels c\\<^sub>1 l c'\""], ["proof (prove)\nusing this:\n  \\<exists>c'. labels c\\<^sub>1 l c'\n\ngoal (1 subgoal):\n 1. (\\<And>c'.\n        labels c\\<^sub>1 l c' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  labels c\\<^sub>1 l c'\n\ngoal (2 subgoals):\n 1. l < #:c\\<^sub>1 \\<Longrightarrow>\n    \\<exists>a. labels (c\\<^sub>1;; c\\<^sub>2) l a\n 2. \\<not> l < #:c\\<^sub>1 \\<Longrightarrow>\n    \\<exists>a. labels (c\\<^sub>1;; c\\<^sub>2) l a", "hence \"labels (c\\<^sub>1;;c\\<^sub>2) l (c';;c\\<^sub>2)\""], ["proof (prove)\nusing this:\n  labels c\\<^sub>1 l c'\n\ngoal (1 subgoal):\n 1. labels (c\\<^sub>1;; c\\<^sub>2) l (c';; c\\<^sub>2)", "by(fastforce intro:Labels_Seq1)"], ["proof (state)\nthis:\n  labels (c\\<^sub>1;; c\\<^sub>2) l (c';; c\\<^sub>2)\n\ngoal (2 subgoals):\n 1. l < #:c\\<^sub>1 \\<Longrightarrow>\n    \\<exists>a. labels (c\\<^sub>1;; c\\<^sub>2) l a\n 2. \\<not> l < #:c\\<^sub>1 \\<Longrightarrow>\n    \\<exists>a. labels (c\\<^sub>1;; c\\<^sub>2) l a", "thus ?thesis"], ["proof (prove)\nusing this:\n  labels (c\\<^sub>1;; c\\<^sub>2) l (c';; c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<exists>a. labels (c\\<^sub>1;; c\\<^sub>2) l a", "by auto"], ["proof (state)\nthis:\n  \\<exists>a. labels (c\\<^sub>1;; c\\<^sub>2) l a\n\ngoal (1 subgoal):\n 1. \\<not> l < #:c\\<^sub>1 \\<Longrightarrow>\n    \\<exists>a. labels (c\\<^sub>1;; c\\<^sub>2) l a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> l < #:c\\<^sub>1 \\<Longrightarrow>\n    \\<exists>a. labels (c\\<^sub>1;; c\\<^sub>2) l a", "case False"], ["proof (state)\nthis:\n  \\<not> l < #:c\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<not> l < #:c\\<^sub>1 \\<Longrightarrow>\n    \\<exists>a. labels (c\\<^sub>1;; c\\<^sub>2) l a", "hence \"#:c\\<^sub>1 \\<le> l\""], ["proof (prove)\nusing this:\n  \\<not> l < #:c\\<^sub>1\n\ngoal (1 subgoal):\n 1. #:c\\<^sub>1 \\<le> l", "by simp"], ["proof (state)\nthis:\n  #:c\\<^sub>1 \\<le> l\n\ngoal (1 subgoal):\n 1. \\<not> l < #:c\\<^sub>1 \\<Longrightarrow>\n    \\<exists>a. labels (c\\<^sub>1;; c\\<^sub>2) l a", "then"], ["proof (chain)\npicking this:\n  #:c\\<^sub>1 \\<le> l", "obtain l' where \"l = l' + #:c\\<^sub>1\" and \"l' = l - #:c\\<^sub>1\""], ["proof (prove)\nusing this:\n  #:c\\<^sub>1 \\<le> l\n\ngoal (1 subgoal):\n 1. (\\<And>l'.\n        \\<lbrakk>l = l' + #:c\\<^sub>1; l' = l - #:c\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  l = l' + #:c\\<^sub>1\n  l' = l - #:c\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<not> l < #:c\\<^sub>1 \\<Longrightarrow>\n    \\<exists>a. labels (c\\<^sub>1;; c\\<^sub>2) l a", "from \\<open>l = l' + #:c\\<^sub>1\\<close> \\<open>l < #:c\\<^sub>1;;c\\<^sub>2\\<close>"], ["proof (chain)\npicking this:\n  l = l' + #:c\\<^sub>1\n  l < #:c\\<^sub>1;; c\\<^sub>2", "have \"l' < #:c\\<^sub>2\""], ["proof (prove)\nusing this:\n  l = l' + #:c\\<^sub>1\n  l < #:c\\<^sub>1;; c\\<^sub>2\n\ngoal (1 subgoal):\n 1. l' < #:c\\<^sub>2", "by simp"], ["proof (state)\nthis:\n  l' < #:c\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<not> l < #:c\\<^sub>1 \\<Longrightarrow>\n    \\<exists>a. labels (c\\<^sub>1;; c\\<^sub>2) l a", "from IH2[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>c'. labels c\\<^sub>2 l' c'", "obtain c' where \"labels c\\<^sub>2 l' c'\""], ["proof (prove)\nusing this:\n  \\<exists>c'. labels c\\<^sub>2 l' c'\n\ngoal (1 subgoal):\n 1. (\\<And>c'.\n        labels c\\<^sub>2 l' c' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  labels c\\<^sub>2 l' c'\n\ngoal (1 subgoal):\n 1. \\<not> l < #:c\\<^sub>1 \\<Longrightarrow>\n    \\<exists>a. labels (c\\<^sub>1;; c\\<^sub>2) l a", "with \\<open>l = l' + #:c\\<^sub>1\\<close>"], ["proof (chain)\npicking this:\n  l = l' + #:c\\<^sub>1\n  labels c\\<^sub>2 l' c'", "have \"labels (c\\<^sub>1;;c\\<^sub>2) l c'\""], ["proof (prove)\nusing this:\n  l = l' + #:c\\<^sub>1\n  labels c\\<^sub>2 l' c'\n\ngoal (1 subgoal):\n 1. labels (c\\<^sub>1;; c\\<^sub>2) l c'", "by(fastforce intro:Labels_Seq2)"], ["proof (state)\nthis:\n  labels (c\\<^sub>1;; c\\<^sub>2) l c'\n\ngoal (1 subgoal):\n 1. \\<not> l < #:c\\<^sub>1 \\<Longrightarrow>\n    \\<exists>a. labels (c\\<^sub>1;; c\\<^sub>2) l a", "thus ?thesis"], ["proof (prove)\nusing this:\n  labels (c\\<^sub>1;; c\\<^sub>2) l c'\n\ngoal (1 subgoal):\n 1. \\<exists>a. labels (c\\<^sub>1;; c\\<^sub>2) l a", "by auto"], ["proof (state)\nthis:\n  \\<exists>a. labels (c\\<^sub>1;; c\\<^sub>2) l a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>a. labels (c\\<^sub>1;; c\\<^sub>2) l a\n\ngoal (3 subgoals):\n 1. \\<And>x1 c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:if (x1) c1 else c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (if (x1) c1 else c2) l)\n 2. \\<And>x1 c l.\n       \\<lbrakk>\\<And>l. l < #:c \\<Longrightarrow> Ex (labels c l);\n        l < #:while (x1) c\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (while (x1) c) l)\n 3. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1 c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:if (x1) c1 else c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (if (x1) c1 else c2) l)\n 2. \\<And>x1 c l.\n       \\<lbrakk>\\<And>l. l < #:c \\<Longrightarrow> Ex (labels c l);\n        l < #:while (x1) c\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (while (x1) c) l)\n 3. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "case (Cond b c\\<^sub>1 c\\<^sub>2)"], ["proof (state)\nthis:\n  ?l < #:c\\<^sub>1 \\<Longrightarrow> \\<exists>a. labels c\\<^sub>1 ?l a\n  ?l < #:c\\<^sub>2 \\<Longrightarrow> \\<exists>a. labels c\\<^sub>2 ?l a\n  l < #:if (b) c\\<^sub>1 else c\\<^sub>2\n\ngoal (3 subgoals):\n 1. \\<And>x1 c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:if (x1) c1 else c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (if (x1) c1 else c2) l)\n 2. \\<And>x1 c l.\n       \\<lbrakk>\\<And>l. l < #:c \\<Longrightarrow> Ex (labels c l);\n        l < #:while (x1) c\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (while (x1) c) l)\n 3. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "note IH1 = \\<open>\\<And>l. l < #:c\\<^sub>1 \\<Longrightarrow> \\<exists>c'. labels c\\<^sub>1 l c'\\<close>"], ["proof (state)\nthis:\n  ?l < #:c\\<^sub>1 \\<Longrightarrow> \\<exists>c'. labels c\\<^sub>1 ?l c'\n\ngoal (3 subgoals):\n 1. \\<And>x1 c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:if (x1) c1 else c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (if (x1) c1 else c2) l)\n 2. \\<And>x1 c l.\n       \\<lbrakk>\\<And>l. l < #:c \\<Longrightarrow> Ex (labels c l);\n        l < #:while (x1) c\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (while (x1) c) l)\n 3. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "note IH2 = \\<open>\\<And>l. l < #:c\\<^sub>2 \\<Longrightarrow> \\<exists>c'. labels c\\<^sub>2 l c'\\<close>"], ["proof (state)\nthis:\n  ?l < #:c\\<^sub>2 \\<Longrightarrow> \\<exists>c'. labels c\\<^sub>2 ?l c'\n\ngoal (3 subgoals):\n 1. \\<And>x1 c1 c2 l.\n       \\<lbrakk>\\<And>l. l < #:c1 \\<Longrightarrow> Ex (labels c1 l);\n        \\<And>l. l < #:c2 \\<Longrightarrow> Ex (labels c2 l);\n        l < #:if (x1) c1 else c2\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (if (x1) c1 else c2) l)\n 2. \\<And>x1 c l.\n       \\<lbrakk>\\<And>l. l < #:c \\<Longrightarrow> Ex (labels c l);\n        l < #:while (x1) c\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (while (x1) c) l)\n 3. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a. labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "proof(cases \"l = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. l = 0 \\<Longrightarrow>\n    \\<exists>a. labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a\n 2. l \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>a. labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "case True"], ["proof (state)\nthis:\n  l = 0\n\ngoal (2 subgoals):\n 1. l = 0 \\<Longrightarrow>\n    \\<exists>a. labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a\n 2. l \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>a. labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "thus ?thesis"], ["proof (prove)\nusing this:\n  l = 0\n\ngoal (1 subgoal):\n 1. \\<exists>a. labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "by(fastforce intro:Labels_Base)"], ["proof (state)\nthis:\n  \\<exists>a. labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a\n\ngoal (1 subgoal):\n 1. l \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>a. labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. l \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>a. labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "case False"], ["proof (state)\nthis:\n  l \\<noteq> 0\n\ngoal (1 subgoal):\n 1. l \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>a. labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "hence \"0 < l\""], ["proof (prove)\nusing this:\n  l \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < l", "by simp"], ["proof (state)\nthis:\n  0 < l\n\ngoal (1 subgoal):\n 1. l \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>a. labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "then"], ["proof (chain)\npicking this:\n  0 < l", "obtain l' where \"l = l' + 1\" and \"l' = l - 1\""], ["proof (prove)\nusing this:\n  0 < l\n\ngoal (1 subgoal):\n 1. (\\<And>l'.\n        \\<lbrakk>l = l' + 1; l' = l - 1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  l = l' + 1\n  l' = l - 1\n\ngoal (1 subgoal):\n 1. l \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>a. labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "thus ?thesis"], ["proof (prove)\nusing this:\n  l = l' + 1\n  l' = l - 1\n\ngoal (1 subgoal):\n 1. \\<exists>a. labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "proof(cases \"l' < #:c\\<^sub>1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>l = l' + 1; l' = l - 1; l' < #:c\\<^sub>1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a\n 2. \\<lbrakk>l = l' + 1; l' = l - 1; \\<not> l' < #:c\\<^sub>1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "case True"], ["proof (state)\nthis:\n  l' < #:c\\<^sub>1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>l = l' + 1; l' = l - 1; l' < #:c\\<^sub>1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a\n 2. \\<lbrakk>l = l' + 1; l' = l - 1; \\<not> l' < #:c\\<^sub>1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "from IH1[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>c'. labels c\\<^sub>1 l' c'", "obtain c' where \"labels c\\<^sub>1 l' c'\""], ["proof (prove)\nusing this:\n  \\<exists>c'. labels c\\<^sub>1 l' c'\n\ngoal (1 subgoal):\n 1. (\\<And>c'.\n        labels c\\<^sub>1 l' c' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  labels c\\<^sub>1 l' c'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>l = l' + 1; l' = l - 1; l' < #:c\\<^sub>1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a\n 2. \\<lbrakk>l = l' + 1; l' = l - 1; \\<not> l' < #:c\\<^sub>1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "with \\<open>l = l' + 1\\<close>"], ["proof (chain)\npicking this:\n  l = l' + 1\n  labels c\\<^sub>1 l' c'", "have \"labels (if (b) c\\<^sub>1 else c\\<^sub>2) l c'\""], ["proof (prove)\nusing this:\n  l = l' + 1\n  labels c\\<^sub>1 l' c'\n\ngoal (1 subgoal):\n 1. labels (if (b) c\\<^sub>1 else c\\<^sub>2) l c'", "by(fastforce dest:Labels_CondTrue)"], ["proof (state)\nthis:\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) l c'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>l = l' + 1; l' = l - 1; l' < #:c\\<^sub>1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a\n 2. \\<lbrakk>l = l' + 1; l' = l - 1; \\<not> l' < #:c\\<^sub>1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "thus ?thesis"], ["proof (prove)\nusing this:\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) l c'\n\ngoal (1 subgoal):\n 1. \\<exists>a. labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "by auto"], ["proof (state)\nthis:\n  \\<exists>a. labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>l = l' + 1; l' = l - 1; \\<not> l' < #:c\\<^sub>1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>l = l' + 1; l' = l - 1; \\<not> l' < #:c\\<^sub>1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "case False"], ["proof (state)\nthis:\n  \\<not> l' < #:c\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>l = l' + 1; l' = l - 1; \\<not> l' < #:c\\<^sub>1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "hence \"#:c\\<^sub>1 \\<le> l'\""], ["proof (prove)\nusing this:\n  \\<not> l' < #:c\\<^sub>1\n\ngoal (1 subgoal):\n 1. #:c\\<^sub>1 \\<le> l'", "by simp"], ["proof (state)\nthis:\n  #:c\\<^sub>1 \\<le> l'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>l = l' + 1; l' = l - 1; \\<not> l' < #:c\\<^sub>1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "then"], ["proof (chain)\npicking this:\n  #:c\\<^sub>1 \\<le> l'", "obtain l'' where \"l' = l'' + #:c\\<^sub>1\" and \"l'' = l' - #:c\\<^sub>1\""], ["proof (prove)\nusing this:\n  #:c\\<^sub>1 \\<le> l'\n\ngoal (1 subgoal):\n 1. (\\<And>l''.\n        \\<lbrakk>l' = l'' + #:c\\<^sub>1; l'' = l' - #:c\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  l' = l'' + #:c\\<^sub>1\n  l'' = l' - #:c\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>l = l' + 1; l' = l - 1; \\<not> l' < #:c\\<^sub>1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "from \\<open>l' = l'' + #:c\\<^sub>1\\<close> \\<open>l = l' + 1\\<close> \\<open>l < #:if (b) c\\<^sub>1 else c\\<^sub>2\\<close>"], ["proof (chain)\npicking this:\n  l' = l'' + #:c\\<^sub>1\n  l = l' + 1\n  l < #:if (b) c\\<^sub>1 else c\\<^sub>2", "have \"l'' < #:c\\<^sub>2\""], ["proof (prove)\nusing this:\n  l' = l'' + #:c\\<^sub>1\n  l = l' + 1\n  l < #:if (b) c\\<^sub>1 else c\\<^sub>2\n\ngoal (1 subgoal):\n 1. l'' < #:c\\<^sub>2", "by simp"], ["proof (state)\nthis:\n  l'' < #:c\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>l = l' + 1; l' = l - 1; \\<not> l' < #:c\\<^sub>1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "from IH2[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>c'. labels c\\<^sub>2 l'' c'", "obtain c' where \"labels c\\<^sub>2 l'' c'\""], ["proof (prove)\nusing this:\n  \\<exists>c'. labels c\\<^sub>2 l'' c'\n\ngoal (1 subgoal):\n 1. (\\<And>c'.\n        labels c\\<^sub>2 l'' c' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  labels c\\<^sub>2 l'' c'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>l = l' + 1; l' = l - 1; \\<not> l' < #:c\\<^sub>1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "with \\<open>l' = l'' + #:c\\<^sub>1\\<close> \\<open>l = l' + 1\\<close>"], ["proof (chain)\npicking this:\n  l' = l'' + #:c\\<^sub>1\n  l = l' + 1\n  labels c\\<^sub>2 l'' c'", "have \"labels (if (b) c\\<^sub>1 else c\\<^sub>2) l c'\""], ["proof (prove)\nusing this:\n  l' = l'' + #:c\\<^sub>1\n  l = l' + 1\n  labels c\\<^sub>2 l'' c'\n\ngoal (1 subgoal):\n 1. labels (if (b) c\\<^sub>1 else c\\<^sub>2) l c'", "by(fastforce dest:Labels_CondFalse)"], ["proof (state)\nthis:\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) l c'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>l = l' + 1; l' = l - 1; \\<not> l' < #:c\\<^sub>1\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a.\n                         labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "thus ?thesis"], ["proof (prove)\nusing this:\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) l c'\n\ngoal (1 subgoal):\n 1. \\<exists>a. labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a", "by auto"], ["proof (state)\nthis:\n  \\<exists>a. labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>a. labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>a. labels (if (b) c\\<^sub>1 else c\\<^sub>2) l a\n\ngoal (2 subgoals):\n 1. \\<And>x1 c l.\n       \\<lbrakk>\\<And>l. l < #:c \\<Longrightarrow> Ex (labels c l);\n        l < #:while (x1) c\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (while (x1) c) l)\n 2. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1 c l.\n       \\<lbrakk>\\<And>l. l < #:c \\<Longrightarrow> Ex (labels c l);\n        l < #:while (x1) c\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (while (x1) c) l)\n 2. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "case (While b c')"], ["proof (state)\nthis:\n  ?l < #:c' \\<Longrightarrow> \\<exists>a. labels c' ?l a\n  l < #:while (b) c'\n\ngoal (2 subgoals):\n 1. \\<And>x1 c l.\n       \\<lbrakk>\\<And>l. l < #:c \\<Longrightarrow> Ex (labels c l);\n        l < #:while (x1) c\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (while (x1) c) l)\n 2. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "note IH = \\<open>\\<And>l. l < #:c' \\<Longrightarrow> \\<exists>c''. labels c' l c''\\<close>"], ["proof (state)\nthis:\n  ?l < #:c' \\<Longrightarrow> \\<exists>c''. labels c' ?l c''\n\ngoal (2 subgoals):\n 1. \\<And>x1 c l.\n       \\<lbrakk>\\<And>l. l < #:c \\<Longrightarrow> Ex (labels c l);\n        l < #:while (x1) c\\<rbrakk>\n       \\<Longrightarrow> Ex (labels (while (x1) c) l)\n 2. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a. labels (while (b) c') l a", "proof(cases \"l < 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. l < 1 \\<Longrightarrow> \\<exists>a. labels (while (b) c') l a\n 2. \\<not> l < 1 \\<Longrightarrow> \\<exists>a. labels (while (b) c') l a", "case True"], ["proof (state)\nthis:\n  l < 1\n\ngoal (2 subgoals):\n 1. l < 1 \\<Longrightarrow> \\<exists>a. labels (while (b) c') l a\n 2. \\<not> l < 1 \\<Longrightarrow> \\<exists>a. labels (while (b) c') l a", "hence \"l = 0\""], ["proof (prove)\nusing this:\n  l < 1\n\ngoal (1 subgoal):\n 1. l = 0", "by simp"], ["proof (state)\nthis:\n  l = 0\n\ngoal (2 subgoals):\n 1. l < 1 \\<Longrightarrow> \\<exists>a. labels (while (b) c') l a\n 2. \\<not> l < 1 \\<Longrightarrow> \\<exists>a. labels (while (b) c') l a", "thus ?thesis"], ["proof (prove)\nusing this:\n  l = 0\n\ngoal (1 subgoal):\n 1. \\<exists>a. labels (while (b) c') l a", "by(fastforce intro:Labels_Base)"], ["proof (state)\nthis:\n  \\<exists>a. labels (while (b) c') l a\n\ngoal (1 subgoal):\n 1. \\<not> l < 1 \\<Longrightarrow> \\<exists>a. labels (while (b) c') l a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> l < 1 \\<Longrightarrow> \\<exists>a. labels (while (b) c') l a", "case False"], ["proof (state)\nthis:\n  \\<not> l < 1\n\ngoal (1 subgoal):\n 1. \\<not> l < 1 \\<Longrightarrow> \\<exists>a. labels (while (b) c') l a", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a. labels (while (b) c') l a", "proof(cases \"l < 2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. l < 2 \\<Longrightarrow> \\<exists>a. labels (while (b) c') l a\n 2. \\<not> l < 2 \\<Longrightarrow> \\<exists>a. labels (while (b) c') l a", "case True"], ["proof (state)\nthis:\n  l < 2\n\ngoal (2 subgoals):\n 1. l < 2 \\<Longrightarrow> \\<exists>a. labels (while (b) c') l a\n 2. \\<not> l < 2 \\<Longrightarrow> \\<exists>a. labels (while (b) c') l a", "with \\<open>\\<not> l < 1\\<close>"], ["proof (chain)\npicking this:\n  \\<not> l < 1\n  l < 2", "have \"l = 1\""], ["proof (prove)\nusing this:\n  \\<not> l < 1\n  l < 2\n\ngoal (1 subgoal):\n 1. l = 1", "by simp"], ["proof (state)\nthis:\n  l = 1\n\ngoal (2 subgoals):\n 1. l < 2 \\<Longrightarrow> \\<exists>a. labels (while (b) c') l a\n 2. \\<not> l < 2 \\<Longrightarrow> \\<exists>a. labels (while (b) c') l a", "thus ?thesis"], ["proof (prove)\nusing this:\n  l = 1\n\ngoal (1 subgoal):\n 1. \\<exists>a. labels (while (b) c') l a", "by(fastforce intro:Labels_WhileExit)"], ["proof (state)\nthis:\n  \\<exists>a. labels (while (b) c') l a\n\ngoal (1 subgoal):\n 1. \\<not> l < 2 \\<Longrightarrow> \\<exists>a. labels (while (b) c') l a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> l < 2 \\<Longrightarrow> \\<exists>a. labels (while (b) c') l a", "case False"], ["proof (state)\nthis:\n  \\<not> l < 2\n\ngoal (1 subgoal):\n 1. \\<not> l < 2 \\<Longrightarrow> \\<exists>a. labels (while (b) c') l a", "with \\<open>\\<not> l < 1\\<close>"], ["proof (chain)\npicking this:\n  \\<not> l < 1\n  \\<not> l < 2", "have \"2 \\<le> l\""], ["proof (prove)\nusing this:\n  \\<not> l < 1\n  \\<not> l < 2\n\ngoal (1 subgoal):\n 1. 2 \\<le> l", "by simp"], ["proof (state)\nthis:\n  2 \\<le> l\n\ngoal (1 subgoal):\n 1. \\<not> l < 2 \\<Longrightarrow> \\<exists>a. labels (while (b) c') l a", "then"], ["proof (chain)\npicking this:\n  2 \\<le> l", "obtain l' where \"l = l' + 2\" and \"l' = l - 2\""], ["proof (prove)\nusing this:\n  2 \\<le> l\n\ngoal (1 subgoal):\n 1. (\\<And>l'.\n        \\<lbrakk>l = l' + 2; l' = l - 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(simp del:add_2_eq_Suc')"], ["proof (state)\nthis:\n  l = l' + 2\n  l' = l - 2\n\ngoal (1 subgoal):\n 1. \\<not> l < 2 \\<Longrightarrow> \\<exists>a. labels (while (b) c') l a", "from \\<open>l = l' + 2\\<close> \\<open>l < #:while (b) c'\\<close>"], ["proof (chain)\npicking this:\n  l = l' + 2\n  l < #:while (b) c'", "have \"l' < #:c'\""], ["proof (prove)\nusing this:\n  l = l' + 2\n  l < #:while (b) c'\n\ngoal (1 subgoal):\n 1. l' < #:c'", "by simp"], ["proof (state)\nthis:\n  l' < #:c'\n\ngoal (1 subgoal):\n 1. \\<not> l < 2 \\<Longrightarrow> \\<exists>a. labels (while (b) c') l a", "from IH[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>c''. labels c' l' c''", "obtain c'' where \"labels c' l' c''\""], ["proof (prove)\nusing this:\n  \\<exists>c''. labels c' l' c''\n\ngoal (1 subgoal):\n 1. (\\<And>c''. labels c' l' c'' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  labels c' l' c''\n\ngoal (1 subgoal):\n 1. \\<not> l < 2 \\<Longrightarrow> \\<exists>a. labels (while (b) c') l a", "with \\<open>l = l' + 2\\<close>"], ["proof (chain)\npicking this:\n  l = l' + 2\n  labels c' l' c''", "have \"labels (while (b) c') l (c'';;while (b) c')\""], ["proof (prove)\nusing this:\n  l = l' + 2\n  labels c' l' c''\n\ngoal (1 subgoal):\n 1. labels (while (b) c') l (c'';; while (b) c')", "by(fastforce dest:Labels_WhileBody)"], ["proof (state)\nthis:\n  labels (while (b) c') l (c'';; while (b) c')\n\ngoal (1 subgoal):\n 1. \\<not> l < 2 \\<Longrightarrow> \\<exists>a. labels (while (b) c') l a", "thus ?thesis"], ["proof (prove)\nusing this:\n  labels (while (b) c') l (c'';; while (b) c')\n\ngoal (1 subgoal):\n 1. \\<exists>a. labels (while (b) c') l a", "by auto"], ["proof (state)\nthis:\n  \\<exists>a. labels (while (b) c') l a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>a. labels (while (b) c') l a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>a. labels (while (b) c') l a\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "case (Call p es rets)"], ["proof (state)\nthis:\n  l < #:Call p es rets\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2 x3 l.\n       l < #:Call x1 x2 x3 \\<Longrightarrow> Ex (labels (Call x1 x2 x3) l)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a. labels (Call p es rets) l a", "proof(cases \"l < 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. l < 1 \\<Longrightarrow> \\<exists>a. labels (Call p es rets) l a\n 2. \\<not> l < 1 \\<Longrightarrow> \\<exists>a. labels (Call p es rets) l a", "case True"], ["proof (state)\nthis:\n  l < 1\n\ngoal (2 subgoals):\n 1. l < 1 \\<Longrightarrow> \\<exists>a. labels (Call p es rets) l a\n 2. \\<not> l < 1 \\<Longrightarrow> \\<exists>a. labels (Call p es rets) l a", "hence \"l = 0\""], ["proof (prove)\nusing this:\n  l < 1\n\ngoal (1 subgoal):\n 1. l = 0", "by simp"], ["proof (state)\nthis:\n  l = 0\n\ngoal (2 subgoals):\n 1. l < 1 \\<Longrightarrow> \\<exists>a. labels (Call p es rets) l a\n 2. \\<not> l < 1 \\<Longrightarrow> \\<exists>a. labels (Call p es rets) l a", "thus ?thesis"], ["proof (prove)\nusing this:\n  l = 0\n\ngoal (1 subgoal):\n 1. \\<exists>a. labels (Call p es rets) l a", "by(fastforce intro:Labels_Base)"], ["proof (state)\nthis:\n  \\<exists>a. labels (Call p es rets) l a\n\ngoal (1 subgoal):\n 1. \\<not> l < 1 \\<Longrightarrow> \\<exists>a. labels (Call p es rets) l a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> l < 1 \\<Longrightarrow> \\<exists>a. labels (Call p es rets) l a", "case False"], ["proof (state)\nthis:\n  \\<not> l < 1\n\ngoal (1 subgoal):\n 1. \\<not> l < 1 \\<Longrightarrow> \\<exists>a. labels (Call p es rets) l a", "with \\<open>l < #:Call p es rets\\<close>"], ["proof (chain)\npicking this:\n  l < #:Call p es rets\n  \\<not> l < 1", "have \"l = 1\""], ["proof (prove)\nusing this:\n  l < #:Call p es rets\n  \\<not> l < 1\n\ngoal (1 subgoal):\n 1. l = 1", "by simp"], ["proof (state)\nthis:\n  l = 1\n\ngoal (1 subgoal):\n 1. \\<not> l < 1 \\<Longrightarrow> \\<exists>a. labels (Call p es rets) l a", "thus ?thesis"], ["proof (prove)\nusing this:\n  l = 1\n\ngoal (1 subgoal):\n 1. \\<exists>a. labels (Call p es rets) l a", "by(fastforce intro:Labels_Call)"], ["proof (state)\nthis:\n  \\<exists>a. labels (Call p es rets) l a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>a. labels (Call p es rets) l a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c'. labels c l c'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma labels_det:\n  \"labels c l c'\\<Longrightarrow> (\\<And>c''. labels c l c''\\<Longrightarrow> c' = c'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. labels c l c' \\<Longrightarrow>\n    (\\<And>c''. labels c l c'' \\<Longrightarrow> c' = c'')", "proof(induct rule:labels.induct)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>c c''. labels c 0 c'' \\<Longrightarrow> c = c''\n 2. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 3. \\<And>c\\<^sub>1 l c c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) l c''\\<rbrakk>\n       \\<Longrightarrow> c;; c\\<^sub>2 = c''\n 4. \\<And>c\\<^sub>2 l c c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) (l + #:c\\<^sub>1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 5. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 6. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 7. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 8. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 9. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "case (Labels_Base c c'')"], ["proof (state)\nthis:\n  labels c 0 c''\n\ngoal (9 subgoals):\n 1. \\<And>c c''. labels c 0 c'' \\<Longrightarrow> c = c''\n 2. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 3. \\<And>c\\<^sub>1 l c c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) l c''\\<rbrakk>\n       \\<Longrightarrow> c;; c\\<^sub>2 = c''\n 4. \\<And>c\\<^sub>2 l c c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) (l + #:c\\<^sub>1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 5. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 6. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 7. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 8. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 9. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "from \\<open>labels c 0 c''\\<close>"], ["proof (chain)\npicking this:\n  labels c 0 c''", "obtain l where \"labels c l c''\" and \"l = 0\""], ["proof (prove)\nusing this:\n  labels c 0 c''\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>labels c l c''; l = 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  labels c l c''\n  l = 0\n\ngoal (9 subgoals):\n 1. \\<And>c c''. labels c 0 c'' \\<Longrightarrow> c = c''\n 2. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 3. \\<And>c\\<^sub>1 l c c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) l c''\\<rbrakk>\n       \\<Longrightarrow> c;; c\\<^sub>2 = c''\n 4. \\<And>c\\<^sub>2 l c c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) (l + #:c\\<^sub>1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 5. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 6. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 7. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 8. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 9. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "thus ?case"], ["proof (prove)\nusing this:\n  labels c l c''\n  l = 0\n\ngoal (1 subgoal):\n 1. c = c''", "by(induct rule:labels.induct,auto)"], ["proof (state)\nthis:\n  c = c''\n\ngoal (8 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c\\<^sub>1 l c c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) l c''\\<rbrakk>\n       \\<Longrightarrow> c;; c\\<^sub>2 = c''\n 3. \\<And>c\\<^sub>2 l c c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) (l + #:c\\<^sub>1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 4. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 5. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 6. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 7. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 8. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c\\<^sub>1 l c c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) l c''\\<rbrakk>\n       \\<Longrightarrow> c;; c\\<^sub>2 = c''\n 3. \\<And>c\\<^sub>2 l c c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) (l + #:c\\<^sub>1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 4. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 5. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 6. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 7. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 8. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "case (Labels_Seq1 c\\<^sub>1 l c c\\<^sub>2)"], ["proof (state)\nthis:\n  labels c\\<^sub>1 l c\n  labels c\\<^sub>1 l ?c'' \\<Longrightarrow> c = ?c''\n  labels (c\\<^sub>1;; c\\<^sub>2) l c''\n\ngoal (8 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c\\<^sub>1 l c c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) l c''\\<rbrakk>\n       \\<Longrightarrow> c;; c\\<^sub>2 = c''\n 3. \\<And>c\\<^sub>2 l c c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) (l + #:c\\<^sub>1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 4. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 5. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 6. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 7. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 8. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "note IH = \\<open>\\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c''\\<close>"], ["proof (state)\nthis:\n  labels c\\<^sub>1 l ?c'' \\<Longrightarrow> c = ?c''\n\ngoal (8 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c\\<^sub>1 l c c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) l c''\\<rbrakk>\n       \\<Longrightarrow> c;; c\\<^sub>2 = c''\n 3. \\<And>c\\<^sub>2 l c c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) (l + #:c\\<^sub>1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 4. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 5. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 6. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 7. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 8. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "from \\<open>labels c\\<^sub>1 l c\\<close>"], ["proof (chain)\npicking this:\n  labels c\\<^sub>1 l c", "have \"l < #:c\\<^sub>1\""], ["proof (prove)\nusing this:\n  labels c\\<^sub>1 l c\n\ngoal (1 subgoal):\n 1. l < #:c\\<^sub>1", "by(fastforce intro:label_less_num_inner_nodes)"], ["proof (state)\nthis:\n  l < #:c\\<^sub>1\n\ngoal (8 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c\\<^sub>1 l c c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) l c''\\<rbrakk>\n       \\<Longrightarrow> c;; c\\<^sub>2 = c''\n 3. \\<And>c\\<^sub>2 l c c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) (l + #:c\\<^sub>1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 4. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 5. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 6. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 7. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 8. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "with \\<open>labels (c\\<^sub>1;;c\\<^sub>2) l c''\\<close>"], ["proof (chain)\npicking this:\n  labels (c\\<^sub>1;; c\\<^sub>2) l c''\n  l < #:c\\<^sub>1", "obtain cx where \"c'' = cx;;c\\<^sub>2 \\<and> labels c\\<^sub>1 l cx\""], ["proof (prove)\nusing this:\n  labels (c\\<^sub>1;; c\\<^sub>2) l c''\n  l < #:c\\<^sub>1\n\ngoal (1 subgoal):\n 1. (\\<And>cx.\n        c'' = cx;; c\\<^sub>2 \\<and> labels c\\<^sub>1 l cx \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(fastforce elim:labels.cases intro:Labels_Base)"], ["proof (state)\nthis:\n  c'' = cx;; c\\<^sub>2 \\<and> labels c\\<^sub>1 l cx\n\ngoal (8 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c\\<^sub>1 l c c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) l c''\\<rbrakk>\n       \\<Longrightarrow> c;; c\\<^sub>2 = c''\n 3. \\<And>c\\<^sub>2 l c c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) (l + #:c\\<^sub>1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 4. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 5. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 6. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 7. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 8. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "hence [simp]:\"c'' = cx;;c\\<^sub>2\" and \"labels c\\<^sub>1 l cx\""], ["proof (prove)\nusing this:\n  c'' = cx;; c\\<^sub>2 \\<and> labels c\\<^sub>1 l cx\n\ngoal (1 subgoal):\n 1. c'' = cx;; c\\<^sub>2 &&& labels c\\<^sub>1 l cx", "by simp_all"], ["proof (state)\nthis:\n  c'' = cx;; c\\<^sub>2\n  labels c\\<^sub>1 l cx\n\ngoal (8 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c\\<^sub>1 l c c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) l c''\\<rbrakk>\n       \\<Longrightarrow> c;; c\\<^sub>2 = c''\n 3. \\<And>c\\<^sub>2 l c c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) (l + #:c\\<^sub>1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 4. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 5. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 6. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 7. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 8. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "from IH[OF \\<open>labels c\\<^sub>1 l cx\\<close>]"], ["proof (chain)\npicking this:\n  c = cx", "show ?case"], ["proof (prove)\nusing this:\n  c = cx\n\ngoal (1 subgoal):\n 1. c;; c\\<^sub>2 = c''", "by simp"], ["proof (state)\nthis:\n  c;; c\\<^sub>2 = c''\n\ngoal (7 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c\\<^sub>2 l c c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) (l + #:c\\<^sub>1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 3. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 4. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 5. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 6. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 7. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c\\<^sub>2 l c c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) (l + #:c\\<^sub>1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 3. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 4. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 5. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 6. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 7. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "case (Labels_Seq2 c\\<^sub>2 l c c\\<^sub>1)"], ["proof (state)\nthis:\n  labels c\\<^sub>2 l c\n  labels c\\<^sub>2 l ?c'' \\<Longrightarrow> c = ?c''\n  labels (c\\<^sub>1;; c\\<^sub>2) (l + #:c\\<^sub>1) c''\n\ngoal (7 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c\\<^sub>2 l c c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) (l + #:c\\<^sub>1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 3. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 4. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 5. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 6. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 7. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "note IH = \\<open>\\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c''\\<close>"], ["proof (state)\nthis:\n  labels c\\<^sub>2 l ?c'' \\<Longrightarrow> c = ?c''\n\ngoal (7 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c\\<^sub>2 l c c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) (l + #:c\\<^sub>1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 3. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 4. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 5. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 6. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 7. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "from \\<open>labels (c\\<^sub>1;;c\\<^sub>2) (l + #:c\\<^sub>1) c''\\<close> \\<open>labels c\\<^sub>2 l c\\<close>"], ["proof (chain)\npicking this:\n  labels (c\\<^sub>1;; c\\<^sub>2) (l + #:c\\<^sub>1) c''\n  labels c\\<^sub>2 l c", "have \"labels c\\<^sub>2 l c''\""], ["proof (prove)\nusing this:\n  labels (c\\<^sub>1;; c\\<^sub>2) (l + #:c\\<^sub>1) c''\n  labels c\\<^sub>2 l c\n\ngoal (1 subgoal):\n 1. labels c\\<^sub>2 l c''", "by(auto elim:labels.cases dest:label_less_num_inner_nodes)"], ["proof (state)\nthis:\n  labels c\\<^sub>2 l c''\n\ngoal (7 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c\\<^sub>2 l c c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (c\\<^sub>1;; c\\<^sub>2) (l + #:c\\<^sub>1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 3. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 4. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 5. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 6. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 7. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "from IH[OF this]"], ["proof (chain)\npicking this:\n  c = c''", "show ?case"], ["proof (prove)\nusing this:\n  c = c''\n\ngoal (1 subgoal):\n 1. c = c''", "."], ["proof (state)\nthis:\n  c = c''\n\ngoal (6 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 3. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 4. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 5. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 6. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 3. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 4. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 5. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 6. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "case (Labels_CondTrue c\\<^sub>1 l c b c\\<^sub>2)"], ["proof (state)\nthis:\n  labels c\\<^sub>1 l c\n  labels c\\<^sub>1 l ?c'' \\<Longrightarrow> c = ?c''\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\n\ngoal (6 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 3. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 4. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 5. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 6. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "note IH = \\<open>\\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow>  c = c''\\<close>"], ["proof (state)\nthis:\n  labels c\\<^sub>1 l ?c'' \\<Longrightarrow> c = ?c''\n\ngoal (6 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 3. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 4. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 5. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 6. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "from \\<open>labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\\<close> \\<open>labels c\\<^sub>1 l c\\<close>"], ["proof (chain)\npicking this:\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\n  labels c\\<^sub>1 l c", "have \"labels c\\<^sub>1 l c''\""], ["proof (prove)\nusing this:\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\n  labels c\\<^sub>1 l c\n\ngoal (1 subgoal):\n 1. labels c\\<^sub>1 l c''", "by(fastforce elim:labels.cases dest:label_less_num_inner_nodes)"], ["proof (state)\nthis:\n  labels c\\<^sub>1 l c''\n\ngoal (6 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c\\<^sub>1 l c b c\\<^sub>2 c''.\n       \\<lbrakk>labels c\\<^sub>1 l c;\n        \\<And>c''. labels c\\<^sub>1 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + 1) c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 3. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 4. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 5. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 6. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "from IH[OF this]"], ["proof (chain)\npicking this:\n  c = c''", "show ?case"], ["proof (prove)\nusing this:\n  c = c''\n\ngoal (1 subgoal):\n 1. c = c''", "."], ["proof (state)\nthis:\n  c = c''\n\ngoal (5 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 3. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 4. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 5. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 3. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 4. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 5. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "case (Labels_CondFalse c\\<^sub>2 l c b c\\<^sub>1)"], ["proof (state)\nthis:\n  labels c\\<^sub>2 l c\n  labels c\\<^sub>2 l ?c'' \\<Longrightarrow> c = ?c''\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1) c''\n\ngoal (5 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 3. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 4. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 5. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "note IH = \\<open>\\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow>  c = c''\\<close>"], ["proof (state)\nthis:\n  labels c\\<^sub>2 l ?c'' \\<Longrightarrow> c = ?c''\n\ngoal (5 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 3. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 4. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 5. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "from \\<open>labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1) c''\\<close> \\<open>labels c\\<^sub>2 l c\\<close>"], ["proof (chain)\npicking this:\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1) c''\n  labels c\\<^sub>2 l c", "have \"labels c\\<^sub>2 l c''\""], ["proof (prove)\nusing this:\n  labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1) c''\n  labels c\\<^sub>2 l c\n\ngoal (1 subgoal):\n 1. labels c\\<^sub>2 l c''", "by(fastforce elim:labels.cases dest:label_less_num_inner_nodes)"], ["proof (state)\nthis:\n  labels c\\<^sub>2 l c''\n\ngoal (5 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c\\<^sub>2 l c b c\\<^sub>1 c''.\n       \\<lbrakk>labels c\\<^sub>2 l c;\n        \\<And>c''. labels c\\<^sub>2 l c'' \\<Longrightarrow> c = c'';\n        labels (if (b) c\\<^sub>1 else c\\<^sub>2) (l + #:c\\<^sub>1 + 1)\n         c''\\<rbrakk>\n       \\<Longrightarrow> c = c''\n 3. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 4. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 5. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "from IH[OF this]"], ["proof (chain)\npicking this:\n  c = c''", "show ?case"], ["proof (prove)\nusing this:\n  c = c''\n\ngoal (1 subgoal):\n 1. c = c''", "."], ["proof (state)\nthis:\n  c = c''\n\ngoal (4 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 3. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 4. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 3. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 4. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "case (Labels_WhileBody c' l c b)"], ["proof (state)\nthis:\n  labels c' l c\n  labels c' l ?c'' \\<Longrightarrow> c = ?c''\n  labels (while (b) c') (l + 2) c''\n\ngoal (4 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 3. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 4. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "note IH = \\<open>\\<And>c''. labels c' l c'' \\<Longrightarrow> c = c''\\<close>"], ["proof (state)\nthis:\n  labels c' l ?c'' \\<Longrightarrow> c = ?c''\n\ngoal (4 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 3. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 4. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "from \\<open>labels (while (b) c') (l + 2) c''\\<close> \\<open>labels c' l c\\<close>"], ["proof (chain)\npicking this:\n  labels (while (b) c') (l + 2) c''\n  labels c' l c", "obtain cx where \"c'' = cx;;while (b) c' \\<and> labels c' l cx\""], ["proof (prove)\nusing this:\n  labels (while (b) c') (l + 2) c''\n  labels c' l c\n\ngoal (1 subgoal):\n 1. (\\<And>cx.\n        c'' = cx;; while (b) c' \\<and> labels c' l cx \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by -(erule labels.cases,auto)"], ["proof (state)\nthis:\n  c'' = cx;; while (b) c' \\<and> labels c' l cx\n\ngoal (4 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 3. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 4. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "hence [simp]:\"c'' = cx;;while (b) c'\" and \"labels c' l cx\""], ["proof (prove)\nusing this:\n  c'' = cx;; while (b) c' \\<and> labels c' l cx\n\ngoal (1 subgoal):\n 1. c'' = cx;; while (b) c' &&& labels c' l cx", "by simp_all"], ["proof (state)\nthis:\n  c'' = cx;; while (b) c'\n  labels c' l cx\n\ngoal (4 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>c' l c b c''.\n       \\<lbrakk>labels c' l c;\n        \\<And>c''. labels c' l c'' \\<Longrightarrow> c = c'';\n        labels (while (b) c') (l + 2) c''\\<rbrakk>\n       \\<Longrightarrow> c;; while (b) c' = c''\n 3. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 4. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "from IH[OF \\<open>labels c' l cx\\<close>]"], ["proof (chain)\npicking this:\n  c = cx", "show ?case"], ["proof (prove)\nusing this:\n  c = cx\n\ngoal (1 subgoal):\n 1. c;; while (b) c' = c''", "by simp"], ["proof (state)\nthis:\n  c;; while (b) c' = c''\n\ngoal (3 subgoals):\n 1. \\<And>V e c''. labels (V:=e) 1 c'' \\<Longrightarrow> Skip = c''\n 2. \\<And>b c' c''. labels (while (b) c') 1 c'' \\<Longrightarrow> Skip = c''\n 3. \\<And>p es rets c''.\n       labels (Call p es rets) 1 c'' \\<Longrightarrow> Skip = c''", "qed (fastforce elim:labels.cases)+"], ["", "definition label :: \"cmd \\<Rightarrow> nat \\<Rightarrow> cmd\"\n  where \"label c n \\<equiv> (THE c'. labels c n c')\""], ["", "lemma labels_THE:\n  \"labels c l c' \\<Longrightarrow> (THE c'. labels c l c') = c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. labels c l c' \\<Longrightarrow> (THE c'. labels c l c') = c'", "by(fastforce intro:the_equality dest:labels_det)"], ["", "lemma labels_label:\"labels c l c' \\<Longrightarrow> label c l = c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. labels c l c' \\<Longrightarrow> label c l = c'", "by(fastforce intro:labels_THE simp:label_def)"], ["", "end"]]}