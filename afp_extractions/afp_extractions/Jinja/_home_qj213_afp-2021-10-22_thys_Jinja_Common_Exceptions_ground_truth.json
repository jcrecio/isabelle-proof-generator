{"file_name": "/home/qj213/afp-2021-10-22/thys/Jinja/Common/Exceptions.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Jinja", "problem_names": ["lemma [simp]: \"NullPointer \\<in> sys_xcpts \\<and> OutOfMemory \\<in> sys_xcpts \\<and> ClassCast \\<in> sys_xcpts\"", "lemma sys_xcpts_cases [consumes 1, cases set]:\n  \"\\<lbrakk> C \\<in> sys_xcpts; P NullPointer; P OutOfMemory; P ClassCast\\<rbrakk> \\<Longrightarrow> P C\"", "lemma preallocated_dom [simp]: \n  \"\\<lbrakk> preallocated h; C \\<in> sys_xcpts \\<rbrakk> \\<Longrightarrow> addr_of_sys_xcpt C \\<in> dom h\"", "lemma preallocatedD:\n  \"\\<lbrakk> preallocated h; C \\<in> sys_xcpts \\<rbrakk> \\<Longrightarrow> \\<exists>fs. h(addr_of_sys_xcpt C) = Some (C, fs)\"", "lemma preallocatedE [elim?]:\n  \"\\<lbrakk> preallocated h;  C \\<in> sys_xcpts; \\<And>fs. h(addr_of_sys_xcpt C) = Some(C,fs) \\<Longrightarrow> P h C\\<rbrakk>\n  \\<Longrightarrow> P h C\"", "lemma cname_of_xcp [simp]:\n  \"\\<lbrakk> preallocated h; C \\<in> sys_xcpts \\<rbrakk> \\<Longrightarrow> cname_of h (addr_of_sys_xcpt C) = C\"", "lemma typeof_ClassCast [simp]:\n  \"preallocated h \\<Longrightarrow> typeof\\<^bsub>h\\<^esub> (Addr(addr_of_sys_xcpt ClassCast)) = Some(Class ClassCast)\"", "lemma typeof_OutOfMemory [simp]:\n  \"preallocated h \\<Longrightarrow> typeof\\<^bsub>h\\<^esub> (Addr(addr_of_sys_xcpt OutOfMemory)) = Some(Class OutOfMemory)\"", "lemma typeof_NullPointer [simp]:\n  \"preallocated h \\<Longrightarrow> typeof\\<^bsub>h\\<^esub> (Addr(addr_of_sys_xcpt NullPointer)) = Some(Class NullPointer)\"", "lemma preallocated_hext:\n  \"\\<lbrakk> preallocated h; h \\<unlhd> h' \\<rbrakk> \\<Longrightarrow> preallocated h'\"", "lemmas preallocated_upd_obj = preallocated_hext [OF _ hext_upd_obj]", "lemmas preallocated_new  = preallocated_hext [OF _ hext_new]", "lemma preallocated_start:\n  \"preallocated (start_heap P)\""], "translations": [["", "lemma [simp]: \"NullPointer \\<in> sys_xcpts \\<and> OutOfMemory \\<in> sys_xcpts \\<and> ClassCast \\<in> sys_xcpts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NullPointer \\<in> sys_xcpts \\<and>\n    OutOfMemory \\<in> sys_xcpts \\<and> ClassCast \\<in> sys_xcpts", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. NullPointer \\<in> sys_xcpts \\<and>\n    OutOfMemory \\<in> sys_xcpts \\<and> ClassCast \\<in> sys_xcpts", "by(simp add: sys_xcpts_def)"], ["", "(*>*)"], ["", "lemma sys_xcpts_cases [consumes 1, cases set]:\n  \"\\<lbrakk> C \\<in> sys_xcpts; P NullPointer; P OutOfMemory; P ClassCast\\<rbrakk> \\<Longrightarrow> P C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<in> sys_xcpts; P NullPointer; P OutOfMemory;\n     P ClassCast\\<rbrakk>\n    \\<Longrightarrow> P C", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<in> sys_xcpts; P NullPointer; P OutOfMemory;\n     P ClassCast\\<rbrakk>\n    \\<Longrightarrow> P C", "by (auto simp add: sys_xcpts_def)"], ["", "(*>*)"], ["", "subsection \"@{term preallocated}\""], ["", "lemma preallocated_dom [simp]: \n  \"\\<lbrakk> preallocated h; C \\<in> sys_xcpts \\<rbrakk> \\<Longrightarrow> addr_of_sys_xcpt C \\<in> dom h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; C \\<in> sys_xcpts\\<rbrakk>\n    \\<Longrightarrow> addr_of_sys_xcpt C \\<in> dom h", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; C \\<in> sys_xcpts\\<rbrakk>\n    \\<Longrightarrow> addr_of_sys_xcpt C \\<in> dom h", "by (fastforce simp:preallocated_def dom_def)"], ["", "(*>*)"], ["", "lemma preallocatedD:\n  \"\\<lbrakk> preallocated h; C \\<in> sys_xcpts \\<rbrakk> \\<Longrightarrow> \\<exists>fs. h(addr_of_sys_xcpt C) = Some (C, fs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; C \\<in> sys_xcpts\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fs.\n                         h (addr_of_sys_xcpt C) = \\<lfloor>(C, fs)\\<rfloor>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; C \\<in> sys_xcpts\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fs.\n                         h (addr_of_sys_xcpt C) = \\<lfloor>(C, fs)\\<rfloor>", "by(auto simp add: preallocated_def sys_xcpts_def)"], ["", "(*>*)"], ["", "lemma preallocatedE [elim?]:\n  \"\\<lbrakk> preallocated h;  C \\<in> sys_xcpts; \\<And>fs. h(addr_of_sys_xcpt C) = Some(C,fs) \\<Longrightarrow> P h C\\<rbrakk>\n  \\<Longrightarrow> P h C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; C \\<in> sys_xcpts;\n     \\<And>fs.\n        h (addr_of_sys_xcpt C) = \\<lfloor>(C, fs)\\<rfloor> \\<Longrightarrow>\n        P h C\\<rbrakk>\n    \\<Longrightarrow> P h C", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; C \\<in> sys_xcpts;\n     \\<And>fs.\n        h (addr_of_sys_xcpt C) = \\<lfloor>(C, fs)\\<rfloor> \\<Longrightarrow>\n        P h C\\<rbrakk>\n    \\<Longrightarrow> P h C", "by (fast dest: preallocatedD)"], ["", "(*>*)"], ["", "lemma cname_of_xcp [simp]:\n  \"\\<lbrakk> preallocated h; C \\<in> sys_xcpts \\<rbrakk> \\<Longrightarrow> cname_of h (addr_of_sys_xcpt C) = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; C \\<in> sys_xcpts\\<rbrakk>\n    \\<Longrightarrow> cname_of h (addr_of_sys_xcpt C) = C", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; C \\<in> sys_xcpts\\<rbrakk>\n    \\<Longrightarrow> cname_of h (addr_of_sys_xcpt C) = C", "by (auto elim: preallocatedE)"], ["", "(*>*)"], ["", "lemma typeof_ClassCast [simp]:\n  \"preallocated h \\<Longrightarrow> typeof\\<^bsub>h\\<^esub> (Addr(addr_of_sys_xcpt ClassCast)) = Some(Class ClassCast)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    typeof\\<^bsub>h\\<^esub> (Addr (addr_of_sys_xcpt ClassCast)) =\n    \\<lfloor>Class ClassCast\\<rfloor>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    typeof\\<^bsub>h\\<^esub> (Addr (addr_of_sys_xcpt ClassCast)) =\n    \\<lfloor>Class ClassCast\\<rfloor>", "by (auto elim: preallocatedE)"], ["", "(*>*)"], ["", "lemma typeof_OutOfMemory [simp]:\n  \"preallocated h \\<Longrightarrow> typeof\\<^bsub>h\\<^esub> (Addr(addr_of_sys_xcpt OutOfMemory)) = Some(Class OutOfMemory)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    typeof\\<^bsub>h\\<^esub> (Addr (addr_of_sys_xcpt OutOfMemory)) =\n    \\<lfloor>Class OutOfMemory\\<rfloor>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    typeof\\<^bsub>h\\<^esub> (Addr (addr_of_sys_xcpt OutOfMemory)) =\n    \\<lfloor>Class OutOfMemory\\<rfloor>", "by (auto elim: preallocatedE)"], ["", "(*>*)"], ["", "lemma typeof_NullPointer [simp]:\n  \"preallocated h \\<Longrightarrow> typeof\\<^bsub>h\\<^esub> (Addr(addr_of_sys_xcpt NullPointer)) = Some(Class NullPointer)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    typeof\\<^bsub>h\\<^esub> (Addr (addr_of_sys_xcpt NullPointer)) =\n    \\<lfloor>Class NullPointer\\<rfloor>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    typeof\\<^bsub>h\\<^esub> (Addr (addr_of_sys_xcpt NullPointer)) =\n    \\<lfloor>Class NullPointer\\<rfloor>", "by (auto elim: preallocatedE)"], ["", "(*>*)"], ["", "lemma preallocated_hext:\n  \"\\<lbrakk> preallocated h; h \\<unlhd> h' \\<rbrakk> \\<Longrightarrow> preallocated h'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; h \\<unlhd> h'\\<rbrakk>\n    \\<Longrightarrow> preallocated h'", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; h \\<unlhd> h'\\<rbrakk>\n    \\<Longrightarrow> preallocated h'", "by (simp add: preallocated_def hext_def)"], ["", "(*>*)\n\n(*<*)"], ["", "lemmas preallocated_upd_obj = preallocated_hext [OF _ hext_upd_obj]"], ["", "lemmas preallocated_new  = preallocated_hext [OF _ hext_new]"], ["", "(*>*)"], ["", "lemma preallocated_start:\n  \"preallocated (start_heap P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated (start_heap P)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated (start_heap P)", "by (auto simp add: start_heap_def blank_def sys_xcpts_def fun_upd_apply\n                     addr_of_sys_xcpt_def preallocated_def)"], ["", "(*>*)"], ["", "end"]]}