{"file_name": "/home/qj213/afp-2021-10-22/thys/Jinja/Compiler/Compiler1.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Jinja", "problem_names": ["lemma [simp]: \"compEs\\<^sub>1 Vs es = map (compE\\<^sub>1 Vs) es\"", "lemma comp_final: \"final e \\<Longrightarrow> compE\\<^sub>1 Vs e = fin\\<^sub>1 e\"", "lemma [simp]:\n      \"\\<And>Vs. max_vars (compE\\<^sub>1 Vs e) = max_vars e\"\nand \"\\<And>Vs. max_varss (compEs\\<^sub>1 Vs es) = max_varss es\""], "translations": [["", "lemma [simp]: \"compEs\\<^sub>1 Vs es = map (compE\\<^sub>1 Vs) es\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compEs\\<^sub>1 Vs es = map (compE\\<^sub>1 Vs) es", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. compEs\\<^sub>1 Vs es = map (compE\\<^sub>1 Vs) es", "by(induct es type:list) simp_all"], ["", "(*>*)"], ["", "primrec fin\\<^sub>1:: \"expr \\<Rightarrow> expr\\<^sub>1\" where\n  \"fin\\<^sub>1(Val v) = Val v\"\n| \"fin\\<^sub>1(throw e) = throw(fin\\<^sub>1 e)\""], ["", "lemma comp_final: \"final e \\<Longrightarrow> compE\\<^sub>1 Vs e = fin\\<^sub>1 e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. final e \\<Longrightarrow> compE\\<^sub>1 Vs e = fin\\<^sub>1 e", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. final e \\<Longrightarrow> compE\\<^sub>1 Vs e = fin\\<^sub>1 e", "by(erule finalE, simp_all)"], ["", "(*>*)"], ["", "lemma [simp]:\n      \"\\<And>Vs. max_vars (compE\\<^sub>1 Vs e) = max_vars e\"\nand \"\\<And>Vs. max_varss (compEs\\<^sub>1 Vs es) = max_varss es\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Vs. max_vars (compE\\<^sub>1 Vs e) = max_vars e) &&&\n    (\\<And>Vs. max_varss (compEs\\<^sub>1 Vs es) = max_varss es)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Vs. max_vars (compE\\<^sub>1 Vs e) = max_vars e) &&&\n    (\\<And>Vs. max_varss (compEs\\<^sub>1 Vs es) = max_varss es)", "by (induct e and es rule: max_vars.induct max_varss.induct) simp_all"], ["", "(*>*)"], ["", "text\\<open>Compiling programs:\\<close>"], ["", "definition compP\\<^sub>1 :: \"J_prog \\<Rightarrow> J\\<^sub>1_prog\"\nwhere\n  \"compP\\<^sub>1  \\<equiv>  compP (\\<lambda>(pns,body). compE\\<^sub>1 (this#pns) body)\""], ["", "(*<*)"], ["", "declare compP\\<^sub>1_def[simp]"], ["", "(*>*)"], ["", "end"]]}