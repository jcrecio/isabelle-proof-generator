{"file_name": "/home/qj213/afp-2021-10-22/thys/Jinja/DFA/Kildall.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Jinja", "problem_names": ["lemmas [simp] = Let_def Semilat.le_iff_plus_unchanged [OF Semilat.intro, symmetric]", "lemma (in Semilat) nth_merges:\n \"\\<And>ss. \\<lbrakk>p < length ss; ss \\<in> list n A; \\<forall>(p,t)\\<in>set ps. p<n \\<and> t\\<in>A \\<rbrakk> \\<Longrightarrow>\n  (merges f ps ss)!p = map snd [(p',t') \\<leftarrow> ps. p'=p] \\<Squnion>\\<^bsub>f\\<^esub> ss!p\"\n  (is \"\\<And>ss. \\<lbrakk>_; _; ?steptype ps\\<rbrakk> \\<Longrightarrow> ?P ss ps\")", "lemma length_merges [simp]:\n  \"\\<And>ss. size(merges f ps ss) = size ss\"", "lemma (in Semilat) merges_preserves_type_lemma:\nshows \"\\<forall>xs. xs \\<in> list n A \\<longrightarrow> (\\<forall>(p,x) \\<in> set ps. p<n \\<and> x\\<in>A)\n         \\<longrightarrow> merges f ps xs \\<in> list n A\"", "lemma (in Semilat) merges_preserves_type [simp]:\n \"\\<lbrakk> xs \\<in> list n A; \\<forall>(p,x) \\<in> set ps. p<n \\<and> x\\<in>A \\<rbrakk>\n  \\<Longrightarrow> merges f ps xs \\<in> list n A\"", "lemma (in Semilat) merges_incr_lemma:\n \"\\<forall>xs. xs \\<in> list n A \\<longrightarrow> (\\<forall>(p,x)\\<in>set ps. p<size xs \\<and> x \\<in> A) \\<longrightarrow> xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps xs\"", "lemma (in Semilat) merges_incr:\n \"\\<lbrakk> xs \\<in> list n A; \\<forall>(p,x)\\<in>set ps. p<size xs \\<and> x \\<in> A \\<rbrakk> \n  \\<Longrightarrow> xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps xs\"", "lemma (in Semilat) merges_same_conv [rule_format]:\n \"(\\<forall>xs. xs \\<in> list n A \\<longrightarrow> (\\<forall>(p,x)\\<in>set ps. p<size xs \\<and> x\\<in>A) \\<longrightarrow> \n     (merges f ps xs = xs) = (\\<forall>(p,x)\\<in>set ps. x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs!p))\"", "lemma (in Semilat) list_update_le_listI [rule_format]:\n  \"set xs \\<subseteq> A \\<longrightarrow> set ys \\<subseteq> A \\<longrightarrow> xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ys \\<longrightarrow> p < size xs \\<longrightarrow>  \n   x \\<sqsubseteq>\\<^bsub>r\\<^esub> ys!p \\<longrightarrow> x\\<in>A \\<longrightarrow> xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs!p] [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ys\"", "lemma (in Semilat) merges_pres_le_ub:\n  assumes \"set ts \\<subseteq> A\"  \"set ss \\<subseteq> A\"\n    \"\\<forall>(p,t)\\<in>set ps. t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts!p \\<and> t \\<in> A \\<and> p < size ts\"  \"ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts\"\n  shows \"merges f ps ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts\"", "lemma decomp_propa:\n  \"\\<And>ss w. (\\<forall>(q,t)\\<in>set qs. q < size ss) \\<Longrightarrow> \n   propa f qs ss w = \n   (merges f qs ss, {q. \\<exists>t.(q,t)\\<in>set qs \\<and> t \\<squnion>\\<^bsub>f\\<^esub> ss!q \\<noteq> ss!q} \\<union> w)\"", "lemma (in Semilat) stable_pres_lemma:\nshows \"\\<lbrakk>pres_type step n A; bounded step n; \n     ss \\<in> list n A; p \\<in> w; \\<forall>q\\<in>w. q < n; \n     \\<forall>q. q < n \\<longrightarrow> q \\<notin> w \\<longrightarrow> stable r step ss q; q < n; \n     \\<forall>s'. (q,s') \\<in> set (step p (ss!p)) \\<longrightarrow> s' \\<squnion>\\<^bsub>f\\<^esub> ss!q = ss!q; \n     q \\<notin> w \\<or> q = p \\<rbrakk> \n  \\<Longrightarrow> stable r step (merges f (step p (ss!p)) ss) q\"", "lemma (in Semilat) merges_bounded_lemma:\n \"\\<lbrakk> mono r step n A; bounded step n; \n    \\<forall>(p',s') \\<in> set (step p (ss!p)). s' \\<in> A; ss \\<in> list n A; ts \\<in> list n A; p < n; \n    ss [\\<sqsubseteq>\\<^sub>r] ts; \\<forall>p. p < n \\<longrightarrow> stable r step ts p \\<rbrakk> \n  \\<Longrightarrow> merges f (step p (ss!p)) ss [\\<sqsubseteq>\\<^sub>r] ts\"", "lemma termination_lemma: assumes \"Semilat A r f\"\nshows \"\\<lbrakk> ss \\<in> list n A; \\<forall>(q,t)\\<in>set qs. q<n \\<and> t\\<in>A; p\\<in>w \\<rbrakk> \\<Longrightarrow> \n      ss [\\<sqsubset>\\<^sub>r] merges f qs ss \\<or> \n  merges f qs ss = ss \\<and> {q. \\<exists>t. (q,t)\\<in>set qs \\<and> t \\<squnion>\\<^bsub>f\\<^esub> ss!q \\<noteq> ss!q} \\<union> (w-{p}) \\<subset> w\"\n(*<*) (is \"PROP ?P\")", "lemma iter_properties[rule_format]: assumes \"Semilat A r f\"\nshows \"\\<lbrakk> acc r; pres_type step n A; mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p \\<rbrakk> \\<Longrightarrow>\n   iter f step ss0 w0 = (ss',w')\n   \\<longrightarrow>\n   ss' \\<in> list n A \\<and> stables r step ss' \\<and> ss0 [\\<sqsubseteq>\\<^sub>r] ss' \\<and>\n   (\\<forall>ts\\<in>list n A. ss0 [\\<sqsubseteq>\\<^sub>r] ts \\<and> stables r step ts \\<longrightarrow> ss' [\\<sqsubseteq>\\<^sub>r] ts)\"\n(*<*) (is \"PROP ?P\")", "lemma kildall_properties: assumes \"Semilat A r f\"\nshows \"\\<lbrakk> acc r; pres_type step n A; mono r step n A;\n     bounded step n; ss0 \\<in> list n A \\<rbrakk> \\<Longrightarrow>\n  kildall r f step ss0 \\<in> list n A \\<and>\n  stables r step (kildall r f step ss0) \\<and>\n  ss0 [\\<sqsubseteq>\\<^sub>r] kildall r f step ss0 \\<and>\n  (\\<forall>ts\\<in>list n A. ss0 [\\<sqsubseteq>\\<^sub>r] ts \\<and> stables r step ts \\<longrightarrow>\n                 kildall r f step ss0 [\\<sqsubseteq>\\<^sub>r] ts)\"\n(*<*) (is \"PROP ?P\")", "lemma is_bcv_kildall: assumes \"Semilat A r f\"\nshows \"\\<lbrakk> acc r; top r T; pres_type step n A; bounded step n; mono r step n A \\<rbrakk>\n  \\<Longrightarrow> is_bcv r T step n A (kildall r f step)\" (is \"PROP ?P\")"], "translations": [["", "lemmas [simp] = Let_def Semilat.le_iff_plus_unchanged [OF Semilat.intro, symmetric]"], ["", "lemma (in Semilat) nth_merges:\n \"\\<And>ss. \\<lbrakk>p < length ss; ss \\<in> list n A; \\<forall>(p,t)\\<in>set ps. p<n \\<and> t\\<in>A \\<rbrakk> \\<Longrightarrow>\n  (merges f ps ss)!p = map snd [(p',t') \\<leftarrow> ps. p'=p] \\<Squnion>\\<^bsub>f\\<^esub> ss!p\"\n  (is \"\\<And>ss. \\<lbrakk>_; _; ?steptype ps\\<rbrakk> \\<Longrightarrow> ?P ss ps\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ss.\n       \\<lbrakk>p < length ss; ss \\<in> list n A;\n        \\<forall>(p, t)\\<in>set ps. p < n \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> merges f ps ss ! p =\n                         map snd (filter (\\<lambda>(p', t'). p' = p) ps) \n                         \\<Squnion>\\<^bsub>f\\<^esub> ss ! p", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ss.\n       \\<lbrakk>p < length ss; ss \\<in> list n A;\n        \\<forall>(p, t)\\<in>set ps. p < n \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> merges f ps ss ! p =\n                         map snd (filter (\\<lambda>(p', t'). p' = p) ps) \n                         \\<Squnion>\\<^bsub>f\\<^esub> ss ! p", "proof (induct ps)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ss.\n       \\<lbrakk>p < length ss; ss \\<in> list n A;\n        \\<forall>(p, t)\\<in>set []. p < n \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> merges f [] ss ! p =\n                         map snd (filter (\\<lambda>(p', t'). p' = p) []) \n                         \\<Squnion>\\<^bsub>f\\<^esub> ss ! p\n 2. \\<And>a ps ss.\n       \\<lbrakk>\\<And>ss.\n                   \\<lbrakk>p < length ss; ss \\<in> list n A;\n                    \\<forall>(p, t)\\<in>set ps.\n                       p < n \\<and> t \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> merges f ps ss ! p =\n                                     map snd\n(filter (\\<lambda>(p', t'). p' = p) ps) \n                                     \\<Squnion>\\<^bsub>f\\<^esub> ss ! p;\n        p < length ss; ss \\<in> list n A;\n        \\<forall>(p, t)\\<in>set (a # ps). p < n \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> merges f (a # ps) ss ! p =\n                         map snd\n                          (filter (\\<lambda>(p', t'). p' = p) (a # ps)) \n                         \\<Squnion>\\<^bsub>f\\<^esub> ss ! p", "show \"\\<And>ss. ?P ss []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ss.\n       merges f [] ss ! p =\n       map snd\n        (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = p) []) \n       \\<Squnion>\\<^bsub>f\\<^esub> ss ! p", "by simp"], ["proof (state)\nthis:\n  merges f [] ?ss ! p =\n  map snd (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = p) []) \n  \\<Squnion>\\<^bsub>f\\<^esub> ?ss ! p\n\ngoal (1 subgoal):\n 1. \\<And>a ps ss.\n       \\<lbrakk>\\<And>ss.\n                   \\<lbrakk>p < length ss; ss \\<in> list n A;\n                    \\<forall>(p, t)\\<in>set ps.\n                       p < n \\<and> t \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> merges f ps ss ! p =\n                                     map snd\n(filter (\\<lambda>(p', t'). p' = p) ps) \n                                     \\<Squnion>\\<^bsub>f\\<^esub> ss ! p;\n        p < length ss; ss \\<in> list n A;\n        \\<forall>(p, t)\\<in>set (a # ps). p < n \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> merges f (a # ps) ss ! p =\n                         map snd\n                          (filter (\\<lambda>(p', t'). p' = p) (a # ps)) \n                         \\<Squnion>\\<^bsub>f\\<^esub> ss ! p", "fix ss p' ps'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a ps ss.\n       \\<lbrakk>\\<And>ss.\n                   \\<lbrakk>p < length ss; ss \\<in> list n A;\n                    \\<forall>(p, t)\\<in>set ps.\n                       p < n \\<and> t \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> merges f ps ss ! p =\n                                     map snd\n(filter (\\<lambda>(p', t'). p' = p) ps) \n                                     \\<Squnion>\\<^bsub>f\\<^esub> ss ! p;\n        p < length ss; ss \\<in> list n A;\n        \\<forall>(p, t)\\<in>set (a # ps). p < n \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> merges f (a # ps) ss ! p =\n                         map snd\n                          (filter (\\<lambda>(p', t'). p' = p) (a # ps)) \n                         \\<Squnion>\\<^bsub>f\\<^esub> ss ! p", "assume ss: \"ss \\<in> list n A\""], ["proof (state)\nthis:\n  ss \\<in> list n A\n\ngoal (1 subgoal):\n 1. \\<And>a ps ss.\n       \\<lbrakk>\\<And>ss.\n                   \\<lbrakk>p < length ss; ss \\<in> list n A;\n                    \\<forall>(p, t)\\<in>set ps.\n                       p < n \\<and> t \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> merges f ps ss ! p =\n                                     map snd\n(filter (\\<lambda>(p', t'). p' = p) ps) \n                                     \\<Squnion>\\<^bsub>f\\<^esub> ss ! p;\n        p < length ss; ss \\<in> list n A;\n        \\<forall>(p, t)\\<in>set (a # ps). p < n \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> merges f (a # ps) ss ! p =\n                         map snd\n                          (filter (\\<lambda>(p', t'). p' = p) (a # ps)) \n                         \\<Squnion>\\<^bsub>f\\<^esub> ss ! p", "assume l:  \"p < length ss\""], ["proof (state)\nthis:\n  p < length ss\n\ngoal (1 subgoal):\n 1. \\<And>a ps ss.\n       \\<lbrakk>\\<And>ss.\n                   \\<lbrakk>p < length ss; ss \\<in> list n A;\n                    \\<forall>(p, t)\\<in>set ps.\n                       p < n \\<and> t \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> merges f ps ss ! p =\n                                     map snd\n(filter (\\<lambda>(p', t'). p' = p) ps) \n                                     \\<Squnion>\\<^bsub>f\\<^esub> ss ! p;\n        p < length ss; ss \\<in> list n A;\n        \\<forall>(p, t)\\<in>set (a # ps). p < n \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> merges f (a # ps) ss ! p =\n                         map snd\n                          (filter (\\<lambda>(p', t'). p' = p) (a # ps)) \n                         \\<Squnion>\\<^bsub>f\\<^esub> ss ! p", "assume \"?steptype (p'#ps')\""], ["proof (state)\nthis:\n  \\<forall>a\\<in>set (p' # ps').\n     case a of (p, t) \\<Rightarrow> p < n \\<and> t \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>a ps ss.\n       \\<lbrakk>\\<And>ss.\n                   \\<lbrakk>p < length ss; ss \\<in> list n A;\n                    \\<forall>(p, t)\\<in>set ps.\n                       p < n \\<and> t \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> merges f ps ss ! p =\n                                     map snd\n(filter (\\<lambda>(p', t'). p' = p) ps) \n                                     \\<Squnion>\\<^bsub>f\\<^esub> ss ! p;\n        p < length ss; ss \\<in> list n A;\n        \\<forall>(p, t)\\<in>set (a # ps). p < n \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> merges f (a # ps) ss ! p =\n                         map snd\n                          (filter (\\<lambda>(p', t'). p' = p) (a # ps)) \n                         \\<Squnion>\\<^bsub>f\\<^esub> ss ! p", "then"], ["proof (chain)\npicking this:\n  \\<forall>a\\<in>set (p' # ps').\n     case a of (p, t) \\<Rightarrow> p < n \\<and> t \\<in> A", "obtain a b where\n    p': \"p'=(a,b)\" and ab: \"a<n\" \"b\\<in>A\" and ps': \"?steptype ps'\""], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>set (p' # ps').\n     case a of (p, t) \\<Rightarrow> p < n \\<and> t \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>p' = (a, b); a < n; b \\<in> A;\n         \\<forall>a\\<in>set ps'.\n            case a of (p, t) \\<Rightarrow> p < n \\<and> t \\<in> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases p') auto"], ["proof (state)\nthis:\n  p' = (a, b)\n  a < n\n  b \\<in> A\n  \\<forall>a\\<in>set ps'.\n     case a of (p, t) \\<Rightarrow> p < n \\<and> t \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>a ps ss.\n       \\<lbrakk>\\<And>ss.\n                   \\<lbrakk>p < length ss; ss \\<in> list n A;\n                    \\<forall>(p, t)\\<in>set ps.\n                       p < n \\<and> t \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> merges f ps ss ! p =\n                                     map snd\n(filter (\\<lambda>(p', t'). p' = p) ps) \n                                     \\<Squnion>\\<^bsub>f\\<^esub> ss ! p;\n        p < length ss; ss \\<in> list n A;\n        \\<forall>(p, t)\\<in>set (a # ps). p < n \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> merges f (a # ps) ss ! p =\n                         map snd\n                          (filter (\\<lambda>(p', t'). p' = p) (a # ps)) \n                         \\<Squnion>\\<^bsub>f\\<^esub> ss ! p", "assume \"\\<And>ss. p< length ss \\<Longrightarrow> ss \\<in> list n A \\<Longrightarrow> ?steptype ps' \\<Longrightarrow> ?P ss ps'\""], ["proof (state)\nthis:\n  \\<lbrakk>p < length ?ss; ?ss \\<in> list n A;\n   \\<forall>a\\<in>set ps'.\n      case a of (p, t) \\<Rightarrow> p < n \\<and> t \\<in> A\\<rbrakk>\n  \\<Longrightarrow> merges f ps' ?ss ! p =\n                    map snd\n                     (filter\n                       (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = p)\n                       ps') \n                    \\<Squnion>\\<^bsub>f\\<^esub> ?ss ! p\n\ngoal (1 subgoal):\n 1. \\<And>a ps ss.\n       \\<lbrakk>\\<And>ss.\n                   \\<lbrakk>p < length ss; ss \\<in> list n A;\n                    \\<forall>(p, t)\\<in>set ps.\n                       p < n \\<and> t \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> merges f ps ss ! p =\n                                     map snd\n(filter (\\<lambda>(p', t'). p' = p) ps) \n                                     \\<Squnion>\\<^bsub>f\\<^esub> ss ! p;\n        p < length ss; ss \\<in> list n A;\n        \\<forall>(p, t)\\<in>set (a # ps). p < n \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> merges f (a # ps) ss ! p =\n                         map snd\n                          (filter (\\<lambda>(p', t'). p' = p) (a # ps)) \n                         \\<Squnion>\\<^bsub>f\\<^esub> ss ! p", "hence IH: \"\\<And>ss. ss \\<in> list n A \\<Longrightarrow> p < length ss \\<Longrightarrow> ?P ss ps'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>p < length ?ss; ?ss \\<in> list n A;\n   \\<forall>a\\<in>set ps'.\n      case a of (p, t) \\<Rightarrow> p < n \\<and> t \\<in> A\\<rbrakk>\n  \\<Longrightarrow> merges f ps' ?ss ! p =\n                    map snd\n                     (filter\n                       (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = p)\n                       ps') \n                    \\<Squnion>\\<^bsub>f\\<^esub> ?ss ! p\n\ngoal (1 subgoal):\n 1. \\<And>ss.\n       \\<lbrakk>ss \\<in> list n A; p < length ss\\<rbrakk>\n       \\<Longrightarrow> merges f ps' ss ! p =\n                         map snd\n                          (filter\n                            (\\<lambda>a.\n                                case a of (p', t') \\<Rightarrow> p' = p)\n                            ps') \n                         \\<Squnion>\\<^bsub>f\\<^esub> ss ! p", "using ps'"], ["proof (prove)\nusing this:\n  \\<lbrakk>p < length ?ss; ?ss \\<in> list n A;\n   \\<forall>a\\<in>set ps'.\n      case a of (p, t) \\<Rightarrow> p < n \\<and> t \\<in> A\\<rbrakk>\n  \\<Longrightarrow> merges f ps' ?ss ! p =\n                    map snd\n                     (filter\n                       (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = p)\n                       ps') \n                    \\<Squnion>\\<^bsub>f\\<^esub> ?ss ! p\n  \\<forall>a\\<in>set ps'.\n     case a of (p, t) \\<Rightarrow> p < n \\<and> t \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>ss.\n       \\<lbrakk>ss \\<in> list n A; p < length ss\\<rbrakk>\n       \\<Longrightarrow> merges f ps' ss ! p =\n                         map snd\n                          (filter\n                            (\\<lambda>a.\n                                case a of (p', t') \\<Rightarrow> p' = p)\n                            ps') \n                         \\<Squnion>\\<^bsub>f\\<^esub> ss ! p", "by iprover"], ["proof (state)\nthis:\n  \\<lbrakk>?ss \\<in> list n A; p < length ?ss\\<rbrakk>\n  \\<Longrightarrow> merges f ps' ?ss ! p =\n                    map snd\n                     (filter\n                       (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = p)\n                       ps') \n                    \\<Squnion>\\<^bsub>f\\<^esub> ?ss ! p\n\ngoal (1 subgoal):\n 1. \\<And>a ps ss.\n       \\<lbrakk>\\<And>ss.\n                   \\<lbrakk>p < length ss; ss \\<in> list n A;\n                    \\<forall>(p, t)\\<in>set ps.\n                       p < n \\<and> t \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> merges f ps ss ! p =\n                                     map snd\n(filter (\\<lambda>(p', t'). p' = p) ps) \n                                     \\<Squnion>\\<^bsub>f\\<^esub> ss ! p;\n        p < length ss; ss \\<in> list n A;\n        \\<forall>(p, t)\\<in>set (a # ps). p < n \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> merges f (a # ps) ss ! p =\n                         map snd\n                          (filter (\\<lambda>(p', t'). p' = p) (a # ps)) \n                         \\<Squnion>\\<^bsub>f\\<^esub> ss ! p", "from ss ab"], ["proof (chain)\npicking this:\n  ss \\<in> list n A\n  a < n\n  b \\<in> A", "have \"ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss!a] \\<in> list n A\""], ["proof (prove)\nusing this:\n  ss \\<in> list n A\n  a < n\n  b \\<in> A\n\ngoal (1 subgoal):\n 1. ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a] \\<in> list n A", "by (simp add: closedD)"], ["proof (state)\nthis:\n  ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a] \\<in> list n A\n\ngoal (1 subgoal):\n 1. \\<And>a ps ss.\n       \\<lbrakk>\\<And>ss.\n                   \\<lbrakk>p < length ss; ss \\<in> list n A;\n                    \\<forall>(p, t)\\<in>set ps.\n                       p < n \\<and> t \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> merges f ps ss ! p =\n                                     map snd\n(filter (\\<lambda>(p', t'). p' = p) ps) \n                                     \\<Squnion>\\<^bsub>f\\<^esub> ss ! p;\n        p < length ss; ss \\<in> list n A;\n        \\<forall>(p, t)\\<in>set (a # ps). p < n \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> merges f (a # ps) ss ! p =\n                         map snd\n                          (filter (\\<lambda>(p', t'). p' = p) (a # ps)) \n                         \\<Squnion>\\<^bsub>f\\<^esub> ss ! p", "moreover"], ["proof (state)\nthis:\n  ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a] \\<in> list n A\n\ngoal (1 subgoal):\n 1. \\<And>a ps ss.\n       \\<lbrakk>\\<And>ss.\n                   \\<lbrakk>p < length ss; ss \\<in> list n A;\n                    \\<forall>(p, t)\\<in>set ps.\n                       p < n \\<and> t \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> merges f ps ss ! p =\n                                     map snd\n(filter (\\<lambda>(p', t'). p' = p) ps) \n                                     \\<Squnion>\\<^bsub>f\\<^esub> ss ! p;\n        p < length ss; ss \\<in> list n A;\n        \\<forall>(p, t)\\<in>set (a # ps). p < n \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> merges f (a # ps) ss ! p =\n                         map snd\n                          (filter (\\<lambda>(p', t'). p' = p) (a # ps)) \n                         \\<Squnion>\\<^bsub>f\\<^esub> ss ! p", "with l"], ["proof (chain)\npicking this:\n  p < length ss\n  ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a] \\<in> list n A", "have \"p < length (ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss!a])\""], ["proof (prove)\nusing this:\n  p < length ss\n  ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a] \\<in> list n A\n\ngoal (1 subgoal):\n 1. p < length (ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a])", "by simp"], ["proof (state)\nthis:\n  p < length (ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a])\n\ngoal (1 subgoal):\n 1. \\<And>a ps ss.\n       \\<lbrakk>\\<And>ss.\n                   \\<lbrakk>p < length ss; ss \\<in> list n A;\n                    \\<forall>(p, t)\\<in>set ps.\n                       p < n \\<and> t \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> merges f ps ss ! p =\n                                     map snd\n(filter (\\<lambda>(p', t'). p' = p) ps) \n                                     \\<Squnion>\\<^bsub>f\\<^esub> ss ! p;\n        p < length ss; ss \\<in> list n A;\n        \\<forall>(p, t)\\<in>set (a # ps). p < n \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> merges f (a # ps) ss ! p =\n                         map snd\n                          (filter (\\<lambda>(p', t'). p' = p) (a # ps)) \n                         \\<Squnion>\\<^bsub>f\\<^esub> ss ! p", "ultimately"], ["proof (chain)\npicking this:\n  ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a] \\<in> list n A\n  p < length (ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a])", "have \"?P (ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss!a]) ps'\""], ["proof (prove)\nusing this:\n  ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a] \\<in> list n A\n  p < length (ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a])\n\ngoal (1 subgoal):\n 1. merges f ps' (ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a]) ! p =\n    map snd\n     (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = p) ps') \n    \\<Squnion>\\<^bsub>f\\<^esub> ss[a := b \n  \\<squnion>\\<^bsub>f\\<^esub> ss ! a] !\n                                p", "by (rule IH)"], ["proof (state)\nthis:\n  merges f ps' (ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a]) ! p =\n  map snd\n   (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = p) ps') \n  \\<Squnion>\\<^bsub>f\\<^esub> ss[a := b \n\\<squnion>\\<^bsub>f\\<^esub> ss ! a] !\n                              p\n\ngoal (1 subgoal):\n 1. \\<And>a ps ss.\n       \\<lbrakk>\\<And>ss.\n                   \\<lbrakk>p < length ss; ss \\<in> list n A;\n                    \\<forall>(p, t)\\<in>set ps.\n                       p < n \\<and> t \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> merges f ps ss ! p =\n                                     map snd\n(filter (\\<lambda>(p', t'). p' = p) ps) \n                                     \\<Squnion>\\<^bsub>f\\<^esub> ss ! p;\n        p < length ss; ss \\<in> list n A;\n        \\<forall>(p, t)\\<in>set (a # ps). p < n \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> merges f (a # ps) ss ! p =\n                         map snd\n                          (filter (\\<lambda>(p', t'). p' = p) (a # ps)) \n                         \\<Squnion>\\<^bsub>f\\<^esub> ss ! p", "with p' l"], ["proof (chain)\npicking this:\n  p' = (a, b)\n  p < length ss\n  merges f ps' (ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a]) ! p =\n  map snd\n   (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = p) ps') \n  \\<Squnion>\\<^bsub>f\\<^esub> ss[a := b \n\\<squnion>\\<^bsub>f\\<^esub> ss ! a] !\n                              p", "show \"?P ss (p'#ps')\""], ["proof (prove)\nusing this:\n  p' = (a, b)\n  p < length ss\n  merges f ps' (ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a]) ! p =\n  map snd\n   (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = p) ps') \n  \\<Squnion>\\<^bsub>f\\<^esub> ss[a := b \n\\<squnion>\\<^bsub>f\\<^esub> ss ! a] !\n                              p\n\ngoal (1 subgoal):\n 1. merges f (p' # ps') ss ! p =\n    map snd\n     (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = p)\n       (p' # ps')) \n    \\<Squnion>\\<^bsub>f\\<^esub> ss ! p", "by simp"], ["proof (state)\nthis:\n  merges f (p' # ps') ss ! p =\n  map snd\n   (filter (\\<lambda>a. case a of (p', t') \\<Rightarrow> p' = p)\n     (p' # ps')) \n  \\<Squnion>\\<^bsub>f\\<^esub> ss ! p\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)\n\n\n(** merges **)"], ["", "lemma length_merges [simp]:\n  \"\\<And>ss. size(merges f ps ss) = size ss\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ss. length (merges f ps ss) = length ss", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ss. length (merges f ps ss) = length ss", "by (induct ps, auto)"], ["", "(*>*)"], ["", "lemma (in Semilat) merges_preserves_type_lemma:\nshows \"\\<forall>xs. xs \\<in> list n A \\<longrightarrow> (\\<forall>(p,x) \\<in> set ps. p<n \\<and> x\\<in>A)\n         \\<longrightarrow> merges f ps xs \\<in> list n A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xs.\n       xs \\<in> list n A \\<longrightarrow>\n       (\\<forall>(p, x)\\<in>set ps.\n           p < n \\<and> x \\<in> A) \\<longrightarrow>\n       merges f ps xs \\<in> list n A", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xs.\n       xs \\<in> list n A \\<longrightarrow>\n       (\\<forall>(p, x)\\<in>set ps.\n           p < n \\<and> x \\<in> A) \\<longrightarrow>\n       merges f ps xs \\<in> list n A", "apply (insert closedI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. closed A f \\<Longrightarrow>\n    \\<forall>xs.\n       xs \\<in> list n A \\<longrightarrow>\n       (\\<forall>(p, x)\\<in>set ps.\n           p < n \\<and> x \\<in> A) \\<longrightarrow>\n       merges f ps xs \\<in> list n A", "apply (unfold closed_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A.\n       \\<forall>y\\<in>A.\n          x \\<squnion>\\<^bsub>f\\<^esub> y \\<in> A \\<Longrightarrow>\n    \\<forall>xs.\n       xs \\<in> list n A \\<longrightarrow>\n       (\\<forall>(p, x)\\<in>set ps.\n           p < n \\<and> x \\<in> A) \\<longrightarrow>\n       merges f ps xs \\<in> list n A", "apply (induct ps)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>x\\<in>A.\n       \\<forall>y\\<in>A.\n          x \\<squnion>\\<^bsub>f\\<^esub> y \\<in> A \\<Longrightarrow>\n    \\<forall>xs.\n       xs \\<in> list n A \\<longrightarrow>\n       (\\<forall>(p, x)\\<in>set [].\n           p < n \\<and> x \\<in> A) \\<longrightarrow>\n       merges f [] xs \\<in> list n A\n 2. \\<And>a ps.\n       \\<lbrakk>\\<forall>x\\<in>A.\n                   \\<forall>y\\<in>A.\n                      x \\<squnion>\\<^bsub>f\\<^esub> y\n                      \\<in> A \\<Longrightarrow>\n                \\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (\\<forall>(p, x)\\<in>set ps.\n                       p < n \\<and> x \\<in> A) \\<longrightarrow>\n                   merges f ps xs \\<in> list n A;\n        \\<forall>x\\<in>A.\n           \\<forall>y\\<in>A.\n              x \\<squnion>\\<^bsub>f\\<^esub> y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>xs.\n                            xs \\<in> list n A \\<longrightarrow>\n                            (\\<forall>(p, x)\\<in>set (a # ps).\n                                p < n \\<and> x \\<in> A) \\<longrightarrow>\n                            merges f (a # ps) xs \\<in> list n A", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a ps.\n       \\<lbrakk>\\<forall>x\\<in>A.\n                   \\<forall>y\\<in>A.\n                      x \\<squnion>\\<^bsub>f\\<^esub> y\n                      \\<in> A \\<Longrightarrow>\n                \\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (\\<forall>(p, x)\\<in>set ps.\n                       p < n \\<and> x \\<in> A) \\<longrightarrow>\n                   merges f ps xs \\<in> list n A;\n        \\<forall>x\\<in>A.\n           \\<forall>y\\<in>A.\n              x \\<squnion>\\<^bsub>f\\<^esub> y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>xs.\n                            xs \\<in> list n A \\<longrightarrow>\n                            (\\<forall>(p, x)\\<in>set (a # ps).\n                                p < n \\<and> x \\<in> A) \\<longrightarrow>\n                            merges f (a # ps) xs \\<in> list n A", "apply clarsimp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma (in Semilat) merges_preserves_type [simp]:\n \"\\<lbrakk> xs \\<in> list n A; \\<forall>(p,x) \\<in> set ps. p<n \\<and> x\\<in>A \\<rbrakk>\n  \\<Longrightarrow> merges f ps xs \\<in> list n A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<in> list n A;\n     \\<forall>(p, x)\\<in>set ps. p < n \\<and> x \\<in> A\\<rbrakk>\n    \\<Longrightarrow> merges f ps xs \\<in> list n A", "by (simp add: merges_preserves_type_lemma)"], ["", "lemma (in Semilat) merges_incr_lemma:\n \"\\<forall>xs. xs \\<in> list n A \\<longrightarrow> (\\<forall>(p,x)\\<in>set ps. p<size xs \\<and> x \\<in> A) \\<longrightarrow> xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xs.\n       xs \\<in> list n A \\<longrightarrow>\n       (\\<forall>(p, x)\\<in>set ps.\n           p < length xs \\<and> x \\<in> A) \\<longrightarrow>\n       xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps xs", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xs.\n       xs \\<in> list n A \\<longrightarrow>\n       (\\<forall>(p, x)\\<in>set ps.\n           p < length xs \\<and> x \\<in> A) \\<longrightarrow>\n       xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps xs", "apply (induct ps)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>xs.\n       xs \\<in> list n A \\<longrightarrow>\n       (\\<forall>a\\<in>set [].\n           case a of\n           (p, x) \\<Rightarrow>\n             p < length xs \\<and> x \\<in> A) \\<longrightarrow>\n       xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f [] xs\n 2. \\<And>a ps.\n       \\<forall>xs.\n          xs \\<in> list n A \\<longrightarrow>\n          (\\<forall>a\\<in>set ps.\n              case a of\n              (p, x) \\<Rightarrow>\n                p < length xs \\<and> x \\<in> A) \\<longrightarrow>\n          xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps\n         xs \\<Longrightarrow>\n       \\<forall>xs.\n          xs \\<in> list n A \\<longrightarrow>\n          (\\<forall>a\\<in>set (a # ps).\n              case a of\n              (p, x) \\<Rightarrow>\n                p < length xs \\<and> x \\<in> A) \\<longrightarrow>\n          xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f (a # ps) xs", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a ps.\n       \\<forall>xs.\n          xs \\<in> list n A \\<longrightarrow>\n          (\\<forall>a\\<in>set ps.\n              case a of\n              (p, x) \\<Rightarrow>\n                p < length xs \\<and> x \\<in> A) \\<longrightarrow>\n          xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps\n         xs \\<Longrightarrow>\n       \\<forall>xs.\n          xs \\<in> list n A \\<longrightarrow>\n          (\\<forall>a\\<in>set (a # ps).\n              case a of\n              (p, x) \\<Rightarrow>\n                p < length xs \\<and> x \\<in> A) \\<longrightarrow>\n          xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f (a # ps) xs", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a ps.\n       \\<forall>xs.\n          xs \\<in> list n A \\<longrightarrow>\n          (\\<forall>x\\<in>set ps.\n              case x of\n              (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A) \\<longrightarrow>\n          xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps\n         xs \\<Longrightarrow>\n       \\<forall>xs.\n          xs \\<in> list n A \\<longrightarrow>\n          (case a of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A) \\<and>\n          (\\<forall>x\\<in>set ps.\n              case x of\n              (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A) \\<longrightarrow>\n          xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] (case a of\n         (p, \\<tau>) \\<Rightarrow>\n           merges f ps (xs[p := \\<tau> \\<squnion>\\<^bsub>f\\<^esub> xs ! p]))", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (\\<forall>(p, x)\\<in>set ps.\n                       p < n \\<and> x \\<in> A) \\<longrightarrow>\n                   xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps xs;\n        xs \\<in> list n A;\n        \\<forall>(p, x)\\<in>set ps. p < n \\<and> x \\<in> A; a < n;\n        b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps\n                        (xs[a := b \\<squnion>\\<^bsub>f\\<^esub> xs ! a])", "apply (rule order_trans)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (\\<forall>(p, x)\\<in>set ps.\n                       p < n \\<and> x \\<in> A) \\<longrightarrow>\n                   xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps xs;\n        xs \\<in> list n A;\n        \\<forall>(p, x)\\<in>set ps. p < n \\<and> x \\<in> A; a < n;\n        b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> order (Listn.le r)\n 2. \\<And>a b ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (\\<forall>(p, x)\\<in>set ps.\n                       p < n \\<and> x \\<in> A) \\<longrightarrow>\n                   xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps xs;\n        xs \\<in> list n A;\n        \\<forall>(p, x)\\<in>set ps. p < n \\<and> x \\<in> A; a < n;\n        b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ?y17 a b ps xs\n 3. \\<And>a b ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (\\<forall>(p, x)\\<in>set ps.\n                       p < n \\<and> x \\<in> A) \\<longrightarrow>\n                   xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps xs;\n        xs \\<in> list n A;\n        \\<forall>(p, x)\\<in>set ps. p < n \\<and> x \\<in> A; a < n;\n        b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ?y17 a b ps xs \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps\n                     (xs[a := b \\<squnion>\\<^bsub>f\\<^esub> xs ! a])", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (\\<forall>(p, x)\\<in>set ps.\n                       p < n \\<and> x \\<in> A) \\<longrightarrow>\n                   xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps xs;\n        xs \\<in> list n A;\n        \\<forall>(p, x)\\<in>set ps. p < n \\<and> x \\<in> A; a < n;\n        b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ?y17 a b ps xs\n 2. \\<And>a b ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (\\<forall>(p, x)\\<in>set ps.\n                       p < n \\<and> x \\<in> A) \\<longrightarrow>\n                   xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps xs;\n        xs \\<in> list n A;\n        \\<forall>(p, x)\\<in>set ps. p < n \\<and> x \\<in> A; a < n;\n        b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ?y17 a b ps xs \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps\n                     (xs[a := b \\<squnion>\\<^bsub>f\\<^esub> xs ! a])", "apply (erule list_update_incr)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (\\<forall>(p, x)\\<in>set ps.\n                       p < n \\<and> x \\<in> A) \\<longrightarrow>\n                   xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps xs;\n        xs \\<in> list n A;\n        \\<forall>(p, x)\\<in>set ps. p < n \\<and> x \\<in> A; a < n\\<rbrakk>\n       \\<Longrightarrow> set xs \\<subseteq> A\n 2. \\<And>a b ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (\\<forall>(p, x)\\<in>set ps.\n                       p < n \\<and> x \\<in> A) \\<longrightarrow>\n                   xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps xs;\n        xs \\<in> list n A;\n        \\<forall>(p, x)\\<in>set ps. p < n \\<and> x \\<in> A; a < n\\<rbrakk>\n       \\<Longrightarrow> ?i21 a b ps xs < length xs\n 3. \\<And>a b ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (\\<forall>(p, x)\\<in>set ps.\n                       p < n \\<and> x \\<in> A) \\<longrightarrow>\n                   xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps xs;\n        xs \\<in> list n A;\n        \\<forall>(p, x)\\<in>set ps. p < n \\<and> x \\<in> A; a < n;\n        b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> xs[?i21 a b ps xs :=\n                              b \\<squnion>\\<^bsub>f\\<^esub> xs !\n                      ?i21 a b ps xs] \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps\n                     (xs[a := b \\<squnion>\\<^bsub>f\\<^esub> xs ! a])", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (\\<forall>(p, x)\\<in>set ps.\n                       p < n \\<and> x \\<in> A) \\<longrightarrow>\n                   xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps xs;\n        xs \\<in> list n A;\n        \\<forall>(p, x)\\<in>set ps. p < n \\<and> x \\<in> A; a < n\\<rbrakk>\n       \\<Longrightarrow> ?i21 a b ps xs < length xs\n 2. \\<And>a b ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (\\<forall>(p, x)\\<in>set ps.\n                       p < n \\<and> x \\<in> A) \\<longrightarrow>\n                   xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps xs;\n        xs \\<in> list n A;\n        \\<forall>(p, x)\\<in>set ps. p < n \\<and> x \\<in> A; a < n;\n        b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> xs[?i21 a b ps xs :=\n                              b \\<squnion>\\<^bsub>f\\<^esub> xs !\n                      ?i21 a b ps xs] \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps\n                     (xs[a := b \\<squnion>\\<^bsub>f\\<^esub> xs ! a])", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (\\<forall>(p, x)\\<in>set ps.\n                       p < n \\<and> x \\<in> A) \\<longrightarrow>\n                   xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps xs;\n        xs \\<in> list n A;\n        \\<forall>(p, x)\\<in>set ps. p < n \\<and> x \\<in> A; a < n;\n        b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> xs[a := b \\<squnion>\\<^bsub>f\\<^esub> xs ! a] \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps\n                     (xs[a := b \\<squnion>\\<^bsub>f\\<^esub> xs ! a])", "apply (blast intro!: listE_set intro: closedD listE_length [THEN nth_in])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma (in Semilat) merges_incr:\n \"\\<lbrakk> xs \\<in> list n A; \\<forall>(p,x)\\<in>set ps. p<size xs \\<and> x \\<in> A \\<rbrakk> \n  \\<Longrightarrow> xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs \\<in> list n A;\n     \\<forall>(p, x)\\<in>set ps. p < length xs \\<and> x \\<in> A\\<rbrakk>\n    \\<Longrightarrow> xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f ps xs", "by (simp add: merges_incr_lemma)"], ["", "lemma (in Semilat) merges_same_conv [rule_format]:\n \"(\\<forall>xs. xs \\<in> list n A \\<longrightarrow> (\\<forall>(p,x)\\<in>set ps. p<size xs \\<and> x\\<in>A) \\<longrightarrow> \n     (merges f ps xs = xs) = (\\<forall>(p,x)\\<in>set ps. x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs!p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xs.\n       xs \\<in> list n A \\<longrightarrow>\n       (\\<forall>(p, x)\\<in>set ps.\n           p < length xs \\<and> x \\<in> A) \\<longrightarrow>\n       (merges f ps xs = xs) =\n       (\\<forall>(p, x)\\<in>set ps. x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xs.\n       xs \\<in> list n A \\<longrightarrow>\n       (\\<forall>(p, x)\\<in>set ps.\n           p < length xs \\<and> x \\<in> A) \\<longrightarrow>\n       (merges f ps xs = xs) =\n       (\\<forall>(p, x)\\<in>set ps. x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)", "apply (induct_tac ps)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>xs.\n       xs \\<in> list n A \\<longrightarrow>\n       (\\<forall>a\\<in>set [].\n           case a of\n           (p, x) \\<Rightarrow>\n             p < length xs \\<and> x \\<in> A) \\<longrightarrow>\n       (merges f [] xs = xs) =\n       (\\<forall>a\\<in>set [].\n           case a of\n           (p, x) \\<Rightarrow> x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)\n 2. \\<And>a lista.\n       \\<forall>xs.\n          xs \\<in> list n A \\<longrightarrow>\n          (\\<forall>a\\<in>set lista.\n              case a of\n              (p, x) \\<Rightarrow>\n                p < length xs \\<and> x \\<in> A) \\<longrightarrow>\n          (merges f lista xs = xs) =\n          (\\<forall>a\\<in>set lista.\n              case a of\n              (p, x) \\<Rightarrow>\n                x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p) \\<Longrightarrow>\n       \\<forall>xs.\n          xs \\<in> list n A \\<longrightarrow>\n          (\\<forall>a\\<in>set (a # lista).\n              case a of\n              (p, x) \\<Rightarrow>\n                p < length xs \\<and> x \\<in> A) \\<longrightarrow>\n          (merges f (a # lista) xs = xs) =\n          (\\<forall>a\\<in>set (a # lista).\n              case a of\n              (p, x) \\<Rightarrow> x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a lista.\n       \\<forall>xs.\n          xs \\<in> list n A \\<longrightarrow>\n          (\\<forall>a\\<in>set lista.\n              case a of\n              (p, x) \\<Rightarrow>\n                p < length xs \\<and> x \\<in> A) \\<longrightarrow>\n          (merges f lista xs = xs) =\n          (\\<forall>a\\<in>set lista.\n              case a of\n              (p, x) \\<Rightarrow>\n                x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p) \\<Longrightarrow>\n       \\<forall>xs.\n          xs \\<in> list n A \\<longrightarrow>\n          (\\<forall>a\\<in>set (a # lista).\n              case a of\n              (p, x) \\<Rightarrow>\n                p < length xs \\<and> x \\<in> A) \\<longrightarrow>\n          (merges f (a # lista) xs = xs) =\n          (\\<forall>a\\<in>set (a # lista).\n              case a of\n              (p, x) \\<Rightarrow> x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b lista xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f lista xs = xs) =\n                   (\\<forall>x\\<in>set lista.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set lista.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        a < n; b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (merges f lista\n                           (xs[a := b \\<squnion>\\<^bsub>f\\<^esub> xs ! a]) =\n                          xs) =\n                         (b \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! a \\<and>\n                          (\\<forall>x\\<in>set lista.\n                              case x of\n                              (p, x) \\<Rightarrow>\n                                x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p))", "apply (rename_tac p x ps xs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (merges f ps\n                           (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n                          xs) =\n                         (x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p \\<and>\n                          (\\<forall>x\\<in>set ps.\n                              case x of\n                              (p, x) \\<Rightarrow>\n                                x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p))", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        merges f ps (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n        xs\\<rbrakk>\n       \\<Longrightarrow> x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p \\<and>\n                         (\\<forall>x\\<in>set ps.\n                             case x of\n                             (p, x) \\<Rightarrow>\n                               x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)\n 2. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p \\<and>\n        (\\<forall>x\\<in>set ps.\n            case x of\n            (p, x) \\<Rightarrow>\n              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)\\<rbrakk>\n       \\<Longrightarrow> merges f ps\n                          (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n                         xs", "apply (rule context_conjI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        merges f ps (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n        xs\\<rbrakk>\n       \\<Longrightarrow> x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p\n 2. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        merges f ps (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) = xs;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>set ps.\n                            case x of\n                            (p, x) \\<Rightarrow>\n                              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p\n 3. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p \\<and>\n        (\\<forall>x\\<in>set ps.\n            case x of\n            (p, x) \\<Rightarrow>\n              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)\\<rbrakk>\n       \\<Longrightarrow> merges f ps\n                          (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n                         xs", "apply (subgoal_tac \"xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs!p] [\\<sqsubseteq>\\<^bsub>r\\<^esub>] xs\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        merges f ps (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) = xs;\n        xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p] \n        [\\<sqsubseteq>\\<^bsub>r\\<^esub>] xs\\<rbrakk>\n       \\<Longrightarrow> x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p\n 2. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        merges f ps (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n        xs\\<rbrakk>\n       \\<Longrightarrow> xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p] \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] xs\n 3. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        merges f ps (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) = xs;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>set ps.\n                            case x of\n                            (p, x) \\<Rightarrow>\n                              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p\n 4. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p \\<and>\n        (\\<forall>x\\<in>set ps.\n            case x of\n            (p, x) \\<Rightarrow>\n              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)\\<rbrakk>\n       \\<Longrightarrow> merges f ps\n                          (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n                         xs", "apply (force dest!: le_listD simp add: nth_list_update)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        merges f ps (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n        xs\\<rbrakk>\n       \\<Longrightarrow> xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p] \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] xs\n 2. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        merges f ps (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) = xs;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>set ps.\n                            case x of\n                            (p, x) \\<Rightarrow>\n                              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p\n 3. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p \\<and>\n        (\\<forall>x\\<in>set ps.\n            case x of\n            (p, x) \\<Rightarrow>\n              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)\\<rbrakk>\n       \\<Longrightarrow> merges f ps\n                          (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n                         xs", "apply (erule subst, rule merges_incr)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]\n                         \\<in> list (?n31 p x ps xs) A\n 2. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(pa, xa)\\<in>set ps.\n                            pa < length\n                                  (xs[p :=\n  x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) \\<and>\n                            xa \\<in> A\n 3. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        merges f ps (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) = xs;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>set ps.\n                            case x of\n                            (p, x) \\<Rightarrow>\n                              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p\n 4. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p \\<and>\n        (\\<forall>x\\<in>set ps.\n            case x of\n            (p, x) \\<Rightarrow>\n              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)\\<rbrakk>\n       \\<Longrightarrow> merges f ps\n                          (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n                         xs", "apply (blast intro!: listE_set intro: closedD listE_length [THEN nth_in])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(pa, xa)\\<in>set ps.\n                            pa < length\n                                  (xs[p :=\n  x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) \\<and>\n                            xa \\<in> A\n 2. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        merges f ps (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) = xs;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>set ps.\n                            case x of\n                            (p, x) \\<Rightarrow>\n                              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p\n 3. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p \\<and>\n        (\\<forall>x\\<in>set ps.\n            case x of\n            (p, x) \\<Rightarrow>\n              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)\\<rbrakk>\n       \\<Longrightarrow> merges f ps\n                          (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n                         xs", "apply clarify"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>p x ps xs a b.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>(p, x)\\<in>set ps.\n                       x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>(p, x)\\<in>set ps. p < n \\<and> x \\<in> A; p < n;\n        x \\<in> A; (a, b) \\<in> set ps\\<rbrakk>\n       \\<Longrightarrow> a < length\n                              (xs[p := x \n \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) \\<and>\n                         b \\<in> A\n 2. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        merges f ps (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) = xs;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>set ps.\n                            case x of\n                            (p, x) \\<Rightarrow>\n                              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p\n 3. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p \\<and>\n        (\\<forall>x\\<in>set ps.\n            case x of\n            (p, x) \\<Rightarrow>\n              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)\\<rbrakk>\n       \\<Longrightarrow> merges f ps\n                          (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n                         xs", "apply (rule conjI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>p x ps xs a b.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>(p, x)\\<in>set ps.\n                       x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>(p, x)\\<in>set ps. p < n \\<and> x \\<in> A; p < n;\n        x \\<in> A; (a, b) \\<in> set ps\\<rbrakk>\n       \\<Longrightarrow> a < length\n                              (xs[p := x \n \\<squnion>\\<^bsub>f\\<^esub> xs ! p])\n 2. \\<And>p x ps xs a b.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>(p, x)\\<in>set ps.\n                       x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>(p, x)\\<in>set ps. p < n \\<and> x \\<in> A; p < n;\n        x \\<in> A; (a, b) \\<in> set ps\\<rbrakk>\n       \\<Longrightarrow> b \\<in> A\n 3. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        merges f ps (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) = xs;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>set ps.\n                            case x of\n                            (p, x) \\<Rightarrow>\n                              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p\n 4. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p \\<and>\n        (\\<forall>x\\<in>set ps.\n            case x of\n            (p, x) \\<Rightarrow>\n              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)\\<rbrakk>\n       \\<Longrightarrow> merges f ps\n                          (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n                         xs", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>p x ps xs a b.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A; (a, b) \\<in> set ps\\<rbrakk>\n       \\<Longrightarrow> a < n\n 2. \\<And>p x ps xs a b.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>(p, x)\\<in>set ps.\n                       x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>(p, x)\\<in>set ps. p < n \\<and> x \\<in> A; p < n;\n        x \\<in> A; (a, b) \\<in> set ps\\<rbrakk>\n       \\<Longrightarrow> b \\<in> A\n 3. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        merges f ps (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) = xs;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>set ps.\n                            case x of\n                            (p, x) \\<Rightarrow>\n                              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p\n 4. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p \\<and>\n        (\\<forall>x\\<in>set ps.\n            case x of\n            (p, x) \\<Rightarrow>\n              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)\\<rbrakk>\n       \\<Longrightarrow> merges f ps\n                          (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n                         xs", "apply (blast dest: boundedD)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>p x ps xs a b.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>(p, x)\\<in>set ps.\n                       x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>(p, x)\\<in>set ps. p < n \\<and> x \\<in> A; p < n;\n        x \\<in> A; (a, b) \\<in> set ps\\<rbrakk>\n       \\<Longrightarrow> b \\<in> A\n 2. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        merges f ps (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) = xs;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>set ps.\n                            case x of\n                            (p, x) \\<Rightarrow>\n                              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p\n 3. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p \\<and>\n        (\\<forall>x\\<in>set ps.\n            case x of\n            (p, x) \\<Rightarrow>\n              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)\\<rbrakk>\n       \\<Longrightarrow> merges f ps\n                          (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n                         xs", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        merges f ps (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) = xs;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>set ps.\n                            case x of\n                            (p, x) \\<Rightarrow>\n                              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p\n 2. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p \\<and>\n        (\\<forall>x\\<in>set ps.\n            case x of\n            (p, x) \\<Rightarrow>\n              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)\\<rbrakk>\n       \\<Longrightarrow> merges f ps\n                          (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n                         xs", "apply clarify"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p x ps xs a b.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>(p, x)\\<in>set ps.\n                       x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>(p, x)\\<in>set ps. p < n \\<and> x \\<in> A; p < n;\n        x \\<in> A;\n        merges f ps (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) = xs;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p;\n        (a, b) \\<in> set ps\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! a\n 2. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p \\<and>\n        (\\<forall>x\\<in>set ps.\n            case x of\n            (p, x) \\<Rightarrow>\n              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)\\<rbrakk>\n       \\<Longrightarrow> merges f ps\n                          (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n                         xs", "apply (erule allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p x ps xs a b.\n       \\<lbrakk>xs \\<in> list n A;\n        \\<forall>(p, x)\\<in>set ps. p < n \\<and> x \\<in> A; p < n;\n        x \\<in> A;\n        merges f ps (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) = xs;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p; (a, b) \\<in> set ps;\n        ?xs311 p x ps xs a b \\<in> list n A \\<longrightarrow>\n        (merges f ps (?xs311 p x ps xs a b) = ?xs311 p x ps xs a b) =\n        (\\<forall>(pa, xa)\\<in>set ps.\n            xa \\<sqsubseteq>\\<^bsub>r\\<^esub> ?xs311 p x ps xs a b !\n        pa)\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! a\n 2. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p \\<and>\n        (\\<forall>x\\<in>set ps.\n            case x of\n            (p, x) \\<Rightarrow>\n              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)\\<rbrakk>\n       \\<Longrightarrow> merges f ps\n                          (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n                         xs", "apply (erule impE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>p x ps xs a b.\n       \\<lbrakk>xs \\<in> list n A;\n        \\<forall>(p, x)\\<in>set ps. p < n \\<and> x \\<in> A; p < n;\n        x \\<in> A;\n        merges f ps (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) = xs;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p;\n        (a, b) \\<in> set ps\\<rbrakk>\n       \\<Longrightarrow> ?xs311 p x ps xs a b \\<in> list n A\n 2. \\<And>p x ps xs a b.\n       \\<lbrakk>xs \\<in> list n A;\n        \\<forall>(p, x)\\<in>set ps. p < n \\<and> x \\<in> A; p < n;\n        x \\<in> A;\n        merges f ps (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) = xs;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p; (a, b) \\<in> set ps;\n        (merges f ps (?xs311 p x ps xs a b) = ?xs311 p x ps xs a b) =\n        (\\<forall>(pa, xa)\\<in>set ps.\n            xa \\<sqsubseteq>\\<^bsub>r\\<^esub> ?xs311 p x ps xs a b !\n        pa)\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! a\n 3. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p \\<and>\n        (\\<forall>x\\<in>set ps.\n            case x of\n            (p, x) \\<Rightarrow>\n              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)\\<rbrakk>\n       \\<Longrightarrow> merges f ps\n                          (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n                         xs", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p x ps xs a b.\n       \\<lbrakk>xs \\<in> list n A;\n        \\<forall>(p, x)\\<in>set ps. p < n \\<and> x \\<in> A; p < n;\n        x \\<in> A;\n        merges f ps (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) = xs;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p; (a, b) \\<in> set ps;\n        (merges f ps xs = xs) =\n        (\\<forall>(p, x)\\<in>set ps.\n            x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! a\n 2. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p \\<and>\n        (\\<forall>x\\<in>set ps.\n            case x of\n            (p, x) \\<Rightarrow>\n              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)\\<rbrakk>\n       \\<Longrightarrow> merges f ps\n                          (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n                         xs", "apply (drule bspec)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>p x ps xs a b.\n       \\<lbrakk>xs \\<in> list n A; p < n; x \\<in> A;\n        merges f ps (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) = xs;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p; (a, b) \\<in> set ps;\n        (merges f ps xs = xs) =\n        (\\<forall>(p, x)\\<in>set ps.\n            x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)\\<rbrakk>\n       \\<Longrightarrow> ?x316 p x ps xs a b \\<in> set ps\n 2. \\<And>p x ps xs a b.\n       \\<lbrakk>xs \\<in> list n A; p < n; x \\<in> A;\n        merges f ps (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) = xs;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p; (a, b) \\<in> set ps;\n        (merges f ps xs = xs) =\n        (\\<forall>(p, x)\\<in>set ps.\n            x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        case ?x316 p x ps xs a b of\n        (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! a\n 3. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p \\<and>\n        (\\<forall>x\\<in>set ps.\n            case x of\n            (p, x) \\<Rightarrow>\n              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)\\<rbrakk>\n       \\<Longrightarrow> merges f ps\n                          (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n                         xs", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p x ps xs a b.\n       \\<lbrakk>xs \\<in> list n A; p < n; x \\<in> A;\n        merges f ps (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) = xs;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p; (a, b) \\<in> set ps;\n        (merges f ps xs = xs) =\n        (\\<forall>(p, x)\\<in>set ps.\n            x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        case (a, b) of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! a\n 2. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p \\<and>\n        (\\<forall>x\\<in>set ps.\n            case x of\n            (p, x) \\<Rightarrow>\n              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)\\<rbrakk>\n       \\<Longrightarrow> merges f ps\n                          (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n                         xs", "apply (simp add: le_iff_plus_unchanged [THEN iffD1] list_update_same_conv [THEN iffD2])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p x ps xs a b.\n       \\<lbrakk>xs \\<in> list n A; p < n; x \\<in> A;\n        \\<forall>x\\<in>set ps.\n           case x of\n           (p, x) \\<Rightarrow> x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p; (a, b) \\<in> set ps;\n        merges f ps xs = xs; a < n \\<and> b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! a\n 2. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p \\<and>\n        (\\<forall>x\\<in>set ps.\n            case x of\n            (p, x) \\<Rightarrow>\n              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)\\<rbrakk>\n       \\<Longrightarrow> merges f ps\n                          (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n                         xs", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A;\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p \\<and>\n        (\\<forall>x\\<in>set ps.\n            case x of\n            (p, x) \\<Rightarrow>\n              x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p)\\<rbrakk>\n       \\<Longrightarrow> merges f ps\n                          (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n                         xs", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p x ps xs.\n       \\<lbrakk>\\<forall>xs.\n                   xs \\<in> list n A \\<longrightarrow>\n                   (merges f ps xs = xs) =\n                   (\\<forall>x\\<in>set ps.\n                       case x of\n                       (p, x) \\<Rightarrow>\n                         x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p);\n        xs \\<in> list n A;\n        \\<forall>x\\<in>set ps.\n           case x of (p, x) \\<Rightarrow> p < n \\<and> x \\<in> A;\n        p < n; x \\<in> A; x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p;\n        \\<forall>x\\<in>set ps.\n           case x of\n           (p, x) \\<Rightarrow>\n             x \\<sqsubseteq>\\<^bsub>r\\<^esub> xs ! p\\<rbrakk>\n       \\<Longrightarrow> merges f ps\n                          (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) =\n                         xs", "apply (simp add: le_iff_plus_unchanged [THEN iffD1] list_update_same_conv [THEN iffD2])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma (in Semilat) list_update_le_listI [rule_format]:\n  \"set xs \\<subseteq> A \\<longrightarrow> set ys \\<subseteq> A \\<longrightarrow> xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ys \\<longrightarrow> p < size xs \\<longrightarrow>  \n   x \\<sqsubseteq>\\<^bsub>r\\<^esub> ys!p \\<longrightarrow> x\\<in>A \\<longrightarrow> xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs!p] [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set xs \\<subseteq> A \\<longrightarrow>\n    set ys \\<subseteq> A \\<longrightarrow>\n    xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ys \\<longrightarrow>\n    p < length xs \\<longrightarrow>\n    x \\<sqsubseteq>\\<^bsub>r\\<^esub> ys ! p \\<longrightarrow>\n    x \\<in> A \\<longrightarrow>\n    xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p] \n    [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ys", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. set xs \\<subseteq> A \\<longrightarrow>\n    set ys \\<subseteq> A \\<longrightarrow>\n    xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ys \\<longrightarrow>\n    p < length xs \\<longrightarrow>\n    x \\<sqsubseteq>\\<^bsub>r\\<^esub> ys ! p \\<longrightarrow>\n    x \\<in> A \\<longrightarrow>\n    xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p] \n    [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ys", "apply (insert semilat)"], ["proof (prove)\ngoal (1 subgoal):\n 1. semilat (A, r, f) \\<Longrightarrow>\n    set xs \\<subseteq> A \\<longrightarrow>\n    set ys \\<subseteq> A \\<longrightarrow>\n    xs [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ys \\<longrightarrow>\n    p < length xs \\<longrightarrow>\n    x \\<sqsubseteq>\\<^bsub>r\\<^esub> ys ! p \\<longrightarrow>\n    x \\<in> A \\<longrightarrow>\n    xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p] \n    [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ys", "apply (simp only: Listn.le_def lesub_def semilat_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. case (A, r, f) of\n    (A, r, f) \\<Rightarrow>\n      order r \\<and>\n      closed A f \\<and>\n      (\\<forall>x\\<in>A.\n          \\<forall>y\\<in>A. r x (x \\<squnion>\\<^bsub>f\\<^esub> y)) \\<and>\n      (\\<forall>x\\<in>A.\n          \\<forall>y\\<in>A. r y (x \\<squnion>\\<^bsub>f\\<^esub> y)) \\<and>\n      (\\<forall>x\\<in>A.\n          \\<forall>y\\<in>A.\n             \\<forall>z\\<in>A.\n                r x z \\<and> r y z \\<longrightarrow>\n                r (x \\<squnion>\\<^bsub>f\\<^esub> y) z) \\<Longrightarrow>\n    set xs \\<subseteq> A \\<longrightarrow>\n    set ys \\<subseteq> A \\<longrightarrow>\n    list_all2 r xs ys \\<longrightarrow>\n    p < length xs \\<longrightarrow>\n    r x (ys ! p) \\<longrightarrow>\n    x \\<in> A \\<longrightarrow>\n    list_all2 r (xs[p := x \\<squnion>\\<^bsub>f\\<^esub> xs ! p]) ys", "apply (simp add: list_all2_conv_all_nth nth_list_update)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma (in Semilat) merges_pres_le_ub:\n  assumes \"set ts \\<subseteq> A\"  \"set ss \\<subseteq> A\"\n    \"\\<forall>(p,t)\\<in>set ps. t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts!p \\<and> t \\<in> A \\<and> p < size ts\"  \"ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts\"\n  shows \"merges f ps ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. merges f ps ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. merges f ps ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. merges f ps ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. merges f ps ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts", "fix t ts ps"], ["proof (state)\ngoal (1 subgoal):\n 1. merges f ps ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts", "have\n    \"\\<And>qs. \\<lbrakk>set ts \\<subseteq> A; \\<forall>(p,t)\\<in>set ps. t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts!p \\<and> t \\<in> A \\<and> p< size ts \\<rbrakk> \\<Longrightarrow>\n    set qs \\<subseteq> set ps  \\<longrightarrow> \n    (\\<forall>ss. set ss \\<subseteq> A \\<longrightarrow> ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<longrightarrow> merges f qs ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>qs.\n       \\<lbrakk>set ts \\<subseteq> A;\n        \\<forall>(p, t)\\<in>set ps.\n           t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p \\<and>\n           t \\<in> A \\<and> p < length ts\\<rbrakk>\n       \\<Longrightarrow> set qs \\<subseteq> set ps \\<longrightarrow>\n                         (\\<forall>ss.\n                             set ss \\<subseteq> A \\<longrightarrow>\n                             ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<longrightarrow>\n                             merges f qs ss \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)", "apply (induct_tac qs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>qs.\n       \\<lbrakk>set ts \\<subseteq> A;\n        \\<forall>(p, t)\\<in>set ps.\n           t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p \\<and>\n           t \\<in> A \\<and> p < length ts\\<rbrakk>\n       \\<Longrightarrow> set [] \\<subseteq> set ps \\<longrightarrow>\n                         (\\<forall>ss.\n                             set ss \\<subseteq> A \\<longrightarrow>\n                             ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<longrightarrow>\n                             merges f [] ss \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 2. \\<And>qs a list.\n       \\<lbrakk>set ts \\<subseteq> A;\n        \\<forall>(p, t)\\<in>set ps.\n           t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p \\<and>\n           t \\<in> A \\<and> p < length ts;\n        set list \\<subseteq> set ps \\<longrightarrow>\n        (\\<forall>ss.\n            set ss \\<subseteq> A \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<longrightarrow>\n            merges f list ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\\<rbrakk>\n       \\<Longrightarrow> set (a # list) \\<subseteq> set ps \\<longrightarrow>\n                         (\\<forall>ss.\n                             set ss \\<subseteq> A \\<longrightarrow>\n                             ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<longrightarrow>\n                             merges f (a # list) ss \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>qs a list.\n       \\<lbrakk>set ts \\<subseteq> A;\n        \\<forall>(p, t)\\<in>set ps.\n           t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p \\<and>\n           t \\<in> A \\<and> p < length ts;\n        set list \\<subseteq> set ps \\<longrightarrow>\n        (\\<forall>ss.\n            set ss \\<subseteq> A \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<longrightarrow>\n            merges f list ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\\<rbrakk>\n       \\<Longrightarrow> set (a # list) \\<subseteq> set ps \\<longrightarrow>\n                         (\\<forall>ss.\n                             set ss \\<subseteq> A \\<longrightarrow>\n                             ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<longrightarrow>\n                             merges f (a # list) ss \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)", "apply (simp (no_asm_simp))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>set ts \\<subseteq> A;\n        \\<forall>(p, t)\\<in>set ps.\n           t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p \\<and>\n           t \\<in> A \\<and> p < length ts;\n        set list \\<subseteq> set ps \\<longrightarrow>\n        (\\<forall>ss.\n            set ss \\<subseteq> A \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<longrightarrow>\n            merges f list ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\\<rbrakk>\n       \\<Longrightarrow> a \\<in> set ps \\<and>\n                         set list \\<subseteq> set ps \\<longrightarrow>\n                         (\\<forall>ss.\n                             set ss \\<subseteq> A \\<longrightarrow>\n                             ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<longrightarrow>\n                             (case a of\n                              (p, \\<tau>) \\<Rightarrow>\n                                merges f list\n                                 (ss[p :=\n \\<tau> \\<squnion>\\<^bsub>f\\<^esub> ss ! p])) \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b list ss.\n       \\<lbrakk>set ts \\<subseteq> A;\n        \\<forall>(p, t)\\<in>set ps.\n           t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p \\<and>\n           t \\<in> A \\<and> p < length ts;\n        (a, b) \\<in> set ps; set list \\<subseteq> set ps;\n        set ss \\<subseteq> A; ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>ss.\n           set ss \\<subseteq> A \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<longrightarrow>\n           merges f list ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts\\<rbrakk>\n       \\<Longrightarrow> merges f list\n                          (ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a]) \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b list ss.\n       \\<lbrakk>set ts \\<subseteq> A;\n        \\<forall>x\\<in>set ps.\n           case x of\n           (p, t) \\<Rightarrow>\n             t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p \\<and>\n             t \\<in> A \\<and> p < length ss;\n        (a, b) \\<in> set ps; set list \\<subseteq> set ps;\n        set ss \\<subseteq> A; ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>ss.\n           set ss \\<subseteq> A \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<longrightarrow>\n           merges f list ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts\\<rbrakk>\n       \\<Longrightarrow> merges f list\n                          (ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a]) \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts", "apply (erule allE, erule impE, erule_tac [2] mp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b list ss.\n       \\<lbrakk>set ts \\<subseteq> A;\n        \\<forall>x\\<in>set ps.\n           case x of\n           (p, t) \\<Rightarrow>\n             t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p \\<and>\n             t \\<in> A \\<and> p < length ss;\n        (a, b) \\<in> set ps; set list \\<subseteq> set ps;\n        set ss \\<subseteq> A;\n        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts\\<rbrakk>\n       \\<Longrightarrow> set (ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a])\n                         \\<subseteq> A\n 2. \\<And>a b list ss.\n       \\<lbrakk>set ts \\<subseteq> A;\n        \\<forall>x\\<in>set ps.\n           case x of\n           (p, t) \\<Rightarrow>\n             t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p \\<and>\n             t \\<in> A \\<and> p < length ss;\n        (a, b) \\<in> set ps; set list \\<subseteq> set ps;\n        set ss \\<subseteq> A;\n        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts\\<rbrakk>\n       \\<Longrightarrow> ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a] \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts", "apply (drule bspec, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b list ss.\n       \\<lbrakk>set ts \\<subseteq> A; (a, b) \\<in> set ps;\n        set list \\<subseteq> set ps; set ss \\<subseteq> A;\n        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        case (a, b) of\n        (p, t) \\<Rightarrow>\n          t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p \\<and>\n          t \\<in> A \\<and> p < length ss\\<rbrakk>\n       \\<Longrightarrow> set (ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a])\n                         \\<subseteq> A\n 2. \\<And>a b list ss.\n       \\<lbrakk>set ts \\<subseteq> A;\n        \\<forall>x\\<in>set ps.\n           case x of\n           (p, t) \\<Rightarrow>\n             t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p \\<and>\n             t \\<in> A \\<and> p < length ss;\n        (a, b) \\<in> set ps; set list \\<subseteq> set ps;\n        set ss \\<subseteq> A;\n        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts\\<rbrakk>\n       \\<Longrightarrow> ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a] \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts", "apply (simp add: closedD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b list ss.\n       \\<lbrakk>set ts \\<subseteq> A;\n        \\<forall>x\\<in>set ps.\n           case x of\n           (p, t) \\<Rightarrow>\n             t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p \\<and>\n             t \\<in> A \\<and> p < length ss;\n        (a, b) \\<in> set ps; set list \\<subseteq> set ps;\n        set ss \\<subseteq> A;\n        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts\\<rbrakk>\n       \\<Longrightarrow> ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a] \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts", "apply (drule bspec, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b list ss.\n       \\<lbrakk>set ts \\<subseteq> A; (a, b) \\<in> set ps;\n        set list \\<subseteq> set ps; set ss \\<subseteq> A;\n        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        case (a, b) of\n        (p, t) \\<Rightarrow>\n          t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p \\<and>\n          t \\<in> A \\<and> p < length ss\\<rbrakk>\n       \\<Longrightarrow> ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a] \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts", "apply (simp add: list_update_le_listI)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<lbrakk>set ts \\<subseteq> A;\n   \\<forall>(p, t)\\<in>set ps.\n      t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p \\<and>\n      t \\<in> A \\<and> p < length ts\\<rbrakk>\n  \\<Longrightarrow> set ?qs \\<subseteq> set ps \\<longrightarrow>\n                    (\\<forall>ss.\n                        set ss \\<subseteq> A \\<longrightarrow>\n                        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<longrightarrow>\n                        merges f ?qs ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n\ngoal (1 subgoal):\n 1. merges f ps ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts", "}"], ["proof (state)\nthis:\n  \\<lbrakk>set ?tsa3 \\<subseteq> A;\n   \\<forall>(p, t)\\<in>set ?psa3.\n      t \\<sqsubseteq>\\<^bsub>r\\<^esub> ?tsa3 ! p \\<and>\n      t \\<in> A \\<and> p < length ?tsa3\\<rbrakk>\n  \\<Longrightarrow> set ?qs \\<subseteq> set ?psa3 \\<longrightarrow>\n                    (\\<forall>ss.\n                        set ss \\<subseteq> A \\<longrightarrow>\n                        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ?tsa3 \\<longrightarrow>\n                        merges f ?qs ss \n                        [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ?tsa3)\n\ngoal (1 subgoal):\n 1. merges f ps ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts", "note this [dest]"], ["proof (state)\nthis:\n  \\<lbrakk>set ?tsa3 \\<subseteq> A;\n   \\<forall>(p, t)\\<in>set ?psa3.\n      t \\<sqsubseteq>\\<^bsub>r\\<^esub> ?tsa3 ! p \\<and>\n      t \\<in> A \\<and> p < length ?tsa3\\<rbrakk>\n  \\<Longrightarrow> set ?qs \\<subseteq> set ?psa3 \\<longrightarrow>\n                    (\\<forall>ss.\n                        set ss \\<subseteq> A \\<longrightarrow>\n                        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ?tsa3 \\<longrightarrow>\n                        merges f ?qs ss \n                        [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ?tsa3)\n\ngoal (1 subgoal):\n 1. merges f ps ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts", "from assms"], ["proof (chain)\npicking this:\n  set ts \\<subseteq> A\n  set ss \\<subseteq> A\n  \\<forall>(p, t)\\<in>set ps.\n     t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p \\<and>\n     t \\<in> A \\<and> p < length ts\n  ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts", "show ?thesis"], ["proof (prove)\nusing this:\n  set ts \\<subseteq> A\n  set ss \\<subseteq> A\n  \\<forall>(p, t)\\<in>set ps.\n     t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p \\<and>\n     t \\<in> A \\<and> p < length ts\n  ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts\n\ngoal (1 subgoal):\n 1. merges f ps ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts", "by blast"], ["proof (state)\nthis:\n  merges f ps ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)\n\n\n(** propa **)"], ["", "lemma decomp_propa:\n  \"\\<And>ss w. (\\<forall>(q,t)\\<in>set qs. q < size ss) \\<Longrightarrow> \n   propa f qs ss w = \n   (merges f qs ss, {q. \\<exists>t.(q,t)\\<in>set qs \\<and> t \\<squnion>\\<^bsub>f\\<^esub> ss!q \\<noteq> ss!q} \\<union> w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ss w.\n       \\<forall>(q, t)\\<in>set qs. q < length ss \\<Longrightarrow>\n       propa f qs ss w =\n       (merges f qs ss,\n        {q. \\<exists>t.\n               (q, t) \\<in> set qs \\<and>\n               t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n               ss ! q} \\<union>\n        w)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ss w.\n       \\<forall>(q, t)\\<in>set qs. q < length ss \\<Longrightarrow>\n       propa f qs ss w =\n       (merges f qs ss,\n        {q. \\<exists>t.\n               (q, t) \\<in> set qs \\<and>\n               t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n               ss ! q} \\<union>\n        w)", "apply (induct qs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ss w.\n       \\<forall>(q, t)\\<in>set []. q < length ss \\<Longrightarrow>\n       propa f [] ss w =\n       (merges f [] ss,\n        {q. \\<exists>t.\n               (q, t) \\<in> set [] \\<and>\n               t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n               ss ! q} \\<union>\n        w)\n 2. \\<And>a qs ss w.\n       \\<lbrakk>\\<And>ss w.\n                   \\<forall>(q, t)\\<in>set qs.\n                      q < length ss \\<Longrightarrow>\n                   propa f qs ss w =\n                   (merges f qs ss,\n                    {q. \\<exists>t.\n                           (q, t) \\<in> set qs \\<and>\n                           t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                           ss ! q} \\<union>\n                    w);\n        \\<forall>(q, t)\\<in>set (a # qs). q < length ss\\<rbrakk>\n       \\<Longrightarrow> propa f (a # qs) ss w =\n                         (merges f (a # qs) ss,\n                          {q. \\<exists>t.\n                                 (q, t) \\<in> set (a # qs) \\<and>\n                                 t \\<squnion>\\<^bsub>f\\<^esub> ss !\n                         q \\<noteq>\n                                 ss ! q} \\<union>\n                          w)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a qs ss w.\n       \\<lbrakk>\\<And>ss w.\n                   \\<forall>(q, t)\\<in>set qs.\n                      q < length ss \\<Longrightarrow>\n                   propa f qs ss w =\n                   (merges f qs ss,\n                    {q. \\<exists>t.\n                           (q, t) \\<in> set qs \\<and>\n                           t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                           ss ! q} \\<union>\n                    w);\n        \\<forall>(q, t)\\<in>set (a # qs). q < length ss\\<rbrakk>\n       \\<Longrightarrow> propa f (a # qs) ss w =\n                         (merges f (a # qs) ss,\n                          {q. \\<exists>t.\n                                 (q, t) \\<in> set (a # qs) \\<and>\n                                 t \\<squnion>\\<^bsub>f\\<^esub> ss !\n                         q \\<noteq>\n                                 ss ! q} \\<union>\n                          w)", "apply (simp (no_asm))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a qs ss w.\n       \\<lbrakk>\\<And>ss w.\n                   \\<forall>(q, t)\\<in>set qs.\n                      q < length ss \\<Longrightarrow>\n                   propa f qs ss w =\n                   (merges f qs ss,\n                    {q. \\<exists>t.\n                           (q, t) \\<in> set qs \\<and>\n                           t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                           ss ! q} \\<union>\n                    w);\n        \\<forall>(q, t)\\<in>set (a # qs). q < length ss\\<rbrakk>\n       \\<Longrightarrow> (case a of\n                          (q, \\<tau>) \\<Rightarrow>\n                            propa f qs\n                             (ss[q := \\<tau> \n\\<squnion>\\<^bsub>f\\<^esub> ss ! q])\n                             (if \\<tau> \\<squnion>\\<^bsub>f\\<^esub> ss ! q =\n                                 ss ! q\n                              then w else insert q w)) =\n                         (case a of\n                          (p, \\<tau>) \\<Rightarrow>\n                            merges f qs\n                             (ss[p := \\<tau> \n\\<squnion>\\<^bsub>f\\<^esub> ss ! p]),\n                          {q. \\<exists>t.\n                                 ((q, t) = a \\<or>\n                                  (q, t) \\<in> set qs) \\<and>\n                                 t \\<squnion>\\<^bsub>f\\<^esub> ss !\n                         q \\<noteq>\n                                 ss ! q} \\<union>\n                          w)", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b qs ss w.\n       \\<lbrakk>\\<And>ss w.\n                   \\<forall>(q, t)\\<in>set qs.\n                      q < length ss \\<Longrightarrow>\n                   propa f qs ss w =\n                   (merges f qs ss,\n                    {q. \\<exists>t.\n                           (q, t) \\<in> set qs \\<and>\n                           t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                           ss ! q} \\<union>\n                    w);\n        \\<forall>(q, t)\\<in>set ((a, b) # qs). q < length ss\\<rbrakk>\n       \\<Longrightarrow> propa f qs\n                          (ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a])\n                          (if b \\<squnion>\\<^bsub>f\\<^esub> ss ! a = ss ! a\n                           then w else insert a w) =\n                         (merges f qs\n                           (ss[a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a]),\n                          {q. \\<exists>t.\n                                 ((q, t) = (a, b) \\<or>\n                                  (q, t) \\<in> set qs) \\<and>\n                                 t \\<squnion>\\<^bsub>f\\<^esub> ss !\n                         q \\<noteq>\n                                 ss ! q} \\<union>\n                          w)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b qs ss w.\n       \\<lbrakk>\\<And>ss w.\n                   \\<forall>x\\<in>set qs.\n                      case x of\n                      (q, t) \\<Rightarrow> q < length ss \\<Longrightarrow>\n                   propa f qs ss w =\n                   (merges f qs ss,\n                    {q. \\<exists>t.\n                           (q, t) \\<in> set qs \\<and>\n                           t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                           ss ! q} \\<union>\n                    w);\n        a < length ss \\<and>\n        (\\<forall>x\\<in>set qs.\n            case x of (q, t) \\<Rightarrow> q < length ss)\\<rbrakk>\n       \\<Longrightarrow> (b \\<squnion>\\<^bsub>f\\<^esub> ss ! a =\n                          ss ! a \\<longrightarrow>\n                          {q. \\<exists>t.\n                                 (q, t) \\<in> set qs \\<and>\n                                 t \\<squnion>\\<^bsub>f\\<^esub> ss !\n                         q \\<noteq>\n                                 ss ! q} \\<union>\n                          w =\n                          {q. \\<exists>t.\n                                 (q = a \\<and> t = b \\<or>\n                                  (q, t) \\<in> set qs) \\<and>\n                                 t \\<squnion>\\<^bsub>f\\<^esub> ss !\n                         q \\<noteq>\n                                 ss ! q} \\<union>\n                          w) \\<and>\n                         (b \\<squnion>\\<^bsub>f\\<^esub> ss ! a \\<noteq>\n                          ss ! a \\<longrightarrow>\n                          insert a\n                           ({q. \\<exists>t.\n                                   (q, t) \\<in> set qs \\<and>\n                                   t \\<squnion>\\<^bsub>f\\<^esub> ss\n                           [a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a] !\n                           q \\<noteq>\n                                   ss[a :=\n  b \\<squnion>\\<^bsub>f\\<^esub> ss ! a] !\n                                   q} \\<union>\n                            w) =\n                          {q. \\<exists>t.\n                                 (q = a \\<and> t = b \\<or>\n                                  (q, t) \\<in> set qs) \\<and>\n                                 t \\<squnion>\\<^bsub>f\\<^esub> ss !\n                         q \\<noteq>\n                                 ss ! q} \\<union>\n                          w)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b qs ss w.\n       \\<lbrakk>\\<And>ss w.\n                   \\<forall>x\\<in>set qs.\n                      case x of\n                      (q, t) \\<Rightarrow> q < length ss \\<Longrightarrow>\n                   propa f qs ss w =\n                   (merges f qs ss,\n                    {q. \\<exists>t.\n                           (q, t) \\<in> set qs \\<and>\n                           t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                           ss ! q} \\<union>\n                    w);\n        a < length ss \\<and>\n        (\\<forall>x\\<in>set qs.\n            case x of (q, t) \\<Rightarrow> q < length ss)\\<rbrakk>\n       \\<Longrightarrow> b \\<squnion>\\<^bsub>f\\<^esub> ss ! a =\n                         ss ! a \\<longrightarrow>\n                         {q. \\<exists>t.\n                                (q, t) \\<in> set qs \\<and>\n                                t \\<squnion>\\<^bsub>f\\<^esub> ss !\n                        q \\<noteq>\n                                ss ! q} \\<union>\n                         w =\n                         {q. \\<exists>t.\n                                (q = a \\<and> t = b \\<or>\n                                 (q, t) \\<in> set qs) \\<and>\n                                t \\<squnion>\\<^bsub>f\\<^esub> ss !\n                        q \\<noteq>\n                                ss ! q} \\<union>\n                         w\n 2. \\<And>a b qs ss w.\n       \\<lbrakk>\\<And>ss w.\n                   \\<forall>x\\<in>set qs.\n                      case x of\n                      (q, t) \\<Rightarrow> q < length ss \\<Longrightarrow>\n                   propa f qs ss w =\n                   (merges f qs ss,\n                    {q. \\<exists>t.\n                           (q, t) \\<in> set qs \\<and>\n                           t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                           ss ! q} \\<union>\n                    w);\n        a < length ss \\<and>\n        (\\<forall>x\\<in>set qs.\n            case x of (q, t) \\<Rightarrow> q < length ss)\\<rbrakk>\n       \\<Longrightarrow> b \\<squnion>\\<^bsub>f\\<^esub> ss ! a \\<noteq>\n                         ss ! a \\<longrightarrow>\n                         insert a\n                          ({q. \\<exists>t.\n                                  (q, t) \\<in> set qs \\<and>\n                                  t \\<squnion>\\<^bsub>f\\<^esub> ss\n                          [a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a] !\n                          q \\<noteq>\n                                  ss[a :=\n b \\<squnion>\\<^bsub>f\\<^esub> ss ! a] !\n                                  q} \\<union>\n                           w) =\n                         {q. \\<exists>t.\n                                (q = a \\<and> t = b \\<or>\n                                 (q, t) \\<in> set qs) \\<and>\n                                t \\<squnion>\\<^bsub>f\\<^esub> ss !\n                        q \\<noteq>\n                                ss ! q} \\<union>\n                         w", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b qs ss w.\n       \\<lbrakk>\\<And>ss w.\n                   \\<forall>x\\<in>set qs.\n                      case x of\n                      (q, t) \\<Rightarrow> q < length ss \\<Longrightarrow>\n                   propa f qs ss w =\n                   (merges f qs ss,\n                    {q. \\<exists>t.\n                           (q, t) \\<in> set qs \\<and>\n                           t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                           ss ! q} \\<union>\n                    w);\n        a < length ss \\<and>\n        (\\<forall>x\\<in>set qs.\n            case x of (q, t) \\<Rightarrow> q < length ss)\\<rbrakk>\n       \\<Longrightarrow> b \\<squnion>\\<^bsub>f\\<^esub> ss ! a \\<noteq>\n                         ss ! a \\<longrightarrow>\n                         insert a\n                          ({q. \\<exists>t.\n                                  (q, t) \\<in> set qs \\<and>\n                                  t \\<squnion>\\<^bsub>f\\<^esub> ss\n                          [a := b \\<squnion>\\<^bsub>f\\<^esub> ss ! a] !\n                          q \\<noteq>\n                                  ss[a :=\n b \\<squnion>\\<^bsub>f\\<^esub> ss ! a] !\n                                  q} \\<union>\n                           w) =\n                         {q. \\<exists>t.\n                                (q = a \\<and> t = b \\<or>\n                                 (q, t) \\<in> set qs) \\<and>\n                                t \\<squnion>\\<^bsub>f\\<^esub> ss !\n                        q \\<noteq>\n                                ss ! q} \\<union>\n                         w", "apply (simp add: nth_list_update)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b qs ss w.\n       \\<lbrakk>\\<And>ss w.\n                   \\<forall>x\\<in>set qs.\n                      case x of\n                      (q, t) \\<Rightarrow> q < length ss \\<Longrightarrow>\n                   propa f qs ss w =\n                   (merges f qs ss,\n                    {q. \\<exists>t.\n                           (q, t) \\<in> set qs \\<and>\n                           t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                           ss ! q} \\<union>\n                    w);\n        a < length ss \\<and>\n        (\\<forall>x\\<in>set qs.\n            case x of (q, t) \\<Rightarrow> q < length ss)\\<rbrakk>\n       \\<Longrightarrow> b \\<squnion>\\<^bsub>f\\<^esub> ss ! a \\<noteq>\n                         ss ! a \\<longrightarrow>\n                         insert a\n                          ({q. (a = q \\<longrightarrow>\n                                (\\<exists>t.\n                                    (q, t) \\<in> set qs \\<and>\n                                    t \\<squnion>\\<^bsub>f\\<^esub> (b \n                             \\<squnion>\\<^bsub>f\\<^esub> ss ! q) \\<noteq>\n                                    b \\<squnion>\\<^bsub>f\\<^esub> ss !\n                            q)) \\<and>\n                               (a \\<noteq> q \\<longrightarrow>\n                                (\\<exists>t.\n                                    (q, t) \\<in> set qs \\<and>\n                                    t \\<squnion>\\<^bsub>f\\<^esub> ss !\n                            q \\<noteq>\n                                    ss ! q))} \\<union>\n                           w) =\n                         {q. \\<exists>t.\n                                (q = a \\<and> t = b \\<or>\n                                 (q, t) \\<in> set qs) \\<and>\n                                t \\<squnion>\\<^bsub>f\\<^esub> ss !\n                        q \\<noteq>\n                                ss ! q} \\<union>\n                         w", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)\n\n(** iter **)"], ["", "lemma (in Semilat) stable_pres_lemma:\nshows \"\\<lbrakk>pres_type step n A; bounded step n; \n     ss \\<in> list n A; p \\<in> w; \\<forall>q\\<in>w. q < n; \n     \\<forall>q. q < n \\<longrightarrow> q \\<notin> w \\<longrightarrow> stable r step ss q; q < n; \n     \\<forall>s'. (q,s') \\<in> set (step p (ss!p)) \\<longrightarrow> s' \\<squnion>\\<^bsub>f\\<^esub> ss!q = ss!q; \n     q \\<notin> w \\<or> q = p \\<rbrakk> \n  \\<Longrightarrow> stable r step (merges f (step p (ss!p)) ss) q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n     p \\<in> w; \\<forall>q\\<in>w. q < n;\n     \\<forall>q<n. q \\<notin> w \\<longrightarrow> stable r step ss q; q < n;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n     q \\<notin> w \\<or> q = p\\<rbrakk>\n    \\<Longrightarrow> stable r step (merges f (step p (ss ! p)) ss) q", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n     p \\<in> w; \\<forall>q\\<in>w. q < n;\n     \\<forall>q<n. q \\<notin> w \\<longrightarrow> stable r step ss q; q < n;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n     q \\<notin> w \\<or> q = p\\<rbrakk>\n    \\<Longrightarrow> stable r step (merges f (step p (ss ! p)) ss) q", "apply (unfold stable_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n     p \\<in> w; \\<forall>q\\<in>w. q < n;\n     \\<forall>q<n.\n        q \\<notin> w \\<longrightarrow>\n        (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n            \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n     q < n;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n     q \\<notin> w \\<or> q = p\\<rbrakk>\n    \\<Longrightarrow> \\<forall>(q, \\<tau>)\n                               \\<in>set (step q\n    (merges f (step p (ss ! p)) ss ! q)).\n                         \\<tau> \n                         \\<sqsubseteq>\\<^bsub>r\\<^esub> merges f\n                   (step p (ss ! p)) ss !\n                  q", "apply (subgoal_tac \"\\<forall>s'. (q,s') \\<in> set (step p (ss!p)) \\<longrightarrow> s' : A\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n     p \\<in> w; \\<forall>q\\<in>w. q < n;\n     \\<forall>q<n.\n        q \\<notin> w \\<longrightarrow>\n        (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n            \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n     q < n;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n     q \\<notin> w \\<or> q = p;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<in> A\\<rbrakk>\n    \\<Longrightarrow> \\<forall>(q, \\<tau>)\n                               \\<in>set (step q\n    (merges f (step p (ss ! p)) ss ! q)).\n                         \\<tau> \n                         \\<sqsubseteq>\\<^bsub>r\\<^esub> merges f\n                   (step p (ss ! p)) ss !\n                  q\n 2. \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n     p \\<in> w; \\<forall>q\\<in>w. q < n;\n     \\<forall>q<n.\n        q \\<notin> w \\<longrightarrow>\n        (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n            \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n     q < n;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n     q \\<notin> w \\<or> q = p\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s'.\n                         (q, s')\n                         \\<in> set (step p (ss ! p)) \\<longrightarrow>\n                         s' \\<in> A", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n     p \\<in> w; \\<forall>q\\<in>w. q < n;\n     \\<forall>q<n.\n        q \\<notin> w \\<longrightarrow>\n        (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n            \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n     q < n;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n     q \\<notin> w \\<or> q = p\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s'.\n                         (q, s')\n                         \\<in> set (step p (ss ! p)) \\<longrightarrow>\n                         s' \\<in> A\n 2. \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n     p \\<in> w; \\<forall>q\\<in>w. q < n;\n     \\<forall>q<n.\n        q \\<notin> w \\<longrightarrow>\n        (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n            \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n     q < n;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n     q \\<notin> w \\<or> q = p;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<in> A\\<rbrakk>\n    \\<Longrightarrow> \\<forall>(q, \\<tau>)\n                               \\<in>set (step q\n    (merges f (step p (ss ! p)) ss ! q)).\n                         \\<tau> \n                         \\<sqsubseteq>\\<^bsub>r\\<^esub> merges f\n                   (step p (ss ! p)) ss !\n                  q", "apply clarify"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s'.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<notin> w \\<or> q = p;\n        (q, s') \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> s' \\<in> A\n 2. \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n     p \\<in> w; \\<forall>q\\<in>w. q < n;\n     \\<forall>q<n.\n        q \\<notin> w \\<longrightarrow>\n        (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n            \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n     q < n;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n     q \\<notin> w \\<or> q = p;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<in> A\\<rbrakk>\n    \\<Longrightarrow> \\<forall>(q, \\<tau>)\n                               \\<in>set (step q\n    (merges f (step p (ss ! p)) ss ! q)).\n                         \\<tau> \n                         \\<sqsubseteq>\\<^bsub>r\\<^esub> merges f\n                   (step p (ss ! p)) ss !\n                  q", "apply (erule pres_typeD)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s'.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<notin> w \\<or> q = p;\n        (q, s') \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?s5 s' \\<in> A\n 2. \\<And>s'.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<notin> w \\<or> q = p;\n        (q, s') \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?p5 s' < n\n 3. \\<And>s'.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<notin> w \\<or> q = p;\n        (q, s') \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> (?q5 s', s') \\<in> set (step (?p5 s') (?s5 s'))\n 4. \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n     p \\<in> w; \\<forall>q\\<in>w. q < n;\n     \\<forall>q<n.\n        q \\<notin> w \\<longrightarrow>\n        (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n            \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n     q < n;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n     q \\<notin> w \\<or> q = p;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<in> A\\<rbrakk>\n    \\<Longrightarrow> \\<forall>(q, \\<tau>)\n                               \\<in>set (step q\n    (merges f (step p (ss ! p)) ss ! q)).\n                         \\<tau> \n                         \\<sqsubseteq>\\<^bsub>r\\<^esub> merges f\n                   (step p (ss ! p)) ss !\n                  q", "prefer 3"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s'.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<notin> w \\<or> q = p;\n        (q, s') \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> (?q5 s', s') \\<in> set (step (?p5 s') (?s5 s'))\n 2. \\<And>s'.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<notin> w \\<or> q = p;\n        (q, s') \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?s5 s' \\<in> A\n 3. \\<And>s'.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<notin> w \\<or> q = p;\n        (q, s') \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?p5 s' < n\n 4. \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n     p \\<in> w; \\<forall>q\\<in>w. q < n;\n     \\<forall>q<n.\n        q \\<notin> w \\<longrightarrow>\n        (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n            \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n     q < n;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n     q \\<notin> w \\<or> q = p;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<in> A\\<rbrakk>\n    \\<Longrightarrow> \\<forall>(q, \\<tau>)\n                               \\<in>set (step q\n    (merges f (step p (ss ! p)) ss ! q)).\n                         \\<tau> \n                         \\<sqsubseteq>\\<^bsub>r\\<^esub> merges f\n                   (step p (ss ! p)) ss !\n                  q", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s'.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<notin> w \\<or> q = p;\n        (q, s') \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ss ! p \\<in> A\n 2. \\<And>s'.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<notin> w \\<or> q = p;\n        (q, s') \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> p < n\n 3. \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n     p \\<in> w; \\<forall>q\\<in>w. q < n;\n     \\<forall>q<n.\n        q \\<notin> w \\<longrightarrow>\n        (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n            \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n     q < n;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n     q \\<notin> w \\<or> q = p;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<in> A\\<rbrakk>\n    \\<Longrightarrow> \\<forall>(q, \\<tau>)\n                               \\<in>set (step q\n    (merges f (step p (ss ! p)) ss ! q)).\n                         \\<tau> \n                         \\<sqsubseteq>\\<^bsub>r\\<^esub> merges f\n                   (step p (ss ! p)) ss !\n                  q", "apply (rule listE_nth_in)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s'.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<notin> w \\<or> q = p;\n        (q, s') \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ss \\<in> list (?n9 s') A\n 2. \\<And>s'.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<notin> w \\<or> q = p;\n        (q, s') \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> p < ?n9 s'\n 3. \\<And>s'.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<notin> w \\<or> q = p;\n        (q, s') \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> p < n\n 4. \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n     p \\<in> w; \\<forall>q\\<in>w. q < n;\n     \\<forall>q<n.\n        q \\<notin> w \\<longrightarrow>\n        (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n            \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n     q < n;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n     q \\<notin> w \\<or> q = p;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<in> A\\<rbrakk>\n    \\<Longrightarrow> \\<forall>(q, \\<tau>)\n                               \\<in>set (step q\n    (merges f (step p (ss ! p)) ss ! q)).\n                         \\<tau> \n                         \\<sqsubseteq>\\<^bsub>r\\<^esub> merges f\n                   (step p (ss ! p)) ss !\n                  q", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s'.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<notin> w \\<or> q = p;\n        (q, s') \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> p < n\n 2. \\<And>s'.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<notin> w \\<or> q = p;\n        (q, s') \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> p < n\n 3. \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n     p \\<in> w; \\<forall>q\\<in>w. q < n;\n     \\<forall>q<n.\n        q \\<notin> w \\<longrightarrow>\n        (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n            \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n     q < n;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n     q \\<notin> w \\<or> q = p;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<in> A\\<rbrakk>\n    \\<Longrightarrow> \\<forall>(q, \\<tau>)\n                               \\<in>set (step q\n    (merges f (step p (ss ! p)) ss ! q)).\n                         \\<tau> \n                         \\<sqsubseteq>\\<^bsub>r\\<^esub> merges f\n                   (step p (ss ! p)) ss !\n                  q", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s'.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<notin> w \\<or> q = p;\n        (q, s') \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> p < n\n 2. \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n     p \\<in> w; \\<forall>q\\<in>w. q < n;\n     \\<forall>q<n.\n        q \\<notin> w \\<longrightarrow>\n        (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n            \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n     q < n;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n     q \\<notin> w \\<or> q = p;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<in> A\\<rbrakk>\n    \\<Longrightarrow> \\<forall>(q, \\<tau>)\n                               \\<in>set (step q\n    (merges f (step p (ss ! p)) ss ! q)).\n                         \\<tau> \n                         \\<sqsubseteq>\\<^bsub>r\\<^esub> merges f\n                   (step p (ss ! p)) ss !\n                  q", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n     p \\<in> w; \\<forall>q\\<in>w. q < n;\n     \\<forall>q<n.\n        q \\<notin> w \\<longrightarrow>\n        (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n            \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n     q < n;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n     q \\<notin> w \\<or> q = p;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<in> A\\<rbrakk>\n    \\<Longrightarrow> \\<forall>(q, \\<tau>)\n                               \\<in>set (step q\n    (merges f (step p (ss ! p)) ss ! q)).\n                         \\<tau> \n                         \\<sqsubseteq>\\<^bsub>r\\<^esub> merges f\n                   (step p (ss ! p)) ss !\n                  q", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n     p \\<in> w; \\<forall>q\\<in>w. q < n;\n     \\<forall>q<n.\n        q \\<notin> w \\<longrightarrow>\n        (\\<forall>x\\<in>set (step q (ss ! q)).\n            case x of\n            (q, \\<tau>) \\<Rightarrow>\n              \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n     q < n;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n     q \\<in> w \\<longrightarrow> q = p;\n     \\<forall>s'.\n        (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n        s' \\<in> A\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>set\n(step q (merges f (step p (ss ! p)) ss ! q)).\n                         case x of\n                         (q, \\<tau>) \\<Rightarrow>\n                           \\<tau> \n                           \\<sqsubseteq>\\<^bsub>r\\<^esub> merges f\n                     (step p (ss ! p)) ss !\n                    q", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> merges f\n                     (step p (ss ! p)) ss !\n                    a", "apply (subst nth_merges)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> a < length ss\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> ss \\<in> list (?n13 a b) A\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(p, t)\\<in>set (step p (ss ! p)).\n                            p < ?n13 a b \\<and> t \\<in> A\n 4. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> a < n\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> ss \\<in> list (?n13 a b) A\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(p, t)\\<in>set (step p (ss ! p)).\n                            p < ?n13 a b \\<and> t \\<in> A\n 4. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply (blast dest: boundedD)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> ss \\<in> list (?n13 a b) A\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(p, t)\\<in>set (step p (ss ! p)).\n                            p < ?n13 a b \\<and> t \\<in> A\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(p, t)\\<in>set (step p (ss ! p)).\n                            p < n \\<and> t \\<in> A\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply clarify"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> aa < n \\<and> ba \\<in> A\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply (rule conjI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> aa < n\n 2. \\<And>a b aa ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ba \\<in> A\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply (blast dest: boundedD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ba \\<in> A\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply (erule pres_typeD)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?s125 a b aa ba \\<in> A\n 2. \\<And>a b aa ba.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?p125 a b aa ba < n\n 3. \\<And>a b aa ba.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> (?q125 a b aa ba, ba)\n                         \\<in> set (step (?p125 a b aa ba)\n                                     (?s125 a b aa ba))\n 4. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "prefer 3"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> (?q125 a b aa ba, ba)\n                         \\<in> set (step (?p125 a b aa ba)\n                                     (?s125 a b aa ba))\n 2. \\<And>a b aa ba.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?s125 a b aa ba \\<in> A\n 3. \\<And>a b aa ba.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?p125 a b aa ba < n\n 4. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ss ! p \\<in> A\n 2. \\<And>a b aa ba.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> p < n\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> p < n\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply(subgoal_tac \"q < length ss\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> q < length ss", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b)\n        \\<in> set (step q (merges f (step p (ss ! p)) ss ! q))\\<rbrakk>\n       \\<Longrightarrow> q < length ss\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply (frule nth_merges [of q _ _ \"step p (ss!p)\"])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss\\<rbrakk>\n       \\<Longrightarrow> ss \\<in> list (?n130 a b) A\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(p, t)\\<in>set (step p (ss ! p)).\n                            p < ?n130 a b \\<and> t \\<in> A\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss;\n        merges f (step p (ss ! p)) ss ! q =\n        map snd (filter (\\<lambda>(p', t'). p' = q) (step p (ss ! p))) \n        \\<Squnion>\\<^bsub>f\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "(* fixme: why does method subst not work?? *)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss\\<rbrakk>\n       \\<Longrightarrow> ss \\<in> list (?n130 a b) A\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(p, t)\\<in>set (step p (ss ! p)).\n                            p < ?n130 a b \\<and> t \\<in> A\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss;\n        merges f (step p (ss ! p)) ss ! q =\n        map snd (filter (\\<lambda>(p', t'). p' = q) (step p (ss ! p))) \n        \\<Squnion>\\<^bsub>f\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(p, t)\\<in>set (step p (ss ! p)).\n                            p < n \\<and> t \\<in> A\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss;\n        merges f (step p (ss ! p)) ss ! q =\n        map snd (filter (\\<lambda>(p', t'). p' = q) (step p (ss ! p))) \n        \\<Squnion>\\<^bsub>f\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply clarify"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss; (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> aa < n \\<and> ba \\<in> A\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss;\n        merges f (step p (ss ! p)) ss ! q =\n        map snd (filter (\\<lambda>(p', t'). p' = q) (step p (ss ! p))) \n        \\<Squnion>\\<^bsub>f\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply (rule conjI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss; (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> aa < n\n 2. \\<And>a b aa ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss; (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ba \\<in> A\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss;\n        merges f (step p (ss ! p)) ss ! q =\n        map snd (filter (\\<lambda>(p', t'). p' = q) (step p (ss ! p))) \n        \\<Squnion>\\<^bsub>f\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply (blast dest: boundedD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss; (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ba \\<in> A\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss;\n        merges f (step p (ss ! p)) ss ! q =\n        map snd (filter (\\<lambda>(p', t'). p' = q) (step p (ss ! p))) \n        \\<Squnion>\\<^bsub>f\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply (erule pres_typeD)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss; (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?s199 a b aa ba \\<in> A\n 2. \\<And>a b aa ba.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss; (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?p199 a b aa ba < n\n 3. \\<And>a b aa ba.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss; (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> (?q199 a b aa ba, ba)\n                         \\<in> set (step (?p199 a b aa ba)\n                                     (?s199 a b aa ba))\n 4. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss;\n        merges f (step p (ss ! p)) ss ! q =\n        map snd (filter (\\<lambda>(p', t'). p' = q) (step p (ss ! p))) \n        \\<Squnion>\\<^bsub>f\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "prefer 3"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss; (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> (?q199 a b aa ba, ba)\n                         \\<in> set (step (?p199 a b aa ba)\n                                     (?s199 a b aa ba))\n 2. \\<And>a b aa ba.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss; (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?s199 a b aa ba \\<in> A\n 3. \\<And>a b aa ba.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss; (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?p199 a b aa ba < n\n 4. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss;\n        merges f (step p (ss ! p)) ss ! q =\n        map snd (filter (\\<lambda>(p', t'). p' = q) (step p (ss ! p))) \n        \\<Squnion>\\<^bsub>f\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss; (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ss ! p \\<in> A\n 2. \\<And>a b aa ba.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss; (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> p < n\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss;\n        merges f (step p (ss ! p)) ss ! q =\n        map snd (filter (\\<lambda>(p', t'). p' = q) (step p (ss ! p))) \n        \\<Squnion>\\<^bsub>f\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>bounded step n; ss \\<in> list n A; p \\<in> w;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss; (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> p < n\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss;\n        merges f (step p (ss ! p)) ss ! q =\n        map snd (filter (\\<lambda>(p', t'). p' = q) (step p (ss ! p))) \n        \\<Squnion>\\<^bsub>f\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss;\n        merges f (step p (ss ! p)) ss ! q =\n        map snd (filter (\\<lambda>(p', t'). p' = q) (step p (ss ! p))) \n        \\<Squnion>\\<^bsub>f\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply (drule_tac P = \"\\<lambda>x. (a, b) \\<in> set (step q x)\" in subst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss\\<rbrakk>\n       \\<Longrightarrow> (a, b)\n                         \\<in> set (step q\n                                     (merges f (step p (ss ! p)) ss ! q))\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss;\n        (a, b)\n        \\<in> set (step q\n                    (map snd\n                      (filter (\\<lambda>(p', t'). p' = q)\n                        (step p (ss ! p))) \n                     \\<Squnion>\\<^bsub>f\\<^esub> ss ! q))\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        q < length ss;\n        (a, b)\n        \\<in> set (step q\n                    (map snd\n                      (filter (\\<lambda>(p', t'). p' = q)\n                        (step p (ss ! p))) \n                     \\<Squnion>\\<^bsub>f\\<^esub> ss ! q))\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply (simp add: plusplus_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q))\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply (cases \"q \\<in> w\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<in> w\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply (rule ub1')"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> Semilat (?A206 a b) r f\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(p, s)\\<in>set (step p (ss ! p)).\n                            s \\<in> ?A206 a b\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> ss ! a \\<in> ?A206 a b\n 4. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> (a, b) \\<in> set (step p (ss ! p))\n 5. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply (rule Semilat.intro)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> semilat (?A206 a b, r, f)\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(p, s)\\<in>set (step p (ss ! p)).\n                            s \\<in> ?A206 a b\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> ss ! a \\<in> ?A206 a b\n 4. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> (a, b) \\<in> set (step p (ss ! p))\n 5. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply (rule semilat)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(p, s)\\<in>set (step p (ss ! p)).\n                            s \\<in> A\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> ss ! a \\<in> A\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> (a, b) \\<in> set (step p (ss ! p))\n 4. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply clarify"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w;\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ba \\<in> A\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> ss ! a \\<in> A\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> (a, b) \\<in> set (step p (ss ! p))\n 4. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply (rule pres_typeD)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w;\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> pres_type (?step216 a b aa ba) (?n216 a b aa ba) A\n 2. \\<And>a b aa ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w;\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?s216 a b aa ba \\<in> A\n 3. \\<And>a b aa ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w;\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?p216 a b aa ba < ?n216 a b aa ba\n 4. \\<And>a b aa ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w;\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> (?q216 a b aa ba, ba)\n                         \\<in> set (?step216 a b aa ba (?p216 a b aa ba)\n                                     (?s216 a b aa ba))\n 5. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> ss ! a \\<in> A\n 6. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> (a, b) \\<in> set (step p (ss ! p))\n 7. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply assumption"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w;\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?s216 a b aa ba \\<in> A\n 2. \\<And>a b aa ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w;\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?p216 a b aa ba < n\n 3. \\<And>a b aa ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w;\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> (?q216 a b aa ba, ba)\n                         \\<in> set (step (?p216 a b aa ba)\n                                     (?s216 a b aa ba))\n 4. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> ss ! a \\<in> A\n 5. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> (a, b) \\<in> set (step p (ss ! p))\n 6. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "prefer 3"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w;\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> (?q216 a b aa ba, ba)\n                         \\<in> set (step (?p216 a b aa ba)\n                                     (?s216 a b aa ba))\n 2. \\<And>a b aa ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w;\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?s216 a b aa ba \\<in> A\n 3. \\<And>a b aa ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w;\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?p216 a b aa ba < n\n 4. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> ss ! a \\<in> A\n 5. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> (a, b) \\<in> set (step p (ss ! p))\n 6. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply assumption"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w;\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ss ! p \\<in> A\n 2. \\<And>a b aa ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w;\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> p < n\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> ss ! a \\<in> A\n 4. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> (a, b) \\<in> set (step p (ss ! p))\n 5. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply (blast intro: listE_nth_in dest: boundedD)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n               \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w;\n        (aa, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> p < n\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> ss ! a \\<in> A\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> (a, b) \\<in> set (step p (ss ! p))\n 4. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply (blast intro: pres_typeD dest: boundedD)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> ss ! a \\<in> A\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> (a, b) \\<in> set (step p (ss ! p))\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply (blast intro: listE_nth_in dest: boundedD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        q = p;\n        \\<forall>s'.\n           (p, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step p (merges f (step p (ss ! p)) ss ! p));\n        (a, b) \\<in> set (step p (ss ! p)); p \\<in> w\\<rbrakk>\n       \\<Longrightarrow> (a, b) \\<in> set (step p (ss ! p))\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        q \\<in> w \\<longrightarrow> q = p;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n;\n        \\<forall>q<n.\n           q \\<notin> w \\<longrightarrow>\n           (\\<forall>x\\<in>set (step q (ss ! q)).\n               case x of\n               (q, \\<tau>) \\<Rightarrow>\n                 \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q);\n        q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply (erule allE, erule impE, assumption, erule impE, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                     (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                    \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply (rule order_trans)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> order r\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ?y332 a b\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> ?y332 a b \n                         \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                   (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                  \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ?y332 a b\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> ?y332 a b \n                         \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                   (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                  \\<Squnion>\\<^bsub>f\\<^esub> ss ! a", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> ?y332 a b \n                         \\<sqsubseteq>\\<^bsub>r\\<^esub> map snd\n                   (filter (\\<lambda>(p', t'). p' = a) (step p (ss ! p))) \n                  \\<Squnion>\\<^bsub>f\\<^esub> ss ! a\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ?y332 a b", "apply (rule pp_ub2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> set (map snd\n                               (filter (\\<lambda>(p', t'). p' = a)\n                                 (step p (ss ! p))))\n                         \\<subseteq> A\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> ss ! a \\<in> A\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! a", "(*\n    apply assumption*)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> set (map snd\n                               (filter (\\<lambda>(p', t'). p' = a)\n                                 (step p (ss ! p))))\n                         \\<subseteq> A\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> ss ! a \\<in> A\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! a", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> snd `\n                         {x \\<in> set (step p (ss ! p)).\n                          case x of (p', t') \\<Rightarrow> p' = a}\n                         \\<subseteq> A\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> ss ! a \\<in> A\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! a", "apply clarify"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b x aa ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q;\n        (a, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> snd (a, ba) \\<in> A\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> ss ! a \\<in> A\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! a", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q;\n        (a, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ba \\<in> A\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> ss ! a \\<in> A\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! a", "apply (rule pres_typeD)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q;\n        (a, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> pres_type (?step347 a b ba) (?n347 a b ba) A\n 2. \\<And>a b ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q;\n        (a, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?s347 a b ba \\<in> A\n 3. \\<And>a b ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q;\n        (a, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?p347 a b ba < ?n347 a b ba\n 4. \\<And>a b ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q;\n        (a, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> (?q347 a b ba, ba)\n                         \\<in> set (?step347 a b ba (?p347 a b ba)\n                                     (?s347 a b ba))\n 5. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> ss ! a \\<in> A\n 6. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! a", "apply assumption"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q;\n        (a, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?s347 a b ba \\<in> A\n 2. \\<And>a b ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q;\n        (a, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?p347 a b ba < n\n 3. \\<And>a b ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q;\n        (a, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> (?q347 a b ba, ba)\n                         \\<in> set (step (?p347 a b ba) (?s347 a b ba))\n 4. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> ss ! a \\<in> A\n 5. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! a", "prefer 3"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q;\n        (a, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> (?q347 a b ba, ba)\n                         \\<in> set (step (?p347 a b ba) (?s347 a b ba))\n 2. \\<And>a b ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q;\n        (a, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?s347 a b ba \\<in> A\n 3. \\<And>a b ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q;\n        (a, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ?p347 a b ba < n\n 4. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> ss ! a \\<in> A\n 5. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! a", "apply assumption"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q;\n        (a, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> ss ! p \\<in> A\n 2. \\<And>a b ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q;\n        (a, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> p < n\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> ss ! a \\<in> A\n 4. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! a", "apply (blast intro: listE_nth_in dest: boundedD)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b ba.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>(q, \\<tau>)\\<in>set (step q (ss ! q)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q;\n        (a, ba) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> p < n\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> ss ! a \\<in> A\n 3. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! a", "apply (blast intro: pres_typeD dest: boundedD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> ss ! a \\<in> A\n 2. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! a", "apply (blast intro: listE_nth_in dest: boundedD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>pres_type step n A; bounded step n; ss \\<in> list n A;\n        p \\<in> w; \\<forall>q\\<in>w. q < n; q < n;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow>\n           s' \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q;\n        \\<forall>s'.\n           (q, s') \\<in> set (step p (ss ! p)) \\<longrightarrow> s' \\<in> A;\n        (a, b) \\<in> set (step q (merges f (step p (ss ! p)) ss ! q));\n        (a, b) \\<in> set (step q (ss ! q)); q \\<notin> w;\n        \\<forall>x\\<in>set (step q (ss ! q)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! a", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma (in Semilat) merges_bounded_lemma:\n \"\\<lbrakk> mono r step n A; bounded step n; \n    \\<forall>(p',s') \\<in> set (step p (ss!p)). s' \\<in> A; ss \\<in> list n A; ts \\<in> list n A; p < n; \n    ss [\\<sqsubseteq>\\<^sub>r] ts; \\<forall>p. p < n \\<longrightarrow> stable r step ts p \\<rbrakk> \n  \\<Longrightarrow> merges f (step p (ss!p)) ss [\\<sqsubseteq>\\<^sub>r] ts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SemilatAlg.mono r step n A; bounded step n;\n     \\<forall>(p', s')\\<in>set (step p (ss ! p)). s' \\<in> A;\n     ss \\<in> list n A; ts \\<in> list n A; p < n;\n     ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n     \\<forall>p<n. stable r step ts p\\<rbrakk>\n    \\<Longrightarrow> merges f (step p (ss ! p)) ss \n                      [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SemilatAlg.mono r step n A; bounded step n;\n     \\<forall>(p', s')\\<in>set (step p (ss ! p)). s' \\<in> A;\n     ss \\<in> list n A; ts \\<in> list n A; p < n;\n     ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n     \\<forall>p<n. stable r step ts p\\<rbrakk>\n    \\<Longrightarrow> merges f (step p (ss ! p)) ss \n                      [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts", "apply (unfold stable_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SemilatAlg.mono r step n A; bounded step n;\n     \\<forall>(p', s')\\<in>set (step p (ss ! p)). s' \\<in> A;\n     ss \\<in> list n A; ts \\<in> list n A; p < n;\n     ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n     \\<forall>p<n.\n        \\<forall>(q, \\<tau>)\\<in>set (step p (ts ! p)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q\\<rbrakk>\n    \\<Longrightarrow> merges f (step p (ss ! p)) ss \n                      [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts", "apply (rule merges_pres_le_ub)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>SemilatAlg.mono r step n A; bounded step n;\n     \\<forall>(p', s')\\<in>set (step p (ss ! p)). s' \\<in> A;\n     ss \\<in> list n A; ts \\<in> list n A; p < n;\n     ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n     \\<forall>p<n.\n        \\<forall>(q, \\<tau>)\\<in>set (step p (ts ! p)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q\\<rbrakk>\n    \\<Longrightarrow> set ts \\<subseteq> A\n 2. \\<lbrakk>SemilatAlg.mono r step n A; bounded step n;\n     \\<forall>(p', s')\\<in>set (step p (ss ! p)). s' \\<in> A;\n     ss \\<in> list n A; ts \\<in> list n A; p < n;\n     ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n     \\<forall>p<n.\n        \\<forall>(q, \\<tau>)\\<in>set (step p (ts ! p)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q\\<rbrakk>\n    \\<Longrightarrow> set ss \\<subseteq> A\n 3. \\<lbrakk>SemilatAlg.mono r step n A; bounded step n;\n     \\<forall>(p', s')\\<in>set (step p (ss ! p)). s' \\<in> A;\n     ss \\<in> list n A; ts \\<in> list n A; p < n;\n     ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n     \\<forall>p<n.\n        \\<forall>(q, \\<tau>)\\<in>set (step p (ts ! p)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>(p, t)\\<in>set (step p (ss ! p)).\n                         t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p \\<and>\n                         t \\<in> A \\<and> p < length ts\n 4. \\<lbrakk>SemilatAlg.mono r step n A; bounded step n;\n     \\<forall>(p', s')\\<in>set (step p (ss ! p)). s' \\<in> A;\n     ss \\<in> list n A; ts \\<in> list n A; p < n;\n     ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n     \\<forall>p<n.\n        \\<forall>(q, \\<tau>)\\<in>set (step p (ts ! p)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q\\<rbrakk>\n    \\<Longrightarrow> ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>SemilatAlg.mono r step n A; bounded step n;\n     \\<forall>(p', s')\\<in>set (step p (ss ! p)). s' \\<in> A;\n     ss \\<in> list n A; ts \\<in> list n A; p < n;\n     ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n     \\<forall>p<n.\n        \\<forall>(q, \\<tau>)\\<in>set (step p (ts ! p)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q\\<rbrakk>\n    \\<Longrightarrow> set ss \\<subseteq> A\n 2. \\<lbrakk>SemilatAlg.mono r step n A; bounded step n;\n     \\<forall>(p', s')\\<in>set (step p (ss ! p)). s' \\<in> A;\n     ss \\<in> list n A; ts \\<in> list n A; p < n;\n     ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n     \\<forall>p<n.\n        \\<forall>(q, \\<tau>)\\<in>set (step p (ts ! p)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>(p, t)\\<in>set (step p (ss ! p)).\n                         t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p \\<and>\n                         t \\<in> A \\<and> p < length ts\n 3. \\<lbrakk>SemilatAlg.mono r step n A; bounded step n;\n     \\<forall>(p', s')\\<in>set (step p (ss ! p)). s' \\<in> A;\n     ss \\<in> list n A; ts \\<in> list n A; p < n;\n     ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n     \\<forall>p<n.\n        \\<forall>(q, \\<tau>)\\<in>set (step p (ts ! p)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q\\<rbrakk>\n    \\<Longrightarrow> ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>SemilatAlg.mono r step n A; bounded step n;\n     \\<forall>(p', s')\\<in>set (step p (ss ! p)). s' \\<in> A;\n     ss \\<in> list n A; ts \\<in> list n A; p < n;\n     ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n     \\<forall>p<n.\n        \\<forall>(q, \\<tau>)\\<in>set (step p (ts ! p)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>(p, t)\\<in>set (step p (ss ! p)).\n                         t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p \\<and>\n                         t \\<in> A \\<and> p < length ts\n 2. \\<lbrakk>SemilatAlg.mono r step n A; bounded step n;\n     \\<forall>(p', s')\\<in>set (step p (ss ! p)). s' \\<in> A;\n     ss \\<in> list n A; ts \\<in> list n A; p < n;\n     ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n     \\<forall>p<n.\n        \\<forall>(q, \\<tau>)\\<in>set (step p (ts ! p)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q\\<rbrakk>\n    \\<Longrightarrow> ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>SemilatAlg.mono r step n A; bounded step n;\n     \\<forall>(p', s')\\<in>set (step p (ss ! p)). s' \\<in> A;\n     ss \\<in> list n A; ts \\<in> list n A; p < n;\n     ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n     \\<forall>p<n.\n        \\<forall>(q, \\<tau>)\\<in>set (step p (ts ! p)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q\\<rbrakk>\n    \\<Longrightarrow> ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts\n 2. \\<lbrakk>SemilatAlg.mono r step n A; bounded step n;\n     \\<forall>(p', s')\\<in>set (step p (ss ! p)). s' \\<in> A;\n     ss \\<in> list n A; ts \\<in> list n A; p < n;\n     ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n     \\<forall>p<n.\n        \\<forall>(q, \\<tau>)\\<in>set (step p (ts ! p)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>(p, t)\\<in>set (step p (ss ! p)).\n                         t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p \\<and>\n                         t \\<in> A \\<and> p < length ts", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SemilatAlg.mono r step n A; bounded step n;\n     \\<forall>(p', s')\\<in>set (step p (ss ! p)). s' \\<in> A;\n     ss \\<in> list n A; ts \\<in> list n A; p < n;\n     ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n     \\<forall>p<n.\n        \\<forall>(q, \\<tau>)\\<in>set (step p (ts ! p)).\n           \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q\\<rbrakk>\n    \\<Longrightarrow> \\<forall>(p, t)\\<in>set (step p (ss ! p)).\n                         t \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p \\<and>\n                         t \\<in> A \\<and> p < length ts", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>x\\<in>set (step p (ss ! p)).\n           case x of (p', s') \\<Rightarrow> s' \\<in> A;\n        ss \\<in> list n A; ts \\<in> list n A; p < n;\n        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p<n.\n           \\<forall>x\\<in>set (step p (ts ! p)).\n              case x of\n              (q, \\<tau>) \\<Rightarrow>\n                \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q;\n        (a, b) \\<in> set (step p (ss ! p))\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! a \\<and>\n                         b \\<in> A \\<and> a < n", "apply (drule boundedD, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>SemilatAlg.mono r step n A;\n        \\<forall>x\\<in>set (step p (ss ! p)).\n           case x of (p', s') \\<Rightarrow> s' \\<in> A;\n        ss \\<in> list n A; ts \\<in> list n A; p < n;\n        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p<n.\n           \\<forall>x\\<in>set (step p (ts ! p)).\n              case x of\n              (q, \\<tau>) \\<Rightarrow>\n                \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q;\n        (a, b) \\<in> set (step p (ss ! p)); a < n\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! a \\<and>\n                         b \\<in> A \\<and> a < n", "apply (erule allE, erule impE, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>SemilatAlg.mono r step n A;\n        \\<forall>x\\<in>set (step p (ss ! p)).\n           case x of (p', s') \\<Rightarrow> s' \\<in> A;\n        ss \\<in> list n A; ts \\<in> list n A; p < n;\n        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        (a, b) \\<in> set (step p (ss ! p)); a < n;\n        \\<forall>x\\<in>set (step p (ts ! p)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! a \\<and>\n                         b \\<in> A \\<and> a < n", "apply (drule bspec, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>SemilatAlg.mono r step n A; ss \\<in> list n A;\n        ts \\<in> list n A; p < n; ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        (a, b) \\<in> set (step p (ss ! p)); a < n;\n        \\<forall>x\\<in>set (step p (ts ! p)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q;\n        case (a, b) of (p', s') \\<Rightarrow> s' \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! a \\<and>\n                         b \\<in> A \\<and> a < n", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>SemilatAlg.mono r step n A; ss \\<in> list n A;\n        ts \\<in> list n A; p < n; ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        (a, b) \\<in> set (step p (ss ! p)); a < n;\n        \\<forall>x\\<in>set (step p (ts ! p)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q;\n        b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! a", "apply (drule monoD [of _ _ _ _ p \"ss!p\"  \"ts!p\"])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>ss \\<in> list n A; ts \\<in> list n A; p < n;\n        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        (a, b) \\<in> set (step p (ss ! p)); a < n;\n        \\<forall>x\\<in>set (step p (ts ! p)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q;\n        b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> p < n\n 2. \\<And>a b.\n       \\<lbrakk>ss \\<in> list n A; ts \\<in> list n A; p < n;\n        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        (a, b) \\<in> set (step p (ss ! p)); a < n;\n        \\<forall>x\\<in>set (step p (ts ! p)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q;\n        b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ss ! p \\<in> A\n 3. \\<And>a b.\n       \\<lbrakk>ss \\<in> list n A; ts \\<in> list n A; p < n;\n        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        (a, b) \\<in> set (step p (ss ! p)); a < n;\n        \\<forall>x\\<in>set (step p (ts ! p)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q;\n        b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ss ! p \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p\n 4. \\<And>a b.\n       \\<lbrakk>ss \\<in> list n A; ts \\<in> list n A; p < n;\n        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        (a, b) \\<in> set (step p (ss ! p)); a < n;\n        \\<forall>x\\<in>set (step p (ts ! p)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q;\n        b \\<in> A;\n        set (step p (ss ! p)) \n        {\\<sqsubseteq>\\<^bsub>r\\<^esub>} set (step p (ts ! p))\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! a", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>ss \\<in> list n A; ts \\<in> list n A; p < n;\n        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        (a, b) \\<in> set (step p (ss ! p)); a < n;\n        \\<forall>x\\<in>set (step p (ts ! p)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q;\n        b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ss ! p \\<in> A\n 2. \\<And>a b.\n       \\<lbrakk>ss \\<in> list n A; ts \\<in> list n A; p < n;\n        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        (a, b) \\<in> set (step p (ss ! p)); a < n;\n        \\<forall>x\\<in>set (step p (ts ! p)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q;\n        b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ss ! p \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p\n 3. \\<And>a b.\n       \\<lbrakk>ss \\<in> list n A; ts \\<in> list n A; p < n;\n        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        (a, b) \\<in> set (step p (ss ! p)); a < n;\n        \\<forall>x\\<in>set (step p (ts ! p)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q;\n        b \\<in> A;\n        set (step p (ss ! p)) \n        {\\<sqsubseteq>\\<^bsub>r\\<^esub>} set (step p (ts ! p))\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! a", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>ss \\<in> list n A; ts \\<in> list n A; p < n;\n        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        (a, b) \\<in> set (step p (ss ! p)); a < n;\n        \\<forall>x\\<in>set (step p (ts ! p)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q;\n        b \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ss ! p \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! p\n 2. \\<And>a b.\n       \\<lbrakk>ss \\<in> list n A; ts \\<in> list n A; p < n;\n        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        (a, b) \\<in> set (step p (ss ! p)); a < n;\n        \\<forall>x\\<in>set (step p (ts ! p)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q;\n        b \\<in> A;\n        set (step p (ss ! p)) \n        {\\<sqsubseteq>\\<^bsub>r\\<^esub>} set (step p (ts ! p))\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! a", "apply (simp add: le_listD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>ss \\<in> list n A; ts \\<in> list n A; p < n;\n        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        (a, b) \\<in> set (step p (ss ! p)); a < n;\n        \\<forall>x\\<in>set (step p (ts ! p)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q;\n        b \\<in> A;\n        set (step p (ss ! p)) \n        {\\<sqsubseteq>\\<^bsub>r\\<^esub>} set (step p (ts ! p))\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! a", "apply (drule lesub_step_typeD, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>ss \\<in> list n A; ts \\<in> list n A; p < n;\n        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        (a, b) \\<in> set (step p (ss ! p)); a < n;\n        \\<forall>x\\<in>set (step p (ts ! p)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q;\n        b \\<in> A;\n        \\<exists>y'.\n           (a, y') \\<in> set (step p (ts ! p)) \\<and>\n           b \\<sqsubseteq>\\<^bsub>r\\<^esub> y'\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! a", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b y'.\n       \\<lbrakk>ss \\<in> list n A; ts \\<in> list n A; p < n;\n        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        (a, b) \\<in> set (step p (ss ! p)); a < n;\n        \\<forall>x\\<in>set (step p (ts ! p)).\n           case x of\n           (q, \\<tau>) \\<Rightarrow>\n             \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q;\n        b \\<in> A; (a, y') \\<in> set (step p (ts ! p));\n        b \\<sqsubseteq>\\<^bsub>r\\<^esub> y'\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! a", "apply (drule bspec, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b y'.\n       \\<lbrakk>ss \\<in> list n A; ts \\<in> list n A; p < n;\n        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        (a, b) \\<in> set (step p (ss ! p)); a < n; b \\<in> A;\n        (a, y') \\<in> set (step p (ts ! p));\n        b \\<sqsubseteq>\\<^bsub>r\\<^esub> y';\n        case (a, y') of\n        (q, \\<tau>) \\<Rightarrow>\n          \\<tau> \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! q\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! a", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b y'.\n       \\<lbrakk>ss \\<in> list n A; ts \\<in> list n A; p < n;\n        ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        (a, b) \\<in> set (step p (ss ! p)); a < n; b \\<in> A;\n        (a, y') \\<in> set (step p (ts ! p));\n        b \\<sqsubseteq>\\<^bsub>r\\<^esub> y';\n        y' \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! a\\<rbrakk>\n       \\<Longrightarrow> b \\<sqsubseteq>\\<^bsub>r\\<^esub> ts ! a", "apply (blast intro: order_trans)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma termination_lemma: assumes \"Semilat A r f\"\nshows \"\\<lbrakk> ss \\<in> list n A; \\<forall>(q,t)\\<in>set qs. q<n \\<and> t\\<in>A; p\\<in>w \\<rbrakk> \\<Longrightarrow> \n      ss [\\<sqsubset>\\<^sub>r] merges f qs ss \\<or> \n  merges f qs ss = ss \\<and> {q. \\<exists>t. (q,t)\\<in>set qs \\<and> t \\<squnion>\\<^bsub>f\\<^esub> ss!q \\<noteq> ss!q} \\<union> (w-{p}) \\<subset> w\"\n(*<*) (is \"PROP ?P\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ss \\<in> list n A;\n     \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w\\<rbrakk>\n    \\<Longrightarrow> ss [\\<sqsubset>\\<^bsub>r\\<^esub>] merges f qs ss \\<or>\n                      merges f qs ss = ss \\<and>\n                      {q. \\<exists>t.\n                             (q, t) \\<in> set qs \\<and>\n                             t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                             ss ! q} \\<union>\n                      (w - {p})\n                      \\<subset> w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>ss \\<in> list n A;\n     \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w\\<rbrakk>\n    \\<Longrightarrow> ss [\\<sqsubset>\\<^bsub>r\\<^esub>] merges f qs ss \\<or>\n                      merges f qs ss = ss \\<and>\n                      {q. \\<exists>t.\n                             (q, t) \\<in> set qs \\<and>\n                             t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                             ss ! q} \\<union>\n                      (w - {p})\n                      \\<subset> w", "interpret Semilat A r f"], ["proof (prove)\ngoal (1 subgoal):\n 1. Semilat A r f", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>ss \\<in> list n A;\n     \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w\\<rbrakk>\n    \\<Longrightarrow> ss [\\<sqsubset>\\<^bsub>r\\<^esub>] merges f qs ss \\<or>\n                      merges f qs ss = ss \\<and>\n                      {q. \\<exists>t.\n                             (q, t) \\<in> set qs \\<and>\n                             t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                             ss ! q} \\<union>\n                      (w - {p})\n                      \\<subset> w", "show \"PROP ?P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ss \\<in> list n A;\n     \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w\\<rbrakk>\n    \\<Longrightarrow> ss [\\<sqsubset>\\<^bsub>r\\<^esub>] merges f qs ss \\<or>\n                      merges f qs ss = ss \\<and>\n                      {q. \\<exists>t.\n                             (q, t) \\<in> set qs \\<and>\n                             t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                             ss ! q} \\<union>\n                      (w - {p})\n                      \\<subset> w", "apply(insert semilat)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ss \\<in> list n A;\n     \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> ss [\\<sqsubset>\\<^bsub>r\\<^esub>] merges f qs ss \\<or>\n                      merges f qs ss = ss \\<and>\n                      {q. \\<exists>t.\n                             (q, t) \\<in> set qs \\<and>\n                             t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                             ss ! q} \\<union>\n                      (w - {p})\n                      \\<subset> w", "apply (unfold lesssub_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ss \\<in> list n A;\n     \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f qs\n                     ss \\<and>\n                      ss \\<noteq> merges f qs ss \\<or>\n                      merges f qs ss = ss \\<and>\n                      {q. \\<exists>t.\n                             (q, t) \\<in> set qs \\<and>\n                             t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                             ss ! q} \\<union>\n                      (w - {p})\n                      \\<subset> w", "apply (simp (no_asm_simp) add: merges_incr)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ss \\<in> list n A;\n     \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> ss = merges f qs ss \\<longrightarrow>\n                      {q. \\<exists>t.\n                             (q, t) \\<in> set qs \\<and>\n                             t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                             ss ! q} \\<union>\n                      (w - {p})\n                      \\<subset> w", "apply (rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ss \\<in> list n A;\n     \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w;\n     semilat (A, r, f); ss = merges f qs ss\\<rbrakk>\n    \\<Longrightarrow> {q. \\<exists>t.\n                             (q, t) \\<in> set qs \\<and>\n                             t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                             ss ! q} \\<union>\n                      (w - {p})\n                      \\<subset> w", "apply (rule merges_same_conv [THEN iffD1, elim_format])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>ss \\<in> list n A;\n     \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w;\n     semilat (A, r, f); ss = merges f qs ss\\<rbrakk>\n    \\<Longrightarrow> ?xs13 \\<in> list ?n13 A\n 2. \\<And>x.\n       \\<lbrakk>ss \\<in> list n A;\n        \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w;\n        semilat (A, r, f); ss = merges f qs ss; x \\<in> set ?ps13\\<rbrakk>\n       \\<Longrightarrow> case x of\n                         (p, x) \\<Rightarrow>\n                           p < length ?xs13 \\<and> x \\<in> A\n 3. \\<lbrakk>ss \\<in> list n A;\n     \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w;\n     semilat (A, r, f); ss = merges f qs ss\\<rbrakk>\n    \\<Longrightarrow> merges f ?ps13 ?xs13 = ?xs13\n 4. \\<lbrakk>ss \\<in> list n A;\n     \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w;\n     semilat (A, r, f); ss = merges f qs ss;\n     \\<forall>(p, x)\\<in>set ?ps13.\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> ?xs13 ! p\\<rbrakk>\n    \\<Longrightarrow> {q. \\<exists>t.\n                             (q, t) \\<in> set qs \\<and>\n                             t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                             ss ! q} \\<union>\n                      (w - {p})\n                      \\<subset> w", "apply assumption+"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>ss \\<in> list n A;\n        \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w;\n        semilat (A, r, f); ss = merges f qs ss; x \\<in> set ?ps13\\<rbrakk>\n       \\<Longrightarrow> case x of\n                         (p, x) \\<Rightarrow> p < length ss \\<and> x \\<in> A\n 2. \\<lbrakk>ss \\<in> list n A;\n     \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w;\n     semilat (A, r, f); ss = merges f qs ss\\<rbrakk>\n    \\<Longrightarrow> merges f ?ps13 ss = ss\n 3. \\<lbrakk>ss \\<in> list n A;\n     \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w;\n     semilat (A, r, f); ss = merges f qs ss;\n     \\<forall>(p, x)\\<in>set ?ps13.\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! p\\<rbrakk>\n    \\<Longrightarrow> {q. \\<exists>t.\n                             (q, t) \\<in> set qs \\<and>\n                             t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                             ss ! q} \\<union>\n                      (w - {p})\n                      \\<subset> w", "defer"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>ss \\<in> list n A;\n     \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w;\n     semilat (A, r, f); ss = merges f qs ss\\<rbrakk>\n    \\<Longrightarrow> merges f ?ps13 ss = ss\n 2. \\<lbrakk>ss \\<in> list n A;\n     \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w;\n     semilat (A, r, f); ss = merges f qs ss;\n     \\<forall>(p, x)\\<in>set ?ps13.\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! p\\<rbrakk>\n    \\<Longrightarrow> {q. \\<exists>t.\n                             (q, t) \\<in> set qs \\<and>\n                             t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                             ss ! q} \\<union>\n                      (w - {p})\n                      \\<subset> w\n 3. \\<And>x.\n       \\<lbrakk>ss \\<in> list n A;\n        \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w;\n        semilat (A, r, f); ss = merges f qs ss; x \\<in> set ?ps13\\<rbrakk>\n       \\<Longrightarrow> case x of\n                         (p, x) \\<Rightarrow> p < length ss \\<and> x \\<in> A", "apply (rule sym, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ss \\<in> list n A;\n     \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w;\n     semilat (A, r, f); ss = merges f qs ss;\n     \\<forall>(p, x)\\<in>set qs.\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! p\\<rbrakk>\n    \\<Longrightarrow> {q. \\<exists>t.\n                             (q, t) \\<in> set qs \\<and>\n                             t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                             ss ! q} \\<union>\n                      (w - {p})\n                      \\<subset> w\n 2. \\<And>x.\n       \\<lbrakk>ss \\<in> list n A;\n        \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w;\n        semilat (A, r, f); ss = merges f qs ss; x \\<in> set qs\\<rbrakk>\n       \\<Longrightarrow> case x of\n                         (p, x) \\<Rightarrow> p < length ss \\<and> x \\<in> A", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>ss \\<in> list n A;\n        \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w;\n        semilat (A, r, f); ss = merges f qs ss; x \\<in> set qs\\<rbrakk>\n       \\<Longrightarrow> case x of\n                         (p, x) \\<Rightarrow> p < length ss \\<and> x \\<in> A\n 2. \\<lbrakk>ss \\<in> list n A;\n     \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w;\n     semilat (A, r, f); ss = merges f qs ss;\n     \\<forall>(p, x)\\<in>set qs.\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! p\\<rbrakk>\n    \\<Longrightarrow> {q. \\<exists>t.\n                             (q, t) \\<in> set qs \\<and>\n                             t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                             ss ! q} \\<union>\n                      (w - {p})\n                      \\<subset> w", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ss \\<in> list n A;\n     \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w;\n     semilat (A, r, f); ss = merges f qs ss;\n     \\<forall>(p, x)\\<in>set qs.\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! p\\<rbrakk>\n    \\<Longrightarrow> {q. \\<exists>t.\n                             (q, t) \\<in> set qs \\<and>\n                             t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                             ss ! q} \\<union>\n                      (w - {p})\n                      \\<subset> w", "apply (subgoal_tac \"\\<forall>q t. \\<not>((q, t) \\<in> set qs \\<and> t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ss \\<in> list n A;\n     \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w;\n     semilat (A, r, f); ss = merges f qs ss;\n     \\<forall>(p, x)\\<in>set qs. x \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! p;\n     \\<forall>q t.\n        \\<not> ((q, t) \\<in> set qs \\<and>\n                t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                ss ! q)\\<rbrakk>\n    \\<Longrightarrow> {q. \\<exists>t.\n                             (q, t) \\<in> set qs \\<and>\n                             t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                             ss ! q} \\<union>\n                      (w - {p})\n                      \\<subset> w\n 2. \\<lbrakk>ss \\<in> list n A;\n     \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w;\n     semilat (A, r, f); ss = merges f qs ss;\n     \\<forall>(p, x)\\<in>set qs.\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! p\\<rbrakk>\n    \\<Longrightarrow> \\<forall>q t.\n                         \\<not> ((q, t) \\<in> set qs \\<and>\n                                 t \\<squnion>\\<^bsub>f\\<^esub> ss !\n                         q \\<noteq>\n                                 ss ! q)", "apply (blast intro!: psubsetI elim: equalityE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ss \\<in> list n A;\n     \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w;\n     semilat (A, r, f); ss = merges f qs ss;\n     \\<forall>(p, x)\\<in>set qs.\n        x \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! p\\<rbrakk>\n    \\<Longrightarrow> \\<forall>q t.\n                         \\<not> ((q, t) \\<in> set qs \\<and>\n                                 t \\<squnion>\\<^bsub>f\\<^esub> ss !\n                         q \\<noteq>\n                                 ss ! q)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>q t.\n       \\<lbrakk>ss \\<in> list n A;\n        \\<forall>x\\<in>set qs.\n           case x of (q, t) \\<Rightarrow> q < n \\<and> t \\<in> A;\n        p \\<in> w; semilat (A, r, f); ss = merges f qs ss;\n        \\<forall>x\\<in>set qs.\n           case x of\n           (p, x) \\<Rightarrow> x \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! p;\n        (q, t) \\<in> set qs\\<rbrakk>\n       \\<Longrightarrow> t \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q", "apply (drule bspec, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>q t.\n       \\<lbrakk>ss \\<in> list n A; p \\<in> w; semilat (A, r, f);\n        ss = merges f qs ss;\n        \\<forall>x\\<in>set qs.\n           case x of\n           (p, x) \\<Rightarrow> x \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! p;\n        (q, t) \\<in> set qs;\n        case (q, t) of (q, t) \\<Rightarrow> q < n \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> t \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q", "apply (drule bspec, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>q t.\n       \\<lbrakk>ss \\<in> list n A; p \\<in> w; semilat (A, r, f);\n        ss = merges f qs ss; (q, t) \\<in> set qs;\n        case (q, t) of (q, t) \\<Rightarrow> q < n \\<and> t \\<in> A;\n        case (q, t) of\n        (p, x) \\<Rightarrow>\n          x \\<sqsubseteq>\\<^bsub>r\\<^esub> ss ! p\\<rbrakk>\n       \\<Longrightarrow> t \\<squnion>\\<^bsub>f\\<^esub> ss ! q = ss ! q", "apply clarsimp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<lbrakk>ss \\<in> list n A;\n   \\<forall>(q, t)\\<in>set qs. q < n \\<and> t \\<in> A; p \\<in> w\\<rbrakk>\n  \\<Longrightarrow> ss [\\<sqsubset>\\<^bsub>r\\<^esub>] merges f qs ss \\<or>\n                    merges f qs ss = ss \\<and>\n                    {q. \\<exists>t.\n                           (q, t) \\<in> set qs \\<and>\n                           t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq>\n                           ss ! q} \\<union>\n                    (w - {p})\n                    \\<subset> w\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma iter_properties[rule_format]: assumes \"Semilat A r f\"\nshows \"\\<lbrakk> acc r; pres_type step n A; mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p \\<rbrakk> \\<Longrightarrow>\n   iter f step ss0 w0 = (ss',w')\n   \\<longrightarrow>\n   ss' \\<in> list n A \\<and> stables r step ss' \\<and> ss0 [\\<sqsubseteq>\\<^sub>r] ss' \\<and>\n   (\\<forall>ts\\<in>list n A. ss0 [\\<sqsubseteq>\\<^sub>r] ts \\<and> stables r step ts \\<longrightarrow> ss' [\\<sqsubseteq>\\<^sub>r] ts)\"\n(*<*) (is \"PROP ?P\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n.\n        p \\<notin> w0 \\<longrightarrow> stable r step ss0 p\\<rbrakk>\n    \\<Longrightarrow> iter f step ss0 w0 = (ss', w') \\<longrightarrow>\n                      ss' \\<in> list n A \\<and>\n                      stables r step ss' \\<and>\n                      ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                      (\\<forall>ts\\<in>list n A.\n                          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                          stables r step ts \\<longrightarrow>\n                          ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n.\n        p \\<notin> w0 \\<longrightarrow> stable r step ss0 p\\<rbrakk>\n    \\<Longrightarrow> iter f step ss0 w0 = (ss', w') \\<longrightarrow>\n                      ss' \\<in> list n A \\<and>\n                      stables r step ss' \\<and>\n                      ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                      (\\<forall>ts\\<in>list n A.\n                          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                          stables r step ts \\<longrightarrow>\n                          ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)", "interpret Semilat A r f"], ["proof (prove)\ngoal (1 subgoal):\n 1. Semilat A r f", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n.\n        p \\<notin> w0 \\<longrightarrow> stable r step ss0 p\\<rbrakk>\n    \\<Longrightarrow> iter f step ss0 w0 = (ss', w') \\<longrightarrow>\n                      ss' \\<in> list n A \\<and>\n                      stables r step ss' \\<and>\n                      ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                      (\\<forall>ts\\<in>list n A.\n                          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                          stables r step ts \\<longrightarrow>\n                          ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)", "show \"PROP ?P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n.\n        p \\<notin> w0 \\<longrightarrow> stable r step ss0 p\\<rbrakk>\n    \\<Longrightarrow> iter f step ss0 w0 = (ss', w') \\<longrightarrow>\n                      ss' \\<in> list n A \\<and>\n                      stables r step ss' \\<and>\n                      ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                      (\\<forall>ts\\<in>list n A.\n                          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                          stables r step ts \\<longrightarrow>\n                          ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)", "apply(insert semilat)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> iter f step ss0 w0 = (ss', w') \\<longrightarrow>\n                      ss' \\<in> list n A \\<and>\n                      stables r step ss' \\<and>\n                      ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                      (\\<forall>ts\\<in>list n A.\n                          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                          stables r step ts \\<longrightarrow>\n                          ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)", "apply (unfold iter_def stables_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> while (\\<lambda>(\\<tau>s, w). w \\<noteq> {})\n                       (\\<lambda>(\\<tau>s, w).\n                           let p = SOME p. p \\<in> w\n                           in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                               (w - {p}))\n                       (ss0, w0) =\n                      (ss', w') \\<longrightarrow>\n                      ss' \\<in> list n A \\<and>\n                      (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                      ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                      (\\<forall>ts\\<in>list n A.\n                          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                          (\\<forall>p<length ts.\n                              stable r step ts p) \\<longrightarrow>\n                          ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)", "apply (rule_tac P = \"\\<lambda>(ss,w).\n   ss \\<in> list n A \\<and> (\\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and> ss0 [\\<sqsubseteq>\\<^sub>r] ss \\<and>\n   (\\<forall>ts\\<in>list n A. ss0 [\\<sqsubseteq>\\<^sub>r] ts \\<and> stables r step ts \\<longrightarrow> ss [\\<sqsubseteq>\\<^sub>r] ts) \\<and>\n   (\\<forall>p\\<in>w. p < n)\" and\n   r = \"{(ss',ss) . ss [\\<sqsubset>\\<^sub>r] ss'} <*lex*> finite_psubset\"\n         in while_rule)\n\n  \\<comment> \\<open>Invariant holds initially:\\<close>"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> case (ss0, w0) of\n                      (ss, w) \\<Rightarrow>\n                        ss \\<in> list n A \\<and>\n                        (\\<forall>p<n.\n                            p \\<notin> w \\<longrightarrow>\n                            stable r step ss p) \\<and>\n                        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n                        (\\<forall>ts\\<in>list n A.\n                            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                            stables r step ts \\<longrightarrow>\n                            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                        (\\<forall>p\\<in>w. p < n)\n 2. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> case case s of\n                              (\\<tau>s, w) \\<Rightarrow>\n                                let p = SOME p. p \\<in> w\n                                in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                    (w - {p}) of\n                         (ss, w) \\<Rightarrow>\n                           ss \\<in> list n A \\<and>\n                           (\\<forall>p<n.\n                               p \\<notin> w \\<longrightarrow>\n                               stable r step ss p) \\<and>\n                           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n                           (\\<forall>ts\\<in>list n A.\n                               ss0 \n                               [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                               stables r step ts \\<longrightarrow>\n                               ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                           (\\<forall>p\\<in>w. p < n)\n 3. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 4. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 5. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (simp add:stables_def)\n\n  \\<comment> \\<open>Invariant is preserved:\\<close>"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> case case s of\n                              (\\<tau>s, w) \\<Rightarrow>\n                                let p = SOME p. p \\<in> w\n                                in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                    (w - {p}) of\n                         (ss, w) \\<Rightarrow>\n                           ss \\<in> list n A \\<and>\n                           (\\<forall>p<n.\n                               p \\<notin> w \\<longrightarrow>\n                               stable r step ss p) \\<and>\n                           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n                           (\\<forall>ts\\<in>list n A.\n                               ss0 \n                               [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                               stables r step ts \\<longrightarrow>\n                               ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                           (\\<forall>p\\<in>w. p < n)\n 2. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 3. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 4. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply(simp add: stables_def split_paired_all)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        a \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> b \\<longrightarrow> stable r step a p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] a \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            a [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>b. p < n);\n        b \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> case propa f\n                               (step (SOME p. p \\<in> b)\n                                 (a ! (SOME p. p \\<in> b)))\n                               a (b - {SOME p. p \\<in> b}) of\n                         (ss, w) \\<Rightarrow>\n                           ss \\<in> list n A \\<and>\n                           (\\<forall>p<n.\n                               p \\<notin> w \\<longrightarrow>\n                               stable r step ss p) \\<and>\n                           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n                           (\\<forall>ts\\<in>list n A.\n                               ss0 \n                               [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                               (\\<forall>p<n.\n                                   stable r step ts p) \\<longrightarrow>\n                               ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                           (\\<forall>p\\<in>w. p < n)\n 2. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 3. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 4. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply(rename_tac ss w)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> case propa f\n                               (step (SOME p. p \\<in> w)\n                                 (ss ! (SOME p. p \\<in> w)))\n                               ss (w - {SOME p. p \\<in> w}) of\n                         (ss, w) \\<Rightarrow>\n                           ss \\<in> list n A \\<and>\n                           (\\<forall>p<n.\n                               p \\<notin> w \\<longrightarrow>\n                               stable r step ss p) \\<and>\n                           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n                           (\\<forall>ts\\<in>list n A.\n                               ss0 \n                               [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                               (\\<forall>p<n.\n                                   stable r step ts p) \\<longrightarrow>\n                               ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                           (\\<forall>p\\<in>w. p < n)\n 2. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 3. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 4. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply(subgoal_tac \"(SOME p. p \\<in> w) \\<in> w\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w\\<rbrakk>\n       \\<Longrightarrow> case propa f\n                               (step (SOME p. p \\<in> w)\n                                 (ss ! (SOME p. p \\<in> w)))\n                               ss (w - {SOME p. p \\<in> w}) of\n                         (ss, w) \\<Rightarrow>\n                           ss \\<in> list n A \\<and>\n                           (\\<forall>p<n.\n                               p \\<notin> w \\<longrightarrow>\n                               stable r step ss p) \\<and>\n                           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n                           (\\<forall>ts\\<in>list n A.\n                               ss0 \n                               [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                               (\\<forall>p<n.\n                                   stable r step ts p) \\<longrightarrow>\n                               ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                           (\\<forall>p\\<in>w. p < n)\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (SOME p. p \\<in> w) \\<in> w\n 3. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 4. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 5. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "prefer 2"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (SOME p. p \\<in> w) \\<in> w\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w\\<rbrakk>\n       \\<Longrightarrow> case propa f\n                               (step (SOME p. p \\<in> w)\n                                 (ss ! (SOME p. p \\<in> w)))\n                               ss (w - {SOME p. p \\<in> w}) of\n                         (ss, w) \\<Rightarrow>\n                           ss \\<in> list n A \\<and>\n                           (\\<forall>p<n.\n                               p \\<notin> w \\<longrightarrow>\n                               stable r step ss p) \\<and>\n                           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n                           (\\<forall>ts\\<in>list n A.\n                               ss0 \n                               [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                               (\\<forall>p<n.\n                                   stable r step ts p) \\<longrightarrow>\n                               ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                           (\\<forall>p\\<in>w. p < n)\n 3. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 4. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 5. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (fast intro: someI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w\\<rbrakk>\n       \\<Longrightarrow> case propa f\n                               (step (SOME p. p \\<in> w)\n                                 (ss ! (SOME p. p \\<in> w)))\n                               ss (w - {SOME p. p \\<in> w}) of\n                         (ss, w) \\<Rightarrow>\n                           ss \\<in> list n A \\<and>\n                           (\\<forall>p<n.\n                               p \\<notin> w \\<longrightarrow>\n                               stable r step ss p) \\<and>\n                           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n                           (\\<forall>ts\\<in>list n A.\n                               ss0 \n                               [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                               (\\<forall>p<n.\n                                   stable r step ts p) \\<longrightarrow>\n                               ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                           (\\<forall>p\\<in>w. p < n)\n 2. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 3. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 4. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply(subgoal_tac \"\\<forall>(q,t) \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))). q < length ss \\<and> t \\<in> A\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> case propa f\n                               (step (SOME p. p \\<in> w)\n                                 (ss ! (SOME p. p \\<in> w)))\n                               ss (w - {SOME p. p \\<in> w}) of\n                         (ss, w) \\<Rightarrow>\n                           ss \\<in> list n A \\<and>\n                           (\\<forall>p<n.\n                               p \\<notin> w \\<longrightarrow>\n                               stable r step ss p) \\<and>\n                           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n                           (\\<forall>ts\\<in>list n A.\n                               ss0 \n                               [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                               (\\<forall>p<n.\n                                   stable r step ts p) \\<longrightarrow>\n                               ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                           (\\<forall>p\\<in>w. p < n)\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(q, t)\n                                  \\<in>set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))).\n                            q < length ss \\<and> t \\<in> A\n 3. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 4. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 5. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "prefer 2"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(q, t)\n                                  \\<in>set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))).\n                            q < length ss \\<and> t \\<in> A\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> case propa f\n                               (step (SOME p. p \\<in> w)\n                                 (ss ! (SOME p. p \\<in> w)))\n                               ss (w - {SOME p. p \\<in> w}) of\n                         (ss, w) \\<Rightarrow>\n                           ss \\<in> list n A \\<and>\n                           (\\<forall>p<n.\n                               p \\<notin> w \\<longrightarrow>\n                               stable r step ss p) \\<and>\n                           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n                           (\\<forall>ts\\<in>list n A.\n                               ss0 \n                               [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                               (\\<forall>p<n.\n                                   stable r step ts p) \\<longrightarrow>\n                               ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                           (\\<forall>p\\<in>w. p < n)\n 3. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 4. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 5. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply clarify"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> a < length ss \\<and> b \\<in> A\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> case propa f\n                               (step (SOME p. p \\<in> w)\n                                 (ss ! (SOME p. p \\<in> w)))\n                               ss (w - {SOME p. p \\<in> w}) of\n                         (ss, w) \\<Rightarrow>\n                           ss \\<in> list n A \\<and>\n                           (\\<forall>p<n.\n                               p \\<notin> w \\<longrightarrow>\n                               stable r step ss p) \\<and>\n                           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n                           (\\<forall>ts\\<in>list n A.\n                               ss0 \n                               [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                               (\\<forall>p<n.\n                                   stable r step ts p) \\<longrightarrow>\n                               ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                           (\\<forall>p\\<in>w. p < n)\n 3. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 4. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 5. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (rule conjI)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> a < length ss\n 2. \\<And>ss w a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> b \\<in> A\n 3. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> case propa f\n                               (step (SOME p. p \\<in> w)\n                                 (ss ! (SOME p. p \\<in> w)))\n                               ss (w - {SOME p. p \\<in> w}) of\n                         (ss, w) \\<Rightarrow>\n                           ss \\<in> list n A \\<and>\n                           (\\<forall>p<n.\n                               p \\<notin> w \\<longrightarrow>\n                               stable r step ss p) \\<and>\n                           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n                           (\\<forall>ts\\<in>list n A.\n                               ss0 \n                               [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                               (\\<forall>p<n.\n                                   stable r step ts p) \\<longrightarrow>\n                               ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                           (\\<forall>p\\<in>w. p < n)\n 4. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 5. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 6. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply(clarsimp, blast dest!: boundedD)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> b \\<in> A\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> case propa f\n                               (step (SOME p. p \\<in> w)\n                                 (ss ! (SOME p. p \\<in> w)))\n                               ss (w - {SOME p. p \\<in> w}) of\n                         (ss, w) \\<Rightarrow>\n                           ss \\<in> list n A \\<and>\n                           (\\<forall>p<n.\n                               p \\<notin> w \\<longrightarrow>\n                               stable r step ss p) \\<and>\n                           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n                           (\\<forall>ts\\<in>list n A.\n                               ss0 \n                               [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                               (\\<forall>p<n.\n                                   stable r step ts p) \\<longrightarrow>\n                               ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                           (\\<forall>p\\<in>w. p < n)\n 3. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 4. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 5. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (erule pres_typeD)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> ?s181 ss w a b \\<in> A\n 2. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> ?p181 ss w a b < n\n 3. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> (?q181 ss w a b, b)\n                         \\<in> set (step (?p181 ss w a b) (?s181 ss w a b))\n 4. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> case propa f\n                               (step (SOME p. p \\<in> w)\n                                 (ss ! (SOME p. p \\<in> w)))\n                               ss (w - {SOME p. p \\<in> w}) of\n                         (ss, w) \\<Rightarrow>\n                           ss \\<in> list n A \\<and>\n                           (\\<forall>p<n.\n                               p \\<notin> w \\<longrightarrow>\n                               stable r step ss p) \\<and>\n                           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n                           (\\<forall>ts\\<in>list n A.\n                               ss0 \n                               [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                               (\\<forall>p<n.\n                                   stable r step ts p) \\<longrightarrow>\n                               ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                           (\\<forall>p\\<in>w. p < n)\n 5. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 6. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 7. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "prefer 3"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> (?q181 ss w a b, b)\n                         \\<in> set (step (?p181 ss w a b) (?s181 ss w a b))\n 2. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> ?s181 ss w a b \\<in> A\n 3. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> ?p181 ss w a b < n\n 4. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> case propa f\n                               (step (SOME p. p \\<in> w)\n                                 (ss ! (SOME p. p \\<in> w)))\n                               ss (w - {SOME p. p \\<in> w}) of\n                         (ss, w) \\<Rightarrow>\n                           ss \\<in> list n A \\<and>\n                           (\\<forall>p<n.\n                               p \\<notin> w \\<longrightarrow>\n                               stable r step ss p) \\<and>\n                           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n                           (\\<forall>ts\\<in>list n A.\n                               ss0 \n                               [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                               (\\<forall>p<n.\n                                   stable r step ts p) \\<longrightarrow>\n                               ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                           (\\<forall>p\\<in>w. p < n)\n 5. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 6. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 7. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply assumption"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> ss ! (SOME p. p \\<in> w) \\<in> A\n 2. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> (SOME p. p \\<in> w) < n\n 3. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> case propa f\n                               (step (SOME p. p \\<in> w)\n                                 (ss ! (SOME p. p \\<in> w)))\n                               ss (w - {SOME p. p \\<in> w}) of\n                         (ss, w) \\<Rightarrow>\n                           ss \\<in> list n A \\<and>\n                           (\\<forall>p<n.\n                               p \\<notin> w \\<longrightarrow>\n                               stable r step ss p) \\<and>\n                           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n                           (\\<forall>ts\\<in>list n A.\n                               ss0 \n                               [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                               (\\<forall>p<n.\n                                   stable r step ts p) \\<longrightarrow>\n                               ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                           (\\<forall>p\\<in>w. p < n)\n 4. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 5. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 6. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (erule listE_nth_in)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> (SOME p. p \\<in> w) < n\n 2. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> (SOME p. p \\<in> w) < n\n 3. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> case propa f\n                               (step (SOME p. p \\<in> w)\n                                 (ss ! (SOME p. p \\<in> w)))\n                               ss (w - {SOME p. p \\<in> w}) of\n                         (ss, w) \\<Rightarrow>\n                           ss \\<in> list n A \\<and>\n                           (\\<forall>p<n.\n                               p \\<notin> w \\<longrightarrow>\n                               stable r step ss p) \\<and>\n                           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n                           (\\<forall>ts\\<in>list n A.\n                               ss0 \n                               [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                               (\\<forall>p<n.\n                                   stable r step ts p) \\<longrightarrow>\n                               ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                           (\\<forall>p\\<in>w. p < n)\n 4. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 5. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 6. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply blast"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> (SOME p. p \\<in> w) < n\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> case propa f\n                               (step (SOME p. p \\<in> w)\n                                 (ss ! (SOME p. p \\<in> w)))\n                               ss (w - {SOME p. p \\<in> w}) of\n                         (ss, w) \\<Rightarrow>\n                           ss \\<in> list n A \\<and>\n                           (\\<forall>p<n.\n                               p \\<notin> w \\<longrightarrow>\n                               stable r step ss p) \\<and>\n                           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n                           (\\<forall>ts\\<in>list n A.\n                               ss0 \n                               [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                               (\\<forall>p<n.\n                                   stable r step ts p) \\<longrightarrow>\n                               ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                           (\\<forall>p\\<in>w. p < n)\n 3. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 4. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 5. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> case propa f\n                               (step (SOME p. p \\<in> w)\n                                 (ss ! (SOME p. p \\<in> w)))\n                               ss (w - {SOME p. p \\<in> w}) of\n                         (ss, w) \\<Rightarrow>\n                           ss \\<in> list n A \\<and>\n                           (\\<forall>p<n.\n                               p \\<notin> w \\<longrightarrow>\n                               stable r step ss p) \\<and>\n                           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n                           (\\<forall>ts\\<in>list n A.\n                               ss0 \n                               [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                               (\\<forall>p<n.\n                                   stable r step ts p) \\<longrightarrow>\n                               ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                           (\\<forall>p\\<in>w. p < n)\n 2. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 3. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 4. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (subst decomp_propa)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(q, t)\n                                  \\<in>set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))).\n                            q < length ss\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> case (merges f\n                                (step (SOME p. p \\<in> w)\n                                  (ss ! (SOME p. p \\<in> w)))\n                                ss,\n                               {q. \\<exists>t.\n(q, t)\n\\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))) \\<and>\nt \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q} \\<union>\n                               (w - {SOME p. p \\<in> w})) of\n                         (ss, w) \\<Rightarrow>\n                           ss \\<in> list n A \\<and>\n                           (\\<forall>p<n.\n                               p \\<notin> w \\<longrightarrow>\n                               stable r step ss p) \\<and>\n                           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n                           (\\<forall>ts\\<in>list n A.\n                               ss0 \n                               [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                               (\\<forall>p<n.\n                                   stable r step ts p) \\<longrightarrow>\n                               ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                           (\\<forall>p\\<in>w. p < n)\n 3. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 4. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 5. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> case (merges f\n                                (step (SOME p. p \\<in> w)\n                                  (ss ! (SOME p. p \\<in> w)))\n                                ss,\n                               {q. \\<exists>t.\n(q, t)\n\\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))) \\<and>\nt \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q} \\<union>\n                               (w - {SOME p. p \\<in> w})) of\n                         (ss, w) \\<Rightarrow>\n                           ss \\<in> list n A \\<and>\n                           (\\<forall>p<n.\n                               p \\<notin> w \\<longrightarrow>\n                               stable r step ss p) \\<and>\n                           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n                           (\\<forall>ts\\<in>list n A.\n                               ss0 \n                               [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                               (\\<forall>p<n.\n                                   stable r step ts p) \\<longrightarrow>\n                               ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                           (\\<forall>p\\<in>w. p < n)\n 2. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 3. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 4. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> merges f\n                          (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w)))\n                          ss\n                         \\<in> list n A \\<and>\n                         (\\<forall>p<n.\n                             (\\<forall>t.\n                                 (p, t)\n                                 \\<in> set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))) \\<longrightarrow>\n                                 t \\<squnion>\\<^bsub>f\\<^esub> ss ! p =\n                                 ss ! p) \\<and>\n                             (p \\<in> w \\<longrightarrow>\n                              p = (SOME p. p \\<in> w)) \\<longrightarrow>\n                             stable r step\n                              (merges f\n                                (step (SOME p. p \\<in> w)\n                                  (ss ! (SOME p. p \\<in> w)))\n                                ss)\n                              p) \\<and>\n                         ss0 \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f\n                     (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)))\n                     ss \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<n.\n                                 stable r step ts p) \\<longrightarrow>\n                             merges f\n                              (step (SOME p. p \\<in> w)\n                                (ss ! (SOME p. p \\<in> w)))\n                              ss \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                         (\\<forall>p\\<in>{q.\n    \\<exists>t.\n       (q, t)\n       \\<in> set (step (SOME p. p \\<in> w)\n                   (ss ! (SOME p. p \\<in> w))) \\<and>\n       t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q} \\<union>\n   (w - {SOME p. p \\<in> w}).\n                             p < n)\n 2. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 3. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 4. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (rule conjI)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> merges f\n                          (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w)))\n                          ss\n                         \\<in> list n A\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>p<n.\n                             (\\<forall>t.\n                                 (p, t)\n                                 \\<in> set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))) \\<longrightarrow>\n                                 t \\<squnion>\\<^bsub>f\\<^esub> ss ! p =\n                                 ss ! p) \\<and>\n                             (p \\<in> w \\<longrightarrow>\n                              p = (SOME p. p \\<in> w)) \\<longrightarrow>\n                             stable r step\n                              (merges f\n                                (step (SOME p. p \\<in> w)\n                                  (ss ! (SOME p. p \\<in> w)))\n                                ss)\n                              p) \\<and>\n                         ss0 \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f\n                     (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)))\n                     ss \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<n.\n                                 stable r step ts p) \\<longrightarrow>\n                             merges f\n                              (step (SOME p. p \\<in> w)\n                                (ss ! (SOME p. p \\<in> w)))\n                              ss \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                         (\\<forall>p\\<in>{q.\n    \\<exists>t.\n       (q, t)\n       \\<in> set (step (SOME p. p \\<in> w)\n                   (ss ! (SOME p. p \\<in> w))) \\<and>\n       t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q} \\<union>\n   (w - {SOME p. p \\<in> w}).\n                             p < n)\n 3. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 4. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 5. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (rule merges_preserves_type)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ss \\<in> list n A\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(p, x)\n                                  \\<in>set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))).\n                            p < n \\<and> x \\<in> A\n 3. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>p<n.\n                             (\\<forall>t.\n                                 (p, t)\n                                 \\<in> set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))) \\<longrightarrow>\n                                 t \\<squnion>\\<^bsub>f\\<^esub> ss ! p =\n                                 ss ! p) \\<and>\n                             (p \\<in> w \\<longrightarrow>\n                              p = (SOME p. p \\<in> w)) \\<longrightarrow>\n                             stable r step\n                              (merges f\n                                (step (SOME p. p \\<in> w)\n                                  (ss ! (SOME p. p \\<in> w)))\n                                ss)\n                              p) \\<and>\n                         ss0 \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f\n                     (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)))\n                     ss \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<n.\n                                 stable r step ts p) \\<longrightarrow>\n                             merges f\n                              (step (SOME p. p \\<in> w)\n                                (ss ! (SOME p. p \\<in> w)))\n                              ss \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                         (\\<forall>p\\<in>{q.\n    \\<exists>t.\n       (q, t)\n       \\<in> set (step (SOME p. p \\<in> w)\n                   (ss ! (SOME p. p \\<in> w))) \\<and>\n       t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q} \\<union>\n   (w - {SOME p. p \\<in> w}).\n                             p < n)\n 4. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 5. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 6. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply blast"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(p, x)\n                                  \\<in>set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))).\n                            p < n \\<and> x \\<in> A\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>p<n.\n                             (\\<forall>t.\n                                 (p, t)\n                                 \\<in> set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))) \\<longrightarrow>\n                                 t \\<squnion>\\<^bsub>f\\<^esub> ss ! p =\n                                 ss ! p) \\<and>\n                             (p \\<in> w \\<longrightarrow>\n                              p = (SOME p. p \\<in> w)) \\<longrightarrow>\n                             stable r step\n                              (merges f\n                                (step (SOME p. p \\<in> w)\n                                  (ss ! (SOME p. p \\<in> w)))\n                                ss)\n                              p) \\<and>\n                         ss0 \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f\n                     (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)))\n                     ss \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<n.\n                                 stable r step ts p) \\<longrightarrow>\n                             merges f\n                              (step (SOME p. p \\<in> w)\n                                (ss ! (SOME p. p \\<in> w)))\n                              ss \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                         (\\<forall>p\\<in>{q.\n    \\<exists>t.\n       (q, t)\n       \\<in> set (step (SOME p. p \\<in> w)\n                   (ss ! (SOME p. p \\<in> w))) \\<and>\n       t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q} \\<union>\n   (w - {SOME p. p \\<in> w}).\n                             p < n)\n 3. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 4. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 5. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply clarify"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> a < n \\<and> b \\<in> A\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>p<n.\n                             (\\<forall>t.\n                                 (p, t)\n                                 \\<in> set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))) \\<longrightarrow>\n                                 t \\<squnion>\\<^bsub>f\\<^esub> ss ! p =\n                                 ss ! p) \\<and>\n                             (p \\<in> w \\<longrightarrow>\n                              p = (SOME p. p \\<in> w)) \\<longrightarrow>\n                             stable r step\n                              (merges f\n                                (step (SOME p. p \\<in> w)\n                                  (ss ! (SOME p. p \\<in> w)))\n                                ss)\n                              p) \\<and>\n                         ss0 \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f\n                     (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)))\n                     ss \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<n.\n                                 stable r step ts p) \\<longrightarrow>\n                             merges f\n                              (step (SOME p. p \\<in> w)\n                                (ss ! (SOME p. p \\<in> w)))\n                              ss \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                         (\\<forall>p\\<in>{q.\n    \\<exists>t.\n       (q, t)\n       \\<in> set (step (SOME p. p \\<in> w)\n                   (ss ! (SOME p. p \\<in> w))) \\<and>\n       t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q} \\<union>\n   (w - {SOME p. p \\<in> w}).\n                             p < n)\n 3. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 4. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 5. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (rule conjI)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> a < n\n 2. \\<And>ss w a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> b \\<in> A\n 3. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>p<n.\n                             (\\<forall>t.\n                                 (p, t)\n                                 \\<in> set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))) \\<longrightarrow>\n                                 t \\<squnion>\\<^bsub>f\\<^esub> ss ! p =\n                                 ss ! p) \\<and>\n                             (p \\<in> w \\<longrightarrow>\n                              p = (SOME p. p \\<in> w)) \\<longrightarrow>\n                             stable r step\n                              (merges f\n                                (step (SOME p. p \\<in> w)\n                                  (ss ! (SOME p. p \\<in> w)))\n                                ss)\n                              p) \\<and>\n                         ss0 \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f\n                     (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)))\n                     ss \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<n.\n                                 stable r step ts p) \\<longrightarrow>\n                             merges f\n                              (step (SOME p. p \\<in> w)\n                                (ss ! (SOME p. p \\<in> w)))\n                              ss \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                         (\\<forall>p\\<in>{q.\n    \\<exists>t.\n       (q, t)\n       \\<in> set (step (SOME p. p \\<in> w)\n                   (ss ! (SOME p. p \\<in> w))) \\<and>\n       t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q} \\<union>\n   (w - {SOME p. p \\<in> w}).\n                             p < n)\n 4. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 5. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 6. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply(clarsimp, blast dest!: boundedD)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> b \\<in> A\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>p<n.\n                             (\\<forall>t.\n                                 (p, t)\n                                 \\<in> set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))) \\<longrightarrow>\n                                 t \\<squnion>\\<^bsub>f\\<^esub> ss ! p =\n                                 ss ! p) \\<and>\n                             (p \\<in> w \\<longrightarrow>\n                              p = (SOME p. p \\<in> w)) \\<longrightarrow>\n                             stable r step\n                              (merges f\n                                (step (SOME p. p \\<in> w)\n                                  (ss ! (SOME p. p \\<in> w)))\n                                ss)\n                              p) \\<and>\n                         ss0 \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f\n                     (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)))\n                     ss \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<n.\n                                 stable r step ts p) \\<longrightarrow>\n                             merges f\n                              (step (SOME p. p \\<in> w)\n                                (ss ! (SOME p. p \\<in> w)))\n                              ss \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                         (\\<forall>p\\<in>{q.\n    \\<exists>t.\n       (q, t)\n       \\<in> set (step (SOME p. p \\<in> w)\n                   (ss ! (SOME p. p \\<in> w))) \\<and>\n       t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q} \\<union>\n   (w - {SOME p. p \\<in> w}).\n                             p < n)\n 3. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 4. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 5. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (erule pres_typeD)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> ?s1550 ss w a b \\<in> A\n 2. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> ?p1550 ss w a b < n\n 3. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> (?q1550 ss w a b, b)\n                         \\<in> set (step (?p1550 ss w a b)\n                                     (?s1550 ss w a b))\n 4. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>p<n.\n                             (\\<forall>t.\n                                 (p, t)\n                                 \\<in> set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))) \\<longrightarrow>\n                                 t \\<squnion>\\<^bsub>f\\<^esub> ss ! p =\n                                 ss ! p) \\<and>\n                             (p \\<in> w \\<longrightarrow>\n                              p = (SOME p. p \\<in> w)) \\<longrightarrow>\n                             stable r step\n                              (merges f\n                                (step (SOME p. p \\<in> w)\n                                  (ss ! (SOME p. p \\<in> w)))\n                                ss)\n                              p) \\<and>\n                         ss0 \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f\n                     (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)))\n                     ss \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<n.\n                                 stable r step ts p) \\<longrightarrow>\n                             merges f\n                              (step (SOME p. p \\<in> w)\n                                (ss ! (SOME p. p \\<in> w)))\n                              ss \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                         (\\<forall>p\\<in>{q.\n    \\<exists>t.\n       (q, t)\n       \\<in> set (step (SOME p. p \\<in> w)\n                   (ss ! (SOME p. p \\<in> w))) \\<and>\n       t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q} \\<union>\n   (w - {SOME p. p \\<in> w}).\n                             p < n)\n 5. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 6. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 7. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "prefer 3"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> (?q1550 ss w a b, b)\n                         \\<in> set (step (?p1550 ss w a b)\n                                     (?s1550 ss w a b))\n 2. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> ?s1550 ss w a b \\<in> A\n 3. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> ?p1550 ss w a b < n\n 4. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>p<n.\n                             (\\<forall>t.\n                                 (p, t)\n                                 \\<in> set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))) \\<longrightarrow>\n                                 t \\<squnion>\\<^bsub>f\\<^esub> ss ! p =\n                                 ss ! p) \\<and>\n                             (p \\<in> w \\<longrightarrow>\n                              p = (SOME p. p \\<in> w)) \\<longrightarrow>\n                             stable r step\n                              (merges f\n                                (step (SOME p. p \\<in> w)\n                                  (ss ! (SOME p. p \\<in> w)))\n                                ss)\n                              p) \\<and>\n                         ss0 \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f\n                     (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)))\n                     ss \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<n.\n                                 stable r step ts p) \\<longrightarrow>\n                             merges f\n                              (step (SOME p. p \\<in> w)\n                                (ss ! (SOME p. p \\<in> w)))\n                              ss \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                         (\\<forall>p\\<in>{q.\n    \\<exists>t.\n       (q, t)\n       \\<in> set (step (SOME p. p \\<in> w)\n                   (ss ! (SOME p. p \\<in> w))) \\<and>\n       t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q} \\<union>\n   (w - {SOME p. p \\<in> w}).\n                             p < n)\n 5. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 6. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 7. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply assumption"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> ss ! (SOME p. p \\<in> w) \\<in> A\n 2. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> (SOME p. p \\<in> w) < n\n 3. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>p<n.\n                             (\\<forall>t.\n                                 (p, t)\n                                 \\<in> set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))) \\<longrightarrow>\n                                 t \\<squnion>\\<^bsub>f\\<^esub> ss ! p =\n                                 ss ! p) \\<and>\n                             (p \\<in> w \\<longrightarrow>\n                              p = (SOME p. p \\<in> w)) \\<longrightarrow>\n                             stable r step\n                              (merges f\n                                (step (SOME p. p \\<in> w)\n                                  (ss ! (SOME p. p \\<in> w)))\n                                ss)\n                              p) \\<and>\n                         ss0 \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f\n                     (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)))\n                     ss \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<n.\n                                 stable r step ts p) \\<longrightarrow>\n                             merges f\n                              (step (SOME p. p \\<in> w)\n                                (ss ! (SOME p. p \\<in> w)))\n                              ss \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                         (\\<forall>p\\<in>{q.\n    \\<exists>t.\n       (q, t)\n       \\<in> set (step (SOME p. p \\<in> w)\n                   (ss ! (SOME p. p \\<in> w))) \\<and>\n       t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q} \\<union>\n   (w - {SOME p. p \\<in> w}).\n                             p < n)\n 4. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 5. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 6. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (erule listE_nth_in)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> (SOME p. p \\<in> w) < n\n 2. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> (SOME p. p \\<in> w) < n\n 3. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>p<n.\n                             (\\<forall>t.\n                                 (p, t)\n                                 \\<in> set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))) \\<longrightarrow>\n                                 t \\<squnion>\\<^bsub>f\\<^esub> ss ! p =\n                                 ss ! p) \\<and>\n                             (p \\<in> w \\<longrightarrow>\n                              p = (SOME p. p \\<in> w)) \\<longrightarrow>\n                             stable r step\n                              (merges f\n                                (step (SOME p. p \\<in> w)\n                                  (ss ! (SOME p. p \\<in> w)))\n                                ss)\n                              p) \\<and>\n                         ss0 \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f\n                     (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)))\n                     ss \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<n.\n                                 stable r step ts p) \\<longrightarrow>\n                             merges f\n                              (step (SOME p. p \\<in> w)\n                                (ss ! (SOME p. p \\<in> w)))\n                              ss \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                         (\\<forall>p\\<in>{q.\n    \\<exists>t.\n       (q, t)\n       \\<in> set (step (SOME p. p \\<in> w)\n                   (ss ! (SOME p. p \\<in> w))) \\<and>\n       t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q} \\<union>\n   (w - {SOME p. p \\<in> w}).\n                             p < n)\n 4. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 5. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 6. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply blast"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> (SOME p. p \\<in> w) < n\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>p<n.\n                             (\\<forall>t.\n                                 (p, t)\n                                 \\<in> set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))) \\<longrightarrow>\n                                 t \\<squnion>\\<^bsub>f\\<^esub> ss ! p =\n                                 ss ! p) \\<and>\n                             (p \\<in> w \\<longrightarrow>\n                              p = (SOME p. p \\<in> w)) \\<longrightarrow>\n                             stable r step\n                              (merges f\n                                (step (SOME p. p \\<in> w)\n                                  (ss ! (SOME p. p \\<in> w)))\n                                ss)\n                              p) \\<and>\n                         ss0 \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f\n                     (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)))\n                     ss \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<n.\n                                 stable r step ts p) \\<longrightarrow>\n                             merges f\n                              (step (SOME p. p \\<in> w)\n                                (ss ! (SOME p. p \\<in> w)))\n                              ss \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                         (\\<forall>p\\<in>{q.\n    \\<exists>t.\n       (q, t)\n       \\<in> set (step (SOME p. p \\<in> w)\n                   (ss ! (SOME p. p \\<in> w))) \\<and>\n       t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q} \\<union>\n   (w - {SOME p. p \\<in> w}).\n                             p < n)\n 3. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 4. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 5. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>p<n.\n                             (\\<forall>t.\n                                 (p, t)\n                                 \\<in> set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))) \\<longrightarrow>\n                                 t \\<squnion>\\<^bsub>f\\<^esub> ss ! p =\n                                 ss ! p) \\<and>\n                             (p \\<in> w \\<longrightarrow>\n                              p = (SOME p. p \\<in> w)) \\<longrightarrow>\n                             stable r step\n                              (merges f\n                                (step (SOME p. p \\<in> w)\n                                  (ss ! (SOME p. p \\<in> w)))\n                                ss)\n                              p) \\<and>\n                         ss0 \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f\n                     (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)))\n                     ss \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<n.\n                                 stable r step ts p) \\<longrightarrow>\n                             merges f\n                              (step (SOME p. p \\<in> w)\n                                (ss ! (SOME p. p \\<in> w)))\n                              ss \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                         (\\<forall>p\\<in>{q.\n    \\<exists>t.\n       (q, t)\n       \\<in> set (step (SOME p. p \\<in> w)\n                   (ss ! (SOME p. p \\<in> w))) \\<and>\n       t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q} \\<union>\n   (w - {SOME p. p \\<in> w}).\n                             p < n)\n 2. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 3. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 4. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (rule conjI)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p<n.\n                            (\\<forall>t.\n                                (p, t)\n                                \\<in> set\n (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))) \\<longrightarrow>\n                                t \\<squnion>\\<^bsub>f\\<^esub> ss ! p =\n                                ss ! p) \\<and>\n                            (p \\<in> w \\<longrightarrow>\n                             p = (SOME p. p \\<in> w)) \\<longrightarrow>\n                            stable r step\n                             (merges f\n                               (step (SOME p. p \\<in> w)\n                                 (ss ! (SOME p. p \\<in> w)))\n                               ss)\n                             p\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ss0 \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f\n                     (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)))\n                     ss \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<n.\n                                 stable r step ts p) \\<longrightarrow>\n                             merges f\n                              (step (SOME p. p \\<in> w)\n                                (ss ! (SOME p. p \\<in> w)))\n                              ss \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                         (\\<forall>p\\<in>{q.\n    \\<exists>t.\n       (q, t)\n       \\<in> set (step (SOME p. p \\<in> w)\n                   (ss ! (SOME p. p \\<in> w))) \\<and>\n       t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q} \\<union>\n   (w - {SOME p. p \\<in> w}).\n                             p < n)\n 3. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 4. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 5. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply clarify"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>ss w p.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A;\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n; p < n;\n        \\<forall>t.\n           (p, t)\n           \\<in> set (step (SOME p. p \\<in> w)\n                       (ss ! (SOME p. p \\<in> w))) \\<longrightarrow>\n           t \\<squnion>\\<^bsub>f\\<^esub> ss ! p = ss ! p;\n        p \\<in> w \\<longrightarrow> p = (SOME p. p \\<in> w)\\<rbrakk>\n       \\<Longrightarrow> stable r step\n                          (merges f\n                            (step (SOME p. p \\<in> w)\n                              (ss ! (SOME p. p \\<in> w)))\n                            ss)\n                          p\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ss0 \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f\n                     (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)))\n                     ss \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<n.\n                                 stable r step ts p) \\<longrightarrow>\n                             merges f\n                              (step (SOME p. p \\<in> w)\n                                (ss ! (SOME p. p \\<in> w)))\n                              ss \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                         (\\<forall>p\\<in>{q.\n    \\<exists>t.\n       (q, t)\n       \\<in> set (step (SOME p. p \\<in> w)\n                   (ss ! (SOME p. p \\<in> w))) \\<and>\n       t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q} \\<union>\n   (w - {SOME p. p \\<in> w}).\n                             p < n)\n 3. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 4. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 5. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (blast intro!: stable_pres_lemma)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ss0 \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f\n                     (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)))\n                     ss \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<n.\n                                 stable r step ts p) \\<longrightarrow>\n                             merges f\n                              (step (SOME p. p \\<in> w)\n                                (ss ! (SOME p. p \\<in> w)))\n                              ss \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                         (\\<forall>p\\<in>{q.\n    \\<exists>t.\n       (q, t)\n       \\<in> set (step (SOME p. p \\<in> w)\n                   (ss ! (SOME p. p \\<in> w))) \\<and>\n       t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q} \\<union>\n   (w - {SOME p. p \\<in> w}).\n                             p < n)\n 2. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 3. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 4. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (rule conjI)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ss0 \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] merges f\n                     (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)))\n                     ss\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<n.\n                                 stable r step ts p) \\<longrightarrow>\n                             merges f\n                              (step (SOME p. p \\<in> w)\n                                (ss ! (SOME p. p \\<in> w)))\n                              ss \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                         (\\<forall>p\\<in>{q.\n    \\<exists>t.\n       (q, t)\n       \\<in> set (step (SOME p. p \\<in> w)\n                   (ss ! (SOME p. p \\<in> w))) \\<and>\n       t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q} \\<union>\n   (w - {SOME p. p \\<in> w}).\n                             p < n)\n 3. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 4. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 5. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (blast intro!: merges_incr intro: le_list_trans)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<n.\n                                 stable r step ts p) \\<longrightarrow>\n                             merges f\n                              (step (SOME p. p \\<in> w)\n                                (ss ! (SOME p. p \\<in> w)))\n                              ss \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n                         (\\<forall>p\\<in>{q.\n    \\<exists>t.\n       (q, t)\n       \\<in> set (step (SOME p. p \\<in> w)\n                   (ss ! (SOME p. p \\<in> w))) \\<and>\n       t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q} \\<union>\n   (w - {SOME p. p \\<in> w}).\n                             p < n)\n 2. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 3. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 4. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (rule conjI)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>ts\\<in>list n A.\n                            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                            (\\<forall>p<n.\n                                stable r step ts p) \\<longrightarrow>\n                            merges f\n                             (step (SOME p. p \\<in> w)\n                               (ss ! (SOME p. p \\<in> w)))\n                             ss \n                            [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p\\<in>{q.\n   \\<exists>t.\n      (q, t)\n      \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))) \\<and>\n      t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q} \\<union>\n  (w - {SOME p. p \\<in> w}).\n                            p < n\n 3. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 4. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 5. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply clarsimp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>ss w ts.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of (q, t) \\<Rightarrow> q < n \\<and> t \\<in> A;\n        ts \\<in> list n A; ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n; ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p<n. stable r step ts p\\<rbrakk>\n       \\<Longrightarrow> merges f\n                          (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w)))\n                          ss \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p\\<in>{q.\n   \\<exists>t.\n      (q, t)\n      \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))) \\<and>\n      t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q} \\<union>\n  (w - {SOME p. p \\<in> w}).\n                            p < n\n 3. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 4. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 5. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (blast intro!: merges_bounded_lemma)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of\n           (q, t) \\<Rightarrow> q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p\\<in>{q.\n   \\<exists>t.\n      (q, t)\n      \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))) \\<and>\n      t \\<squnion>\\<^bsub>f\\<^esub> ss ! q \\<noteq> ss ! q} \\<union>\n  (w - {SOME p. p \\<in> w}).\n                            p < n\n 2. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 3. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 4. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (blast dest!: boundedD)\n\n\n  \\<comment> \\<open>Postcondition holds upon termination:\\<close>"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        \\<not> (case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {})\\<rbrakk>\n       \\<Longrightarrow> s = (ss', w') \\<longrightarrow>\n                         ss' \\<in> list n A \\<and>\n                         (\\<forall>p<length ss'. stable r step ss' p) \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             (\\<forall>p<length ts.\n                                 stable r step ts p) \\<longrightarrow>\n                             ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n 2. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 3. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply(clarsimp simp add: stables_def split_paired_all)\n\n  \\<comment> \\<open>Well-foundedness of the termination relation:\\<close>"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf ({(ss', ss).\n                           ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                          finite_psubset)\n 2. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (rule wf_lex_prod)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf {(ss', ss). ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'}\n 2. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f)\\<rbrakk>\n    \\<Longrightarrow> wf finite_psubset\n 3. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (insert orderI [THEN acc_le_listI])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f); acc r \\<Longrightarrow> acc (Listn.le r)\\<rbrakk>\n    \\<Longrightarrow> wf {(ss', ss). ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'}\n 2. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f); acc r \\<Longrightarrow> acc (Listn.le r)\\<rbrakk>\n    \\<Longrightarrow> wf finite_psubset\n 3. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {};\n        acc r \\<Longrightarrow> acc (Listn.le r)\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (simp only: acc_def lesssub_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n     \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n     semilat (A, r, f); acc r \\<Longrightarrow> acc (Listn.le r)\\<rbrakk>\n    \\<Longrightarrow> wf finite_psubset\n 2. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {};\n        acc r \\<Longrightarrow> acc (Listn.le r)\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (rule wf_finite_psubset) \n\n  \\<comment> \\<open>Loop decreases along termination relation:\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        case s of\n        (ss, w) \\<Rightarrow>\n          ss \\<in> list n A \\<and>\n          (\\<forall>p<n.\n              p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n          (\\<forall>ts\\<in>list n A.\n              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n              stables r step ts \\<longrightarrow>\n              ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n          (\\<forall>p\\<in>w. p < n);\n        case s of (\\<tau>s, w) \\<Rightarrow> w \\<noteq> {};\n        acc r \\<Longrightarrow> acc (Listn.le r)\\<rbrakk>\n       \\<Longrightarrow> (case s of\n                          (\\<tau>s, w) \\<Rightarrow>\n                            let p = SOME p. p \\<in> w\n                            in propa f (step p (\\<tau>s ! p)) \\<tau>s\n                                (w - {p}),\n                          s)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply(simp add: stables_def split_paired_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        a \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> b \\<longrightarrow> stable r step a p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] a \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            a [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>b. p < n);\n        b \\<noteq> {}; acc (Listn.le r)\\<rbrakk>\n       \\<Longrightarrow> (propa f\n                           (step (SOME p. p \\<in> b)\n                             (a ! (SOME p. p \\<in> b)))\n                           a (b - {SOME p. p \\<in> b}),\n                          a, b)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply(rename_tac ss w)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; acc (Listn.le r)\\<rbrakk>\n       \\<Longrightarrow> (propa f\n                           (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w)))\n                           ss (w - {SOME p. p \\<in> w}),\n                          ss, w)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply(subgoal_tac \"(SOME p. p \\<in> w) \\<in> w\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w\\<rbrakk>\n       \\<Longrightarrow> (propa f\n                           (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w)))\n                           ss (w - {SOME p. p \\<in> w}),\n                          ss, w)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; acc (Listn.le r)\\<rbrakk>\n       \\<Longrightarrow> (SOME p. p \\<in> w) \\<in> w", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; acc (Listn.le r)\\<rbrakk>\n       \\<Longrightarrow> (SOME p. p \\<in> w) \\<in> w\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w\\<rbrakk>\n       \\<Longrightarrow> (propa f\n                           (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w)))\n                           ss (w - {SOME p. p \\<in> w}),\n                          ss, w)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (fast intro: someI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w\\<rbrakk>\n       \\<Longrightarrow> (propa f\n                           (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w)))\n                           ss (w - {SOME p. p \\<in> w}),\n                          ss, w)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply(subgoal_tac \"\\<forall>(q,t) \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))). q < length ss \\<and> t \\<in> A\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; acc (Listn.le r); (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (propa f\n                           (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w)))\n                           ss (w - {SOME p. p \\<in> w}),\n                          ss, w)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(q, t)\n                                  \\<in>set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))).\n                            q < length ss \\<and> t \\<in> A", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(q, t)\n                                  \\<in>set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))).\n                            q < length ss \\<and> t \\<in> A\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; acc (Listn.le r); (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (propa f\n                           (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w)))\n                           ss (w - {SOME p. p \\<in> w}),\n                          ss, w)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply clarify"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> a < length ss \\<and> b \\<in> A\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; acc (Listn.le r); (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (propa f\n                           (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w)))\n                           ss (w - {SOME p. p \\<in> w}),\n                          ss, w)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (rule conjI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> a < length ss\n 2. \\<And>ss w a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> b \\<in> A\n 3. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; acc (Listn.le r); (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (propa f\n                           (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w)))\n                           ss (w - {SOME p. p \\<in> w}),\n                          ss, w)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply(clarsimp, blast dest!: boundedD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> b \\<in> A\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; acc (Listn.le r); (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (propa f\n                           (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w)))\n                           ss (w - {SOME p. p \\<in> w}),\n                          ss, w)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (erule pres_typeD)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> ?s3463 ss w a b \\<in> A\n 2. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> ?p3463 ss w a b < n\n 3. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> (?q3463 ss w a b, b)\n                         \\<in> set (step (?p3463 ss w a b)\n                                     (?s3463 ss w a b))\n 4. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; acc (Listn.le r); (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (propa f\n                           (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w)))\n                           ss (w - {SOME p. p \\<in> w}),\n                          ss, w)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "prefer 3"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> (?q3463 ss w a b, b)\n                         \\<in> set (step (?p3463 ss w a b)\n                                     (?s3463 ss w a b))\n 2. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> ?s3463 ss w a b \\<in> A\n 3. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> ?p3463 ss w a b < n\n 4. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; acc (Listn.le r); (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (propa f\n                           (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w)))\n                           ss (w - {SOME p. p \\<in> w}),\n                          ss, w)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> ss ! (SOME p. p \\<in> w) \\<in> A\n 2. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> (SOME p. p \\<in> w) < n\n 3. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; acc (Listn.le r); (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (propa f\n                           (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w)))\n                           ss (w - {SOME p. p \\<in> w}),\n                          ss, w)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (erule listE_nth_in)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> (SOME p. p \\<in> w) < n\n 2. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> (SOME p. p \\<in> w) < n\n 3. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; acc (Listn.le r); (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (propa f\n                           (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w)))\n                           ss (w - {SOME p. p \\<in> w}),\n                          ss, w)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ss w a b.\n       \\<lbrakk>acc r; SemilatAlg.mono r step n A; bounded step n;\n        \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        (a, b)\n        \\<in> set (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)));\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> (SOME p. p \\<in> w) < n\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; acc (Listn.le r); (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (propa f\n                           (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w)))\n                           ss (w - {SOME p. p \\<in> w}),\n                          ss, w)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; acc (Listn.le r); (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (propa f\n                           (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w)))\n                           ss (w - {SOME p. p \\<in> w}),\n                          ss, w)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (subst decomp_propa)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; acc (Listn.le r); (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(q, t)\n                                  \\<in>set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))).\n                            q < length ss\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; acc (Listn.le r); (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ((merges f\n                            (step (SOME p. p \\<in> w)\n                              (ss ! (SOME p. p \\<in> w)))\n                            ss,\n                           {q. \\<exists>t.\n                                  (q, t)\n                                  \\<in> set\n   (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))) \\<and>\n                                  t \\<squnion>\\<^bsub>f\\<^esub> ss !\n                          q \\<noteq>\n                                  ss ! q} \\<union>\n                           (w - {SOME p. p \\<in> w})),\n                          ss, w)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f);\n        ss \\<in> list n A \\<and>\n        (\\<forall>p<n.\n            p \\<notin> w \\<longrightarrow> stable r step ss p) \\<and>\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss \\<and>\n        (\\<forall>ts\\<in>list n A.\n            ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n            (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n            ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts) \\<and>\n        (\\<forall>p\\<in>w. p < n);\n        w \\<noteq> {}; acc (Listn.le r); (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ((merges f\n                            (step (SOME p. p \\<in> w)\n                              (ss ! (SOME p. p \\<in> w)))\n                            ss,\n                           {q. \\<exists>t.\n                                  (q, t)\n                                  \\<in> set\n   (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))) \\<and>\n                                  t \\<squnion>\\<^bsub>f\\<^esub> ss !\n                          q \\<noteq>\n                                  ss ! q} \\<union>\n                           (w - {SOME p. p \\<in> w})),\n                          ss, w)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>(q, t)\n                 \\<in>set (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w))).\n           q < length ss \\<and> t \\<in> A;\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> ((merges f\n                            (step (SOME p. p \\<in> w)\n                              (ss ! (SOME p. p \\<in> w)))\n                            ss,\n                           {q. \\<exists>t.\n                                  (q, t)\n                                  \\<in> set\n   (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))) \\<and>\n                                  t \\<squnion>\\<^bsub>f\\<^esub> ss !\n                          q \\<noteq>\n                                  ss ! q} \\<union>\n                           (w - {SOME p. p \\<in> w})),\n                          ss, w)\n                         \\<in> {(ss', ss).\n                                ss [\\<sqsubset>\\<^bsub>r\\<^esub>] ss'} <*lex*>\n                               finite_psubset", "apply (simp del: listE_length\n      add: lex_prod_def finite_psubset_def \n           bounded_nat_set_is_finite)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of (q, t) \\<Rightarrow> q < length ss0 \\<and> t \\<in> A;\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> ss [\\<sqsubset>\\<^bsub>r\\<^esub>] merges f\n                      (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w)))\n                      ss \\<or>\n                         merges f\n                          (step (SOME p. p \\<in> w)\n                            (ss ! (SOME p. p \\<in> w)))\n                          ss =\n                         ss \\<and>\n                         {q. \\<exists>t.\n                                (q, t)\n                                \\<in> set\n (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))) \\<and>\n                                t \\<squnion>\\<^bsub>f\\<^esub> ss !\n                        q \\<noteq>\n                                ss ! q} \\<union>\n                         (w - {SOME p. p \\<in> w})\n                         \\<subset> w", "apply (rule termination_lemma)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of (q, t) \\<Rightarrow> q < length ss0 \\<and> t \\<in> A;\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> Semilat (?A4504 ss w) r f\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of (q, t) \\<Rightarrow> q < length ss0 \\<and> t \\<in> A;\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> ss \\<in> list (?n4504 ss w) (?A4504 ss w)\n 3. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of (q, t) \\<Rightarrow> q < length ss0 \\<and> t \\<in> A;\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(q, t)\n                                  \\<in>set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))).\n                            q < ?n4504 ss w \\<and> t \\<in> ?A4504 ss w\n 4. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of (q, t) \\<Rightarrow> q < length ss0 \\<and> t \\<in> A;\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> (SOME p. p \\<in> w) \\<in> w", "apply (rule assms)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of (q, t) \\<Rightarrow> q < length ss0 \\<and> t \\<in> A;\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> ss \\<in> list (?n4504 ss w) A\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of (q, t) \\<Rightarrow> q < length ss0 \\<and> t \\<in> A;\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(q, t)\n                                  \\<in>set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))).\n                            q < ?n4504 ss w \\<and> t \\<in> A\n 3. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of (q, t) \\<Rightarrow> q < length ss0 \\<and> t \\<in> A;\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> (SOME p. p \\<in> w) \\<in> w", "apply assumption+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of (q, t) \\<Rightarrow> q < length ss0 \\<and> t \\<in> A;\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(q, t)\n                                  \\<in>set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))).\n                            q < n \\<and> t \\<in> A\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of (q, t) \\<Rightarrow> q < length ss0 \\<and> t \\<in> A;\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> (SOME p. p \\<in> w) \\<in> w", "defer"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of (q, t) \\<Rightarrow> q < length ss0 \\<and> t \\<in> A;\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> (SOME p. p \\<in> w) \\<in> w\n 2. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of (q, t) \\<Rightarrow> q < length ss0 \\<and> t \\<in> A;\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(q, t)\n                                  \\<in>set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))).\n                            q < n \\<and> t \\<in> A", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ss w.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w0 \\<longrightarrow> stable r step ss0 p;\n        semilat (A, r, f); w \\<noteq> {}; acc (Listn.le r);\n        (SOME p. p \\<in> w) \\<in> w;\n        \\<forall>x\\<in>set (step (SOME p. p \\<in> w)\n                             (ss ! (SOME p. p \\<in> w))).\n           case x of (q, t) \\<Rightarrow> q < length ss0 \\<and> t \\<in> A;\n        ss \\<in> list n A;\n        \\<forall>p<n. p \\<notin> w \\<longrightarrow> stable r step ss p;\n        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss;\n        \\<forall>ts\\<in>list n A.\n           ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n           (\\<forall>p<n. stable r step ts p) \\<longrightarrow>\n           ss [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts;\n        \\<forall>p\\<in>w. p < n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>(q, t)\n                                  \\<in>set\n  (step (SOME p. p \\<in> w) (ss ! (SOME p. p \\<in> w))).\n                            q < n \\<and> t \\<in> A", "apply clarsimp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n   bounded step n; \\<forall>p\\<in>w0. p < n; ss0 \\<in> list n A;\n   \\<forall>p<n.\n      p \\<notin> w0 \\<longrightarrow> stable r step ss0 p\\<rbrakk>\n  \\<Longrightarrow> iter f step ss0 w0 = (ss', w') \\<longrightarrow>\n                    ss' \\<in> list n A \\<and>\n                    stables r step ss' \\<and>\n                    ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ss' \\<and>\n                    (\\<forall>ts\\<in>list n A.\n                        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                        stables r step ts \\<longrightarrow>\n                        ss' [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma kildall_properties: assumes \"Semilat A r f\"\nshows \"\\<lbrakk> acc r; pres_type step n A; mono r step n A;\n     bounded step n; ss0 \\<in> list n A \\<rbrakk> \\<Longrightarrow>\n  kildall r f step ss0 \\<in> list n A \\<and>\n  stables r step (kildall r f step ss0) \\<and>\n  ss0 [\\<sqsubseteq>\\<^sub>r] kildall r f step ss0 \\<and>\n  (\\<forall>ts\\<in>list n A. ss0 [\\<sqsubseteq>\\<^sub>r] ts \\<and> stables r step ts \\<longrightarrow>\n                 kildall r f step ss0 [\\<sqsubseteq>\\<^sub>r] ts)\"\n(*<*) (is \"PROP ?P\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; ss0 \\<in> list n A\\<rbrakk>\n    \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                      stables r step (kildall r f step ss0) \\<and>\n                      ss0 \n                      [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f step\n                  ss0 \\<and>\n                      (\\<forall>ts\\<in>list n A.\n                          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                          stables r step ts \\<longrightarrow>\n                          kildall r f step ss0 \n                          [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; ss0 \\<in> list n A\\<rbrakk>\n    \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                      stables r step (kildall r f step ss0) \\<and>\n                      ss0 \n                      [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f step\n                  ss0 \\<and>\n                      (\\<forall>ts\\<in>list n A.\n                          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                          stables r step ts \\<longrightarrow>\n                          kildall r f step ss0 \n                          [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)", "interpret Semilat A r f"], ["proof (prove)\ngoal (1 subgoal):\n 1. Semilat A r f", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; ss0 \\<in> list n A\\<rbrakk>\n    \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                      stables r step (kildall r f step ss0) \\<and>\n                      ss0 \n                      [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f step\n                  ss0 \\<and>\n                      (\\<forall>ts\\<in>list n A.\n                          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                          stables r step ts \\<longrightarrow>\n                          kildall r f step ss0 \n                          [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)", "show \"PROP ?P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; ss0 \\<in> list n A\\<rbrakk>\n    \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                      stables r step (kildall r f step ss0) \\<and>\n                      ss0 \n                      [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f step\n                  ss0 \\<and>\n                      (\\<forall>ts\\<in>list n A.\n                          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                          stables r step ts \\<longrightarrow>\n                          kildall r f step ss0 \n                          [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)", "apply (unfold kildall_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n     bounded step n; ss0 \\<in> list n A\\<rbrakk>\n    \\<Longrightarrow> fst (iter f step ss0 (unstables r step ss0))\n                      \\<in> list n A \\<and>\n                      stables r step\n                       (fst (iter f step ss0 (unstables r step ss0))) \\<and>\n                      ss0 \n                      [\\<sqsubseteq>\\<^bsub>r\\<^esub>] fst\n                  (iter f step ss0 (unstables r step ss0)) \\<and>\n                      (\\<forall>ts\\<in>list n A.\n                          ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                          stables r step ts \\<longrightarrow>\n                          fst (iter f step ss0 (unstables r step ss0)) \n                          [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)", "apply(case_tac \"iter f step ss0 (unstables r step ss0)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; ss0 \\<in> list n A;\n        iter f step ss0 (unstables r step ss0) = (a, b)\\<rbrakk>\n       \\<Longrightarrow> fst (iter f step ss0 (unstables r step ss0))\n                         \\<in> list n A \\<and>\n                         stables r step\n                          (fst (iter f step ss0\n                                 (unstables r step ss0))) \\<and>\n                         ss0 \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] fst\n                     (iter f step ss0 (unstables r step ss0)) \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             stables r step ts \\<longrightarrow>\n                             fst (iter f step ss0 (unstables r step ss0)) \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; ss0 \\<in> list n A;\n        iter f step ss0 (unstables r step ss0) = (a, b)\\<rbrakk>\n       \\<Longrightarrow> a \\<in> list n A \\<and>\n                         stables r step a \\<and>\n                         ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] a \\<and>\n                         (\\<forall>ts\\<in>list n A.\n                             ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                             stables r step ts \\<longrightarrow>\n                             a [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)", "apply (rule iter_properties)"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; ss0 \\<in> list n A;\n        iter f step ss0 (unstables r step ss0) = (a, b)\\<rbrakk>\n       \\<Longrightarrow> Semilat A r (?f8 a b)\n 2. \\<And>a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; ss0 \\<in> list n A;\n        iter f step ss0 (unstables r step ss0) = (a, b)\\<rbrakk>\n       \\<Longrightarrow> acc r\n 3. \\<And>a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; ss0 \\<in> list n A;\n        iter f step ss0 (unstables r step ss0) = (a, b)\\<rbrakk>\n       \\<Longrightarrow> pres_type step n A\n 4. \\<And>a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; ss0 \\<in> list n A;\n        iter f step ss0 (unstables r step ss0) = (a, b)\\<rbrakk>\n       \\<Longrightarrow> SemilatAlg.mono r step n A\n 5. \\<And>a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; ss0 \\<in> list n A;\n        iter f step ss0 (unstables r step ss0) = (a, b)\\<rbrakk>\n       \\<Longrightarrow> bounded step n\n 6. \\<And>a b p.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; ss0 \\<in> list n A;\n        iter f step ss0 (unstables r step ss0) = (a, b);\n        p \\<in> ?w0.8 a b\\<rbrakk>\n       \\<Longrightarrow> p < n\n 7. \\<And>a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; ss0 \\<in> list n A;\n        iter f step ss0 (unstables r step ss0) = (a, b)\\<rbrakk>\n       \\<Longrightarrow> ss0 \\<in> list n A\n 8. \\<And>a b p.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; ss0 \\<in> list n A;\n        iter f step ss0 (unstables r step ss0) = (a, b); p < n;\n        p \\<notin> ?w0.8 a b\\<rbrakk>\n       \\<Longrightarrow> stable r step ss0 p\n 9. \\<And>a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; ss0 \\<in> list n A;\n        iter f step ss0 (unstables r step ss0) = (a, b)\\<rbrakk>\n       \\<Longrightarrow> iter (?f8 a b) step ss0 (?w0.8 a b) = (a, ?w'8 a b)", "apply (simp_all add: unstables_def stable_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; ss0 \\<in> list n A;\n        iter f step ss0\n         {p. p < n \\<and>\n             (\\<exists>x\\<in>set (step p (ss0 ! p)).\n                 \\<not> (case x of\n                         (q, \\<tau>) \\<Rightarrow>\n                           \\<tau> \n                           \\<sqsubseteq>\\<^bsub>r\\<^esub> ss0 ! q))} =\n        (a, b)\\<rbrakk>\n       \\<Longrightarrow> Semilat A r f", "apply (rule Semilat.intro)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n        bounded step n; ss0 \\<in> list n A;\n        iter f step ss0\n         {p. p < n \\<and>\n             (\\<exists>x\\<in>set (step p (ss0 ! p)).\n                 \\<not> (case x of\n                         (q, \\<tau>) \\<Rightarrow>\n                           \\<tau> \n                           \\<sqsubseteq>\\<^bsub>r\\<^esub> ss0 ! q))} =\n        (a, b)\\<rbrakk>\n       \\<Longrightarrow> semilat (A, r, f)", "apply (rule semilat)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<lbrakk>acc r; pres_type step n A; SemilatAlg.mono r step n A;\n   bounded step n; ss0 \\<in> list n A\\<rbrakk>\n  \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                    stables r step (kildall r f step ss0) \\<and>\n                    ss0 \n                    [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f step\n                ss0 \\<and>\n                    (\\<forall>ts\\<in>list n A.\n                        ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                        stables r step ts \\<longrightarrow>\n                        kildall r f step ss0 \n                        [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma is_bcv_kildall: assumes \"Semilat A r f\"\nshows \"\\<lbrakk> acc r; top r T; pres_type step n A; bounded step n; mono r step n A \\<rbrakk>\n  \\<Longrightarrow> is_bcv r T step n A (kildall r f step)\" (is \"PROP ?P\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n     SemilatAlg.mono r step n A\\<rbrakk>\n    \\<Longrightarrow> is_bcv r T step n A (kildall r f step)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n     SemilatAlg.mono r step n A\\<rbrakk>\n    \\<Longrightarrow> is_bcv r T step n A (kildall r f step)", "interpret Semilat A r f"], ["proof (prove)\ngoal (1 subgoal):\n 1. Semilat A r f", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n     SemilatAlg.mono r step n A\\<rbrakk>\n    \\<Longrightarrow> is_bcv r T step n A (kildall r f step)", "show \"PROP ?P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n     SemilatAlg.mono r step n A\\<rbrakk>\n    \\<Longrightarrow> is_bcv r T step n A (kildall r f step)", "apply(unfold is_bcv_def wt_step_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n     SemilatAlg.mono r step n A\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<tau>s\\<^sub>0\\<in>list n A.\n                         (\\<forall>p<n.\n                             kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq>\n                             T) =\n                         (\\<exists>\\<tau>s\\<in>list n A.\n                             \\<tau>s\\<^sub>0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] \\<tau>s \\<and>\n                             (\\<forall>p<length \\<tau>s.\n                                 \\<tau>s ! p \\<noteq> T \\<and>\n                                 stable r step \\<tau>s p))", "apply(insert \\<open>Semilat A r f\\<close> semilat kildall_properties[of A])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n     SemilatAlg.mono r step n A; Semilat A r f; semilat (A, r, f);\n     \\<And>r f step n ss0.\n        \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n         SemilatAlg.mono r step n A; bounded step n;\n         ss0 \\<in> list n A\\<rbrakk>\n        \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                          stables r step (kildall r f step ss0) \\<and>\n                          ss0 \n                          [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f step\n                      ss0 \\<and>\n                          (\\<forall>ts\\<in>list n A.\n                              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                              stables r step ts \\<longrightarrow>\n                              kildall r f step ss0 \n                              [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<tau>s\\<^sub>0\\<in>list n A.\n                         (\\<forall>p<n.\n                             kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq>\n                             T) =\n                         (\\<exists>\\<tau>s\\<in>list n A.\n                             \\<tau>s\\<^sub>0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] \\<tau>s \\<and>\n                             (\\<forall>p<length \\<tau>s.\n                                 \\<tau>s ! p \\<noteq> T \\<and>\n                                 stable r step \\<tau>s p))", "apply(simp add:stables_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n     SemilatAlg.mono r step n A; Semilat A r f; semilat (A, r, f);\n     \\<And>r f step n ss0.\n        \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n         SemilatAlg.mono r step n A; bounded step n;\n         ss0 \\<in> list n A\\<rbrakk>\n        \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                          (\\<forall>p<length (kildall r f step ss0).\n                              stable r step (kildall r f step ss0) p) \\<and>\n                          ss0 \n                          [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f step\n                      ss0 \\<and>\n                          (\\<forall>ts\\<in>list n A.\n                              ss0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                              (\\<forall>p<n.\n                                  stable r step ts p) \\<longrightarrow>\n                              kildall r f step ss0 \n                              [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>\\<tau>s\\<^sub>0\\<in>list n A.\n                         (\\<forall>p<n.\n                             kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq>\n                             T) =\n                         (\\<exists>\\<tau>s\\<in>list n A.\n                             \\<tau>s\\<^sub>0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] \\<tau>s \\<and>\n                             (\\<forall>p<n.\n                                 \\<tau>s ! p \\<noteq> T \\<and>\n                                 stable r step \\<tau>s p))", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<tau>s\\<^sub>0.\n       \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n        SemilatAlg.mono r step n A; Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>p<n.\n                             kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq>\n                             T) =\n                         (\\<exists>\\<tau>s\\<in>list n A.\n                             \\<tau>s\\<^sub>0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] \\<tau>s \\<and>\n                             (\\<forall>p<n.\n                                 \\<tau>s ! p \\<noteq> T \\<and>\n                                 stable r step \\<tau>s p))", "apply(subgoal_tac \"kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<tau>s\\<^sub>0.\n       \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n        SemilatAlg.mono r step n A; Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A;\n        kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>p<n.\n                             kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq>\n                             T) =\n                         (\\<exists>\\<tau>s\\<in>list n A.\n                             \\<tau>s\\<^sub>0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] \\<tau>s \\<and>\n                             (\\<forall>p<n.\n                                 \\<tau>s ! p \\<noteq> T \\<and>\n                                 stable r step \\<tau>s p))\n 2. \\<And>\\<tau>s\\<^sub>0.\n       \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n        SemilatAlg.mono r step n A; Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A\\<rbrakk>\n       \\<Longrightarrow> kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<tau>s\\<^sub>0.\n       \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n        SemilatAlg.mono r step n A; Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A\\<rbrakk>\n       \\<Longrightarrow> kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A\n 2. \\<And>\\<tau>s\\<^sub>0.\n       \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n        SemilatAlg.mono r step n A; Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A;\n        kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>p<n.\n                             kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq>\n                             T) =\n                         (\\<exists>\\<tau>s\\<in>list n A.\n                             \\<tau>s\\<^sub>0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] \\<tau>s \\<and>\n                             (\\<forall>p<n.\n                                 \\<tau>s ! p \\<noteq> T \\<and>\n                                 stable r step \\<tau>s p))", "apply (simp(no_asm_simp))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<tau>s\\<^sub>0.\n       \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n        SemilatAlg.mono r step n A; Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A;\n        kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>p<n.\n                             kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq>\n                             T) =\n                         (\\<exists>\\<tau>s\\<in>list n A.\n                             \\<tau>s\\<^sub>0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] \\<tau>s \\<and>\n                             (\\<forall>p<n.\n                                 \\<tau>s ! p \\<noteq> T \\<and>\n                                 stable r step \\<tau>s p))", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<tau>s\\<^sub>0.\n       \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n        SemilatAlg.mono r step n A; Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A;\n        kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A;\n        \\<forall>p<n.\n           kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<tau>s\\<in>list n A.\n                            \\<tau>s\\<^sub>0 \n                            [\\<sqsubseteq>\\<^bsub>r\\<^esub>] \\<tau>s \\<and>\n                            (\\<forall>p<n.\n                                \\<tau>s ! p \\<noteq> T \\<and>\n                                stable r step \\<tau>s p)\n 2. \\<And>\\<tau>s\\<^sub>0.\n       \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n        SemilatAlg.mono r step n A; Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A;\n        kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A;\n        \\<exists>\\<tau>s\\<in>list n A.\n           \\<tau>s\\<^sub>0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] \\<tau>s \\<and>\n           (\\<forall>p<n.\n               \\<tau>s ! p \\<noteq> T \\<and>\n               stable r step \\<tau>s p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p<n.\n                            kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq> T", "apply (rule_tac x = \"kildall r f step \\<tau>s\\<^sub>0\" in bexI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>\\<tau>s\\<^sub>0.\n       \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n        SemilatAlg.mono r step n A; Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A;\n        kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A;\n        \\<forall>p<n.\n           kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq> T\\<rbrakk>\n       \\<Longrightarrow> \\<tau>s\\<^sub>0 \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f step\n                     \\<tau>s\\<^sub>0 \\<and>\n                         (\\<forall>p<n.\n                             kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq>\n                             T \\<and>\n                             stable r step\n                              (kildall r f step \\<tau>s\\<^sub>0) p)\n 2. \\<And>\\<tau>s\\<^sub>0.\n       \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n        SemilatAlg.mono r step n A; Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A;\n        kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A;\n        \\<forall>p<n.\n           kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq> T\\<rbrakk>\n       \\<Longrightarrow> kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A\n 3. \\<And>\\<tau>s\\<^sub>0.\n       \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n        SemilatAlg.mono r step n A; Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A;\n        kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A;\n        \\<exists>\\<tau>s\\<in>list n A.\n           \\<tau>s\\<^sub>0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] \\<tau>s \\<and>\n           (\\<forall>p<n.\n               \\<tau>s ! p \\<noteq> T \\<and>\n               stable r step \\<tau>s p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p<n.\n                            kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq> T", "apply (rule conjI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>\\<tau>s\\<^sub>0.\n       \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n        SemilatAlg.mono r step n A; Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A;\n        kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A;\n        \\<forall>p<n.\n           kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq> T\\<rbrakk>\n       \\<Longrightarrow> \\<tau>s\\<^sub>0 \n                         [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f step\n                     \\<tau>s\\<^sub>0\n 2. \\<And>\\<tau>s\\<^sub>0.\n       \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n        SemilatAlg.mono r step n A; Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A;\n        kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A;\n        \\<forall>p<n.\n           kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq> T\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p<n.\n                            kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq>\n                            T \\<and>\n                            stable r step (kildall r f step \\<tau>s\\<^sub>0)\n                             p\n 3. \\<And>\\<tau>s\\<^sub>0.\n       \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n        SemilatAlg.mono r step n A; Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A;\n        kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A;\n        \\<forall>p<n.\n           kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq> T\\<rbrakk>\n       \\<Longrightarrow> kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A\n 4. \\<And>\\<tau>s\\<^sub>0.\n       \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n        SemilatAlg.mono r step n A; Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A;\n        kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A;\n        \\<exists>\\<tau>s\\<in>list n A.\n           \\<tau>s\\<^sub>0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] \\<tau>s \\<and>\n           (\\<forall>p<n.\n               \\<tau>s ! p \\<noteq> T \\<and>\n               stable r step \\<tau>s p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p<n.\n                            kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq> T", "apply (blast)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>\\<tau>s\\<^sub>0.\n       \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n        SemilatAlg.mono r step n A; Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A;\n        kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A;\n        \\<forall>p<n.\n           kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq> T\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p<n.\n                            kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq>\n                            T \\<and>\n                            stable r step (kildall r f step \\<tau>s\\<^sub>0)\n                             p\n 2. \\<And>\\<tau>s\\<^sub>0.\n       \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n        SemilatAlg.mono r step n A; Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A;\n        kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A;\n        \\<forall>p<n.\n           kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq> T\\<rbrakk>\n       \\<Longrightarrow> kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A\n 3. \\<And>\\<tau>s\\<^sub>0.\n       \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n        SemilatAlg.mono r step n A; Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A;\n        kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A;\n        \\<exists>\\<tau>s\\<in>list n A.\n           \\<tau>s\\<^sub>0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] \\<tau>s \\<and>\n           (\\<forall>p<n.\n               \\<tau>s ! p \\<noteq> T \\<and>\n               stable r step \\<tau>s p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p<n.\n                            kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq> T", "apply (simp  (no_asm_simp))"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<tau>s\\<^sub>0.\n       \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n        SemilatAlg.mono r step n A; Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A;\n        kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A;\n        \\<forall>p<n.\n           kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq> T\\<rbrakk>\n       \\<Longrightarrow> kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A\n 2. \\<And>\\<tau>s\\<^sub>0.\n       \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n        SemilatAlg.mono r step n A; Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A;\n        kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A;\n        \\<exists>\\<tau>s\\<in>list n A.\n           \\<tau>s\\<^sub>0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] \\<tau>s \\<and>\n           (\\<forall>p<n.\n               \\<tau>s ! p \\<noteq> T \\<and>\n               stable r step \\<tau>s p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p<n.\n                            kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq> T", "apply(assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<tau>s\\<^sub>0.\n       \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n        SemilatAlg.mono r step n A; Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A;\n        kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A;\n        \\<exists>\\<tau>s\\<in>list n A.\n           \\<tau>s\\<^sub>0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] \\<tau>s \\<and>\n           (\\<forall>p<n.\n               \\<tau>s ! p \\<noteq> T \\<and>\n               stable r step \\<tau>s p)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>p<n.\n                            kildall r f step \\<tau>s\\<^sub>0 ! p \\<noteq> T", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<tau>s\\<^sub>0 \\<tau>s p.\n       \\<lbrakk>acc r; Semilat.top r (kildall r f step \\<tau>s\\<^sub>0 ! p);\n        pres_type step n A; bounded step n; SemilatAlg.mono r step n A;\n        Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A;\n        kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A;\n        \\<tau>s \\<in> list n A;\n        \\<tau>s\\<^sub>0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] \\<tau>s;\n        \\<forall>pa<n.\n           \\<tau>s ! pa \\<noteq> kildall r f step \\<tau>s\\<^sub>0 ! p \\<and>\n           stable r step \\<tau>s pa;\n        p < n; T = kildall r f step \\<tau>s\\<^sub>0 ! p\\<rbrakk>\n       \\<Longrightarrow> False", "apply(subgoal_tac \"kildall r f step \\<tau>s\\<^sub>0!p <=_r \\<tau>s!p\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<tau>s\\<^sub>0 \\<tau>s p.\n       \\<lbrakk>acc r; Semilat.top r (kildall r f step \\<tau>s\\<^sub>0 ! p);\n        pres_type step n A; bounded step n; SemilatAlg.mono r step n A;\n        Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A;\n        kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A;\n        \\<tau>s \\<in> list n A;\n        \\<tau>s\\<^sub>0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] \\<tau>s;\n        \\<forall>pa<n.\n           \\<tau>s ! pa \\<noteq> kildall r f step \\<tau>s\\<^sub>0 ! p \\<and>\n           stable r step \\<tau>s pa;\n        p < n; T = kildall r f step \\<tau>s\\<^sub>0 ! p;\n        kildall r f step \\<tau>s\\<^sub>0 ! p \n        \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! p\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>\\<tau>s\\<^sub>0 \\<tau>s p.\n       \\<lbrakk>acc r; Semilat.top r (kildall r f step \\<tau>s\\<^sub>0 ! p);\n        pres_type step n A; bounded step n; SemilatAlg.mono r step n A;\n        Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A;\n        kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A;\n        \\<tau>s \\<in> list n A;\n        \\<tau>s\\<^sub>0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] \\<tau>s;\n        \\<forall>pa<n.\n           \\<tau>s ! pa \\<noteq> kildall r f step \\<tau>s\\<^sub>0 ! p \\<and>\n           stable r step \\<tau>s pa;\n        p < n; T = kildall r f step \\<tau>s\\<^sub>0 ! p\\<rbrakk>\n       \\<Longrightarrow> kildall r f step \\<tau>s\\<^sub>0 ! p \n                         \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! p", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<tau>s\\<^sub>0 \\<tau>s p.\n       \\<lbrakk>acc r; Semilat.top r (kildall r f step \\<tau>s\\<^sub>0 ! p);\n        pres_type step n A; bounded step n; SemilatAlg.mono r step n A;\n        Semilat A r f; semilat (A, r, f);\n        \\<And>r f step n ss0.\n           \\<lbrakk>Semilat A r f; acc r; pres_type step n A;\n            SemilatAlg.mono r step n A; bounded step n;\n            ss0 \\<in> list n A\\<rbrakk>\n           \\<Longrightarrow> kildall r f step ss0 \\<in> list n A \\<and>\n                             (\\<forall>p<length (kildall r f step ss0).\n                                 stable r step (kildall r f step ss0)\n                                  p) \\<and>\n                             ss0 \n                             [\\<sqsubseteq>\\<^bsub>r\\<^esub>] kildall r f\n                         step ss0 \\<and>\n                             (\\<forall>ts\\<in>list n A.\n                                 ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts \\<and>\n                                 (\\<forall>p<n.\n                                     stable r step ts p) \\<longrightarrow>\n                                 kildall r f step ss0 \n                                 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] ts);\n        \\<tau>s\\<^sub>0 \\<in> list n A;\n        kildall r f step \\<tau>s\\<^sub>0 \\<in> list n A;\n        \\<tau>s \\<in> list n A;\n        \\<tau>s\\<^sub>0 [\\<sqsubseteq>\\<^bsub>r\\<^esub>] \\<tau>s;\n        \\<forall>pa<n.\n           \\<tau>s ! pa \\<noteq> kildall r f step \\<tau>s\\<^sub>0 ! p \\<and>\n           stable r step \\<tau>s pa;\n        p < n; T = kildall r f step \\<tau>s\\<^sub>0 ! p\\<rbrakk>\n       \\<Longrightarrow> kildall r f step \\<tau>s\\<^sub>0 ! p \n                         \\<sqsubseteq>\\<^bsub>r\\<^esub> \\<tau>s ! p", "apply (blast intro!: le_listD less_lengthI)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<lbrakk>acc r; Semilat.top r T; pres_type step n A; bounded step n;\n   SemilatAlg.mono r step n A\\<rbrakk>\n  \\<Longrightarrow> is_bcv r T step n A (kildall r f step)\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "end"]]}