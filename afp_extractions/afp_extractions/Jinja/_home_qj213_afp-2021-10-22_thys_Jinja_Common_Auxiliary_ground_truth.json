{"file_name": "/home/qj213/afp-2021-10-22/thys/Jinja/Common/Auxiliary.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Jinja", "problem_names": ["lemma nat_add_max_le[simp]:\n  \"((n::nat) + max i j \\<le> m) = (n + i \\<le> m \\<and> n + j \\<le> m)\"", "lemma Suc_add_max_le[simp]:\n  \"(Suc(n + max i j) \\<le> m) = (Suc(n + i) \\<le> m \\<and> Suc(n + j) \\<le> m)\"", "lemma distinct_fst_Nil [simp]:\n  \"distinct_fst []\"", "lemma distinct_fst_Cons [simp]:\n  \"distinct_fst ((k,x)#kxs) = (distinct_fst kxs \\<and> (\\<forall>y. (k,y) \\<notin> set kxs))\"", "lemma map_of_SomeI:\n  \"\\<lbrakk> distinct_fst kxs; (k,x) \\<in> set kxs \\<rbrakk> \\<Longrightarrow> map_of kxs k = Some x\"", "lemma rel_list_all2_Cons [iff]:\n  \"list_all2 (fun_of S) (x#xs) (y#ys) = \n   ((x,y) \\<in> S \\<and> list_all2 (fun_of S) xs ys)\"", "lemma rel_list_all2_Cons1:\n  \"list_all2 (fun_of S) (x#xs) ys = \n  (\\<exists>z zs. ys = z#zs \\<and> (x,z) \\<in> S \\<and> list_all2 (fun_of S) xs zs)\"", "lemma rel_list_all2_Cons2:\n  \"list_all2 (fun_of S) xs (y#ys) = \n  (\\<exists>z zs. xs = z#zs \\<and> (z,y) \\<in> S \\<and> list_all2 (fun_of S) zs ys)\"", "lemma rel_list_all2_refl:\n  \"(\\<And>x. (x,x) \\<in> S) \\<Longrightarrow> list_all2 (fun_of S) xs xs\"", "lemma rel_list_all2_antisym:\n  \"\\<lbrakk> (\\<And>x y. \\<lbrakk>(x,y) \\<in> S; (y,x) \\<in> T\\<rbrakk> \\<Longrightarrow> x = y); \n     list_all2 (fun_of S) xs ys; list_all2 (fun_of T) ys xs \\<rbrakk> \\<Longrightarrow> xs = ys\"", "lemma rel_list_all2_trans: \n  \"\\<lbrakk> \\<And>a b c. \\<lbrakk>(a,b) \\<in> R; (b,c) \\<in> S\\<rbrakk> \\<Longrightarrow> (a,c) \\<in> T;\n    list_all2 (fun_of R) as bs; list_all2 (fun_of S) bs cs\\<rbrakk> \n  \\<Longrightarrow> list_all2 (fun_of T) as cs\"", "lemma rel_list_all2_update_cong:\n  \"\\<lbrakk> i<size xs; list_all2 (fun_of S) xs ys; (x,y) \\<in> S \\<rbrakk> \n  \\<Longrightarrow> list_all2 (fun_of S) (xs[i:=x]) (ys[i:=y])\"", "lemma rel_list_all2_nthD:\n  \"\\<lbrakk> list_all2 (fun_of S) xs ys; p < size xs \\<rbrakk> \\<Longrightarrow> (xs!p,ys!p) \\<in> S\"", "lemma rel_list_all2I:\n  \"\\<lbrakk> length a = length b; \\<And>n. n < length a \\<Longrightarrow> (a!n,b!n) \\<in> S \\<rbrakk> \\<Longrightarrow> list_all2 (fun_of S) a b\""], "translations": [["", "lemma nat_add_max_le[simp]:\n  \"((n::nat) + max i j \\<le> m) = (n + i \\<le> m \\<and> n + j \\<le> m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n + max i j \\<le> m) = (n + i \\<le> m \\<and> n + j \\<le> m)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (n + max i j \\<le> m) = (n + i \\<le> m \\<and> n + j \\<le> m)", "by arith"], ["", "(*>*)"], ["", "lemma Suc_add_max_le[simp]:\n  \"(Suc(n + max i j) \\<le> m) = (Suc(n + i) \\<le> m \\<and> Suc(n + j) \\<le> m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Suc (n + max i j) \\<le> m) =\n    (Suc (n + i) \\<le> m \\<and> Suc (n + j) \\<le> m)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Suc (n + max i j) \\<le> m) =\n    (Suc (n + i) \\<le> m \\<and> Suc (n + j) \\<le> m)", "by arith"], ["", "(*>*)"], ["", "notation Some  (\"(\\<lfloor>_\\<rfloor>)\")"], ["", "(*<*)"], ["", "declare\n option.splits[split]\n Let_def[simp]\n subset_insertI2 [simp]\n Cons_eq_map_conv [iff]"], ["", "(*>*)"], ["", "subsection \\<open>\\<open>distinct_fst\\<close>\\<close>"], ["", "definition distinct_fst  :: \"('a \\<times> 'b) list \\<Rightarrow> bool\"\nwhere\n  \"distinct_fst  \\<equiv>  distinct \\<circ> map fst\""], ["", "lemma distinct_fst_Nil [simp]:\n  \"distinct_fst []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct_fst []", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct_fst []", "apply (unfold distinct_fst_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (distinct \\<circ> map fst) []", "apply (simp (no_asm))"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma distinct_fst_Cons [simp]:\n  \"distinct_fst ((k,x)#kxs) = (distinct_fst kxs \\<and> (\\<forall>y. (k,y) \\<notin> set kxs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct_fst ((k, x) # kxs) =\n    (distinct_fst kxs \\<and> (\\<forall>y. (k, y) \\<notin> set kxs))", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct_fst ((k, x) # kxs) =\n    (distinct_fst kxs \\<and> (\\<forall>y. (k, y) \\<notin> set kxs))", "apply (unfold distinct_fst_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (distinct \\<circ> map fst) ((k, x) # kxs) =\n    ((distinct \\<circ> map fst) kxs \\<and>\n     (\\<forall>y. (k, y) \\<notin> set kxs))", "apply (auto simp:image_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)\n(*\nlemma distinct_fst_append:\n \"\\<lbrakk> distinct_fst kxs'; distinct_fst kxs; \\<forall>(k,x) \\<in> set kxs. \\<forall>(k',x') \\<in> set kxs'. k' \\<noteq> k \\<rbrakk>\n  \\<Longrightarrow> distinct_fst(kxs @ kxs')\"\nby (induct kxs) (auto dest: fst_in_set_lemma)\n\nlemma distinct_fst_map_inj:\n  \"\\<lbrakk> distinct_fst kxs; inj f \\<rbrakk> \\<Longrightarrow> distinct_fst (map (\\<lambda>(k,x). (f k, g k x)) kxs)\"\nby (induct kxs) (auto dest: fst_in_set_lemma simp: inj_eq)\n*)"], ["", "lemma map_of_SomeI:\n  \"\\<lbrakk> distinct_fst kxs; (k,x) \\<in> set kxs \\<rbrakk> \\<Longrightarrow> map_of kxs k = Some x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct_fst kxs; (k, x) \\<in> set kxs\\<rbrakk>\n    \\<Longrightarrow> map_of kxs k = \\<lfloor>x\\<rfloor>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct_fst kxs; (k, x) \\<in> set kxs\\<rbrakk>\n    \\<Longrightarrow> map_of kxs k = \\<lfloor>x\\<rfloor>", "by (induct kxs) (auto simp:fun_upd_apply)"], ["", "(*>*)"], ["", "subsection \\<open>Using @{term list_all2} for relations\\<close>"], ["", "definition fun_of :: \"('a \\<times> 'b) set \\<Rightarrow> 'a \\<Rightarrow> 'b \\<Rightarrow> bool\"\nwhere\n  \"fun_of S \\<equiv> \\<lambda>x y. (x,y) \\<in> S\""], ["", "text \\<open>Convenience lemmas\\<close>"], ["", "(*<*)"], ["", "declare fun_of_def [simp]"], ["", "(*>*)"], ["", "lemma rel_list_all2_Cons [iff]:\n  \"list_all2 (fun_of S) (x#xs) (y#ys) = \n   ((x,y) \\<in> S \\<and> list_all2 (fun_of S) xs ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. list_all2 (fun_of S) (x # xs) (y # ys) =\n    ((x, y) \\<in> S \\<and> list_all2 (fun_of S) xs ys)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. list_all2 (fun_of S) (x # xs) (y # ys) =\n    ((x, y) \\<in> S \\<and> list_all2 (fun_of S) xs ys)", "by simp"], ["", "(*>*)"], ["", "lemma rel_list_all2_Cons1:\n  \"list_all2 (fun_of S) (x#xs) ys = \n  (\\<exists>z zs. ys = z#zs \\<and> (x,z) \\<in> S \\<and> list_all2 (fun_of S) xs zs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. list_all2 (fun_of S) (x # xs) ys =\n    (\\<exists>z zs.\n        ys = z # zs \\<and> (x, z) \\<in> S \\<and> list_all2 (fun_of S) xs zs)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. list_all2 (fun_of S) (x # xs) ys =\n    (\\<exists>z zs.\n        ys = z # zs \\<and> (x, z) \\<in> S \\<and> list_all2 (fun_of S) xs zs)", "by (cases ys) auto"], ["", "(*>*)"], ["", "lemma rel_list_all2_Cons2:\n  \"list_all2 (fun_of S) xs (y#ys) = \n  (\\<exists>z zs. xs = z#zs \\<and> (z,y) \\<in> S \\<and> list_all2 (fun_of S) zs ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. list_all2 (fun_of S) xs (y # ys) =\n    (\\<exists>z zs.\n        xs = z # zs \\<and> (z, y) \\<in> S \\<and> list_all2 (fun_of S) zs ys)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. list_all2 (fun_of S) xs (y # ys) =\n    (\\<exists>z zs.\n        xs = z # zs \\<and> (z, y) \\<in> S \\<and> list_all2 (fun_of S) zs ys)", "by (cases xs) auto"], ["", "(*>*)"], ["", "lemma rel_list_all2_refl:\n  \"(\\<And>x. (x,x) \\<in> S) \\<Longrightarrow> list_all2 (fun_of S) xs xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. (x, x) \\<in> S) \\<Longrightarrow> list_all2 (fun_of S) xs xs", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. (x, x) \\<in> S) \\<Longrightarrow> list_all2 (fun_of S) xs xs", "by (simp add: list_all2_refl)"], ["", "(*>*)"], ["", "lemma rel_list_all2_antisym:\n  \"\\<lbrakk> (\\<And>x y. \\<lbrakk>(x,y) \\<in> S; (y,x) \\<in> T\\<rbrakk> \\<Longrightarrow> x = y); \n     list_all2 (fun_of S) xs ys; list_all2 (fun_of T) ys xs \\<rbrakk> \\<Longrightarrow> xs = ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x y.\n                \\<lbrakk>(x, y) \\<in> S; (y, x) \\<in> T\\<rbrakk>\n                \\<Longrightarrow> x = y;\n     list_all2 (fun_of S) xs ys; list_all2 (fun_of T) ys xs\\<rbrakk>\n    \\<Longrightarrow> xs = ys", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x y.\n                \\<lbrakk>(x, y) \\<in> S; (y, x) \\<in> T\\<rbrakk>\n                \\<Longrightarrow> x = y;\n     list_all2 (fun_of S) xs ys; list_all2 (fun_of T) ys xs\\<rbrakk>\n    \\<Longrightarrow> xs = ys", "by (rule list_all2_antisym) auto"], ["", "(*>*)"], ["", "lemma rel_list_all2_trans: \n  \"\\<lbrakk> \\<And>a b c. \\<lbrakk>(a,b) \\<in> R; (b,c) \\<in> S\\<rbrakk> \\<Longrightarrow> (a,c) \\<in> T;\n    list_all2 (fun_of R) as bs; list_all2 (fun_of S) bs cs\\<rbrakk> \n  \\<Longrightarrow> list_all2 (fun_of T) as cs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a b c.\n                \\<lbrakk>(a, b) \\<in> R; (b, c) \\<in> S\\<rbrakk>\n                \\<Longrightarrow> (a, c) \\<in> T;\n     list_all2 (fun_of R) as bs; list_all2 (fun_of S) bs cs\\<rbrakk>\n    \\<Longrightarrow> list_all2 (fun_of T) as cs", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a b c.\n                \\<lbrakk>(a, b) \\<in> R; (b, c) \\<in> S\\<rbrakk>\n                \\<Longrightarrow> (a, c) \\<in> T;\n     list_all2 (fun_of R) as bs; list_all2 (fun_of S) bs cs\\<rbrakk>\n    \\<Longrightarrow> list_all2 (fun_of T) as cs", "by (rule list_all2_trans) auto"], ["", "(*>*)"], ["", "lemma rel_list_all2_update_cong:\n  \"\\<lbrakk> i<size xs; list_all2 (fun_of S) xs ys; (x,y) \\<in> S \\<rbrakk> \n  \\<Longrightarrow> list_all2 (fun_of S) (xs[i:=x]) (ys[i:=y])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < length xs; list_all2 (fun_of S) xs ys;\n     (x, y) \\<in> S\\<rbrakk>\n    \\<Longrightarrow> list_all2 (fun_of S) (xs[i := x]) (ys[i := y])", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < length xs; list_all2 (fun_of S) xs ys;\n     (x, y) \\<in> S\\<rbrakk>\n    \\<Longrightarrow> list_all2 (fun_of S) (xs[i := x]) (ys[i := y])", "by (simp add: list_all2_update_cong)"], ["", "(*>*)"], ["", "lemma rel_list_all2_nthD:\n  \"\\<lbrakk> list_all2 (fun_of S) xs ys; p < size xs \\<rbrakk> \\<Longrightarrow> (xs!p,ys!p) \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>list_all2 (fun_of S) xs ys; p < length xs\\<rbrakk>\n    \\<Longrightarrow> (xs ! p, ys ! p) \\<in> S", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>list_all2 (fun_of S) xs ys; p < length xs\\<rbrakk>\n    \\<Longrightarrow> (xs ! p, ys ! p) \\<in> S", "by (drule list_all2_nthD) auto"], ["", "(*>*)"], ["", "lemma rel_list_all2I:\n  \"\\<lbrakk> length a = length b; \\<And>n. n < length a \\<Longrightarrow> (a!n,b!n) \\<in> S \\<rbrakk> \\<Longrightarrow> list_all2 (fun_of S) a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>length a = length b;\n     \\<And>n. n < length a \\<Longrightarrow> (a ! n, b ! n) \\<in> S\\<rbrakk>\n    \\<Longrightarrow> list_all2 (fun_of S) a b", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>length a = length b;\n     \\<And>n. n < length a \\<Longrightarrow> (a ! n, b ! n) \\<in> S\\<rbrakk>\n    \\<Longrightarrow> list_all2 (fun_of S) a b", "by (erule list_all2_all_nthI) simp"], ["", "(*>*)\n\n(*<*)"], ["", "declare fun_of_def [simp del]"], ["", "(*>*)"], ["", "end"]]}