{"file_name": "/home/qj213/afp-2021-10-22/thys/Jinja/J/SmallStep.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Jinja", "problem_names": ["lemmas blocks_induct = blocks.induct[split_format (complete)]", "lemma [simp]:\n  \"\\<lbrakk> size vs = size Vs; size Ts = size Vs \\<rbrakk> \\<Longrightarrow> fv(blocks(Vs,Ts,vs,e)) = fv e - set Vs\"", "lemmas red_reds_induct = red_reds.induct [split_format (complete)]\n  and red_reds_inducts = red_reds.inducts [split_format (complete)]", "lemma converse_rtrancl_induct_red[consumes 1]:\nassumes \"P \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<rightarrow>* \\<langle>e',(h',l')\\<rangle>\"\nand \"\\<And>e h l. R e h l e h l\"\nand \"\\<And>e\\<^sub>0 h\\<^sub>0 l\\<^sub>0 e\\<^sub>1 h\\<^sub>1 l\\<^sub>1 e' h' l'.\n       \\<lbrakk> P \\<turnstile> \\<langle>e\\<^sub>0,(h\\<^sub>0,l\\<^sub>0)\\<rangle> \\<rightarrow> \\<langle>e\\<^sub>1,(h\\<^sub>1,l\\<^sub>1)\\<rangle>; R e\\<^sub>1 h\\<^sub>1 l\\<^sub>1 e' h' l' \\<rbrakk> \\<Longrightarrow> R e\\<^sub>0 h\\<^sub>0 l\\<^sub>0 e' h' l'\"\nshows \"R e h l e' h' l'\"", "lemma [iff]: \"\\<not> P \\<turnstile> \\<langle>[],s\\<rangle> [\\<rightarrow>] \\<langle>es',s'\\<rangle>\"", "lemma [iff]: \"\\<not> P \\<turnstile> \\<langle>Val v,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle>\"", "lemma [iff]: \"\\<not> P \\<turnstile> \\<langle>Throw a,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle>\"", "lemma red_hext_incr: \"P \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<rightarrow> \\<langle>e',(h',l')\\<rangle>  \\<Longrightarrow> h \\<unlhd> h'\"\n  and reds_hext_incr: \"P \\<turnstile> \\<langle>es,(h,l)\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l')\\<rangle>  \\<Longrightarrow> h \\<unlhd> h'\"", "lemma red_lcl_incr: \"P \\<turnstile> \\<langle>e,(h\\<^sub>0,l\\<^sub>0)\\<rangle> \\<rightarrow> \\<langle>e',(h\\<^sub>1,l\\<^sub>1)\\<rangle> \\<Longrightarrow> dom l\\<^sub>0 \\<subseteq> dom l\\<^sub>1\"\nand \"P \\<turnstile> \\<langle>es,(h\\<^sub>0,l\\<^sub>0)\\<rangle> [\\<rightarrow>] \\<langle>es',(h\\<^sub>1,l\\<^sub>1)\\<rangle> \\<Longrightarrow> dom l\\<^sub>0 \\<subseteq> dom l\\<^sub>1\"", "lemma red_lcl_add: \"P \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<rightarrow> \\<langle>e',(h',l')\\<rangle> \\<Longrightarrow> (\\<And>l\\<^sub>0. P \\<turnstile> \\<langle>e,(h,l\\<^sub>0++l)\\<rangle> \\<rightarrow> \\<langle>e',(h',l\\<^sub>0++l')\\<rangle>)\"\nand \"P \\<turnstile> \\<langle>es,(h,l)\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l')\\<rangle> \\<Longrightarrow> (\\<And>l\\<^sub>0. P \\<turnstile> \\<langle>es,(h,l\\<^sub>0++l)\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l\\<^sub>0++l')\\<rangle>)\"", "lemma Red_lcl_add:\nassumes \"P \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<rightarrow>* \\<langle>e',(h',l')\\<rangle>\" shows \"P \\<turnstile> \\<langle>e,(h,l\\<^sub>0++l)\\<rangle> \\<rightarrow>* \\<langle>e',(h',l\\<^sub>0++l')\\<rangle>\""], "translations": [["", "lemmas blocks_induct = blocks.induct[split_format (complete)]"], ["", "lemma [simp]:\n  \"\\<lbrakk> size vs = size Vs; size Ts = size Vs \\<rbrakk> \\<Longrightarrow> fv(blocks(Vs,Ts,vs,e)) = fv e - set Vs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>length vs = length Vs; length Ts = length Vs\\<rbrakk>\n    \\<Longrightarrow> fv (blocks (Vs, Ts, vs, e)) = fv e - set Vs", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>length vs = length Vs; length Ts = length Vs\\<rbrakk>\n    \\<Longrightarrow> fv (blocks (Vs, Ts, vs, e)) = fv e - set Vs", "by (induct rule:blocks_induct) auto"], ["", "(*>*)"], ["", "definition assigned :: \"vname \\<Rightarrow> expr \\<Rightarrow> bool\"\nwhere\n  \"assigned V e  \\<equiv>  \\<exists>v e'. e = (V := Val v;; e')\""], ["", "inductive_set\n  red  :: \"J_prog \\<Rightarrow> ((expr \\<times> state) \\<times> (expr \\<times> state)) set\"\n  and reds  :: \"J_prog \\<Rightarrow> ((expr list \\<times> state) \\<times> (expr list \\<times> state)) set\"\n  and red' :: \"J_prog \\<Rightarrow> expr \\<Rightarrow> state \\<Rightarrow> expr \\<Rightarrow> state \\<Rightarrow> bool\"\n          (\"_ \\<turnstile> ((1\\<langle>_,/_\\<rangle>) \\<rightarrow>/ (1\\<langle>_,/_\\<rangle>))\" [51,0,0,0,0] 81)\n  and reds' :: \"J_prog \\<Rightarrow> expr list \\<Rightarrow> state \\<Rightarrow> expr list \\<Rightarrow> state \\<Rightarrow> bool\"\n          (\"_ \\<turnstile> ((1\\<langle>_,/_\\<rangle>) [\\<rightarrow>]/ (1\\<langle>_,/_\\<rangle>))\" [51,0,0,0,0] 81)\n  for P :: J_prog\nwhere\n\n  \"P \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle> \\<equiv> ((e,s), e',s') \\<in> red P\"\n| \"P \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>] \\<langle>es',s'\\<rangle> \\<equiv> ((es,s), es',s') \\<in> reds P\"\n\n| RedNew:\n  \"\\<lbrakk> new_Addr h = Some a; P \\<turnstile> C has_fields FDTs; h' = h(a\\<mapsto>(C,init_fields FDTs)) \\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> \\<langle>new C, (h,l)\\<rangle> \\<rightarrow> \\<langle>addr a, (h',l)\\<rangle>\"\n\n| RedNewFail:\n  \"new_Addr h = None \\<Longrightarrow>\n  P \\<turnstile> \\<langle>new C, (h,l)\\<rangle> \\<rightarrow> \\<langle>THROW OutOfMemory, (h,l)\\<rangle>\"\n\n| CastRed:\n  \"P \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle> \\<Longrightarrow>\n  P \\<turnstile> \\<langle>Cast C e, s\\<rangle> \\<rightarrow> \\<langle>Cast C e', s'\\<rangle>\"\n\n| RedCastNull:\n  \"P \\<turnstile> \\<langle>Cast C null, s\\<rangle> \\<rightarrow> \\<langle>null,s\\<rangle>\"\n\n| RedCast:\n \"\\<lbrakk> hp s a = Some(D,fs); P \\<turnstile> D \\<preceq>\\<^sup>* C \\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C (addr a), s\\<rangle> \\<rightarrow> \\<langle>addr a, s\\<rangle>\"\n\n| RedCastFail:\n  \"\\<lbrakk> hp s a = Some(D,fs); \\<not> P \\<turnstile> D \\<preceq>\\<^sup>* C \\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C (addr a), s\\<rangle> \\<rightarrow> \\<langle>THROW ClassCast, s\\<rangle>\"\n\n| BinOpRed1:\n  \"P \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle> \\<Longrightarrow>\n  P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2, s\\<rangle> \\<rightarrow> \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2, s'\\<rangle>\"\n\n| BinOpRed2:\n  \"P \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle> \\<Longrightarrow>\n  P \\<turnstile> \\<langle>(Val v\\<^sub>1) \\<guillemotleft>bop\\<guillemotright> e, s\\<rangle> \\<rightarrow> \\<langle>(Val v\\<^sub>1) \\<guillemotleft>bop\\<guillemotright> e', s'\\<rangle>\"\n\n| RedBinOp:\n  \"binop(bop,v\\<^sub>1,v\\<^sub>2) = Some v \\<Longrightarrow>\n  P \\<turnstile> \\<langle>(Val v\\<^sub>1) \\<guillemotleft>bop\\<guillemotright> (Val v\\<^sub>2), s\\<rangle> \\<rightarrow> \\<langle>Val v,s\\<rangle>\"\n\n| RedVar:\n  \"lcl s V = Some v \\<Longrightarrow>\n  P \\<turnstile> \\<langle>Var V,s\\<rangle> \\<rightarrow> \\<langle>Val v,s\\<rangle>\"\n\n| LAssRed:\n  \"P \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle> \\<Longrightarrow>\n  P \\<turnstile> \\<langle>V:=e,s\\<rangle> \\<rightarrow> \\<langle>V:=e',s'\\<rangle>\"\n\n| RedLAss:\n  \"P \\<turnstile> \\<langle>V:=(Val v), (h,l)\\<rangle> \\<rightarrow> \\<langle>unit, (h,l(V\\<mapsto>v))\\<rangle>\"\n\n| FAccRed:\n  \"P \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle> \\<Longrightarrow>\n  P \\<turnstile> \\<langle>e\\<bullet>F{D}, s\\<rangle> \\<rightarrow> \\<langle>e'\\<bullet>F{D}, s'\\<rangle>\"\n\n| RedFAcc:\n  \"\\<lbrakk> hp s a = Some(C,fs); fs(F,D) = Some v \\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> \\<langle>(addr a)\\<bullet>F{D}, s\\<rangle> \\<rightarrow> \\<langle>Val v,s\\<rangle>\"\n\n| RedFAccNull:\n  \"P \\<turnstile> \\<langle>null\\<bullet>F{D}, s\\<rangle> \\<rightarrow> \\<langle>THROW NullPointer, s\\<rangle>\"\n\n| FAssRed1:\n  \"P \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle> \\<Longrightarrow>\n  P \\<turnstile> \\<langle>e\\<bullet>F{D}:=e\\<^sub>2, s\\<rangle> \\<rightarrow> \\<langle>e'\\<bullet>F{D}:=e\\<^sub>2, s'\\<rangle>\"\n\n| FAssRed2:\n  \"P \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle> \\<Longrightarrow>\n  P \\<turnstile> \\<langle>Val v\\<bullet>F{D}:=e, s\\<rangle> \\<rightarrow> \\<langle>Val v\\<bullet>F{D}:=e', s'\\<rangle>\"\n\n| RedFAss:\n  \"h a = Some(C,fs) \\<Longrightarrow>\n  P \\<turnstile> \\<langle>(addr a)\\<bullet>F{D}:=(Val v), (h,l)\\<rangle> \\<rightarrow> \\<langle>unit, (h(a \\<mapsto> (C,fs((F,D) \\<mapsto> v))),l)\\<rangle>\"\n\n| RedFAssNull:\n  \"P \\<turnstile> \\<langle>null\\<bullet>F{D}:=Val v, s\\<rangle> \\<rightarrow> \\<langle>THROW NullPointer, s\\<rangle>\"\n\n| CallObj:\n  \"P \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle> \\<Longrightarrow>\n  P \\<turnstile> \\<langle>e\\<bullet>M(es),s\\<rangle> \\<rightarrow> \\<langle>e'\\<bullet>M(es),s'\\<rangle>\"\n\n| CallParams:\n  \"P \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>] \\<langle>es',s'\\<rangle> \\<Longrightarrow>\n  P \\<turnstile> \\<langle>(Val v)\\<bullet>M(es),s\\<rangle> \\<rightarrow> \\<langle>(Val v)\\<bullet>M(es'),s'\\<rangle>\"\n\n| RedCall:\n  \"\\<lbrakk> hp s a = Some(C,fs); P \\<turnstile> C sees M:Ts\\<rightarrow>T = (pns,body) in D; size vs = size pns; size Ts = size pns \\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> \\<langle>(addr a)\\<bullet>M(map Val vs), s\\<rangle> \\<rightarrow> \\<langle>blocks(this#pns, Class D#Ts, Addr a#vs, body), s\\<rangle>\"\n\n| RedCallNull:\n  \"P \\<turnstile> \\<langle>null\\<bullet>M(map Val vs),s\\<rangle> \\<rightarrow> \\<langle>THROW NullPointer,s\\<rangle>\"\n\n| BlockRedNone:\n  \"\\<lbrakk> P \\<turnstile> \\<langle>e, (h,l(V:=None))\\<rangle> \\<rightarrow> \\<langle>e', (h',l')\\<rangle>; l' V = None; \\<not> assigned V e \\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> \\<langle>{V:T; e}, (h,l)\\<rangle> \\<rightarrow> \\<langle>{V:T; e'}, (h',l'(V := l V))\\<rangle>\"\n\n| BlockRedSome:\n  \"\\<lbrakk> P \\<turnstile> \\<langle>e, (h,l(V:=None))\\<rangle> \\<rightarrow> \\<langle>e', (h',l')\\<rangle>; l' V = Some v;\\<not> assigned V e \\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> \\<langle>{V:T; e}, (h,l)\\<rangle> \\<rightarrow> \\<langle>{V:T := Val v; e'}, (h',l'(V := l V))\\<rangle>\"\n\n| InitBlockRed:\n  \"\\<lbrakk> P \\<turnstile> \\<langle>e, (h,l(V\\<mapsto>v))\\<rangle> \\<rightarrow> \\<langle>e', (h',l')\\<rangle>; l' V = Some v' \\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> \\<langle>{V:T := Val v; e}, (h,l)\\<rangle> \\<rightarrow> \\<langle>{V:T := Val v'; e'}, (h',l'(V := l V))\\<rangle>\"\n\n| RedBlock:\n  \"P \\<turnstile> \\<langle>{V:T; Val u}, s\\<rangle> \\<rightarrow> \\<langle>Val u, s\\<rangle>\"\n\n| RedInitBlock:\n  \"P \\<turnstile> \\<langle>{V:T := Val v; Val u}, s\\<rangle> \\<rightarrow> \\<langle>Val u, s\\<rangle>\"\n\n| SeqRed:\n  \"P \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle> \\<Longrightarrow>\n  P \\<turnstile> \\<langle>e;;e\\<^sub>2, s\\<rangle> \\<rightarrow> \\<langle>e';;e\\<^sub>2, s'\\<rangle>\"\n\n| RedSeq:\n  \"P \\<turnstile> \\<langle>(Val v);;e\\<^sub>2, s\\<rangle> \\<rightarrow> \\<langle>e\\<^sub>2, s\\<rangle>\"\n\n| CondRed:\n  \"P \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle> \\<Longrightarrow>\n  P \\<turnstile> \\<langle>if (e) e\\<^sub>1 else e\\<^sub>2, s\\<rangle> \\<rightarrow> \\<langle>if (e') e\\<^sub>1 else e\\<^sub>2, s'\\<rangle>\"\n\n| RedCondT:\n  \"P \\<turnstile> \\<langle>if (true) e\\<^sub>1 else e\\<^sub>2, s\\<rangle> \\<rightarrow> \\<langle>e\\<^sub>1, s\\<rangle>\"\n\n| RedCondF:\n  \"P \\<turnstile> \\<langle>if (false) e\\<^sub>1 else e\\<^sub>2, s\\<rangle> \\<rightarrow> \\<langle>e\\<^sub>2, s\\<rangle>\"\n\n| RedWhile:\n  \"P \\<turnstile> \\<langle>while(b) c, s\\<rangle> \\<rightarrow> \\<langle>if(b) (c;;while(b) c) else unit, s\\<rangle>\"\n\n| ThrowRed:\n  \"P \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle> \\<Longrightarrow>\n  P \\<turnstile> \\<langle>throw e, s\\<rangle> \\<rightarrow> \\<langle>throw e', s'\\<rangle>\"\n\n| RedThrowNull:\n  \"P \\<turnstile> \\<langle>throw null, s\\<rangle> \\<rightarrow> \\<langle>THROW NullPointer, s\\<rangle>\"\n\n| TryRed:\n  \"P \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle> \\<Longrightarrow>\n  P \\<turnstile> \\<langle>try e catch(C V) e\\<^sub>2, s\\<rangle> \\<rightarrow> \\<langle>try e' catch(C V) e\\<^sub>2, s'\\<rangle>\"\n\n| RedTry:\n  \"P \\<turnstile> \\<langle>try (Val v) catch(C V) e\\<^sub>2, s\\<rangle> \\<rightarrow> \\<langle>Val v, s\\<rangle>\"\n\n| RedTryCatch:\n  \"\\<lbrakk> hp s a = Some(D,fs); P \\<turnstile> D \\<preceq>\\<^sup>* C \\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> \\<langle>try (Throw a) catch(C V) e\\<^sub>2, s\\<rangle> \\<rightarrow> \\<langle>{V:Class C := addr a; e\\<^sub>2}, s\\<rangle>\"\n\n| RedTryFail:\n  \"\\<lbrakk> hp s a = Some(D,fs); \\<not> P \\<turnstile> D \\<preceq>\\<^sup>* C \\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> \\<langle>try (Throw a) catch(C V) e\\<^sub>2, s\\<rangle> \\<rightarrow> \\<langle>Throw a, s\\<rangle>\"\n\n| ListRed1:\n  \"P \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle> \\<Longrightarrow>\n  P \\<turnstile> \\<langle>e#es,s\\<rangle> [\\<rightarrow>] \\<langle>e'#es,s'\\<rangle>\"\n\n| ListRed2:\n  \"P \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>] \\<langle>es',s'\\<rangle> \\<Longrightarrow>\n  P \\<turnstile> \\<langle>Val v # es,s\\<rangle> [\\<rightarrow>] \\<langle>Val v # es',s'\\<rangle>\"\n\n\\<comment> \\<open>Exception propagation\\<close>\n\n| CastThrow: \"P \\<turnstile> \\<langle>Cast C (throw e), s\\<rangle> \\<rightarrow> \\<langle>throw e, s\\<rangle>\"\n| BinOpThrow1: \"P \\<turnstile> \\<langle>(throw e) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2, s\\<rangle> \\<rightarrow> \\<langle>throw e, s\\<rangle>\"\n| BinOpThrow2: \"P \\<turnstile> \\<langle>(Val v\\<^sub>1) \\<guillemotleft>bop\\<guillemotright> (throw e), s\\<rangle> \\<rightarrow> \\<langle>throw e, s\\<rangle>\"\n| LAssThrow: \"P \\<turnstile> \\<langle>V:=(throw e), s\\<rangle> \\<rightarrow> \\<langle>throw e, s\\<rangle>\"\n| FAccThrow: \"P \\<turnstile> \\<langle>(throw e)\\<bullet>F{D}, s\\<rangle> \\<rightarrow> \\<langle>throw e, s\\<rangle>\"\n| FAssThrow1: \"P \\<turnstile> \\<langle>(throw e)\\<bullet>F{D}:=e\\<^sub>2, s\\<rangle> \\<rightarrow> \\<langle>throw e,s\\<rangle>\"\n| FAssThrow2: \"P \\<turnstile> \\<langle>Val v\\<bullet>F{D}:=(throw e), s\\<rangle> \\<rightarrow> \\<langle>throw e, s\\<rangle>\"\n| CallThrowObj: \"P \\<turnstile> \\<langle>(throw e)\\<bullet>M(es), s\\<rangle> \\<rightarrow> \\<langle>throw e, s\\<rangle>\"\n| CallThrowParams: \"\\<lbrakk> es = map Val vs @ throw e # es' \\<rbrakk> \\<Longrightarrow> P \\<turnstile> \\<langle>(Val v)\\<bullet>M(es), s\\<rangle> \\<rightarrow> \\<langle>throw e, s\\<rangle>\"\n| BlockThrow: \"P \\<turnstile> \\<langle>{V:T; Throw a}, s\\<rangle> \\<rightarrow> \\<langle>Throw a, s\\<rangle>\"\n| InitBlockThrow: \"P \\<turnstile> \\<langle>{V:T := Val v; Throw a}, s\\<rangle> \\<rightarrow> \\<langle>Throw a, s\\<rangle>\"\n| SeqThrow: \"P \\<turnstile> \\<langle>(throw e);;e\\<^sub>2, s\\<rangle> \\<rightarrow> \\<langle>throw e, s\\<rangle>\"\n| CondThrow: \"P \\<turnstile> \\<langle>if (throw e) e\\<^sub>1 else e\\<^sub>2, s\\<rangle> \\<rightarrow> \\<langle>throw e, s\\<rangle>\"\n| ThrowThrow: \"P \\<turnstile> \\<langle>throw(throw e), s\\<rangle> \\<rightarrow> \\<langle>throw e, s\\<rangle>\""], ["", "(*<*)"], ["", "lemmas red_reds_induct = red_reds.induct [split_format (complete)]\n  and red_reds_inducts = red_reds.inducts [split_format (complete)]"], ["", "inductive_cases [elim!]:\n \"P \\<turnstile> \\<langle>V:=e,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle>\"\n \"P \\<turnstile> \\<langle>e1;;e2,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle>\""], ["", "(*>*)"], ["", "subsection\\<open>The reflexive transitive closure\\<close>"], ["", "abbreviation\n  Step :: \"J_prog \\<Rightarrow> expr \\<Rightarrow> state \\<Rightarrow> expr \\<Rightarrow> state \\<Rightarrow> bool\"\n          (\"_ \\<turnstile> ((1\\<langle>_,/_\\<rangle>) \\<rightarrow>*/ (1\\<langle>_,/_\\<rangle>))\" [51,0,0,0,0] 81)\n  where \"P \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>* \\<langle>e',s'\\<rangle> \\<equiv> ((e,s), e',s') \\<in> (red P)\\<^sup>*\""], ["", "abbreviation\n  Steps :: \"J_prog \\<Rightarrow> expr list \\<Rightarrow> state \\<Rightarrow> expr list \\<Rightarrow> state \\<Rightarrow> bool\"\n          (\"_ \\<turnstile> ((1\\<langle>_,/_\\<rangle>) [\\<rightarrow>]*/ (1\\<langle>_,/_\\<rangle>))\" [51,0,0,0,0] 81)\n  where \"P \\<turnstile> \\<langle>es,s\\<rangle> [\\<rightarrow>]* \\<langle>es',s'\\<rangle> \\<equiv> ((es,s), es',s') \\<in> (reds P)\\<^sup>*\""], ["", "lemma converse_rtrancl_induct_red[consumes 1]:\nassumes \"P \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<rightarrow>* \\<langle>e',(h',l')\\<rangle>\"\nand \"\\<And>e h l. R e h l e h l\"\nand \"\\<And>e\\<^sub>0 h\\<^sub>0 l\\<^sub>0 e\\<^sub>1 h\\<^sub>1 l\\<^sub>1 e' h' l'.\n       \\<lbrakk> P \\<turnstile> \\<langle>e\\<^sub>0,(h\\<^sub>0,l\\<^sub>0)\\<rangle> \\<rightarrow> \\<langle>e\\<^sub>1,(h\\<^sub>1,l\\<^sub>1)\\<rangle>; R e\\<^sub>1 h\\<^sub>1 l\\<^sub>1 e' h' l' \\<rbrakk> \\<Longrightarrow> R e\\<^sub>0 h\\<^sub>0 l\\<^sub>0 e' h' l'\"\nshows \"R e h l e' h' l'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R e h l e' h' l'", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. R e h l e' h' l'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. R e h l e' h' l'", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. R e h l e' h' l'", "fix s s'"], ["proof (state)\ngoal (1 subgoal):\n 1. R e h l e' h' l'", "assume reds: \"P \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>* \\<langle>e',s'\\<rangle>\"\n       and base: \"\\<And>e s. R e (hp s) (lcl s) e (hp s) (lcl s)\"\n       and red\\<^sub>1: \"\\<And>e\\<^sub>0 s\\<^sub>0 e\\<^sub>1 s\\<^sub>1 e' s'.\n           \\<lbrakk> P \\<turnstile> \\<langle>e\\<^sub>0,s\\<^sub>0\\<rangle> \\<rightarrow> \\<langle>e\\<^sub>1,s\\<^sub>1\\<rangle>; R e\\<^sub>1 (hp s\\<^sub>1) (lcl s\\<^sub>1) e' (hp s') (lcl s') \\<rbrakk>\n           \\<Longrightarrow> R e\\<^sub>0 (hp s\\<^sub>0) (lcl s\\<^sub>0) e' (hp s') (lcl s')\""], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s'\\<rangle>\n  R ?e (hp ?s) (lcl ?s) ?e (hp ?s) (lcl ?s)\n  \\<lbrakk>P \\<turnstile> \\<langle>?e\\<^sub>0,\n                           ?s\\<^sub>0\\<rangle> \\<rightarrow>\n                          \\<langle>?e\\<^sub>1,?s\\<^sub>1\\<rangle>;\n   R ?e\\<^sub>1 (hp ?s\\<^sub>1) (lcl ?s\\<^sub>1) ?e' (hp ?s')\n    (lcl ?s')\\<rbrakk>\n  \\<Longrightarrow> R ?e\\<^sub>0 (hp ?s\\<^sub>0) (lcl ?s\\<^sub>0) ?e'\n                     (hp ?s') (lcl ?s')\n\ngoal (1 subgoal):\n 1. R e h l e' h' l'", "from reds"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s'\\<rangle>", "have \"R e (hp s) (lcl s) e' (hp s') (lcl s')\""], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s'\\<rangle>\n\ngoal (1 subgoal):\n 1. R e (hp s) (lcl s) e' (hp s') (lcl s')", "proof (induct rule:converse_rtrancl_induct2)"], ["proof (state)\ngoal (2 subgoals):\n 1. R e' (hp s') (lcl s') e' (hp s') (lcl s')\n 2. \\<And>a b aa ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,b\\<rangle> \\<rightarrow>\n                               \\<langle>aa,ba\\<rangle>;\n        P \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s'\\<rangle>;\n        R aa (hp ba) (lcl ba) e' (hp s') (lcl s')\\<rbrakk>\n       \\<Longrightarrow> R a (hp b) (lcl b) e' (hp s') (lcl s')", "case refl"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. R e' (hp s') (lcl s') e' (hp s') (lcl s')\n 2. \\<And>a b aa ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,b\\<rangle> \\<rightarrow>\n                               \\<langle>aa,ba\\<rangle>;\n        P \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s'\\<rangle>;\n        R aa (hp ba) (lcl ba) e' (hp s') (lcl s')\\<rbrakk>\n       \\<Longrightarrow> R a (hp b) (lcl b) e' (hp s') (lcl s')", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. R e' (hp s') (lcl s') e' (hp s') (lcl s')", "by(rule base)"], ["proof (state)\nthis:\n  R e' (hp s') (lcl s') e' (hp s') (lcl s')\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,b\\<rangle> \\<rightarrow>\n                               \\<langle>aa,ba\\<rangle>;\n        P \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s'\\<rangle>;\n        R aa (hp ba) (lcl ba) e' (hp s') (lcl s')\\<rbrakk>\n       \\<Longrightarrow> R a (hp b) (lcl b) e' (hp s') (lcl s')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,b\\<rangle> \\<rightarrow>\n                               \\<langle>aa,ba\\<rangle>;\n        P \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s'\\<rangle>;\n        R aa (hp ba) (lcl ba) e' (hp s') (lcl s')\\<rbrakk>\n       \\<Longrightarrow> R a (hp b) (lcl b) e' (hp s') (lcl s')", "case (step e\\<^sub>0 s\\<^sub>0 e s)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e\\<^sub>0,s\\<^sub>0\\<rangle> \\<rightarrow>\n                 \\<langle>e,s\\<rangle>\n  P \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s'\\<rangle>\n  R e (hp s) (lcl s) e' (hp s') (lcl s')\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,b\\<rangle> \\<rightarrow>\n                               \\<langle>aa,ba\\<rangle>;\n        P \\<turnstile> \\<langle>aa,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s'\\<rangle>;\n        R aa (hp ba) (lcl ba) e' (hp s') (lcl s')\\<rbrakk>\n       \\<Longrightarrow> R a (hp b) (lcl b) e' (hp s') (lcl s')", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e\\<^sub>0,s\\<^sub>0\\<rangle> \\<rightarrow>\n                 \\<langle>e,s\\<rangle>\n  P \\<turnstile> \\<langle>e,s\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s'\\<rangle>\n  R e (hp s) (lcl s) e' (hp s') (lcl s')\n\ngoal (1 subgoal):\n 1. R e\\<^sub>0 (hp s\\<^sub>0) (lcl s\\<^sub>0) e' (hp s') (lcl s')", "by(blast intro:red\\<^sub>1)"], ["proof (state)\nthis:\n  R e\\<^sub>0 (hp s\\<^sub>0) (lcl s\\<^sub>0) e' (hp s') (lcl s')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  R e (hp s) (lcl s) e' (hp s') (lcl s')\n\ngoal (1 subgoal):\n 1. R e h l e' h' l'", "}"], ["proof (state)\nthis:\n  \\<lbrakk>P \\<turnstile> \\<langle>e,?s2\\<rangle> \\<rightarrow>*\n                          \\<langle>e',?s'2\\<rangle>;\n   \\<And>e s. R e (hp s) (lcl s) e (hp s) (lcl s);\n   \\<And>e\\<^sub>0 s\\<^sub>0 e\\<^sub>1 s\\<^sub>1 e' s'.\n      \\<lbrakk>P \\<turnstile> \\<langle>e\\<^sub>0,\n                               s\\<^sub>0\\<rangle> \\<rightarrow>\n                              \\<langle>e\\<^sub>1,s\\<^sub>1\\<rangle>;\n       R e\\<^sub>1 (hp s\\<^sub>1) (lcl s\\<^sub>1) e' (hp s')\n        (lcl s')\\<rbrakk>\n      \\<Longrightarrow> R e\\<^sub>0 (hp s\\<^sub>0) (lcl s\\<^sub>0) e'\n                         (hp s') (lcl s')\\<rbrakk>\n  \\<Longrightarrow> R e (hp ?s2) (lcl ?s2) e' (hp ?s'2) (lcl ?s'2)\n\ngoal (1 subgoal):\n 1. R e h l e' h' l'", "with assms"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>*\n                 \\<langle>e',(h', l')\\<rangle>\n  R ?e ?h ?l ?e ?h ?l\n  \\<lbrakk>P \\<turnstile> \\<langle>?e\\<^sub>0,\n                           (?h\\<^sub>0, ?l\\<^sub>0)\\<rangle> \\<rightarrow>\n                          \\<langle>?e\\<^sub>1,\n                           (?h\\<^sub>1, ?l\\<^sub>1)\\<rangle>;\n   R ?e\\<^sub>1 ?h\\<^sub>1 ?l\\<^sub>1 ?e' ?h' ?l'\\<rbrakk>\n  \\<Longrightarrow> R ?e\\<^sub>0 ?h\\<^sub>0 ?l\\<^sub>0 ?e' ?h' ?l'\n  \\<lbrakk>P \\<turnstile> \\<langle>e,?s2\\<rangle> \\<rightarrow>*\n                          \\<langle>e',?s'2\\<rangle>;\n   \\<And>e s. R e (hp s) (lcl s) e (hp s) (lcl s);\n   \\<And>e\\<^sub>0 s\\<^sub>0 e\\<^sub>1 s\\<^sub>1 e' s'.\n      \\<lbrakk>P \\<turnstile> \\<langle>e\\<^sub>0,\n                               s\\<^sub>0\\<rangle> \\<rightarrow>\n                              \\<langle>e\\<^sub>1,s\\<^sub>1\\<rangle>;\n       R e\\<^sub>1 (hp s\\<^sub>1) (lcl s\\<^sub>1) e' (hp s')\n        (lcl s')\\<rbrakk>\n      \\<Longrightarrow> R e\\<^sub>0 (hp s\\<^sub>0) (lcl s\\<^sub>0) e'\n                         (hp s') (lcl s')\\<rbrakk>\n  \\<Longrightarrow> R e (hp ?s2) (lcl ?s2) e' (hp ?s'2) (lcl ?s'2)", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>*\n                 \\<langle>e',(h', l')\\<rangle>\n  R ?e ?h ?l ?e ?h ?l\n  \\<lbrakk>P \\<turnstile> \\<langle>?e\\<^sub>0,\n                           (?h\\<^sub>0, ?l\\<^sub>0)\\<rangle> \\<rightarrow>\n                          \\<langle>?e\\<^sub>1,\n                           (?h\\<^sub>1, ?l\\<^sub>1)\\<rangle>;\n   R ?e\\<^sub>1 ?h\\<^sub>1 ?l\\<^sub>1 ?e' ?h' ?l'\\<rbrakk>\n  \\<Longrightarrow> R ?e\\<^sub>0 ?h\\<^sub>0 ?l\\<^sub>0 ?e' ?h' ?l'\n  \\<lbrakk>P \\<turnstile> \\<langle>e,?s2\\<rangle> \\<rightarrow>*\n                          \\<langle>e',?s'2\\<rangle>;\n   \\<And>e s. R e (hp s) (lcl s) e (hp s) (lcl s);\n   \\<And>e\\<^sub>0 s\\<^sub>0 e\\<^sub>1 s\\<^sub>1 e' s'.\n      \\<lbrakk>P \\<turnstile> \\<langle>e\\<^sub>0,\n                               s\\<^sub>0\\<rangle> \\<rightarrow>\n                              \\<langle>e\\<^sub>1,s\\<^sub>1\\<rangle>;\n       R e\\<^sub>1 (hp s\\<^sub>1) (lcl s\\<^sub>1) e' (hp s')\n        (lcl s')\\<rbrakk>\n      \\<Longrightarrow> R e\\<^sub>0 (hp s\\<^sub>0) (lcl s\\<^sub>0) e'\n                         (hp s') (lcl s')\\<rbrakk>\n  \\<Longrightarrow> R e (hp ?s2) (lcl ?s2) e' (hp ?s'2) (lcl ?s'2)\n\ngoal (1 subgoal):\n 1. R e h l e' h' l'", "by fastforce"], ["proof (state)\nthis:\n  R e h l e' h' l'\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "subsection\\<open>Some easy lemmas\\<close>"], ["", "lemma [iff]: \"\\<not> P \\<turnstile> \\<langle>[],s\\<rangle> [\\<rightarrow>] \\<langle>es',s'\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (([], s), es', s') \\<notin> reds P", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (([], s), es', s') \\<notin> reds P", "by(blast elim: reds.cases)"], ["", "(*>*)"], ["", "lemma [iff]: \"\\<not> P \\<turnstile> \\<langle>Val v,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((Val v, s), e', s') \\<notin> red P", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((Val v, s), e', s') \\<notin> red P", "by(fastforce elim: red.cases)"], ["", "(*>*)"], ["", "lemma [iff]: \"\\<not> P \\<turnstile> \\<langle>Throw a,s\\<rangle> \\<rightarrow> \\<langle>e',s'\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((Throw a, s), e', s') \\<notin> red P", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((Throw a, s), e', s') \\<notin> red P", "by(fastforce elim: red.cases)"], ["", "(*>*)"], ["", "lemma red_hext_incr: \"P \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<rightarrow> \\<langle>e',(h',l')\\<rangle>  \\<Longrightarrow> h \\<unlhd> h'\"\n  and reds_hext_incr: \"P \\<turnstile> \\<langle>es,(h,l)\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l')\\<rangle>  \\<Longrightarrow> h \\<unlhd> h'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l')\\<rangle> \\<Longrightarrow>\n     h \\<unlhd> h') &&&\n    (P \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                    \\<langle>es',(h', l')\\<rangle> \\<Longrightarrow>\n     h \\<unlhd> h')", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l')\\<rangle> \\<Longrightarrow>\n     h \\<unlhd> h') &&&\n    (P \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                    \\<langle>es',(h', l')\\<rangle> \\<Longrightarrow>\n     h \\<unlhd> h')", "proof(induct rule:red_reds_inducts)"], ["proof (state)\ngoal (56 subgoals):\n 1. \\<And>h a C FDTs h' l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> h \\<unlhd> h'\n 2. \\<And>h C l. new_Addr h = None \\<Longrightarrow> h \\<unlhd> h\n 3. \\<And>e a b e' aa ba C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        a \\<unlhd> aa\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> aa\n 4. \\<And>C a b. a \\<unlhd> a\n 5. \\<And>a b aa D fs C.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> a\n 6. \\<And>a b aa D fs C.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> a\n 7. \\<And>e a b e' aa ba bop e\\<^sub>2.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        a \\<unlhd> aa\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> aa\n 8. \\<And>e a b e' aa ba v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        a \\<unlhd> aa\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> aa\n 9. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       a \\<unlhd> a\n 10. \\<And>a b V v.\n        lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow> a \\<unlhd> a\nA total of 56 subgoals...", "case RedNew"], ["proof (state)\nthis:\n  new_Addr h_ = \\<lfloor>a_\\<rfloor>\n  P \\<turnstile> C_ has_fields FDTs_\n  h'_ = h_(a_ \\<mapsto> (C_, init_fields FDTs_))\n\ngoal (56 subgoals):\n 1. \\<And>h a C FDTs h' l.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> h \\<unlhd> h'\n 2. \\<And>h C l. new_Addr h = None \\<Longrightarrow> h \\<unlhd> h\n 3. \\<And>e a b e' aa ba C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        a \\<unlhd> aa\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> aa\n 4. \\<And>C a b. a \\<unlhd> a\n 5. \\<And>a b aa D fs C.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> a\n 6. \\<And>a b aa D fs C.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> a\n 7. \\<And>e a b e' aa ba bop e\\<^sub>2.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        a \\<unlhd> aa\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> aa\n 8. \\<And>e a b e' aa ba v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        a \\<unlhd> aa\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> aa\n 9. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       a \\<unlhd> a\n 10. \\<And>a b V v.\n        lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow> a \\<unlhd> a\nA total of 56 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  new_Addr h_ = \\<lfloor>a_\\<rfloor>\n  P \\<turnstile> C_ has_fields FDTs_\n  h'_ = h_(a_ \\<mapsto> (C_, init_fields FDTs_))\n\ngoal (1 subgoal):\n 1. h_ \\<unlhd> h'_", "by(fastforce dest:new_Addr_SomeD simp:hext_def split:if_splits)"], ["proof (state)\nthis:\n  h_ \\<unlhd> h'_\n\ngoal (55 subgoals):\n 1. \\<And>h C l. new_Addr h = None \\<Longrightarrow> h \\<unlhd> h\n 2. \\<And>e a b e' aa ba C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        a \\<unlhd> aa\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> aa\n 3. \\<And>C a b. a \\<unlhd> a\n 4. \\<And>a b aa D fs C.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> a\n 5. \\<And>a b aa D fs C.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> a\n 6. \\<And>e a b e' aa ba bop e\\<^sub>2.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        a \\<unlhd> aa\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> aa\n 7. \\<And>e a b e' aa ba v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        a \\<unlhd> aa\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> aa\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       a \\<unlhd> a\n 9. \\<And>a b V v.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow> a \\<unlhd> a\n 10. \\<And>e a b e' aa ba V.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                \\<langle>e',(aa, ba)\\<rangle>;\n         a \\<unlhd> aa\\<rbrakk>\n        \\<Longrightarrow> a \\<unlhd> aa\nA total of 55 subgoals...", "next"], ["proof (state)\ngoal (55 subgoals):\n 1. \\<And>h C l. new_Addr h = None \\<Longrightarrow> h \\<unlhd> h\n 2. \\<And>e a b e' aa ba C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        a \\<unlhd> aa\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> aa\n 3. \\<And>C a b. a \\<unlhd> a\n 4. \\<And>a b aa D fs C.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> a\n 5. \\<And>a b aa D fs C.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> a\n 6. \\<And>e a b e' aa ba bop e\\<^sub>2.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        a \\<unlhd> aa\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> aa\n 7. \\<And>e a b e' aa ba v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        a \\<unlhd> aa\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> aa\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       a \\<unlhd> a\n 9. \\<And>a b V v.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow> a \\<unlhd> a\n 10. \\<And>e a b e' aa ba V.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                \\<langle>e',(aa, ba)\\<rangle>;\n         a \\<unlhd> aa\\<rbrakk>\n        \\<Longrightarrow> a \\<unlhd> aa\nA total of 55 subgoals...", "case RedFAss"], ["proof (state)\nthis:\n  h_ a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n\ngoal (55 subgoals):\n 1. \\<And>h C l. new_Addr h = None \\<Longrightarrow> h \\<unlhd> h\n 2. \\<And>e a b e' aa ba C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        a \\<unlhd> aa\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> aa\n 3. \\<And>C a b. a \\<unlhd> a\n 4. \\<And>a b aa D fs C.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> a\n 5. \\<And>a b aa D fs C.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> a\n 6. \\<And>e a b e' aa ba bop e\\<^sub>2.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        a \\<unlhd> aa\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> aa\n 7. \\<And>e a b e' aa ba v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        a \\<unlhd> aa\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> aa\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       a \\<unlhd> a\n 9. \\<And>a b V v.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow> a \\<unlhd> a\n 10. \\<And>e a b e' aa ba V.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                \\<langle>e',(aa, ba)\\<rangle>;\n         a \\<unlhd> aa\\<rbrakk>\n        \\<Longrightarrow> a \\<unlhd> aa\nA total of 55 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  h_ a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n\ngoal (1 subgoal):\n 1. h_ \\<unlhd> h_(a_ \\<mapsto> (C_, fs_((F_, D_) \\<mapsto> v_)))", "by(simp add:hext_def split:if_splits)"], ["proof (state)\nthis:\n  h_ \\<unlhd> h_(a_ \\<mapsto> (C_, fs_((F_, D_) \\<mapsto> v_)))\n\ngoal (54 subgoals):\n 1. \\<And>h C l. new_Addr h = None \\<Longrightarrow> h \\<unlhd> h\n 2. \\<And>e a b e' aa ba C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        a \\<unlhd> aa\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> aa\n 3. \\<And>C a b. a \\<unlhd> a\n 4. \\<And>a b aa D fs C.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> a\n 5. \\<And>a b aa D fs C.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> a\n 6. \\<And>e a b e' aa ba bop e\\<^sub>2.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        a \\<unlhd> aa\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> aa\n 7. \\<And>e a b e' aa ba v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        a \\<unlhd> aa\\<rbrakk>\n       \\<Longrightarrow> a \\<unlhd> aa\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       a \\<unlhd> a\n 9. \\<And>a b V v.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow> a \\<unlhd> a\n 10. \\<And>e a b e' aa ba V.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                \\<langle>e',(aa, ba)\\<rangle>;\n         a \\<unlhd> aa\\<rbrakk>\n        \\<Longrightarrow> a \\<unlhd> aa\nA total of 54 subgoals...", "qed simp_all"], ["", "(*>*)"], ["", "lemma red_lcl_incr: \"P \\<turnstile> \\<langle>e,(h\\<^sub>0,l\\<^sub>0)\\<rangle> \\<rightarrow> \\<langle>e',(h\\<^sub>1,l\\<^sub>1)\\<rangle> \\<Longrightarrow> dom l\\<^sub>0 \\<subseteq> dom l\\<^sub>1\"\nand \"P \\<turnstile> \\<langle>es,(h\\<^sub>0,l\\<^sub>0)\\<rangle> [\\<rightarrow>] \\<langle>es',(h\\<^sub>1,l\\<^sub>1)\\<rangle> \\<Longrightarrow> dom l\\<^sub>0 \\<subseteq> dom l\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h\\<^sub>0, l\\<^sub>0)\\<rangle> \\<rightarrow>\n                    \\<langle>e',\n                     (h\\<^sub>1, l\\<^sub>1)\\<rangle> \\<Longrightarrow>\n     dom l\\<^sub>0 \\<subseteq> dom l\\<^sub>1) &&&\n    (P \\<turnstile> \\<langle>es,\n                     (h\\<^sub>0, l\\<^sub>0)\\<rangle> [\\<rightarrow>]\n                    \\<langle>es',\n                     (h\\<^sub>1, l\\<^sub>1)\\<rangle> \\<Longrightarrow>\n     dom l\\<^sub>0 \\<subseteq> dom l\\<^sub>1)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h\\<^sub>0, l\\<^sub>0)\\<rangle> \\<rightarrow>\n                    \\<langle>e',\n                     (h\\<^sub>1, l\\<^sub>1)\\<rangle> \\<Longrightarrow>\n     dom l\\<^sub>0 \\<subseteq> dom l\\<^sub>1) &&&\n    (P \\<turnstile> \\<langle>es,\n                     (h\\<^sub>0, l\\<^sub>0)\\<rangle> [\\<rightarrow>]\n                    \\<langle>es',\n                     (h\\<^sub>1, l\\<^sub>1)\\<rangle> \\<Longrightarrow>\n     dom l\\<^sub>0 \\<subseteq> dom l\\<^sub>1)", "by(induct rule: red_reds_inducts)(auto simp del:fun_upd_apply)"], ["", "(*>*)"], ["", "lemma red_lcl_add: \"P \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<rightarrow> \\<langle>e',(h',l')\\<rangle> \\<Longrightarrow> (\\<And>l\\<^sub>0. P \\<turnstile> \\<langle>e,(h,l\\<^sub>0++l)\\<rangle> \\<rightarrow> \\<langle>e',(h',l\\<^sub>0++l')\\<rangle>)\"\nand \"P \\<turnstile> \\<langle>es,(h,l)\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l')\\<rangle> \\<Longrightarrow> (\\<And>l\\<^sub>0. P \\<turnstile> \\<langle>es,(h,l\\<^sub>0++l)\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l\\<^sub>0++l')\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l')\\<rangle> \\<Longrightarrow>\n     (\\<And>l\\<^sub>0.\n         P \\<turnstile> \\<langle>e,\n                         (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>)) &&&\n    (P \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                    \\<langle>es',(h', l')\\<rangle> \\<Longrightarrow>\n     (\\<And>l\\<^sub>0.\n         P \\<turnstile> \\<langle>es,\n                         (h, l\\<^sub>0 ++ l)\\<rangle> [\\<rightarrow>]\n                        \\<langle>es',(h', l\\<^sub>0 ++ l')\\<rangle>))", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l')\\<rangle> \\<Longrightarrow>\n     (\\<And>l\\<^sub>0.\n         P \\<turnstile> \\<langle>e,\n                         (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>)) &&&\n    (P \\<turnstile> \\<langle>es,(h, l)\\<rangle> [\\<rightarrow>]\n                    \\<langle>es',(h', l')\\<rangle> \\<Longrightarrow>\n     (\\<And>l\\<^sub>0.\n         P \\<turnstile> \\<langle>es,\n                         (h, l\\<^sub>0 ++ l)\\<rangle> [\\<rightarrow>]\n                        \\<langle>es',(h', l\\<^sub>0 ++ l')\\<rangle>))", "proof (induct rule:red_reds_inducts)"], ["proof (state)\ngoal (56 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>a b aa D fs C l\\<^sub>0.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C (addr aa),\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>addr aa,(a, l\\<^sub>0 ++ b)\\<rangle>\n 6. \\<And>a b aa D fs C l\\<^sub>0.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C (addr aa),\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>THROW ClassCast,(a, l\\<^sub>0 ++ b)\\<rangle>\n 7. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 8. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 9. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 10. \\<And>a b V v l\\<^sub>0.\n        lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n        P \\<turnstile> \\<langle>Var V,\n                        (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                       \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\nA total of 56 subgoals...", "case RedCast"], ["proof (state)\nthis:\n  hp (a___, b_) a_ = \\<lfloor>(D_, fs_)\\<rfloor>\n  P \\<turnstile> D_ \\<preceq>\\<^sup>* C_\n\ngoal (56 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>a b aa D fs C l\\<^sub>0.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C (addr aa),\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>addr aa,(a, l\\<^sub>0 ++ b)\\<rangle>\n 6. \\<And>a b aa D fs C l\\<^sub>0.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C (addr aa),\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>THROW ClassCast,(a, l\\<^sub>0 ++ b)\\<rangle>\n 7. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 8. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 9. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 10. \\<And>a b V v l\\<^sub>0.\n        lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n        P \\<turnstile> \\<langle>Var V,\n                        (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                       \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\nA total of 56 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  hp (a___, b_) a_ = \\<lfloor>(D_, fs_)\\<rfloor>\n  P \\<turnstile> D_ \\<preceq>\\<^sup>* C_\n\ngoal (1 subgoal):\n 1. P \\<turnstile> \\<langle>Cast C_ (addr a_),\n                    (a___, l\\<^sub>0 ++ b_)\\<rangle> \\<rightarrow>\n                   \\<langle>addr a_,(a___, l\\<^sub>0 ++ b_)\\<rangle>", "by(fastforce intro:red_reds.intros)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>Cast C_ (addr a_),\n                  (a___, l\\<^sub>0 ++ b_)\\<rangle> \\<rightarrow>\n                 \\<langle>addr a_,(a___, l\\<^sub>0 ++ b_)\\<rangle>\n\ngoal (55 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>a b aa D fs C l\\<^sub>0.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C (addr aa),\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>THROW ClassCast,(a, l\\<^sub>0 ++ b)\\<rangle>\n 6. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 10. \\<And>e a b e' aa ba V l\\<^sub>0.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>l\\<^sub>0.\n            P \\<turnstile> \\<langle>e,\n                            (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                           \\<langle>e',\n                            (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n    (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n   \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\nA total of 55 subgoals...", "next"], ["proof (state)\ngoal (55 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>a b aa D fs C l\\<^sub>0.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C (addr aa),\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>THROW ClassCast,(a, l\\<^sub>0 ++ b)\\<rangle>\n 6. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 10. \\<And>e a b e' aa ba V l\\<^sub>0.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>l\\<^sub>0.\n            P \\<turnstile> \\<langle>e,\n                            (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                           \\<langle>e',\n                            (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n    (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n   \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\nA total of 55 subgoals...", "case RedCastFail"], ["proof (state)\nthis:\n  hp (a___, b_) a_ = \\<lfloor>(D_, fs_)\\<rfloor>\n  (D_, C_) \\<notin> (subcls1 P)\\<^sup>*\n\ngoal (55 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>a b aa D fs C l\\<^sub>0.\n       \\<lbrakk>hp (a, b) aa = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C (addr aa),\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>THROW ClassCast,(a, l\\<^sub>0 ++ b)\\<rangle>\n 6. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 10. \\<And>e a b e' aa ba V l\\<^sub>0.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                                \\<langle>e',(aa, ba)\\<rangle>;\n         \\<And>l\\<^sub>0.\n            P \\<turnstile> \\<langle>e,\n                            (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                           \\<langle>e',\n                            (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n    (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n   \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\nA total of 55 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  hp (a___, b_) a_ = \\<lfloor>(D_, fs_)\\<rfloor>\n  (D_, C_) \\<notin> (subcls1 P)\\<^sup>*\n\ngoal (1 subgoal):\n 1. P \\<turnstile> \\<langle>Cast C_ (addr a_),\n                    (a___, l\\<^sub>0 ++ b_)\\<rangle> \\<rightarrow>\n                   \\<langle>THROW ClassCast,(a___, l\\<^sub>0 ++ b_)\\<rangle>", "by(force intro:red_reds.intros)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>Cast C_ (addr a_),\n                  (a___, l\\<^sub>0 ++ b_)\\<rangle> \\<rightarrow>\n                 \\<langle>THROW ClassCast,(a___, l\\<^sub>0 ++ b_)\\<rangle>\n\ngoal (54 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 54 subgoals...", "next"], ["proof (state)\ngoal (54 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 54 subgoals...", "case RedFAcc"], ["proof (state)\nthis:\n  hp (a___, b_) a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  fs_ (F_, D_) = \\<lfloor>v_\\<rfloor>\n\ngoal (54 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 54 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  hp (a___, b_) a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  fs_ (F_, D_) = \\<lfloor>v_\\<rfloor>\n\ngoal (1 subgoal):\n 1. P \\<turnstile> \\<langle>addr a_\\<bullet>F_{D_},\n                    (a___, l\\<^sub>0 ++ b_)\\<rangle> \\<rightarrow>\n                   \\<langle>Val v_,(a___, l\\<^sub>0 ++ b_)\\<rangle>", "by(fastforce intro:red_reds.intros)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>addr a_\\<bullet>F_{D_},\n                  (a___, l\\<^sub>0 ++ b_)\\<rangle> \\<rightarrow>\n                 \\<langle>Val v_,(a___, l\\<^sub>0 ++ b_)\\<rangle>\n\ngoal (53 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 53 subgoals...", "next"], ["proof (state)\ngoal (53 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 53 subgoals...", "case RedCall"], ["proof (state)\nthis:\n  hp (a___, b_) a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  P \\<turnstile> C_ sees M_: Ts_\\<rightarrow>T_ = (pns_, body_) in D_\n  length vs_ = length pns_\n  length Ts_ = length pns_\n\ngoal (53 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 53 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  hp (a___, b_) a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  P \\<turnstile> C_ sees M_: Ts_\\<rightarrow>T_ = (pns_, body_) in D_\n  length vs_ = length pns_\n  length Ts_ = length pns_\n\ngoal (1 subgoal):\n 1. P \\<turnstile> \\<langle>addr a_\\<bullet>M_(map Val vs_),\n                    (a___, l\\<^sub>0 ++ b_)\\<rangle> \\<rightarrow>\n                   \\<langle>blocks\n                             (this # pns_, Class D_ # Ts_, Addr a_ # vs_,\n                              body_),\n                    (a___, l\\<^sub>0 ++ b_)\\<rangle>", "by(fastforce intro:red_reds.intros)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>addr a_\\<bullet>M_(map Val vs_),\n                  (a___, l\\<^sub>0 ++ b_)\\<rangle> \\<rightarrow>\n                 \\<langle>blocks\n                           (this # pns_, Class D_ # Ts_, Addr a_ # vs_,\n                            body_),\n                  (a___, l\\<^sub>0 ++ b_)\\<rangle>\n\ngoal (52 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 52 subgoals...", "next"], ["proof (state)\ngoal (52 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 52 subgoals...", "case (InitBlockRed e h l V v e' h' l' v' T l\\<^sub>0)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l(V \\<mapsto> v))\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l')\\<rangle>\n  P \\<turnstile> \\<langle>e,\n                  (h, ?l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', ?l\\<^sub>0 ++ l')\\<rangle>\n  l' V = \\<lfloor>v'\\<rfloor>\n\ngoal (52 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 52 subgoals...", "have IH: \"\\<And>l\\<^sub>0. P \\<turnstile> \\<langle>e,(h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle> \\<rightarrow> \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>\"\n    and l'V: \"l' V = Some v'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l\\<^sub>0.\n        P \\<turnstile> \\<langle>e,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto>\n                            v))\\<rangle> \\<rightarrow>\n                       \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>) &&&\n    l' V = \\<lfloor>v'\\<rfloor>", "by fact+"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,\n                  (h, ?l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', ?l\\<^sub>0 ++ l')\\<rangle>\n  l' V = \\<lfloor>v'\\<rfloor>\n\ngoal (52 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 52 subgoals...", "from IH"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,\n                  (h, ?l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', ?l\\<^sub>0 ++ l')\\<rangle>", "have IH': \"P \\<turnstile> \\<langle>e,(h, (l\\<^sub>0 ++ l)(V \\<mapsto> v))\\<rangle> \\<rightarrow> \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>\""], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,\n                  (h, ?l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', ?l\\<^sub>0 ++ l')\\<rangle>\n\ngoal (1 subgoal):\n 1. P \\<turnstile> \\<langle>e,\n                    (h, (l\\<^sub>0 ++ l)(V \\<mapsto>\n                     v))\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>", "by simp"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,\n                  (h, (l\\<^sub>0 ++ l)(V \\<mapsto>\n                   v))\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>\n\ngoal (52 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 52 subgoals...", "have \"(l\\<^sub>0 ++ l')(V := (l\\<^sub>0 ++ l) V) = l\\<^sub>0 ++ l'(V := l V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (l\\<^sub>0 ++ l')(V := (l\\<^sub>0 ++ l) V) = l\\<^sub>0 ++ l'(V := l V)", "by(rule ext)(simp add:map_add_def)"], ["proof (state)\nthis:\n  (l\\<^sub>0 ++ l')(V := (l\\<^sub>0 ++ l) V) = l\\<^sub>0 ++ l'(V := l V)\n\ngoal (52 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 52 subgoals...", "with red_reds.InitBlockRed[OF IH'] l'V"], ["proof (chain)\npicking this:\n  (l\\<^sub>0 ++ l') V = \\<lfloor>?v'\\<rfloor> \\<Longrightarrow>\n  P \\<turnstile> \\<langle>{V:?T; V:=Val v;; e},\n                  (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                 \\<langle>{V:?T; V:=Val ?v';; e'},\n                  (h', (l\\<^sub>0 ++ l')(V := (l\\<^sub>0 ++ l) V))\\<rangle>\n  l' V = \\<lfloor>v'\\<rfloor>\n  (l\\<^sub>0 ++ l')(V := (l\\<^sub>0 ++ l) V) = l\\<^sub>0 ++ l'(V := l V)", "show ?case"], ["proof (prove)\nusing this:\n  (l\\<^sub>0 ++ l') V = \\<lfloor>?v'\\<rfloor> \\<Longrightarrow>\n  P \\<turnstile> \\<langle>{V:?T; V:=Val v;; e},\n                  (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                 \\<langle>{V:?T; V:=Val ?v';; e'},\n                  (h', (l\\<^sub>0 ++ l')(V := (l\\<^sub>0 ++ l) V))\\<rangle>\n  l' V = \\<lfloor>v'\\<rfloor>\n  (l\\<^sub>0 ++ l')(V := (l\\<^sub>0 ++ l) V) = l\\<^sub>0 ++ l'(V := l V)\n\ngoal (1 subgoal):\n 1. P \\<turnstile> \\<langle>{V:T; V:=Val v;; e},\n                    (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                   \\<langle>{V:T; V:=Val v';; e'},\n                    (h', l\\<^sub>0 ++ l'(V := l V))\\<rangle>", "by(simp del:fun_upd_apply)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>{V:T; V:=Val v;; e},\n                  (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                 \\<langle>{V:T; V:=Val v';; e'},\n                  (h', l\\<^sub>0 ++ l'(V := l V))\\<rangle>\n\ngoal (51 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 51 subgoals...", "next"], ["proof (state)\ngoal (51 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 51 subgoals...", "case (BlockRedNone e h l V e' h' l' T l\\<^sub>0)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l')\\<rangle>\n  P \\<turnstile> \\<langle>e,\n                  (h, ?l\\<^sub>0 ++ l(V := None))\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', ?l\\<^sub>0 ++ l')\\<rangle>\n  l' V = None\n  \\<not> assigned V e\n\ngoal (51 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 51 subgoals...", "have IH: \"\\<And>l\\<^sub>0. P \\<turnstile> \\<langle>e,(h, l\\<^sub>0 ++ l(V := None))\\<rangle> \\<rightarrow> \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>\"\n    and l'V: \"l' V = None\" and unass: \"\\<not> assigned V e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l\\<^sub>0.\n        P \\<turnstile> \\<langle>e,\n                        (h, l\\<^sub>0 ++ l\n                            (V := None))\\<rangle> \\<rightarrow>\n                       \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>) &&&\n    l' V = None &&& \\<not> assigned V e", "by fact+"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,\n                  (h, ?l\\<^sub>0 ++ l(V := None))\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', ?l\\<^sub>0 ++ l')\\<rangle>\n  l' V = None\n  \\<not> assigned V e\n\ngoal (51 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 51 subgoals...", "have \"l\\<^sub>0(V := None) ++ l(V := None) = (l\\<^sub>0 ++ l)(V := None)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l\\<^sub>0(V := None) ++ l(V := None) = (l\\<^sub>0 ++ l)(V := None)", "by(simp add:fun_eq_iff map_add_def)"], ["proof (state)\nthis:\n  l\\<^sub>0(V := None) ++ l(V := None) = (l\\<^sub>0 ++ l)(V := None)\n\ngoal (51 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 51 subgoals...", "hence IH': \"P \\<turnstile> \\<langle>e,(h, (l\\<^sub>0++l)(V := None))\\<rangle> \\<rightarrow> \\<langle>e',(h', l\\<^sub>0(V := None) ++ l')\\<rangle>\""], ["proof (prove)\nusing this:\n  l\\<^sub>0(V := None) ++ l(V := None) = (l\\<^sub>0 ++ l)(V := None)\n\ngoal (1 subgoal):\n 1. P \\<turnstile> \\<langle>e,\n                    (h, (l\\<^sub>0 ++ l)(V := None))\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l\\<^sub>0(V := None) ++ l')\\<rangle>", "using IH[of \"l\\<^sub>0(V := None)\"]"], ["proof (prove)\nusing this:\n  l\\<^sub>0(V := None) ++ l(V := None) = (l\\<^sub>0 ++ l)(V := None)\n  P \\<turnstile> \\<langle>e,\n                  (h, l\\<^sub>0(V := None) ++ l\n                      (V := None))\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l\\<^sub>0(V := None) ++ l')\\<rangle>\n\ngoal (1 subgoal):\n 1. P \\<turnstile> \\<langle>e,\n                    (h, (l\\<^sub>0 ++ l)(V := None))\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l\\<^sub>0(V := None) ++ l')\\<rangle>", "by simp"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,\n                  (h, (l\\<^sub>0 ++ l)(V := None))\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l\\<^sub>0(V := None) ++ l')\\<rangle>\n\ngoal (51 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 51 subgoals...", "have \"(l\\<^sub>0(V := None) ++ l')(V := (l\\<^sub>0 ++ l) V) = l\\<^sub>0 ++ l'(V := l V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (l\\<^sub>0(V := None) ++ l')(V := (l\\<^sub>0 ++ l) V) =\n    l\\<^sub>0 ++ l'(V := l V)", "by(simp add:fun_eq_iff map_add_def)"], ["proof (state)\nthis:\n  (l\\<^sub>0(V := None) ++ l')(V := (l\\<^sub>0 ++ l) V) =\n  l\\<^sub>0 ++ l'(V := l V)\n\ngoal (51 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 51 subgoals...", "with red_reds.BlockRedNone[OF IH' _ unass] l'V"], ["proof (chain)\npicking this:\n  (l\\<^sub>0(V := None) ++ l') V = None \\<Longrightarrow>\n  P \\<turnstile> \\<langle>{V:?T; e},\n                  (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                 \\<langle>{V:?T; e'},\n                  (h', (l\\<^sub>0(V := None) ++ l')\n                   (V := (l\\<^sub>0 ++ l) V))\\<rangle>\n  l' V = None\n  (l\\<^sub>0(V := None) ++ l')(V := (l\\<^sub>0 ++ l) V) =\n  l\\<^sub>0 ++ l'(V := l V)", "show ?case"], ["proof (prove)\nusing this:\n  (l\\<^sub>0(V := None) ++ l') V = None \\<Longrightarrow>\n  P \\<turnstile> \\<langle>{V:?T; e},\n                  (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                 \\<langle>{V:?T; e'},\n                  (h', (l\\<^sub>0(V := None) ++ l')\n                   (V := (l\\<^sub>0 ++ l) V))\\<rangle>\n  l' V = None\n  (l\\<^sub>0(V := None) ++ l')(V := (l\\<^sub>0 ++ l) V) =\n  l\\<^sub>0 ++ l'(V := l V)\n\ngoal (1 subgoal):\n 1. P \\<turnstile> \\<langle>{V:T; e},\n                    (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                   \\<langle>{V:T; e'},\n                    (h', l\\<^sub>0 ++ l'(V := l V))\\<rangle>", "by(simp add: map_add_def)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>{V:T; e},\n                  (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                 \\<langle>{V:T; e'},(h', l\\<^sub>0 ++ l'(V := l V))\\<rangle>\n\ngoal (50 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 50 subgoals...", "next"], ["proof (state)\ngoal (50 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 50 subgoals...", "case (BlockRedSome e h l V e' h' l' v T l\\<^sub>0)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l(V := None))\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l')\\<rangle>\n  P \\<turnstile> \\<langle>e,\n                  (h, ?l\\<^sub>0 ++ l(V := None))\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', ?l\\<^sub>0 ++ l')\\<rangle>\n  l' V = \\<lfloor>v\\<rfloor>\n  \\<not> assigned V e\n\ngoal (50 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 50 subgoals...", "have IH: \"\\<And>l\\<^sub>0. P \\<turnstile> \\<langle>e,(h, l\\<^sub>0 ++ l(V := None))\\<rangle> \\<rightarrow> \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>\"\n    and l'V: \"l' V = Some v\" and unass: \"\\<not> assigned V e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l\\<^sub>0.\n        P \\<turnstile> \\<langle>e,\n                        (h, l\\<^sub>0 ++ l\n                            (V := None))\\<rangle> \\<rightarrow>\n                       \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>) &&&\n    l' V = \\<lfloor>v\\<rfloor> &&& \\<not> assigned V e", "by fact+"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,\n                  (h, ?l\\<^sub>0 ++ l(V := None))\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', ?l\\<^sub>0 ++ l')\\<rangle>\n  l' V = \\<lfloor>v\\<rfloor>\n  \\<not> assigned V e\n\ngoal (50 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 50 subgoals...", "have \"l\\<^sub>0(V := None) ++ l(V := None) = (l\\<^sub>0 ++ l)(V := None)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l\\<^sub>0(V := None) ++ l(V := None) = (l\\<^sub>0 ++ l)(V := None)", "by(simp add:fun_eq_iff map_add_def)"], ["proof (state)\nthis:\n  l\\<^sub>0(V := None) ++ l(V := None) = (l\\<^sub>0 ++ l)(V := None)\n\ngoal (50 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 50 subgoals...", "hence IH': \"P \\<turnstile> \\<langle>e,(h, (l\\<^sub>0++l)(V := None))\\<rangle> \\<rightarrow> \\<langle>e',(h', l\\<^sub>0(V := None) ++ l')\\<rangle>\""], ["proof (prove)\nusing this:\n  l\\<^sub>0(V := None) ++ l(V := None) = (l\\<^sub>0 ++ l)(V := None)\n\ngoal (1 subgoal):\n 1. P \\<turnstile> \\<langle>e,\n                    (h, (l\\<^sub>0 ++ l)(V := None))\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l\\<^sub>0(V := None) ++ l')\\<rangle>", "using IH[of \"l\\<^sub>0(V := None)\"]"], ["proof (prove)\nusing this:\n  l\\<^sub>0(V := None) ++ l(V := None) = (l\\<^sub>0 ++ l)(V := None)\n  P \\<turnstile> \\<langle>e,\n                  (h, l\\<^sub>0(V := None) ++ l\n                      (V := None))\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l\\<^sub>0(V := None) ++ l')\\<rangle>\n\ngoal (1 subgoal):\n 1. P \\<turnstile> \\<langle>e,\n                    (h, (l\\<^sub>0 ++ l)(V := None))\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l\\<^sub>0(V := None) ++ l')\\<rangle>", "by simp"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,\n                  (h, (l\\<^sub>0 ++ l)(V := None))\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l\\<^sub>0(V := None) ++ l')\\<rangle>\n\ngoal (50 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 50 subgoals...", "have \"(l\\<^sub>0(V := None) ++ l')(V := (l\\<^sub>0 ++ l) V) = l\\<^sub>0 ++ l'(V := l V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (l\\<^sub>0(V := None) ++ l')(V := (l\\<^sub>0 ++ l) V) =\n    l\\<^sub>0 ++ l'(V := l V)", "by(simp add:fun_eq_iff map_add_def)"], ["proof (state)\nthis:\n  (l\\<^sub>0(V := None) ++ l')(V := (l\\<^sub>0 ++ l) V) =\n  l\\<^sub>0 ++ l'(V := l V)\n\ngoal (50 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 50 subgoals...", "with red_reds.BlockRedSome[OF IH' _ unass] l'V"], ["proof (chain)\npicking this:\n  (l\\<^sub>0(V := None) ++ l') V = \\<lfloor>?v\\<rfloor> \\<Longrightarrow>\n  P \\<turnstile> \\<langle>{V:?T; e},\n                  (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                 \\<langle>{V:?T; V:=Val ?v;; e'},\n                  (h', (l\\<^sub>0(V := None) ++ l')\n                   (V := (l\\<^sub>0 ++ l) V))\\<rangle>\n  l' V = \\<lfloor>v\\<rfloor>\n  (l\\<^sub>0(V := None) ++ l')(V := (l\\<^sub>0 ++ l) V) =\n  l\\<^sub>0 ++ l'(V := l V)", "show ?case"], ["proof (prove)\nusing this:\n  (l\\<^sub>0(V := None) ++ l') V = \\<lfloor>?v\\<rfloor> \\<Longrightarrow>\n  P \\<turnstile> \\<langle>{V:?T; e},\n                  (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                 \\<langle>{V:?T; V:=Val ?v;; e'},\n                  (h', (l\\<^sub>0(V := None) ++ l')\n                   (V := (l\\<^sub>0 ++ l) V))\\<rangle>\n  l' V = \\<lfloor>v\\<rfloor>\n  (l\\<^sub>0(V := None) ++ l')(V := (l\\<^sub>0 ++ l) V) =\n  l\\<^sub>0 ++ l'(V := l V)\n\ngoal (1 subgoal):\n 1. P \\<turnstile> \\<langle>{V:T; e},\n                    (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                   \\<langle>{V:T; V:=Val v;; e'},\n                    (h', l\\<^sub>0 ++ l'(V := l V))\\<rangle>", "by(simp add:map_add_def)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>{V:T; e},\n                  (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                 \\<langle>{V:T; V:=Val v;; e'},\n                  (h', l\\<^sub>0 ++ l'(V := l V))\\<rangle>\n\ngoal (49 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 49 subgoals...", "next"], ["proof (state)\ngoal (49 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 49 subgoals...", "case RedTryCatch"], ["proof (state)\nthis:\n  hp (a___, b_) a_ = \\<lfloor>(D_, fs_)\\<rfloor>\n  P \\<turnstile> D_ \\<preceq>\\<^sup>* C_\n\ngoal (49 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 49 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  hp (a___, b_) a_ = \\<lfloor>(D_, fs_)\\<rfloor>\n  P \\<turnstile> D_ \\<preceq>\\<^sup>* C_\n\ngoal (1 subgoal):\n 1. P \\<turnstile> \\<langle>try Throw a_ catch(C_ V_) e\\<^sub>2_,\n                    (a___, l\\<^sub>0 ++ b_)\\<rangle> \\<rightarrow>\n                   \\<langle>{V_:Class C_; V_:=addr a_;; e\\<^sub>2_},\n                    (a___, l\\<^sub>0 ++ b_)\\<rangle>", "by(fastforce intro:red_reds.intros)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>try Throw a_ catch(C_ V_) e\\<^sub>2_,\n                  (a___, l\\<^sub>0 ++ b_)\\<rangle> \\<rightarrow>\n                 \\<langle>{V_:Class C_; V_:=addr a_;; e\\<^sub>2_},\n                  (a___, l\\<^sub>0 ++ b_)\\<rangle>\n\ngoal (48 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 48 subgoals...", "next"], ["proof (state)\ngoal (48 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 48 subgoals...", "case RedTryFail"], ["proof (state)\nthis:\n  hp (a___, b_) a_ = \\<lfloor>(D_, fs_)\\<rfloor>\n  (D_, C_) \\<notin> (subcls1 P)\\<^sup>*\n\ngoal (48 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 48 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  hp (a___, b_) a_ = \\<lfloor>(D_, fs_)\\<rfloor>\n  (D_, C_) \\<notin> (subcls1 P)\\<^sup>*\n\ngoal (1 subgoal):\n 1. P \\<turnstile> \\<langle>try Throw a_ catch(C_ V_) e\\<^sub>2_,\n                    (a___, l\\<^sub>0 ++ b_)\\<rangle> \\<rightarrow>\n                   \\<langle>Throw a_,(a___, l\\<^sub>0 ++ b_)\\<rangle>", "by(force intro!:red_reds.intros)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>try Throw a_ catch(C_ V_) e\\<^sub>2_,\n                  (a___, l\\<^sub>0 ++ b_)\\<rangle> \\<rightarrow>\n                 \\<langle>Throw a_,(a___, l\\<^sub>0 ++ b_)\\<rangle>\n\ngoal (47 subgoals):\n 1. \\<And>h a C FDTs h' l l\\<^sub>0.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>new C,\n   (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n  \\<langle>addr a,(h', l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>h C l l\\<^sub>0.\n       new_Addr h = None \\<Longrightarrow>\n       P \\<turnstile> \\<langle>new C,\n                       (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                      \\<langle>THROW OutOfMemory,\n                       (h, l\\<^sub>0 ++ l)\\<rangle>\n 3. \\<And>e a b e' aa ba C l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Cast C e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Cast C e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 4. \\<And>C a b l\\<^sub>0.\n       P \\<turnstile> \\<langle>Cast C null,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>null,(a, l\\<^sub>0 ++ b)\\<rangle>\n 5. \\<And>e a b e' aa ba bop e\\<^sub>2 l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 6. \\<And>e a b e' aa ba v\\<^sub>1 bop l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>Val\n            v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',\n   (aa, l\\<^sub>0 ++ ba)\\<rangle>\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a b l\\<^sub>0.\n       binop (bop, v\\<^sub>1, v\\<^sub>2) =\n       \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 8. \\<And>a b V v l\\<^sub>0.\n       lcl (a, b) V = \\<lfloor>v\\<rfloor> \\<Longrightarrow>\n       P \\<turnstile> \\<langle>Var V,\n                       (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                      \\<langle>Val v,(a, l\\<^sub>0 ++ b)\\<rangle>\n 9. \\<And>e a b e' aa ba V l\\<^sub>0.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, b)\\<rangle> \\<rightarrow>\n                               \\<langle>e',(aa, ba)\\<rangle>;\n        \\<And>l\\<^sub>0.\n           P \\<turnstile> \\<langle>e,\n                           (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n                          \\<langle>e',\n                           (aa, l\\<^sub>0 ++ ba)\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>V:=e,\n   (a, l\\<^sub>0 ++ b)\\<rangle> \\<rightarrow>\n  \\<langle>V:=e',(aa, l\\<^sub>0 ++ ba)\\<rangle>\n 10. \\<And>V v h l l\\<^sub>0.\n        P \\<turnstile> \\<langle>V:=Val v,\n                        (h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>\n                       \\<langle>unit,\n                        (h, l\\<^sub>0 ++ l(V \\<mapsto> v))\\<rangle>\nA total of 47 subgoals...", "qed (simp_all add:red_reds.intros)"], ["", "(*>*)"], ["", "lemma Red_lcl_add:\nassumes \"P \\<turnstile> \\<langle>e,(h,l)\\<rangle> \\<rightarrow>* \\<langle>e',(h',l')\\<rangle>\" shows \"P \\<turnstile> \\<langle>e,(h,l\\<^sub>0++l)\\<rangle> \\<rightarrow>* \\<langle>e',(h',l\\<^sub>0++l')\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<turnstile> \\<langle>e,(h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>*\n                   \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<turnstile> \\<langle>e,(h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>*\n                   \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>", "using assms"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l)\\<rangle> \\<rightarrow>*\n                 \\<langle>e',(h', l')\\<rangle>\n\ngoal (1 subgoal):\n 1. P \\<turnstile> \\<langle>e,(h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>*\n                   \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>", "proof(induct rule:converse_rtrancl_induct_red)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>e h l.\n       P \\<turnstile> \\<langle>e,(h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>*\n                      \\<langle>e,(h, l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>e\\<^sub>0 h\\<^sub>0 l\\<^sub>0' e\\<^sub>1 h\\<^sub>1 l\\<^sub>1 e' h'\n       l'.\n       \\<lbrakk>P \\<turnstile> \\<langle>e\\<^sub>0,\n                                (h\\<^sub>0,\n                                 l\\<^sub>0')\\<rangle> \\<rightarrow>\n                               \\<langle>e\\<^sub>1,\n                                (h\\<^sub>1, l\\<^sub>1)\\<rangle>;\n        P \\<turnstile> \\<langle>e\\<^sub>1,\n                        (h\\<^sub>1,\n                         l\\<^sub>0 ++ l\\<^sub>1)\\<rangle> \\<rightarrow>*\n                       \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e\\<^sub>0,\n   (h\\<^sub>0, l\\<^sub>0 ++ l\\<^sub>0')\\<rangle> \\<rightarrow>*\n  \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>e h l.\n       P \\<turnstile> \\<langle>e,(h, l\\<^sub>0 ++ l)\\<rangle> \\<rightarrow>*\n                      \\<langle>e,(h, l\\<^sub>0 ++ l)\\<rangle>\n 2. \\<And>e\\<^sub>0 h\\<^sub>0 l\\<^sub>0' e\\<^sub>1 h\\<^sub>1 l\\<^sub>1 e' h'\n       l'.\n       \\<lbrakk>P \\<turnstile> \\<langle>e\\<^sub>0,\n                                (h\\<^sub>0,\n                                 l\\<^sub>0')\\<rangle> \\<rightarrow>\n                               \\<langle>e\\<^sub>1,\n                                (h\\<^sub>1, l\\<^sub>1)\\<rangle>;\n        P \\<turnstile> \\<langle>e\\<^sub>1,\n                        (h\\<^sub>1,\n                         l\\<^sub>0 ++ l\\<^sub>1)\\<rangle> \\<rightarrow>*\n                       \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e\\<^sub>0,\n   (h\\<^sub>0, l\\<^sub>0 ++ l\\<^sub>0')\\<rangle> \\<rightarrow>*\n  \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<turnstile> \\<langle>e_,(h_, l\\<^sub>0 ++ l_)\\<rangle> \\<rightarrow>*\n                   \\<langle>e_,(h_, l\\<^sub>0 ++ l_)\\<rangle>", "by simp"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e_,(h_, l\\<^sub>0 ++ l_)\\<rangle> \\<rightarrow>*\n                 \\<langle>e_,(h_, l\\<^sub>0 ++ l_)\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>e\\<^sub>0 h\\<^sub>0 l\\<^sub>0' e\\<^sub>1 h\\<^sub>1 l\\<^sub>1 e' h'\n       l'.\n       \\<lbrakk>P \\<turnstile> \\<langle>e\\<^sub>0,\n                                (h\\<^sub>0,\n                                 l\\<^sub>0')\\<rangle> \\<rightarrow>\n                               \\<langle>e\\<^sub>1,\n                                (h\\<^sub>1, l\\<^sub>1)\\<rangle>;\n        P \\<turnstile> \\<langle>e\\<^sub>1,\n                        (h\\<^sub>1,\n                         l\\<^sub>0 ++ l\\<^sub>1)\\<rangle> \\<rightarrow>*\n                       \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e\\<^sub>0,\n   (h\\<^sub>0, l\\<^sub>0 ++ l\\<^sub>0')\\<rangle> \\<rightarrow>*\n  \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e\\<^sub>0 h\\<^sub>0 l\\<^sub>0' e\\<^sub>1 h\\<^sub>1 l\\<^sub>1 e' h'\n       l'.\n       \\<lbrakk>P \\<turnstile> \\<langle>e\\<^sub>0,\n                                (h\\<^sub>0,\n                                 l\\<^sub>0')\\<rangle> \\<rightarrow>\n                               \\<langle>e\\<^sub>1,\n                                (h\\<^sub>1, l\\<^sub>1)\\<rangle>;\n        P \\<turnstile> \\<langle>e\\<^sub>1,\n                        (h\\<^sub>1,\n                         l\\<^sub>0 ++ l\\<^sub>1)\\<rangle> \\<rightarrow>*\n                       \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e\\<^sub>0,\n   (h\\<^sub>0, l\\<^sub>0 ++ l\\<^sub>0')\\<rangle> \\<rightarrow>*\n  \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>", "case 2"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e\\<^sub>0_,\n                  (h\\<^sub>0_, l\\<^sub>0_)\\<rangle> \\<rightarrow>\n                 \\<langle>e\\<^sub>1_,(h\\<^sub>1_, l\\<^sub>1_)\\<rangle>\n  P \\<turnstile> \\<langle>e\\<^sub>1_,\n                  (h\\<^sub>1_,\n                   l\\<^sub>0 ++ l\\<^sub>1_)\\<rangle> \\<rightarrow>*\n                 \\<langle>e'_,(h'_, l\\<^sub>0 ++ l'_)\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>e\\<^sub>0 h\\<^sub>0 l\\<^sub>0' e\\<^sub>1 h\\<^sub>1 l\\<^sub>1 e' h'\n       l'.\n       \\<lbrakk>P \\<turnstile> \\<langle>e\\<^sub>0,\n                                (h\\<^sub>0,\n                                 l\\<^sub>0')\\<rangle> \\<rightarrow>\n                               \\<langle>e\\<^sub>1,\n                                (h\\<^sub>1, l\\<^sub>1)\\<rangle>;\n        P \\<turnstile> \\<langle>e\\<^sub>1,\n                        (h\\<^sub>1,\n                         l\\<^sub>0 ++ l\\<^sub>1)\\<rangle> \\<rightarrow>*\n                       \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> \\<langle>e\\<^sub>0,\n   (h\\<^sub>0, l\\<^sub>0 ++ l\\<^sub>0')\\<rangle> \\<rightarrow>*\n  \\<langle>e',(h', l\\<^sub>0 ++ l')\\<rangle>", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e\\<^sub>0_,\n                  (h\\<^sub>0_, l\\<^sub>0_)\\<rangle> \\<rightarrow>\n                 \\<langle>e\\<^sub>1_,(h\\<^sub>1_, l\\<^sub>1_)\\<rangle>\n  P \\<turnstile> \\<langle>e\\<^sub>1_,\n                  (h\\<^sub>1_,\n                   l\\<^sub>0 ++ l\\<^sub>1_)\\<rangle> \\<rightarrow>*\n                 \\<langle>e'_,(h'_, l\\<^sub>0 ++ l'_)\\<rangle>\n\ngoal (1 subgoal):\n 1. P \\<turnstile> \\<langle>e\\<^sub>0_,\n                    (h\\<^sub>0_,\n                     l\\<^sub>0 ++ l\\<^sub>0_)\\<rangle> \\<rightarrow>*\n                   \\<langle>e'_,(h'_, l\\<^sub>0 ++ l'_)\\<rangle>", "by (blast dest: red_lcl_add intro: converse_rtrancl_into_rtrancl)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e\\<^sub>0_,\n                  (h\\<^sub>0_,\n                   l\\<^sub>0 ++ l\\<^sub>0_)\\<rangle> \\<rightarrow>*\n                 \\<langle>e'_,(h'_, l\\<^sub>0 ++ l'_)\\<rangle>\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "end"]]}