{"file_name": "/home/qj213/afp-2021-10-22/thys/Jinja/Common/Decl.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Jinja", "problem_names": ["lemma finite_is_class: \"finite {C. is_class P C}\"", "lemma is_type_simps [simp]:\n  \"is_type P Void \\<and> is_type P Boolean \\<and> is_type P Integer \\<and>\n  is_type P NT \\<and> is_type P (Class C) = is_class P C\""], "translations": [["", "lemma finite_is_class: \"finite {C. is_class P C}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {C. is_class P C}", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {C. is_class P C}", "apply (unfold is_class_def class_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {C. map_of P C \\<noteq> None}", "apply (fold dom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (dom (map_of P))", "apply (rule finite_dom_map_of)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "definition is_type :: \"'m prog \\<Rightarrow> ty \\<Rightarrow> bool\"\nwhere\n  \"is_type P T  \\<equiv>\n  (case T of Void \\<Rightarrow> True | Boolean \\<Rightarrow> True | Integer \\<Rightarrow> True | NT \\<Rightarrow> True\n   | Class C \\<Rightarrow> is_class P C)\""], ["", "lemma is_type_simps [simp]:\n  \"is_type P Void \\<and> is_type P Boolean \\<and> is_type P Integer \\<and>\n  is_type P NT \\<and> is_type P (Class C) = is_class P C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_type P Void \\<and>\n    is_type P Boolean \\<and>\n    is_type P Integer \\<and>\n    is_type P NT \\<and> is_type P (Class C) = is_class P C", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_type P Void \\<and>\n    is_type P Boolean \\<and>\n    is_type P Integer \\<and>\n    is_type P NT \\<and> is_type P (Class C) = is_class P C", "by(simp add:is_type_def)"], ["", "(*>*)"], ["", "abbreviation\n  \"types P == Collect (is_type P)\""], ["", "end"]]}