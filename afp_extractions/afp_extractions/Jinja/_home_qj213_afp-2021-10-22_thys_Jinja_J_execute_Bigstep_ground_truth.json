{"file_name": "/home/qj213/afp-2021-10-22/thys/Jinja/J/execute_Bigstep.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Jinja", "problem_names": ["theorem map_val_conv: \"(xs = map Val ys) = map_val xs ys\"", "theorem map_val2_conv:\n \"(xs = map Val ys @ throw e # zs) = map_val2 xs ys (throw e # zs)\"", "lemma CallNull2:\n  \"\\<lbrakk> P \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow> \\<langle>null,s\\<^sub>1\\<rangle>;  P \\<turnstile> \\<langle>ps,s\\<^sub>1\\<rangle> [\\<Rightarrow>] \\<langle>evs,s\\<^sub>2\\<rangle>; map_val evs vs \\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> \\<langle>e\\<bullet>M(ps),s\\<^sub>0\\<rangle> \\<Rightarrow> \\<langle>THROW NullPointer,s\\<^sub>2\\<rangle>\"", "lemma CallParamsThrow2:\n  \"\\<lbrakk> P \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow> \\<langle>Val v,s\\<^sub>1\\<rangle>; P \\<turnstile> \\<langle>es,s\\<^sub>1\\<rangle> [\\<Rightarrow>] \\<langle>evs,s\\<^sub>2\\<rangle>;\n     map_val2 evs vs (throw ex # es'') \\<rbrakk>\n   \\<Longrightarrow> P \\<turnstile> \\<langle>e\\<bullet>M(es),s\\<^sub>0\\<rangle> \\<Rightarrow> \\<langle>throw ex,s\\<^sub>2\\<rangle>\"", "lemma Call2:\n  \"\\<lbrakk> P \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow> \\<langle>addr a,s\\<^sub>1\\<rangle>;  P \\<turnstile> \\<langle>ps,s\\<^sub>1\\<rangle> [\\<Rightarrow>] \\<langle>evs,(h\\<^sub>2,l\\<^sub>2)\\<rangle>;\n     map_val evs vs;\n     h\\<^sub>2 a = Some(C,fs);  P \\<turnstile> C sees M:Ts\\<rightarrow>T = (pns,body) in D;\n     length vs = length pns;  l\\<^sub>2' = [this\\<mapsto>Addr a, pns[\\<mapsto>]vs];\n     P \\<turnstile> \\<langle>body,(h\\<^sub>2,l\\<^sub>2')\\<rangle> \\<Rightarrow> \\<langle>e',(h\\<^sub>3,l\\<^sub>3)\\<rangle> \\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> \\<langle>e\\<bullet>M(ps),s\\<^sub>0\\<rangle> \\<Rightarrow> \\<langle>e',(h\\<^sub>3,l\\<^sub>2)\\<rangle>\"", "lemmas [code_pred_intro] =\n eval_evals.New eval_evals.NewFail\n eval_evals.Cast eval_evals.CastNull eval_evals.CastFail eval_evals.CastThrow\n eval_evals.Val eval_evals.Var\n eval_evals.BinOp eval_evals.BinOpThrow1 eval_evals.BinOpThrow2\n eval_evals.LAss eval_evals.LAssThrow\n eval_evals.FAcc eval_evals.FAccNull eval_evals.FAccThrow\n eval_evals.FAss eval_evals.FAssNull\n eval_evals.FAssThrow1 eval_evals.FAssThrow2\n eval_evals.CallObjThrow", "lemmas [code_pred_intro] =\n eval_evals.Block\n eval_evals.Seq eval_evals.SeqThrow\n eval_evals.CondT eval_evals.CondF eval_evals.CondThrow\n eval_evals.WhileF eval_evals.WhileT\n eval_evals.WhileCondThrow", "lemmas [code_pred_intro] =\n eval_evals.Throw eval_evals.ThrowNull\n eval_evals.ThrowThrow\n eval_evals.Try eval_evals.TryCatch eval_evals.TryThrow\n eval_evals.Nil eval_evals.Cons eval_evals.ConsThrow"], "translations": [["", "theorem map_val_conv: \"(xs = map Val ys) = map_val xs ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (xs = map Val ys) = map_val xs ys", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (xs = map Val ys) = map_val xs ys", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (xs = map Val ys) = map_val xs ys", "have \"\\<And>ys. xs = map Val ys \\<Longrightarrow> map_val xs ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ys. xs = map Val ys \\<Longrightarrow> map_val xs ys", "apply (induct xs type:list)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ys. [] = map Val ys \\<Longrightarrow> map_val [] ys\n 2. \\<And>a list ys.\n       \\<lbrakk>\\<And>ys.\n                   list = map Val ys \\<Longrightarrow> map_val list ys;\n        a # list = map Val ys\\<rbrakk>\n       \\<Longrightarrow> map_val (a # list) ys", "apply (case_tac ys)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ys.\n       \\<lbrakk>[] = map Val ys; ys = []\\<rbrakk>\n       \\<Longrightarrow> map_val [] ys\n 2. \\<And>ys a list.\n       \\<lbrakk>[] = map Val ys; ys = a # list\\<rbrakk>\n       \\<Longrightarrow> map_val [] ys\n 3. \\<And>a list ys.\n       \\<lbrakk>\\<And>ys.\n                   list = map Val ys \\<Longrightarrow> map_val list ys;\n        a # list = map Val ys\\<rbrakk>\n       \\<Longrightarrow> map_val (a # list) ys", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. map_val [] []\n 2. \\<And>ys a list.\n       \\<lbrakk>[] = map Val ys; ys = a # list\\<rbrakk>\n       \\<Longrightarrow> map_val [] ys\n 3. \\<And>a list ys.\n       \\<lbrakk>\\<And>ys.\n                   list = map Val ys \\<Longrightarrow> map_val list ys;\n        a # list = map Val ys\\<rbrakk>\n       \\<Longrightarrow> map_val (a # list) ys", "apply (rule map_val.Nil)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ys a list.\n       \\<lbrakk>[] = map Val ys; ys = a # list\\<rbrakk>\n       \\<Longrightarrow> map_val [] ys\n 2. \\<And>a list ys.\n       \\<lbrakk>\\<And>ys.\n                   list = map Val ys \\<Longrightarrow> map_val list ys;\n        a # list = map Val ys\\<rbrakk>\n       \\<Longrightarrow> map_val (a # list) ys", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list ys.\n       \\<lbrakk>\\<And>ys.\n                   list = map Val ys \\<Longrightarrow> map_val list ys;\n        a # list = map Val ys\\<rbrakk>\n       \\<Longrightarrow> map_val (a # list) ys", "apply (case_tac ys)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a list ys.\n       \\<lbrakk>\\<And>ys.\n                   list = map Val ys \\<Longrightarrow> map_val list ys;\n        a # list = map Val ys; ys = []\\<rbrakk>\n       \\<Longrightarrow> map_val (a # list) ys\n 2. \\<And>a list ys aa lista.\n       \\<lbrakk>\\<And>ys.\n                   list = map Val ys \\<Longrightarrow> map_val list ys;\n        a # list = map Val ys; ys = aa # lista\\<rbrakk>\n       \\<Longrightarrow> map_val (a # list) ys", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list ys aa lista.\n       \\<lbrakk>\\<And>ys.\n                   list = map Val ys \\<Longrightarrow> map_val list ys;\n        a # list = map Val ys; ys = aa # lista\\<rbrakk>\n       \\<Longrightarrow> map_val (a # list) ys", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a ys aa lista.\n       \\<lbrakk>\\<And>ys.\n                   map Val lista = map Val ys \\<Longrightarrow>\n                   map_val (map Val ys) ys;\n        a = Val aa; ys = aa # lista\\<rbrakk>\n       \\<Longrightarrow> map_val (Val aa # map Val lista) (aa # lista)", "apply (rule map_val.Cons)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a ys aa lista.\n       \\<lbrakk>\\<And>ys.\n                   map Val lista = map Val ys \\<Longrightarrow>\n                   map_val (map Val ys) ys;\n        a = Val aa; ys = aa # lista\\<rbrakk>\n       \\<Longrightarrow> map_val (map Val lista) lista", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  xs = map Val ?ys \\<Longrightarrow> map_val xs ?ys\n\ngoal (1 subgoal):\n 1. (xs = map Val ys) = map_val xs ys", "moreover"], ["proof (state)\nthis:\n  xs = map Val ?ys \\<Longrightarrow> map_val xs ?ys\n\ngoal (1 subgoal):\n 1. (xs = map Val ys) = map_val xs ys", "have \"map_val xs ys \\<Longrightarrow> xs = map Val ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_val xs ys \\<Longrightarrow> xs = map Val ys", "by (erule map_val.induct) simp+"], ["proof (state)\nthis:\n  map_val xs ys \\<Longrightarrow> xs = map Val ys\n\ngoal (1 subgoal):\n 1. (xs = map Val ys) = map_val xs ys", "ultimately"], ["proof (chain)\npicking this:\n  xs = map Val ?ys \\<Longrightarrow> map_val xs ?ys\n  map_val xs ys \\<Longrightarrow> xs = map Val ys", "show ?thesis"], ["proof (prove)\nusing this:\n  xs = map Val ?ys \\<Longrightarrow> map_val xs ?ys\n  map_val xs ys \\<Longrightarrow> xs = map Val ys\n\ngoal (1 subgoal):\n 1. (xs = map Val ys) = map_val xs ys", ".."], ["proof (state)\nthis:\n  (xs = map Val ys) = map_val xs ys\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "theorem map_val2_conv:\n \"(xs = map Val ys @ throw e # zs) = map_val2 xs ys (throw e # zs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (xs = map Val ys @ throw e # zs) = map_val2 xs ys (throw e # zs)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (xs = map Val ys @ throw e # zs) = map_val2 xs ys (throw e # zs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (xs = map Val ys @ throw e # zs) = map_val2 xs ys (throw e # zs)", "have \"\\<And>ys. xs = map Val ys @ throw e # zs \\<Longrightarrow> map_val2 xs ys (throw e # zs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ys.\n       xs = map Val ys @ throw e # zs \\<Longrightarrow>\n       map_val2 xs ys (throw e # zs)", "apply (induct xs type:list)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ys.\n       [] = map Val ys @ throw e # zs \\<Longrightarrow>\n       map_val2 [] ys (throw e # zs)\n 2. \\<And>a list ys.\n       \\<lbrakk>\\<And>ys.\n                   list = map Val ys @ throw e # zs \\<Longrightarrow>\n                   map_val2 list ys (throw e # zs);\n        a # list = map Val ys @ throw e # zs\\<rbrakk>\n       \\<Longrightarrow> map_val2 (a # list) ys (throw e # zs)", "apply (case_tac ys)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ys.\n       \\<lbrakk>[] = map Val ys @ throw e # zs; ys = []\\<rbrakk>\n       \\<Longrightarrow> map_val2 [] ys (throw e # zs)\n 2. \\<And>ys a list.\n       \\<lbrakk>[] = map Val ys @ throw e # zs; ys = a # list\\<rbrakk>\n       \\<Longrightarrow> map_val2 [] ys (throw e # zs)\n 3. \\<And>a list ys.\n       \\<lbrakk>\\<And>ys.\n                   list = map Val ys @ throw e # zs \\<Longrightarrow>\n                   map_val2 list ys (throw e # zs);\n        a # list = map Val ys @ throw e # zs\\<rbrakk>\n       \\<Longrightarrow> map_val2 (a # list) ys (throw e # zs)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ys a list.\n       \\<lbrakk>[] = map Val ys @ throw e # zs; ys = a # list\\<rbrakk>\n       \\<Longrightarrow> map_val2 [] ys (throw e # zs)\n 2. \\<And>a list ys.\n       \\<lbrakk>\\<And>ys.\n                   list = map Val ys @ throw e # zs \\<Longrightarrow>\n                   map_val2 list ys (throw e # zs);\n        a # list = map Val ys @ throw e # zs\\<rbrakk>\n       \\<Longrightarrow> map_val2 (a # list) ys (throw e # zs)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list ys.\n       \\<lbrakk>\\<And>ys.\n                   list = map Val ys @ throw e # zs \\<Longrightarrow>\n                   map_val2 list ys (throw e # zs);\n        a # list = map Val ys @ throw e # zs\\<rbrakk>\n       \\<Longrightarrow> map_val2 (a # list) ys (throw e # zs)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list ys.\n       \\<lbrakk>\\<And>ys.\n                   list = map Val ys @ throw e # zs \\<Longrightarrow>\n                   map_val2 (map Val ys @ throw e # zs) ys (throw e # zs);\n        a # list = map Val ys @ throw e # zs\\<rbrakk>\n       \\<Longrightarrow> map_val2 (map Val ys @ throw e # zs) ys\n                          (throw e # zs)", "apply (case_tac ys)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a list ys.\n       \\<lbrakk>\\<And>ys.\n                   list = map Val ys @ throw e # zs \\<Longrightarrow>\n                   map_val2 (map Val ys @ throw e # zs) ys (throw e # zs);\n        a # list = map Val ys @ throw e # zs; ys = []\\<rbrakk>\n       \\<Longrightarrow> map_val2 (map Val ys @ throw e # zs) ys\n                          (throw e # zs)\n 2. \\<And>a list ys aa lista.\n       \\<lbrakk>\\<And>ys.\n                   list = map Val ys @ throw e # zs \\<Longrightarrow>\n                   map_val2 (map Val ys @ throw e # zs) ys (throw e # zs);\n        a # list = map Val ys @ throw e # zs; ys = aa # lista\\<rbrakk>\n       \\<Longrightarrow> map_val2 (map Val ys @ throw e # zs) ys\n                          (throw e # zs)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a ys.\n       \\<lbrakk>a = throw e; ys = []\\<rbrakk>\n       \\<Longrightarrow> map_val2 (throw e # zs) [] (throw e # zs)\n 2. \\<And>a list ys aa lista.\n       \\<lbrakk>\\<And>ys.\n                   list = map Val ys @ throw e # zs \\<Longrightarrow>\n                   map_val2 (map Val ys @ throw e # zs) ys (throw e # zs);\n        a # list = map Val ys @ throw e # zs; ys = aa # lista\\<rbrakk>\n       \\<Longrightarrow> map_val2 (map Val ys @ throw e # zs) ys\n                          (throw e # zs)", "apply (rule map_val2.Throw)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list ys aa lista.\n       \\<lbrakk>\\<And>ys.\n                   list = map Val ys @ throw e # zs \\<Longrightarrow>\n                   map_val2 (map Val ys @ throw e # zs) ys (throw e # zs);\n        a # list = map Val ys @ throw e # zs; ys = aa # lista\\<rbrakk>\n       \\<Longrightarrow> map_val2 (map Val ys @ throw e # zs) ys\n                          (throw e # zs)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a ys aa lista.\n       \\<lbrakk>\\<And>ys.\n                   map Val lista = map Val ys \\<Longrightarrow>\n                   map_val2 (map Val ys @ throw e # zs) ys (throw e # zs);\n        a = Val aa; ys = aa # lista\\<rbrakk>\n       \\<Longrightarrow> map_val2 (Val aa # map Val lista @ throw e # zs)\n                          (aa # lista) (throw e # zs)", "apply (rule map_val2.Cons)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a ys aa lista.\n       \\<lbrakk>\\<And>ys.\n                   map Val lista = map Val ys \\<Longrightarrow>\n                   map_val2 (map Val ys @ throw e # zs) ys (throw e # zs);\n        a = Val aa; ys = aa # lista\\<rbrakk>\n       \\<Longrightarrow> map_val2 (map Val lista @ throw e # zs) lista\n                          (throw e # zs)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  xs = map Val ?ys @ throw e # zs \\<Longrightarrow>\n  map_val2 xs ?ys (throw e # zs)\n\ngoal (1 subgoal):\n 1. (xs = map Val ys @ throw e # zs) = map_val2 xs ys (throw e # zs)", "moreover"], ["proof (state)\nthis:\n  xs = map Val ?ys @ throw e # zs \\<Longrightarrow>\n  map_val2 xs ?ys (throw e # zs)\n\ngoal (1 subgoal):\n 1. (xs = map Val ys @ throw e # zs) = map_val2 xs ys (throw e # zs)", "have \"map_val2 xs ys (throw e # zs) \\<Longrightarrow> xs = map Val ys @ throw e # zs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_val2 xs ys (throw e # zs) \\<Longrightarrow>\n    xs = map Val ys @ throw e # zs", "by (erule map_val2.induct) simp+"], ["proof (state)\nthis:\n  map_val2 xs ys (throw e # zs) \\<Longrightarrow>\n  xs = map Val ys @ throw e # zs\n\ngoal (1 subgoal):\n 1. (xs = map Val ys @ throw e # zs) = map_val2 xs ys (throw e # zs)", "ultimately"], ["proof (chain)\npicking this:\n  xs = map Val ?ys @ throw e # zs \\<Longrightarrow>\n  map_val2 xs ?ys (throw e # zs)\n  map_val2 xs ys (throw e # zs) \\<Longrightarrow>\n  xs = map Val ys @ throw e # zs", "show ?thesis"], ["proof (prove)\nusing this:\n  xs = map Val ?ys @ throw e # zs \\<Longrightarrow>\n  map_val2 xs ?ys (throw e # zs)\n  map_val2 xs ys (throw e # zs) \\<Longrightarrow>\n  xs = map Val ys @ throw e # zs\n\ngoal (1 subgoal):\n 1. (xs = map Val ys @ throw e # zs) = map_val2 xs ys (throw e # zs)", ".."], ["proof (state)\nthis:\n  (xs = map Val ys @ throw e # zs) = map_val2 xs ys (throw e # zs)\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma CallNull2:\n  \"\\<lbrakk> P \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow> \\<langle>null,s\\<^sub>1\\<rangle>;  P \\<turnstile> \\<langle>ps,s\\<^sub>1\\<rangle> [\\<Rightarrow>] \\<langle>evs,s\\<^sub>2\\<rangle>; map_val evs vs \\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> \\<langle>e\\<bullet>M(ps),s\\<^sub>0\\<rangle> \\<Rightarrow> \\<langle>THROW NullPointer,s\\<^sub>2\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                            \\<langle>null,s\\<^sub>1\\<rangle>;\n     P \\<turnstile> \\<langle>ps,s\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                    \\<langle>evs,s\\<^sub>2\\<rangle>;\n     map_val evs vs\\<rbrakk>\n    \\<Longrightarrow> P \\<turnstile> \\<langle>e\\<bullet>M(ps),\ns\\<^sub>0\\<rangle> \\<Rightarrow>\n                                     \\<langle>THROW NullPointer,\ns\\<^sub>2\\<rangle>", "apply(rule CallNull, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                            \\<langle>null,s\\<^sub>1\\<rangle>;\n     P \\<turnstile> \\<langle>ps,s\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                    \\<langle>evs,s\\<^sub>2\\<rangle>;\n     map_val evs vs\\<rbrakk>\n    \\<Longrightarrow> P \\<turnstile> \\<langle>ps,\ns\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                                     \\<langle>map Val ?vs,s\\<^sub>2\\<rangle>", "apply(simp add: map_val_conv[symmetric])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma CallParamsThrow2:\n  \"\\<lbrakk> P \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow> \\<langle>Val v,s\\<^sub>1\\<rangle>; P \\<turnstile> \\<langle>es,s\\<^sub>1\\<rangle> [\\<Rightarrow>] \\<langle>evs,s\\<^sub>2\\<rangle>;\n     map_val2 evs vs (throw ex # es'') \\<rbrakk>\n   \\<Longrightarrow> P \\<turnstile> \\<langle>e\\<bullet>M(es),s\\<^sub>0\\<rangle> \\<Rightarrow> \\<langle>throw ex,s\\<^sub>2\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                            \\<langle>Val v,s\\<^sub>1\\<rangle>;\n     P \\<turnstile> \\<langle>es,s\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                    \\<langle>evs,s\\<^sub>2\\<rangle>;\n     map_val2 evs vs (throw ex # es'')\\<rbrakk>\n    \\<Longrightarrow> P \\<turnstile> \\<langle>e\\<bullet>M(es),\ns\\<^sub>0\\<rangle> \\<Rightarrow>\n                                     \\<langle>throw ex,s\\<^sub>2\\<rangle>", "apply(rule eval_evals.CallParamsThrow, assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                            \\<langle>Val v,s\\<^sub>1\\<rangle>;\n     P \\<turnstile> \\<langle>es,s\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                    \\<langle>evs,s\\<^sub>2\\<rangle>;\n     map_val2 evs vs (throw ex # es'')\\<rbrakk>\n    \\<Longrightarrow> P \\<turnstile> \\<langle>es,\ns\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                                     \\<langle>map Val ?vs @ throw ex # ?es',\ns\\<^sub>2\\<rangle>", "apply(simp add: map_val2_conv[symmetric])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Call2:\n  \"\\<lbrakk> P \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow> \\<langle>addr a,s\\<^sub>1\\<rangle>;  P \\<turnstile> \\<langle>ps,s\\<^sub>1\\<rangle> [\\<Rightarrow>] \\<langle>evs,(h\\<^sub>2,l\\<^sub>2)\\<rangle>;\n     map_val evs vs;\n     h\\<^sub>2 a = Some(C,fs);  P \\<turnstile> C sees M:Ts\\<rightarrow>T = (pns,body) in D;\n     length vs = length pns;  l\\<^sub>2' = [this\\<mapsto>Addr a, pns[\\<mapsto>]vs];\n     P \\<turnstile> \\<langle>body,(h\\<^sub>2,l\\<^sub>2')\\<rangle> \\<Rightarrow> \\<langle>e',(h\\<^sub>3,l\\<^sub>3)\\<rangle> \\<rbrakk>\n  \\<Longrightarrow> P \\<turnstile> \\<langle>e\\<bullet>M(ps),s\\<^sub>0\\<rangle> \\<Rightarrow> \\<langle>e',(h\\<^sub>3,l\\<^sub>2)\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                            \\<langle>addr a,s\\<^sub>1\\<rangle>;\n     P \\<turnstile> \\<langle>ps,s\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                    \\<langle>evs,(h\\<^sub>2, l\\<^sub>2)\\<rangle>;\n     map_val evs vs; h\\<^sub>2 a = \\<lfloor>(C, fs)\\<rfloor>;\n     P \\<turnstile> C sees M: Ts\\<rightarrow>T = (pns, body) in D;\n     length vs = length pns;\n     l\\<^sub>2' = [this \\<mapsto> Addr a, pns [\\<mapsto>] vs];\n     P \\<turnstile> \\<langle>body,\n                     (h\\<^sub>2, l\\<^sub>2')\\<rangle> \\<Rightarrow>\n                    \\<langle>e',(h\\<^sub>3, l\\<^sub>3)\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> P \\<turnstile> \\<langle>e\\<bullet>M(ps),\ns\\<^sub>0\\<rangle> \\<Rightarrow>\n                                     \\<langle>e',\n(h\\<^sub>3, l\\<^sub>2)\\<rangle>", "apply(rule Call, assumption+)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                            \\<langle>addr a,s\\<^sub>1\\<rangle>;\n     P \\<turnstile> \\<langle>ps,s\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                    \\<langle>evs,(h\\<^sub>2, l\\<^sub>2)\\<rangle>;\n     map_val evs vs; h\\<^sub>2 a = \\<lfloor>(C, fs)\\<rfloor>;\n     P \\<turnstile> C sees M: Ts\\<rightarrow>T = (pns, body) in D;\n     length vs = length pns;\n     l\\<^sub>2' = [this \\<mapsto> Addr a, pns [\\<mapsto>] vs];\n     P \\<turnstile> \\<langle>body,\n                     (h\\<^sub>2, l\\<^sub>2')\\<rangle> \\<Rightarrow>\n                    \\<langle>e',(h\\<^sub>3, l\\<^sub>3)\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> P \\<turnstile> \\<langle>ps,\ns\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                                     \\<langle>map Val ?vs,\n(?h\\<^sub>2, l\\<^sub>2)\\<rangle>\n 2. \\<lbrakk>P \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                            \\<langle>addr a,s\\<^sub>1\\<rangle>;\n     P \\<turnstile> \\<langle>ps,s\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                    \\<langle>evs,(h\\<^sub>2, l\\<^sub>2)\\<rangle>;\n     map_val evs vs; h\\<^sub>2 a = \\<lfloor>(C, fs)\\<rfloor>;\n     P \\<turnstile> C sees M: Ts\\<rightarrow>T = (pns, body) in D;\n     length vs = length pns;\n     l\\<^sub>2' = [this \\<mapsto> Addr a, pns [\\<mapsto>] vs];\n     P \\<turnstile> \\<langle>body,\n                     (h\\<^sub>2, l\\<^sub>2')\\<rangle> \\<Rightarrow>\n                    \\<langle>e',(h\\<^sub>3, l\\<^sub>3)\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> ?h\\<^sub>2 a = \\<lfloor>(?C, ?fs)\\<rfloor>\n 3. \\<lbrakk>P \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                            \\<langle>addr a,s\\<^sub>1\\<rangle>;\n     P \\<turnstile> \\<langle>ps,s\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                    \\<langle>evs,(h\\<^sub>2, l\\<^sub>2)\\<rangle>;\n     map_val evs vs; h\\<^sub>2 a = \\<lfloor>(C, fs)\\<rfloor>;\n     P \\<turnstile> C sees M: Ts\\<rightarrow>T = (pns, body) in D;\n     length vs = length pns;\n     l\\<^sub>2' = [this \\<mapsto> Addr a, pns [\\<mapsto>] vs];\n     P \\<turnstile> \\<langle>body,\n                     (h\\<^sub>2, l\\<^sub>2')\\<rangle> \\<Rightarrow>\n                    \\<langle>e',(h\\<^sub>3, l\\<^sub>3)\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> P \\<turnstile> ?C sees M: ?Ts\\<rightarrow>?T = (?pns,\n                                ?body) in ?D\n 4. \\<lbrakk>P \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                            \\<langle>addr a,s\\<^sub>1\\<rangle>;\n     P \\<turnstile> \\<langle>ps,s\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                    \\<langle>evs,(h\\<^sub>2, l\\<^sub>2)\\<rangle>;\n     map_val evs vs; h\\<^sub>2 a = \\<lfloor>(C, fs)\\<rfloor>;\n     P \\<turnstile> C sees M: Ts\\<rightarrow>T = (pns, body) in D;\n     length vs = length pns;\n     l\\<^sub>2' = [this \\<mapsto> Addr a, pns [\\<mapsto>] vs];\n     P \\<turnstile> \\<langle>body,\n                     (h\\<^sub>2, l\\<^sub>2')\\<rangle> \\<Rightarrow>\n                    \\<langle>e',(h\\<^sub>3, l\\<^sub>3)\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> length ?vs = length ?pns\n 5. \\<lbrakk>P \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                            \\<langle>addr a,s\\<^sub>1\\<rangle>;\n     P \\<turnstile> \\<langle>ps,s\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                    \\<langle>evs,(h\\<^sub>2, l\\<^sub>2)\\<rangle>;\n     map_val evs vs; h\\<^sub>2 a = \\<lfloor>(C, fs)\\<rfloor>;\n     P \\<turnstile> C sees M: Ts\\<rightarrow>T = (pns, body) in D;\n     length vs = length pns;\n     l\\<^sub>2' = [this \\<mapsto> Addr a, pns [\\<mapsto>] vs];\n     P \\<turnstile> \\<langle>body,\n                     (h\\<^sub>2, l\\<^sub>2')\\<rangle> \\<Rightarrow>\n                    \\<langle>e',(h\\<^sub>3, l\\<^sub>3)\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> ?l\\<^sub>2' =\n                      [this \\<mapsto> Addr a, ?pns [\\<mapsto>] ?vs]\n 6. \\<lbrakk>P \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                            \\<langle>addr a,s\\<^sub>1\\<rangle>;\n     P \\<turnstile> \\<langle>ps,s\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                    \\<langle>evs,(h\\<^sub>2, l\\<^sub>2)\\<rangle>;\n     map_val evs vs; h\\<^sub>2 a = \\<lfloor>(C, fs)\\<rfloor>;\n     P \\<turnstile> C sees M: Ts\\<rightarrow>T = (pns, body) in D;\n     length vs = length pns;\n     l\\<^sub>2' = [this \\<mapsto> Addr a, pns [\\<mapsto>] vs];\n     P \\<turnstile> \\<langle>body,\n                     (h\\<^sub>2, l\\<^sub>2')\\<rangle> \\<Rightarrow>\n                    \\<langle>e',(h\\<^sub>3, l\\<^sub>3)\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> P \\<turnstile> \\<langle>?body,\n(?h\\<^sub>2, ?l\\<^sub>2')\\<rangle> \\<Rightarrow>\n                                     \\<langle>e',\n(h\\<^sub>3, ?l\\<^sub>3)\\<rangle>", "apply(simp add: map_val_conv[symmetric])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                            \\<langle>addr a,s\\<^sub>1\\<rangle>;\n     P \\<turnstile> \\<langle>ps,s\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                    \\<langle>evs,(h\\<^sub>2, l\\<^sub>2)\\<rangle>;\n     map_val evs vs; h\\<^sub>2 a = \\<lfloor>(C, fs)\\<rfloor>;\n     P \\<turnstile> C sees M: Ts\\<rightarrow>T = (pns, body) in D;\n     length vs = length pns;\n     l\\<^sub>2' = [this \\<mapsto> Addr a, pns [\\<mapsto>] vs];\n     P \\<turnstile> \\<langle>body,\n                     (h\\<^sub>2, l\\<^sub>2')\\<rangle> \\<Rightarrow>\n                    \\<langle>e',(h\\<^sub>3, l\\<^sub>3)\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> h\\<^sub>2 a = \\<lfloor>(?C, ?fs)\\<rfloor>\n 2. \\<lbrakk>P \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                            \\<langle>addr a,s\\<^sub>1\\<rangle>;\n     P \\<turnstile> \\<langle>ps,s\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                    \\<langle>evs,(h\\<^sub>2, l\\<^sub>2)\\<rangle>;\n     map_val evs vs; h\\<^sub>2 a = \\<lfloor>(C, fs)\\<rfloor>;\n     P \\<turnstile> C sees M: Ts\\<rightarrow>T = (pns, body) in D;\n     length vs = length pns;\n     l\\<^sub>2' = [this \\<mapsto> Addr a, pns [\\<mapsto>] vs];\n     P \\<turnstile> \\<langle>body,\n                     (h\\<^sub>2, l\\<^sub>2')\\<rangle> \\<Rightarrow>\n                    \\<langle>e',(h\\<^sub>3, l\\<^sub>3)\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> P \\<turnstile> ?C sees M: ?Ts\\<rightarrow>?T = (?pns,\n                                ?body) in ?D\n 3. \\<lbrakk>P \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                            \\<langle>addr a,s\\<^sub>1\\<rangle>;\n     P \\<turnstile> \\<langle>ps,s\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                    \\<langle>evs,(h\\<^sub>2, l\\<^sub>2)\\<rangle>;\n     map_val evs vs; h\\<^sub>2 a = \\<lfloor>(C, fs)\\<rfloor>;\n     P \\<turnstile> C sees M: Ts\\<rightarrow>T = (pns, body) in D;\n     length vs = length pns;\n     l\\<^sub>2' = [this \\<mapsto> Addr a, pns [\\<mapsto>] vs];\n     P \\<turnstile> \\<langle>body,\n                     (h\\<^sub>2, l\\<^sub>2')\\<rangle> \\<Rightarrow>\n                    \\<langle>e',(h\\<^sub>3, l\\<^sub>3)\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> length vs = length ?pns\n 4. \\<lbrakk>P \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                            \\<langle>addr a,s\\<^sub>1\\<rangle>;\n     P \\<turnstile> \\<langle>ps,s\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                    \\<langle>evs,(h\\<^sub>2, l\\<^sub>2)\\<rangle>;\n     map_val evs vs; h\\<^sub>2 a = \\<lfloor>(C, fs)\\<rfloor>;\n     P \\<turnstile> C sees M: Ts\\<rightarrow>T = (pns, body) in D;\n     length vs = length pns;\n     l\\<^sub>2' = [this \\<mapsto> Addr a, pns [\\<mapsto>] vs];\n     P \\<turnstile> \\<langle>body,\n                     (h\\<^sub>2, l\\<^sub>2')\\<rangle> \\<Rightarrow>\n                    \\<langle>e',(h\\<^sub>3, l\\<^sub>3)\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> ?l\\<^sub>2' =\n                      [this \\<mapsto> Addr a, ?pns [\\<mapsto>] vs]\n 5. \\<lbrakk>P \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                            \\<langle>addr a,s\\<^sub>1\\<rangle>;\n     P \\<turnstile> \\<langle>ps,s\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                    \\<langle>evs,(h\\<^sub>2, l\\<^sub>2)\\<rangle>;\n     map_val evs vs; h\\<^sub>2 a = \\<lfloor>(C, fs)\\<rfloor>;\n     P \\<turnstile> C sees M: Ts\\<rightarrow>T = (pns, body) in D;\n     length vs = length pns;\n     l\\<^sub>2' = [this \\<mapsto> Addr a, pns [\\<mapsto>] vs];\n     P \\<turnstile> \\<langle>body,\n                     (h\\<^sub>2, l\\<^sub>2')\\<rangle> \\<Rightarrow>\n                    \\<langle>e',(h\\<^sub>3, l\\<^sub>3)\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> P \\<turnstile> \\<langle>?body,\n(h\\<^sub>2, ?l\\<^sub>2')\\<rangle> \\<Rightarrow>\n                                     \\<langle>e',\n(h\\<^sub>3, ?l\\<^sub>3)\\<rangle>", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "code_pred \n  (modes: i \\<Rightarrow> o \\<Rightarrow> bool)\n  map_val"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "code_pred\n  (modes: i \\<Rightarrow> o \\<Rightarrow> o \\<Rightarrow> bool)\n  map_val2"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lemmas [code_pred_intro] =\n eval_evals.New eval_evals.NewFail\n eval_evals.Cast eval_evals.CastNull eval_evals.CastFail eval_evals.CastThrow\n eval_evals.Val eval_evals.Var\n eval_evals.BinOp eval_evals.BinOpThrow1 eval_evals.BinOpThrow2\n eval_evals.LAss eval_evals.LAssThrow\n eval_evals.FAcc eval_evals.FAccNull eval_evals.FAccThrow\n eval_evals.FAss eval_evals.FAssNull\n eval_evals.FAssThrow1 eval_evals.FAssThrow2\n eval_evals.CallObjThrow"], ["", "declare CallNull2 [code_pred_intro CallNull2]"], ["", "declare CallParamsThrow2 [code_pred_intro CallParamsThrow2]"], ["", "declare Call2 [code_pred_intro Call2]"], ["", "lemmas [code_pred_intro] =\n eval_evals.Block\n eval_evals.Seq eval_evals.SeqThrow\n eval_evals.CondT eval_evals.CondF eval_evals.CondThrow\n eval_evals.WhileF eval_evals.WhileT\n eval_evals.WhileCondThrow"], ["", "declare eval_evals.WhileBodyThrow [code_pred_intro WhileBodyThrow2]"], ["", "lemmas [code_pred_intro] =\n eval_evals.Throw eval_evals.ThrowNull\n eval_evals.ThrowThrow\n eval_evals.Try eval_evals.TryCatch eval_evals.TryThrow\n eval_evals.Nil eval_evals.Cons eval_evals.ConsThrow"], ["", "code_pred\n  (modes: i \\<Rightarrow> i \\<Rightarrow> i \\<Rightarrow> o \\<Rightarrow> o \\<Rightarrow> bool as execute)\n  eval"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>x \\<turnstile> \\<langle>xa,(xb, xc)\\<rangle> \\<Rightarrow>\n                             \\<langle>xd,(xe, xf)\\<rangle>;\n      \\<And>P C h l a h' FDTs.\n         \\<lbrakk>x = P; xa = new C; (xb, xc) = (h, l); xd = addr a;\n          (xe, xf) = (h', l); new_Addr h = \\<lfloor>a\\<rfloor>;\n          P \\<turnstile> C has_fields FDTs;\n          h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ Ca_ ha_ la_.\n         \\<lbrakk>x = Pa_; xa = new Ca_; (xb, xc) = (ha_, la_);\n          xd = THROW OutOfMemory; (xe, xf) = (ha_, la_);\n          new_Addr ha_ = None\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ Ca_ e_ s\\<^sub>0_ aa_ ha_ la_ D_ fs_.\n         \\<lbrakk>x = Pa_; xa = Cast Ca_ e_; (xb, xc) = s\\<^sub>0_;\n          xd = addr aa_; (xe, xf) = (ha_, la_);\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>addr aa_,(ha_, la_)\\<rangle>;\n          ha_ aa_ = \\<lfloor>(D_, fs_)\\<rfloor>;\n          Pa_ \\<turnstile> D_ \\<preceq>\\<^sup>* Ca_\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ Ca_ e_ s\\<^sub>0_ s\\<^sub>1_.\n         \\<lbrakk>x = Pa_; xa = Cast Ca_ e_; (xb, xc) = s\\<^sub>0_;\n          xd = null; (xe, xf) = s\\<^sub>1_;\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>null,s\\<^sub>1_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ Ca_ e_ s\\<^sub>0_ ha_ la_ aa_ D_ fs_.\n         \\<lbrakk>x = Pa_; xa = Cast Ca_ e_; (xb, xc) = s\\<^sub>0_;\n          xd = THROW ClassCast; (xe, xf) = (ha_, la_);\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>addr aa_,(ha_, la_)\\<rangle>;\n          ha_ aa_ = \\<lfloor>(D_, fs_)\\<rfloor>;\n          (D_, Ca_) \\<notin> (subcls1 Pa_)\\<^sup>*\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ Ca_ e_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n         \\<lbrakk>x = Pa_; xa = Cast Ca_ e_; (xb, xc) = s\\<^sub>0_;\n          xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ v_ s_.\n         \\<lbrakk>x = Pa_; xa = Val v_; (xb, xc) = s_; xd = Val v_;\n          (xe, xf) = s_\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ V_ ha_ la_ v_.\n         \\<lbrakk>x = Pa_; xa = Var V_; (xb, xc) = (ha_, la_); xd = Val v_;\n          (xe, xf) = (ha_, la_); la_ V_ = \\<lfloor>v_\\<rfloor>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e\\<^sub>1_ bop_ e\\<^sub>2_ s\\<^sub>0_ v_ s\\<^sub>2_\n         v\\<^sub>1_ s\\<^sub>1_ v\\<^sub>2_.\n         \\<lbrakk>x = Pa_;\n          xa = e\\<^sub>1_ \\<guillemotleft>bop_\\<guillemotright> e\\<^sub>2_;\n          (xb, xc) = s\\<^sub>0_; xd = Val v_; (xe, xf) = s\\<^sub>2_;\n          Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                            s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>Val v\\<^sub>1_,s\\<^sub>1_\\<rangle>;\n          Pa_ \\<turnstile> \\<langle>e\\<^sub>2_,\n                            s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                           \\<langle>Val v\\<^sub>2_,s\\<^sub>2_\\<rangle>;\n          binop (bop_, v\\<^sub>1_, v\\<^sub>2_) =\n          \\<lfloor>v_\\<rfloor>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e\\<^sub>1_ bop_ e\\<^sub>2_ s\\<^sub>0_ e_ s\\<^sub>1_.\n         \\<lbrakk>x = Pa_;\n          xa = e\\<^sub>1_ \\<guillemotleft>bop_\\<guillemotright> e\\<^sub>2_;\n          (xb, xc) = s\\<^sub>0_; xd = throw e_; (xe, xf) = s\\<^sub>1_;\n          Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                            s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>throw e_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e\\<^sub>1_ bop_ e\\<^sub>2_ s\\<^sub>0_ e_ s\\<^sub>2_\n         v\\<^sub>1_ s\\<^sub>1_.\n         \\<lbrakk>x = Pa_;\n          xa = e\\<^sub>1_ \\<guillemotleft>bop_\\<guillemotright> e\\<^sub>2_;\n          (xb, xc) = s\\<^sub>0_; xd = throw e_; (xe, xf) = s\\<^sub>2_;\n          Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                            s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>Val v\\<^sub>1_,s\\<^sub>1_\\<rangle>;\n          Pa_ \\<turnstile> \\<langle>e\\<^sub>2_,\n                            s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                           \\<langle>throw e_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ V_ e_ s\\<^sub>0_ ha_ l'_ v_ la_.\n         \\<lbrakk>x = Pa_; xa = V_:=e_; (xb, xc) = s\\<^sub>0_; xd = unit;\n          (xe, xf) = (ha_, l'_);\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>Val v_,(ha_, la_)\\<rangle>;\n          l'_ = la_(V_ \\<mapsto> v_)\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ V_ e_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n         \\<lbrakk>x = Pa_; xa = V_:=e_; (xb, xc) = s\\<^sub>0_;\n          xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e_ F_ D_ s\\<^sub>0_ v_ ha_ la_ aa_ Ca_ fs_.\n         \\<lbrakk>x = Pa_; xa = e_\\<bullet>F_{D_}; (xb, xc) = s\\<^sub>0_;\n          xd = Val v_; (xe, xf) = (ha_, la_);\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>addr aa_,(ha_, la_)\\<rangle>;\n          ha_ aa_ = \\<lfloor>(Ca_, fs_)\\<rfloor>;\n          fs_ (F_, D_) = \\<lfloor>v_\\<rfloor>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e_ F_ D_ s\\<^sub>0_ s\\<^sub>1_.\n         \\<lbrakk>x = Pa_; xa = e_\\<bullet>F_{D_}; (xb, xc) = s\\<^sub>0_;\n          xd = THROW NullPointer; (xe, xf) = s\\<^sub>1_;\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>null,s\\<^sub>1_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e_ F_ D_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n         \\<lbrakk>x = Pa_; xa = e_\\<bullet>F_{D_}; (xb, xc) = s\\<^sub>0_;\n          xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e\\<^sub>1_ F_ D_ e\\<^sub>2_ s\\<^sub>0_ h\\<^sub>2'_\n         l\\<^sub>2_ aa_ s\\<^sub>1_ v_ h\\<^sub>2_ Ca_ fs_ fs'_.\n         \\<lbrakk>x = Pa_; xa = e\\<^sub>1_\\<bullet>F_{D_} := e\\<^sub>2_;\n          (xb, xc) = s\\<^sub>0_; xd = unit;\n          (xe, xf) = (h\\<^sub>2'_, l\\<^sub>2_);\n          Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                            s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>addr aa_,s\\<^sub>1_\\<rangle>;\n          Pa_ \\<turnstile> \\<langle>e\\<^sub>2_,\n                            s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                           \\<langle>Val v_,\n                            (h\\<^sub>2_, l\\<^sub>2_)\\<rangle>;\n          h\\<^sub>2_ aa_ = \\<lfloor>(Ca_, fs_)\\<rfloor>;\n          fs'_ = fs_((F_, D_) \\<mapsto> v_);\n          h\\<^sub>2'_ = h\\<^sub>2_(aa_ \\<mapsto> (Ca_, fs'_))\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e\\<^sub>1_ F_ D_ e\\<^sub>2_ s\\<^sub>0_ s\\<^sub>2_ s\\<^sub>1_\n         v_.\n         \\<lbrakk>x = Pa_; xa = e\\<^sub>1_\\<bullet>F_{D_} := e\\<^sub>2_;\n          (xb, xc) = s\\<^sub>0_; xd = THROW NullPointer;\n          (xe, xf) = s\\<^sub>2_;\n          Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                            s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>null,s\\<^sub>1_\\<rangle>;\n          Pa_ \\<turnstile> \\<langle>e\\<^sub>2_,\n                            s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                           \\<langle>Val v_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e\\<^sub>1_ F_ D_ e\\<^sub>2_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n         \\<lbrakk>x = Pa_; xa = e\\<^sub>1_\\<bullet>F_{D_} := e\\<^sub>2_;\n          (xb, xc) = s\\<^sub>0_; xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n          Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                            s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e\\<^sub>1_ F_ D_ e\\<^sub>2_ s\\<^sub>0_ e'_ s\\<^sub>2_ v_\n         s\\<^sub>1_.\n         \\<lbrakk>x = Pa_; xa = e\\<^sub>1_\\<bullet>F_{D_} := e\\<^sub>2_;\n          (xb, xc) = s\\<^sub>0_; xd = throw e'_; (xe, xf) = s\\<^sub>2_;\n          Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                            s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>Val v_,s\\<^sub>1_\\<rangle>;\n          Pa_ \\<turnstile> \\<langle>e\\<^sub>2_,\n                            s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                           \\<langle>throw e'_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e_ M_ ps_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n         \\<lbrakk>x = Pa_; xa = e_\\<bullet>M_(ps_); (xb, xc) = s\\<^sub>0_;\n          xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e_ M_ ps_ s\\<^sub>0_ s\\<^sub>2_ s\\<^sub>1_ evs_ vs_.\n         \\<lbrakk>x = Pa_; xa = e_\\<bullet>M_(ps_); (xb, xc) = s\\<^sub>0_;\n          xd = THROW NullPointer; (xe, xf) = s\\<^sub>2_;\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>null,s\\<^sub>1_\\<rangle>;\n          Pa_ \\<turnstile> \\<langle>ps_,s\\<^sub>1_\\<rangle> [\\<Rightarrow>]\n                           \\<langle>evs_,s\\<^sub>2_\\<rangle>;\n          map_val evs_ vs_\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e_ M_ es_ s\\<^sub>0_ ex_ s\\<^sub>2_ v_ s\\<^sub>1_ evs_ vs_\n         es''_.\n         \\<lbrakk>x = Pa_; xa = e_\\<bullet>M_(es_); (xb, xc) = s\\<^sub>0_;\n          xd = throw ex_; (xe, xf) = s\\<^sub>2_;\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>Val v_,s\\<^sub>1_\\<rangle>;\n          Pa_ \\<turnstile> \\<langle>es_,s\\<^sub>1_\\<rangle> [\\<Rightarrow>]\n                           \\<langle>evs_,s\\<^sub>2_\\<rangle>;\n          map_val2 evs_ vs_ (throw ex_ # es''_)\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e_ M_ ps_ s\\<^sub>0_ e'_ h\\<^sub>3_ l\\<^sub>2_ aa_\n         s\\<^sub>1_ evs_ h\\<^sub>2_ vs_ Ca_ fs_ Ts_ T_ pns_ body_ D_\n         l\\<^sub>2'_ l\\<^sub>3_.\n         \\<lbrakk>x = Pa_; xa = e_\\<bullet>M_(ps_); (xb, xc) = s\\<^sub>0_;\n          xd = e'_; (xe, xf) = (h\\<^sub>3_, l\\<^sub>2_);\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>addr aa_,s\\<^sub>1_\\<rangle>;\n          Pa_ \\<turnstile> \\<langle>ps_,s\\<^sub>1_\\<rangle> [\\<Rightarrow>]\n                           \\<langle>evs_,(h\\<^sub>2_, l\\<^sub>2_)\\<rangle>;\n          map_val evs_ vs_; h\\<^sub>2_ aa_ = \\<lfloor>(Ca_, fs_)\\<rfloor>;\n          Pa_ \\<turnstile> Ca_ sees M_: Ts_\\<rightarrow>T_ = (pns_,\n                        body_) in D_;\n          length vs_ = length pns_;\n          l\\<^sub>2'_ = [this \\<mapsto> Addr aa_, pns_ [\\<mapsto>] vs_];\n          Pa_ \\<turnstile> \\<langle>body_,\n                            (h\\<^sub>2_, l\\<^sub>2'_)\\<rangle> \\<Rightarrow>\n                           \\<langle>e'_,\n                            (h\\<^sub>3_, l\\<^sub>3_)\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ V_ T_ e\\<^sub>0_ h\\<^sub>0_ l\\<^sub>0_ e\\<^sub>1_ h\\<^sub>1_\n         l\\<^sub>1_.\n         \\<lbrakk>x = Pa_; xa = {V_:T_; e\\<^sub>0_};\n          (xb, xc) = (h\\<^sub>0_, l\\<^sub>0_); xd = e\\<^sub>1_;\n          (xe, xf) = (h\\<^sub>1_, l\\<^sub>1_(V_ := l\\<^sub>0_ V_));\n          Pa_ \\<turnstile> \\<langle>e\\<^sub>0_,\n                            (h\\<^sub>0_, l\\<^sub>0_\n                             (V_ := None))\\<rangle> \\<Rightarrow>\n                           \\<langle>e\\<^sub>1_,\n                            (h\\<^sub>1_, l\\<^sub>1_)\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e\\<^sub>0_ e\\<^sub>1_ s\\<^sub>0_ e\\<^sub>2_ s\\<^sub>2_ v_\n         s\\<^sub>1_.\n         \\<lbrakk>x = Pa_; xa = e\\<^sub>0_;; e\\<^sub>1_;\n          (xb, xc) = s\\<^sub>0_; xd = e\\<^sub>2_; (xe, xf) = s\\<^sub>2_;\n          Pa_ \\<turnstile> \\<langle>e\\<^sub>0_,\n                            s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>Val v_,s\\<^sub>1_\\<rangle>;\n          Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                            s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                           \\<langle>e\\<^sub>2_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e\\<^sub>0_ e\\<^sub>1_ s\\<^sub>0_ e_ s\\<^sub>1_.\n         \\<lbrakk>x = Pa_; xa = e\\<^sub>0_;; e\\<^sub>1_;\n          (xb, xc) = s\\<^sub>0_; xd = throw e_; (xe, xf) = s\\<^sub>1_;\n          Pa_ \\<turnstile> \\<langle>e\\<^sub>0_,\n                            s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>throw e_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e_ e\\<^sub>1_ e\\<^sub>2_ s\\<^sub>0_ e'_ s\\<^sub>2_\n         s\\<^sub>1_.\n         \\<lbrakk>x = Pa_; xa = if (e_) e\\<^sub>1_ else e\\<^sub>2_;\n          (xb, xc) = s\\<^sub>0_; xd = e'_; (xe, xf) = s\\<^sub>2_;\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>true,s\\<^sub>1_\\<rangle>;\n          Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                            s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                           \\<langle>e'_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e_ e\\<^sub>1_ e\\<^sub>2_ s\\<^sub>0_ e'_ s\\<^sub>2_\n         s\\<^sub>1_.\n         \\<lbrakk>x = Pa_; xa = if (e_) e\\<^sub>1_ else e\\<^sub>2_;\n          (xb, xc) = s\\<^sub>0_; xd = e'_; (xe, xf) = s\\<^sub>2_;\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>false,s\\<^sub>1_\\<rangle>;\n          Pa_ \\<turnstile> \\<langle>e\\<^sub>2_,\n                            s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                           \\<langle>e'_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e_ e\\<^sub>1_ e\\<^sub>2_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n         \\<lbrakk>x = Pa_; xa = if (e_) e\\<^sub>1_ else e\\<^sub>2_;\n          (xb, xc) = s\\<^sub>0_; xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e_ c_ s\\<^sub>0_ s\\<^sub>1_.\n         \\<lbrakk>x = Pa_; xa = while (e_) c_; (xb, xc) = s\\<^sub>0_;\n          xd = unit; (xe, xf) = s\\<^sub>1_;\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>false,s\\<^sub>1_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e_ c_ s\\<^sub>0_ e\\<^sub>3_ s\\<^sub>3_ s\\<^sub>1_ v\\<^sub>1_\n         s\\<^sub>2_.\n         \\<lbrakk>x = Pa_; xa = while (e_) c_; (xb, xc) = s\\<^sub>0_;\n          xd = e\\<^sub>3_; (xe, xf) = s\\<^sub>3_;\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>true,s\\<^sub>1_\\<rangle>;\n          Pa_ \\<turnstile> \\<langle>c_,s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                           \\<langle>Val v\\<^sub>1_,s\\<^sub>2_\\<rangle>;\n          Pa_ \\<turnstile> \\<langle>while (e_) c_,\n                            s\\<^sub>2_\\<rangle> \\<Rightarrow>\n                           \\<langle>e\\<^sub>3_,s\\<^sub>3_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e_ c_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n         \\<lbrakk>x = Pa_; xa = while (e_) c_; (xb, xc) = s\\<^sub>0_;\n          xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e_ c_ s\\<^sub>0_ e'_ s\\<^sub>2_ s\\<^sub>1_.\n         \\<lbrakk>x = Pa_; xa = while (e_) c_; (xb, xc) = s\\<^sub>0_;\n          xd = throw e'_; (xe, xf) = s\\<^sub>2_;\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>true,s\\<^sub>1_\\<rangle>;\n          Pa_ \\<turnstile> \\<langle>c_,s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                           \\<langle>throw e'_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e_ s\\<^sub>0_ aa_ s\\<^sub>1_.\n         \\<lbrakk>x = Pa_; xa = throw e_; (xb, xc) = s\\<^sub>0_;\n          xd = Throw aa_; (xe, xf) = s\\<^sub>1_;\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>addr aa_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e_ s\\<^sub>0_ s\\<^sub>1_.\n         \\<lbrakk>x = Pa_; xa = throw e_; (xb, xc) = s\\<^sub>0_;\n          xd = THROW NullPointer; (xe, xf) = s\\<^sub>1_;\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>null,s\\<^sub>1_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n         \\<lbrakk>x = Pa_; xa = throw e_; (xb, xc) = s\\<^sub>0_;\n          xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e\\<^sub>1_ Ca_ V_ e\\<^sub>2_ s\\<^sub>0_ v\\<^sub>1_\n         s\\<^sub>1_.\n         \\<lbrakk>x = Pa_; xa = try e\\<^sub>1_ catch(Ca_ V_) e\\<^sub>2_;\n          (xb, xc) = s\\<^sub>0_; xd = Val v\\<^sub>1_; (xe, xf) = s\\<^sub>1_;\n          Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                            s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>Val v\\<^sub>1_,\n                            s\\<^sub>1_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e\\<^sub>1_ Ca_ V_ e\\<^sub>2_ s\\<^sub>0_ e\\<^sub>2'_\n         h\\<^sub>2_ l\\<^sub>2_ l\\<^sub>1_ aa_ h\\<^sub>1_ D_ fs_.\n         \\<lbrakk>x = Pa_; xa = try e\\<^sub>1_ catch(Ca_ V_) e\\<^sub>2_;\n          (xb, xc) = s\\<^sub>0_; xd = e\\<^sub>2'_;\n          (xe, xf) = (h\\<^sub>2_, l\\<^sub>2_(V_ := l\\<^sub>1_ V_));\n          Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                            s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>Throw aa_,\n                            (h\\<^sub>1_, l\\<^sub>1_)\\<rangle>;\n          h\\<^sub>1_ aa_ = \\<lfloor>(D_, fs_)\\<rfloor>;\n          Pa_ \\<turnstile> D_ \\<preceq>\\<^sup>* Ca_;\n          Pa_ \\<turnstile> \\<langle>e\\<^sub>2_,\n                            (h\\<^sub>1_, l\\<^sub>1_(V_ \\<mapsto>\n                             Addr aa_))\\<rangle> \\<Rightarrow>\n                           \\<langle>e\\<^sub>2'_,\n                            (h\\<^sub>2_, l\\<^sub>2_)\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e\\<^sub>1_ Ca_ V_ e\\<^sub>2_ s\\<^sub>0_ aa_ h\\<^sub>1_\n         l\\<^sub>1_ D_ fs_.\n         \\<lbrakk>x = Pa_; xa = try e\\<^sub>1_ catch(Ca_ V_) e\\<^sub>2_;\n          (xb, xc) = s\\<^sub>0_; xd = Throw aa_;\n          (xe, xf) = (h\\<^sub>1_, l\\<^sub>1_);\n          Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                            s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>Throw aa_,\n                            (h\\<^sub>1_, l\\<^sub>1_)\\<rangle>;\n          h\\<^sub>1_ aa_ = \\<lfloor>(D_, fs_)\\<rfloor>;\n          (D_, Ca_) \\<notin> (subcls1 Pa_)\\<^sup>*\\<rbrakk>\n         \\<Longrightarrow> thesis\\<rbrakk>\n     \\<Longrightarrow> thesis) &&&\n    (\\<lbrakk>x \\<turnstile> \\<langle>xa,(xb, xc)\\<rangle> [\\<Rightarrow>]\n                             \\<langle>xd,(xe, xf)\\<rangle>;\n      \\<And>P s.\n         \\<lbrakk>x = P; xa = []; (xb, xc) = s; xd = [];\n          (xe, xf) = s\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e_ es_ s\\<^sub>0_ v_ es'_ s\\<^sub>2_ s\\<^sub>1_.\n         \\<lbrakk>x = Pa_; xa = e_ # es_; (xb, xc) = s\\<^sub>0_;\n          xd = Val v_ # es'_; (xe, xf) = s\\<^sub>2_;\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>Val v_,s\\<^sub>1_\\<rangle>;\n          Pa_ \\<turnstile> \\<langle>es_,s\\<^sub>1_\\<rangle> [\\<Rightarrow>]\n                           \\<langle>es'_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis;\n      \\<And>Pa_ e_ es_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n         \\<lbrakk>x = Pa_; xa = e_ # es_; (xb, xc) = s\\<^sub>0_;\n          xd = throw e'_ # es_; (xe, xf) = s\\<^sub>1_;\n          Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                           \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n         \\<Longrightarrow> thesis\\<rbrakk>\n     \\<Longrightarrow> thesis)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<turnstile> \\<langle>xa,(xb, xc)\\<rangle> \\<Rightarrow>\n                            \\<langle>xd,(xe, xf)\\<rangle>;\n     \\<And>P C h l a h' FDTs.\n        \\<lbrakk>x = P; xa = new C; (xb, xc) = (h, l); xd = addr a;\n         (xe, xf) = (h', l); new_Addr h = \\<lfloor>a\\<rfloor>;\n         P \\<turnstile> C has_fields FDTs;\n         h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ Ca_ ha_ la_.\n        \\<lbrakk>x = Pa_; xa = new Ca_; (xb, xc) = (ha_, la_);\n         xd = THROW OutOfMemory; (xe, xf) = (ha_, la_);\n         new_Addr ha_ = None\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ Ca_ e_ s\\<^sub>0_ aa_ ha_ la_ D_ fs_.\n        \\<lbrakk>x = Pa_; xa = Cast Ca_ e_; (xb, xc) = s\\<^sub>0_;\n         xd = addr aa_; (xe, xf) = (ha_, la_);\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>addr aa_,(ha_, la_)\\<rangle>;\n         ha_ aa_ = \\<lfloor>(D_, fs_)\\<rfloor>;\n         Pa_ \\<turnstile> D_ \\<preceq>\\<^sup>* Ca_\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ Ca_ e_ s\\<^sub>0_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = Cast Ca_ e_; (xb, xc) = s\\<^sub>0_;\n         xd = null; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>null,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ Ca_ e_ s\\<^sub>0_ ha_ la_ aa_ D_ fs_.\n        \\<lbrakk>x = Pa_; xa = Cast Ca_ e_; (xb, xc) = s\\<^sub>0_;\n         xd = THROW ClassCast; (xe, xf) = (ha_, la_);\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>addr aa_,(ha_, la_)\\<rangle>;\n         ha_ aa_ = \\<lfloor>(D_, fs_)\\<rfloor>;\n         (D_, Ca_) \\<notin> (subcls1 Pa_)\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ Ca_ e_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = Cast Ca_ e_; (xb, xc) = s\\<^sub>0_;\n         xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ v_ s_.\n        \\<lbrakk>x = Pa_; xa = Val v_; (xb, xc) = s_; xd = Val v_;\n         (xe, xf) = s_\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ V_ ha_ la_ v_.\n        \\<lbrakk>x = Pa_; xa = Var V_; (xb, xc) = (ha_, la_); xd = Val v_;\n         (xe, xf) = (ha_, la_); la_ V_ = \\<lfloor>v_\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>1_ bop_ e\\<^sub>2_ s\\<^sub>0_ v_ s\\<^sub>2_\n        v\\<^sub>1_ s\\<^sub>1_ v\\<^sub>2_.\n        \\<lbrakk>x = Pa_;\n         xa = e\\<^sub>1_ \\<guillemotleft>bop_\\<guillemotright> e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = Val v_; (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v\\<^sub>1_,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>2_,\n                           s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v\\<^sub>2_,s\\<^sub>2_\\<rangle>;\n         binop (bop_, v\\<^sub>1_, v\\<^sub>2_) =\n         \\<lfloor>v_\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>1_ bop_ e\\<^sub>2_ s\\<^sub>0_ e_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_;\n         xa = e\\<^sub>1_ \\<guillemotleft>bop_\\<guillemotright> e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = throw e_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>1_ bop_ e\\<^sub>2_ s\\<^sub>0_ e_ s\\<^sub>2_\n        v\\<^sub>1_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_;\n         xa = e\\<^sub>1_ \\<guillemotleft>bop_\\<guillemotright> e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = throw e_; (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v\\<^sub>1_,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>2_,\n                           s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ V_ e_ s\\<^sub>0_ ha_ l'_ v_ la_.\n        \\<lbrakk>x = Pa_; xa = V_:=e_; (xb, xc) = s\\<^sub>0_; xd = unit;\n         (xe, xf) = (ha_, l'_);\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v_,(ha_, la_)\\<rangle>;\n         l'_ = la_(V_ \\<mapsto> v_)\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ V_ e_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = V_:=e_; (xb, xc) = s\\<^sub>0_;\n         xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ F_ D_ s\\<^sub>0_ v_ ha_ la_ aa_ Ca_ fs_.\n        \\<lbrakk>x = Pa_; xa = e_\\<bullet>F_{D_}; (xb, xc) = s\\<^sub>0_;\n         xd = Val v_; (xe, xf) = (ha_, la_);\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>addr aa_,(ha_, la_)\\<rangle>;\n         ha_ aa_ = \\<lfloor>(Ca_, fs_)\\<rfloor>;\n         fs_ (F_, D_) = \\<lfloor>v_\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ F_ D_ s\\<^sub>0_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e_\\<bullet>F_{D_}; (xb, xc) = s\\<^sub>0_;\n         xd = THROW NullPointer; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>null,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ F_ D_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e_\\<bullet>F_{D_}; (xb, xc) = s\\<^sub>0_;\n         xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>1_ F_ D_ e\\<^sub>2_ s\\<^sub>0_ h\\<^sub>2'_ l\\<^sub>2_\n        aa_ s\\<^sub>1_ v_ h\\<^sub>2_ Ca_ fs_ fs'_.\n        \\<lbrakk>x = Pa_; xa = e\\<^sub>1_\\<bullet>F_{D_} := e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = unit;\n         (xe, xf) = (h\\<^sub>2'_, l\\<^sub>2_);\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>addr aa_,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>2_,\n                           s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v_,(h\\<^sub>2_, l\\<^sub>2_)\\<rangle>;\n         h\\<^sub>2_ aa_ = \\<lfloor>(Ca_, fs_)\\<rfloor>;\n         fs'_ = fs_((F_, D_) \\<mapsto> v_);\n         h\\<^sub>2'_ = h\\<^sub>2_(aa_ \\<mapsto> (Ca_, fs'_))\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>1_ F_ D_ e\\<^sub>2_ s\\<^sub>0_ s\\<^sub>2_ s\\<^sub>1_\n        v_.\n        \\<lbrakk>x = Pa_; xa = e\\<^sub>1_\\<bullet>F_{D_} := e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = THROW NullPointer;\n         (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>null,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>2_,\n                           s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>1_ F_ D_ e\\<^sub>2_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e\\<^sub>1_\\<bullet>F_{D_} := e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>1_ F_ D_ e\\<^sub>2_ s\\<^sub>0_ e'_ s\\<^sub>2_ v_\n        s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e\\<^sub>1_\\<bullet>F_{D_} := e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = throw e'_; (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v_,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>2_,\n                           s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ M_ ps_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e_\\<bullet>M_(ps_); (xb, xc) = s\\<^sub>0_;\n         xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ M_ ps_ s\\<^sub>0_ s\\<^sub>2_ s\\<^sub>1_ evs_ vs_.\n        \\<lbrakk>x = Pa_; xa = e_\\<bullet>M_(ps_); (xb, xc) = s\\<^sub>0_;\n         xd = THROW NullPointer; (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>null,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>ps_,s\\<^sub>1_\\<rangle> [\\<Rightarrow>]\n                          \\<langle>evs_,s\\<^sub>2_\\<rangle>;\n         map_val evs_ vs_\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ M_ es_ s\\<^sub>0_ ex_ s\\<^sub>2_ v_ s\\<^sub>1_ evs_ vs_\n        es''_.\n        \\<lbrakk>x = Pa_; xa = e_\\<bullet>M_(es_); (xb, xc) = s\\<^sub>0_;\n         xd = throw ex_; (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v_,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>es_,s\\<^sub>1_\\<rangle> [\\<Rightarrow>]\n                          \\<langle>evs_,s\\<^sub>2_\\<rangle>;\n         map_val2 evs_ vs_ (throw ex_ # es''_)\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ M_ ps_ s\\<^sub>0_ e'_ h\\<^sub>3_ l\\<^sub>2_ aa_ s\\<^sub>1_\n        evs_ h\\<^sub>2_ vs_ Ca_ fs_ Ts_ T_ pns_ body_ D_ l\\<^sub>2'_\n        l\\<^sub>3_.\n        \\<lbrakk>x = Pa_; xa = e_\\<bullet>M_(ps_); (xb, xc) = s\\<^sub>0_;\n         xd = e'_; (xe, xf) = (h\\<^sub>3_, l\\<^sub>2_);\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>addr aa_,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>ps_,s\\<^sub>1_\\<rangle> [\\<Rightarrow>]\n                          \\<langle>evs_,(h\\<^sub>2_, l\\<^sub>2_)\\<rangle>;\n         map_val evs_ vs_; h\\<^sub>2_ aa_ = \\<lfloor>(Ca_, fs_)\\<rfloor>;\n         Pa_ \\<turnstile> Ca_ sees M_: Ts_\\<rightarrow>T_ = (pns_,\n                       body_) in D_;\n         length vs_ = length pns_;\n         l\\<^sub>2'_ = [this \\<mapsto> Addr aa_, pns_ [\\<mapsto>] vs_];\n         Pa_ \\<turnstile> \\<langle>body_,\n                           (h\\<^sub>2_, l\\<^sub>2'_)\\<rangle> \\<Rightarrow>\n                          \\<langle>e'_,\n                           (h\\<^sub>3_, l\\<^sub>3_)\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ V_ T_ e\\<^sub>0_ h\\<^sub>0_ l\\<^sub>0_ e\\<^sub>1_ h\\<^sub>1_\n        l\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = {V_:T_; e\\<^sub>0_};\n         (xb, xc) = (h\\<^sub>0_, l\\<^sub>0_); xd = e\\<^sub>1_;\n         (xe, xf) = (h\\<^sub>1_, l\\<^sub>1_(V_ := l\\<^sub>0_ V_));\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>0_,\n                           (h\\<^sub>0_, l\\<^sub>0_\n                            (V_ := None))\\<rangle> \\<Rightarrow>\n                          \\<langle>e\\<^sub>1_,\n                           (h\\<^sub>1_, l\\<^sub>1_)\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>0_ e\\<^sub>1_ s\\<^sub>0_ e\\<^sub>2_ s\\<^sub>2_ v_\n        s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e\\<^sub>0_;; e\\<^sub>1_;\n         (xb, xc) = s\\<^sub>0_; xd = e\\<^sub>2_; (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>0_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v_,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                          \\<langle>e\\<^sub>2_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>0_ e\\<^sub>1_ s\\<^sub>0_ e_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e\\<^sub>0_;; e\\<^sub>1_;\n         (xb, xc) = s\\<^sub>0_; xd = throw e_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>0_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ e\\<^sub>1_ e\\<^sub>2_ s\\<^sub>0_ e'_ s\\<^sub>2_\n        s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = if (e_) e\\<^sub>1_ else e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = e'_; (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>true,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                          \\<langle>e'_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ e\\<^sub>1_ e\\<^sub>2_ s\\<^sub>0_ e'_ s\\<^sub>2_\n        s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = if (e_) e\\<^sub>1_ else e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = e'_; (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>false,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>2_,\n                           s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                          \\<langle>e'_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ e\\<^sub>1_ e\\<^sub>2_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = if (e_) e\\<^sub>1_ else e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ c_ s\\<^sub>0_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = while (e_) c_; (xb, xc) = s\\<^sub>0_;\n         xd = unit; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>false,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ c_ s\\<^sub>0_ e\\<^sub>3_ s\\<^sub>3_ s\\<^sub>1_ v\\<^sub>1_\n        s\\<^sub>2_.\n        \\<lbrakk>x = Pa_; xa = while (e_) c_; (xb, xc) = s\\<^sub>0_;\n         xd = e\\<^sub>3_; (xe, xf) = s\\<^sub>3_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>true,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>c_,s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v\\<^sub>1_,s\\<^sub>2_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>while (e_) c_,\n                           s\\<^sub>2_\\<rangle> \\<Rightarrow>\n                          \\<langle>e\\<^sub>3_,s\\<^sub>3_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ c_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = while (e_) c_; (xb, xc) = s\\<^sub>0_;\n         xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ c_ s\\<^sub>0_ e'_ s\\<^sub>2_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = while (e_) c_; (xb, xc) = s\\<^sub>0_;\n         xd = throw e'_; (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>true,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>c_,s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ s\\<^sub>0_ aa_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = throw e_; (xb, xc) = s\\<^sub>0_;\n         xd = Throw aa_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>addr aa_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ s\\<^sub>0_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = throw e_; (xb, xc) = s\\<^sub>0_;\n         xd = THROW NullPointer; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>null,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = throw e_; (xb, xc) = s\\<^sub>0_;\n         xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>1_ Ca_ V_ e\\<^sub>2_ s\\<^sub>0_ v\\<^sub>1_\n        s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = try e\\<^sub>1_ catch(Ca_ V_) e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = Val v\\<^sub>1_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v\\<^sub>1_,\n                           s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>1_ Ca_ V_ e\\<^sub>2_ s\\<^sub>0_ e\\<^sub>2'_\n        h\\<^sub>2_ l\\<^sub>2_ l\\<^sub>1_ aa_ h\\<^sub>1_ D_ fs_.\n        \\<lbrakk>x = Pa_; xa = try e\\<^sub>1_ catch(Ca_ V_) e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = e\\<^sub>2'_;\n         (xe, xf) = (h\\<^sub>2_, l\\<^sub>2_(V_ := l\\<^sub>1_ V_));\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>Throw aa_,\n                           (h\\<^sub>1_, l\\<^sub>1_)\\<rangle>;\n         h\\<^sub>1_ aa_ = \\<lfloor>(D_, fs_)\\<rfloor>;\n         Pa_ \\<turnstile> D_ \\<preceq>\\<^sup>* Ca_;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>2_,\n                           (h\\<^sub>1_, l\\<^sub>1_(V_ \\<mapsto>\n                            Addr aa_))\\<rangle> \\<Rightarrow>\n                          \\<langle>e\\<^sub>2'_,\n                           (h\\<^sub>2_, l\\<^sub>2_)\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>1_ Ca_ V_ e\\<^sub>2_ s\\<^sub>0_ aa_ h\\<^sub>1_\n        l\\<^sub>1_ D_ fs_.\n        \\<lbrakk>x = Pa_; xa = try e\\<^sub>1_ catch(Ca_ V_) e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = Throw aa_;\n         (xe, xf) = (h\\<^sub>1_, l\\<^sub>1_);\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>Throw aa_,\n                           (h\\<^sub>1_, l\\<^sub>1_)\\<rangle>;\n         h\\<^sub>1_ aa_ = \\<lfloor>(D_, fs_)\\<rfloor>;\n         (D_, Ca_) \\<notin> (subcls1 Pa_)\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>x \\<turnstile> \\<langle>xa,(xb, xc)\\<rangle> [\\<Rightarrow>]\n                            \\<langle>xd,(xe, xf)\\<rangle>;\n     \\<And>P s.\n        \\<lbrakk>x = P; xa = []; (xb, xc) = s; xd = [];\n         (xe, xf) = s\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ es_ s\\<^sub>0_ v_ es'_ s\\<^sub>2_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e_ # es_; (xb, xc) = s\\<^sub>0_;\n         xd = Val v_ # es'_; (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v_,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>es_,s\\<^sub>1_\\<rangle> [\\<Rightarrow>]\n                          \\<langle>es'_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ es_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e_ # es_; (xb, xc) = s\\<^sub>0_;\n         xd = throw e'_ # es_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "case eval"], ["proof (state)\nthis:\n  \\<lbrakk>x = ?P; xa = new ?C; (xb, xc) = (?h, ?l); xd = addr ?a;\n   (xe, xf) = (?h', ?l); new_Addr ?h = \\<lfloor>?a\\<rfloor>;\n   ?P \\<turnstile> ?C has_fields ?FDTs;\n   ?h' = ?h(?a \\<mapsto> (?C, init_fields ?FDTs))\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = new ?Ca; (xb, xc) = (?ha, ?la);\n   xd = THROW OutOfMemory; (xe, xf) = (?ha, ?la);\n   new_Addr ?ha = None\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = Cast ?Ca ?e; (xb, xc) = ?s\\<^sub>0; xd = addr ?aa;\n   (xe, xf) = (?ha, ?la);\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>addr ?aa,(?ha, ?la)\\<rangle>;\n   ?ha ?aa = \\<lfloor>(?D, ?fs)\\<rfloor>;\n   ?Pa \\<turnstile> ?D \\<preceq>\\<^sup>* ?Ca\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = Cast ?Ca ?e; (xb, xc) = ?s\\<^sub>0; xd = null;\n   (xe, xf) = ?s\\<^sub>1;\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>null,?s\\<^sub>1\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = Cast ?Ca ?e; (xb, xc) = ?s\\<^sub>0;\n   xd = THROW ClassCast; (xe, xf) = (?ha, ?la);\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>addr ?aa,(?ha, ?la)\\<rangle>;\n   ?ha ?aa = \\<lfloor>(?D, ?fs)\\<rfloor>;\n   (?D, ?Ca) \\<notin> (subcls1 ?Pa)\\<^sup>*\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = Cast ?Ca ?e; (xb, xc) = ?s\\<^sub>0; xd = throw ?e';\n   (xe, xf) = ?s\\<^sub>1;\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>throw ?e',?s\\<^sub>1\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = Val ?v; (xb, xc) = ?s; xd = Val ?v;\n   (xe, xf) = ?s\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = Var ?V; (xb, xc) = (?ha, ?la); xd = Val ?v;\n   (xe, xf) = (?ha, ?la); ?la ?V = \\<lfloor>?v\\<rfloor>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa;\n   xa = ?e\\<^sub>1 \\<guillemotleft>?bop\\<guillemotright> ?e\\<^sub>2;\n   (xb, xc) = ?s\\<^sub>0; xd = Val ?v; (xe, xf) = ?s\\<^sub>2;\n   ?Pa \\<turnstile> \\<langle>?e\\<^sub>1,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>Val ?v\\<^sub>1,?s\\<^sub>1\\<rangle>;\n   ?Pa \\<turnstile> \\<langle>?e\\<^sub>2,?s\\<^sub>1\\<rangle> \\<Rightarrow>\n                    \\<langle>Val ?v\\<^sub>2,?s\\<^sub>2\\<rangle>;\n   binop (?bop, ?v\\<^sub>1, ?v\\<^sub>2) = \\<lfloor>?v\\<rfloor>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa;\n   xa = ?e\\<^sub>1 \\<guillemotleft>?bop\\<guillemotright> ?e\\<^sub>2;\n   (xb, xc) = ?s\\<^sub>0; xd = throw ?e; (xe, xf) = ?s\\<^sub>1;\n   ?Pa \\<turnstile> \\<langle>?e\\<^sub>1,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>throw ?e,?s\\<^sub>1\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa;\n   xa = ?e\\<^sub>1 \\<guillemotleft>?bop\\<guillemotright> ?e\\<^sub>2;\n   (xb, xc) = ?s\\<^sub>0; xd = throw ?e; (xe, xf) = ?s\\<^sub>2;\n   ?Pa \\<turnstile> \\<langle>?e\\<^sub>1,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>Val ?v\\<^sub>1,?s\\<^sub>1\\<rangle>;\n   ?Pa \\<turnstile> \\<langle>?e\\<^sub>2,?s\\<^sub>1\\<rangle> \\<Rightarrow>\n                    \\<langle>throw ?e,?s\\<^sub>2\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = ?V:=?e; (xb, xc) = ?s\\<^sub>0; xd = unit;\n   (xe, xf) = (?ha, ?l');\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>Val ?v,(?ha, ?la)\\<rangle>;\n   ?l' = ?la(?V \\<mapsto> ?v)\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = ?V:=?e; (xb, xc) = ?s\\<^sub>0; xd = throw ?e';\n   (xe, xf) = ?s\\<^sub>1;\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>throw ?e',?s\\<^sub>1\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = ?e\\<bullet>?F{?D}; (xb, xc) = ?s\\<^sub>0;\n   xd = Val ?v; (xe, xf) = (?ha, ?la);\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>addr ?aa,(?ha, ?la)\\<rangle>;\n   ?ha ?aa = \\<lfloor>(?Ca, ?fs)\\<rfloor>;\n   ?fs (?F, ?D) = \\<lfloor>?v\\<rfloor>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = ?e\\<bullet>?F{?D}; (xb, xc) = ?s\\<^sub>0;\n   xd = THROW NullPointer; (xe, xf) = ?s\\<^sub>1;\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>null,?s\\<^sub>1\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = ?e\\<bullet>?F{?D}; (xb, xc) = ?s\\<^sub>0;\n   xd = throw ?e'; (xe, xf) = ?s\\<^sub>1;\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>throw ?e',?s\\<^sub>1\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = ?e\\<^sub>1\\<bullet>?F{?D} := ?e\\<^sub>2;\n   (xb, xc) = ?s\\<^sub>0; xd = unit; (xe, xf) = (?h\\<^sub>2', ?l\\<^sub>2);\n   ?Pa \\<turnstile> \\<langle>?e\\<^sub>1,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>addr ?aa,?s\\<^sub>1\\<rangle>;\n   ?Pa \\<turnstile> \\<langle>?e\\<^sub>2,?s\\<^sub>1\\<rangle> \\<Rightarrow>\n                    \\<langle>Val ?v,(?h\\<^sub>2, ?l\\<^sub>2)\\<rangle>;\n   ?h\\<^sub>2 ?aa = \\<lfloor>(?Ca, ?fs)\\<rfloor>;\n   ?fs' = ?fs((?F, ?D) \\<mapsto> ?v);\n   ?h\\<^sub>2' = ?h\\<^sub>2(?aa \\<mapsto> (?Ca, ?fs'))\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = ?e\\<^sub>1\\<bullet>?F{?D} := ?e\\<^sub>2;\n   (xb, xc) = ?s\\<^sub>0; xd = THROW NullPointer; (xe, xf) = ?s\\<^sub>2;\n   ?Pa \\<turnstile> \\<langle>?e\\<^sub>1,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>null,?s\\<^sub>1\\<rangle>;\n   ?Pa \\<turnstile> \\<langle>?e\\<^sub>2,?s\\<^sub>1\\<rangle> \\<Rightarrow>\n                    \\<langle>Val ?v,?s\\<^sub>2\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = ?e\\<^sub>1\\<bullet>?F{?D} := ?e\\<^sub>2;\n   (xb, xc) = ?s\\<^sub>0; xd = throw ?e'; (xe, xf) = ?s\\<^sub>1;\n   ?Pa \\<turnstile> \\<langle>?e\\<^sub>1,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>throw ?e',?s\\<^sub>1\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = ?e\\<^sub>1\\<bullet>?F{?D} := ?e\\<^sub>2;\n   (xb, xc) = ?s\\<^sub>0; xd = throw ?e'; (xe, xf) = ?s\\<^sub>2;\n   ?Pa \\<turnstile> \\<langle>?e\\<^sub>1,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>Val ?v,?s\\<^sub>1\\<rangle>;\n   ?Pa \\<turnstile> \\<langle>?e\\<^sub>2,?s\\<^sub>1\\<rangle> \\<Rightarrow>\n                    \\<langle>throw ?e',?s\\<^sub>2\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = ?e\\<bullet>?M(?ps); (xb, xc) = ?s\\<^sub>0;\n   xd = throw ?e'; (xe, xf) = ?s\\<^sub>1;\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>throw ?e',?s\\<^sub>1\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = ?e\\<bullet>?M(?ps); (xb, xc) = ?s\\<^sub>0;\n   xd = THROW NullPointer; (xe, xf) = ?s\\<^sub>2;\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>null,?s\\<^sub>1\\<rangle>;\n   ?Pa \\<turnstile> \\<langle>?ps,?s\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                    \\<langle>?evs,?s\\<^sub>2\\<rangle>;\n   map_val ?evs ?vs\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = ?e\\<bullet>?M(?es); (xb, xc) = ?s\\<^sub>0;\n   xd = throw ?ex; (xe, xf) = ?s\\<^sub>2;\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>Val ?v,?s\\<^sub>1\\<rangle>;\n   ?Pa \\<turnstile> \\<langle>?es,?s\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                    \\<langle>?evs,?s\\<^sub>2\\<rangle>;\n   map_val2 ?evs ?vs (throw ?ex # ?es'')\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = ?e\\<bullet>?M(?ps); (xb, xc) = ?s\\<^sub>0;\n   xd = ?e'; (xe, xf) = (?h\\<^sub>3, ?l\\<^sub>2);\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>addr ?aa,?s\\<^sub>1\\<rangle>;\n   ?Pa \\<turnstile> \\<langle>?ps,?s\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                    \\<langle>?evs,(?h\\<^sub>2, ?l\\<^sub>2)\\<rangle>;\n   map_val ?evs ?vs; ?h\\<^sub>2 ?aa = \\<lfloor>(?Ca, ?fs)\\<rfloor>;\n   ?Pa \\<turnstile> ?Ca sees ?M: ?Ts\\<rightarrow>?T = (?pns, ?body) in ?D;\n   length ?vs = length ?pns;\n   ?l\\<^sub>2' = [this \\<mapsto> Addr ?aa, ?pns [\\<mapsto>] ?vs];\n   ?Pa \\<turnstile> \\<langle>?body,\n                     (?h\\<^sub>2, ?l\\<^sub>2')\\<rangle> \\<Rightarrow>\n                    \\<langle>?e',(?h\\<^sub>3, ?l\\<^sub>3)\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = {?V:?T; ?e\\<^sub>0};\n   (xb, xc) = (?h\\<^sub>0, ?l\\<^sub>0); xd = ?e\\<^sub>1;\n   (xe, xf) = (?h\\<^sub>1, ?l\\<^sub>1(?V := ?l\\<^sub>0 ?V));\n   ?Pa \\<turnstile> \\<langle>?e\\<^sub>0,\n                     (?h\\<^sub>0, ?l\\<^sub>0\n                      (?V := None))\\<rangle> \\<Rightarrow>\n                    \\<langle>?e\\<^sub>1,\n                     (?h\\<^sub>1, ?l\\<^sub>1)\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = ?e\\<^sub>0;; ?e\\<^sub>1; (xb, xc) = ?s\\<^sub>0;\n   xd = ?e\\<^sub>2; (xe, xf) = ?s\\<^sub>2;\n   ?Pa \\<turnstile> \\<langle>?e\\<^sub>0,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>Val ?v,?s\\<^sub>1\\<rangle>;\n   ?Pa \\<turnstile> \\<langle>?e\\<^sub>1,?s\\<^sub>1\\<rangle> \\<Rightarrow>\n                    \\<langle>?e\\<^sub>2,?s\\<^sub>2\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = ?e\\<^sub>0;; ?e\\<^sub>1; (xb, xc) = ?s\\<^sub>0;\n   xd = throw ?e; (xe, xf) = ?s\\<^sub>1;\n   ?Pa \\<turnstile> \\<langle>?e\\<^sub>0,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>throw ?e,?s\\<^sub>1\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = if (?e) ?e\\<^sub>1 else ?e\\<^sub>2;\n   (xb, xc) = ?s\\<^sub>0; xd = ?e'; (xe, xf) = ?s\\<^sub>2;\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>true,?s\\<^sub>1\\<rangle>;\n   ?Pa \\<turnstile> \\<langle>?e\\<^sub>1,?s\\<^sub>1\\<rangle> \\<Rightarrow>\n                    \\<langle>?e',?s\\<^sub>2\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = if (?e) ?e\\<^sub>1 else ?e\\<^sub>2;\n   (xb, xc) = ?s\\<^sub>0; xd = ?e'; (xe, xf) = ?s\\<^sub>2;\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>false,?s\\<^sub>1\\<rangle>;\n   ?Pa \\<turnstile> \\<langle>?e\\<^sub>2,?s\\<^sub>1\\<rangle> \\<Rightarrow>\n                    \\<langle>?e',?s\\<^sub>2\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = if (?e) ?e\\<^sub>1 else ?e\\<^sub>2;\n   (xb, xc) = ?s\\<^sub>0; xd = throw ?e'; (xe, xf) = ?s\\<^sub>1;\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>throw ?e',?s\\<^sub>1\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = while (?e) ?c; (xb, xc) = ?s\\<^sub>0; xd = unit;\n   (xe, xf) = ?s\\<^sub>1;\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>false,?s\\<^sub>1\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = while (?e) ?c; (xb, xc) = ?s\\<^sub>0;\n   xd = ?e\\<^sub>3; (xe, xf) = ?s\\<^sub>3;\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>true,?s\\<^sub>1\\<rangle>;\n   ?Pa \\<turnstile> \\<langle>?c,?s\\<^sub>1\\<rangle> \\<Rightarrow>\n                    \\<langle>Val ?v\\<^sub>1,?s\\<^sub>2\\<rangle>;\n   ?Pa \\<turnstile> \\<langle>while (?e) ?c,?s\\<^sub>2\\<rangle> \\<Rightarrow>\n                    \\<langle>?e\\<^sub>3,?s\\<^sub>3\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = while (?e) ?c; (xb, xc) = ?s\\<^sub>0;\n   xd = throw ?e'; (xe, xf) = ?s\\<^sub>1;\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>throw ?e',?s\\<^sub>1\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = while (?e) ?c; (xb, xc) = ?s\\<^sub>0;\n   xd = throw ?e'; (xe, xf) = ?s\\<^sub>2;\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>true,?s\\<^sub>1\\<rangle>;\n   ?Pa \\<turnstile> \\<langle>?c,?s\\<^sub>1\\<rangle> \\<Rightarrow>\n                    \\<langle>throw ?e',?s\\<^sub>2\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = throw ?e; (xb, xc) = ?s\\<^sub>0; xd = Throw ?aa;\n   (xe, xf) = ?s\\<^sub>1;\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>addr ?aa,?s\\<^sub>1\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = throw ?e; (xb, xc) = ?s\\<^sub>0;\n   xd = THROW NullPointer; (xe, xf) = ?s\\<^sub>1;\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>null,?s\\<^sub>1\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = throw ?e; (xb, xc) = ?s\\<^sub>0; xd = throw ?e';\n   (xe, xf) = ?s\\<^sub>1;\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>throw ?e',?s\\<^sub>1\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = try ?e\\<^sub>1 catch(?Ca ?V) ?e\\<^sub>2;\n   (xb, xc) = ?s\\<^sub>0; xd = Val ?v\\<^sub>1; (xe, xf) = ?s\\<^sub>1;\n   ?Pa \\<turnstile> \\<langle>?e\\<^sub>1,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>Val ?v\\<^sub>1,?s\\<^sub>1\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = try ?e\\<^sub>1 catch(?Ca ?V) ?e\\<^sub>2;\n   (xb, xc) = ?s\\<^sub>0; xd = ?e\\<^sub>2';\n   (xe, xf) = (?h\\<^sub>2, ?l\\<^sub>2(?V := ?l\\<^sub>1 ?V));\n   ?Pa \\<turnstile> \\<langle>?e\\<^sub>1,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>Throw ?aa,(?h\\<^sub>1, ?l\\<^sub>1)\\<rangle>;\n   ?h\\<^sub>1 ?aa = \\<lfloor>(?D, ?fs)\\<rfloor>;\n   ?Pa \\<turnstile> ?D \\<preceq>\\<^sup>* ?Ca;\n   ?Pa \\<turnstile> \\<langle>?e\\<^sub>2,\n                     (?h\\<^sub>1, ?l\\<^sub>1(?V \\<mapsto>\n                      Addr ?aa))\\<rangle> \\<Rightarrow>\n                    \\<langle>?e\\<^sub>2',\n                     (?h\\<^sub>2, ?l\\<^sub>2)\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = try ?e\\<^sub>1 catch(?Ca ?V) ?e\\<^sub>2;\n   (xb, xc) = ?s\\<^sub>0; xd = Throw ?aa;\n   (xe, xf) = (?h\\<^sub>1, ?l\\<^sub>1);\n   ?Pa \\<turnstile> \\<langle>?e\\<^sub>1,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>Throw ?aa,(?h\\<^sub>1, ?l\\<^sub>1)\\<rangle>;\n   ?h\\<^sub>1 ?aa = \\<lfloor>(?D, ?fs)\\<rfloor>;\n   (?D, ?Ca) \\<notin> (subcls1 ?Pa)\\<^sup>*\\<rbrakk>\n  \\<Longrightarrow> thesis\n  x \\<turnstile> \\<langle>xa,(xb, xc)\\<rangle> \\<Rightarrow>\n                 \\<langle>xd,(xe, xf)\\<rangle>\n  \\<lbrakk>x = ?Pa; xa = ?e\\<bullet>?M(?ps); (xb, xc) = ?s\\<^sub>0;\n   xd = THROW NullPointer; (xe, xf) = ?s\\<^sub>2;\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>null,?s\\<^sub>1\\<rangle>;\n   ?Pa \\<turnstile> \\<langle>?ps,?s\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                    \\<langle>?evs,?s\\<^sub>2\\<rangle>;\n   map_val ?evs ?vs\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = ?e\\<bullet>?M(?es); (xb, xc) = ?s\\<^sub>0;\n   xd = throw ?ex; (xe, xf) = ?s\\<^sub>2;\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>Val ?v,?s\\<^sub>1\\<rangle>;\n   ?Pa \\<turnstile> \\<langle>?es,?s\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                    \\<langle>?evs,?s\\<^sub>2\\<rangle>;\n   map_val2 ?evs ?vs (throw ?ex # ?es'')\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = ?e\\<bullet>?M(?ps); (xb, xc) = ?s\\<^sub>0;\n   xd = ?e'; (xe, xf) = (?h\\<^sub>3, ?l\\<^sub>2);\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>addr ?aa,?s\\<^sub>1\\<rangle>;\n   ?Pa \\<turnstile> \\<langle>?ps,?s\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                    \\<langle>?evs,(?h\\<^sub>2, ?l\\<^sub>2)\\<rangle>;\n   map_val ?evs ?vs; ?h\\<^sub>2 ?aa = \\<lfloor>(?Ca, ?fs)\\<rfloor>;\n   ?Pa \\<turnstile> ?Ca sees ?M: ?Ts\\<rightarrow>?T = (?pns, ?body) in ?D;\n   length ?vs = length ?pns;\n   ?l\\<^sub>2' = [this \\<mapsto> Addr ?aa, ?pns [\\<mapsto>] ?vs];\n   ?Pa \\<turnstile> \\<langle>?body,\n                     (?h\\<^sub>2, ?l\\<^sub>2')\\<rangle> \\<Rightarrow>\n                    \\<langle>?e',(?h\\<^sub>3, ?l\\<^sub>3)\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = while (?e) ?c; (xb, xc) = ?s\\<^sub>0;\n   xd = throw ?e'; (xe, xf) = ?s\\<^sub>2;\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>true,?s\\<^sub>1\\<rangle>;\n   ?Pa \\<turnstile> \\<langle>?c,?s\\<^sub>1\\<rangle> \\<Rightarrow>\n                    \\<langle>throw ?e',?s\\<^sub>2\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<turnstile> \\<langle>xa,(xb, xc)\\<rangle> \\<Rightarrow>\n                            \\<langle>xd,(xe, xf)\\<rangle>;\n     \\<And>P C h l a h' FDTs.\n        \\<lbrakk>x = P; xa = new C; (xb, xc) = (h, l); xd = addr a;\n         (xe, xf) = (h', l); new_Addr h = \\<lfloor>a\\<rfloor>;\n         P \\<turnstile> C has_fields FDTs;\n         h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ Ca_ ha_ la_.\n        \\<lbrakk>x = Pa_; xa = new Ca_; (xb, xc) = (ha_, la_);\n         xd = THROW OutOfMemory; (xe, xf) = (ha_, la_);\n         new_Addr ha_ = None\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ Ca_ e_ s\\<^sub>0_ aa_ ha_ la_ D_ fs_.\n        \\<lbrakk>x = Pa_; xa = Cast Ca_ e_; (xb, xc) = s\\<^sub>0_;\n         xd = addr aa_; (xe, xf) = (ha_, la_);\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>addr aa_,(ha_, la_)\\<rangle>;\n         ha_ aa_ = \\<lfloor>(D_, fs_)\\<rfloor>;\n         Pa_ \\<turnstile> D_ \\<preceq>\\<^sup>* Ca_\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ Ca_ e_ s\\<^sub>0_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = Cast Ca_ e_; (xb, xc) = s\\<^sub>0_;\n         xd = null; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>null,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ Ca_ e_ s\\<^sub>0_ ha_ la_ aa_ D_ fs_.\n        \\<lbrakk>x = Pa_; xa = Cast Ca_ e_; (xb, xc) = s\\<^sub>0_;\n         xd = THROW ClassCast; (xe, xf) = (ha_, la_);\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>addr aa_,(ha_, la_)\\<rangle>;\n         ha_ aa_ = \\<lfloor>(D_, fs_)\\<rfloor>;\n         (D_, Ca_) \\<notin> (subcls1 Pa_)\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ Ca_ e_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = Cast Ca_ e_; (xb, xc) = s\\<^sub>0_;\n         xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ v_ s_.\n        \\<lbrakk>x = Pa_; xa = Val v_; (xb, xc) = s_; xd = Val v_;\n         (xe, xf) = s_\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ V_ ha_ la_ v_.\n        \\<lbrakk>x = Pa_; xa = Var V_; (xb, xc) = (ha_, la_); xd = Val v_;\n         (xe, xf) = (ha_, la_); la_ V_ = \\<lfloor>v_\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>1_ bop_ e\\<^sub>2_ s\\<^sub>0_ v_ s\\<^sub>2_\n        v\\<^sub>1_ s\\<^sub>1_ v\\<^sub>2_.\n        \\<lbrakk>x = Pa_;\n         xa = e\\<^sub>1_ \\<guillemotleft>bop_\\<guillemotright> e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = Val v_; (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v\\<^sub>1_,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>2_,\n                           s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v\\<^sub>2_,s\\<^sub>2_\\<rangle>;\n         binop (bop_, v\\<^sub>1_, v\\<^sub>2_) =\n         \\<lfloor>v_\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>1_ bop_ e\\<^sub>2_ s\\<^sub>0_ e_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_;\n         xa = e\\<^sub>1_ \\<guillemotleft>bop_\\<guillemotright> e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = throw e_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>1_ bop_ e\\<^sub>2_ s\\<^sub>0_ e_ s\\<^sub>2_\n        v\\<^sub>1_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_;\n         xa = e\\<^sub>1_ \\<guillemotleft>bop_\\<guillemotright> e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = throw e_; (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v\\<^sub>1_,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>2_,\n                           s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ V_ e_ s\\<^sub>0_ ha_ l'_ v_ la_.\n        \\<lbrakk>x = Pa_; xa = V_:=e_; (xb, xc) = s\\<^sub>0_; xd = unit;\n         (xe, xf) = (ha_, l'_);\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v_,(ha_, la_)\\<rangle>;\n         l'_ = la_(V_ \\<mapsto> v_)\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ V_ e_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = V_:=e_; (xb, xc) = s\\<^sub>0_;\n         xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ F_ D_ s\\<^sub>0_ v_ ha_ la_ aa_ Ca_ fs_.\n        \\<lbrakk>x = Pa_; xa = e_\\<bullet>F_{D_}; (xb, xc) = s\\<^sub>0_;\n         xd = Val v_; (xe, xf) = (ha_, la_);\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>addr aa_,(ha_, la_)\\<rangle>;\n         ha_ aa_ = \\<lfloor>(Ca_, fs_)\\<rfloor>;\n         fs_ (F_, D_) = \\<lfloor>v_\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ F_ D_ s\\<^sub>0_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e_\\<bullet>F_{D_}; (xb, xc) = s\\<^sub>0_;\n         xd = THROW NullPointer; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>null,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ F_ D_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e_\\<bullet>F_{D_}; (xb, xc) = s\\<^sub>0_;\n         xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>1_ F_ D_ e\\<^sub>2_ s\\<^sub>0_ h\\<^sub>2'_ l\\<^sub>2_\n        aa_ s\\<^sub>1_ v_ h\\<^sub>2_ Ca_ fs_ fs'_.\n        \\<lbrakk>x = Pa_; xa = e\\<^sub>1_\\<bullet>F_{D_} := e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = unit;\n         (xe, xf) = (h\\<^sub>2'_, l\\<^sub>2_);\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>addr aa_,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>2_,\n                           s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v_,(h\\<^sub>2_, l\\<^sub>2_)\\<rangle>;\n         h\\<^sub>2_ aa_ = \\<lfloor>(Ca_, fs_)\\<rfloor>;\n         fs'_ = fs_((F_, D_) \\<mapsto> v_);\n         h\\<^sub>2'_ = h\\<^sub>2_(aa_ \\<mapsto> (Ca_, fs'_))\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>1_ F_ D_ e\\<^sub>2_ s\\<^sub>0_ s\\<^sub>2_ s\\<^sub>1_\n        v_.\n        \\<lbrakk>x = Pa_; xa = e\\<^sub>1_\\<bullet>F_{D_} := e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = THROW NullPointer;\n         (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>null,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>2_,\n                           s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>1_ F_ D_ e\\<^sub>2_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e\\<^sub>1_\\<bullet>F_{D_} := e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>1_ F_ D_ e\\<^sub>2_ s\\<^sub>0_ e'_ s\\<^sub>2_ v_\n        s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e\\<^sub>1_\\<bullet>F_{D_} := e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = throw e'_; (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v_,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>2_,\n                           s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ M_ ps_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e_\\<bullet>M_(ps_); (xb, xc) = s\\<^sub>0_;\n         xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ M_ ps_ s\\<^sub>0_ s\\<^sub>2_ s\\<^sub>1_ evs_ vs_.\n        \\<lbrakk>x = Pa_; xa = e_\\<bullet>M_(ps_); (xb, xc) = s\\<^sub>0_;\n         xd = THROW NullPointer; (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>null,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>ps_,s\\<^sub>1_\\<rangle> [\\<Rightarrow>]\n                          \\<langle>evs_,s\\<^sub>2_\\<rangle>;\n         map_val evs_ vs_\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ M_ es_ s\\<^sub>0_ ex_ s\\<^sub>2_ v_ s\\<^sub>1_ evs_ vs_\n        es''_.\n        \\<lbrakk>x = Pa_; xa = e_\\<bullet>M_(es_); (xb, xc) = s\\<^sub>0_;\n         xd = throw ex_; (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v_,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>es_,s\\<^sub>1_\\<rangle> [\\<Rightarrow>]\n                          \\<langle>evs_,s\\<^sub>2_\\<rangle>;\n         map_val2 evs_ vs_ (throw ex_ # es''_)\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ M_ ps_ s\\<^sub>0_ e'_ h\\<^sub>3_ l\\<^sub>2_ aa_ s\\<^sub>1_\n        evs_ h\\<^sub>2_ vs_ Ca_ fs_ Ts_ T_ pns_ body_ D_ l\\<^sub>2'_\n        l\\<^sub>3_.\n        \\<lbrakk>x = Pa_; xa = e_\\<bullet>M_(ps_); (xb, xc) = s\\<^sub>0_;\n         xd = e'_; (xe, xf) = (h\\<^sub>3_, l\\<^sub>2_);\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>addr aa_,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>ps_,s\\<^sub>1_\\<rangle> [\\<Rightarrow>]\n                          \\<langle>evs_,(h\\<^sub>2_, l\\<^sub>2_)\\<rangle>;\n         map_val evs_ vs_; h\\<^sub>2_ aa_ = \\<lfloor>(Ca_, fs_)\\<rfloor>;\n         Pa_ \\<turnstile> Ca_ sees M_: Ts_\\<rightarrow>T_ = (pns_,\n                       body_) in D_;\n         length vs_ = length pns_;\n         l\\<^sub>2'_ = [this \\<mapsto> Addr aa_, pns_ [\\<mapsto>] vs_];\n         Pa_ \\<turnstile> \\<langle>body_,\n                           (h\\<^sub>2_, l\\<^sub>2'_)\\<rangle> \\<Rightarrow>\n                          \\<langle>e'_,\n                           (h\\<^sub>3_, l\\<^sub>3_)\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ V_ T_ e\\<^sub>0_ h\\<^sub>0_ l\\<^sub>0_ e\\<^sub>1_ h\\<^sub>1_\n        l\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = {V_:T_; e\\<^sub>0_};\n         (xb, xc) = (h\\<^sub>0_, l\\<^sub>0_); xd = e\\<^sub>1_;\n         (xe, xf) = (h\\<^sub>1_, l\\<^sub>1_(V_ := l\\<^sub>0_ V_));\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>0_,\n                           (h\\<^sub>0_, l\\<^sub>0_\n                            (V_ := None))\\<rangle> \\<Rightarrow>\n                          \\<langle>e\\<^sub>1_,\n                           (h\\<^sub>1_, l\\<^sub>1_)\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>0_ e\\<^sub>1_ s\\<^sub>0_ e\\<^sub>2_ s\\<^sub>2_ v_\n        s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e\\<^sub>0_;; e\\<^sub>1_;\n         (xb, xc) = s\\<^sub>0_; xd = e\\<^sub>2_; (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>0_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v_,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                          \\<langle>e\\<^sub>2_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>0_ e\\<^sub>1_ s\\<^sub>0_ e_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e\\<^sub>0_;; e\\<^sub>1_;\n         (xb, xc) = s\\<^sub>0_; xd = throw e_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>0_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ e\\<^sub>1_ e\\<^sub>2_ s\\<^sub>0_ e'_ s\\<^sub>2_\n        s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = if (e_) e\\<^sub>1_ else e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = e'_; (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>true,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                          \\<langle>e'_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ e\\<^sub>1_ e\\<^sub>2_ s\\<^sub>0_ e'_ s\\<^sub>2_\n        s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = if (e_) e\\<^sub>1_ else e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = e'_; (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>false,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>2_,\n                           s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                          \\<langle>e'_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ e\\<^sub>1_ e\\<^sub>2_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = if (e_) e\\<^sub>1_ else e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ c_ s\\<^sub>0_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = while (e_) c_; (xb, xc) = s\\<^sub>0_;\n         xd = unit; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>false,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ c_ s\\<^sub>0_ e\\<^sub>3_ s\\<^sub>3_ s\\<^sub>1_ v\\<^sub>1_\n        s\\<^sub>2_.\n        \\<lbrakk>x = Pa_; xa = while (e_) c_; (xb, xc) = s\\<^sub>0_;\n         xd = e\\<^sub>3_; (xe, xf) = s\\<^sub>3_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>true,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>c_,s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v\\<^sub>1_,s\\<^sub>2_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>while (e_) c_,\n                           s\\<^sub>2_\\<rangle> \\<Rightarrow>\n                          \\<langle>e\\<^sub>3_,s\\<^sub>3_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ c_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = while (e_) c_; (xb, xc) = s\\<^sub>0_;\n         xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ c_ s\\<^sub>0_ e'_ s\\<^sub>2_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = while (e_) c_; (xb, xc) = s\\<^sub>0_;\n         xd = throw e'_; (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>true,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>c_,s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ s\\<^sub>0_ aa_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = throw e_; (xb, xc) = s\\<^sub>0_;\n         xd = Throw aa_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>addr aa_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ s\\<^sub>0_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = throw e_; (xb, xc) = s\\<^sub>0_;\n         xd = THROW NullPointer; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>null,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = throw e_; (xb, xc) = s\\<^sub>0_;\n         xd = throw e'_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>1_ Ca_ V_ e\\<^sub>2_ s\\<^sub>0_ v\\<^sub>1_\n        s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = try e\\<^sub>1_ catch(Ca_ V_) e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = Val v\\<^sub>1_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v\\<^sub>1_,\n                           s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>1_ Ca_ V_ e\\<^sub>2_ s\\<^sub>0_ e\\<^sub>2'_\n        h\\<^sub>2_ l\\<^sub>2_ l\\<^sub>1_ aa_ h\\<^sub>1_ D_ fs_.\n        \\<lbrakk>x = Pa_; xa = try e\\<^sub>1_ catch(Ca_ V_) e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = e\\<^sub>2'_;\n         (xe, xf) = (h\\<^sub>2_, l\\<^sub>2_(V_ := l\\<^sub>1_ V_));\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>Throw aa_,\n                           (h\\<^sub>1_, l\\<^sub>1_)\\<rangle>;\n         h\\<^sub>1_ aa_ = \\<lfloor>(D_, fs_)\\<rfloor>;\n         Pa_ \\<turnstile> D_ \\<preceq>\\<^sup>* Ca_;\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>2_,\n                           (h\\<^sub>1_, l\\<^sub>1_(V_ \\<mapsto>\n                            Addr aa_))\\<rangle> \\<Rightarrow>\n                          \\<langle>e\\<^sub>2'_,\n                           (h\\<^sub>2_, l\\<^sub>2_)\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e\\<^sub>1_ Ca_ V_ e\\<^sub>2_ s\\<^sub>0_ aa_ h\\<^sub>1_\n        l\\<^sub>1_ D_ fs_.\n        \\<lbrakk>x = Pa_; xa = try e\\<^sub>1_ catch(Ca_ V_) e\\<^sub>2_;\n         (xb, xc) = s\\<^sub>0_; xd = Throw aa_;\n         (xe, xf) = (h\\<^sub>1_, l\\<^sub>1_);\n         Pa_ \\<turnstile> \\<langle>e\\<^sub>1_,\n                           s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>Throw aa_,\n                           (h\\<^sub>1_, l\\<^sub>1_)\\<rangle>;\n         h\\<^sub>1_ aa_ = \\<lfloor>(D_, fs_)\\<rfloor>;\n         (D_, Ca_) \\<notin> (subcls1 Pa_)\\<^sup>*\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>x \\<turnstile> \\<langle>xa,(xb, xc)\\<rangle> [\\<Rightarrow>]\n                            \\<langle>xd,(xe, xf)\\<rangle>;\n     \\<And>P s.\n        \\<lbrakk>x = P; xa = []; (xb, xc) = s; xd = [];\n         (xe, xf) = s\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ es_ s\\<^sub>0_ v_ es'_ s\\<^sub>2_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e_ # es_; (xb, xc) = s\\<^sub>0_;\n         xd = Val v_ # es'_; (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v_,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>es_,s\\<^sub>1_\\<rangle> [\\<Rightarrow>]\n                          \\<langle>es'_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ es_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e_ # es_; (xb, xc) = s\\<^sub>0_;\n         xd = throw e'_ # es_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "from eval.prems"], ["proof (chain)\npicking this:\n  x \\<turnstile> \\<langle>xa,(xb, xc)\\<rangle> \\<Rightarrow>\n                 \\<langle>xd,(xe, xf)\\<rangle>", "show thesis"], ["proof (prove)\nusing this:\n  x \\<turnstile> \\<langle>xa,(xb, xc)\\<rangle> \\<Rightarrow>\n                 \\<langle>xd,(xe, xf)\\<rangle>\n\ngoal (1 subgoal):\n 1. thesis", "proof(cases (no_simp))"], ["proof (state)\ngoal (40 subgoals):\n 1. \\<And>h a C FDTs h' l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = addr a;\n        (xe, xf) = (h', l); new_Addr h = \\<lfloor>a\\<rfloor>;\n        x \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>h C l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = THROW OutOfMemory;\n        (xe, xf) = (h, l); new_Addr h = None\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = addr a;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        x \\<turnstile> D \\<preceq>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>e s\\<^sub>0 s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = null;\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>null,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = THROW ClassCast;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 x)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>e s\\<^sub>0 e' s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = throw e';\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e',s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 7. \\<And>v s.\n       \\<lbrakk>xa = Val v; (xb, xc) = s; xd = Val v; (xe, xf) = s\\<rbrakk>\n       \\<Longrightarrow> thesis\n 8. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 v\\<^sub>2\n       s\\<^sub>2 bop v.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = Val v; (xe, xf) = s\\<^sub>2;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n        x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>2,s\\<^sub>2\\<rangle>;\n        binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 9. \\<And>e\\<^sub>1 s\\<^sub>0 e s\\<^sub>1 bop e\\<^sub>2.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 10. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 e s\\<^sub>2\n        bop.\n        \\<lbrakk>xa =\n                 e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n         (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>2;\n         x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                        \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n         x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                        \\<langle>throw e,s\\<^sub>2\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis\nA total of 40 subgoals...", "case CallNull"], ["proof (state)\nthis:\n  xa = e_\\<bullet>M_(ps_)\n  (xb, xc) = s\\<^sub>0_\n  xd = THROW NullPointer\n  (xe, xf) = s\\<^sub>2_\n  x \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                 \\<langle>null,s\\<^sub>1_\\<rangle>\n  x \\<turnstile> \\<langle>ps_,s\\<^sub>1_\\<rangle> [\\<Rightarrow>]\n                 \\<langle>map Val vs_,s\\<^sub>2_\\<rangle>\n\ngoal (40 subgoals):\n 1. \\<And>h a C FDTs h' l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = addr a;\n        (xe, xf) = (h', l); new_Addr h = \\<lfloor>a\\<rfloor>;\n        x \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>h C l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = THROW OutOfMemory;\n        (xe, xf) = (h, l); new_Addr h = None\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = addr a;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        x \\<turnstile> D \\<preceq>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>e s\\<^sub>0 s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = null;\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>null,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = THROW ClassCast;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 x)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>e s\\<^sub>0 e' s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = throw e';\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e',s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 7. \\<And>v s.\n       \\<lbrakk>xa = Val v; (xb, xc) = s; xd = Val v; (xe, xf) = s\\<rbrakk>\n       \\<Longrightarrow> thesis\n 8. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 v\\<^sub>2\n       s\\<^sub>2 bop v.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = Val v; (xe, xf) = s\\<^sub>2;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n        x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>2,s\\<^sub>2\\<rangle>;\n        binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 9. \\<And>e\\<^sub>1 s\\<^sub>0 e s\\<^sub>1 bop e\\<^sub>2.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 10. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 e s\\<^sub>2\n        bop.\n        \\<lbrakk>xa =\n                 e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n         (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>2;\n         x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                        \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n         x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                        \\<langle>throw e,s\\<^sub>2\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis\nA total of 40 subgoals...", "thus ?thesis"], ["proof (prove)\nusing this:\n  xa = e_\\<bullet>M_(ps_)\n  (xb, xc) = s\\<^sub>0_\n  xd = THROW NullPointer\n  (xe, xf) = s\\<^sub>2_\n  x \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                 \\<langle>null,s\\<^sub>1_\\<rangle>\n  x \\<turnstile> \\<langle>ps_,s\\<^sub>1_\\<rangle> [\\<Rightarrow>]\n                 \\<langle>map Val vs_,s\\<^sub>2_\\<rangle>\n\ngoal (1 subgoal):\n 1. thesis", "by(rule eval.CallNull2[OF refl])(simp add: map_val_conv[symmetric])"], ["proof (state)\nthis:\n  thesis\n\ngoal (39 subgoals):\n 1. \\<And>h a C FDTs h' l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = addr a;\n        (xe, xf) = (h', l); new_Addr h = \\<lfloor>a\\<rfloor>;\n        x \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>h C l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = THROW OutOfMemory;\n        (xe, xf) = (h, l); new_Addr h = None\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = addr a;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        x \\<turnstile> D \\<preceq>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>e s\\<^sub>0 s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = null;\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>null,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = THROW ClassCast;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 x)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>e s\\<^sub>0 e' s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = throw e';\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e',s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 7. \\<And>v s.\n       \\<lbrakk>xa = Val v; (xb, xc) = s; xd = Val v; (xe, xf) = s\\<rbrakk>\n       \\<Longrightarrow> thesis\n 8. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 v\\<^sub>2\n       s\\<^sub>2 bop v.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = Val v; (xe, xf) = s\\<^sub>2;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n        x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>2,s\\<^sub>2\\<rangle>;\n        binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 9. \\<And>e\\<^sub>1 s\\<^sub>0 e s\\<^sub>1 bop e\\<^sub>2.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 10. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 e s\\<^sub>2\n        bop.\n        \\<lbrakk>xa =\n                 e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n         (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>2;\n         x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                        \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n         x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                        \\<langle>throw e,s\\<^sub>2\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis\nA total of 39 subgoals...", "next"], ["proof (state)\ngoal (39 subgoals):\n 1. \\<And>h a C FDTs h' l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = addr a;\n        (xe, xf) = (h', l); new_Addr h = \\<lfloor>a\\<rfloor>;\n        x \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>h C l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = THROW OutOfMemory;\n        (xe, xf) = (h, l); new_Addr h = None\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = addr a;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        x \\<turnstile> D \\<preceq>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>e s\\<^sub>0 s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = null;\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>null,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = THROW ClassCast;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 x)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>e s\\<^sub>0 e' s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = throw e';\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e',s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 7. \\<And>v s.\n       \\<lbrakk>xa = Val v; (xb, xc) = s; xd = Val v; (xe, xf) = s\\<rbrakk>\n       \\<Longrightarrow> thesis\n 8. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 v\\<^sub>2\n       s\\<^sub>2 bop v.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = Val v; (xe, xf) = s\\<^sub>2;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n        x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>2,s\\<^sub>2\\<rangle>;\n        binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 9. \\<And>e\\<^sub>1 s\\<^sub>0 e s\\<^sub>1 bop e\\<^sub>2.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 10. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 e s\\<^sub>2\n        bop.\n        \\<lbrakk>xa =\n                 e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n         (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>2;\n         x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                        \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n         x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                        \\<langle>throw e,s\\<^sub>2\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis\nA total of 39 subgoals...", "case CallParamsThrow"], ["proof (state)\nthis:\n  xa = e_\\<bullet>M_(es_)\n  (xb, xc) = s\\<^sub>0_\n  xd = throw ex_\n  (xe, xf) = s\\<^sub>2_\n  x \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                 \\<langle>Val v_,s\\<^sub>1_\\<rangle>\n  x \\<turnstile> \\<langle>es_,s\\<^sub>1_\\<rangle> [\\<Rightarrow>]\n                 \\<langle>map Val vs_ @ throw ex_ # es'_,s\\<^sub>2_\\<rangle>\n\ngoal (39 subgoals):\n 1. \\<And>h a C FDTs h' l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = addr a;\n        (xe, xf) = (h', l); new_Addr h = \\<lfloor>a\\<rfloor>;\n        x \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>h C l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = THROW OutOfMemory;\n        (xe, xf) = (h, l); new_Addr h = None\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = addr a;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        x \\<turnstile> D \\<preceq>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>e s\\<^sub>0 s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = null;\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>null,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = THROW ClassCast;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 x)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>e s\\<^sub>0 e' s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = throw e';\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e',s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 7. \\<And>v s.\n       \\<lbrakk>xa = Val v; (xb, xc) = s; xd = Val v; (xe, xf) = s\\<rbrakk>\n       \\<Longrightarrow> thesis\n 8. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 v\\<^sub>2\n       s\\<^sub>2 bop v.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = Val v; (xe, xf) = s\\<^sub>2;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n        x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>2,s\\<^sub>2\\<rangle>;\n        binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 9. \\<And>e\\<^sub>1 s\\<^sub>0 e s\\<^sub>1 bop e\\<^sub>2.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 10. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 e s\\<^sub>2\n        bop.\n        \\<lbrakk>xa =\n                 e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n         (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>2;\n         x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                        \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n         x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                        \\<langle>throw e,s\\<^sub>2\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis\nA total of 39 subgoals...", "thus ?thesis"], ["proof (prove)\nusing this:\n  xa = e_\\<bullet>M_(es_)\n  (xb, xc) = s\\<^sub>0_\n  xd = throw ex_\n  (xe, xf) = s\\<^sub>2_\n  x \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                 \\<langle>Val v_,s\\<^sub>1_\\<rangle>\n  x \\<turnstile> \\<langle>es_,s\\<^sub>1_\\<rangle> [\\<Rightarrow>]\n                 \\<langle>map Val vs_ @ throw ex_ # es'_,s\\<^sub>2_\\<rangle>\n\ngoal (1 subgoal):\n 1. thesis", "by(rule eval.CallParamsThrow2[OF refl])(simp add: map_val2_conv[symmetric])"], ["proof (state)\nthis:\n  thesis\n\ngoal (38 subgoals):\n 1. \\<And>h a C FDTs h' l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = addr a;\n        (xe, xf) = (h', l); new_Addr h = \\<lfloor>a\\<rfloor>;\n        x \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>h C l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = THROW OutOfMemory;\n        (xe, xf) = (h, l); new_Addr h = None\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = addr a;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        x \\<turnstile> D \\<preceq>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>e s\\<^sub>0 s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = null;\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>null,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = THROW ClassCast;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 x)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>e s\\<^sub>0 e' s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = throw e';\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e',s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 7. \\<And>v s.\n       \\<lbrakk>xa = Val v; (xb, xc) = s; xd = Val v; (xe, xf) = s\\<rbrakk>\n       \\<Longrightarrow> thesis\n 8. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 v\\<^sub>2\n       s\\<^sub>2 bop v.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = Val v; (xe, xf) = s\\<^sub>2;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n        x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>2,s\\<^sub>2\\<rangle>;\n        binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 9. \\<And>e\\<^sub>1 s\\<^sub>0 e s\\<^sub>1 bop e\\<^sub>2.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 10. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 e s\\<^sub>2\n        bop.\n        \\<lbrakk>xa =\n                 e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n         (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>2;\n         x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                        \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n         x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                        \\<langle>throw e,s\\<^sub>2\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis\nA total of 38 subgoals...", "next"], ["proof (state)\ngoal (38 subgoals):\n 1. \\<And>h a C FDTs h' l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = addr a;\n        (xe, xf) = (h', l); new_Addr h = \\<lfloor>a\\<rfloor>;\n        x \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>h C l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = THROW OutOfMemory;\n        (xe, xf) = (h, l); new_Addr h = None\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = addr a;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        x \\<turnstile> D \\<preceq>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>e s\\<^sub>0 s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = null;\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>null,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = THROW ClassCast;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 x)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>e s\\<^sub>0 e' s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = throw e';\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e',s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 7. \\<And>v s.\n       \\<lbrakk>xa = Val v; (xb, xc) = s; xd = Val v; (xe, xf) = s\\<rbrakk>\n       \\<Longrightarrow> thesis\n 8. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 v\\<^sub>2\n       s\\<^sub>2 bop v.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = Val v; (xe, xf) = s\\<^sub>2;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n        x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>2,s\\<^sub>2\\<rangle>;\n        binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 9. \\<And>e\\<^sub>1 s\\<^sub>0 e s\\<^sub>1 bop e\\<^sub>2.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 10. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 e s\\<^sub>2\n        bop.\n        \\<lbrakk>xa =\n                 e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n         (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>2;\n         x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                        \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n         x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                        \\<langle>throw e,s\\<^sub>2\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis\nA total of 38 subgoals...", "case Call"], ["proof (state)\nthis:\n  xa = e_\\<bullet>M_(ps_)\n  (xb, xc) = s\\<^sub>0_\n  xd = e'_\n  (xe, xf) = (h\\<^sub>3_, l\\<^sub>2_)\n  x \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                 \\<langle>addr a_,s\\<^sub>1_\\<rangle>\n  x \\<turnstile> \\<langle>ps_,s\\<^sub>1_\\<rangle> [\\<Rightarrow>]\n                 \\<langle>map Val vs_,(h\\<^sub>2_, l\\<^sub>2_)\\<rangle>\n  h\\<^sub>2_ a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  x \\<turnstile> C_ sees M_: Ts_\\<rightarrow>T_ = (pns_, body_) in D_\n  length vs_ = length pns_\n  l\\<^sub>2'_ = [this \\<mapsto> Addr a_, pns_ [\\<mapsto>] vs_]\n  x \\<turnstile> \\<langle>body_,\n                  (h\\<^sub>2_, l\\<^sub>2'_)\\<rangle> \\<Rightarrow>\n                 \\<langle>e'_,(h\\<^sub>3_, l\\<^sub>3_)\\<rangle>\n\ngoal (38 subgoals):\n 1. \\<And>h a C FDTs h' l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = addr a;\n        (xe, xf) = (h', l); new_Addr h = \\<lfloor>a\\<rfloor>;\n        x \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>h C l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = THROW OutOfMemory;\n        (xe, xf) = (h, l); new_Addr h = None\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = addr a;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        x \\<turnstile> D \\<preceq>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>e s\\<^sub>0 s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = null;\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>null,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = THROW ClassCast;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 x)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>e s\\<^sub>0 e' s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = throw e';\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e',s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 7. \\<And>v s.\n       \\<lbrakk>xa = Val v; (xb, xc) = s; xd = Val v; (xe, xf) = s\\<rbrakk>\n       \\<Longrightarrow> thesis\n 8. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 v\\<^sub>2\n       s\\<^sub>2 bop v.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = Val v; (xe, xf) = s\\<^sub>2;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n        x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>2,s\\<^sub>2\\<rangle>;\n        binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 9. \\<And>e\\<^sub>1 s\\<^sub>0 e s\\<^sub>1 bop e\\<^sub>2.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 10. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 e s\\<^sub>2\n        bop.\n        \\<lbrakk>xa =\n                 e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n         (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>2;\n         x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                        \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n         x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                        \\<langle>throw e,s\\<^sub>2\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis\nA total of 38 subgoals...", "thus ?thesis"], ["proof (prove)\nusing this:\n  xa = e_\\<bullet>M_(ps_)\n  (xb, xc) = s\\<^sub>0_\n  xd = e'_\n  (xe, xf) = (h\\<^sub>3_, l\\<^sub>2_)\n  x \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                 \\<langle>addr a_,s\\<^sub>1_\\<rangle>\n  x \\<turnstile> \\<langle>ps_,s\\<^sub>1_\\<rangle> [\\<Rightarrow>]\n                 \\<langle>map Val vs_,(h\\<^sub>2_, l\\<^sub>2_)\\<rangle>\n  h\\<^sub>2_ a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  x \\<turnstile> C_ sees M_: Ts_\\<rightarrow>T_ = (pns_, body_) in D_\n  length vs_ = length pns_\n  l\\<^sub>2'_ = [this \\<mapsto> Addr a_, pns_ [\\<mapsto>] vs_]\n  x \\<turnstile> \\<langle>body_,\n                  (h\\<^sub>2_, l\\<^sub>2'_)\\<rangle> \\<Rightarrow>\n                 \\<langle>e'_,(h\\<^sub>3_, l\\<^sub>3_)\\<rangle>\n\ngoal (1 subgoal):\n 1. thesis", "by -(rule eval.Call2[OF refl], simp_all add: map_val_conv[symmetric])"], ["proof (state)\nthis:\n  thesis\n\ngoal (37 subgoals):\n 1. \\<And>h a C FDTs h' l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = addr a;\n        (xe, xf) = (h', l); new_Addr h = \\<lfloor>a\\<rfloor>;\n        x \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>h C l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = THROW OutOfMemory;\n        (xe, xf) = (h, l); new_Addr h = None\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = addr a;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        x \\<turnstile> D \\<preceq>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>e s\\<^sub>0 s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = null;\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>null,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = THROW ClassCast;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 x)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>e s\\<^sub>0 e' s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = throw e';\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e',s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 7. \\<And>v s.\n       \\<lbrakk>xa = Val v; (xb, xc) = s; xd = Val v; (xe, xf) = s\\<rbrakk>\n       \\<Longrightarrow> thesis\n 8. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 v\\<^sub>2\n       s\\<^sub>2 bop v.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = Val v; (xe, xf) = s\\<^sub>2;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n        x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>2,s\\<^sub>2\\<rangle>;\n        binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 9. \\<And>e\\<^sub>1 s\\<^sub>0 e s\\<^sub>1 bop e\\<^sub>2.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 10. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 e s\\<^sub>2\n        bop.\n        \\<lbrakk>xa =\n                 e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n         (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>2;\n         x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                        \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n         x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                        \\<langle>throw e,s\\<^sub>2\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis\nA total of 37 subgoals...", "next"], ["proof (state)\ngoal (37 subgoals):\n 1. \\<And>h a C FDTs h' l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = addr a;\n        (xe, xf) = (h', l); new_Addr h = \\<lfloor>a\\<rfloor>;\n        x \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>h C l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = THROW OutOfMemory;\n        (xe, xf) = (h, l); new_Addr h = None\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = addr a;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        x \\<turnstile> D \\<preceq>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>e s\\<^sub>0 s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = null;\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>null,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = THROW ClassCast;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 x)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>e s\\<^sub>0 e' s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = throw e';\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e',s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 7. \\<And>v s.\n       \\<lbrakk>xa = Val v; (xb, xc) = s; xd = Val v; (xe, xf) = s\\<rbrakk>\n       \\<Longrightarrow> thesis\n 8. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 v\\<^sub>2\n       s\\<^sub>2 bop v.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = Val v; (xe, xf) = s\\<^sub>2;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n        x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>2,s\\<^sub>2\\<rangle>;\n        binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 9. \\<And>e\\<^sub>1 s\\<^sub>0 e s\\<^sub>1 bop e\\<^sub>2.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 10. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 e s\\<^sub>2\n        bop.\n        \\<lbrakk>xa =\n                 e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n         (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>2;\n         x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                        \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n         x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                        \\<langle>throw e,s\\<^sub>2\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis\nA total of 37 subgoals...", "case WhileBodyThrow"], ["proof (state)\nthis:\n  xa = while (e_) c_\n  (xb, xc) = s\\<^sub>0_\n  xd = throw e'_\n  (xe, xf) = s\\<^sub>2_\n  x \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                 \\<langle>true,s\\<^sub>1_\\<rangle>\n  x \\<turnstile> \\<langle>c_,s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                 \\<langle>throw e'_,s\\<^sub>2_\\<rangle>\n\ngoal (37 subgoals):\n 1. \\<And>h a C FDTs h' l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = addr a;\n        (xe, xf) = (h', l); new_Addr h = \\<lfloor>a\\<rfloor>;\n        x \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>h C l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = THROW OutOfMemory;\n        (xe, xf) = (h, l); new_Addr h = None\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = addr a;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        x \\<turnstile> D \\<preceq>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>e s\\<^sub>0 s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = null;\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>null,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = THROW ClassCast;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 x)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>e s\\<^sub>0 e' s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = throw e';\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e',s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 7. \\<And>v s.\n       \\<lbrakk>xa = Val v; (xb, xc) = s; xd = Val v; (xe, xf) = s\\<rbrakk>\n       \\<Longrightarrow> thesis\n 8. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 v\\<^sub>2\n       s\\<^sub>2 bop v.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = Val v; (xe, xf) = s\\<^sub>2;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n        x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>2,s\\<^sub>2\\<rangle>;\n        binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 9. \\<And>e\\<^sub>1 s\\<^sub>0 e s\\<^sub>1 bop e\\<^sub>2.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 10. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 e s\\<^sub>2\n        bop.\n        \\<lbrakk>xa =\n                 e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n         (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>2;\n         x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                        \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n         x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                        \\<langle>throw e,s\\<^sub>2\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis\nA total of 37 subgoals...", "thus ?thesis"], ["proof (prove)\nusing this:\n  xa = while (e_) c_\n  (xb, xc) = s\\<^sub>0_\n  xd = throw e'_\n  (xe, xf) = s\\<^sub>2_\n  x \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                 \\<langle>true,s\\<^sub>1_\\<rangle>\n  x \\<turnstile> \\<langle>c_,s\\<^sub>1_\\<rangle> \\<Rightarrow>\n                 \\<langle>throw e'_,s\\<^sub>2_\\<rangle>\n\ngoal (1 subgoal):\n 1. thesis", "by(rule eval.WhileBodyThrow2[OF refl])"], ["proof (state)\nthis:\n  thesis\n\ngoal (36 subgoals):\n 1. \\<And>h a C FDTs h' l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = addr a;\n        (xe, xf) = (h', l); new_Addr h = \\<lfloor>a\\<rfloor>;\n        x \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> (C, init_fields FDTs))\\<rbrakk>\n       \\<Longrightarrow> thesis\n 2. \\<And>h C l.\n       \\<lbrakk>xa = new C; (xb, xc) = (h, l); xd = THROW OutOfMemory;\n        (xe, xf) = (h, l); new_Addr h = None\\<rbrakk>\n       \\<Longrightarrow> thesis\n 3. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = addr a;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        x \\<turnstile> D \\<preceq>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> thesis\n 4. \\<And>e s\\<^sub>0 s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = null;\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>null,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 5. \\<And>e s\\<^sub>0 a h l D fs C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = THROW ClassCast;\n        (xe, xf) = (h, l);\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>addr a,(h, l)\\<rangle>;\n        h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 x)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> thesis\n 6. \\<And>e s\\<^sub>0 e' s\\<^sub>1 C.\n       \\<lbrakk>xa = Cast C e; (xb, xc) = s\\<^sub>0; xd = throw e';\n        (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e',s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 7. \\<And>v s.\n       \\<lbrakk>xa = Val v; (xb, xc) = s; xd = Val v; (xe, xf) = s\\<rbrakk>\n       \\<Longrightarrow> thesis\n 8. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 v\\<^sub>2\n       s\\<^sub>2 bop v.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = Val v; (xe, xf) = s\\<^sub>2;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n        x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                       \\<langle>Val v\\<^sub>2,s\\<^sub>2\\<rangle>;\n        binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 9. \\<And>e\\<^sub>1 s\\<^sub>0 e s\\<^sub>1 bop e\\<^sub>2.\n       \\<lbrakk>xa =\n                e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n        (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>1;\n        x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                       \\<langle>throw e,s\\<^sub>1\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> thesis\n 10. \\<And>e\\<^sub>1 s\\<^sub>0 v\\<^sub>1 s\\<^sub>1 e\\<^sub>2 e s\\<^sub>2\n        bop.\n        \\<lbrakk>xa =\n                 e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2;\n         (xb, xc) = s\\<^sub>0; xd = throw e; (xe, xf) = s\\<^sub>2;\n         x \\<turnstile> \\<langle>e\\<^sub>1,s\\<^sub>0\\<rangle> \\<Rightarrow>\n                        \\<langle>Val v\\<^sub>1,s\\<^sub>1\\<rangle>;\n         x \\<turnstile> \\<langle>e\\<^sub>2,s\\<^sub>1\\<rangle> \\<Rightarrow>\n                        \\<langle>throw e,s\\<^sub>2\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis\nA total of 36 subgoals...", "qed(assumption|erule (4) eval.that[OF refl]|erule (3) eval.that[OF refl])+"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<turnstile> \\<langle>xa,(xb, xc)\\<rangle> [\\<Rightarrow>]\n                            \\<langle>xd,(xe, xf)\\<rangle>;\n     \\<And>P s.\n        \\<lbrakk>x = P; xa = []; (xb, xc) = s; xd = [];\n         (xe, xf) = s\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ es_ s\\<^sub>0_ v_ es'_ s\\<^sub>2_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e_ # es_; (xb, xc) = s\\<^sub>0_;\n         xd = Val v_ # es'_; (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v_,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>es_,s\\<^sub>1_\\<rangle> [\\<Rightarrow>]\n                          \\<langle>es'_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ es_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e_ # es_; (xb, xc) = s\\<^sub>0_;\n         xd = throw e'_ # es_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<turnstile> \\<langle>xa,(xb, xc)\\<rangle> [\\<Rightarrow>]\n                            \\<langle>xd,(xe, xf)\\<rangle>;\n     \\<And>P s.\n        \\<lbrakk>x = P; xa = []; (xb, xc) = s; xd = [];\n         (xe, xf) = s\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ es_ s\\<^sub>0_ v_ es'_ s\\<^sub>2_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e_ # es_; (xb, xc) = s\\<^sub>0_;\n         xd = Val v_ # es'_; (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v_,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>es_,s\\<^sub>1_\\<rangle> [\\<Rightarrow>]\n                          \\<langle>es'_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ es_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e_ # es_; (xb, xc) = s\\<^sub>0_;\n         xd = throw e'_ # es_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "case evals"], ["proof (state)\nthis:\n  \\<lbrakk>x = ?P; xa = []; (xb, xc) = ?s; xd = []; (xe, xf) = ?s\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = ?e # ?es; (xb, xc) = ?s\\<^sub>0;\n   xd = Val ?v # ?es'; (xe, xf) = ?s\\<^sub>2;\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>Val ?v,?s\\<^sub>1\\<rangle>;\n   ?Pa \\<turnstile> \\<langle>?es,?s\\<^sub>1\\<rangle> [\\<Rightarrow>]\n                    \\<langle>?es',?s\\<^sub>2\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  \\<lbrakk>x = ?Pa; xa = ?e # ?es; (xb, xc) = ?s\\<^sub>0;\n   xd = throw ?e' # ?es; (xe, xf) = ?s\\<^sub>1;\n   ?Pa \\<turnstile> \\<langle>?e,?s\\<^sub>0\\<rangle> \\<Rightarrow>\n                    \\<langle>throw ?e',?s\\<^sub>1\\<rangle>\\<rbrakk>\n  \\<Longrightarrow> thesis\n  x \\<turnstile> \\<langle>xa,(xb, xc)\\<rangle> [\\<Rightarrow>]\n                 \\<langle>xd,(xe, xf)\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<turnstile> \\<langle>xa,(xb, xc)\\<rangle> [\\<Rightarrow>]\n                            \\<langle>xd,(xe, xf)\\<rangle>;\n     \\<And>P s.\n        \\<lbrakk>x = P; xa = []; (xb, xc) = s; xd = [];\n         (xe, xf) = s\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ es_ s\\<^sub>0_ v_ es'_ s\\<^sub>2_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e_ # es_; (xb, xc) = s\\<^sub>0_;\n         xd = Val v_ # es'_; (xe, xf) = s\\<^sub>2_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>Val v_,s\\<^sub>1_\\<rangle>;\n         Pa_ \\<turnstile> \\<langle>es_,s\\<^sub>1_\\<rangle> [\\<Rightarrow>]\n                          \\<langle>es'_,s\\<^sub>2_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis;\n     \\<And>Pa_ e_ es_ s\\<^sub>0_ e'_ s\\<^sub>1_.\n        \\<lbrakk>x = Pa_; xa = e_ # es_; (xb, xc) = s\\<^sub>0_;\n         xd = throw e'_ # es_; (xe, xf) = s\\<^sub>1_;\n         Pa_ \\<turnstile> \\<langle>e_,s\\<^sub>0_\\<rangle> \\<Rightarrow>\n                          \\<langle>throw e'_,s\\<^sub>1_\\<rangle>\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "from evals.prems"], ["proof (chain)\npicking this:\n  x \\<turnstile> \\<langle>xa,(xb, xc)\\<rangle> [\\<Rightarrow>]\n                 \\<langle>xd,(xe, xf)\\<rangle>", "show thesis"], ["proof (prove)\nusing this:\n  x \\<turnstile> \\<langle>xa,(xb, xc)\\<rangle> [\\<Rightarrow>]\n                 \\<langle>xd,(xe, xf)\\<rangle>\n\ngoal (1 subgoal):\n 1. thesis", "by(cases (no_simp))(assumption|erule (3) evals.that[OF refl])+"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "notation execute (\"_ \\<turnstile> ((1\\<langle>_,/_\\<rangle>) \\<Rightarrow>/ \\<langle>'_, '_\\<rangle>)\" [51,0,0] 81)"], ["", "definition \"test1 = [] \\<turnstile> \\<langle>testExpr1,(Map.empty,Map.empty)\\<rangle> \\<Rightarrow> \\<langle>_,_\\<rangle>\""], ["", "definition \"test2 = [] \\<turnstile> \\<langle>testExpr2,(Map.empty,Map.empty)\\<rangle> \\<Rightarrow> \\<langle>_,_\\<rangle>\""], ["", "definition \"test3 = [] \\<turnstile> \\<langle>testExpr3,(Map.empty,Map.empty(''V''\\<mapsto>Intg 77))\\<rangle> \\<Rightarrow> \\<langle>_,_\\<rangle>\""], ["", "definition \"test4 = [] \\<turnstile> \\<langle>testExpr4,(Map.empty,Map.empty)\\<rangle> \\<Rightarrow> \\<langle>_,_\\<rangle>\""], ["", "definition \"test5 = [(''Object'',('''',[],[])),(''C'',(''Object'',[(''F'',Integer)],[]))] \\<turnstile> \\<langle>testExpr5,(Map.empty,Map.empty)\\<rangle> \\<Rightarrow> \\<langle>_,_\\<rangle>\""], ["", "definition \"test6 = [(''Object'',('''',[],[])), classI] \\<turnstile> \\<langle>testExpr6,(Map.empty,Map.empty)\\<rangle> \\<Rightarrow> \\<langle>_,_\\<rangle>\""], ["", "definition \"V = ''V''\""], ["", "definition \"C = ''C''\""], ["", "definition \"F = ''F''\""], ["", "ML_val \\<open>\n  val SOME ((@{code Val} (@{code Intg} (@{code int_of_integer} 5)), _), _) = Predicate.yield @{code test1};\n  val SOME ((@{code Val} (@{code Intg} (@{code int_of_integer} 11)), _), _) = Predicate.yield @{code test2};\n  val SOME ((@{code Val} (@{code Intg} (@{code int_of_integer} 83)), _), _) = Predicate.yield @{code test3};\n\n  val SOME ((_, (_, l)), _) = Predicate.yield @{code test4};\n  val SOME (@{code Intg} (@{code int_of_integer} 6)) = l @{code V};\n\n  val SOME ((_, (h, _)), _) = Predicate.yield @{code test5};\n  val SOME (c, fs) = h (@{code nat_of_integer} 1);\n  val SOME (obj, _) = h (@{code nat_of_integer} 0);\n  val SOME (@{code Intg} i) = fs (@{code F}, @{code C});\n  @{assert} (c = @{code C} andalso obj = @{code Object} andalso i = @{code int_of_integer} 42);\n\n  val SOME ((@{code Val} (@{code Intg} (@{code int_of_integer} 160)), _), _) = Predicate.yield @{code test6};\n\\<close>"], ["", "definition \"test7 = [classObject, classL] \\<turnstile> \\<langle>testExpr_BuildList, (Map.empty,Map.empty)\\<rangle> \\<Rightarrow> \\<langle>_,_\\<rangle>\""], ["", "definition \"L = ''L''\""], ["", "definition \"N = ''N''\""], ["", "ML_val \\<open>\n  val SOME ((_, (h, _)), _) = Predicate.yield @{code test7};\n  val SOME (_, fs1) = h (@{code nat_of_integer} 0);\n  val SOME (_, fs2) = h (@{code nat_of_integer} 1);\n  val SOME (_, fs3) = h (@{code nat_of_integer} 2);\n  val SOME (_, fs4) = h (@{code nat_of_integer} 3);\n\n  val F = @{code \"F\"};\n  val L = @{code \"L\"};\n  val N = @{code \"N\"};\n\n  @{assert} (fs1 (F, L) = SOME (@{code Intg} (@{code int_of_integer} 1)) andalso\n     fs1 (N, L) = SOME (@{code Addr} (@{code nat_of_integer} 1)) andalso\n     fs2 (F, L) = SOME (@{code Intg} (@{code int_of_integer} 2)) andalso\n     fs2 (N, L) = SOME (@{code Addr} (@{code nat_of_integer} 2)) andalso\n     fs3 (F, L) = SOME (@{code Intg} (@{code int_of_integer} 3)) andalso\n     fs3 (N, L) = SOME (@{code Addr} (@{code nat_of_integer} 3)) andalso\n     fs4 (F, L) = SOME (@{code Intg} (@{code int_of_integer} 4)) andalso\n     fs4 (N, L) = SOME @{code Null});\n\\<close>"], ["", "definition \"test8 = [classObject, classA] \\<turnstile> \\<langle>testExpr_ClassA, (Map.empty,Map.empty)\\<rangle> \\<Rightarrow> \\<langle>_,_\\<rangle>\""], ["", "definition \"i = ''int''\""], ["", "definition \"t = ''test''\""], ["", "definition \"A = ''A''\""], ["", "ML_val \\<open>\n  val SOME ((_, (h, l)), _) = Predicate.yield @{code test8};\n  val SOME (_, fs1) = h (@{code nat_of_integer} 0);\n  val SOME (_, fs2) = h (@{code nat_of_integer} 1);\n\n  val i = @{code \"i\"};\n  val t = @{code \"t\"};\n  val A = @{code \"A\"};\n\n  @{assert} (fs1 (i, A) = SOME (@{code Intg} (@{code int_of_integer} 10)) andalso \n     fs1 (t, A) = SOME @{code Null} andalso\n     fs2 (i, A) = SOME (@{code Intg} (@{code int_of_integer} 50)) andalso \n     fs2 (t, A) = SOME @{code Null});\n\\<close>"], ["", "end"]]}