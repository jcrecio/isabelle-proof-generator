{"file_name": "/home/qj213/afp-2021-10-22/thys/Jinja/Compiler/J1WellForm.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Jinja", "problem_names": ["lemmas WT\\<^sub>1_WTs\\<^sub>1_induct = WT\\<^sub>1_WTs\\<^sub>1.induct [split_format (complete)]\n  and WT\\<^sub>1_WTs\\<^sub>1_inducts = WT\\<^sub>1_WTs\\<^sub>1.inducts [split_format (complete)]", "lemma WTs\\<^sub>1_same_size: \"\\<And>Ts. P,E \\<turnstile>\\<^sub>1 es [::] Ts \\<Longrightarrow> size es = size Ts\"", "lemma WT\\<^sub>1_unique:\n  \"P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>1 \\<Longrightarrow> (\\<And>T\\<^sub>2. P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow> T\\<^sub>1 = T\\<^sub>2)\" and\n  \"P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>1 \\<Longrightarrow> (\\<And>Ts\\<^sub>2. P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow> Ts\\<^sub>1 = Ts\\<^sub>2)\"", "lemma assumes wf: \"wf_prog p P\"\nshows WT\\<^sub>1_is_type: \"P,E \\<turnstile>\\<^sub>1 e :: T \\<Longrightarrow> set E \\<subseteq> types P \\<Longrightarrow> is_type P T\"\nand \"P,E \\<turnstile>\\<^sub>1 es [::] Ts \\<Longrightarrow> True\"", "lemma wf_J\\<^sub>1_mdecl[simp]:\n  \"wf_J\\<^sub>1_mdecl P C (M,Ts,T,body) \\<equiv>\n    ((\\<exists>T'. P,Class C#Ts \\<turnstile>\\<^sub>1 body :: T' \\<and> P \\<turnstile> T' \\<le> T) \\<and>\n     \\<D> body \\<lfloor>{..size Ts}\\<rfloor> \\<and> \\<B> body (size Ts + 1))\""], "translations": [["", "lemmas WT\\<^sub>1_WTs\\<^sub>1_induct = WT\\<^sub>1_WTs\\<^sub>1.induct [split_format (complete)]\n  and WT\\<^sub>1_WTs\\<^sub>1_inducts = WT\\<^sub>1_WTs\\<^sub>1.inducts [split_format (complete)]"], ["", "inductive_cases eee[elim!]:\n  \"P,E \\<turnstile>\\<^sub>1 Val v :: T\"\n  \"P,E \\<turnstile>\\<^sub>1 Var i :: T\"\n  \"P,E \\<turnstile>\\<^sub>1 Cast D e :: T\"\n  \"P,E \\<turnstile>\\<^sub>1 i:=e :: T\"\n  \"P,E \\<turnstile>\\<^sub>1 {i:U; e} :: T\"\n  \"P,E \\<turnstile>\\<^sub>1 e\\<^sub>1;;e\\<^sub>2 :: T\"\n  \"P,E \\<turnstile>\\<^sub>1 if (e) e\\<^sub>1 else e\\<^sub>2 :: T\"\n  \"P,E \\<turnstile>\\<^sub>1 while (e) c :: T\"\n  \"P,E \\<turnstile>\\<^sub>1 throw e :: T\"\n  \"P,E \\<turnstile>\\<^sub>1 try e\\<^sub>1 catch(C i) e\\<^sub>2 :: T\"\n  \"P,E \\<turnstile>\\<^sub>1 e\\<bullet>F{D} :: T\"\n  \"P,E \\<turnstile>\\<^sub>1 e\\<^sub>1\\<bullet>F{D}:=e\\<^sub>2 :: T\"\n  \"P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :: T\"\n  \"P,E \\<turnstile>\\<^sub>1 new C :: T\"\n  \"P,E \\<turnstile>\\<^sub>1 e\\<bullet>M(es) :: T\"\n  \"P,E \\<turnstile>\\<^sub>1 [] [::] Ts\"\n  \"P,E \\<turnstile>\\<^sub>1 e#es [::] Ts\""], ["", "(*>*)"], ["", "lemma WTs\\<^sub>1_same_size: \"\\<And>Ts. P,E \\<turnstile>\\<^sub>1 es [::] Ts \\<Longrightarrow> size es = size Ts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       P,E \\<turnstile>\\<^sub>1 es [::] Ts \\<Longrightarrow>\n       length es = length Ts", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       P,E \\<turnstile>\\<^sub>1 es [::] Ts \\<Longrightarrow>\n       length es = length Ts", "by (induct es type:list) auto"], ["", "(*>*)"], ["", "lemma WT\\<^sub>1_unique:\n  \"P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>1 \\<Longrightarrow> (\\<And>T\\<^sub>2. P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow> T\\<^sub>1 = T\\<^sub>2)\" and\n  \"P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>1 \\<Longrightarrow> (\\<And>Ts\\<^sub>2. P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow> Ts\\<^sub>1 = Ts\\<^sub>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>1 \\<Longrightarrow>\n     (\\<And>T\\<^sub>2.\n         P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n         T\\<^sub>1 = T\\<^sub>2)) &&&\n    (P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>1 \\<Longrightarrow>\n     (\\<And>Ts\\<^sub>2.\n         P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n         Ts\\<^sub>1 = Ts\\<^sub>2))", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>1 \\<Longrightarrow>\n     (\\<And>T\\<^sub>2.\n         P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n         T\\<^sub>1 = T\\<^sub>2)) &&&\n    (P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>1 \\<Longrightarrow>\n     (\\<And>Ts\\<^sub>2.\n         P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n         Ts\\<^sub>1 = Ts\\<^sub>2))", "apply(induct rule:WT\\<^sub>1_WTs\\<^sub>1.inducts)"], ["proof (prove)\ngoal (17 subgoals):\n 1. \\<And>C E T\\<^sub>2.\n       \\<lbrakk>is_class P C;\n        P,E \\<turnstile>\\<^sub>1 new C :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Class C = T\\<^sub>2\n 2. \\<And>E e D C T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class D;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class D = T\\<^sub>2;\n        is_class P C;\n        P \\<turnstile> C \\<preceq>\\<^sup>* D \\<or>\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile>\\<^sub>1 Cast C e :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Class C = T\\<^sub>2\n 3. \\<And>v T E T\\<^sub>2.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>;\n        P,E \\<turnstile>\\<^sub>1 Val v :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 4. \\<And>E i T T\\<^sub>2.\n       \\<lbrakk>E ! i = T; i < length E;\n        P,E \\<turnstile>\\<^sub>1 Var i :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 5. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 bop T T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        case bop of\n        Eq \\<Rightarrow>\n          (P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n           P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1) \\<and>\n          T = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1 = Integer \\<and>\n            T\\<^sub>2 = Integer \\<and> T = Integer;\n        P,E \\<turnstile>\\<^sub>1\n        e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2'\n 6. \\<And>E i T e T' T\\<^sub>2.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>\\<^sub>1 e :: T';\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>\\<^sub>1 i:=e :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 7. \\<And>E e C F T D T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<bullet>F{D} :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 8. \\<And>E e\\<^sub>1 C F T D e\\<^sub>2 T' T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T';\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>\\<^sub>1\n        e\\<^sub>1\\<bullet>F{D} := e\\<^sub>2 :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 9. \\<And>E e C M Ts' T m D es Ts T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees M: Ts'\\<rightarrow>T = m in D;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts;\n        \\<And>Ts\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n           Ts = Ts\\<^sub>2;\n        P \\<turnstile> Ts [\\<le>] Ts';\n        P,E \\<turnstile>\\<^sub>1 e\\<bullet>M(es) :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 10. \\<And>T E e T' i T\\<^sub>2.\n        \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>\\<^sub>1 e :: T';\n         \\<And>T\\<^sub>2.\n            P,E @ [T] \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n            T' = T\\<^sub>2;\n         P,E \\<turnstile>\\<^sub>1 {i:T; e} :: T\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> T' = T\\<^sub>2\nA total of 17 subgoals...", "apply blast"], ["proof (prove)\ngoal (16 subgoals):\n 1. \\<And>E e D C T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class D;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class D = T\\<^sub>2;\n        is_class P C;\n        P \\<turnstile> C \\<preceq>\\<^sup>* D \\<or>\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile>\\<^sub>1 Cast C e :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Class C = T\\<^sub>2\n 2. \\<And>v T E T\\<^sub>2.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>;\n        P,E \\<turnstile>\\<^sub>1 Val v :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 3. \\<And>E i T T\\<^sub>2.\n       \\<lbrakk>E ! i = T; i < length E;\n        P,E \\<turnstile>\\<^sub>1 Var i :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 4. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 bop T T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        case bop of\n        Eq \\<Rightarrow>\n          (P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n           P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1) \\<and>\n          T = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1 = Integer \\<and>\n            T\\<^sub>2 = Integer \\<and> T = Integer;\n        P,E \\<turnstile>\\<^sub>1\n        e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2'\n 5. \\<And>E i T e T' T\\<^sub>2.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>\\<^sub>1 e :: T';\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>\\<^sub>1 i:=e :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 6. \\<And>E e C F T D T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<bullet>F{D} :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 7. \\<And>E e\\<^sub>1 C F T D e\\<^sub>2 T' T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T';\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>\\<^sub>1\n        e\\<^sub>1\\<bullet>F{D} := e\\<^sub>2 :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 8. \\<And>E e C M Ts' T m D es Ts T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees M: Ts'\\<rightarrow>T = m in D;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts;\n        \\<And>Ts\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n           Ts = Ts\\<^sub>2;\n        P \\<turnstile> Ts [\\<le>] Ts';\n        P,E \\<turnstile>\\<^sub>1 e\\<bullet>M(es) :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 9. \\<And>T E e T' i T\\<^sub>2.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>\\<^sub>1 e :: T';\n        \\<And>T\\<^sub>2.\n           P,E @ [T] \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 {i:T; e} :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T' = T\\<^sub>2\n 10. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T\\<^sub>2'.\n        \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n         \\<And>T\\<^sub>2.\n            P,E \\<turnstile>\\<^sub>1\n            e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n            T\\<^sub>1 = T\\<^sub>2;\n         P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n         \\<And>T\\<^sub>2'.\n            P,E \\<turnstile>\\<^sub>1\n            e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n            T\\<^sub>2 = T\\<^sub>2';\n         P,E \\<turnstile>\\<^sub>1 e\\<^sub>1;;\n         e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n        \\<Longrightarrow> T\\<^sub>2 = T\\<^sub>2'\nA total of 16 subgoals...", "apply blast"], ["proof (prove)\ngoal (15 subgoals):\n 1. \\<And>v T E T\\<^sub>2.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>;\n        P,E \\<turnstile>\\<^sub>1 Val v :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 2. \\<And>E i T T\\<^sub>2.\n       \\<lbrakk>E ! i = T; i < length E;\n        P,E \\<turnstile>\\<^sub>1 Var i :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 3. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 bop T T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        case bop of\n        Eq \\<Rightarrow>\n          (P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n           P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1) \\<and>\n          T = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1 = Integer \\<and>\n            T\\<^sub>2 = Integer \\<and> T = Integer;\n        P,E \\<turnstile>\\<^sub>1\n        e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2'\n 4. \\<And>E i T e T' T\\<^sub>2.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>\\<^sub>1 e :: T';\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>\\<^sub>1 i:=e :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 5. \\<And>E e C F T D T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<bullet>F{D} :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 6. \\<And>E e\\<^sub>1 C F T D e\\<^sub>2 T' T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T';\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>\\<^sub>1\n        e\\<^sub>1\\<bullet>F{D} := e\\<^sub>2 :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 7. \\<And>E e C M Ts' T m D es Ts T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees M: Ts'\\<rightarrow>T = m in D;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts;\n        \\<And>Ts\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n           Ts = Ts\\<^sub>2;\n        P \\<turnstile> Ts [\\<le>] Ts';\n        P,E \\<turnstile>\\<^sub>1 e\\<bullet>M(es) :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 8. \\<And>T E e T' i T\\<^sub>2.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>\\<^sub>1 e :: T';\n        \\<And>T\\<^sub>2.\n           P,E @ [T] \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 {i:T; e} :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T' = T\\<^sub>2\n 9. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1;;\n        e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T\\<^sub>2 = T\\<^sub>2'\n 10. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T\\<^sub>2'.\n        \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n         \\<And>T\\<^sub>2.\n            P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n            Boolean = T\\<^sub>2;\n         P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n         \\<And>T\\<^sub>2.\n            P,E \\<turnstile>\\<^sub>1\n            e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n            T\\<^sub>1 = T\\<^sub>2;\n         P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n         \\<And>T\\<^sub>2'.\n            P,E \\<turnstile>\\<^sub>1\n            e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n            T\\<^sub>2 = T\\<^sub>2';\n         P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n         P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1;\n         P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<longrightarrow>\n         T = T\\<^sub>2;\n         P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1 \\<longrightarrow>\n         T = T\\<^sub>1;\n         P,E \\<turnstile>\\<^sub>1 if (e) e\\<^sub>1\n         else e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n        \\<Longrightarrow> T = T\\<^sub>2'\nA total of 15 subgoals...", "apply clarsimp"], ["proof (prove)\ngoal (14 subgoals):\n 1. \\<And>E i T T\\<^sub>2.\n       \\<lbrakk>E ! i = T; i < length E;\n        P,E \\<turnstile>\\<^sub>1 Var i :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 2. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 bop T T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        case bop of\n        Eq \\<Rightarrow>\n          (P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n           P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1) \\<and>\n          T = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1 = Integer \\<and>\n            T\\<^sub>2 = Integer \\<and> T = Integer;\n        P,E \\<turnstile>\\<^sub>1\n        e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2'\n 3. \\<And>E i T e T' T\\<^sub>2.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>\\<^sub>1 e :: T';\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>\\<^sub>1 i:=e :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 4. \\<And>E e C F T D T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<bullet>F{D} :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 5. \\<And>E e\\<^sub>1 C F T D e\\<^sub>2 T' T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T';\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>\\<^sub>1\n        e\\<^sub>1\\<bullet>F{D} := e\\<^sub>2 :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 6. \\<And>E e C M Ts' T m D es Ts T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees M: Ts'\\<rightarrow>T = m in D;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts;\n        \\<And>Ts\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n           Ts = Ts\\<^sub>2;\n        P \\<turnstile> Ts [\\<le>] Ts';\n        P,E \\<turnstile>\\<^sub>1 e\\<bullet>M(es) :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 7. \\<And>T E e T' i T\\<^sub>2.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>\\<^sub>1 e :: T';\n        \\<And>T\\<^sub>2.\n           P,E @ [T] \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 {i:T; e} :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T' = T\\<^sub>2\n 8. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1;;\n        e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T\\<^sub>2 = T\\<^sub>2'\n 9. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Boolean = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<longrightarrow>\n        T = T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1 \\<longrightarrow>\n        T = T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 if (e) e\\<^sub>1\n        else e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2'\n 10. \\<And>E e c T T\\<^sub>2.\n        \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n         \\<And>T\\<^sub>2.\n            P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n            Boolean = T\\<^sub>2;\n         P,E \\<turnstile>\\<^sub>1 c :: T;\n         \\<And>T\\<^sub>2.\n            P,E \\<turnstile>\\<^sub>1 c :: T\\<^sub>2 \\<Longrightarrow>\n            T = T\\<^sub>2;\n         P,E \\<turnstile>\\<^sub>1 while (e) c :: T\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> Void = T\\<^sub>2\nA total of 14 subgoals...", "apply blast"], ["proof (prove)\ngoal (13 subgoals):\n 1. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 bop T T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        case bop of\n        Eq \\<Rightarrow>\n          (P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n           P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1) \\<and>\n          T = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1 = Integer \\<and>\n            T\\<^sub>2 = Integer \\<and> T = Integer;\n        P,E \\<turnstile>\\<^sub>1\n        e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2'\n 2. \\<And>E i T e T' T\\<^sub>2.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>\\<^sub>1 e :: T';\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>\\<^sub>1 i:=e :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 3. \\<And>E e C F T D T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<bullet>F{D} :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 4. \\<And>E e\\<^sub>1 C F T D e\\<^sub>2 T' T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T';\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>\\<^sub>1\n        e\\<^sub>1\\<bullet>F{D} := e\\<^sub>2 :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 5. \\<And>E e C M Ts' T m D es Ts T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees M: Ts'\\<rightarrow>T = m in D;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts;\n        \\<And>Ts\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n           Ts = Ts\\<^sub>2;\n        P \\<turnstile> Ts [\\<le>] Ts';\n        P,E \\<turnstile>\\<^sub>1 e\\<bullet>M(es) :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 6. \\<And>T E e T' i T\\<^sub>2.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>\\<^sub>1 e :: T';\n        \\<And>T\\<^sub>2.\n           P,E @ [T] \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 {i:T; e} :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T' = T\\<^sub>2\n 7. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1;;\n        e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T\\<^sub>2 = T\\<^sub>2'\n 8. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Boolean = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<longrightarrow>\n        T = T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1 \\<longrightarrow>\n        T = T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 if (e) e\\<^sub>1\n        else e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2'\n 9. \\<And>E e c T T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Boolean = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 c :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 c :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 while (e) c :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 10. \\<And>E e C T\\<^sub>2.\n        \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n         \\<And>T\\<^sub>2.\n            P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n            Class C = T\\<^sub>2;\n         P,E \\<turnstile>\\<^sub>1 throw e :: T\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> Void = T\\<^sub>2\nA total of 13 subgoals...", "apply clarsimp"], ["proof (prove)\ngoal (13 subgoals):\n 1. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 bop T T\\<^sub>2'\n       T\\<^sub>1' T\\<^sub>2''.\n       \\<lbrakk>\\<And>T\\<^sub>2.\n                   P,E \\<turnstile>\\<^sub>1\n                   e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n                   T\\<^sub>1 = T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        case bop of\n        Eq \\<Rightarrow>\n          (P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n           P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1) \\<and>\n          T = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1 = Integer \\<and>\n            T\\<^sub>2 = Integer \\<and> T = Integer;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1';\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2'';\n        case bop of\n        Eq \\<Rightarrow>\n          (P \\<turnstile> T\\<^sub>1' \\<le> T\\<^sub>2'' \\<or>\n           P \\<turnstile> T\\<^sub>2'' \\<le> T\\<^sub>1') \\<and>\n          T\\<^sub>2' = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1' = Integer \\<and>\n            T\\<^sub>2'' = Integer \\<and> T\\<^sub>2' = Integer\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2'\n 2. \\<And>E i T e T' T\\<^sub>2.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>\\<^sub>1 e :: T';\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>\\<^sub>1 i:=e :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 3. \\<And>E e C F T D T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<bullet>F{D} :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 4. \\<And>E e\\<^sub>1 C F T D e\\<^sub>2 T' T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T';\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>\\<^sub>1\n        e\\<^sub>1\\<bullet>F{D} := e\\<^sub>2 :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 5. \\<And>E e C M Ts' T m D es Ts T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees M: Ts'\\<rightarrow>T = m in D;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts;\n        \\<And>Ts\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n           Ts = Ts\\<^sub>2;\n        P \\<turnstile> Ts [\\<le>] Ts';\n        P,E \\<turnstile>\\<^sub>1 e\\<bullet>M(es) :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 6. \\<And>T E e T' i T\\<^sub>2.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>\\<^sub>1 e :: T';\n        \\<And>T\\<^sub>2.\n           P,E @ [T] \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 {i:T; e} :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T' = T\\<^sub>2\n 7. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1;;\n        e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T\\<^sub>2 = T\\<^sub>2'\n 8. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Boolean = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<longrightarrow>\n        T = T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1 \\<longrightarrow>\n        T = T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 if (e) e\\<^sub>1\n        else e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2'\n 9. \\<And>E e c T T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Boolean = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 c :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 c :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 while (e) c :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 10. \\<And>E e C T\\<^sub>2.\n        \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n         \\<And>T\\<^sub>2.\n            P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n            Class C = T\\<^sub>2;\n         P,E \\<turnstile>\\<^sub>1 throw e :: T\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> Void = T\\<^sub>2\nA total of 13 subgoals...", "apply(case_tac bop)"], ["proof (prove)\ngoal (14 subgoals):\n 1. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 bop T T\\<^sub>2'\n       T\\<^sub>1' T\\<^sub>2''.\n       \\<lbrakk>\\<And>T\\<^sub>2.\n                   P,E \\<turnstile>\\<^sub>1\n                   e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n                   T\\<^sub>1 = T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        case bop of\n        Eq \\<Rightarrow>\n          (P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n           P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1) \\<and>\n          T = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1 = Integer \\<and>\n            T\\<^sub>2 = Integer \\<and> T = Integer;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1';\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2'';\n        case bop of\n        Eq \\<Rightarrow>\n          (P \\<turnstile> T\\<^sub>1' \\<le> T\\<^sub>2'' \\<or>\n           P \\<turnstile> T\\<^sub>2'' \\<le> T\\<^sub>1') \\<and>\n          T\\<^sub>2' = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1' = Integer \\<and>\n            T\\<^sub>2'' = Integer \\<and> T\\<^sub>2' = Integer;\n        bop = Eq\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2'\n 2. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 bop T T\\<^sub>2'\n       T\\<^sub>1' T\\<^sub>2''.\n       \\<lbrakk>\\<And>T\\<^sub>2.\n                   P,E \\<turnstile>\\<^sub>1\n                   e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n                   T\\<^sub>1 = T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        case bop of\n        Eq \\<Rightarrow>\n          (P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n           P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1) \\<and>\n          T = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1 = Integer \\<and>\n            T\\<^sub>2 = Integer \\<and> T = Integer;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1';\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2'';\n        case bop of\n        Eq \\<Rightarrow>\n          (P \\<turnstile> T\\<^sub>1' \\<le> T\\<^sub>2'' \\<or>\n           P \\<turnstile> T\\<^sub>2'' \\<le> T\\<^sub>1') \\<and>\n          T\\<^sub>2' = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1' = Integer \\<and>\n            T\\<^sub>2'' = Integer \\<and> T\\<^sub>2' = Integer;\n        bop = Add\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2'\n 3. \\<And>E i T e T' T\\<^sub>2.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>\\<^sub>1 e :: T';\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>\\<^sub>1 i:=e :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 4. \\<And>E e C F T D T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<bullet>F{D} :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 5. \\<And>E e\\<^sub>1 C F T D e\\<^sub>2 T' T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T';\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>\\<^sub>1\n        e\\<^sub>1\\<bullet>F{D} := e\\<^sub>2 :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 6. \\<And>E e C M Ts' T m D es Ts T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees M: Ts'\\<rightarrow>T = m in D;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts;\n        \\<And>Ts\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n           Ts = Ts\\<^sub>2;\n        P \\<turnstile> Ts [\\<le>] Ts';\n        P,E \\<turnstile>\\<^sub>1 e\\<bullet>M(es) :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 7. \\<And>T E e T' i T\\<^sub>2.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>\\<^sub>1 e :: T';\n        \\<And>T\\<^sub>2.\n           P,E @ [T] \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 {i:T; e} :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T' = T\\<^sub>2\n 8. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1;;\n        e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T\\<^sub>2 = T\\<^sub>2'\n 9. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Boolean = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<longrightarrow>\n        T = T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1 \\<longrightarrow>\n        T = T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 if (e) e\\<^sub>1\n        else e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2'\n 10. \\<And>E e c T T\\<^sub>2.\n        \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n         \\<And>T\\<^sub>2.\n            P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n            Boolean = T\\<^sub>2;\n         P,E \\<turnstile>\\<^sub>1 c :: T;\n         \\<And>T\\<^sub>2.\n            P,E \\<turnstile>\\<^sub>1 c :: T\\<^sub>2 \\<Longrightarrow>\n            T = T\\<^sub>2;\n         P,E \\<turnstile>\\<^sub>1 while (e) c :: T\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> Void = T\\<^sub>2\nA total of 14 subgoals...", "apply clarsimp"], ["proof (prove)\ngoal (13 subgoals):\n 1. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 bop T T\\<^sub>2'\n       T\\<^sub>1' T\\<^sub>2''.\n       \\<lbrakk>\\<And>T\\<^sub>2.\n                   P,E \\<turnstile>\\<^sub>1\n                   e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n                   T\\<^sub>1 = T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        case bop of\n        Eq \\<Rightarrow>\n          (P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n           P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1) \\<and>\n          T = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1 = Integer \\<and>\n            T\\<^sub>2 = Integer \\<and> T = Integer;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1';\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2'';\n        case bop of\n        Eq \\<Rightarrow>\n          (P \\<turnstile> T\\<^sub>1' \\<le> T\\<^sub>2'' \\<or>\n           P \\<turnstile> T\\<^sub>2'' \\<le> T\\<^sub>1') \\<and>\n          T\\<^sub>2' = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1' = Integer \\<and>\n            T\\<^sub>2'' = Integer \\<and> T\\<^sub>2' = Integer;\n        bop = Add\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2'\n 2. \\<And>E i T e T' T\\<^sub>2.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>\\<^sub>1 e :: T';\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>\\<^sub>1 i:=e :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 3. \\<And>E e C F T D T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<bullet>F{D} :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 4. \\<And>E e\\<^sub>1 C F T D e\\<^sub>2 T' T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T';\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>\\<^sub>1\n        e\\<^sub>1\\<bullet>F{D} := e\\<^sub>2 :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 5. \\<And>E e C M Ts' T m D es Ts T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees M: Ts'\\<rightarrow>T = m in D;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts;\n        \\<And>Ts\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n           Ts = Ts\\<^sub>2;\n        P \\<turnstile> Ts [\\<le>] Ts';\n        P,E \\<turnstile>\\<^sub>1 e\\<bullet>M(es) :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 6. \\<And>T E e T' i T\\<^sub>2.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>\\<^sub>1 e :: T';\n        \\<And>T\\<^sub>2.\n           P,E @ [T] \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 {i:T; e} :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T' = T\\<^sub>2\n 7. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1;;\n        e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T\\<^sub>2 = T\\<^sub>2'\n 8. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Boolean = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<longrightarrow>\n        T = T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1 \\<longrightarrow>\n        T = T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 if (e) e\\<^sub>1\n        else e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2'\n 9. \\<And>E e c T T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Boolean = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 c :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 c :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 while (e) c :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 10. \\<And>E e C T\\<^sub>2.\n        \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n         \\<And>T\\<^sub>2.\n            P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n            Class C = T\\<^sub>2;\n         P,E \\<turnstile>\\<^sub>1 throw e :: T\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> Void = T\\<^sub>2\nA total of 13 subgoals...", "apply clarsimp"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>E i T e T' T\\<^sub>2.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>\\<^sub>1 e :: T';\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>\\<^sub>1 i:=e :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 2. \\<And>E e C F T D T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<bullet>F{D} :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 3. \\<And>E e\\<^sub>1 C F T D e\\<^sub>2 T' T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T';\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>\\<^sub>1\n        e\\<^sub>1\\<bullet>F{D} := e\\<^sub>2 :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 4. \\<And>E e C M Ts' T m D es Ts T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees M: Ts'\\<rightarrow>T = m in D;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts;\n        \\<And>Ts\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n           Ts = Ts\\<^sub>2;\n        P \\<turnstile> Ts [\\<le>] Ts';\n        P,E \\<turnstile>\\<^sub>1 e\\<bullet>M(es) :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 5. \\<And>T E e T' i T\\<^sub>2.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>\\<^sub>1 e :: T';\n        \\<And>T\\<^sub>2.\n           P,E @ [T] \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 {i:T; e} :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T' = T\\<^sub>2\n 6. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1;;\n        e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T\\<^sub>2 = T\\<^sub>2'\n 7. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Boolean = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<longrightarrow>\n        T = T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1 \\<longrightarrow>\n        T = T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 if (e) e\\<^sub>1\n        else e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2'\n 8. \\<And>E e c T T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Boolean = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 c :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 c :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 while (e) c :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 9. \\<And>E e C T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 throw e :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 10. \\<And>E e\\<^sub>1 T C e\\<^sub>2 i T\\<^sub>2.\n        \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T;\n         \\<And>T\\<^sub>2.\n            P,E \\<turnstile>\\<^sub>1\n            e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n            T = T\\<^sub>2;\n         P,E @ [Class C] \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T;\n         \\<And>T\\<^sub>2.\n            P,E @ [Class C] \\<turnstile>\\<^sub>1\n            e\\<^sub>2 :: T\\<^sub>2 \\<Longrightarrow>\n            T = T\\<^sub>2;\n         is_class P C;\n         P,E \\<turnstile>\\<^sub>1 try e\\<^sub>1\n         catch(C i) e\\<^sub>2 :: T\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> T = T\\<^sub>2\nA total of 12 subgoals...", "apply blast"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>E e C F T D T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<bullet>F{D} :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 2. \\<And>E e\\<^sub>1 C F T D e\\<^sub>2 T' T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T';\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>\\<^sub>1\n        e\\<^sub>1\\<bullet>F{D} := e\\<^sub>2 :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 3. \\<And>E e C M Ts' T m D es Ts T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees M: Ts'\\<rightarrow>T = m in D;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts;\n        \\<And>Ts\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n           Ts = Ts\\<^sub>2;\n        P \\<turnstile> Ts [\\<le>] Ts';\n        P,E \\<turnstile>\\<^sub>1 e\\<bullet>M(es) :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 4. \\<And>T E e T' i T\\<^sub>2.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>\\<^sub>1 e :: T';\n        \\<And>T\\<^sub>2.\n           P,E @ [T] \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 {i:T; e} :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T' = T\\<^sub>2\n 5. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1;;\n        e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T\\<^sub>2 = T\\<^sub>2'\n 6. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Boolean = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<longrightarrow>\n        T = T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1 \\<longrightarrow>\n        T = T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 if (e) e\\<^sub>1\n        else e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2'\n 7. \\<And>E e c T T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Boolean = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 c :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 c :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 while (e) c :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 8. \\<And>E e C T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 throw e :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 9. \\<And>E e\\<^sub>1 T C e\\<^sub>2 i T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E @ [Class C] \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T;\n        \\<And>T\\<^sub>2.\n           P,E @ [Class C] \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        is_class P C;\n        P,E \\<turnstile>\\<^sub>1 try e\\<^sub>1\n        catch(C i) e\\<^sub>2 :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 10. \\<And>E Ts\\<^sub>2.\n        P,E \\<turnstile>\\<^sub>1 [] [::] Ts\\<^sub>2 \\<Longrightarrow>\n        [] = Ts\\<^sub>2\nA total of 11 subgoals...", "apply (blast dest:sees_field_idemp sees_field_fun)"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>E e\\<^sub>1 C F T D e\\<^sub>2 T' T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T';\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile>\\<^sub>1\n        e\\<^sub>1\\<bullet>F{D} := e\\<^sub>2 :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 2. \\<And>E e C M Ts' T m D es Ts T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees M: Ts'\\<rightarrow>T = m in D;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts;\n        \\<And>Ts\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n           Ts = Ts\\<^sub>2;\n        P \\<turnstile> Ts [\\<le>] Ts';\n        P,E \\<turnstile>\\<^sub>1 e\\<bullet>M(es) :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 3. \\<And>T E e T' i T\\<^sub>2.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>\\<^sub>1 e :: T';\n        \\<And>T\\<^sub>2.\n           P,E @ [T] \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 {i:T; e} :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T' = T\\<^sub>2\n 4. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1;;\n        e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T\\<^sub>2 = T\\<^sub>2'\n 5. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Boolean = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<longrightarrow>\n        T = T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1 \\<longrightarrow>\n        T = T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 if (e) e\\<^sub>1\n        else e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2'\n 6. \\<And>E e c T T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Boolean = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 c :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 c :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 while (e) c :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 7. \\<And>E e C T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 throw e :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 8. \\<And>E e\\<^sub>1 T C e\\<^sub>2 i T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E @ [Class C] \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T;\n        \\<And>T\\<^sub>2.\n           P,E @ [Class C] \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        is_class P C;\n        P,E \\<turnstile>\\<^sub>1 try e\\<^sub>1\n        catch(C i) e\\<^sub>2 :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 9. \\<And>E Ts\\<^sub>2.\n       P,E \\<turnstile>\\<^sub>1 [] [::] Ts\\<^sub>2 \\<Longrightarrow>\n       [] = Ts\\<^sub>2\n 10. \\<And>E e T es Ts Ts\\<^sub>2.\n        \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: T;\n         \\<And>T\\<^sub>2.\n            P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n            T = T\\<^sub>2;\n         P,E \\<turnstile>\\<^sub>1 es [::] Ts;\n         \\<And>Ts\\<^sub>2.\n            P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n            Ts = Ts\\<^sub>2;\n         P,E \\<turnstile>\\<^sub>1 e # es [::] Ts\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> T # Ts = Ts\\<^sub>2", "apply blast"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>E e C M Ts' T m D es Ts T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P \\<turnstile> C sees M: Ts'\\<rightarrow>T = m in D;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts;\n        \\<And>Ts\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n           Ts = Ts\\<^sub>2;\n        P \\<turnstile> Ts [\\<le>] Ts';\n        P,E \\<turnstile>\\<^sub>1 e\\<bullet>M(es) :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 2. \\<And>T E e T' i T\\<^sub>2.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>\\<^sub>1 e :: T';\n        \\<And>T\\<^sub>2.\n           P,E @ [T] \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 {i:T; e} :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T' = T\\<^sub>2\n 3. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1;;\n        e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T\\<^sub>2 = T\\<^sub>2'\n 4. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Boolean = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<longrightarrow>\n        T = T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1 \\<longrightarrow>\n        T = T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 if (e) e\\<^sub>1\n        else e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2'\n 5. \\<And>E e c T T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Boolean = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 c :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 c :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 while (e) c :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 6. \\<And>E e C T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 throw e :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 7. \\<And>E e\\<^sub>1 T C e\\<^sub>2 i T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E @ [Class C] \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T;\n        \\<And>T\\<^sub>2.\n           P,E @ [Class C] \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        is_class P C;\n        P,E \\<turnstile>\\<^sub>1 try e\\<^sub>1\n        catch(C i) e\\<^sub>2 :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 8. \\<And>E Ts\\<^sub>2.\n       P,E \\<turnstile>\\<^sub>1 [] [::] Ts\\<^sub>2 \\<Longrightarrow>\n       [] = Ts\\<^sub>2\n 9. \\<And>E e T es Ts Ts\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts;\n        \\<And>Ts\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n           Ts = Ts\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e # es [::] Ts\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T # Ts = Ts\\<^sub>2", "apply (blast dest:sees_method_idemp sees_method_fun)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>T E e T' i T\\<^sub>2.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>\\<^sub>1 e :: T';\n        \\<And>T\\<^sub>2.\n           P,E @ [T] \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T' = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 {i:T; e} :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T' = T\\<^sub>2\n 2. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1;;\n        e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T\\<^sub>2 = T\\<^sub>2'\n 3. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Boolean = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<longrightarrow>\n        T = T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1 \\<longrightarrow>\n        T = T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 if (e) e\\<^sub>1\n        else e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2'\n 4. \\<And>E e c T T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Boolean = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 c :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 c :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 while (e) c :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 5. \\<And>E e C T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 throw e :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 6. \\<And>E e\\<^sub>1 T C e\\<^sub>2 i T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E @ [Class C] \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T;\n        \\<And>T\\<^sub>2.\n           P,E @ [Class C] \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        is_class P C;\n        P,E \\<turnstile>\\<^sub>1 try e\\<^sub>1\n        catch(C i) e\\<^sub>2 :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 7. \\<And>E Ts\\<^sub>2.\n       P,E \\<turnstile>\\<^sub>1 [] [::] Ts\\<^sub>2 \\<Longrightarrow>\n       [] = Ts\\<^sub>2\n 8. \\<And>E e T es Ts Ts\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts;\n        \\<And>Ts\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n           Ts = Ts\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e # es [::] Ts\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T # Ts = Ts\\<^sub>2", "apply blast"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1;;\n        e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T\\<^sub>2 = T\\<^sub>2'\n 2. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Boolean = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<longrightarrow>\n        T = T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1 \\<longrightarrow>\n        T = T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 if (e) e\\<^sub>1\n        else e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2'\n 3. \\<And>E e c T T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Boolean = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 c :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 c :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 while (e) c :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 4. \\<And>E e C T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 throw e :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 5. \\<And>E e\\<^sub>1 T C e\\<^sub>2 i T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E @ [Class C] \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T;\n        \\<And>T\\<^sub>2.\n           P,E @ [Class C] \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        is_class P C;\n        P,E \\<turnstile>\\<^sub>1 try e\\<^sub>1\n        catch(C i) e\\<^sub>2 :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 6. \\<And>E Ts\\<^sub>2.\n       P,E \\<turnstile>\\<^sub>1 [] [::] Ts\\<^sub>2 \\<Longrightarrow>\n       [] = Ts\\<^sub>2\n 7. \\<And>E e T es Ts Ts\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts;\n        \\<And>Ts\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n           Ts = Ts\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e # es [::] Ts\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T # Ts = Ts\\<^sub>2", "apply blast"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T T\\<^sub>2'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Boolean = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T\\<^sub>1 = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        \\<And>T\\<^sub>2'.\n           P,E \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2' \\<Longrightarrow>\n           T\\<^sub>2 = T\\<^sub>2';\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<longrightarrow>\n        T = T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1 \\<longrightarrow>\n        T = T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 if (e) e\\<^sub>1\n        else e\\<^sub>2 :: T\\<^sub>2'\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2'\n 2. \\<And>E e c T T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Boolean = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 c :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 c :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 while (e) c :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 3. \\<And>E e C T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 throw e :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 4. \\<And>E e\\<^sub>1 T C e\\<^sub>2 i T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E @ [Class C] \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T;\n        \\<And>T\\<^sub>2.\n           P,E @ [Class C] \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        is_class P C;\n        P,E \\<turnstile>\\<^sub>1 try e\\<^sub>1\n        catch(C i) e\\<^sub>2 :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 5. \\<And>E Ts\\<^sub>2.\n       P,E \\<turnstile>\\<^sub>1 [] [::] Ts\\<^sub>2 \\<Longrightarrow>\n       [] = Ts\\<^sub>2\n 6. \\<And>E e T es Ts Ts\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts;\n        \\<And>Ts\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n           Ts = Ts\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e # es [::] Ts\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T # Ts = Ts\\<^sub>2", "apply blast"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>E e c T T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Boolean = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 c :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 c :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 while (e) c :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 2. \\<And>E e C T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 throw e :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 3. \\<And>E e\\<^sub>1 T C e\\<^sub>2 i T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E @ [Class C] \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T;\n        \\<And>T\\<^sub>2.\n           P,E @ [Class C] \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        is_class P C;\n        P,E \\<turnstile>\\<^sub>1 try e\\<^sub>1\n        catch(C i) e\\<^sub>2 :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 4. \\<And>E Ts\\<^sub>2.\n       P,E \\<turnstile>\\<^sub>1 [] [::] Ts\\<^sub>2 \\<Longrightarrow>\n       [] = Ts\\<^sub>2\n 5. \\<And>E e T es Ts Ts\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts;\n        \\<And>Ts\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n           Ts = Ts\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e # es [::] Ts\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T # Ts = Ts\\<^sub>2", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>E e C T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           Class C = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 throw e :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> Void = T\\<^sub>2\n 2. \\<And>E e\\<^sub>1 T C e\\<^sub>2 i T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E @ [Class C] \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T;\n        \\<And>T\\<^sub>2.\n           P,E @ [Class C] \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        is_class P C;\n        P,E \\<turnstile>\\<^sub>1 try e\\<^sub>1\n        catch(C i) e\\<^sub>2 :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 3. \\<And>E Ts\\<^sub>2.\n       P,E \\<turnstile>\\<^sub>1 [] [::] Ts\\<^sub>2 \\<Longrightarrow>\n       [] = Ts\\<^sub>2\n 4. \\<And>E e T es Ts Ts\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts;\n        \\<And>Ts\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n           Ts = Ts\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e # es [::] Ts\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T # Ts = Ts\\<^sub>2", "apply clarify"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>E e\\<^sub>1 T C e\\<^sub>2 i T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E @ [Class C] \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T;\n        \\<And>T\\<^sub>2.\n           P,E @ [Class C] \\<turnstile>\\<^sub>1\n           e\\<^sub>2 :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        is_class P C;\n        P,E \\<turnstile>\\<^sub>1 try e\\<^sub>1\n        catch(C i) e\\<^sub>2 :: T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T = T\\<^sub>2\n 2. \\<And>E Ts\\<^sub>2.\n       P,E \\<turnstile>\\<^sub>1 [] [::] Ts\\<^sub>2 \\<Longrightarrow>\n       [] = Ts\\<^sub>2\n 3. \\<And>E e T es Ts Ts\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts;\n        \\<And>Ts\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n           Ts = Ts\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e # es [::] Ts\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T # Ts = Ts\\<^sub>2", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>E Ts\\<^sub>2.\n       P,E \\<turnstile>\\<^sub>1 [] [::] Ts\\<^sub>2 \\<Longrightarrow>\n       [] = Ts\\<^sub>2\n 2. \\<And>E e T es Ts Ts\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts;\n        \\<And>Ts\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n           Ts = Ts\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e # es [::] Ts\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T # Ts = Ts\\<^sub>2", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>E e T es Ts Ts\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: T;\n        \\<And>T\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 e :: T\\<^sub>2 \\<Longrightarrow>\n           T = T\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts;\n        \\<And>Ts\\<^sub>2.\n           P,E \\<turnstile>\\<^sub>1 es [::] Ts\\<^sub>2 \\<Longrightarrow>\n           Ts = Ts\\<^sub>2;\n        P,E \\<turnstile>\\<^sub>1 e # es [::] Ts\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> T # Ts = Ts\\<^sub>2", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma assumes wf: \"wf_prog p P\"\nshows WT\\<^sub>1_is_type: \"P,E \\<turnstile>\\<^sub>1 e :: T \\<Longrightarrow> set E \\<subseteq> types P \\<Longrightarrow> is_type P T\"\nand \"P,E \\<turnstile>\\<^sub>1 es [::] Ts \\<Longrightarrow> True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: T;\n      set E \\<subseteq> types P\\<rbrakk>\n     \\<Longrightarrow> is_type P T) &&&\n    (P,E \\<turnstile>\\<^sub>1 es [::] Ts \\<Longrightarrow> True)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: T;\n      set E \\<subseteq> types P\\<rbrakk>\n     \\<Longrightarrow> is_type P T) &&&\n    (P,E \\<turnstile>\\<^sub>1 es [::] Ts \\<Longrightarrow> True)", "apply(induct rule:WT\\<^sub>1_WTs\\<^sub>1.inducts)"], ["proof (prove)\ngoal (17 subgoals):\n 1. \\<And>C E.\n       \\<lbrakk>is_class P C; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P (Class C)\n 2. \\<And>E e D C.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class D;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class D);\n        is_class P C;\n        P \\<turnstile> C \\<preceq>\\<^sup>* D \\<or>\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P (Class C)\n 3. \\<And>v T E.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 4. \\<And>E i T.\n       \\<lbrakk>E ! i = T; i < length E; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 5. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 bop T.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        case bop of\n        Eq \\<Rightarrow>\n          (P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n           P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1) \\<and>\n          T = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1 = Integer \\<and>\n            T\\<^sub>2 = Integer \\<and> T = Integer;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 6. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>\\<^sub>1 e :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 7. \\<And>E e C F T D.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees F:T in D; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 8. \\<And>E e\\<^sub>1 C F T D e\\<^sub>2 T'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 9. \\<And>E e C M Ts' T m D es Ts.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees M: Ts'\\<rightarrow>T = m in D;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts; True;\n        P \\<turnstile> Ts [\\<le>] Ts'; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 10. \\<And>T E e T' i.\n        \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>\\<^sub>1 e :: T';\n         set (E @ [T]) \\<subseteq> types P \\<Longrightarrow> is_type P T';\n         set E \\<subseteq> types P\\<rbrakk>\n        \\<Longrightarrow> is_type P T'\nA total of 17 subgoals...", "apply simp"], ["proof (prove)\ngoal (16 subgoals):\n 1. \\<And>E e D C.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class D;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class D);\n        is_class P C;\n        P \\<turnstile> C \\<preceq>\\<^sup>* D \\<or>\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P (Class C)\n 2. \\<And>v T E.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 3. \\<And>E i T.\n       \\<lbrakk>E ! i = T; i < length E; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 4. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 bop T.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        case bop of\n        Eq \\<Rightarrow>\n          (P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n           P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1) \\<and>\n          T = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1 = Integer \\<and>\n            T\\<^sub>2 = Integer \\<and> T = Integer;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 5. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>\\<^sub>1 e :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 6. \\<And>E e C F T D.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees F:T in D; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 7. \\<And>E e\\<^sub>1 C F T D e\\<^sub>2 T'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 8. \\<And>E e C M Ts' T m D es Ts.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees M: Ts'\\<rightarrow>T = m in D;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts; True;\n        P \\<turnstile> Ts [\\<le>] Ts'; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 9. \\<And>T E e T' i.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>\\<^sub>1 e :: T';\n        set (E @ [T]) \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 10. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2.\n        \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n         P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n         set E \\<subseteq> types P\\<rbrakk>\n        \\<Longrightarrow> is_type P T\\<^sub>2\nA total of 16 subgoals...", "apply simp"], ["proof (prove)\ngoal (15 subgoals):\n 1. \\<And>v T E.\n       \\<lbrakk>typeof v = \\<lfloor>T\\<rfloor>;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 2. \\<And>E i T.\n       \\<lbrakk>E ! i = T; i < length E; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 3. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 bop T.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        case bop of\n        Eq \\<Rightarrow>\n          (P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n           P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1) \\<and>\n          T = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1 = Integer \\<and>\n            T\\<^sub>2 = Integer \\<and> T = Integer;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 4. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>\\<^sub>1 e :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 5. \\<And>E e C F T D.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees F:T in D; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 6. \\<And>E e\\<^sub>1 C F T D e\\<^sub>2 T'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 7. \\<And>E e C M Ts' T m D es Ts.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees M: Ts'\\<rightarrow>T = m in D;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts; True;\n        P \\<turnstile> Ts [\\<le>] Ts'; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 8. \\<And>T E e T' i.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>\\<^sub>1 e :: T';\n        set (E @ [T]) \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 9. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\\<^sub>2\n 10. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T.\n        \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n         P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n         P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n         P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n         P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1;\n         P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<longrightarrow>\n         T = T\\<^sub>2;\n         P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1 \\<longrightarrow>\n         T = T\\<^sub>1;\n         set E \\<subseteq> types P\\<rbrakk>\n        \\<Longrightarrow> is_type P T\nA total of 15 subgoals...", "apply (simp add:typeof_lit_is_type)"], ["proof (prove)\ngoal (14 subgoals):\n 1. \\<And>E i T.\n       \\<lbrakk>E ! i = T; i < length E; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 2. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 bop T.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        case bop of\n        Eq \\<Rightarrow>\n          (P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n           P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1) \\<and>\n          T = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1 = Integer \\<and>\n            T\\<^sub>2 = Integer \\<and> T = Integer;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 3. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>\\<^sub>1 e :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 4. \\<And>E e C F T D.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees F:T in D; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 5. \\<And>E e\\<^sub>1 C F T D e\\<^sub>2 T'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 6. \\<And>E e C M Ts' T m D es Ts.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees M: Ts'\\<rightarrow>T = m in D;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts; True;\n        P \\<turnstile> Ts [\\<le>] Ts'; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 7. \\<And>T E e T' i.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>\\<^sub>1 e :: T';\n        set (E @ [T]) \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 8. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\\<^sub>2\n 9. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<longrightarrow>\n        T = T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1 \\<longrightarrow>\n        T = T\\<^sub>1;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 10. \\<And>E e c T.\n        \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n         P,E \\<turnstile>\\<^sub>1 c :: T;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n         set E \\<subseteq> types P\\<rbrakk>\n        \\<Longrightarrow> is_type P Void\nA total of 14 subgoals...", "apply (blast intro:nth_mem)"], ["proof (prove)\ngoal (13 subgoals):\n 1. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 bop T.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        case bop of\n        Eq \\<Rightarrow>\n          (P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n           P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1) \\<and>\n          T = Boolean\n        | Add \\<Rightarrow>\n            T\\<^sub>1 = Integer \\<and>\n            T\\<^sub>2 = Integer \\<and> T = Integer;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 2. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>\\<^sub>1 e :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 3. \\<And>E e C F T D.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees F:T in D; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 4. \\<And>E e\\<^sub>1 C F T D e\\<^sub>2 T'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 5. \\<And>E e C M Ts' T m D es Ts.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees M: Ts'\\<rightarrow>T = m in D;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts; True;\n        P \\<turnstile> Ts [\\<le>] Ts'; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 6. \\<And>T E e T' i.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>\\<^sub>1 e :: T';\n        set (E @ [T]) \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 7. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\\<^sub>2\n 8. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<longrightarrow>\n        T = T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1 \\<longrightarrow>\n        T = T\\<^sub>1;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 9. \\<And>E e c T.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>\\<^sub>1 c :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 10. \\<And>E e C.\n        \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n         set E \\<subseteq> types P\\<rbrakk>\n        \\<Longrightarrow> is_type P Void\nA total of 13 subgoals...", "apply(simp split:bop.splits)"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>E i T e T'.\n       \\<lbrakk>E ! i = T; i < length E; P,E \\<turnstile>\\<^sub>1 e :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 2. \\<And>E e C F T D.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees F:T in D; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 3. \\<And>E e\\<^sub>1 C F T D e\\<^sub>2 T'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 4. \\<And>E e C M Ts' T m D es Ts.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees M: Ts'\\<rightarrow>T = m in D;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts; True;\n        P \\<turnstile> Ts [\\<le>] Ts'; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 5. \\<And>T E e T' i.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>\\<^sub>1 e :: T';\n        set (E @ [T]) \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 6. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\\<^sub>2\n 7. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<longrightarrow>\n        T = T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1 \\<longrightarrow>\n        T = T\\<^sub>1;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 8. \\<And>E e c T.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>\\<^sub>1 c :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 9. \\<And>E e C.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 10. \\<And>E e\\<^sub>1 T C e\\<^sub>2 i.\n        \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n         P,E @ [Class C] \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T;\n         set (E @ [Class C]) \\<subseteq> types P \\<Longrightarrow>\n         is_type P T;\n         is_class P C; set E \\<subseteq> types P\\<rbrakk>\n        \\<Longrightarrow> is_type P T\nA total of 12 subgoals...", "apply simp"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>E e C F T D.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees F:T in D; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 2. \\<And>E e\\<^sub>1 C F T D e\\<^sub>2 T'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 3. \\<And>E e C M Ts' T m D es Ts.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees M: Ts'\\<rightarrow>T = m in D;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts; True;\n        P \\<turnstile> Ts [\\<le>] Ts'; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 4. \\<And>T E e T' i.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>\\<^sub>1 e :: T';\n        set (E @ [T]) \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 5. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\\<^sub>2\n 6. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<longrightarrow>\n        T = T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1 \\<longrightarrow>\n        T = T\\<^sub>1;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 7. \\<And>E e c T.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>\\<^sub>1 c :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 8. \\<And>E e C.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 9. \\<And>E e\\<^sub>1 T C e\\<^sub>2 i.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E @ [Class C] \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T;\n        set (E @ [Class C]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T;\n        is_class P C; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 10. \\<And>E. True\nA total of 11 subgoals...", "apply (simp add:sees_field_is_type[OF _ wf])"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>E e\\<^sub>1 C F T D e\\<^sub>2 T'.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees F:T in D;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T';\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        P \\<turnstile> T' \\<le> T; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 2. \\<And>E e C M Ts' T m D es Ts.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees M: Ts'\\<rightarrow>T = m in D;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts; True;\n        P \\<turnstile> Ts [\\<le>] Ts'; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 3. \\<And>T E e T' i.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>\\<^sub>1 e :: T';\n        set (E @ [T]) \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 4. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\\<^sub>2\n 5. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<longrightarrow>\n        T = T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1 \\<longrightarrow>\n        T = T\\<^sub>1;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 6. \\<And>E e c T.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>\\<^sub>1 c :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 7. \\<And>E e C.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 8. \\<And>E e\\<^sub>1 T C e\\<^sub>2 i.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E @ [Class C] \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T;\n        set (E @ [Class C]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T;\n        is_class P C; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 9. \\<And>E. True\n 10. \\<And>E e T es Ts.\n        \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: T;\n         set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n         P,E \\<turnstile>\\<^sub>1 es [::] Ts; True\\<rbrakk>\n        \\<Longrightarrow> True", "apply simp"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>E e C M Ts' T m D es Ts.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        P \\<turnstile> C sees M: Ts'\\<rightarrow>T = m in D;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts; True;\n        P \\<turnstile> Ts [\\<le>] Ts'; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 2. \\<And>T E e T' i.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>\\<^sub>1 e :: T';\n        set (E @ [T]) \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 3. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\\<^sub>2\n 4. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<longrightarrow>\n        T = T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1 \\<longrightarrow>\n        T = T\\<^sub>1;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 5. \\<And>E e c T.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>\\<^sub>1 c :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 6. \\<And>E e C.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 7. \\<And>E e\\<^sub>1 T C e\\<^sub>2 i.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E @ [Class C] \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T;\n        set (E @ [Class C]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T;\n        is_class P C; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 8. \\<And>E. True\n 9. \\<And>E e T es Ts.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts; True\\<rbrakk>\n       \\<Longrightarrow> True", "apply(fastforce dest!: sees_wf_mdecl[OF wf] simp:wf_mdecl_def)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>T E e T' i.\n       \\<lbrakk>is_type P T; P,E @ [T] \\<turnstile>\\<^sub>1 e :: T';\n        set (E @ [T]) \\<subseteq> types P \\<Longrightarrow> is_type P T';\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T'\n 2. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\\<^sub>2\n 3. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<longrightarrow>\n        T = T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1 \\<longrightarrow>\n        T = T\\<^sub>1;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 4. \\<And>E e c T.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>\\<^sub>1 c :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 5. \\<And>E e C.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 6. \\<And>E e\\<^sub>1 T C e\\<^sub>2 i.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E @ [Class C] \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T;\n        set (E @ [Class C]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T;\n        is_class P C; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 7. \\<And>E. True\n 8. \\<And>E e T es Ts.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts; True\\<rbrakk>\n       \\<Longrightarrow> True", "apply simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>E e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\\<^sub>2\n 2. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<longrightarrow>\n        T = T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1 \\<longrightarrow>\n        T = T\\<^sub>1;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 3. \\<And>E e c T.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>\\<^sub>1 c :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 4. \\<And>E e C.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 5. \\<And>E e\\<^sub>1 T C e\\<^sub>2 i.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E @ [Class C] \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T;\n        set (E @ [Class C]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T;\n        is_class P C; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 6. \\<And>E. True\n 7. \\<And>E e T es Ts.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts; True\\<rbrakk>\n       \\<Longrightarrow> True", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>E e e\\<^sub>1 T\\<^sub>1 e\\<^sub>2 T\\<^sub>2 T.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T\\<^sub>1;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>1;\n        P,E \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T\\<^sub>2;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<or>\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1;\n        P \\<turnstile> T\\<^sub>1 \\<le> T\\<^sub>2 \\<longrightarrow>\n        T = T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> T\\<^sub>1 \\<longrightarrow>\n        T = T\\<^sub>1;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 2. \\<And>E e c T.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>\\<^sub>1 c :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 3. \\<And>E e C.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 4. \\<And>E e\\<^sub>1 T C e\\<^sub>2 i.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E @ [Class C] \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T;\n        set (E @ [Class C]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T;\n        is_class P C; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 5. \\<And>E. True\n 6. \\<And>E e T es Ts.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts; True\\<rbrakk>\n       \\<Longrightarrow> True", "apply blast"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>E e c T.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Boolean;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P Boolean;\n        P,E \\<turnstile>\\<^sub>1 c :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 2. \\<And>E e C.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 3. \\<And>E e\\<^sub>1 T C e\\<^sub>2 i.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E @ [Class C] \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T;\n        set (E @ [Class C]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T;\n        is_class P C; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 4. \\<And>E. True\n 5. \\<And>E e T es Ts.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts; True\\<rbrakk>\n       \\<Longrightarrow> True", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>E e C.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: Class C;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P (Class C);\n        set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P Void\n 2. \\<And>E e\\<^sub>1 T C e\\<^sub>2 i.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E @ [Class C] \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T;\n        set (E @ [Class C]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T;\n        is_class P C; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 3. \\<And>E. True\n 4. \\<And>E e T es Ts.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts; True\\<rbrakk>\n       \\<Longrightarrow> True", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>E e\\<^sub>1 T C e\\<^sub>2 i.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e\\<^sub>1 :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E @ [Class C] \\<turnstile>\\<^sub>1 e\\<^sub>2 :: T;\n        set (E @ [Class C]) \\<subseteq> types P \\<Longrightarrow>\n        is_type P T;\n        is_class P C; set E \\<subseteq> types P\\<rbrakk>\n       \\<Longrightarrow> is_type P T\n 2. \\<And>E. True\n 3. \\<And>E e T es Ts.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts; True\\<rbrakk>\n       \\<Longrightarrow> True", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>E. True\n 2. \\<And>E e T es Ts.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts; True\\<rbrakk>\n       \\<Longrightarrow> True", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>E e T es Ts.\n       \\<lbrakk>P,E \\<turnstile>\\<^sub>1 e :: T;\n        set E \\<subseteq> types P \\<Longrightarrow> is_type P T;\n        P,E \\<turnstile>\\<^sub>1 es [::] Ts; True\\<rbrakk>\n       \\<Longrightarrow> True", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "subsection\\<open>Well-formedness\\<close>\n\n\\<comment> \\<open>Indices in blocks increase by 1\\<close>"], ["", "primrec \\<B> :: \"expr\\<^sub>1 \\<Rightarrow> nat \\<Rightarrow> bool\"\n  and \\<B>s :: \"expr\\<^sub>1 list \\<Rightarrow> nat \\<Rightarrow> bool\" where\n\"\\<B> (new C) i = True\" |\n\"\\<B> (Cast C e) i = \\<B> e i\" |\n\"\\<B> (Val v) i = True\" |\n\"\\<B> (e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2) i = (\\<B> e\\<^sub>1 i \\<and> \\<B> e\\<^sub>2 i)\" |\n\"\\<B> (Var j) i = True\" |\n\"\\<B> (e\\<bullet>F{D}) i = \\<B> e i\" |\n\"\\<B> (j:=e) i = \\<B> e i\" |\n\"\\<B> (e\\<^sub>1\\<bullet>F{D} := e\\<^sub>2) i = (\\<B> e\\<^sub>1 i \\<and> \\<B> e\\<^sub>2 i)\" |\n\"\\<B> (e\\<bullet>M(es)) i = (\\<B> e i \\<and> \\<B>s es i)\" |\n\"\\<B> ({j:T ; e}) i = (i = j \\<and> \\<B> e (i+1))\" |\n\"\\<B> (e\\<^sub>1;;e\\<^sub>2) i = (\\<B> e\\<^sub>1 i \\<and> \\<B> e\\<^sub>2 i)\" |\n\"\\<B> (if (e) e\\<^sub>1 else e\\<^sub>2) i = (\\<B> e i \\<and> \\<B> e\\<^sub>1 i \\<and> \\<B> e\\<^sub>2 i)\" |\n\"\\<B> (throw e) i = \\<B> e i\" |\n\"\\<B> (while (e) c) i = (\\<B> e i \\<and> \\<B> c i)\" |\n\"\\<B> (try e\\<^sub>1 catch(C j) e\\<^sub>2) i = (\\<B> e\\<^sub>1 i \\<and> i=j \\<and> \\<B> e\\<^sub>2 (i+1))\" |\n\n\"\\<B>s [] i = True\" |\n\"\\<B>s (e#es) i = (\\<B> e i \\<and> \\<B>s es i)\""], ["", "definition wf_J\\<^sub>1_mdecl :: \"J\\<^sub>1_prog \\<Rightarrow> cname \\<Rightarrow> expr\\<^sub>1 mdecl \\<Rightarrow> bool\"\nwhere\n  \"wf_J\\<^sub>1_mdecl P C  \\<equiv>  \\<lambda>(M,Ts,T,body).\n    (\\<exists>T'. P,Class C#Ts \\<turnstile>\\<^sub>1 body :: T' \\<and> P \\<turnstile> T' \\<le> T) \\<and>\n    \\<D> body \\<lfloor>{..size Ts}\\<rfloor> \\<and> \\<B> body (size Ts + 1)\""], ["", "lemma wf_J\\<^sub>1_mdecl[simp]:\n  \"wf_J\\<^sub>1_mdecl P C (M,Ts,T,body) \\<equiv>\n    ((\\<exists>T'. P,Class C#Ts \\<turnstile>\\<^sub>1 body :: T' \\<and> P \\<turnstile> T' \\<le> T) \\<and>\n     \\<D> body \\<lfloor>{..size Ts}\\<rfloor> \\<and> \\<B> body (size Ts + 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_J\\<^sub>1_mdecl P C (M, Ts, T, body) \\<equiv>\n    (\\<exists>T'.\n        P,Class C # Ts \\<turnstile>\\<^sub>1 body :: T' \\<and>\n        P \\<turnstile> T' \\<le> T) \\<and>\n    \\<D> body \\<lfloor>{..length Ts}\\<rfloor> \\<and>\n    \\<B> body (length Ts + 1)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_J\\<^sub>1_mdecl P C (M, Ts, T, body) \\<equiv>\n    (\\<exists>T'.\n        P,Class C # Ts \\<turnstile>\\<^sub>1 body :: T' \\<and>\n        P \\<turnstile> T' \\<le> T) \\<and>\n    \\<D> body \\<lfloor>{..length Ts}\\<rfloor> \\<and>\n    \\<B> body (length Ts + 1)", "by (simp add:wf_J\\<^sub>1_mdecl_def)"], ["", "(*>*)"], ["", "abbreviation \"wf_J\\<^sub>1_prog == wf_prog wf_J\\<^sub>1_mdecl\""], ["", "end"]]}