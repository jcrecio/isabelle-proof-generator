{"file_name": "/home/qj213/afp-2021-10-22/thys/Jinja/BV/BVConform.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Jinja", "problem_names": ["lemma conf_f_def2:\n  \"conf_f P h (ST,LT) is (stk,loc,C,M,pc) \\<equiv>\n  P,h \\<turnstile> stk [:\\<le>] ST \\<and> P,h \\<turnstile> loc [:\\<le>\\<^sub>\\<top>] LT \\<and> pc < size is\"", "lemma confT_Err [iff]: \"P,h \\<turnstile> x :\\<le>\\<^sub>\\<top> Err\"", "lemma confT_OK [iff]:  \"P,h \\<turnstile> x :\\<le>\\<^sub>\\<top> OK T = (P,h \\<turnstile> x :\\<le> T)\"", "lemma confT_cases:\n  \"P,h \\<turnstile> x :\\<le>\\<^sub>\\<top> X = (X = Err \\<or> (\\<exists>T. X = OK T \\<and> P,h \\<turnstile> x :\\<le> T))\"", "lemma confT_hext [intro?, trans]:\n  \"\\<lbrakk> P,h \\<turnstile> x :\\<le>\\<^sub>\\<top> T; h \\<unlhd> h' \\<rbrakk> \\<Longrightarrow> P,h' \\<turnstile> x :\\<le>\\<^sub>\\<top> T\"", "lemma confT_widen [intro?, trans]:\n  \"\\<lbrakk> P,h \\<turnstile> x :\\<le>\\<^sub>\\<top> T; P \\<turnstile> T \\<le>\\<^sub>\\<top> T' \\<rbrakk> \\<Longrightarrow> P,h \\<turnstile> x :\\<le>\\<^sub>\\<top> T'\"", "lemmas confTs_Cons1 [iff] = list_all2_Cons1 [of \"confT P h\"] for P h", "lemma confTs_confT_sup:\n  \"\\<lbrakk> P,h \\<turnstile> loc [:\\<le>\\<^sub>\\<top>] LT; n < size LT; LT!n = OK T; P \\<turnstile> T \\<le> T' \\<rbrakk> \n  \\<Longrightarrow> P,h \\<turnstile> (loc!n) :\\<le> T'\"", "lemma confTs_hext [intro?]:\n  \"P,h \\<turnstile> loc [:\\<le>\\<^sub>\\<top>] LT \\<Longrightarrow> h \\<unlhd> h' \\<Longrightarrow> P,h' \\<turnstile> loc [:\\<le>\\<^sub>\\<top>] LT\"", "lemma confTs_widen [intro?, trans]:\n  \"P,h \\<turnstile> loc [:\\<le>\\<^sub>\\<top>] LT \\<Longrightarrow> P \\<turnstile> LT [\\<le>\\<^sub>\\<top>] LT' \\<Longrightarrow> P,h \\<turnstile> loc [:\\<le>\\<^sub>\\<top>] LT'\"", "lemma confTs_map [iff]:\n  \"\\<And>vs. (P,h \\<turnstile> vs [:\\<le>\\<^sub>\\<top>] map OK Ts) = (P,h \\<turnstile> vs [:\\<le>] Ts)\"", "lemma reg_widen_Err [iff]:\n  \"\\<And>LT. (P \\<turnstile> replicate n Err [\\<le>\\<^sub>\\<top>] LT) = (LT = replicate n Err)\"", "lemma confTs_Err [iff]:\n  \"P,h \\<turnstile> replicate n v [:\\<le>\\<^sub>\\<top>] replicate n Err\"", "lemmas [simp del] = fun_upd_apply", "lemma conf_fs_hext:\n  \"\\<And>M n T\\<^sub>r. \n  \\<lbrakk> conf_fs P h \\<Phi> M n T\\<^sub>r frs; h \\<unlhd> h' \\<rbrakk> \\<Longrightarrow> conf_fs P h' \\<Phi> M n T\\<^sub>r frs\""], "translations": [["", "lemma conf_f_def2:\n  \"conf_f P h (ST,LT) is (stk,loc,C,M,pc) \\<equiv>\n  P,h \\<turnstile> stk [:\\<le>] ST \\<and> P,h \\<turnstile> loc [:\\<le>\\<^sub>\\<top>] LT \\<and> pc < size is\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conf_f P h (ST, LT) is (stk, loc, C, M, pc) \\<equiv>\n    P,h \\<turnstile> stk [:\\<le>] ST \\<and>\n    P,h \\<turnstile> loc [:\\<le>\\<^sub>\\<top>] LT \\<and> pc < length is", "by (simp add: conf_f_def)"], ["", "primrec conf_fs :: \"[jvm_prog,heap,ty\\<^sub>P,mname,nat,ty,frame list] \\<Rightarrow> bool\"\nwhere\n  \"conf_fs P h \\<Phi> M\\<^sub>0 n\\<^sub>0 T\\<^sub>0 [] = True\"\n| \"conf_fs P h \\<Phi> M\\<^sub>0 n\\<^sub>0 T\\<^sub>0 (f#frs) =\n  (let (stk,loc,C,M,pc) = f in\n  (\\<exists>ST LT Ts T mxs mxl\\<^sub>0 is xt.\n    \\<Phi> C M ! pc = Some (ST,LT) \\<and> \n    (P \\<turnstile> C sees M:Ts \\<rightarrow> T = (mxs,mxl\\<^sub>0,is,xt) in C) \\<and>\n    (\\<exists>D Ts' T' m D'.  \n       is!pc = (Invoke M\\<^sub>0 n\\<^sub>0) \\<and> ST!n\\<^sub>0 = Class D \\<and>\n       P \\<turnstile> D sees M\\<^sub>0:Ts' \\<rightarrow> T' = m in D' \\<and> P \\<turnstile> T\\<^sub>0 \\<le> T') \\<and>\n    conf_f P h (ST, LT) is f \\<and> conf_fs P h \\<Phi> M (size Ts) T frs))\""], ["", "definition correct_state :: \"[jvm_prog,ty\\<^sub>P,jvm_state] \\<Rightarrow> bool\"  (\"_,_ \\<turnstile> _ \\<surd>\"  [61,0,0] 61)\nwhere\n  \"correct_state P \\<Phi> \\<equiv> \\<lambda>(xp,h,frs).\n  case xp of\n     None \\<Rightarrow> (case frs of\n             [] \\<Rightarrow> True\n             | (f#fs) \\<Rightarrow> P\\<turnstile> h\\<surd> \\<and> \n             (let (stk,loc,C,M,pc) = f\n              in \\<exists>Ts T mxs mxl\\<^sub>0 is xt \\<tau>.\n                    (P \\<turnstile> C sees M:Ts\\<rightarrow>T = (mxs,mxl\\<^sub>0,is,xt) in C) \\<and>\n                    \\<Phi> C M ! pc = Some \\<tau> \\<and>\n                    conf_f P h \\<tau> is f \\<and> conf_fs P h \\<Phi> M (size Ts) T fs))\n  | Some x \\<Rightarrow> frs = []\""], ["", "notation\n  correct_state  (\"_,_ |- _ [ok]\"  [61,0,0] 61)"], ["", "subsection \\<open>Values and \\<open>\\<top>\\<close>\\<close>"], ["", "lemma confT_Err [iff]: \"P,h \\<turnstile> x :\\<le>\\<^sub>\\<top> Err\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile> x :\\<le>\\<^sub>\\<top> Err", "by (simp add: confT_def)"], ["", "lemma confT_OK [iff]:  \"P,h \\<turnstile> x :\\<le>\\<^sub>\\<top> OK T = (P,h \\<turnstile> x :\\<le> T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,h \\<turnstile> x :\\<le>\\<^sub>\\<top> OK T) =\n    (P,h \\<turnstile> x :\\<le> T)", "by (simp add: confT_def)"], ["", "lemma confT_cases:\n  \"P,h \\<turnstile> x :\\<le>\\<^sub>\\<top> X = (X = Err \\<or> (\\<exists>T. X = OK T \\<and> P,h \\<turnstile> x :\\<le> T))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P,h \\<turnstile> x :\\<le>\\<^sub>\\<top> X) =\n    (X = Err \\<or>\n     (\\<exists>T. X = OK T \\<and> P,h \\<turnstile> x :\\<le> T))", "by (cases X) auto"], ["", "lemma confT_hext [intro?, trans]:\n  \"\\<lbrakk> P,h \\<turnstile> x :\\<le>\\<^sub>\\<top> T; h \\<unlhd> h' \\<rbrakk> \\<Longrightarrow> P,h' \\<turnstile> x :\\<le>\\<^sub>\\<top> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P,h \\<turnstile> x :\\<le>\\<^sub>\\<top> T;\n     h \\<unlhd> h'\\<rbrakk>\n    \\<Longrightarrow> P,h' \\<turnstile> x :\\<le>\\<^sub>\\<top> T", "by (cases T) (blast intro: conf_hext)+"], ["", "lemma confT_widen [intro?, trans]:\n  \"\\<lbrakk> P,h \\<turnstile> x :\\<le>\\<^sub>\\<top> T; P \\<turnstile> T \\<le>\\<^sub>\\<top> T' \\<rbrakk> \\<Longrightarrow> P,h \\<turnstile> x :\\<le>\\<^sub>\\<top> T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P,h \\<turnstile> x :\\<le>\\<^sub>\\<top> T;\n     P \\<turnstile> T \\<le>\\<^sub>\\<top> T'\\<rbrakk>\n    \\<Longrightarrow> P,h \\<turnstile> x :\\<le>\\<^sub>\\<top> T'", "by (cases T', auto intro: conf_widen)"], ["", "subsection \\<open>Stack and Registers\\<close>"], ["", "lemmas confTs_Cons1 [iff] = list_all2_Cons1 [of \"confT P h\"] for P h"], ["", "lemma confTs_confT_sup:\n  \"\\<lbrakk> P,h \\<turnstile> loc [:\\<le>\\<^sub>\\<top>] LT; n < size LT; LT!n = OK T; P \\<turnstile> T \\<le> T' \\<rbrakk> \n  \\<Longrightarrow> P,h \\<turnstile> (loc!n) :\\<le> T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P,h \\<turnstile> loc [:\\<le>\\<^sub>\\<top>] LT; n < length LT;\n     LT ! n = OK T; subtype P T T'\\<rbrakk>\n    \\<Longrightarrow> P,h \\<turnstile> loc ! n :\\<le> T'", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P,h \\<turnstile> loc [:\\<le>\\<^sub>\\<top>] LT; n < length LT;\n     LT ! n = OK T; subtype P T T'\\<rbrakk>\n    \\<Longrightarrow> P,h \\<turnstile> loc ! n :\\<le> T'", "apply (frule list_all2_lengthD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P,h \\<turnstile> loc [:\\<le>\\<^sub>\\<top>] LT; n < length LT;\n     LT ! n = OK T; subtype P T T'; length loc = length LT\\<rbrakk>\n    \\<Longrightarrow> P,h \\<turnstile> loc ! n :\\<le> T'", "apply (drule list_all2_nthD, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n < length LT; LT ! n = OK T; subtype P T T';\n     length loc = length LT;\n     P,h \\<turnstile> loc ! n :\\<le>\\<^sub>\\<top> LT ! n\\<rbrakk>\n    \\<Longrightarrow> P,h \\<turnstile> loc ! n :\\<le> T'", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n < length LT; LT ! n = OK T; subtype P T T';\n     length loc = length LT; P,h \\<turnstile> loc ! n :\\<le> T\\<rbrakk>\n    \\<Longrightarrow> P,h \\<turnstile> loc ! n :\\<le> T'", "apply (erule conf_widen, assumption+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma confTs_hext [intro?]:\n  \"P,h \\<turnstile> loc [:\\<le>\\<^sub>\\<top>] LT \\<Longrightarrow> h \\<unlhd> h' \\<Longrightarrow> P,h' \\<turnstile> loc [:\\<le>\\<^sub>\\<top>] LT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P,h \\<turnstile> loc [:\\<le>\\<^sub>\\<top>] LT;\n     h \\<unlhd> h'\\<rbrakk>\n    \\<Longrightarrow> P,h' \\<turnstile> loc [:\\<le>\\<^sub>\\<top>] LT", "by (fast elim: list_all2_mono confT_hext)"], ["", "lemma confTs_widen [intro?, trans]:\n  \"P,h \\<turnstile> loc [:\\<le>\\<^sub>\\<top>] LT \\<Longrightarrow> P \\<turnstile> LT [\\<le>\\<^sub>\\<top>] LT' \\<Longrightarrow> P,h \\<turnstile> loc [:\\<le>\\<^sub>\\<top>] LT'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P,h \\<turnstile> loc [:\\<le>\\<^sub>\\<top>] LT;\n     P \\<turnstile> LT [\\<le>\\<^sub>\\<top>] LT'\\<rbrakk>\n    \\<Longrightarrow> P,h \\<turnstile> loc [:\\<le>\\<^sub>\\<top>] LT'", "by (rule list_all2_trans, rule confT_widen)"], ["", "lemma confTs_map [iff]:\n  \"\\<And>vs. (P,h \\<turnstile> vs [:\\<le>\\<^sub>\\<top>] map OK Ts) = (P,h \\<turnstile> vs [:\\<le>] Ts)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>vs.\n       (P,h \\<turnstile> vs [:\\<le>\\<^sub>\\<top>] map OK Ts) =\n       (P,h \\<turnstile> vs [:\\<le>] Ts)", "by (induct Ts) (auto simp add: list_all2_Cons2)"], ["", "lemma reg_widen_Err [iff]:\n  \"\\<And>LT. (P \\<turnstile> replicate n Err [\\<le>\\<^sub>\\<top>] LT) = (LT = replicate n Err)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>LT.\n       P \\<turnstile> replicate n Err [\\<le>\\<^sub>\\<top>] LT =\n       (LT = replicate n Err)", "by (induct n) (auto simp add: list_all2_Cons1)"], ["", "lemma confTs_Err [iff]:\n  \"P,h \\<turnstile> replicate n v [:\\<le>\\<^sub>\\<top>] replicate n Err\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile> replicate n v [:\\<le>\\<^sub>\\<top>] replicate n Err", "by (induct n) auto"], ["", "subsection \\<open>correct-frames\\<close>"], ["", "lemmas [simp del] = fun_upd_apply"], ["", "lemma conf_fs_hext:\n  \"\\<And>M n T\\<^sub>r. \n  \\<lbrakk> conf_fs P h \\<Phi> M n T\\<^sub>r frs; h \\<unlhd> h' \\<rbrakk> \\<Longrightarrow> conf_fs P h' \\<Phi> M n T\\<^sub>r frs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M n T\\<^sub>r.\n       \\<lbrakk>conf_fs P h \\<Phi> M n T\\<^sub>r frs; h \\<unlhd> h'\\<rbrakk>\n       \\<Longrightarrow> conf_fs P h' \\<Phi> M n T\\<^sub>r frs", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M n T\\<^sub>r.\n       \\<lbrakk>conf_fs P h \\<Phi> M n T\\<^sub>r frs; h \\<unlhd> h'\\<rbrakk>\n       \\<Longrightarrow> conf_fs P h' \\<Phi> M n T\\<^sub>r frs", "apply (induct frs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>M n T\\<^sub>r.\n       \\<lbrakk>conf_fs P h \\<Phi> M n T\\<^sub>r []; h \\<unlhd> h'\\<rbrakk>\n       \\<Longrightarrow> conf_fs P h' \\<Phi> M n T\\<^sub>r []\n 2. \\<And>a frs M n T\\<^sub>r.\n       \\<lbrakk>\\<And>M n T\\<^sub>r.\n                   \\<lbrakk>conf_fs P h \\<Phi> M n T\\<^sub>r frs;\n                    h \\<unlhd> h'\\<rbrakk>\n                   \\<Longrightarrow> conf_fs P h' \\<Phi> M n T\\<^sub>r frs;\n        conf_fs P h \\<Phi> M n T\\<^sub>r (a # frs); h \\<unlhd> h'\\<rbrakk>\n       \\<Longrightarrow> conf_fs P h' \\<Phi> M n T\\<^sub>r (a # frs)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a frs M n T\\<^sub>r.\n       \\<lbrakk>\\<And>M n T\\<^sub>r.\n                   \\<lbrakk>conf_fs P h \\<Phi> M n T\\<^sub>r frs;\n                    h \\<unlhd> h'\\<rbrakk>\n                   \\<Longrightarrow> conf_fs P h' \\<Phi> M n T\\<^sub>r frs;\n        conf_fs P h \\<Phi> M n T\\<^sub>r (a # frs); h \\<unlhd> h'\\<rbrakk>\n       \\<Longrightarrow> conf_fs P h' \\<Phi> M n T\\<^sub>r (a # frs)", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa ab ac b frs M n T\\<^sub>r.\n       \\<lbrakk>\\<And>M n T\\<^sub>r.\n                   \\<lbrakk>conf_fs P h \\<Phi> M n T\\<^sub>r frs;\n                    h \\<unlhd> h'\\<rbrakk>\n                   \\<Longrightarrow> conf_fs P h' \\<Phi> M n T\\<^sub>r frs;\n        conf_fs P h \\<Phi> M n T\\<^sub>r ((a, aa, ab, ac, b) # frs);\n        h \\<unlhd> h'\\<rbrakk>\n       \\<Longrightarrow> conf_fs P h' \\<Phi> M n T\\<^sub>r\n                          ((a, aa, ab, ac, b) # frs)", "apply (simp (no_asm_use))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa ab ac b frs M n T\\<^sub>r.\n       \\<lbrakk>\\<And>M n T\\<^sub>r.\n                   \\<lbrakk>conf_fs P h \\<Phi> M n T\\<^sub>r frs;\n                    h \\<unlhd> h'\\<rbrakk>\n                   \\<Longrightarrow> conf_fs P h' \\<Phi> M n T\\<^sub>r frs;\n        \\<exists>ST LT.\n           \\<Phi> ab ac ! b = \\<lfloor>(ST, LT)\\<rfloor> \\<and>\n           (\\<exists>Ts T mxs mxl\\<^sub>0 is.\n               (\\<exists>xt.\n                   P \\<turnstile> ab sees ac: Ts\\<rightarrow>T = (mxs,\n                            mxl\\<^sub>0, is, xt) in ab) \\<and>\n               is ! b = Invoke M n \\<and>\n               (\\<exists>D.\n                   ST ! n = Class D \\<and>\n                   (\\<exists>Ts' T'.\n                       (\\<exists>a aa ab b.\n                           Ex (Method P D M Ts' T' (a, aa, ab, b))) \\<and>\n                       subtype P T\\<^sub>r T')) \\<and>\n               conf_f P h (ST, LT) is (a, aa, ab, ac, b) \\<and>\n               conf_fs P h \\<Phi> ac (length Ts) T frs);\n        h \\<unlhd> h'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ST LT.\n                            \\<Phi> ab ac ! b =\n                            \\<lfloor>(ST, LT)\\<rfloor> \\<and>\n                            (\\<exists>Ts T mxs mxl\\<^sub>0 is.\n                                (\\<exists>xt.\n                                    P \\<turnstile> ab sees ac: Ts\\<rightarrow>T = (mxs,\n       mxl\\<^sub>0, is, xt) in ab) \\<and>\n                                is ! b = Invoke M n \\<and>\n                                (\\<exists>D.\n                                    ST ! n = Class D \\<and>\n                                    (\\<exists>Ts' T'.\n  (\\<exists>a aa ab b. Ex (Method P D M Ts' T' (a, aa, ab, b))) \\<and>\n  subtype P T\\<^sub>r T')) \\<and>\n                                conf_f P h' (ST, LT) is\n                                 (a, aa, ab, ac, b) \\<and>\n                                conf_fs P h' \\<Phi> ac (length Ts) T frs)", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa ab ac b frs M n T\\<^sub>r ST LT Ts T mxs mxl\\<^sub>0 is xt D\n       Ts' T' ad ae af ba x.\n       \\<lbrakk>\\<And>M n T\\<^sub>r.\n                   \\<lbrakk>conf_fs P h \\<Phi> M n T\\<^sub>r frs;\n                    h \\<unlhd> h'\\<rbrakk>\n                   \\<Longrightarrow> conf_fs P h' \\<Phi> M n T\\<^sub>r frs;\n        h \\<unlhd> h'; \\<Phi> ab ac ! b = \\<lfloor>(ST, LT)\\<rfloor>;\n        P \\<turnstile> ab sees ac: Ts\\<rightarrow>T = (mxs, mxl\\<^sub>0, is,\n                 xt) in ab;\n        is ! b = Invoke M n; conf_f P h (ST, LT) is (a, aa, ab, ac, b);\n        conf_fs P h \\<Phi> ac (length Ts) T frs; ST ! n = Class D;\n        subtype P T\\<^sub>r T';\n        P \\<turnstile> D sees M: Ts'\\<rightarrow>T' = (ad, ae, af,\n                 ba) in x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ST LT.\n                            \\<Phi> ab ac ! b =\n                            \\<lfloor>(ST, LT)\\<rfloor> \\<and>\n                            (\\<exists>Ts T mxs mxl\\<^sub>0 is.\n                                (\\<exists>xt.\n                                    P \\<turnstile> ab sees ac: Ts\\<rightarrow>T = (mxs,\n       mxl\\<^sub>0, is, xt) in ab) \\<and>\n                                is ! b = Invoke M n \\<and>\n                                (\\<exists>D.\n                                    ST ! n = Class D \\<and>\n                                    (\\<exists>Ts' T'.\n  (\\<exists>a aa ab b. Ex (Method P D M Ts' T' (a, aa, ab, b))) \\<and>\n  subtype P T\\<^sub>r T')) \\<and>\n                                conf_f P h' (ST, LT) is\n                                 (a, aa, ab, ac, b) \\<and>\n                                conf_fs P h' \\<Phi> ac (length Ts) T frs)", "apply (unfold conf_f_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa ab ac b frs M n T\\<^sub>r ST LT Ts T mxs mxl\\<^sub>0 is xt D\n       Ts' T' ad ae af ba x.\n       \\<lbrakk>\\<And>M n T\\<^sub>r.\n                   \\<lbrakk>conf_fs P h \\<Phi> M n T\\<^sub>r frs;\n                    h \\<unlhd> h'\\<rbrakk>\n                   \\<Longrightarrow> conf_fs P h' \\<Phi> M n T\\<^sub>r frs;\n        h \\<unlhd> h'; \\<Phi> ab ac ! b = \\<lfloor>(ST, LT)\\<rfloor>;\n        P \\<turnstile> ab sees ac: Ts\\<rightarrow>T = (mxs, mxl\\<^sub>0, is,\n                 xt) in ab;\n        is ! b = Invoke M n;\n        (case (ST, LT) of\n         (ST, LT) \\<Rightarrow>\n           \\<lambda>is (stk, loc, C, M, pc).\n              P,h \\<turnstile> stk [:\\<le>] ST \\<and>\n              P,h \\<turnstile> loc [:\\<le>\\<^sub>\\<top>] LT \\<and>\n              pc < length is)\n         is (a, aa, ab, ac, b);\n        conf_fs P h \\<Phi> ac (length Ts) T frs; ST ! n = Class D;\n        subtype P T\\<^sub>r T';\n        P \\<turnstile> D sees M: Ts'\\<rightarrow>T' = (ad, ae, af,\n                 ba) in x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ST LT.\n                            \\<Phi> ab ac ! b =\n                            \\<lfloor>(ST, LT)\\<rfloor> \\<and>\n                            (\\<exists>Ts T mxs mxl\\<^sub>0 is.\n                                (\\<exists>xt.\n                                    P \\<turnstile> ab sees ac: Ts\\<rightarrow>T = (mxs,\n       mxl\\<^sub>0, is, xt) in ab) \\<and>\n                                is ! b = Invoke M n \\<and>\n                                (\\<exists>D.\n                                    ST ! n = Class D \\<and>\n                                    (\\<exists>Ts' T'.\n  (\\<exists>a aa aaa b. Ex (Method P D M Ts' T' (a, aa, aaa, b))) \\<and>\n  subtype P T\\<^sub>r T')) \\<and>\n                                (case (ST, LT) of\n                                 (ST, LT) \\<Rightarrow>\n                                   \\<lambda>is (stk, loc, C, M, pc).\nP,h' \\<turnstile> stk [:\\<le>] ST \\<and>\nP,h' \\<turnstile> loc [:\\<le>\\<^sub>\\<top>] LT \\<and> pc < length is)\n                                 is (a, aa, ab, ac, b) \\<and>\n                                conf_fs P h' \\<Phi> ac (length Ts) T frs)", "apply (simp (no_asm_use))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa ab ac b frs M n T\\<^sub>r ST LT Ts T mxs mxl\\<^sub>0 is xt D\n       Ts' T' ad ae af ba x.\n       \\<lbrakk>\\<And>M n T\\<^sub>r.\n                   \\<lbrakk>conf_fs P h \\<Phi> M n T\\<^sub>r frs;\n                    h \\<unlhd> h'\\<rbrakk>\n                   \\<Longrightarrow> conf_fs P h' \\<Phi> M n T\\<^sub>r frs;\n        h \\<unlhd> h'; \\<Phi> ab ac ! b = \\<lfloor>(ST, LT)\\<rfloor>;\n        P \\<turnstile> ab sees ac: Ts\\<rightarrow>T = (mxs, mxl\\<^sub>0, is,\n                 xt) in ab;\n        is ! b = Invoke M n;\n        P,h \\<turnstile> a [:\\<le>] ST \\<and>\n        P,h \\<turnstile> aa [:\\<le>\\<^sub>\\<top>] LT \\<and> b < length is;\n        conf_fs P h \\<Phi> ac (length Ts) T frs; ST ! n = Class D;\n        subtype P T\\<^sub>r T';\n        P \\<turnstile> D sees M: Ts'\\<rightarrow>T' = (ad, ae, af,\n                 ba) in x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ST LT.\n                            \\<Phi> ab ac ! b =\n                            \\<lfloor>(ST, LT)\\<rfloor> \\<and>\n                            (\\<exists>Ts T mxs mxl\\<^sub>0 is.\n                                (\\<exists>xt.\n                                    P \\<turnstile> ab sees ac: Ts\\<rightarrow>T = (mxs,\n       mxl\\<^sub>0, is, xt) in ab) \\<and>\n                                is ! b = Invoke M n \\<and>\n                                (\\<exists>D.\n                                    ST ! n = Class D \\<and>\n                                    (\\<exists>Ts' T'.\n  (\\<exists>a aa ab b. Ex (Method P D M Ts' T' (a, aa, ab, b))) \\<and>\n  subtype P T\\<^sub>r T')) \\<and>\n                                P,h' \\<turnstile> a [:\\<le>] ST \\<and>\n                                P,h' \\<turnstile> aa [:\\<le>\\<^sub>\\<top>] LT \\<and>\n                                b < length is \\<and>\n                                conf_fs P h' \\<Phi> ac (length Ts) T frs)", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa ab ac b frs M n T\\<^sub>r ST LT Ts T mxs mxl\\<^sub>0 is xt D\n       Ts' T' ad ae af ba x.\n       \\<lbrakk>\\<And>M n T\\<^sub>r.\n                   \\<lbrakk>conf_fs P h \\<Phi> M n T\\<^sub>r frs;\n                    h \\<unlhd> h'\\<rbrakk>\n                   \\<Longrightarrow> conf_fs P h' \\<Phi> M n T\\<^sub>r frs;\n        h \\<unlhd> h'; \\<Phi> ab ac ! b = \\<lfloor>(ST, LT)\\<rfloor>;\n        P \\<turnstile> ab sees ac: Ts\\<rightarrow>T = (mxs, mxl\\<^sub>0, is,\n                 xt) in ab;\n        is ! b = Invoke M n; conf_fs P h \\<Phi> ac (length Ts) T frs;\n        ST ! n = Class D; subtype P T\\<^sub>r T';\n        P \\<turnstile> D sees M: Ts'\\<rightarrow>T' = (ad, ae, af, ba) in x;\n        P,h \\<turnstile> a [:\\<le>] ST;\n        P,h \\<turnstile> aa [:\\<le>\\<^sub>\\<top>] LT; b < length is\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ST LT.\n                            \\<Phi> ab ac ! b =\n                            \\<lfloor>(ST, LT)\\<rfloor> \\<and>\n                            (\\<exists>Ts T mxs mxl\\<^sub>0 is.\n                                (\\<exists>xt.\n                                    P \\<turnstile> ab sees ac: Ts\\<rightarrow>T = (mxs,\n       mxl\\<^sub>0, is, xt) in ab) \\<and>\n                                is ! b = Invoke M n \\<and>\n                                (\\<exists>D.\n                                    ST ! n = Class D \\<and>\n                                    (\\<exists>Ts' T'.\n  (\\<exists>a aa ab b. Ex (Method P D M Ts' T' (a, aa, ab, b))) \\<and>\n  subtype P T\\<^sub>r T')) \\<and>\n                                P,h' \\<turnstile> a [:\\<le>] ST \\<and>\n                                P,h' \\<turnstile> aa [:\\<le>\\<^sub>\\<top>] LT \\<and>\n                                b < length is \\<and>\n                                conf_fs P h' \\<Phi> ac (length Ts) T frs)", "apply (fast elim!: confs_hext confTs_hext)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "end"]]}