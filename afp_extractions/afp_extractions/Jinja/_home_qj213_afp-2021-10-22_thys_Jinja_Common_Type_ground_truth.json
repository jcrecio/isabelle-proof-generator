{"file_name": "/home/qj213/afp-2021-10-22/thys/Jinja/Common/Type.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Jinja", "problem_names": ["lemma [iff]: \"is_refT NT\"", "lemma [iff]: \"is_refT(Class C)\"", "lemma refTE:\n  \"\\<lbrakk>is_refT T; T = NT \\<Longrightarrow> P; \\<And>C. T = Class C \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\"", "lemma not_refTE:\n  \"\\<lbrakk> \\<not>is_refT T; T = Void \\<or> T = Boolean \\<or> T = Integer \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\""], "translations": [["", "lemma [iff]: \"is_refT NT\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_refT NT", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_refT NT", "by(simp add:is_refT_def)"], ["", "(*>*)"], ["", "lemma [iff]: \"is_refT(Class C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_refT (Class C)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_refT (Class C)", "by(simp add:is_refT_def)"], ["", "(*>*)"], ["", "lemma refTE:\n  \"\\<lbrakk>is_refT T; T = NT \\<Longrightarrow> P; \\<And>C. T = Class C \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_refT T; T = NT \\<Longrightarrow> P;\n     \\<And>C. T = Class C \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_refT T; T = NT \\<Longrightarrow> P;\n     \\<And>C. T = Class C \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by (auto simp add: is_refT_def)"], ["", "(*>*)"], ["", "lemma not_refTE:\n  \"\\<lbrakk> \\<not>is_refT T; T = Void \\<or> T = Boolean \\<or> T = Integer \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> is_refT T;\n     T = Void \\<or> T = Boolean \\<or> T = Integer \\<Longrightarrow>\n     P\\<rbrakk>\n    \\<Longrightarrow> P", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> is_refT T;\n     T = Void \\<or> T = Boolean \\<or> T = Integer \\<Longrightarrow>\n     P\\<rbrakk>\n    \\<Longrightarrow> P", "by (cases T, auto simp add: is_refT_def)"], ["", "(*>*)"], ["", "end"]]}