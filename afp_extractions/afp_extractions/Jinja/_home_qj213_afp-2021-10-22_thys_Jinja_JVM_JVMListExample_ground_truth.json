{"file_name": "/home/qj213/afp-2021-10-22/thys/Jinja/JVM/JVMListExample.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Jinja", "problem_names": ["lemmas [code_unfold] = SystemClasses_def [unfolded ObjectC_def NullPointerC_def ClassCastC_def OutOfMemoryC_def]"], "translations": [["", "lemmas [code_unfold] = SystemClasses_def [unfolded ObjectC_def NullPointerC_def ClassCastC_def OutOfMemoryC_def]"], ["", "definition \"test = exec (E, start_state E test_name makelist_name)\""], ["", "ML_val \\<open>\n  @{code test};\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n  @{code exec} (@{code E}, @{code the} it);\n\n  val SOME (_, (h, _)) = it;\n  if snd (@{code the} (h (@{code nat_of_integer} 3))) (@{code val_name}, @{code list_name}) =\n    SOME (@{code Intg} (@{code int_of_integer} 1)) then () else error \"wrong result\";\n  if snd (@{code the} (h (@{code nat_of_integer} 3))) (@{code next_name}, @{code list_name}) =\n    SOME (@{code Addr} (@{code nat_of_integer} 4)) then () else error \"wrong result\";\n  if snd (@{code the} (h (@{code nat_of_integer} 4))) (@{code val_name}, @{code list_name}) =\n    SOME (@{code Intg} (@{code int_of_integer} 2)) then () else error \"wrong result\";\n  if snd (@{code the} (h (@{code nat_of_integer} 4))) (@{code next_name}, @{code list_name}) =\n    SOME (@{code Addr} (@{code nat_of_integer} 5)) then () else error \"wrong result\";\n  if snd (@{code the} (h (@{code nat_of_integer} 5))) (@{code val_name}, @{code list_name}) =\n    SOME (@{code Intg} (@{code int_of_integer} 3)) then () else error \"wrong result\";\n  if snd (@{code the} (h (@{code nat_of_integer} 5))) (@{code next_name}, @{code list_name}) =\n    SOME @{code Null} then () else error \"wrong result\";\n\\<close>"], ["", "end"]]}